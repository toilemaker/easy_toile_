"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/gojs";
exports.ids = ["vendor-chunks/gojs"];
exports.modules = {

/***/ "(ssr)/./node_modules/gojs/release/go-debug.mjs":
/*!************************************************!*\
  !*** ./node_modules/gojs/release/go-debug.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionTool: () => (/* binding */ ActionTool),\n/* harmony export */   Adornment: () => (/* binding */ Adornment),\n/* harmony export */   Animation: () => (/* binding */ Animation),\n/* harmony export */   AnimationManager: () => (/* binding */ AnimationManager),\n/* harmony export */   AnimationStyle: () => (/* binding */ AnimationStyle),\n/* harmony export */   AnimationTrigger: () => (/* binding */ AnimationTrigger),\n/* harmony export */   AutoScale: () => (/* binding */ AutoScale),\n/* harmony export */   Binding: () => (/* binding */ Binding),\n/* harmony export */   BindingMode: () => (/* binding */ BindingMode),\n/* harmony export */   Brush: () => (/* binding */ Brush),\n/* harmony export */   BrushType: () => (/* binding */ BrushType),\n/* harmony export */   ChangeType: () => (/* binding */ ChangeType),\n/* harmony export */   ChangedEvent: () => (/* binding */ ChangedEvent),\n/* harmony export */   CircularArrangement: () => (/* binding */ CircularArrangement),\n/* harmony export */   CircularDirection: () => (/* binding */ CircularDirection),\n/* harmony export */   CircularEdge: () => (/* binding */ CircularEdge),\n/* harmony export */   CircularLayout: () => (/* binding */ CircularLayout),\n/* harmony export */   CircularNetwork: () => (/* binding */ CircularNetwork),\n/* harmony export */   CircularNodeDiameterFormula: () => (/* binding */ CircularNodeDiameterFormula),\n/* harmony export */   CircularSorting: () => (/* binding */ CircularSorting),\n/* harmony export */   CircularVertex: () => (/* binding */ CircularVertex),\n/* harmony export */   ClickCreatingTool: () => (/* binding */ ClickCreatingTool),\n/* harmony export */   ClickSelectingTool: () => (/* binding */ ClickSelectingTool),\n/* harmony export */   CollapsePolicy: () => (/* binding */ CollapsePolicy),\n/* harmony export */   ColorSpace: () => (/* binding */ ColorSpace),\n/* harmony export */   CommandHandler: () => (/* binding */ CommandHandler),\n/* harmony export */   ContextMenuTool: () => (/* binding */ ContextMenuTool),\n/* harmony export */   Curve: () => (/* binding */ Curve),\n/* harmony export */   CycleMode: () => (/* binding */ CycleMode),\n/* harmony export */   Diagram: () => (/* binding */ Diagram),\n/* harmony export */   DiagramEvent: () => (/* binding */ DiagramEvent),\n/* harmony export */   DragSelectingTool: () => (/* binding */ DragSelectingTool),\n/* harmony export */   DraggingInfo: () => (/* binding */ DraggingInfo),\n/* harmony export */   DraggingOptions: () => (/* binding */ DraggingOptions),\n/* harmony export */   DraggingTool: () => (/* binding */ DraggingTool),\n/* harmony export */   Flip: () => (/* binding */ Flip),\n/* harmony export */   ForceDirectedEdge: () => (/* binding */ ForceDirectedEdge),\n/* harmony export */   ForceDirectedLayout: () => (/* binding */ ForceDirectedLayout),\n/* harmony export */   ForceDirectedNetwork: () => (/* binding */ ForceDirectedNetwork),\n/* harmony export */   ForceDirectedVertex: () => (/* binding */ ForceDirectedVertex),\n/* harmony export */   Geometry: () => (/* binding */ Geometry),\n/* harmony export */   GeometryStretch: () => (/* binding */ GeometryStretch),\n/* harmony export */   GeometryType: () => (/* binding */ GeometryType),\n/* harmony export */   GestureMode: () => (/* binding */ GestureMode),\n/* harmony export */   GraphLinksModel: () => (/* binding */ GraphLinksModel),\n/* harmony export */   GraphObject: () => (/* binding */ GraphObject),\n/* harmony export */   GridAlignment: () => (/* binding */ GridAlignment),\n/* harmony export */   GridArrangement: () => (/* binding */ GridArrangement),\n/* harmony export */   GridLayout: () => (/* binding */ GridLayout),\n/* harmony export */   GridSorting: () => (/* binding */ GridSorting),\n/* harmony export */   Group: () => (/* binding */ Group),\n/* harmony export */   HTMLInfo: () => (/* binding */ HTMLInfo),\n/* harmony export */   ImageStretch: () => (/* binding */ ImageStretch),\n/* harmony export */   InputEvent: () => (/* binding */ InputEvent),\n/* harmony export */   Layer: () => (/* binding */ Layer),\n/* harmony export */   LayeredDigraphAggressive: () => (/* binding */ LayeredDigraphAggressive),\n/* harmony export */   LayeredDigraphAlign: () => (/* binding */ LayeredDigraphAlign),\n/* harmony export */   LayeredDigraphCycleRemove: () => (/* binding */ LayeredDigraphCycleRemove),\n/* harmony export */   LayeredDigraphEdge: () => (/* binding */ LayeredDigraphEdge),\n/* harmony export */   LayeredDigraphInit: () => (/* binding */ LayeredDigraphInit),\n/* harmony export */   LayeredDigraphLayering: () => (/* binding */ LayeredDigraphLayering),\n/* harmony export */   LayeredDigraphLayout: () => (/* binding */ LayeredDigraphLayout),\n/* harmony export */   LayeredDigraphNetwork: () => (/* binding */ LayeredDigraphNetwork),\n/* harmony export */   LayeredDigraphPack: () => (/* binding */ LayeredDigraphPack),\n/* harmony export */   LayeredDigraphVertex: () => (/* binding */ LayeredDigraphVertex),\n/* harmony export */   Layout: () => (/* binding */ Layout),\n/* harmony export */   LayoutConditions: () => (/* binding */ LayoutConditions),\n/* harmony export */   LayoutEdge: () => (/* binding */ LayoutEdge),\n/* harmony export */   LayoutNetwork: () => (/* binding */ LayoutNetwork),\n/* harmony export */   LayoutVertex: () => (/* binding */ LayoutVertex),\n/* harmony export */   Link: () => (/* binding */ Link),\n/* harmony export */   LinkAdjusting: () => (/* binding */ LinkAdjusting),\n/* harmony export */   LinkReshapingTool: () => (/* binding */ LinkReshapingTool),\n/* harmony export */   LinkingBaseTool: () => (/* binding */ LinkingBaseTool),\n/* harmony export */   LinkingDirection: () => (/* binding */ LinkingDirection),\n/* harmony export */   LinkingTool: () => (/* binding */ LinkingTool),\n/* harmony export */   List: () => (/* binding */ List),\n/* harmony export */   Map: () => (/* binding */ GMap),\n/* harmony export */   Margin: () => (/* binding */ Margin),\n/* harmony export */   Model: () => (/* binding */ Model),\n/* harmony export */   Node: () => (/* binding */ Node),\n/* harmony export */   Orientation: () => (/* binding */ Orientation),\n/* harmony export */   Overview: () => (/* binding */ Overview),\n/* harmony export */   Palette: () => (/* binding */ Palette),\n/* harmony export */   Panel: () => (/* binding */ Panel),\n/* harmony export */   PanelLayout: () => (/* binding */ PanelLayout),\n/* harmony export */   PanningTool: () => (/* binding */ PanningTool),\n/* harmony export */   Part: () => (/* binding */ Part),\n/* harmony export */   PathFigure: () => (/* binding */ PathFigure),\n/* harmony export */   PathSegment: () => (/* binding */ PathSegment),\n/* harmony export */   Picture: () => (/* binding */ Picture),\n/* harmony export */   Placeholder: () => (/* binding */ Placeholder),\n/* harmony export */   Point: () => (/* binding */ Point),\n/* harmony export */   PortSpreading: () => (/* binding */ PortSpreading),\n/* harmony export */   Rect: () => (/* binding */ Rect),\n/* harmony export */   RelinkingTool: () => (/* binding */ RelinkingTool),\n/* harmony export */   ReshapingBehavior: () => (/* binding */ ReshapingBehavior),\n/* harmony export */   ResizingTool: () => (/* binding */ ResizingTool),\n/* harmony export */   RotatingTool: () => (/* binding */ RotatingTool),\n/* harmony export */   Router: () => (/* binding */ Router),\n/* harmony export */   Routing: () => (/* binding */ Routing),\n/* harmony export */   RowColumnDefinition: () => (/* binding */ RowColumnDefinition),\n/* harmony export */   ScrollMode: () => (/* binding */ ScrollMode),\n/* harmony export */   SegmentType: () => (/* binding */ SegmentType),\n/* harmony export */   Set: () => (/* binding */ GSet),\n/* harmony export */   Shape: () => (/* binding */ Shape),\n/* harmony export */   Size: () => (/* binding */ Size),\n/* harmony export */   Sizing: () => (/* binding */ Sizing),\n/* harmony export */   Spot: () => (/* binding */ Spot),\n/* harmony export */   Stretch: () => (/* binding */ Stretch),\n/* harmony export */   TextBlock: () => (/* binding */ TextBlock),\n/* harmony export */   TextEditingAccept: () => (/* binding */ TextEditingAccept),\n/* harmony export */   TextEditingStarting: () => (/* binding */ TextEditingStarting),\n/* harmony export */   TextEditingState: () => (/* binding */ TextEditingState),\n/* harmony export */   TextEditingTool: () => (/* binding */ TextEditingTool),\n/* harmony export */   TextFormat: () => (/* binding */ TextFormat),\n/* harmony export */   TextOverflow: () => (/* binding */ TextOverflow),\n/* harmony export */   ThemeBinding: () => (/* binding */ ThemeBinding),\n/* harmony export */   ThemeManager: () => (/* binding */ ThemeManager),\n/* harmony export */   Themes: () => (/* binding */ Themes),\n/* harmony export */   Tool: () => (/* binding */ Tool),\n/* harmony export */   ToolManager: () => (/* binding */ ToolManager),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   TreeAlignment: () => (/* binding */ TreeAlignment),\n/* harmony export */   TreeArrangement: () => (/* binding */ TreeArrangement),\n/* harmony export */   TreeCompaction: () => (/* binding */ TreeCompaction),\n/* harmony export */   TreeEdge: () => (/* binding */ TreeEdge),\n/* harmony export */   TreeLayerStyle: () => (/* binding */ TreeLayerStyle),\n/* harmony export */   TreeLayout: () => (/* binding */ TreeLayout),\n/* harmony export */   TreeModel: () => (/* binding */ TreeModel),\n/* harmony export */   TreeNetwork: () => (/* binding */ TreeNetwork),\n/* harmony export */   TreePath: () => (/* binding */ TreePath),\n/* harmony export */   TreeSorting: () => (/* binding */ TreeSorting),\n/* harmony export */   TreeStyle: () => (/* binding */ TreeStyle),\n/* harmony export */   TreeVertex: () => (/* binding */ TreeVertex),\n/* harmony export */   TriggerStart: () => (/* binding */ TriggerStart),\n/* harmony export */   UndoManager: () => (/* binding */ UndoManager),\n/* harmony export */   ViewboxStretch: () => (/* binding */ ViewboxStretch),\n/* harmony export */   WheelMode: () => (/* binding */ WheelMode),\n/* harmony export */   Wrap: () => (/* binding */ Wrap),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   go: () => (/* binding */ go),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/*\n * GoJS v3.0.26 JavaScript Library for HTML Diagrams, https://gojs.net\n * GoJS and Northwoods Software are registered trademarks of Northwoods Software Corporation, https://nwoods.com.\n * Copyright 1998-2025 by Northwoods Software Corporation.  All Rights Reserved.\n * THIS SOFTWARE IS LICENSED.  THE LICENSE AGREEMENT IS AT: https://gojs.net/3.0.26/license.html.\n * DO NOT MODIFY THIS FILE.  DO NOT DISTRIBUTE A MODIFIED COPY OF THE CONTENTS OF THIS FILE.\n */\n(function() {const root=typeof globalThis==\"object\"&&globalThis||typeof global==\"object\"&&global.global===global&&global||typeof self==\"object\"&&self.self===self&&self||{};root.requestAnimationFrame===void 0&&(root.setImmediate===void 0?root.requestAnimationFrame=y=>root.setTimeout(y,0):root.requestAnimationFrame=root.setImmediate);const Debug={boundsInfoEnabled:!1,drawLocationsEnabled:!1,drawClipEnabled:!1,drawLinkpointsEnabled:!1,nodeInspector:!1,handleMessages:!1,drawFrames:!1,defaultDiagram:null,trace:function(y){root.console&&root.console.log(y)},drawDiagramBounds(y,t,i,e){y.strokeStyle=\"red\",y.fillStyle=\"red\",y.font=\"8px sans-serif\",y.beginPath(),y.moveTo(-10,0),y.lineTo(10,0),y.moveTo(0,-10),y.lineTo(0,10),y.stroke(),y.setTransform(1,0,0,1,0,0),y.scale(i,i),y.transform(t.m11,t.m12,t.m21,t.m22,t.dx,t.dy),y.lineWidth=2,y.beginPath(),y.moveTo(e.left,e.top+20),y.lineTo(e.left,e.top),y.lineTo(e.left+20,e.top),y.moveTo(e.right,e.bottom-20),y.lineTo(e.right,e.bottom),y.lineTo(e.right-20,e.bottom),y.stroke(),y.fillText(\"DB: \"+Math.round(e.x)+\", \"+Math.round(e.y)+\", \"+Math.round(e.width)+\", \"+Math.round(e.height),e.left,e.top-5)},attachReadonlyWarnings:function(y){for(const t in y){if(t===\"licenseKey\")continue;const i=y[t];if(i.prototype===void 0)continue;const e=Object.getOwnPropertyNames(i.prototype);for(let s=0;s<e.length;s++){const n=Object.getOwnPropertyDescriptor(i.prototype,e[s]);n.get!==void 0&&n.set===void 0&&Object.defineProperty(i.prototype,e[s],{set:function(o){throw new Error(\"Property \"+e[s]+\" of \"+t+\" is read-only.\")}})}}}};class U{static rr=root.navigator!==void 0&&root.navigator.platform!==void 0&&root.navigator.platform.match(/(iPhone|iPod|iPad|Mac)/i)!==null;static Kk(t,i,e){let s=-1;return function(){const n=this,o=arguments;s!==-1&&U.Bg(s),s=U.lr(()=>{s=-1,e||t.apply(n,o)},i),e&&!s&&t.apply(n,o)}}static lr(t,i){return root.setTimeout(t,i)}static Bg(t){root.clearTimeout(t)}static ds(t){return root.document.createElement(t)}static n(t){throw new Error(t)}static D(t,i){let e=\"The object is frozen, so its properties cannot be set: \"+t.toString();i!==void 0&&(e+=\"  to value: \"+i),U.n(e)}static e(t,i,e,s){if(!(t instanceof i)){let n=U.cf(e);s!==void 0&&(n+=\".\"+s),U.Pi(t,i,n)}}static i(t,i,e,s){if(typeof t!==i){let n=U.cf(e);s!==void 0&&(n+=\".\"+s),U.Pi(t,i,n)}}static r(t,i,e){if(typeof t!=\"number\"||!isFinite(t)){let s=U.cf(i);e!==void 0&&(s+=\".\"+e),U.n(s+\" must be a real number type, and not NaN or Infinity: \"+t)}}static Mo(t,i,e){if(t===null||typeof t!=\"object\"){let s=U.cf(i);e!==void 0&&(s+=\".\"+e),U.Pi(t,\"object\",s)}}static P(t,i,e){U.i(t,\"function\",i,e)}static j(t,i,e){t in i||U.n(`${t} is not a valid value in enumeration: ${e}`)}static Pi(t,i,e,s){const n=\" value is not an instance of \"+U.cf(i)+\": \";let o=U.cf(e);s!==void 0&&(o+=\".\"+s),typeof t==\"string\"&&(t='\"'+t+'\"'),U.n(o+n+t)}static U(t,i,e,s){let n=U.cf(e);s!==void 0&&(n+=\".\"+s),U.n(n+\" is not in the range \"+i+\": \"+t)}static Ve(t){U.n(\"Collection was modified during iteration: \"+t.toString()+`\n  Perhaps you should iterate over a copy of the collection,\n  or you could collect items to be removed from the collection after the iteration.`)}static hr(t,i){U.n(\"No property to set for this enum value: \"+i+\" on \"+t.toString())}static nt(t){root.console&&root.console.log(t)}static W(t){return t!==null&&typeof t==\"object\"}static rt(t){return typeof t==\"function\"}static Uk=[];static lt(){const t=U.Uk.pop();return t===void 0?[]:t}static tt(t){t.length=0,U.Uk.push(t)}static bE=Object.freeze([]);static cf(t){return t===null?\"*\":typeof t==\"string\"?t:U.rt(t)?t.name:\"\"}static Bn(t){return U.rt(t)?t.className?t.className:t.name:U.W(t)&&t.constructor?U.Bn(t.constructor):typeof t}static Uh(t,i){return i==null||i===\"\"?null:U.W(t)&&i in t||t[i]?t[i]:null}static toString(t){let i=t;return U.W(t)&&(t.text?i=t.text:t.name?i=t.name:t.key!==void 0?i=t.key:t.id!==void 0?i=t.id:t.constructor===Object&&(t.Text?i=t.Text:t.Name?i=t.Name:t.Key!==void 0?i=t.Key:t.Id!==void 0?i=t.Id:t.ID!==void 0&&(i=t.ID))),i===void 0?\"undefined\":i===null?\"null\":i.toString()}static bw(t,i){if(t.hasOwnProperty(i))return!0;let e=Object.getPrototypeOf(t);for(;e&&e!==Function;){if(e.hasOwnProperty(i))return!0;const s=e.kE;if(s&&s[i])return!0;e=Object.getPrototypeOf(e)}return!1}static iF(t){const i=[];let e=0;for(e=0;e<256;e++)i[e]=e;let s=0,n=0;for(e=0;e<256;e++)s=(s+i[e]+119)%256,n=i[e],i[e]=i[s],i[s]=n;e=0,s=0;let o=\"\";for(let r=0;r<t.length;r++)e=(e+1)%256,s=(s+i[e])%256,n=i[e],i[e]=i[s],i[s]=n,o+=String.fromCharCode(t.charCodeAt(r)^i[(i[e]+i[s])%256]);return o}static eF(t){const i=\"0123456789abcdef\",e=[];for(let r=0;r<256;r++)e[i.charAt(r>>4)+i.charAt(r&15)]=String.fromCharCode(r);t.length%2&&(t=\"0\"+t);const s=[];let n=0;for(let r=0;r<t.length;r+=2)s[n++]=e[t.substring(r,r+2)];const o=s.join(\"\");return o===\"\"?\"0\":o}static Os(t){return U.iF(U.eF(t))}static color1=\"@COLOR1\";static color2=\"@COLOR2\";static kw=\"32ab5ff3b26f42dc0ed90f21412913b5\"}U.vfo=\"29e646fdb160\";class StringBuilder{Gk;constructor(){this.Gk=[]}toString(){return this.Gk.join(\"\")}add(t){t!==\"\"&&this.Gk.push(t)}}class PropertyCollection{}class EmptyIterator{w;constructor(){this.w=[]}[Symbol.iterator](){return this.w.values()}key;value;get iterator(){return this}reset(){}next(){return!1}hasNext(){return!1}first(){return null}any(){return!1}all(){return!0}each(){return this}map(t){return this}filter(){return this}get count(){return 0}wl(){}toString(){return\"EmptyIterator\"}static instance=new EmptyIterator}class SingletonIterator{constructor(t){this.key=-1,this.value=t}[Symbol.iterator](){return[this.value].values()}key;value;get iterator(){return this}reset(){this.key=-1}next(){return this.key===-1?(this.key=0,!0):!1}hasNext(){return this.next()}first(){return this.key=0,this.value}any(t){return this.key=-1,t(this.value)}all(t){return this.key=-1,t(this.value)}each(t){return this.key=-1,t(this.value),this}map(t){return new SingletonIterator(t(this.value))}filter(t){return t(this.value)?new SingletonIterator(this.value):EmptyIterator.instance}get count(){return 1}wl(){this.value=null}toString(){return\"SingletonIterator(\"+this.value+\")\"}}class ListIterator{Qt;Es;vt;Ot;constructor(t){this.Qt=t,this.Es=null,t.ar=null,this.vt=t.at,this.Ot=-1}[Symbol.iterator](){return this.Es===null?this.Qt.h.values():this.Qt.h.filter(this.Es).values()}key;value;get iterator(){return this}get predicate(){return this.Es}set predicate(t){this.Es=t}reset(){const t=this.Qt;t.ar=null,this.vt=t.at,this.Ot=-1}next(){const t=this.Qt;if(t.at!==this.vt){if(this.key<0)return!1;U.Ve(t)}const i=t.h,e=i.length;let s=++this.Ot;const n=this.Es;if(n!==null)for(;s<e;){const o=i[s];if(n(o))return this.Ot=s,this.key=s,this.value=o,!0;s++}else{if(s<e)return this.key=s,this.value=i[s],!0;this.wl()}return!1}hasNext(){return this.next()}first(){const t=this.Qt;this.vt=t.at,this.Ot=0;const i=t.h,e=i.length,s=this.Es;if(s!==null){let n=0;for(;n<e;){const o=i[n];if(s(o))return this.Ot=n,this.key=n,this.value=o,o;n++}return null}else if(e>0){const n=i[0];return this.key=0,this.value=n,n}else return null}any(t){const i=this.Qt;i.ar=null;const e=i.at;this.Ot=-1;const s=i.h,n=s.length,o=this.Es;for(let r=0;r<n;r++){const l=s[r];if(!(o!==null&&!o(l))){if(t(l))return!0;i.at!==e&&U.Ve(i)}}return!1}all(t){const i=this.Qt;i.ar=null;const e=i.at;this.Ot=-1;const s=i.h,n=s.length,o=this.Es;for(let r=0;r<n;r++){const l=s[r];if(!(o!==null&&!o(l))){if(!t(l))return!1;i.at!==e&&U.Ve(i)}}return!0}each(t){const i=this.Qt;i.ar=null;const e=i.at;this.Ot=-1;const s=i.h,n=s.length,o=this.Es;for(let r=0;r<n;r++){const l=s[r];o!==null&&!o(l)||(t(l),i.at!==e&&U.Ve(i))}return this}map(t){const i=this.Qt;i.ar=null;const e=i.at;this.Ot=-1;const s=[],n=i.h,o=n.length,r=this.Es;for(let h=0;h<o;h++){const f=n[h];r!==null&&!r(f)||(s.push(t(f)),i.at!==e&&U.Ve(i))}const l=new List;return l.h=s,l.ze(),l.iterator}filter(t){const i=this.Qt;i.ar=null;const e=i.at;this.Ot=-1;const s=[],n=i.h,o=n.length,r=this.Es;for(let h=0;h<o;h++){const f=n[h];r!==null&&!r(f)||(t(f)&&s.push(f),i.at!==e&&U.Ve(i))}const l=new List;return l.h=s,l.ze(),l.iterator}get count(){const t=this.Es;if(t!==null){let i=0;const e=this.Qt.h,s=e.length;for(let n=0;n<s;n++)t(e[n])&&i++;return i}else return this.Qt.h.length}wl(){this.key=-1,this.value=null,this.vt=-1,this.Es=null,this.Qt.ar=this}toString(){return\"ListIterator@\"+this.Ot+\"/\"+this.Qt.count}}class ListIteratorBackwards{Qt;vt;Ot;constructor(t){this.Qt=t,t.fr=null,this.vt=t.at,this.Ot=t.h.length}[Symbol.iterator](){return this.Qt.h.reverse().values()}key;value;get iterator(){return this}reset(){const t=this.Qt;t.fr=null,this.vt=t.at,this.Ot=t.h.length}next(){const t=this.Qt;if(t.at!==this.vt){if(this.key<0)return!1;U.Ve(t)}const i=--this.Ot;return i>=0?(this.key=i,this.value=t.h[i],!0):(this.wl(),!1)}hasNext(){return this.next()}first(){const t=this.Qt;this.vt=t.at;const i=t.h,e=i.length-1;if(this.Ot=e,e>=0){const s=i[e];return this.key=e,this.value=s,s}else return null}any(t){const i=this.Qt;i.fr=null;const e=i.at,s=i.h,n=s.length;this.Ot=n;for(let o=n-1;o>=0;o--){const r=s[o];if(t(r))return!0;i.at!==e&&U.Ve(i)}return!1}all(t){const i=this.Qt;i.fr=null;const e=i.at,s=i.h,n=s.length;this.Ot=n;for(let o=n-1;o>=0;o--){const r=s[o];if(!t(r))return!1;i.at!==e&&U.Ve(i)}return!0}each(t){const i=this.Qt;i.fr=null;const e=i.at,s=i.h,n=s.length;this.Ot=n;for(let o=n-1;o>=0;o--){const r=s[o];t(r),i.at!==e&&U.Ve(i)}return this}map(t){const i=this.Qt;i.fr=null;const e=i.at,s=[],n=i.h,o=n.length;this.Ot=o;for(let l=o-1;l>=0;l--){const h=n[l];s.push(t(h)),i.at!==e&&U.Ve(i)}const r=new List;return r.h=s,r.ze(),r.iterator}filter(t){const i=this.Qt;i.fr=null;const e=i.at,s=[],n=i.h,o=n.length;this.Ot=o;for(let l=o-1;l>=0;l--){const h=n[l];t(h)&&s.push(h),i.at!==e&&U.Ve(i)}const r=new List;return r.h=s,r.ze(),r.iterator}get count(){return this.Qt.h.length}wl(){this.key=-1,this.value=null,this.vt=-1,this.Qt.fr=this}toString(){return\"ListIteratorBackwards(\"+this.Ot+\"/\"+this.Qt.count+\")\"}}class List{f;h;at;ar;fr;constructor(t){GSet.Ji(this),this.f=!1,this.h=[],this.at=0,this.ar=null,this.fr=null,t!==void 0&&this.addAll(t)}[Symbol.iterator](){return this.h.values()}ze(){let t=this.at;t++,t>999999999&&(t=0),this.at=t}p(){return this.f=!0,this}At(){return this.f=!1,this}toString(){return\"List()#\"+GSet.gs(this)}add(t){return this.f&&U.D(this,t),this.h.push(t),this.ze(),this}push(t){this.add(t)}addAll(t){if(t===null)return this;this.f&&U.D(this);const i=this.h;if(Array.isArray(t)){const e=t.length;for(let s=0;s<e;s++){const n=t[s];i.push(n)}}else{const e=t.iterator;for(;e.next();){const s=e.value;i.push(s)}}return this.ze(),this}clear(){this.f&&U.D(this),this.h.length=0,this.ze()}contains(t){return this.has(t)}has(t){return t===null?!1:this.h.indexOf(t)!==-1}indexOf(t){return t===null?-1:this.h.indexOf(t)}elt(t){Debug&&U.r(t,List,\"elt:i\");const i=this.h;return(t<0||t>=i.length)&&U.U(t,\"0 <= i < length\",List,\"elt:i\"),i[t]}get(t){return this.elt(t)}setElt(t,i){Debug&&U.r(t,List,\"setElt:i\");const e=this.h;(t<0||t>=e.length)&&U.U(t,\"0 <= i < length\",List,\"setElt:i\"),this.f&&U.D(this,t),e[t]=i}set(t,i){this.setElt(t,i)}first(){const t=this.h;return t.length===0?null:t[0]}last(){const t=this.h,i=t.length;return i>0?t[i-1]:null}pop(){this.f&&U.D(this);const t=this.h;return t.length>0?t.pop():null}any(t){const i=this.h,e=this.at,s=i.length;for(let n=0;n<s;n++){if(t(i[n]))return!0;this.at!==e&&U.Ve(this)}return!1}all(t){const i=this.h,e=this.at,s=i.length;for(let n=0;n<s;n++){if(!t(i[n]))return!1;this.at!==e&&U.Ve(this)}return!0}each(t){const i=this.h,e=this.at,s=i.length;for(let n=0;n<s;n++)t(i[n]),this.at!==e&&U.Ve(this);return this}map(t){const i=new List,e=[],s=this.h,n=this.at,o=s.length;for(let r=0;r<o;r++)e.push(t(s[r])),this.at!==n&&U.Ve(this);return i.h=e,i.ze(),i}filter(t){const i=new List,e=[],s=this.h,n=this.at,o=s.length;for(let r=0;r<o;r++){const l=s[r];t(l)&&e.push(l),this.at!==n&&U.Ve(this)}return i.h=e,i.ze(),i}insertAt(t,i){Debug&&U.r(t,List,\"insertAt:i\"),t<0&&U.U(t,\">= 0\",List,\"insertAt:i\"),this.f&&U.D(this,t);const e=this.h;t>=e.length?e.push(i):e.splice(t,0,i),this.ze()}remove(t){return this.delete(t)}delete(t){if(t===null)return!1;this.f&&U.D(this,t);const i=this.h,e=i.indexOf(t);return e===-1?!1:(e===i.length-1?i.pop():i.splice(e,1),this.ze(),!0)}removeAt(t){Debug&&U.r(t,List,\"removeAt:i\");const i=this.h;(t<0||t>=i.length)&&U.U(t,\"0 <= i < length\",List,\"removeAt:i\"),this.f&&U.D(this,t),t===i.length-1?i.pop():i.splice(t,1),this.ze()}removeRange(t,i){Debug&&(U.r(t,List,\"removeRange:from\"),U.r(i,List,\"removeRange:to\"));const e=this.h,s=e.length;if(t<0)t=0;else if(t>=s)return this;if(i<0)return this;if(i>=s&&(i=s-1),t>i)return this;this.f&&U.D(this);let n=t,o=i+1;for(;o<s;)e[n++]=e[o++];return e.length=s-(i-t+1),this.ze(),this}copy(){const t=new List,i=this.h;return i.length>0&&(t.h=Array.prototype.slice.call(i)),t}toArray(){const t=this.h,i=this.count,e=new Array(i);for(let s=0;s<i;s++)e[s]=t[s];return e}get yC(){return this.h}toSet(){const t=new GSet,i=this.h,e=this.count;for(let s=0;s<e;s++)t.add(i[s]);return t}sort(t){return Debug&&U.P(t,List,\"sort:sortfunc\"),this.f&&U.D(this),this.h.sort(t),this.ze(),this}sortRange(t,i,e){const s=this.h,n=s.length;i===void 0&&(i=0),e===void 0&&(e=n),Debug&&(U.P(t,List,\"sortRange:sortfunc\"),U.r(i,List,\"sortRange:from\"),U.r(e,List,\"sortRange:to\")),this.f&&U.D(this);const o=e-i;if(o<=1)return this;if((i<0||i>=n-1)&&U.U(i,\"0 <= from < length\",List,\"sortRange:from\"),o===2){const r=s[i],l=s[i+1];return t(r,l)>0&&(s[i]=l,s[i+1]=r,this.ze()),this}if(i===0)if(e>=n)s.sort(t);else{const r=s.slice(0,e);r.sort(t);for(let l=0;l<e;l++)s[l]=r[l]}else if(e>=n){const r=s.slice(i);r.sort(t);for(let l=i;l<n;l++)s[l]=r[l-i]}else{const r=s.slice(i,e);r.sort(t);for(let l=i;l<e;l++)s[l]=r[l-i]}return this.ze(),this}reverse(){return this.f&&U.D(this),this.h.reverse(),this.ze(),this}get count(){return this.h.length}get size(){return this.h.length}get length(){return this.h.length}get iterator(){if(this.h.length<=0)return EmptyIterator.instance;const t=this.ar;return t!==null?(t.reset(),t):new ListIterator(this)}get iteratorBackwards(){if(this.h.length<=0)return EmptyIterator.instance;const t=this.fr;return t!==null?(t.reset(),t):new ListIteratorBackwards(this)}}class SetIterator{Po;ri;constructor(t){this.Po=t,this.ri=t.w.values()}[Symbol.iterator](){return this.Po.w.values()}key;value;get iterator(){return this}reset(){const t=this.Po;this.ri=t.w.values()}next(){const t=this.ri.next();return this.value=t.value,this.key=t.value,!t.done}hasNext(){return this.next()}first(){return this.Po.w.size===0?null:(this.ri=this.Po.w.values(),this.ri.next().value)}any(t){return this.Po.any(t)}all(t){return this.Po.all(t)}each(t){return this.Po.each(t),this}map(t){const i=new List;return this.Po.w.forEach(e=>i.add(t(e))),i.iterator}filter(t){const i=new List;return this.Po.w.forEach(e=>{t(e)&&i.add(e)}),i.iterator}get count(){return this.Po.count}wl(){this.key=null,this.value=null,this.ri=null}toString(){return\"SetIterator\"}}class GSet{f;w;constructor(t){this.f=!1,this.w=new Set,t!==void 0&&this.addAll(t)}[Symbol.iterator](){return this.w.values()}values(){return this.w.values()}p(){return this.f=!0,this}At(){return this.f=!1,this}toString(){return\"Set()#\"+GSet.gs(this)}add(t){return t===null?this:(this.w.add(t),this)}addAll(t){if(t===null)return this;if(Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++){const s=t[e];s!==null&&this.w.add(s)}}else{const i=t.iterator;for(;i.next();){const e=i.value;e!==null&&this.w.add(e)}}return this}has(t){return this.w.has(t)}contains(t){return this.has(t)}containsAll(t){if(t===null)return!0;const i=t.iterator;for(;i.next();)if(!this.has(i.value))return!1;return!0}containsAny(t){if(t===null)return!0;const i=t.iterator;for(;i.next();)if(this.has(i.value))return!0;return!1}first(){return this.w.size===0?null:this.w.values().next().value}any(t){for(const i of this.w)if(t(i))return!0;return!1}all(t){for(const i of this.w)if(!t(i))return!1;return!0}each(t){for(const i of this.w)t(i);return this}map(t){const i=new GSet;for(const e of this.w)i.add(t(e));return i}filter(t){const i=new GSet;for(const e of this.w)t(e)&&i.add(e);return i}delete(t){return this.f&&U.D(this),this.w.delete(t)}remove(t){return this.delete(t)}removeAll(t){if(t===null)return this;if(this.f&&U.D(this),Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++)this.delete(t[e])}else{const i=t.iterator;for(;i.next();)this.delete(i.value)}return this}retainAll(t){if(t===null)return this;if(this.count===0)return this;this.f&&U.D(this);const i=new GSet;i.addAll(t);const e=[],s=this.iterator;for(;s.next();){const n=s.value;i.has(n)||e.push(n)}return this.removeAll(e),this}clear(){this.f&&U.D(this),this.w.clear()}copy(){const t=new GSet;return this.w.forEach(i=>t.add(i)),t}toArray(){return Array.from(this.w)}toList(){const t=new List;return this.w.forEach(i=>t.add(i)),t}get count(){return this.w.size}get size(){return this.w.size}get iterator(){return this.w.size<=0?EmptyIterator.instance:new SetIterator(this)}entries(){return this.w.entries()}keys(){return this.w.keys()}forEach(t,i){return this.w.forEach(t,i)}static Sw=1;static Ji(t){t.__gohashid=GSet.Sw++}static gs(t){return t.__gohashid}}class MapKeySetIterator{Z;ri;constructor(t){this.Z=t,this.ri=t.w.keys()}[Symbol.iterator](){return this.Z.w.keys()}key;value;get iterator(){return this}reset(){const t=this.Z;this.ri=t.w.keys()}next(){const t=this.ri.next();return this.value=t.value,this.key=t.value,!t.done}hasNext(){return this.next()}first(){return this.Z.w.size===0?null:(this.ri=this.Z.w.keys(),this.ri.next().value)}any(t){for(const i of this.Z.w)if(t(i[0]))return!0;return!1}all(t){for(const i of this.Z.w)if(!t(i[0]))return!1;return!0}each(t){for(const i of this.Z.w)t(i[0]);return this}map(t){const i=this.Z,e=new List;for(const s of i.w)e.add(t(s[0]));return e.iterator}filter(t){const i=this.Z,e=new List;for(const s of i.w){const n=s[0];t(n)&&e.add(n)}return e.iterator}get count(){return this.Z.size}wl(){this.key=null,this.value=null,this.ri=null}toString(){return\"MapKeySetIterator\"}}class MapKeySet extends GSet{Z;constructor(t){super(),GSet.Ji(this),this.f=!0,this.Z=t}[Symbol.iterator](){return this.w.keys()}values(){return this.w.keys()}p(){return this}At(){return this}toString(){return\"MapKeySet(\"+this.Z.toString()+\")\"}add(t){U.n(\"This Set is read-only: \"+this.toString())}has(t){return this.Z.has(t)}contains(t){return this.has(t)}delete(t){U.n(\"This Set is read-only: \"+this.toString())}remove(t){return this.delete(t)}clear(){U.n(\"This Set is read-only: \"+this.toString())}first(){return this.Z.w.size===0?null:this.Z.w.keys().next().value}any(t){for(const i of this.Z.w)if(t(i[0]))return!0;return!1}all(t){for(const i of this.Z.w)if(!t(i[0]))return!1;return!0}each(t){for(const i of this.Z.w)t(i[0]);return this}map(t){const i=new GSet;for(const e of this.Z.w)i.add(t(e[0]));return i}filter(t){const i=new GSet;for(const e of this.Z.w){const s=e[0];t(s)&&i.add(s)}return i}copy(){return new MapKeySet(this.Z)}toSet(){const t=new GSet,i=this.Z.w;for(const e of i)t.add(e[0]);return t}toArray(){const t=this.Z.w,i=new Array(t.size);let e=0;for(const s of t)i[e]=s[0],e++;return i}toList(){const t=new List,i=this.Z.w;for(const e of i)t.add(e[0]);return t}get count(){return this.Z.size}get size(){return this.Z.size}get iterator(){return this.Z.size<=0?EmptyIterator.instance:new MapKeySetIterator(this.Z)}}class MapValueSetIterator{Z;ri;constructor(t){this.Z=t,this.ri=t.w.values()}[Symbol.iterator](){return this.Z.w.values()}key;value;get iterator(){return this}reset(){const t=this.Z;this.ri=t.w.values()}next(){const t=this.ri.next();return this.value=t.value,this.key=t.value,!t.done}hasNext(){return this.next()}first(){return this.Z.w.size===0?null:(this.ri=this.Z.w.values(),this.ri.next().value)}any(t){for(const i of this.Z.w)if(t(i[1]))return!0;return!1}all(t){for(const i of this.Z.w)if(!t(i[1]))return!1;return!0}each(t){for(const i of this.Z.w)t(i[1]);return this}map(t){const i=this.Z,e=new List;for(const s of i.w)e.add(t(s[1]));return e.iterator}filter(t){const i=this.Z,e=new List;for(const s of i.w){const n=s[1];t(n)&&e.add(n)}return e.iterator}get count(){return this.Z.size}wl(){this.key=null,this.value=null,this.ri=null}toString(){return\"MapValueSetIterator\"}}class KeyValuePair{constructor(t,i){this.key=t,this.value=i}toString(){return\"{\"+this.key+\":\"+this.value+\"}\"}key;value}class MapIterator{Z;ri;constructor(t){this.Z=t,this.ri=t.w.entries()}[Symbol.iterator](){return this.Z.w.entries()}key;value;get iterator(){return this}reset(){const t=this.Z;this.ri=t.w.entries()}next(){const t=this.ri.next();return t.done?(this.key=null,this.value=null,!1):(this.key=t.value[0],this.value=t.value[1],!0)}hasNext(){return this.next()}first(){if(this.Z.w.size===0)return null;this.ri=this.Z.w.entries();const t=this.ri.next().value;return this.key=t[0],this.value=t[1],new KeyValuePair(t[0],t[1])}any(t){return this.Z.any(t)}all(t){return this.Z.all(t)}each(t){return this.Z.each(t),this}map(t){const i=new List;let e=null;return this.Z.w.forEach((s,n)=>{e===null?e=new KeyValuePair(n,s):(e.key=n,e.value=s),i.add(t(e))}),i.iterator}filter(t){const i=new List;let e=null;return this.Z.w.forEach((s,n)=>{e===null?e=new KeyValuePair(n,s):(e.key=n,e.value=s),t(e)&&(i.add(e),e=null)}),i.iterator}get count(){return this.Z.size}wl(){this.key=null,this.value=null,this.ri=null}toString(){return\"MapIterator\"}}class GMap{f;w;constructor(t){GSet.Ji(this),this.f=!1,this.w=new Map,t!==void 0&&this.addAll(t)}[Symbol.iterator](){return this.w.entries()}entries(){return this.w.entries()}p(){return this.f=!0,this}At(){return this.f=!1,this}toString(){return\"Map()#\"+GSet.gs(this)}set(t,i){return this.f&&U.D(this,t),this.w.set(t,i),this}add(t,i){return this.set(t,i)}addAll(t){if(t===null)return this;if(this.f&&U.D(this),Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++){const s=t[e];this.set(s.key,s.value)}}else if(t instanceof GMap){const i=t.iterator;for(;i.next();)this.set(i.key,i.value)}else{const i=t.iterator;for(;i.next();){const e=i.value;this.set(e.key,e.value)}}return this}first(){if(this.w.size===0)return null;const t=this.w.entries().next().value;return new KeyValuePair(t[0],t[1])}any(t){let i=null;for(const[e,s]of this.w)if(i===null?i=new KeyValuePair(e,s):(i.key=e,i.value=s),t(i))return!0;return!1}all(t){let i=null;for(const[e,s]of this.w)if(i===null?i=new KeyValuePair(e,s):(i.key=e,i.value=s),!t(i))return!1;return!0}each(t){let i=null;for(const[e,s]of this.w)i===null?i=new KeyValuePair(e,s):(i.key=e,i.value=s),t(i);return this}map(t){const i=new GMap;let e=null;for(const[s,n]of this.w)e===null?e=new KeyValuePair(s,n):(e.key=s,e.value=n),i.set(s,t(e));return i}filter(t){const i=new GMap;let e=null;for(const[s,n]of this.w)e===null?e=new KeyValuePair(s,n):(e.key=s,e.value=n),t(e)&&i.set(s,n);return i}has(t){return this.w.has(t)}contains(t){return this.has(t)}get(t){const i=this.w.get(t);return i===void 0?null:i}getValue(t){return this.get(t)}delete(t){return t===null?!1:(this.f&&U.D(this,t),this.w.delete(t))}remove(t){return this.delete(t)}clear(){this.f&&U.D(this),this.w.clear()}copy(){const t=new GMap;return t.w=new Map(this.w),t}toArray(){const t=this.w,i=new Array(t.size);let e=0;for(const s of t)i[e]=new KeyValuePair(s[0],s[1]),e++;return i}toKeySet(){return new MapKeySet(this)}get count(){return this.w.size}get size(){return this.w.size}get iterator(){return this.w.size<=0?EmptyIterator.instance:new MapIterator(this)}get iteratorKeys(){return this.count<=0?EmptyIterator.instance:new MapKeySetIterator(this)}keys(){return this.w.keys()}get iteratorValues(){return this.count<=0?EmptyIterator.instance:new MapValueSetIterator(this)}values(){return this.w.values()}forEach(t,i){return this.w.forEach(t,i)}}class Point{px;py;f;constructor(t,i){t===void 0?(this.px=0,this.py=0):typeof t==\"number\"&&typeof i==\"number\"?(this.px=t,this.py=i):U.n(\"Invalid arguments to Point constructor: \"+t+\", \"+i),this.f=!1}c(t){return this.px=t.px,this.py=t.py,this}s(t,i){return this.px=t,this.py=i,this}setTo(t,i){return Debug&&(U.i(t,\"number\",Point,\"setTo:x\"),U.i(i,\"number\",Point,\"setTo:y\"),this._()),this.px=t,this.py=i,this}set(t){return Debug&&(U.e(t,Point,Point,\"set:p\"),this._()),this.px=t.px,this.py=t.py,this}copy(){const t=new Point;return t.px=this.px,t.py=this.py,t}it(){return this.f=!0,Object.freeze(this),this}N(){return this.f||Object.isFrozen(this)?this:this.copy().p()}p(){return this.f||(this.f=!0),this}At(){return this.f&&(Object.isFrozen(this)&&U.n(\"cannot thaw constant: \"+this),this.f=!1),this}_(t){if(Debug&&this.f){let i=\"The Point is frozen, so its properties cannot be set: \"+this.toString();t!==void 0&&(i+=\"  to value: \"+t),U.n(i)}}static parse(t){if(typeof t==\"string\"){const i=t.split(\" \");let e=0,s=0;for(;i[e]===\"\";)e++;let n=i[e++];n&&(s=parseFloat(n));let o=0;for(;i[e]===\"\";)e++;return n=i[e++],n&&(o=parseFloat(n)),new Point(s,o)}else return new Point}static stringify(t){return Debug&&U.e(t,Point),t.x.toString()+\" \"+t.y.toString()}static stringifyFixed(t){return U.i(t,\"number\",Point,\"stringifyFixed:digits\"),i=>i.x.toFixed(t)+\" \"+i.y.toFixed(t)}toString(){return\"Point(\"+this.x+\",\"+this.y+\")\"}equals(t){return t instanceof Point?this.px===t.x&&this.py===t.y:!1}equalTo(t,i){return this.px===t&&this.py===i}equalsApprox(t){return Geo.g(this.px,t.x)&&Geo.g(this.py,t.y)}add(t){return Debug&&(U.e(t,Point,Point,\"add:p\"),this._()),this.px+=t.x,this.py+=t.y,this}subtract(t){return Debug&&(U.e(t,Point,Point,\"subtract:p\"),this._()),this.px-=t.x,this.py-=t.y,this}offset(t,i){return Debug&&(U.r(t,Point,\"offset:dx\"),U.r(i,Point,\"offset:dy\"),this._()),this.px+=t,this.py+=i,this}rotate(t){if(Debug&&(U.r(t,Point,\"rotate:angle\"),this._()),t===0)return this;const i=this.px,e=this.py;if(i===0&&e===0)return this;let s=0,n=0;if(t>=360?t-=360:t<0&&(t+=360),t===90)s=0,n=1;else if(t===180)s=-1,n=0;else if(t===270)s=0,n=-1;else{const o=t*Math.PI/180;s=Math.cos(o),n=Math.sin(o)}return this.px=s*i-n*e,this.py=n*i+s*e,this}scale(t,i){return Debug&&(U.r(t,Point,\"scale:sx\"),U.r(i,Point,\"scale:sy\"),this._()),this.px*=t,this.py*=i,this}distanceSquaredPoint(t){Debug&&U.e(t,Point,Point,\"distanceSquaredPoint:p\");const i=t.x-this.px,e=t.y-this.py;return i*i+e*e}distanceSquared(t,i){Debug&&(U.r(t,Point,\"distanceSquared:px\"),U.r(i,Point,\"distanceSquared:py\"));const e=t-this.px,s=i-this.py;return e*e+s*s}normalize(){Debug&&this._();const t=this.px,i=this.py,e=Math.sqrt(t*t+i*i);return e>0&&(this.px=t/e,this.py=i/e),this}directionPoint(t){return Debug&&U.e(t,Point,Point,\"directionPoint:p\"),this.wC(t.x-this.px,t.y-this.py)}direction(t,i){return Debug&&(U.r(t,Point,\"direction:px\"),U.r(i,Point,\"direction:py\")),this.wC(t-this.px,i-this.py)}wC(t,i){if(t===0)return i>0?90:i<0?270:0;if(i===0)return t>0?0:180;{if(isNaN(t)||isNaN(i))return 0;let e=Math.atan(Math.abs(i/t))*180/Math.PI;return t<0?i<0?e+=180:e=180-e:i<0&&(e=360-e),e}}static compareWithLineSegment(t,i,e,s,n,o){return Debug&&(U.r(t,Point,\"compareWithLineSegment:a1x\"),U.r(i,Point,\"compareWithLineSegment:a1y\"),U.r(e,Point,\"compareWithLineSegment:a2x\"),U.r(s,Point,\"compareWithLineSegment:a2y\"),U.r(n,Point,\"compareWithLineSegment:b1x\"),U.r(o,Point,\"compareWithLineSegment:b1y\")),Geo.hu(t,i,e,s,n,o)}compareWithLineSegmentPoint(t,i){return Debug&&(U.e(t,Point,Point,\"compareWithLineSegmentPoint:p\"),U.e(i,Point,Point,\"compareWithLineSegmentPoint:q\")),Geo.hu(t.x,t.y,i.x,i.y,this.x,this.y)}static intersectingLineSegments(t,i,e,s,n,o,r,l){return Debug&&(U.r(t,Point,\"intersectingLineSegments:a1x\"),U.r(i,Point,\"intersectingLineSegments:a1y\"),U.r(e,Point,\"intersectingLineSegments:a2x\"),U.r(s,Point,\"intersectingLineSegments:a2y\"),U.r(n,Point,\"intersectingLineSegments:b1x\"),U.r(o,Point,\"intersectingLineSegments:b1y\"),U.r(r,Point,\"intersectingLineSegments:b2x\"),U.r(l,Point,\"intersectingLineSegments:b2y\")),Geo.au(t,i,e,s,n,o,r,l)}projectOntoLineSegment(t,i,e,s){return Debug&&(U.r(t,Point,\"projectOntoLineSegment:px\"),U.r(i,Point,\"projectOntoLineSegment:py\"),U.r(e,Point,\"projectOntoLineSegment:qx\"),U.r(s,Point,\"projectOntoLineSegment:qy\")),Geo.xl(t,i,e,s,this.px,this.py,this),this}projectOntoLineSegmentPoint(t,i){return Debug&&(U.e(t,Point,Point,\"projectOntoLineSegmentPoint:p\"),U.e(i,Point,Point,\"projectOntoLineSegmentPoint:q\")),Geo.xl(t.x,t.y,i.x,i.y,this.px,this.py,this),this}snapToGrid(t,i,e,s){return Debug&&(U.r(t,Point,\"snapToGrid:originx\"),U.r(i,Point,\"snapToGrid:originy\"),U.r(e,Point,\"snapToGrid:cellwidth\"),U.r(s,Point,\"snapToGrid:cellheight\")),Geo.Vg(this.px,this.py,t,i,e,s,this),this}snapToGridPoint(t,i){return Debug&&(U.e(t,Point,Point,\"snapToGridPoint:p\"),U.e(i,Size,Point,\"snapToGridPoint:q\")),Geo.Vg(this.px,this.py,t.x,t.y,i.width,i.height,this),this}setRectSpot(t,i){return Debug&&(U.e(t,Rect,Point,\"setRectSpot:r\"),U.e(i,Spot,Point,\"setRectSpot:spot\"),this._()),this.px=t.x+i.x*t.width+i.offsetX,this.py=t.y+i.y*t.height+i.offsetY,this}setSpot(t,i,e,s,n){return Debug&&(U.r(t,Point,\"setSpot:x\"),U.r(i,Point,\"setSpot:y\"),U.r(e,Point,\"setSpot:w\"),U.r(s,Point,\"setSpot:h\"),(e<0||s<0)&&U.n(\"Point.setSpot:Width and height cannot be negative\"),U.e(n,Spot,Point,\"setSpot:spot\"),this._()),this.px=t+n.x*e+n.offsetX,this.py=i+n.y*s+n.offsetY,this}F(t){return t.kt(this),this}Xe(t){return t.is(this),this}static distanceLineSegmentSquared(t,i,e,s,n,o){Debug&&(U.r(t,Point,\"distanceLineSegmentSquared:px\"),U.r(i,Point,\"distanceLineSegmentSquared:py\"),U.r(e,Point,\"distanceLineSegmentSquared:ax\"),U.r(s,Point,\"distanceLineSegmentSquared:ay\"),U.r(n,Point,\"distanceLineSegmentSquared:bx\"),U.r(o,Point,\"distanceLineSegmentSquared:by\"));let r=n-e,l=o-s;const h=r*r+l*l,f=e-t,a=s-i,c=-f*r-a*l;if(c<=0||c>=h)return r=n-t,l=o-i,Math.min(f*f+a*a,r*r+l*l);{const u=r*a-l*f;return u*u/h}}static distanceSquared(t,i,e,s){Debug&&(U.r(t,Point,\"distanceSquared:px\"),U.r(i,Point,\"distanceSquared:py\"),U.r(e,Point,\"distanceSquared:qx\"),U.r(s,Point,\"distanceSquared:qy\"));const n=e-t,o=s-i;return n*n+o*o}static direction(t,i,e,s){Debug&&(U.r(t,Point,\"direction:px\"),U.r(i,Point,\"direction:py\"),U.r(e,Point,\"direction:qx\"),U.r(s,Point,\"direction:qy\"));const n=e-t,o=s-i;if(n===0)return o>0?90:o<0?270:0;if(o===0)return n>0?0:180;{if(isNaN(n)||isNaN(o))return 0;let r=Math.atan(Math.abs(o/n))*180/Math.PI;return n<0?o<0?r+=180:r=180-r:o<0&&(r=360-r),r}}get x(){return this.px}set x(t){Debug&&(U.i(t,\"number\",Point,\"x\"),this._(t)),this.px=t}get y(){return this.py}set y(t){Debug&&(U.i(t,\"number\",Point,\"y\"),this._(t)),this.py=t}isReal(){return isFinite(this.x)&&isFinite(this.y)}static No=new Point(0,0).it();static xC=new Point(-1/0,-1/0).it();static bC=new Point(1/0,1/0).it();static kC=new Point(6,6).it();static Hk=new Point(NaN,NaN).it();static qk=[];static a(){const t=Point.qk.pop();return t===void 0?new Point:t}static K(t,i){const e=Point.qk.pop();return e===void 0?new Point(t,i):(e.x=t,e.y=i,e)}static o(t){Point.qk.push(t)}}class Size{sw;sh;f;constructor(t,i){t===void 0?(this.sw=0,this.sh=0):typeof t==\"number\"&&(t>=0||isNaN(t))&&typeof i==\"number\"&&(i>=0||isNaN(i))?(this.sw=t,this.sh=i):U.n(\"Invalid arguments to Size constructor: \"+t+\", \"+i),this.f=!1}c(t){return this.sw=t.sw,this.sh=t.sh,this}s(t,i){return this.sw=t,this.sh=i,this}setTo(t,i){return Debug&&(U.i(t,\"number\",Size,\"setTo:w\"),U.i(i,\"number\",Size,\"setTo:h\"),t<0&&U.U(t,\">= 0\",Size,\"setTo:w\"),i<0&&U.U(i,\">= 0\",Size,\"setTo:h\"),this._()),this.sw=t,this.sh=i,this}set(t){return Debug&&(U.e(t,Size,Size,\"set:s\"),this._()),this.sw=t.sw,this.sh=t.sh,this}copy(){const t=new Size;return t.sw=this.sw,t.sh=this.sh,t}it(){return this.f=!0,Object.freeze(this),this}N(){return this.f||Object.isFrozen(this)?this:this.copy().p()}p(){return this.f||(this.f=!0),this}At(){return this.f&&(Object.isFrozen(this)&&U.n(\"cannot thaw constant: \"+this),this.f=!1),this}_(t){if(Debug&&this.f){let i=\"The Size is frozen, so its properties cannot be set: \"+this.toString();t!==void 0&&(i+=\"  to value: \"+t),U.n(i)}}static parse(t){if(typeof t==\"string\"){const i=t.split(\" \");let e=0,s=0;for(;i[e]===\"\";)e++;let n=i[e++];n&&(s=parseFloat(n));let o=0;for(;i[e]===\"\";)e++;return n=i[e++],n&&(o=parseFloat(n)),new Size(s,o)}else return new Size}static stringify(t){return Debug&&U.e(t,Size),t.width.toString()+\" \"+t.height.toString()}static stringifyFixed(t){return U.i(t,\"number\",Size,\"stringifyFixed:digits\"),i=>i.width.toFixed(t)+\" \"+i.height.toFixed(t)}toString(){return\"Size(\"+this.width+\",\"+this.height+\")\"}equals(t){return t instanceof Size?this.sw===t.width&&this.sh===t.height:!1}equalTo(t,i){return this.sw===t&&this.sh===i}equalsApprox(t){return Geo.g(this.sw,t.width)&&Geo.g(this.sh,t.height)}inflate(t,i){Debug&&(U.r(t,Size,\"inflate:w\"),U.r(i,Size,\"inflate:h\"));const e=this.width+t;this.sw=e>=0?e:0;const s=this.height+i;return this.sh=s>=0?s:0,this}get width(){return this.sw}set width(t){Debug&&(U.i(t,\"number\",Size,\"width\"),this._(t)),t<0&&U.U(t,\">= 0\",Size,\"width\"),this.sw=t}get height(){return this.sh}set height(t){Debug&&(U.i(t,\"number\",Size,\"height\"),this._(t)),t<0&&U.U(t,\">= 0\",Size,\"height\"),this.sh=t}isReal(){return isFinite(this.width)&&isFinite(this.height)}static Gh=new Size(0,0).it();static Wk=new Size(1,1).it();static SC=new Size(6,6).it();static fu=new Size(8,8).it();static MC=new Size(10,10).it();static Mw=new Size(1/0,1/0).it();static Pw=new Size(NaN,NaN).it();static PC=[];static a(){const t=Size.PC.pop();return t===void 0?new Size:t}static o(t){Size.PC.push(t)}}class Rect{rx;ry;rw;rh;f;constructor(t,i,e,s){if(t===void 0)this.rx=0,this.ry=0,this.rw=0,this.rh=0;else if(typeof t==\"number\"&&typeof i==\"number\"&&typeof e==\"number\"&&(e>=0||isNaN(e))&&typeof s==\"number\"&&(s>=0||isNaN(s)))this.rx=t,this.ry=i,this.rw=e,this.rh=s;else if(t instanceof Point){const n=t.x,o=t.y;if(i instanceof Point){const r=i.x,l=i.y;this.rx=Math.min(n,r),this.ry=Math.min(o,l),this.rw=Math.abs(n-r),this.rh=Math.abs(o-l)}else i instanceof Size?(this.rx=n,this.ry=o,this.rw=i.width,this.rh=i.height):U.n(\"Incorrect second argument supplied to Rect constructor \"+i)}else U.n(\"Invalid arguments to Rect constructor: \"+t+\", \"+i+\", \"+e+\", \"+s);this.f=!1}c(t){return this.rx=t.rx,this.ry=t.ry,this.rw=t.rw,this.rh=t.rh,this}s(t,i,e,s){return this.rx=t,this.ry=i,this.rw=e,this.rh=s,this}Vn(t,i){return this.rw=t,this.rh=i,this}setTo(t,i,e,s){return Debug&&(U.i(t,\"number\",Rect,\"setTo:x\"),U.i(i,\"number\",Rect,\"setTo:y\"),U.i(e,\"number\",Rect,\"setTo:w\"),U.i(s,\"number\",Rect,\"setTo:h\"),e<0&&U.U(e,\">= 0\",Rect,\"setTo:w\"),s<0&&U.U(s,\">= 0\",Rect,\"setTo:h\"),this._()),this.rx=t,this.ry=i,this.rw=e,this.rh=s,this}set(t){return Debug&&(U.e(t,Rect,Rect,\"set:r\"),this._()),this.rx=t.rx,this.ry=t.ry,this.rw=t.rw,this.rh=t.rh,this}setPoint(t){return Debug&&(U.e(t,Point,Rect,\"setPoint:p\"),this._()),this.rx=t.x,this.ry=t.y,this}setSize(t){return Debug&&(U.e(t,Size,Rect,\"setSize:s\"),this._()),this.rw=t.width,this.rh=t.height,this}copy(){const t=new Rect;return t.rx=this.rx,t.ry=this.ry,t.rw=this.rw,t.rh=this.rh,t}it(){return this.f=!0,Object.freeze(this),this}N(){return this.f||Object.isFrozen(this)?this:this.copy().p()}p(){return this.f||(this.f=!0),this}At(){return this.f&&(Object.isFrozen(this)&&U.n(\"cannot thaw constant: \"+this),this.f=!1),this}_(t){if(Debug&&this.f){let i=\"The Rect is frozen, so its properties cannot be set: \"+this.toString();t!==void 0&&(i+=\"  to value: \"+t),U.n(i)}}static parse(t){if(typeof t==\"string\"){const i=t.split(\" \");let e=0,s=0;for(;i[e]===\"\";)e++;let n=i[e++];n&&(s=parseFloat(n));let o=0;for(;i[e]===\"\";)e++;n=i[e++],n&&(o=parseFloat(n));let r=0;for(;i[e]===\"\";)e++;n=i[e++],n&&(r=parseFloat(n));let l=0;for(;i[e]===\"\";)e++;return n=i[e++],n&&(l=parseFloat(n)),new Rect(s,o,r,l)}else return new Rect}static stringify(t){return Debug&&U.e(t,Rect),t.x.toString()+\" \"+t.y.toString()+\" \"+t.width.toString()+\" \"+t.height.toString()}static stringifyFixed(t){return U.i(t,\"number\",Rect,\"stringifyFixed:digits\"),i=>i.x.toFixed(t)+\" \"+i.y.toFixed(t)+\" \"+i.width.toFixed(t)+\" \"+i.height.toFixed(t)}toString(){return\"Rect(\"+this.x+\",\"+this.y+\",\"+this.width+\",\"+this.height+\")\"}equals(t){return t instanceof Rect?this.rx===t.x&&this.ry===t.y&&this.rw===t.width&&this.rh===t.height:!1}equalTo(t,i,e,s){return this.rx===t&&this.ry===i&&this.rw===e&&this.rh===s}equalsApprox(t){return Geo.g(this.rx,t.x)&&Geo.g(this.ry,t.y)&&Geo.g(this.rw,t.width)&&Geo.g(this.rh,t.height)}equalsApproxTo(t,i,e,s){return Geo.g(this.rx,t)&&Geo.g(this.ry,i)&&Geo.g(this.rw,e)&&Geo.g(this.rh,s)}equalsApproxClose(t){return Geo.G(this.rx,t.x)&&Geo.G(this.ry,t.y)&&Geo.G(this.rw,t.width)&&Geo.G(this.rh,t.height)}containsPoint(t){return Debug&&U.e(t,Point,Rect,\"containsPoint:p\"),this.rx<=t.x&&this.rx+this.rw>=t.x&&this.ry<=t.y&&this.ry+this.rh>=t.y}containsRect(t){return Debug&&U.e(t,Rect,Rect,\"containsRect:r\"),this.rx<=t.x&&t.x+t.width<=this.rx+this.rw&&this.ry<=t.y&&t.y+t.height<=this.ry+this.rh}contains(t,i,e,s){return Debug?(U.r(t,Rect,\"contains:x\"),U.r(i,Rect,\"contains:y\"),e===void 0?e=0:U.r(e,Rect,\"contains:w\"),s===void 0?s=0:U.r(s,Rect,\"contains:h\"),(e<0||s<0)&&U.n(\"Rect.contains:Width and height cannot be negative\")):(e===void 0&&(e=0),s===void 0&&(s=0)),this.rx<=t&&t+e<=this.rx+this.rw&&this.ry<=i&&i+s<=this.ry+this.rh}offset(t,i){return Debug&&(U.r(t,Rect,\"offset:dx\"),U.r(i,Rect,\"offset:dy\"),this._()),this.rx+=t,this.ry+=i,this}inflate(t,i){return Debug&&(U.r(t,Rect,\"inflate:w\"),U.r(i,Rect,\"inflate:h\")),this.Nw(i,t,i,t)}addMargin(t){return Debug&&U.e(t,Margin,Rect,\"addMargin:m\"),this.Nw(t.top,t.right,t.bottom,t.left)}subtractMargin(t){return Debug&&U.e(t,Margin,Rect,\"subtractMargin:m\"),this.Nw(-t.top,-t.right,-t.bottom,-t.left)}grow(t,i,e,s){return Debug&&(U.r(t,Rect,\"grow:t\"),U.r(i,Rect,\"grow:r\"),U.r(e,Rect,\"grow:b\"),U.r(s,Rect,\"grow:l\")),this.Nw(t,i,e,s)}Nw(t,i,e,s){Debug&&this._();const n=this.rw;i+s<=-n?(this.rx+=n/2,this.rw=0):(this.rx-=s,this.rw+=i+s);const o=this.rh;return t+e<=-o?(this.ry+=o/2,this.rh=0):(this.ry-=t,this.rh+=t+e),this}intersectRect(t){return Debug&&U.e(t,Rect,Rect,\"intersectRect:r\"),this.NC(t.x,t.y,t.width,t.height)}intersect(t,i,e,s){return Debug&&(U.r(t,Rect,\"intersect:x\"),U.r(i,Rect,\"intersect:y\"),U.r(e,Rect,\"intersect:w\"),U.r(s,Rect,\"intersect:h\"),(e<0||s<0)&&U.n(\"Rect.intersect:Width and height cannot be negative\")),this.NC(t,i,e,s)}NC(t,i,e,s){Debug&&this._();const n=Math.max(this.rx,t),o=Math.max(this.ry,i),r=Math.min(this.rx+this.rw,t+e),l=Math.min(this.ry+this.rh,i+s);return this.rx=n,this.ry=o,this.rw=Math.max(0,r-n),this.rh=Math.max(0,l-o),this}intersectsRect(t){return Debug&&U.e(t,Rect,Rect,\"intersectsRect:r\"),this.intersects(t.x,t.y,t.width,t.height)}intersects(t,i,e,s){Debug&&(U.r(t,Rect,\"intersects:x\"),U.r(i,Rect,\"intersects:y\"),U.r(t,Rect,\"intersects:w\"),U.r(i,Rect,\"intersects:h\"),(e<0||s<0)&&U.n(\"Rect.intersects:Width and height cannot be negative\"));let n=this.rw;const o=this.rx;if(n!==1/0&&e!==1/0&&(n+=o,e+=t,isNaN(e)||isNaN(n)||o>e||t>n))return!1;let r=this.rh;const l=this.ry;return!(r!==1/0&&s!==1/0&&(r+=l,s+=i,isNaN(s)||isNaN(r)||l>s||i>r))}intersectsRectPlus(t,i){let e=this.rw,s=t.width+i+i;const n=this.rx,o=t.x-i;if(e+=n,s+=o,n>s||o>e)return!1;let r=this.rh,l=t.height+i+i;const h=this.ry,f=t.y-i;return r+=h,l+=f,!(h>l||f>r)}unionPoint(t){return Debug&&U.e(t,Point,Rect,\"unionPoint:p\"),this.unionNoCheck(t.x,t.y,0,0)}unionRect(t){return Debug&&U.e(t,Rect,Rect,\"unionRect:r\"),this.unionNoCheck(t.rx,t.ry,t.rw,t.rh)}union(t,i,e,s){return Debug?(U.r(t,Rect,\"union:x\"),U.r(i,Rect,\"union:y\"),e===void 0?e=0:U.r(e,Rect,\"union:w\"),s===void 0?s=0:U.r(s,Rect,\"union:h\"),(e<0||s<0)&&U.n(\"Rect.union:Width and height cannot be negative\"),this._()):(e===void 0&&(e=0),s===void 0&&(s=0)),this.unionNoCheck(t,i,e,s)}unionNoCheck(t,i,e,s){const n=Math.min(this.rx,t),o=Math.min(this.ry,i),r=Math.max(this.rx+this.rw,t+e),l=Math.max(this.ry+this.rh,i+s);return this.rx=n,this.ry=o,this.rw=r-n,this.rh=l-o,this}setSpot(t,i,e){return Debug&&(U.r(t,Rect,\"setSpot:x\"),U.r(i,Rect,\"setSpot:y\"),U.e(e,Spot,Rect,\"setSpot:spot\"),this._()),this.rx=t-e.offsetX-e.x*this.rw,this.ry=i-e.offsetY-e.y*this.rh,this}static contains(t,i,e,s,n,o,r,l){return Debug?(U.r(t,Rect,\"contains:rx\"),U.r(i,Rect,\"contains:ry\"),U.r(e,Rect,\"contains:rw\"),U.r(s,Rect,\"contains:rh\"),U.r(n,Rect,\"contains:x\"),U.r(o,Rect,\"contains:y\"),r===void 0?r=0:U.r(r,Rect,\"contains:w\"),l===void 0?l=0:U.r(l,Rect,\"contains:h\"),(e<0||s<0||r<0||l<0)&&U.n(\"Rect.contains:Width and height cannot be negative\")):(r===void 0&&(r=0),l===void 0&&(l=0)),t<=n&&n+r<=t+e&&i<=o&&o+l<=i+s}static intersects(t,i,e,s,n,o,r,l){Debug&&(U.r(t,Rect,\"intersects:rx\"),U.r(i,Rect,\"intersects:ry\"),U.r(e,Rect,\"intersects:rw\"),U.r(s,Rect,\"intersects:rh\"),U.r(n,Rect,\"intersects:x\"),U.r(o,Rect,\"intersects:y\"),U.r(r,Rect,\"intersects:w\"),U.r(l,Rect,\"intersects:h\"),(e<0||s<0||r<0||l<0)&&U.n(\"Rect.intersects:Width and height cannot be negative\"));let h=e,f=r;const a=t,c=n;if(h+=a,f+=c,a>f||c>h)return!1;let u=s,d=l;const m=i,g=o;return u+=m,d+=g,!(m>d||g>u)}static intersectsLineSegment(t,i,e,s,n,o,r,l){return Debug&&(U.r(t,Rect,\"intersectsLineSegment:x\"),U.r(i,Rect,\"intersectsLineSegment:y\"),U.r(e,Rect,\"intersectsLineSegment:w\"),U.r(s,Rect,\"intersectsLineSegment:h\"),U.r(n,Rect,\"intersectsLineSegment:p1x\"),U.r(o,Rect,\"intersectsLineSegment:p1y\"),U.r(r,Rect,\"intersectsLineSegment:p2x\"),U.r(l,Rect,\"intersectsLineSegment:p2y\"),(e<0||s<0)&&U.n(\"Rect.intersectsLineSegment: width and height cannot be negative\")),Geo.CC(t,i,e,s,n,o,r,l)}get x(){return this.rx}set x(t){Debug&&(U.i(t,\"number\",Rect,\"x\"),this._(t)),this.rx=t}get y(){return this.ry}set y(t){Debug&&(U.i(t,\"number\",Rect,\"y\"),this._(t)),this.ry=t}get width(){return this.rw}set width(t){Debug&&(U.i(t,\"number\",Rect,\"width\"),this._(t)),t<0&&U.U(t,\">= 0\",Rect,\"width\"),this.rw=t}get height(){return this.rh}set height(t){Debug&&(U.i(t,\"number\",Rect,\"height\"),this._(t)),t<0&&U.U(t,\">= 0\",Rect,\"height\"),this.rh=t}get left(){return this.rx}set left(t){Debug&&(U.i(t,\"number\",Rect,\"left\"),this._(t)),this.rx=t}get top(){return this.ry}set top(t){Debug&&(U.i(t,\"number\",Rect,\"top\"),this._(t)),this.ry=t}get right(){return this.rx+this.rw}set right(t){Debug&&(U.r(t,Rect,\"right\"),this._(t)),this.rx+=t-(this.rx+this.rw)}get bottom(){return this.ry+this.rh}set bottom(t){Debug&&(U.r(t,Rect,\"top\"),this._(t)),this.ry+=t-(this.ry+this.rh)}get position(){return new Point(this.rx,this.ry)}set position(t){Debug&&(U.e(t,Point,Rect,\"position\"),this._(t)),this.rx=t.x,this.ry=t.y}get size(){return new Size(this.rw,this.rh)}set size(t){Debug&&(U.e(t,Size,Rect,\"size\"),this._(t)),this.rw=t.width,this.rh=t.height}get center(){return new Point(this.rx+this.rw/2,this.ry+this.rh/2)}set center(t){Debug&&(U.e(t,Point,Rect,\"center\"),this._(t)),this.rx=t.x-this.rw/2,this.ry=t.y-this.rh/2}get centerX(){return this.rx+this.rw/2}set centerX(t){Debug&&(U.r(t,Rect,\"centerX\"),this._(t)),this.rx=t-this.rw/2}get centerY(){return this.ry+this.rh/2}set centerY(t){Debug&&(U.r(t,Rect,\"centerY\"),this._(t)),this.ry=t-this.rh/2}isReal(){return isFinite(this.x)&&isFinite(this.y)&&isFinite(this.width)&&isFinite(this.height)}isEmpty(){return this.width===0&&this.height===0}static zg=new Rect(0,0,0,0).it();static sF=new Rect(NaN,NaN,NaN,NaN).it();static jk=[];static a(){const t=Rect.jk.pop();return t===void 0?new Rect:t}static K(t,i,e,s){const n=Rect.jk.pop();return n===void 0?new Rect(t,i,e,s):n.s(t,i,e,s)}static o(t){Rect.jk.push(t)}}class Margin{mt;mr;mb;ml;f;constructor(t,i,e,s){t===void 0?(this.mt=0,this.mr=0,this.mb=0,this.ml=0):i===void 0?(i=t,e=t,s=t,this.mt=t,this.mr=i,this.mb=e,this.ml=s):e===void 0?(e=t,s=i,this.mt=t,this.mr=i,this.mb=e,this.ml=s):s!==void 0?(this.mt=t,this.mr=i,this.mb=e,this.ml=s):U.n(\"Invalid arguments to Margin constructor: \"+t+\", \"+i+\", \"+e+\", \"+s),this.f=!1}c(t){return this.mt=t.mt,this.mr=t.mr,this.mb=t.mb,this.ml=t.ml,this}setTo(t,i,e,s){return Debug&&(U.i(t,\"number\",Margin,\"setTo:t\"),U.i(i,\"number\",Margin,\"setTo:r\"),U.i(e,\"number\",Margin,\"setTo:b\"),U.i(s,\"number\",Margin,\"setTo:l\"),this._()),this.mt=t,this.mr=i,this.mb=e,this.ml=s,this}set(t){return Debug&&(U.e(t,Margin,Margin,\"assign:m\"),this._()),this.mt=t.mt,this.mr=t.mr,this.mb=t.mb,this.ml=t.ml,this}copy(){const t=new Margin;return t.mt=this.mt,t.mr=this.mr,t.mb=this.mb,t.ml=this.ml,t}it(){return this.f=!0,Object.freeze(this),this}N(){return this.f||Object.isFrozen(this)?this:this.copy().p()}p(){return this.f||(this.f=!0),this}At(){return this.f&&(Object.isFrozen(this)&&U.n(\"cannot thaw constant: \"+this),this.f=!1),this}_(t){if(Debug&&this.f){let i=\"The Margin is frozen, so its properties cannot be set: \"+this.toString();t!==void 0&&(i+=\"  to value: \"+t),U.n(i)}}static parse(t){if(typeof t==\"string\"){const i=t.split(\" \");let e=0,s=NaN;for(;i[e]===\"\";)e++;let n=i[e++];if(n&&(s=parseFloat(n)),isNaN(s))return new Margin;let o=NaN;for(;i[e]===\"\";)e++;if(n=i[e++],n&&(o=parseFloat(n)),isNaN(o))return new Margin(s);let r=NaN;for(;i[e]===\"\";)e++;if(n=i[e++],n&&(r=parseFloat(n)),isNaN(r))return new Margin(s,o);let l=NaN;for(;i[e]===\"\";)e++;return n=i[e++],n&&(l=parseFloat(n)),isNaN(l)?new Margin(s,o):new Margin(s,o,r,l)}else return new Margin}static stringify(t){return Debug&&U.e(t,Margin),t.top.toString()+\" \"+t.right.toString()+\" \"+t.bottom.toString()+\" \"+t.left.toString()}static stringifyFixed(t){return U.i(t,\"number\",Margin,\"stringifyFixed:digits\"),i=>i.top.toFixed(t)+\" \"+i.right.toFixed(t)+\" \"+i.bottom.toFixed(t)+\" \"+i.left.toFixed(t)}toString(){return\"Margin(\"+this.top+\",\"+this.right+\",\"+this.bottom+\",\"+this.left+\")\"}equals(t){return t instanceof Margin?this.mt===t.top&&this.mr===t.right&&this.mb===t.bottom&&this.ml===t.left:!1}equalTo(t,i,e,s){return this.mt===t&&this.mr===i&&this.mb===e&&this.ml===s}equalsApprox(t){return Geo.g(this.mt,t.top)&&Geo.g(this.mr,t.right)&&Geo.g(this.mb,t.bottom)&&Geo.g(this.ml,t.left)}get top(){return this.mt}set top(t){Debug&&(U.r(t,Margin,\"top\"),this._(t)),this.mt=t}get right(){return this.mr}set right(t){Debug&&(U.r(t,Margin,\"right\"),this._(t)),this.mr=t}get bottom(){return this.mb}set bottom(t){Debug&&(U.r(t,Margin,\"bottom\"),this._(t)),this.mb=t}get left(){return this.ml}set left(t){Debug&&(U.r(t,Margin,\"left\"),this._(t)),this.ml=t}isReal(){return isFinite(this.top)&&isFinite(this.right)&&isFinite(this.bottom)&&isFinite(this.left)}static Xg=new Margin(0,0,0,0).it();static AC=new Margin(2,2,2,2).it();static LC=[];static a(){const t=Margin.LC.pop();return t===void 0?new Margin:t}static o(t){Margin.LC.push(t)}}class Spot{sx;sy;ox;oy;f;constructor(t,i,e,s){t===void 0?(this.sx=0,this.sy=0,this.ox=0,this.oy=0):(i===void 0&&(i=0),e===void 0&&(e=0),s===void 0&&(s=0),this.sx=t,this.sy=i,this.ox=e,this.oy=s),this.f=!1}c(t){return this.sx=t.sx,this.sy=t.sy,this.ox=t.ox,this.oy=t.oy,this}setTo(t,i,e,s){return Debug&&(this.Cw(t,\"setTo:x\"),this.Cw(i,\"setTo:y\"),this.Aw(e,\"setTo:offx\"),this.Aw(s,\"setTo:offy\"),this._()),this.sx=t,this.sy=i,this.ox=e,this.oy=s,this}set(t){return Debug&&(U.e(t,Spot,Spot,\"set:s\"),this._()),this.sx=t.sx,this.sy=t.sy,this.ox=t.ox,this.oy=t.oy,this}copy(){const t=new Spot;return t.sx=this.sx,t.sy=this.sy,t.ox=this.ox,t.oy=this.oy,t}it(){return this.f=!0,Object.freeze(this),this}N(){return this.f||Object.isFrozen(this)?this:this.copy().p()}p(){return this.f||(this.f=!0),this}At(){return this.f&&(Object.isFrozen(this)&&U.n(\"cannot thaw constant: \"+this),this.f=!1),this}_(t){if(Debug&&this.f){let i=\"The Spot is frozen, so its properties cannot be set: \"+this.toString();t!==void 0&&(i+=\"  to value: \"+t),U.n(i)}}Ye(t){return this.sx=NaN,this.sy=NaN,this.ox=t,this}Cw(t,i){(isNaN(t)||t>1||t<0)&&U.U(t,\"0 <= \"+i+\" <= 1\",Spot,i)}Aw(t,i){(isNaN(t)||t===1/0||t===-1/0)&&U.U(t,\"real number, not NaN or Infinity\",Spot,i)}static parse(t){if(typeof t==\"string\"){if(t=t.trim(),t===\"None\")return Spot.None;if(t===\"TopLeft\")return Spot.TopLeft;if(t===\"Top\"||t===\"TopCenter\"||t===\"MiddleTop\")return Spot.TopCenter;if(t===\"TopRight\")return Spot.TopRight;if(t===\"Left\"||t===\"LeftCenter\"||t===\"MiddleLeft\")return Spot.LeftCenter;if(t===\"Center\")return Spot.Center;if(t===\"Right\"||t===\"RightCenter\"||t===\"MiddleRight\")return Spot.RightCenter;if(t===\"BottomLeft\")return Spot.BottomLeft;if(t===\"Bottom\"||t===\"BottomCenter\"||t===\"MiddleBottom\")return Spot.BottomCenter;if(t===\"BottomRight\")return Spot.BottomRight;if(t===\"TopSide\")return Spot.TopSide;if(t===\"LeftSide\")return Spot.LeftSide;if(t===\"RightSide\")return Spot.RightSide;if(t===\"BottomSide\")return Spot.BottomSide;if(t===\"TopBottomSides\")return Spot.TopBottomSides;if(t===\"LeftRightSides\")return Spot.LeftRightSides;if(t===\"TopLeftSides\")return Spot.TopLeftSides;if(t===\"TopRightSides\")return Spot.TopRightSides;if(t===\"BottomLeftSides\")return Spot.BottomLeftSides;if(t===\"BottomRightSides\")return Spot.BottomRightSides;if(t===\"NotTopSide\")return Spot.NotTopSide;if(t===\"NotLeftSide\")return Spot.NotLeftSide;if(t===\"NotRightSide\")return Spot.NotRightSide;if(t===\"NotBottomSide\")return Spot.NotBottomSide;if(t===\"AllSides\")return Spot.AllSides;if(t===\"Default\")return Spot.Default;const i=t.split(\" \");let e=0,s=0;for(;i[e]===\"\";)e++;let n=i[e++];n!==void 0&&n.length>0&&(s=parseFloat(n));let o=0;for(;i[e]===\"\";)e++;n=i[e++],n!==void 0&&n.length>0&&(o=parseFloat(n));let r=0;for(;i[e]===\"\";)e++;n=i[e++],n!==void 0&&n.length>0&&(r=parseFloat(n));let l=0;for(;i[e]===\"\";)e++;return n=i[e++],n!==void 0&&n.length>0&&(l=parseFloat(n)),new Spot(s,o,r,l)}else return new Spot}static stringify(t){return Debug&&U.e(t,Spot),t.isSpot()?t.x.toString()+\" \"+t.y.toString()+\" \"+t.offsetX.toString()+\" \"+t.offsetY.toString():t.toString()}static stringifyFixed(t){return U.i(t,\"number\",Spot,\"stringifyFixed:digits\"),i=>i.x.toFixed(t)+\" \"+i.y.toFixed(t)+\" \"+i.offsetX.toFixed(t)+\" \"+i.offsetY.toFixed(t)}toString(){return this.isSpot()?this.ox===0&&this.oy===0?\"Spot(\"+this.x+\",\"+this.y+\")\":\"Spot(\"+this.x+\",\"+this.y+\",\"+this.offsetX+\",\"+this.offsetY+\")\":this.equals(Spot.None)?\"None\":this.equals(Spot.TopLeft)?\"TopLeft\":this.equals(Spot.TopCenter)?\"Top\":this.equals(Spot.TopRight)?\"TopRight\":this.equals(Spot.LeftCenter)?\"Left\":this.equals(Spot.Center)?\"Center\":this.equals(Spot.RightCenter)?\"Right\":this.equals(Spot.BottomLeft)?\"BottomLeft\":this.equals(Spot.BottomCenter)?\"Bottom\":this.equals(Spot.BottomRight)?\"BottomRight\":this.equals(Spot.TopSide)?\"TopSide\":this.equals(Spot.LeftSide)?\"LeftSide\":this.equals(Spot.RightSide)?\"RightSide\":this.equals(Spot.BottomSide)?\"BottomSide\":this.equals(Spot.TopBottomSides)?\"TopBottomSides\":this.equals(Spot.LeftRightSides)?\"LeftRightSides\":this.equals(Spot.TopLeftSides)?\"TopLeftSides\":this.equals(Spot.TopRightSides)?\"TopRightSides\":this.equals(Spot.BottomLeftSides)?\"BottomLeftSides\":this.equals(Spot.BottomRightSides)?\"BottomRightSides\":this.equals(Spot.NotTopSide)?\"NotTopSide\":this.equals(Spot.NotLeftSide)?\"NotLeftSide\":this.equals(Spot.NotRightSide)?\"NotRightSide\":this.equals(Spot.NotBottomSide)?\"NotBottomSide\":this.equals(Spot.AllSides)?\"AllSides\":this.equals(Spot.Default)?\"Default\":\"None\"}equals(t){return t instanceof Spot?(this.sx===t.x||isNaN(this.sx)&&isNaN(t.x))&&(this.sy===t.y||isNaN(this.sy)&&isNaN(t.y))&&this.ox===t.offsetX&&this.oy===t.offsetY:!1}opposite(){return new Spot(.5-(this.sx-.5),.5-(this.sy-.5),-this.ox,-this.oy)}includesSide(t){if(!this.isSide())return!1;if(!t.isSide())if(t.equals(Spot.Left))t=Spot.LeftSide;else if(t.equals(Spot.Right))t=Spot.RightSide;else if(t.equals(Spot.Top))t=Spot.TopSide;else if(t.equals(Spot.Bottom))t=Spot.BottomSide;else return!1;const i=this.oy,e=t.offsetY;return(i&e)===e}get x(){return this.sx}set x(t){Debug&&(this.Cw(t,\"x\"),this._(t)),this.sx=t}get y(){return this.sy}set y(t){Debug&&(this.Cw(t,\"y\"),this._(t)),this.sy=t}get offsetX(){return this.ox}set offsetX(t){Debug&&(this.Aw(t,\"offsetX\"),this._(t)),this.ox=t}get offsetY(){return this.oy}set offsetY(t){Debug&&(this.Aw(t,\"offsetY\"),this._(t)),this.oy=t}isSpot(){return!isNaN(this.x)&&!isNaN(this.y)}isNoSpot(){return isNaN(this.x)||isNaN(this.y)}isSide(){return isNaN(this.x)&&isNaN(this.y)&&this.offsetX===1&&this.offsetY!==0}isNone(){return isNaN(this.x)&&isNaN(this.y)&&this.offsetX===0&&this.offsetY===0}isDefault(){return isNaN(this.x)&&isNaN(this.y)&&this.offsetX===-1&&this.offsetY===0}static None=new Spot(0,0,0,0).Ye(0).it();static Default=new Spot(0,0,-1,0).Ye(-1).it();static TopLeft=new Spot(0,0,0,0).it();static TopCenter=new Spot(.5,0,0,0).it();static TopRight=new Spot(1,0,0,0).it();static LeftCenter=new Spot(0,.5,0,0).it();static Center=new Spot(.5,.5,0,0).it();static RightCenter=new Spot(1,.5,0,0).it();static BottomLeft=new Spot(0,1,0,0).it();static BottomCenter=new Spot(.5,1,0,0).it();static BottomRight=new Spot(1,1,0,0).it();static MiddleTop=Spot.TopCenter;static MiddleLeft=Spot.LeftCenter;static MiddleRight=Spot.RightCenter;static MiddleBottom=Spot.BottomCenter;static Top=Spot.TopCenter;static Left=Spot.LeftCenter;static Right=Spot.RightCenter;static Bottom=Spot.BottomCenter;static TopSide=new Spot(0,0,1,1).Ye(1).it();static LeftSide=new Spot(0,0,1,2).Ye(1).it();static RightSide=new Spot(0,0,1,4).Ye(1).it();static BottomSide=new Spot(0,0,1,8).Ye(1).it();static TopBottomSides=new Spot(0,0,1,9).Ye(1).it();static LeftRightSides=new Spot(0,0,1,6).Ye(1).it();static TopLeftSides=new Spot(0,0,1,3).Ye(1).it();static TopRightSides=new Spot(0,0,1,5).Ye(1).it();static BottomLeftSides=new Spot(0,0,1,10).Ye(1).it();static BottomRightSides=new Spot(0,0,1,12).Ye(1).it();static NotTopSide=new Spot(0,0,1,14).Ye(1).it();static NotLeftSide=new Spot(0,0,1,13).Ye(1).it();static NotRightSide=new Spot(0,0,1,11).Ye(1).it();static NotBottomSide=new Spot(0,0,1,7).Ye(1).it();static AllSides=new Spot(0,0,1,15).Ye(1).it();static vk=new Spot(.156,.156).it();static Jk=new Spot(.844,.844).it();static TC=[];static a(){const t=Spot.TC.pop();return t===void 0?new Spot:t}static o(t){Spot.TC.push(t)}}class Transform{m11;m12;m21;m22;dx;dy;constructor(){this.m11=1,this.m12=0,this.m21=0,this.m22=1,this.dx=0,this.dy=0}set(t){return this.m11=t.m11,this.m12=t.m12,this.m21=t.m21,this.m22=t.m22,this.dx=t.dx,this.dy=t.dy,this}setTo(t,i,e,s,n,o){return this.m11=t,this.m12=i,this.m21=e,this.m22=s,this.dx=n,this.dy=o,this}copy(){const t=new Transform;return t.m11=this.m11,t.m12=this.m12,t.m21=this.m21,t.m22=this.m22,t.dx=this.dx,t.dy=this.dy,t}toString(){return\"Transform(\"+this.m11+\",\"+this.m12+\",\"+this.m21+\",\"+this.m22+\",\"+this.dx+\",\"+this.dy+\")\"}equals(t){return this.m11===t.m11&&this.m12===t.m12&&this.m21===t.m21&&this.m22===t.m22&&this.dx===t.dx&&this.dy===t.dy}$k(){return this.dx===0&&this.dy===0&&this.m11===1&&this.m12===0&&this.m21===0&&this.m22===1}Vi(){return this.m11=1,this.m12=0,this.m21=0,this.m22=1,this.dx=0,this.dy=0,this}uf(t){const i=this.m11*t.m11+this.m21*t.m12,e=this.m12*t.m11+this.m22*t.m12,s=this.m11*t.m21+this.m21*t.m22,n=this.m12*t.m21+this.m22*t.m22;return this.dx=this.m11*t.dx+this.m21*t.dy+this.dx,this.dy=this.m12*t.dx+this.m22*t.dy+this.dy,this.m11=i,this.m12=e,this.m21=s,this.m22=n,this}DC(t){const i=1/(t.m11*t.m22-t.m12*t.m21),e=t.m22*i,s=-t.m12*i,n=-t.m21*i,o=t.m11*i,r=i*(t.m21*t.dy-t.m22*t.dx),l=i*(t.m12*t.dx-t.m11*t.dy),h=this.m11*e+this.m21*s,f=this.m12*e+this.m22*s,a=this.m11*n+this.m21*o,c=this.m12*n+this.m22*o;return this.dx=this.m11*r+this.m21*l+this.dx,this.dy=this.m12*r+this.m22*l+this.dy,this.m11=h,this.m12=f,this.m21=a,this.m22=c,this}Lw(){const t=1/(this.m11*this.m22-this.m12*this.m21),i=this.m22*t,e=-this.m12*t,s=-this.m21*t,n=this.m11*t,o=t*(this.m21*this.dy-this.m22*this.dx),r=t*(this.m12*this.dx-this.m11*this.dy);return this.m11=i,this.m12=e,this.m21=s,this.m22=n,this.dx=o,this.dy=r,this}ms(t,i,e){if(t>=360?t-=360:t<0&&(t+=360),t===0)return this;this.Bs(i,e);let s=0,n=0;if(t===90)s=0,n=1;else if(t===180)s=-1,n=0;else if(t===270)s=0,n=-1;else{const f=t*Math.PI/180;s=Math.cos(f),n=Math.sin(f)}const o=this.m11*s+this.m21*n,r=this.m12*s+this.m22*n,l=this.m11*-n+this.m21*s,h=this.m12*-n+this.m22*s;return this.m11=o,this.m12=r,this.m21=l,this.m22=h,this.Bs(-i,-e),this}Bs(t,i){return this.dx+=this.m11*t+this.m21*i,this.dy+=this.m12*t+this.m22*i,this}ot(t,i){return i===void 0&&(i=t),this.m11*=t,this.m12*=t,this.m21*=i,this.m22*=i,this}nF(){if(this.m11===1&&this.m12===0)return 0;let t=Math.atan2(this.m12,this.m11)*180/Math.PI;return t<0&&(t+=360),t}kt(t){const i=t.x,e=t.y;return t.s(i*this.m11+e*this.m21+this.dx,i*this.m12+e*this.m22+this.dy)}is(t){const i=1/(this.m11*this.m22-this.m12*this.m21),e=this.m22*i,s=-this.m12*i,n=-this.m21*i,o=this.m11*i,r=t.x-this.dx,l=t.y-this.dy;return t.s(r*e+l*n,r*s+l*o)}Tw(t){const i=1/(this.m11*this.m22-this.m12*this.m21),e=this.m22*i,s=-this.m12*i,n=-this.m21*i,o=this.m11*i,r=i*(this.m21*this.dy-this.m22*this.dx),l=i*(this.m12*this.dx-this.m11*this.dy),h=t.x*1.25,f=t.y*1.2;return t.s(h*e+f*n+r,h*s+f*o+l)}Yg(t){const i=t.x,e=t.y,s=i+t.width,n=e+t.height,o=this.m11,r=this.m12,l=this.m21,h=this.m22,f=this.dx,a=this.dy,c=i*o+e*l+f,u=i*r+e*h+a,d=s*o+e*l+f,m=s*r+e*h+a,g=i*o+n*l+f,p=i*r+n*h+a,w=s*o+n*l+f,x=s*r+n*h+a;let k=c,b=c,S=u,M=u;return k=Math.min(k,d),b=Math.max(b,d),S=Math.min(S,m),M=Math.max(M,m),k=Math.min(k,g),b=Math.max(b,g),S=Math.min(S,p),M=Math.max(M,p),k=Math.min(k,w),b=Math.max(b,w),S=Math.min(S,x),M=Math.max(M,x),t.s(k,S,b-k,M-S),t}static FC=[];static a(){const t=Transform.FC.pop();return t===void 0?new Transform:t}static o(t){Transform.FC.push(t)}static Zk=\"54a702f3e53909c447824c6706603faf4c\"}const Geo={oF:\"7da71ca0ad381e90\",zn:4*((Math.sqrt(2)-1)/3),RC:null,Dw:y=>{if(y<=0)return 0;let t=Geo.RC;if(t===null){t=[];for(let i=0;i<=2e3;i++)t[i]=Math.sqrt(i);Geo.RC=t}if(y<1){const i=1/y;return i<=2e3?1/t[i|0]:Math.sqrt(y)}else return y<=2e3?t[y|0]:Math.sqrt(y)},g:(y,t)=>{const i=y-t;return i<.5&&i>-.5},G:(y,t)=>{const i=y-t;return i<5e-8&&i>-5e-8},zi:(y,t,i,e,s,n,o)=>{s<=0&&(s=1e-6);let r=0,l=0,h=0,f=0;if(y<i?(l=y,r=i):(l=i,r=y),t<e?(f=t,h=e):(f=e,h=t),y===i)return f<=o&&o<=h&&y-s<=n&&n<=y+s;if(t===e)return l<=n&&n<=r&&t-s<=o&&o<=t+s;const a=r+s,c=l-s;if(c<=n&&n<=a){const u=h+s,d=f-s;if(d<=o&&o<=u)if(a-c>u-d)if(y-i>s||i-y>s){const g=(e-t)/(i-y)*(n-y)+t;if(g-s<=o&&o<=g+s)return!0}else return!0;else if(t-e>s||e-t>s){const g=(i-y)/(e-t)*(o-t)+y;if(g-s<=n&&n<=g+s)return!0}else return!0}return!1},Fw:(y,t,i,e,s,n,o,r,l,h,f,a)=>{if(!Geo.zi(y,t,o,r,a,i,e)||!Geo.zi(y,t,o,r,a,s,n)){const c=(y+i)/2,u=(t+e)/2,d=(i+s)/2,m=(e+n)/2,g=(s+o)/2,p=(n+r)/2,w=(c+d)/2,x=(u+m)/2,k=(d+g)/2,b=(m+p)/2,S=(w+k)/2,M=(x+b)/2;return Geo.Fw(y,t,c,u,w,x,S,M,l,h,f,a)||Geo.Fw(S,M,k,b,g,p,o,r,l,h,f,a)}else return Geo.zi(y,t,o,r,a,h,f)},IC:(y,t,i,e,s,n,o,r,l)=>{const h=(y+i)/2,f=(t+e)/2,a=(i+s)/2,c=(e+n)/2,u=(s+o)/2,d=(n+r)/2,m=(h+a)/2,g=(f+c)/2,p=(a+u)/2,w=(c+d)/2;return l.s((m+p)/2,(g+w)/2),l},rF:(y,t,i,e,s,n,o,r)=>{const l=(y+i)/2,h=(t+e)/2,f=(i+s)/2,a=(e+n)/2,c=(s+o)/2,u=(n+r)/2,d=(l+f)/2,m=(h+a)/2,g=(f+c)/2,p=(a+u)/2;return Point.direction(d,m,g,p)},cu:(y,t,i,e,s,n,o,r,l,h)=>{if(!Geo.zi(y,t,o,r,l,i,e)||!Geo.zi(y,t,o,r,l,s,n)){const f=(y+i)/2,a=(t+e)/2,c=(i+s)/2,u=(e+n)/2,d=(s+o)/2,m=(n+r)/2,g=(f+c)/2,p=(a+u)/2,w=(c+d)/2,x=(u+m)/2,k=(g+w)/2,b=(p+x)/2;Geo.cu(y,t,f,a,g,p,k,b,l,h),Geo.cu(k,b,w,x,d,m,o,r,l,h)}else h.unionNoCheck(y,t,0,0),h.unionNoCheck(o,r,0,0);return h},Xn:(y,t,i,e,s,n,o,r,l,h)=>{if(!Geo.zi(y,t,o,r,l,i,e)||!Geo.zi(y,t,o,r,l,s,n)){const f=(y+i)/2,a=(t+e)/2,c=(i+s)/2,u=(e+n)/2,d=(s+o)/2,m=(n+r)/2,g=(f+c)/2,p=(a+u)/2,w=(c+d)/2,x=(u+m)/2,k=(g+w)/2,b=(p+x)/2;Geo.Xn(y,t,f,a,g,p,k,b,l,h),Geo.Xn(k,b,w,x,d,m,o,r,l,h)}else h.length===0&&(h.push(y),h.push(t)),h.push(o),h.push(r);return h},Qk:(y,t,i,e,s,n,o,r,l,h)=>{if(Geo.zi(y,t,s,n,h,i,e))return Geo.zi(y,t,s,n,h,r,l);{const f=(y+i)/2,a=(t+e)/2,c=(i+s)/2,u=(e+n)/2,d=(f+c)/2,m=(a+u)/2;return Geo.Qk(y,t,f,a,d,m,o,r,l,h)||Geo.Qk(d,m,c,u,s,n,o,r,l,h)}},SE:(y,t,i,e,s,n,o)=>{const r=(y+i)/2,l=(t+e)/2,h=(i+s)/2,f=(e+n)/2;return o.s((r+h)/2,(l+f)/2),o},_k:(y,t,i,e,s,n,o,r)=>{if(Geo.zi(y,t,s,n,o,i,e))r.unionNoCheck(y,t,0,0),r.unionNoCheck(s,n,0,0);else{const l=(y+i)/2,h=(t+e)/2,f=(i+s)/2,a=(e+n)/2,c=(l+f)/2,u=(h+a)/2;Geo._k(y,t,l,h,c,u,o,r),Geo._k(c,u,f,a,s,n,o,r)}return r},Kg:(y,t,i,e,s,n,o,r)=>{if(Geo.zi(y,t,s,n,o,i,e))r.length===0&&(r.push(y),r.push(t)),r.push(s),r.push(n);else{const l=(y+i)/2,h=(t+e)/2,f=(i+s)/2,a=(e+n)/2,c=(l+f)/2,u=(h+a)/2;Geo.Kg(y,t,l,h,c,u,o,r),Geo.Kg(c,u,f,a,s,n,o,r)}return r},Ug:(y,t,i,e,s,n,o,r,l,h,f,a,c,u)=>{if(!Geo.zi(y,t,o,r,c,i,e)||!Geo.zi(y,t,o,r,c,s,n)){const d=(y+i)/2,m=(t+e)/2,g=(i+s)/2,p=(e+n)/2,w=(s+o)/2,x=(n+r)/2,k=(d+g)/2,b=(m+p)/2,S=(g+w)/2,M=(p+x)/2,A=(k+S)/2,C=(b+M)/2;let P=1/0,N=!1,T=0,L=0;if(Geo.Ug(y,t,d,m,k,b,A,C,l,h,f,a,c,u)){const D=(u.x-l)**2+(u.y-h)**2;D<P&&(P=D,N=!0,T=u.x,L=u.y)}if(Geo.Ug(A,C,S,M,w,x,o,r,l,h,f,a,c,u)){const D=(u.x-l)**2+(u.y-h)**2;D<P&&(P=D,N=!0,T=u.x,L=u.y)}return N&&(u.x=T,u.y=L),N}else{if(!Geo.au(y,t,o,r,l,h,f,a))return!1;const d=(y-o)*(h-a)-(t-r)*(l-f);if(d===0)return!1;const m=((y*r-t*o)*(l-f)-(y-o)*(l*a-h*f))/d,g=((y*r-t*o)*(h-a)-(t-r)*(l*a-h*f))/d;return u.s(m,g),!0}},Gg:(y,t,i,e,s,n,o,r,l,h,f,a,c)=>{let u=0;if(!Geo.zi(y,t,o,r,c,i,e)||!Geo.zi(y,t,o,r,c,s,n)){const d=(y+i)/2,m=(t+e)/2,g=(i+s)/2,p=(e+n)/2,w=(s+o)/2,x=(n+r)/2,k=(d+g)/2,b=(m+p)/2,S=(g+w)/2,M=(p+x)/2,A=(k+S)/2,C=(b+M)/2;u+=Geo.Gg(y,t,d,m,k,b,A,C,l,h,f,a,c),u+=Geo.Gg(A,C,S,M,w,x,o,r,l,h,f,a,c)}else{const d=(y-o)*(h-a)-(t-r)*(l-f);if(d===0)return u;const m=((y*r-t*o)*(l-f)-(y-o)*(l*a-h*f))/d,g=((y*r-t*o)*(h-a)-(t-r)*(l*a-h*f))/d;if(m>=f)return u;let p=0,w=0;if((l>f?l-f:f-l)<(h>a?h-a:a-h)){if(t<r?(p=t,w=r):(p=r,w=t),g<p||g>w)return u}else if(y<o?(p=y,w=o):(p=o,w=y),m<p||m>w)return u;d>0?u++:d<0&&u--}return u},xl:(y,t,i,e,s,n,o)=>{if(Geo.G(y,i)){let r=0,l=0;t<e?(r=t,l=e):(r=e,l=t);const h=n;return h<r?(o.s(y,r),!1):h>l?(o.s(y,l),!1):(o.s(y,h),!0)}else if(Geo.G(t,e)){let r=0,l=0;y<i?(r=y,l=i):(r=i,l=y);const h=s;return h<r?(o.s(r,t),!1):h>l?(o.s(l,t),!1):(o.s(h,t),!0)}else{const r=(i-y)**2+(e-t)**2,l=((y-s)*(y-i)+(t-n)*(t-e))/r;if(l<-5e-6)return o.s(y,t),!1;if(l>1.000005)return o.s(i,e),!1;{const h=y+l*(i-y),f=t+l*(e-t);return o.s(h,f),!0}}},Yn:(y,t,i,e,s,n,o,r,l)=>{if(Geo.g(y,i)&&Geo.g(t,e))return l.s(y,t),!1;if(Geo.G(s,o)){if(Geo.G(y,i))return Geo.xl(y,t,i,e,s,n,l),!1;{const f=(e-t)/(i-y)*(s-y)+t;return Geo.xl(y,t,i,e,s,f,l)}}else{const h=(r-n)/(o-s);if(Geo.G(y,i)){const f=h*(y-s)+n;let a=0,c=0;return t<e?(a=t,c=e):(a=e,c=t),f<a?(l.s(y,a),!1):f>c?(l.s(y,c),!1):(l.s(y,f),!0)}else{const f=(e-t)/(i-y);if(Geo.G(h,f))return Geo.xl(y,t,i,e,s,n,l),!1;{const a=(f*y-h*s+n-t)/(f-h);if(Geo.G(f,0)){let c=0,u=0;return y<i?(c=y,u=i):(c=i,u=y),a<c?(l.s(c,t),!1):a>u?(l.s(u,t),!1):(l.s(a,t),!0)}else{const c=f*(a-y)+t;return Geo.xl(y,t,i,e,a,c,l)}}}}},ME:(y,t,i,e,s)=>Geo.Yn(i.x,i.y,e.x,e.y,y.x,y.y,t.x,t.y,s),PE:(y,t,i,e,s,n,o,r,l,h)=>{let f=1/0;function a(S,M){const A=(S-y)**2+(M-t)**2;A<f&&(f=A,l.s(S,M))}a(l.x,l.y);let c=0,u=0,d=0,m=0;s<o?(c=s,u=o):(c=o,u=s),n<r?(d=s,m=o):(d=o,m=s);const g=u-c,p=m-d,w=g/2+h,x=p/2+h,k=(s+o)/2,b=(n+r)/2;if(w===0||x===0)return l;if(Geo.g(y,i)){const S=1-(i-k)**2/(w*w);if(S<0)return l;const M=Math.sqrt(S),A=x*M+b,C=-x*M+b;a(i,A),a(i,C)}else{const S=(e-t)/(i-y),M=1/(w*w)+S*S/(x*x),A=2*S*(t-S*y)/(x*x)-2*S*b/(x*x)-2*k/(w*w),C=2*S*y*b/(x*x)-2*t*b/(x*x)+b*b/(x*x)+k*k/(w*w)-1+(t-S*y)*(t-S*y)/(x*x),P=A*A-4*M*C;if(P<0)return l;const N=Math.sqrt(P),T=(-A+N)/(2*M);a(T,S*T-S*y+t);const L=(-A-N)/(2*M);a(L,S*L-S*y+t)}return l},bl:(y,t,i,e,s,n,o,r,l)=>{let h=1e21,f=y,a=t;if(Geo.Yn(y,t,y,e,s,n,o,r,l)){const c=(l.x-s)**2+(l.y-n)**2;c<h&&(h=c,f=l.x,a=l.y)}if(Geo.Yn(i,t,i,e,s,n,o,r,l)){const c=(l.x-s)**2+(l.y-n)**2;c<h&&(h=c,f=l.x,a=l.y)}if(Geo.Yn(y,t,i,t,s,n,o,r,l)){const c=(l.x-s)**2+(l.y-n)**2;c<h&&(h=c,f=l.x,a=l.y)}if(Geo.Yn(y,e,i,e,s,n,o,r,l)){const c=(l.x-s)**2+(l.y-n)**2;c<h&&(h=c,f=l.x,a=l.y)}return l.s(f,a),h<1e21},Rw:(y,t,i)=>Geo.CC(y.x,y.y,y.width,y.height,t.x,t.y,i.x,i.y),CC:(y,t,i,e,s,n,o,r)=>{const l=y,h=y+i,f=t,a=t+e;if(s===o){let c=0,u=0;return n<r?(c=n,u=r):(c=r,u=n),l<=s&&s<=h&&c<=a&&u>=f}if(n===r){let c=0,u=0;return s<o?(c=s,u=o):(c=o,u=s),f<=n&&n<=a&&c<=h&&u>=l}return!!(Rect.contains(y,t,i,e,s,n)||Rect.contains(y,t,i,e,o,r)||Geo.au(l,f,h,f,s,n,o,r)||Geo.au(h,f,h,a,s,n,o,r)||Geo.au(h,a,l,a,s,n,o,r)||Geo.au(l,a,l,f,s,n,o,r))},au:(y,t,i,e,s,n,o,r)=>y===i&&t===e&&s===o&&n===r?y===s&&t===n:Geo.hu(y,t,i,e,s,n)*Geo.hu(y,t,i,e,o,r)<=0&&Geo.hu(s,n,o,r,y,t)*Geo.hu(s,n,o,r,i,e)<=0,hu:(y,t,i,e,s,n)=>{const o=i-y,r=e-t;let l=s-y,h=n-t,f=l*r-h*o;return f===0&&(f=l*o+h*r,f>0&&(l-=o,h-=r,f=l*o+h*r,f<0&&(f=0))),f},Hg:y=>(y<0&&(y+=360),y>=360&&(y-=360),y),OC:(y,t,i,e,s,n)=>{const o=Math.PI;n||(e=e*(o/180),s=s*(o/180));const r=e>s?-1:1,l=1e-5,h=o*2,f=[],a=o/2;let c=e,u=Math.min(h,Math.abs(s-e));if(u<l){const d=c+r*Math.min(u,a),m=y+i*Math.cos(c),g=t+i*Math.sin(c),p=y+i*Math.cos(d),w=t+i*Math.sin(d),x=(m+p)/2,k=(g+w)/2;return f.push([m,g,x,k,x,k,p,w]),f}for(;u>l;){const d=c+r*Math.min(u,a);f.push(Geo.lF(i,c,d,y,t)),u-=Math.abs(d-c),c=d}return f},lF:(y,t,i,e,s)=>{const n=(i-t)/2,o=y*Math.cos(n),r=y*Math.sin(n),l=o,h=-r,f=l*l+h*h,a=f+l*o+h*r,c=4/3*(Math.sqrt(2*f*a)-a)/(l*r-h*o),u=l-c*h,d=h+c*l,m=u,g=-d,p=n+t,w=Math.cos(p),x=Math.sin(p);return[e+y*Math.cos(t),s+y*Math.sin(t),e+u*w-d*x,s+u*x+d*w,e+m*w-g*x,s+m*x+g*w,e+y*Math.cos(i),s+y*Math.sin(i)]},Vg:(y,t,i,e,s,n,o)=>{const r=s,l=n,h=Math.floor((y-i)/r)*r+i,f=Math.floor((t-e)/l)*l+e;let a=h;h+r-y<r/2&&(a=h+r);let c=f;return f+l-t<l/2&&(c=f+l),o.s(a,c),o},EC:(y,t)=>{let i=Math.max(y,t),e=Math.min(y,t),s=1,n=1;do s=i%e,n=e,i=e,e=s;while(s>0);return n},hF:(y,t,i,e)=>{const s=i<0,n=e<0;let o=0,r=0,l=0;y<t?(r=1,l=0):(r=0,l=1);let h=0,f=0,a=0,c=0;return o=r,h=o===0?y:t,a=o===0?i:e,(o===0?s:n)&&(a=-a),o=l,f=o===0?y:t,c=o===0?i:e,(o===0?s:n)&&(c=-c),Geo.aF(h,f,a,c,0,0)},aF:(y,t,i,e,s,n)=>{let o=0;if(e>0)if(i>0){const r=y*y,l=t*t,h=y*i,f=t*e;let a=-l+f,c=-l+Math.sqrt(h*h+f*f),u=a;const d=9999999999;for(let p=0;p<d&&(u=.5*(a+c),!(u===a||u===c));++p){const w=h/(u+r),x=f/(u+l),k=w*w+x*x-1;if(k>0)a=u;else if(k<0)c=u;else break}s=r*i/(u+r),n=l*e/(u+l);const m=s-i,g=n-e;o=Math.sqrt(m*m+g*g)}else s=0,n=t,o=Math.abs(e-t);else{const r=y*y-t*t,l=y*i;if(l<r){const h=l/r,f=h*h;s=y*h,n=t*Math.sqrt(Math.abs(1-f));const a=s-i;o=Math.sqrt(a*a+n*n)}else s=y,n=0,o=Math.abs(i-y)}return o},rn:new PropertyCollection,qg:new PropertyCollection,cr:new PropertyCollection,ur:0,Wg:100};Geo.za=Geo.oF;var GeometryType=(y=>(y[y.Line=1]=\"Line\",y[y.Rectangle=2]=\"Rectangle\",y[y.Ellipse=3]=\"Ellipse\",y[y.Path=4]=\"Path\",y))(GeometryType||{}),GeometryStretch=(y=>(y[y.None=0]=\"None\",y[y.Default=1]=\"Default\",y[y.Fill=2]=\"Fill\",y[y.Uniform=6]=\"Uniform\",y))(GeometryStretch||{});class Geometry{l;jg;vg;df;uu;du;Kn;Un;Gn;$;Me;Pe;ee;se;Vs;gf;mf;constructor(t){Debug&&arguments.length>1&&U.n(\"Geometry constructor can take at most one optional argument, the Geometry type.\"),GSet.Ji(this),this.l=2,t===void 0?t=4:Debug&&U.j(t,GeometryType,\"GeometryType\"),this.$=t,this.Me=0,this.Pe=0,this.ee=0,this.se=0,t===4?this.Vs=new List:this.Vs=Geometry.Iw,this.jg=this.Vs.at,this.vg=new Rect().p(),this.df=null,this.uu=null,this.du=NaN,this.Kn=Spot.TopLeft,this.Un=Spot.BottomRight,this.gf=NaN,this.mf=NaN,this.Gn=2}copy(){const t=new Geometry;if(t.l=this.l&-2,t.$=this.$,t.Me=this.Me,t.Pe=this.Pe,t.ee=this.ee,t.se=this.se,this.$===4){const i=this.Vs.h,e=t.Vs;for(let s=0;s<i.length;s++){const n=i[s];e.add(n.copy())}t.Vs=e}else t.Vs=this.Vs;return t.jg=this.jg,t.vg.c(this.vg),t.df=this.df,t.uu=this.uu,t.du=this.du,t.Kn=this.Kn.N(),t.Un=this.Un.N(),t.gf=this.gf,t.mf=this.mf,t.Gn=this.Gn,t}static Line=1;static Rectangle=2;static Ellipse=3;static Path=4;static Iw=new List().p();get f(){return(this.l&1)!==0}set f(t){t?this.l|=1:this.l&=-2}get Mt(){return(this.l&2)!==0}set Mt(t){t?this.l|=2:this.l&=-3}p(){if(this.f=!0,this.type!==4)return this;const t=this.figures;t.p();for(const i of t)i.p();return this}equalsApprox(t){if(!(t instanceof Geometry))return!1;if(this.type!==t.type)return this.type===1&&t.type===4?this.BC(t):t.type===1&&this.type===4?t.BC(this):!1;if(this.type===4){const i=this.figures.h,e=t.figures.h,s=i.length;if(s!==e.length)return!1;for(let n=0;n<s;n++){const o=i[n],r=e[n];if(!o.equalsApprox(r))return!1}return!0}else return Geo.g(this.startX,t.startX)&&Geo.g(this.startY,t.startY)&&Geo.g(this.endX,t.endX)&&Geo.g(this.endY,t.endY)}BC(t){if(this.type!==1||t.type!==4)return!1;if(t.figures.count===1){const i=t.figures.elt(0);if(i.segments.count===1&&Geo.g(this.startX,i.startX)&&Geo.g(this.startY,i.startY)){const e=i.segments.elt(0);if(e.type===2&&Geo.g(this.endX,e.endX)&&Geo.g(this.endY,e.endY))return!0}}return!1}static stringify(t){return t.toString()}static stringifyFixed(t){return U.i(t,\"number\",Geometry,\"stringifyFixed:digits\"),i=>i.toString(t)}ai(t){t in GeometryType?this.type=t:U.hr(this,t)}toString(t){t===void 0&&(t=-1);const i=s=>s===0?\"0\":s.toFixed(t);let e;switch(this.type){case 1:return t<0?\"M\"+this.startX.toString()+\" \"+this.startY.toString()+\"L\"+this.endX.toString()+\" \"+this.endY.toString():\"M\"+i(this.startX)+\" \"+i(this.startY)+\"L\"+i(this.endX)+\" \"+i(this.endY);case 2:return e=new Rect(this.startX,this.startY,0,0),e.union(this.endX,this.endY,0,0),t<0?\"M\"+e.x.toString()+\" \"+e.y.toString()+\"H\"+e.right.toString()+\"V\"+e.bottom.toString()+\"H\"+e.left.toString()+\"z\":\"M\"+i(e.x)+\" \"+i(e.y)+\"H\"+i(e.right)+\"V\"+i(e.bottom)+\"H\"+i(e.left)+\"z\";case 3:if(e=new Rect(this.startX,this.startY,0,0),e.union(this.endX,this.endY,0,0),t<0){const r=e.left.toString()+\" \"+(e.y+e.height/2).toString(),l=e.right.toString()+\" \"+(e.y+e.height/2).toString();return\"M\"+r+\"A\"+(e.width/2).toString()+\" \"+(e.height/2).toString()+\" 0 0 1 \"+l+\"A\"+(e.width/2).toString()+\" \"+(e.height/2).toString()+\" 0 0 1 \"+r}else{const r=i(e.left)+\" \"+i(e.y+e.height/2),l=i(e.right)+\" \"+i(e.y+e.height/2);return\"M\"+r+\"A\"+i(e.width/2)+\" \"+i(e.height/2)+\" 0 0 1 \"+l+\"A\"+i(e.width/2)+\" \"+i(e.height/2)+\" 0 0 1 \"+r}case 4:let s=\"\";const n=this.figures.h,o=n.length;for(let r=0;r<o;r++){const l=n[r];r>0&&(s+=\" x \"),l.isFilled&&(s+=\"F \"),s+=l.toString(t)}return s;default:return GeometryType[this.type]}}static fillPath(t){typeof t!=\"string\"&&U.Pi(t,\"string\",Geometry,\"fillPath:str\");const i=t.split(/[Xx]/),e=i.length;let s=\"\";for(let n=0;n<e;n++){const o=i[n];if(o.match(/[Ff]/)!==null){n===0?s+=o:s+=\"X\"+(o[0]===\" \"?\"\":\" \")+o;continue}s+=(n===0?\"\":\"X \")+\"F\"+(o[0]===\" \"?\"\":\" \")+o}return s}static Jg=\"UuBbMmZzLlHhVvCcSsQqTtAaFfXx\";static parse(t,i){i===void 0&&(i=!1),typeof t!=\"string\"&&U.Pi(t,\"string\",Geometry,\"parse:str\");const e=new RegExp(\"([\"+Geometry.Jg+\"])([\"+Geometry.Jg+\"])\",\"gm\"),s=new RegExp(\"([\"+Geometry.Jg+\"])([^s])\",\"gm\"),n=new RegExp(\"([^s])([\"+Geometry.Jg+\"])\",\"gm\");t=t.replace(/,/gm,\" \"),t=t.replace(e,\"$1 $2\"),t=t.replace(e,\"$1 $2\"),t=t.replace(s,\"$1 $2\"),t=t.replace(n,\"$1 $2\"),t=t.replace(/([0-9])([+\\-])/gm,\"$1 $2\"),t=t.replace(/[\\s\\r\\t\\n]+/gm,\" \"),t=t.replace(/^\\s+|\\s+$/g,\"\");const o=t.split(\" \");for(let T=0;T<o.length;T++){const L=o[T];if(L.match(/(\\.[0-9]*)(\\.)/gm)!==null){const D=U.lt();let F=\"\",I=!1;for(let R=0;R<L.length;R++){const O=L[R];O===\".\"&&!I?(I=!0,F+=O):O===\".\"?(D.push(F),F=\".\"):F+=O}D.push(F),o.splice(T,1);for(let R=0;R<D.length;R++)o.splice(T+R,0,D[R]);T+=D.length-1,U.tt(D)}}let r=-1,l=\"\",h=\"\";const f=new Point(0,0),a=new Point(0,0),c=new Point(0,0);let u=!0;function d(){return r>=k-1||o[r+1].match(P)!==null?!0:(u=!1,!1)}function m(){return r++,o[r]}function g(T){let L=parseFloat(m()),D=parseFloat(m());l===l.toLowerCase()&&(L=c.x+L,D=c.y+D),T.s(L,D)}function p(){return g(c),c}function w(){return g(a),a}function x(){const T=h.toLowerCase();return T===\"c\"||T===\"s\"||T===\"q\"||T===\"t\"?new Point(2*c.x-a.x,2*c.y-a.y):new Point(c.x,c.y)}const k=o.length,b=GeoStream.VC(null);let S=!1,M=!1,A=!1,C=!0;const P=new RegExp(\"[\"+Geometry.Jg+\"]\");for(;!(r>=k-1);){if(h=l,l=m(),l===\"\")continue;u=!0;let T=!1;switch(l.toUpperCase()){case\"X\":C=!0,S=!1,M=!1;break;case\"M\":const L=p();for(b.Ni===null||C===!0?(b.gu(L.x,L.y,S,!1,!M,A),C=!1):b.fF(L.x,L.y),f.c(c);!d();){const D=p();b.dr(D.x,D.y)}break;case\"L\":for(;!d();){const D=p();b.dr(D.x,D.y)}u&&(T=!0);break;case\"H\":for(;!d();)c.s((l===l.toLowerCase()?c.x:0)+parseFloat(m()),c.y),b.dr(c.x,c.y);break;case\"V\":for(;!d();)c.s(c.x,(l===l.toLowerCase()?c.y:0)+parseFloat(m())),b.dr(c.x,c.y);u&&(T=!0);break;case\"C\":for(;!d();){const D=new Point;g(D);const F=w(),I=p();b.gr(D.x,D.y,F.x,F.y,I.x,I.y)}u&&(T=!0);break;case\"S\":for(;!d();){const D=x(),F=w(),I=p();b.gr(D.x,D.y,F.x,F.y,I.x,I.y)}u&&(T=!0);break;case\"Q\":for(;!d();){const D=w(),F=p();b.Ow(D.x,D.y,F.x,F.y)}u&&(T=!0);break;case\"T\":for(;!d();){const D=x();a.c(D);const F=p();b.Ow(D.x,D.y,F.x,F.y),a.c(F)}u&&(T=!0);break;case\"B\":for(;!d();){const D=parseFloat(m()),F=parseFloat(m());let I=parseFloat(m()),R=parseFloat(m());const O=parseFloat(m());let Y=O,K=!1;d()||(Y=parseFloat(m()),d()||(K=parseFloat(m())!==0)),l===l.toLowerCase()&&(I+=c.x,R+=c.y),b.cF(D,F,I,R,O,Y,K)}u&&(T=!0);break;case\"A\":for(;!d();){const D=Math.abs(parseFloat(m())),F=Math.abs(parseFloat(m())),I=parseFloat(m());let R=!1,O=!1,Y=0,K=0;const B=m();B.length===1?(R=!!parseFloat(B),O=!!parseFloat(m()),Y=parseFloat(m()),K=parseFloat(m())):B.length===2?(R=!!parseFloat(B[0]),O=!!parseFloat(B[1]),Y=parseFloat(m()),K=parseFloat(m())):(R=!!parseFloat(B[0]),O=!!parseFloat(B[1]),Y=parseFloat(B.slice(2)),K=parseFloat(m())),l===l.toLowerCase()&&(Y=c.x+Y,K=c.y+K),c.s(Y,K),b.uF(D,F,I,R,O,Y,K)}u&&(T=!0);break;case\"Z\":b.dF(),c.c(f);break;case\"F\":{let D=\"\",F=1;for(;o[r+F];){if(o[r+F]===\"0\"){A=!0,F++;continue}if(o[r+F].match(/[Uu]/)!==null){F++;continue}if(o[r+F].match(P)===null){F++;continue}D=o[r+F];break}D.match(/[Mm]/)?S=!0:b.gF();break}case\"U\":{let D=\"\",F=1;for(;o[r+F];){if(o[r+F].match(/[Ff]/)!==null){F++;continue}if(o[r+F].match(P)===null){F++;continue}D=o[r+F];break}D.match(/[Mm]/)?M=!0:b.mF(!1);break}default:if(l===\"0\"||l===\"1\")break;U.nt(\"Unknown geometry command: \"+l);break}if(T){U.nt(`Bad geometry command: ${l}, next token: ${m()},\nstring: ${t}`);break}}const N=b.$g;if(GeoStream.zC(b),i){const T=N.figures.iterator;for(;T.next();){const L=T.value;L.isFilled=!0}}return N}static XC(t,i){const e=t.length,s=Point.a();for(let n=0;n<e;n++){const o=t[n];s.x=o[0],s.y=o[1],i.kt(s),o[0]=s.x,o[1]=s.y,s.x=o[2],s.y=o[3],i.kt(s),o[2]=s.x,o[3]=s.y,s.x=o[4],s.y=o[5],i.kt(s),o[4]=s.x,o[5]=s.y,s.x=o[6],s.y=o[7],i.kt(s),o[6]=s.x,o[7]=s.y}Point.o(s)}tS(){if(this.Mt)return!0;if(this.type===4){const t=this.figures;if(this.jg!==t.at)return!0;const i=this.figures.h,e=i.length;for(let s=0;s<e;s++)if(i[s].tS())return!0}return!1}Ew(){if(this.Mt=!1,this.df=null,this.uu=null,this.du=NaN,this.type===4){const i=this.figures;this.jg=i.at;const e=this.figures.h,s=e.length;for(let n=0;n<s;n++)e[n].pF()}const t=this.vg;t.At(),isNaN(this.gf)||isNaN(this.mf)?t.s(0,0,0,0):t.s(0,0,this.gf,this.mf),this.YC(t,!1),t.unionNoCheck(0,0,0,0),t.p()}computeBoundsWithoutOrigin(){const t=new Rect;return this.YC(t,!0),t}YC(t,i){switch(this.type){case 1:case 2:case 3:i?t.s(this.Me,this.Pe,0,0):t.unionNoCheck(this.Me,this.Pe,0,0),t.unionNoCheck(this.ee,this.se,0,0);break;case 4:const e=this.figures,s=e.h,n=e.length;for(let o=0;o<n;o++){const r=s[o];i&&o===0?t.s(r.startX,r.startY,0,0):t.unionNoCheck(r.startX,r.startY,0,0);const h=r.segments.h,f=h.length;let a=r.startX,c=r.startY;for(let u=0;u<f;u++){const d=h[u];switch(d.type){case 2:case 1:a=d.endX,c=d.endY,t.unionNoCheck(a,c,0,0);break;case 3:Geo.cu(a,c,d.point1X,d.point1Y,d.point2X,d.point2Y,d.endX,d.endY,.5,t),a=d.endX,c=d.endY;break;case 4:Geo._k(a,c,d.point1X,d.point1Y,d.endX,d.endY,.5,t),a=d.endX,c=d.endY;break;case 5:case 6:const m=d.type===5?d.Co(r):d.Hh(r,a,c),g=m.length;if(g===0){a=d.type===5?d.centerX:d.endX,c=d.type===5?d.centerY:d.endY,t.unionNoCheck(a,c,0,0);break}let p=null;for(let w=0;w<g;w++)p=m[w],Geo.cu(p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],.5,t);p!==null&&(a=p[6],c=p[7]);break;default:U.n(\"Unknown Segment type: \"+d.type)}}}break;default:U.n(\"Unknown Geometry type: \"+this.type)}}yF(t,i){const e=this.bounds;let s=t/e.width,n=i/e.height;return isFinite(s)||(s=1),isFinite(n)||(n=1),s===1&&n===1?this:this.copy().scale(s,n)}normalize(){this.f&&U.D(this);const t=this.computeBoundsWithoutOrigin();return this.offset(-t.x,-t.y),new Point(-t.x,-t.y)}offset(t,i){return this.f&&U.D(this),Debug&&(U.r(t,Geometry,\"offset\"),U.r(i,Geometry,\"offset\")),this.F(1,0,0,1,t,i),this}scale(t,i){return this.f&&U.D(this),Debug&&(U.r(t,Geometry,\"scale:x\"),U.r(i,Geometry,\"scale:y\"),t===0&&U.U(t,\"scale must be non-zero\",Geometry,\"scale:x\"),i===0&&U.U(i,\"scale must be non-zero\",Geometry,\"scale:y\")),this.F(t,0,0,i,0,0),this}rotate(t,i,e){this.f&&U.D(this),i===void 0&&(i=0),e===void 0&&(e=0),Debug&&(U.r(t,Geometry,\"rotate:angle\"),U.r(i,Geometry,\"rotate:x\"),U.r(e,Geometry,\"rotate:y\"));const s=Transform.a();return s.Vi(),s.ms(t,i,e),this.F(s.m11,s.m12,s.m21,s.m22,s.dx,s.dy),Transform.o(s),this}F(t,i,e,s,n,o){let r=0,l=0;switch(this.type){case 1:case 2:case 3:r=this.Me,l=this.Pe,this.Me=r*t+l*e+n,this.Pe=r*i+l*s+o,r=this.ee,l=this.se,this.ee=r*t+l*e+n,this.se=r*i+l*s+o;break;case 4:const f=this.figures.h,a=f.length;for(let c=0;c<a;c++){const u=f[c];r=u.startX,l=u.startY,u.startX=r*t+l*e+n,u.startY=r*i+l*s+o;const m=u.segments.h,g=m.length;for(let p=0;p<g;p++){const w=m[p];switch(w.type){case 2:case 1:r=w.endX,l=w.endY,w.endX=r*t+l*e+n,w.endY=r*i+l*s+o;break;case 3:r=w.point1X,l=w.point1Y,w.point1X=r*t+l*e+n,w.point1Y=r*i+l*s+o,r=w.point2X,l=w.point2Y,w.point2X=r*t+l*e+n,w.point2Y=r*i+l*s+o,r=w.endX,l=w.endY,w.endX=r*t+l*e+n,w.endY=r*i+l*s+o;break;case 4:r=w.point1X,l=w.point1Y,w.point1X=r*t+l*e+n,w.point1Y=r*i+l*s+o,r=w.endX,l=w.endY,w.endX=r*t+l*e+n,w.endY=r*i+l*s+o;break;case 5:if(r=w.centerX,l=w.centerY,w.centerX=r*t+l*e+n,w.centerY=r*i+l*s+o,i!==0){let x=Math.atan2(i,t)*180/Math.PI;x<0&&(x+=360),w.startAngle+=x}t<0&&(w.startAngle=180-w.startAngle,w.sweepAngle=-w.sweepAngle),s<0&&(w.startAngle=-w.startAngle,w.sweepAngle=-w.sweepAngle),w.radiusX*=Math.sqrt(t*t+e*e),w.radiusY!==void 0&&(w.radiusY*=Math.sqrt(i*i+s*s));break;case 6:if(r=w.endX,l=w.endY,w.endX=r*t+l*e+n,w.endY=r*i+l*s+o,w.radiusX===0||w.radiusY===0)break;if(i!==0){let x=Math.atan2(i,t)*180/Math.PI;x<0&&(x+=360),w.xAxisRotation+=x}t<0&&(w.xAxisRotation=180-w.xAxisRotation,w.isClockwiseArc=!w.isClockwiseArc),s<0&&(w.xAxisRotation=-w.xAxisRotation,w.isClockwiseArc=!w.isClockwiseArc),w.radiusX*=Math.sqrt(t*t+e*e),w.radiusY*=Math.sqrt(i*i+s*s);break;default:U.n(\"Unknown Segment type: \"+w.type)}}}break}return this.Mt=!0,this}containsPoint(t,i){i===void 0&&(i=0);const e=this.Me,s=this.Pe,n=this.ee,o=this.se;switch(this.type){case 1:return Geo.zi(e,s,n,o,i,t.x,t.y);case 2:{const r=Math.min(e,n)-i,l=Math.min(s,o)-i,h=Math.abs(n-e)+i*2,f=Math.abs(o-s)+i*2,a=Rect.K(r,l,h,f),c=a.containsPoint(t);return Rect.o(a),c}case 3:{let r=Math.min(e,n)-i,l=Math.min(s,o)-i;const h=Math.abs(n-e)+i*2,f=Math.abs(o-s)+i*2,a=h/2,c=f/2;return a<=0||c<=0?!1:(r=t.x-(r+a),l=t.y-(l+c),r*r/(a*a)+l*l/(c*c)<=1)}case 4:return this.iS(t,i,!0,!1);default:return!1}}iS(t,i,e,s){const n=t.x,o=t.y,r=this.bounds.x-20,l=o;let h=0,f=0,a=0,c=0,u=0,d=0;const m=this.figures.h,g=m.length;for(let p=0;p<g;p++){const w=m[p],x=!w.isEvenOdd;if(w.isFilled){if(e&&w.eS(n,o,i))return!0}else{if(w.eS(n,o,s?i:i+2))return!0;continue}const k=w.segments;f=w.startX,a=w.startY;let b=f,S=a;const M=k.h;for(let A=0;A<=k.length;A++){let C,P;switch(A!==k.length?(C=M[A],P=C.type,u=C.endX,d=C.endY):(P=2,u=b,d=S),P){case 1:{const N=this.Bw(n,o,r,l,f,a,b,S);if(isNaN(N))return!0;h+=N,b=u,S=d;break}case 2:{const N=this.Bw(n,o,r,l,f,a,u,d);if(isNaN(N))return!0;h+=N;break}case 3:c=Geo.Gg(f,a,C.point1X,C.point1Y,C.point2X,C.point2Y,u,d,r,l,n,o,.5),h+=c;break;case 4:{const N=(f+2*C.point1X)/3,T=(a+2*C.point1Y)/3,L=(C.point1X*2+u)/3,D=(C.point1Y*2+d)/3;c=Geo.Gg(f,a,N,T,L,D,u,d,r,l,n,o,.5),h+=c;break}case 5:case 6:{const N=C.type===5?C.Co(w):C.Hh(w,f,a),T=N.length;if(T===0){const D=this.Bw(n,o,r,l,f,a,C.type===5?C.centerX:C.endX,C.type===5?C.centerY:C.endY);if(isNaN(D))return!0;h+=D;break}let L=null;for(let D=0;D<T;D++){if(L=N[D],D===0){const F=this.Bw(n,o,r,l,f,a,L[0],L[1]);if(isNaN(F))return!0;h+=F}c=Geo.Gg(L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],r,l,n,o,.5),h+=c}L!==null&&(u=L[6],d=L[7]);break}default:U.n(\"Unknown Segment type: \"+C.type)}f=u,a=d}if(x){if(h!==0)return!0}else if(h%2!==0)return!0;h=0}return!1}Bw(t,i,e,s,n,o,r,l){if(Geo.zi(n,o,r,l,.05,t,i))return NaN;const h=(t-e)*(o-l);if(h===0)return 0;const f=((t*s-i*e)*(n-r)-(t-e)*(n*l-o*r))/h,a=(t*s-i*e)*(o-l)/h;if(f>=t)return 0;if((n>r?n-r:r-n)<(o>l?o-l:l-o)){if(o<l){if(a<o||a>l)return 0}else if(a<l||a>o)return 0}else if(n<r){if(f<n||f>r)return 0}else if(f<r||f>n)return 0;return h>0?1:-1}KC(t,i,e){const s=this.figures.h,n=s.length;for(let o=0;o<n;o++)if(s[o].eS(t,i,e))return!0;return!1}getPointAlongPath(t,i){if(t<0?t=0:t>1&&(t=1),i===void 0&&(i=new Point),this.type===1)return i.s(this.startX+t*(this.endX-this.startX),this.startY+t*(this.endY-this.startY)),i;const e=this.flattenedSegments,s=this.flattenedLengths,n=this.flattenedTotalLength,o=e.length,r=n*t;let l=0;for(let h=0;h<o;h++){const f=s[h],a=f.length;for(let c=0;c<a;c++){const u=f[c];if(l+u>=r){const d=r-l,m=u===0?0:d/u,g=e[h],p=g[c*2],w=g[c*2+1],x=g[c*2+2],k=g[c*2+3];return i.s(p+(x-p)*m,w+(k-w)*m),i}l+=u}}return i}getAngleAlongPath(t){if(t<0?t=0:t>1&&(t=1),this.type===1)return Math.atan2(this.endY-this.startY,this.endX-this.startX)*180/Math.PI;const i=this.flattenedSegments,e=this.flattenedLengths,s=this.flattenedTotalLength,n=i.length,o=s*t;let r=0;for(let l=0;l<n;l++){const h=e[l],f=h.length;for(let a=0;a<f;a++){const c=h[a];if(r+c>=o){const u=i[l],d=u[a*2],m=u[a*2+1],g=u[a*2+2],p=u[a*2+3];return Math.abs(g-d)<1&&Math.abs(p-m)<1?0:Math.abs(g-d)<1?p-m>=0?90:270:Math.abs(p-m)<1?g-d>=0?0:180:Math.atan2(p-m,g-d)*180/Math.PI}r+=c}}return NaN}getPointAndAngleAlongPath(t,i){if(t<0?t=0:t>1&&(t=1),i===void 0&&(i=[]),i.length=3,this.type===1)return i[0]=this.startX+t*(this.endX-this.startX),i[1]=this.startY+t*(this.endY-this.startY),i[2]=Math.atan2(this.endY-this.startY,this.endX-this.startX)*180/Math.PI,i;const e=this.flattenedSegments,s=this.flattenedLengths,n=this.flattenedTotalLength,o=e.length,r=n*t;let l=0;for(let h=0;h<o;h++){const f=s[h],a=f.length;for(let c=0;c<a;c++){const u=f[c];if(l+u>=r){const d=r-l,m=u===0?0:d/u,g=e[h],p=g[c*2],w=g[c*2+1],x=g[c*2+2],k=g[c*2+3];i[0]=p+(x-p)*m,i[1]=w+(k-w)*m;let b;return Math.abs(x-p)<1&&Math.abs(k-w)<1?b=0:Math.abs(x-p)<1?b=k-w>=0?90:270:Math.abs(k-w)<1?b=x-p>=0?0:180:b=Math.atan2(k-w,x-p)*180/Math.PI,i[2]=b,i}l+=u}}return i}getFractionForPoint(t){if(this.type===1){const i=this.startX,e=this.startY,s=this.endX,n=this.endY;if(i===s&&e===n)return 0;{const o=t.x,r=t.y;let l=0,h=0;if(i===s)return e<n?(l=e,h=n):(l=n,h=e),r<=l?l===e?0:1:r>=h?h===e?0:1:Math.abs(r-e)/(h-l);if(e===n)return i<s?(l=i,h=s):(l=s,h=i),o<=l?l===i?0:1:o>=h?h===i?0:1:Math.abs(o-i)/(h-l);{const f=(s-i)**2+(n-e)**2,a=Point.a();Geo.xl(i,e,s,n,o,r,a);const c=a.x,u=a.y;return Point.o(a),Math.sqrt(((c-i)**2+(u-e)**2)/f)}}}else if(this.type===2){const i=this.startX,e=this.startY,s=this.endX,n=this.endY;if(i===s&&e===n)return 0;{const o=s-i,r=n-e,l=o*2+r*2;let h=t.x,f=t.y;h=Math.min(Math.max(h,i),s),f=Math.min(Math.max(f,e),n);const a=Math.abs(h-i),c=Math.abs(h-s),u=Math.abs(f-e),d=Math.abs(f-n),m=Math.min(a,c,u,d);if(m===u)return h/l;if(m===c)return(o+f)/l;if(m===d)return(o*2+r-h)/l;if(m===a)return(o*2+r*2-f)/l}}else{const i=this.flattenedSegments,e=this.flattenedLengths,s=this.flattenedTotalLength,n=Point.a();let o=1/0,r=0,l=0;const h=i.length;let f=0,a=0;for(let u=0;u<h;u++){const d=i[u],m=e[u],g=d.length;for(let p=0;p<g;p+=2){const w=d[p],x=d[p+1];if(p===0){f=w,a=x;continue}Geo.xl(f,a,w,x,t.x,t.y,n);const k=(n.x-t.x)**2+(n.y-t.y)**2;k<o&&(o=k,r=l,r+=Math.sqrt((n.x-f)**2+(n.y-a)**2)),l+=m[(p-2)/2],f=w,a=x}}Point.o(n);const c=r/s;return c<0?0:c>1?1:c}return 0}get flattenedSegments(){return this.UC(),this.df}UC(){if(this.df===null){const t=this.df=[],i=this.uu=[];this.wF(t,i)}}get flattenedLengths(){return this.UC(),this.uu}get flattenedTotalLength(){let t=this.du;if(isNaN(t)){if(this.type===1){const i=Math.abs(this.endX-this.startX),e=Math.abs(this.endY-this.startY);t=Math.sqrt(i*i+e*e)}else if(this.type===2){const i=Math.abs(this.endX-this.startX),e=Math.abs(this.endY-this.startY);t=i*2+e*2}else{const i=this.flattenedLengths,e=i.length;t=0;for(let s=0;s<e;s++){const n=i[s],o=n.length;for(let r=0;r<o;r++)t+=n[r]}}this.du=t}return t}sS(t){const i=[];let e=0,s=0;const n=t.length;for(let o=0;o<n;o+=2){const r=t[o],l=t[o+1];if(o===0){e=r,s=l;continue}const h=Math.sqrt(Point.distanceSquared(e,s,r,l));i.push(h),e=r,s=l}return i}wF(t,i){let e=[];const s=[];if(this.type===1)e.push(this.startX),e.push(this.startY),e.push(this.endX),e.push(this.endY),t.push(e),s.push(Math.sqrt((this.startX-this.endX)**2+(this.startY-this.endY)**2)),i.push(s);else if(this.type===2)e.push(this.startX),e.push(this.startY),e.push(this.endX),e.push(this.startY),e.push(this.endX),e.push(this.endY),e.push(this.startX),e.push(this.endY),e.push(this.startX),e.push(this.startY),t.push(e),s.push(Math.abs(this.startX-this.endX)),s.push(Math.abs(this.startY-this.endY)),s.push(Math.abs(this.startX-this.endX)),s.push(Math.abs(this.startY-this.endY)),i.push(s);else if(this.type===3){const n=new PathFigure;n.startX=this.endX,n.startY=(this.startY+this.endY)/2;const o=new PathSegment(5);o.startAngle=0,o.sweepAngle=360,o.centerX=(this.startX+this.endX)/2,o.centerY=(this.startY+this.endY)/2,o.radiusX=Math.abs(this.startX-this.endX)/2,o.radiusY=Math.abs(this.startY-this.endY)/2,n.add(o);const r=o.Co(n),l=r.length;if(l===0)e.push(o.centerX),e.push(o.centerY);else{let h=n.startX,f=n.startY;for(let a=0;a<l;a++){const c=r[a];Geo.Xn(h,f,c[2],c[3],c[4],c[5],c[6],c[7],.5,e),h=c[6],f=c[7]}}t.push(e),i.push(this.sS(e))}else{const n=this.figures.iterator;for(;n.next();){const o=n.value;e=[],e.push(o.startX),e.push(o.startY);let r=o.startX,l=o.startY,h=r,f=l;const a=o.segments.h,c=a.length;for(let u=0;u<c;u++){const d=a[u];switch(d.type){case 1:e.length>=4&&(t.push(e),i.push(this.sS(e))),e=[],e.push(d.endX),e.push(d.endY),r=d.endX,l=d.endY,h=r,f=l;break;case 2:e.push(d.endX),e.push(d.endY),r=d.endX,l=d.endY;break;case 3:Geo.Xn(r,l,d.point1X,d.point1Y,d.point2X,d.point2Y,d.endX,d.endY,.5,e),r=d.endX,l=d.endY;break;case 4:Geo.Kg(r,l,d.point1X,d.point1Y,d.endX,d.endY,.5,e),r=d.endX,l=d.endY;break;case 5:{const m=d.Co(o),g=m.length;if(g===0){e.push(d.centerX),e.push(d.centerY),r=d.centerX,l=d.centerY;break}for(let p=0;p<g;p++){const w=m[p];Geo.Xn(r,l,w[2],w[3],w[4],w[5],w[6],w[7],.5,e),r=w[6],l=w[7]}break}case 6:{const m=d.Hh(o,r,l),g=m.length,p=d.endX,w=d.endY;if(g===0){e.push(p),e.push(w),r=p,l=w;break}for(let x=0;x<g;x++){const k=m[x];Geo.Xn(r,l,k[2],k[3],k[4],k[5],k[6],k[7],.5,e),r=k[6],l=k[7]}break}default:U.n(\"Segment not of valid type: \"+d.type)}d.isClosed&&(e.push(h),e.push(f))}e.length>=4&&(t.push(e),i.push(this.sS(e)))}}}get type(){return this.$}set type(t){this.$!==t&&(Debug&&U.j(t,GeometryType,\"GeometryType\"),this.f&&U.D(this,t),this.$=t,t===4?this.Vs=new List:(Geometry.Iw===null&&(Geometry.Iw=new List().p()),this.Vs=Geometry.Iw),this.Mt=!0)}get startX(){return this.Me}set startX(t){this.Me!==t&&(Debug&&U.r(t,Geometry,\"startX\"),this.f&&U.D(this,t),this.Me=t,this.Mt=!0)}get startY(){return this.Pe}set startY(t){this.Pe!==t&&(Debug&&U.r(t,Geometry,\"startY\"),this.f&&U.D(this,t),this.Pe=t,this.Mt=!0)}get endX(){return this.ee}set endX(t){this.ee!==t&&(Debug&&U.r(t,Geometry,\"endX\"),this.f&&U.D(this,t),this.ee=t,this.Mt=!0)}get endY(){return this.se}set endY(t){this.se!==t&&(Debug&&U.r(t,Geometry,\"endY\"),this.f&&U.D(this,t),this.se=t,this.Mt=!0)}get figures(){return this.Vs}set figures(t){this.Vs!==t&&(Debug&&U.e(t,List,Geometry,\"figures\"),this.f&&U.D(this,t),this.Vs=t,this.Mt=!0)}add(t){return Debug&&U.e(t,PathFigure,Geometry,\"add\"),this.Vs.add(t),this}setSpots(t,i,e,s,n,o,r,l){return this.f&&U.D(this),this.Kn=new Spot(t,i,n,o).p(),this.Un=new Spot(e,s,r,l).p(),this}get spot1(){return this.Kn}set spot1(t){Debug&&U.e(t,Spot,Geometry,\"spot1\"),this.f&&U.D(this,t),this.Kn=t.N()}get spot2(){return this.Un}set spot2(t){Debug&&U.e(t,Spot,Geometry,\"spot2\"),this.f&&U.D(this,t),this.Un=t.N()}get defaultStretch(){return this.Gn}set defaultStretch(t){this.Gn=t}get bounds(){return this.tS()&&this.Ew(),this.vg}}Geometry.stringify=Geometry.stringify,Geometry.stringifyFixed=Geometry.stringifyFixed,Geometry.fillPath=Geometry.fillPath,Geometry.parse=Geometry.parse;class PathFigure{l;Me;Pe;pf;Zg;Ke;constructor(t,i,e,s,n){e===void 0&&(e=!0),s===void 0&&(s=!0),n===void 0&&(n=!1),this.l=2|(e?4:0)|(s?8:0)|(n?16:0),t!==void 0?(Debug&&U.r(t,PathFigure,\"sx\"),this.Me=t):this.Me=0,i!==void 0?(Debug&&U.r(i,PathFigure,\"sy\"),this.Pe=i):this.Pe=0,this.pf=new List,this.Zg=this.pf.at,this.Ke=null}copy(){const t=new PathFigure;t.l=this.l&-2,t.Me=this.Me,t.Pe=this.Pe;const i=this.pf.h,e=i.length,s=t.pf;for(let n=0;n<e;n++){const r=i[n].copy();s.add(r)}return t.Zg=this.Zg,t.Ke=this.Ke,t}equalsApprox(t){if(!(t instanceof PathFigure)||!Geo.g(this.startX,t.startX)||!Geo.g(this.startY,t.startY))return!1;const i=this.segments.h,e=t.segments.h,s=i.length;if(s!==e.length)return!1;for(let n=0;n<s;n++){const o=i[n],r=e[n];if(!o.equalsApprox(r))return!1}return!0}toString(t){t===void 0&&(t=-1);let i=\"\";if(t<0)i=\"M\"+this.startX.toString()+\" \"+this.startY.toString();else{const n=o=>o===0?\"0\":o.toFixed(t);i=\"M\"+n(this.startX)+\" \"+n(this.startY)}const e=this.segments.h,s=e.length;for(let n=0;n<s;n++){const o=e[n];i+=\" \"+o.toString(t)}return i}get f(){return(this.l&1)!==0}set f(t){t?this.l|=1:this.l&=-2}get Mt(){return(this.l&2)!==0}set Mt(t){t?this.l|=2:this.l&=-3}p(){this.f=!0;const t=this.segments;t.p();const i=t.h,e=t.length;for(let s=0;s<e;s++)i[s].p();return this}tS(){if(this.Mt)return!0;const t=this.segments;if(this.Zg!==t.at)return!0;for(const i of t)if(i.Mt)return!0;return!1}pF(){this.Mt=!1,this.Ke=null;const t=this.segments;this.Zg=t.at;for(const i of t)i.Mt=!1,i.zs=null}get isFilled(){return(this.l&4)!==0}set isFilled(t){Debug&&U.i(t,\"boolean\",PathFigure,\"isFilled\"),this.f&&U.D(this,t),t?this.l|=4:this.l&=-5}get isShadowed(){return(this.l&8)!==0}set isShadowed(t){Debug&&U.i(t,\"boolean\",PathFigure,\"isShadowed\"),this.f&&U.D(this,t),t?this.l|=8:this.l&=-9}get isEvenOdd(){return(this.l&16)!==0}set isEvenOdd(t){Debug&&U.i(t,\"boolean\",PathFigure,\"isEvenOdd\"),this.f&&U.D(this,t),t?this.l|=16:this.l&=-17}get startX(){return this.Me}set startX(t){Debug&&U.r(t,PathFigure,\"startX\"),this.f&&U.D(this,t),this.Me=t,this.Ke=null,this.Mt=!0}get startY(){return this.Pe}set startY(t){Debug&&U.r(t,PathFigure,\"startY\"),this.f&&U.D(this,t),this.Pe=t,this.Ke=null,this.Mt=!0}get segments(){return this.pf}set segments(t){Debug&&U.e(t,List,PathFigure,\"segments\"),this.f&&U.D(this,t),this.pf=t,this.Ke=null,this.Mt=!0}add(t){return Debug&&U.e(t,PathSegment,PathFigure,\"add\"),this.pf.add(t),this.Ke=null,this}eS(t,i,e){const s=this;let n=s.startX,o=s.startY,r=n,l=o;const h=s.segments.h,f=h.length;for(let a=0;a<f;a++){const c=h[a];switch(c.type){case 1:r=c.endX,l=c.endY,n=c.endX,o=c.endY;break;case 2:if(Geo.zi(n,o,c.endX,c.endY,e,t,i))return!0;n=c.endX,o=c.endY;break;case 3:if(Geo.Fw(n,o,c.point1X,c.point1Y,c.point2X,c.point2Y,c.endX,c.endY,.5,t,i,e))return!0;n=c.endX,o=c.endY;break;case 4:if(Geo.Qk(n,o,c.point1X,c.point1Y,c.endX,c.endY,.5,t,i,e))return!0;n=c.endX,o=c.endY;break;case 5:case 6:const u=c.type===5?c.Co(s):c.Hh(s,n,o),d=u.length,m=c.type===5?c.centerX:c.endX,g=c.type===5?c.centerY:c.endY;if(d===0){if(Geo.zi(n,o,m,g,e,t,i))return!0;n=m,o=g;break}let p=null;for(let w=0;w<d;w++)if(p=u[w],w===0&&Geo.zi(n,o,p[0],p[1],e,t,i)||Geo.Fw(p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],.5,t,i,e))return!0;p!==null&&(n=p[6],o=p[7]);break;default:U.n(\"Unknown Segment type: \"+c.type)}if(c.isClosed&&(n!==r||o!==l)&&Geo.zi(n,o,r,l,e,t,i))return!0}return!1}}var SegmentType=(y=>(y[y.Move=1]=\"Move\",y[y.Line=2]=\"Line\",y[y.Bezier=3]=\"Bezier\",y[y.QuadraticBezier=4]=\"QuadraticBezier\",y[y.Arc=5]=\"Arc\",y[y.SvgArc=6]=\"SvgArc\",y))(SegmentType||{});class PathSegment{$;l;ee;se;ln;kl;Sl;pr;zs;constructor(t,i,e,s,n,o,r,l){if(GSet.Ji(this),t===void 0?t=2:Debug&&U.j(t,SegmentType,\"SegmentType\"),this.$=t,this.l=2,i!==void 0?(Debug&&U.r(i,PathSegment,\"ex\"),this.ee=i):this.ee=0,e!==void 0?(Debug&&U.r(e,PathSegment,\"ey\"),this.se=e):this.se=0,s===void 0&&(s=0),n===void 0&&(n=0),o===void 0&&(o=0),r===void 0&&(r=0),t===6){let h=o;h=h%360,h<0&&(h+=360),this.ln=h,this.kl=0,Debug&&U.r(s,PathSegment,\"x1\"),this.Sl=Math.max(s,0),Debug&&U.r(n,PathSegment,\"y1\"),this.pr=Math.max(n,0),typeof r==\"boolean\"?r&&(this.isLargeArc=!0):typeof r==\"number\"&&r&&(this.isLargeArc=!0),l&&(this.isClockwiseArc=!0)}else Debug&&U.r(s,PathSegment,\"x1\"),this.ln=s,Debug&&U.r(n,PathSegment,\"y1\"),this.kl=n,Debug&&U.r(o,PathSegment,\"x2\"),t===5&&(o=Math.max(o,0)),this.Sl=o,typeof r==\"number\"?(t===5&&(r=Math.max(r,0)),this.pr=r):this.pr=0;this.zs=null}copy(){const t=new PathSegment;return t.$=this.$,t.l=this.l&-2,t.ee=this.ee,t.se=this.se,t.ln=this.ln,t.kl=this.kl,t.Sl=this.Sl,t.pr=this.pr,t}equalsApprox(t){if(!(t instanceof PathSegment)||this.type!==t.type||this.isClosed!==t.isClosed)return!1;switch(this.type){case 1:case 2:return Geo.g(this.endX,t.endX)&&Geo.g(this.endY,t.endY);case 3:return Geo.g(this.endX,t.endX)&&Geo.g(this.endY,t.endY)&&Geo.g(this.point1X,t.point1X)&&Geo.g(this.point1Y,t.point1Y)&&Geo.g(this.point2X,t.point2X)&&Geo.g(this.point2Y,t.point2Y);case 4:return Geo.g(this.endX,t.endX)&&Geo.g(this.endY,t.endY)&&Geo.g(this.point1X,t.point1X)&&Geo.g(this.point1Y,t.point1Y);case 5:return Geo.g(this.startAngle,t.startAngle)&&Geo.g(this.sweepAngle,t.sweepAngle)&&Geo.g(this.centerX,t.centerX)&&Geo.g(this.centerY,t.centerY)&&Geo.g(this.radiusX,t.radiusX)&&Geo.g(this.radiusY,t.radiusY);case 6:return this.isClockwiseArc===t.isClockwiseArc&&this.isLargeArc===t.isLargeArc&&Geo.g(this.xAxisRotation,t.xAxisRotation)&&Geo.g(this.endX,t.endX)&&Geo.g(this.endY,t.endY)&&Geo.g(this.radiusX,t.radiusX)&&Geo.g(this.radiusY,t.radiusY);default:return!1}}ai(t){t in SegmentType?this.type=t:U.hr(this,t)}toString(t){t===void 0&&(t=-1);const i=s=>s===0?\"0\":s.toFixed(t);let e=\"\";switch(this.type){case 1:t<0?e=\"M\"+this.endX.toString()+\" \"+this.endY.toString():e=\"M\"+i(this.endX)+\" \"+i(this.endY);break;case 2:t<0?e=\"L\"+this.endX.toString()+\" \"+this.endY.toString():e=\"L\"+i(this.endX)+\" \"+i(this.endY);break;case 3:t<0?e=\"C\"+this.point1X.toString()+\" \"+this.point1Y.toString()+\" \"+this.point2X.toString()+\" \"+this.point2Y.toString()+\" \"+this.endX.toString()+\" \"+this.endY.toString():e=\"C\"+i(this.point1X)+\" \"+i(this.point1Y)+\" \"+i(this.point2X)+\" \"+i(this.point2Y)+\" \"+i(this.endX)+\" \"+i(this.endY);break;case 4:t<0?e=\"Q\"+this.point1X.toString()+\" \"+this.point1Y.toString()+\" \"+this.endX.toString()+\" \"+this.endY.toString():e=\"Q\"+i(this.point1X)+\" \"+i(this.point1Y)+\" \"+i(this.endX)+\" \"+i(this.endY);break;case 5:t<0?e=\"B\"+this.startAngle.toString()+\" \"+this.sweepAngle.toString()+\" \"+this.centerX.toString()+\" \"+this.centerY.toString()+\" \"+this.radiusX.toString()+\" \"+this.radiusY.toString():e=\"B\"+i(this.startAngle)+\" \"+i(this.sweepAngle)+\" \"+i(this.centerX)+\" \"+i(this.centerY)+\" \"+i(this.radiusX)+\" \"+i(this.radiusY);break;case 6:t<0?e=\"A\"+this.radiusX.toString()+\" \"+this.radiusY.toString()+\" \"+this.xAxisRotation.toString()+\" \"+(this.isLargeArc?1:0)+\" \"+(this.isClockwiseArc?1:0)+\" \"+this.endX.toString()+\" \"+this.endY.toString():e=\"A\"+i(this.radiusX)+\" \"+i(this.radiusY)+\" \"+i(this.xAxisRotation)+\" \"+(this.isLargeArc?1:0)+\" \"+(this.isClockwiseArc?1:0)+\" \"+i(this.endX)+\" \"+i(this.endY);break;default:e=SegmentType[this.type]}return e+(this.isClosed?\"z\":\"\")}static Move=1;static Line=2;static Bezier=3;static QuadraticBezier=4;static Arc=5;static SvgArc=6;get f(){return(this.l&1)!==0}set f(t){t?this.l|=1:this.l&=-2}get Mt(){return(this.l&2)!==0}set Mt(t){t?this.l|=2:this.l&=-3}p(){return this.f=!0,this}close(){return this.isClosed=!0,this}Co(t){if(this.zs!==null&&t.Mt===!1)return this.zs;const i=this.radiusX;let e=this.radiusY;if(e===void 0&&(e=i),i===0||e===0)return this.zs=[],this.zs;const s=this.ln,n=this.kl,o=Geo.OC(0,0,i<e?i:e,this.startAngle,this.startAngle+this.sweepAngle,!1);if(i!==e){const l=Transform.a();l.Vi(),i<e?l.ot(1,e/i):l.ot(i/e,1),Geometry.XC(o,l),Transform.o(l)}const r=o.length;for(let l=0;l<r;l++){const h=o[l];h[0]+=s,h[1]+=n,h[2]+=s,h[3]+=n,h[4]+=s,h[5]+=n,h[6]+=s,h[7]+=n}return this.zs=o,this.zs}Hh(t,i,e){if(this.zs!==null&&t.Mt===!1)return this.zs;if(this.radiusX===0||this.radiusY===0)return this.zs=[],this.zs;const s=i,n=e;let o=this.Sl,r=this.pr;o===0&&(o=1e-4),r===0&&(r=1e-4);const l=this.ln*(Math.PI/180),h=this.isLargeArc,f=this.isClockwiseArc,a=this.ee,c=this.se,u=Math.cos(l),d=Math.sin(l),m=u*(s-a)/2+d*(n-c)/2,g=-d*(s-a)/2+u*(n-c)/2,p=m*m/(o*o)+g*g/(r*r);p>1&&(o*=Math.sqrt(p),r*=Math.sqrt(p));let w=(h===f?-1:1)*Math.sqrt((o*o*r*r-o*o*g*g-r*r*m*m)/(o*o*g*g+r*r*m*m));isNaN(w)&&(w=0);let x=w*o*g/r,k=w*-r*m/o;isNaN(x)&&(x=0),isNaN(k)&&(k=0);const b=(s+a)/2+u*x-d*k,S=(n+c)/2+d*x+u*k,M=(z,V)=>Math.sqrt(z*z+V*V),A=(z,V,H,W)=>(z*H+V*W)/(M(z,V)*M(H,W)),C=(z,V,H,W)=>(z*W<V*H?-1:1)*Math.acos(A(z,V,H,W)),P=C(1,0,(m-x)/o,(g-k)/r),N=(m-x)/o,T=(g-k)/r,L=(-m-x)/o,D=(-g-k)/r;let F=C(N,T,L,D);const I=A(N,T,L,D);I<=-1?F=Math.PI:I>=1&&(F=0),!f&&F>0&&(F=F-2*Math.PI),f&&F<0&&(F=F+2*Math.PI);const R=o>r?o:r,O=o>r?1:o/r,Y=o>r?r/o:1,K=Geo.OC(0,0,R,P,P+F,!0),B=Transform.a();return B.Vi(),B.Bs(b,S),B.ms(this.ln,0,0),B.ot(O,Y),Geometry.XC(K,B),Transform.o(B),this.zs=K,this.zs}get isClosed(){return(this.l&8)!==0}set isClosed(t){this.isClosed!==t&&(t?this.l|=8:this.l&=-9,this.Mt=!0)}get type(){return this.$}set type(t){Debug&&U.j(t,SegmentType,\"SegmentType\"),this.f&&U.D(this,t),this.$=t,this.Mt=!0}get endX(){return this.ee}set endX(t){Debug&&U.r(t,PathSegment,\"endX\"),this.f&&U.D(this,t),this.ee=t,this.Mt=!0}get endY(){return this.se}set endY(t){Debug&&U.r(t,PathSegment,\"endY\"),this.f&&U.D(this,t),this.se=t,this.Mt=!0}get point1X(){return this.ln}set point1X(t){Debug&&U.r(t,PathSegment,\"point1X\"),this.f&&U.D(this,t),this.ln=t,this.Mt=!0}get point1Y(){return this.kl}set point1Y(t){Debug&&U.r(t,PathSegment,\"point1Y\"),this.f&&U.D(this,t),this.kl=t,this.Mt=!0}get point2X(){return this.Sl}set point2X(t){Debug&&U.r(t,PathSegment,\"point2X\"),this.f&&U.D(this,t),this.Sl=t,this.Mt=!0}get point2Y(){return this.pr}set point2Y(t){Debug&&U.r(t,PathSegment,\"point2Y\"),this.f&&U.D(this,t),this.pr=t,this.Mt=!0}get centerX(){return this.ln}set centerX(t){Debug&&U.r(t,PathSegment,\"centerX\"),this.f&&U.D(this,t),this.ln=t,this.Mt=!0}get centerY(){return this.kl}set centerY(t){Debug&&U.r(t,PathSegment,\"centerY\"),this.f&&U.D(this,t),this.kl=t,this.Mt=!0}get radiusX(){return this.Sl}set radiusX(t){Debug&&U.r(t,PathSegment,\"radiusX\"),t<0&&U.U(t,\">= zero\",PathSegment,\"radiusX\"),this.f&&U.D(this,t),this.Sl=t,this.Mt=!0}get radiusY(){return this.pr}set radiusY(t){Debug&&U.r(t,PathSegment,\"radiusY\"),t<0&&U.U(t,\">= zero\",PathSegment,\"radiusY\"),this.f&&U.D(this,t),this.pr=t,this.Mt=!0}get startAngle(){return this.ee}set startAngle(t){Debug&&U.r(t,PathSegment,\"startAngle\"),this.f&&U.D(this,t),t=t%360,t<0&&(t+=360),this.ee=t,this.Mt=!0}get sweepAngle(){return this.se}set sweepAngle(t){Debug&&U.r(t,PathSegment,\"sweepAngle\"),this.f&&U.D(this,t),t>360&&(t=360),t<-360&&(t=-360),this.se=t,this.Mt=!0}get isClockwiseArc(){return(this.l&4)!==0}set isClockwiseArc(t){this.f&&U.D(this,t),t?this.l|=4:this.l&=-5,this.Mt=!0}get isLargeArc(){return(this.l&16)!==0}set isLargeArc(t){this.f&&U.D(this,t),t?this.l|=16:this.l&=-17,this.Mt=!0}get xAxisRotation(){return this.ln}set xAxisRotation(t){Debug&&U.r(t,PathSegment,\"xAxisRotation\"),this.f&&U.D(this,t),t=t%360,t<0&&(t+=360),this.ln=t,this.Mt=!0}}class InputEvent{C;Vw;zw;Qg;_g;tm;im;em;sm;nm;om;rm;lm;hm;Ao;am;fm;cm;Ne;constructor(){this.C=null,this.Vw=new Point(0,0).p(),this.zw=new Point(0,0).p(),this.Qg=0,this._g=0,this.tm=1,this.im=\"\",this.em=\"\",this.sm=!1,this.nm=!1,this.om=0,this.rm=0,this.lm=!1,this.hm=!1,this.Ao=!1,this.am=null,this.fm=0,this.cm=null,this.Ne=null}copy(){const t=new InputEvent;return this.clone(t)}clone(t){return t.C=this.C,t.Vw.c(this.viewPoint),t.zw.c(this.documentPoint),t.Qg=this.Qg,t._g=this._g,t.tm=this.tm,t.im=this.im,t.em=this.em,t.sm=this.sm,t.nm=this.nm,t.om=this.om,t.rm=this.rm,t.lm=this.lm,t.hm=this.hm,t.Ao=this.Ao,t.am=this.am,t.fm=this.fm,t.cm=this.cm,t.Ne=this.Ne,t}toString(){let t=\"^\";return this.modifiers!==0&&(t+=\"M:\"+this.modifiers),this.button!==0&&(t+=\"B:\"+this.button),this.key!==\"\"&&(t+=\"K:\"+this.key),this.clickCount!==0&&(t+=\"C:\"+this.clickCount),this.delta!==0&&(t+=\"D:\"+this.delta),this.handled&&(t+=\"h\"),this.bubbles&&(t+=\"b\"),this.documentPoint!==null&&(t+=\"@\"+this.documentPoint.toString()),t}get diagram(){return this.C}set diagram(t){this.C=t}get viewPoint(){return this.Vw}set viewPoint(t){Debug&&U.e(t,Point,InputEvent,\"viewPoint\"),this.Vw.c(t)}get documentPoint(){return this.zw}set documentPoint(t){Debug&&U.e(t,Point,InputEvent,\"documentPoint\"),this.zw.c(t)}getMultiTouchViewPoint(t,i){const e=this.diagram;return e===null||e.GC(this.event,t,i),i}getMultiTouchDocumentPoint(t,i){const e=this.diagram;return e===null||(e.GC(this.event,t,i),i.c(e.transformViewToDoc(i))),i}get modifiers(){return this.Qg}set modifiers(t){this.Qg=t}get button(){return this._g}set button(t){if(this._g=t,this.event===null)switch(t){case 0:this.buttons=1;return;case 1:this.buttons=4;return;case 2:this.buttons=2;return}}get buttons(){return this.tm}set buttons(t){this.tm=t}get key(){return this.im}set key(t){this.im=t}get code(){return this.em}set code(t){this.em=t}get down(){return this.sm}set down(t){this.sm=t}get up(){return this.nm}set up(t){this.nm=t}get clickCount(){return this.om}set clickCount(t){this.om=t}get delta(){return this.rm}set delta(t){this.rm=t}get isMultiTouch(){return this.lm}set isMultiTouch(t){this.lm=t}get handled(){return this.hm}set handled(t){this.hm=t}get bubbles(){return this.Ao}set bubbles(t){this.Ao=t}get event(){return this.am}set event(t){this.am=t}get isTouchEvent(){const t=this.event;return t===null?!1:t.pointerType===\"touch\"||t.pointerType===\"pen\"}get timestamp(){return this.fm}set timestamp(t){this.fm=t}get targetDiagram(){return this.cm}set targetDiagram(t){this.cm=t}get targetObject(){return this.Ne}set targetObject(t){this.Ne=t}get control(){return(this.modifiers&1)!==0}set control(t){this.modifiers=t?this.modifiers|1:this.modifiers&-2}get shift(){return(this.modifiers&4)!==0}set shift(t){this.modifiers=t?this.modifiers|4:this.modifiers&-5}get alt(){return(this.modifiers&2)!==0}set alt(t){this.modifiers=t?this.modifiers|2:this.modifiers&-3}get meta(){return(this.modifiers&8)!==0}set meta(t){this.modifiers=t?this.modifiers|8:this.modifiers&-9}get left(){const t=this.event;return t!==null&&(t.type===\"mousedown\"||t.type===\"mouseup\"||t.type===\"pointerdown\"||t.type===\"pointerup\")?this.button===0:(this.buttons&1)!==0}set left(t){t?this.buttons|=1:this.buttons&=-2}get right(){const t=this.event;return t!==null&&(t.type===\"mousedown\"||t.type===\"mouseup\"||t.type===\"pointerdown\"||t.type===\"pointerup\")?this.button===2:(this.buttons&2)!==0}set right(t){t?this.buttons|=2:this.buttons&=-3}get middle(){const t=this.event;return t!==null&&(t.type===\"mousedown\"||t.type===\"mouseup\"||t.type===\"pointerdown\"||t.type===\"pointerup\")?this.button===1:(this.buttons&4)!==0}set middle(t){t?this.buttons|=4:this.buttons&=-5}get commandKey(){const t=this.code,i=this.key;return\"cxvyzagCXVYZAG\".includes(i)?i.toLowerCase():t===\"KeyC\"?\"c\":t===\"KeyX\"?\"x\":t===\"KeyV\"?\"v\":t===\"KeyY\"?\"y\":t===\"KeyZ\"?\"z\":t===\"KeyA\"?\"a\":t===\"KeyG\"?\"g\":t!==\"\"?t:i}}class DiagramEvent{C;Lt;um;dm;constructor(){this.C=null,this.Lt=\"\",this.um=null,this.dm=null}copy(){const t=new DiagramEvent;return t.C=this.C,t.Lt=this.Lt,t.um=this.um,t.dm=this.dm,t}toString(){let t=\"*\"+this.name;return this.subject!==null&&(t+=\":\"+this.subject.toString()),this.parameter!==null&&(t+=\"(\"+this.parameter.toString()+\")\"),t}get diagram(){return this.C}set diagram(t){this.C=t}get name(){return this.Lt}set name(t){this.Lt=t}get subject(){return this.um}set subject(t){this.um=t}get parameter(){return this.dm}set parameter(t){this.dm=t}}var ChangeType=(y=>(y[y.Transaction=1]=\"Transaction\",y[y.Property=2]=\"Property\",y[y.Insert=3]=\"Insert\",y[y.Remove=4]=\"Remove\",y))(ChangeType||{});class ChangedEvent{mu;gm;hn;Ci;C;pu;yf;wf;xf;bf;constructor(){this.mu=2,this.gm=\"\",this.hn=\"\",this.Ci=null,this.C=null,this.pu=null,this.yf=null,this.wf=null,this.xf=null,this.bf=null}static Transaction=1;static Property=2;static Insert=3;static Remove=4;clear(){this.Ci=null,this.C=null,this.pu=null,this.yf=null,this.wf=null,this.xf=null,this.bf=null}copy(){const t=new ChangedEvent;t.mu=this.mu,t.gm=this.gm,t.hn=this.hn,t.Ci=this.Ci,t.C=this.C,t.pu=this.pu;let i=this.yf;return U.W(i)&&U.rt(i.copyFrozen)?t.yf=i.copyFrozen():t.yf=i,i=this.wf,U.W(i)&&U.rt(i.copyFrozen)?t.wf=i.copyFrozen():t.wf=i,i=this.xf,U.W(i)&&U.rt(i.copyFrozen)?t.xf=i.copyFrozen():t.xf=i,i=this.bf,U.W(i)&&U.rt(i.copyFrozen)?t.bf=i.copyFrozen():t.bf=i,t}ai(t){t in ChangeType?this.change=t:U.hr(this,t)}toString(){let t=\"\";return this.change===1?t+=\"* \":this.change===2?t+=this.model!==null?\"!m\":\"!d\":t+=(this.model!==null?\"!m\":\"!d\")+this.change,this.propertyName&&typeof this.propertyName==\"string\"&&(t+=\" \"+this.propertyName),this.modelChange&&this.modelChange!==this.propertyName&&(t+=\" \"+this.modelChange),t+=\": \",this.change===1?this.oldValue!==null&&(t+=\" \"+this.oldValue):(this.object!==null&&(t+=U.toString(this.object)),this.oldValue!==null&&(t+=\"  old: \"+U.toString(this.oldValue)),this.oldParam!==null&&(t+=\" \"+this.oldParam),this.newValue!==null&&(t+=\"  new: \"+U.toString(this.newValue)),this.newParam!==null&&(t+=\" \"+this.newParam)),t}getValue(t){return t?this.oldValue:this.newValue}getParam(t){return t?this.oldParam:this.newParam}canUndo(){return this.model!==null||this.diagram!==null}undo(){this.canUndo()&&(this.model!==null?this.model.changeState(this,!0):this.diagram!==null&&this.diagram.HC(this,!0))}canRedo(){return this.model!==null||this.diagram!==null}redo(){this.canRedo()&&(this.model!==null?this.model.changeState(this,!1):this.diagram!==null&&this.diagram.HC(this,!1))}get model(){return this.Ci}set model(t){this.Ci=t}get diagram(){return this.C}set diagram(t){this.C=t}get change(){return this.mu}set change(t){this.mu=t}get modelChange(){return this.gm}set modelChange(t){Debug&&U.i(t,\"string\",ChangedEvent,\"modelChange\"),this.gm=t}get propertyName(){return this.hn}set propertyName(t){Debug&&typeof t!=\"string\"&&U.P(t,ChangedEvent,\"propertyName\"),this.hn=t}get isTransactionFinished(){return this.mu===1&&(this.hn===\"CommittedTransaction\"||this.hn===\"FinishedUndo\"||this.hn===\"FinishedRedo\")}get object(){return this.pu}set object(t){this.pu=t}get oldValue(){return this.yf}set oldValue(t){this.yf=t}get oldParam(){return this.wf}set oldParam(t){this.wf=t}get newValue(){return this.xf}set newValue(t){this.xf=t}get newParam(){return this.bf}set newParam(t){this.bf=t}}class Transaction{qC;Lt;nS;constructor(){this.qC=new List().p(),this.Lt=\"\",this.nS=!1}toString(t){let i=\"Transaction: \"+this.name+\" \"+this.changes.count.toString()+(this.isComplete?\"\":\", incomplete\");if(t!==void 0&&t>0){const e=this.changes.count;for(let s=0;s<e;s++){const n=this.changes.elt(s);n!==null&&(i+=`\n  `+n.toString())}}return i}clear(){const t=this.changes;t.At();for(let i=t.count-1;i>=0;i--){const e=t.elt(i);e!==null&&e.clear()}t.clear(),t.p()}canUndo(){return this.isComplete}undo(){if(this.canUndo())for(let t=this.changes.count-1;t>=0;t--){const i=this.changes.elt(t);i!==null&&i.undo()}}canRedo(){return this.isComplete}redo(){if(!this.canRedo())return;const t=this.changes.count;for(let i=0;i<t;i++){const e=this.changes.elt(i);e!==null&&e.redo()}}xF(t){const i=this.changes;for(let e=i.count-1;e>=t;e--){const s=i.elt(e);s!==null&&s.undo(),i.At(),i.removeAt(e)}i.p()}thaw(){this.changes.At()}optimize(){if(!this.isComplete)return;const t=this.changes;t.At();const i=new GMap;for(let s=0;s<t.count;s++){const n=t.elt(s);if(n===null||n.change!==2||!n.object)continue;let o=i.get(n.object);o||(o=new GMap,i.set(n.object,o));const r=o.get(n.propertyName);r===null?o.set(n.propertyName,-1):(r>0&&t.setElt(r,null),o.set(n.propertyName,s))}let e=0;for(let s=0;s<t.count;s++){const n=t.elt(s);n!==null&&(s>e&&t.setElt(e,n),e++)}for(;t.length>e;)t.pop();t.p()}get changes(){return this.qC}get name(){return this.Lt}set name(t){this.Lt=t}get isComplete(){return this.nS}set isComplete(t){this.nS=t}}class UndoManager{Xw;Xi;WC;Xs;oS;mm;Hn;Yw;rS;an;kf;Kw;Ys;Uw;Gw;pm;Hw;constructor(t){this.Xw=new GSet,this.Xi=!1,this.WC=new List().p(),this.Xs=-1,this.oS=999,this.Ys=!1,this.mm=null,this.Hn=0,this.Yw=!1,Debug&&(this.Yw=!0),this.rS=23,this.an=new List().p(),this.kf=new List,this.Kw=!0,this.Uw=!1,this.Gw=!1,this.pm=!1,this.Hw=!1,t&&Object.assign(this,t)}toString(t){let i=\"UndoManager \"+this.historyIndex+\"<\"+this.history.count+\"<=\"+this.maxHistoryLength;i+=\"[\";let e=this.nestedTransactionNames.count;for(let s=0;s<e;s++)s>0&&(i+=\" \"),i+=this.nestedTransactionNames.elt(s);if(i+=\"]\",t!==void 0&&t>0){e=this.history.count;for(let s=0;s<e;s++)i+=`\n `+this.history.elt(s).toString(t-1)}return i}clear(){const t=this.history;t.At();for(let i=t.count-1;i>=0;i--){const e=t.elt(i);e!==null&&e.clear()}t.clear(),this.Xs=-1,t.p(),this.Ys=!1,this.mm=null,this.Hn=0,this.an.At(),this.an.clear(),this.an.p(),this.kf.clear(),this.Uw=!1,this.Gw=!1,this.pm=!1,this.Hw=!1}copyProperties(t){this.isEnabled=t.isEnabled,this.maxHistoryLength=t.maxHistoryLength,this.yu=t.yu}addModel(t){this.Xw.add(t)}removeModel(t){this.Xw.delete(t)}startTransaction(t){if(t===void 0&&(t=\"\"),t===null&&(t=\"\"),this.isUndoingRedoing)return!1;this.Kw===!0&&(this.Kw=!1,this.Hn++,this.Ml||this.Pl(\"StartingFirstTransaction\",t,this.currentTransaction),this.Hn>0&&this.Hn--),this.isEnabled&&(this.an.At(),this.an.add(t),this.an.p(),this.currentTransaction===null?this.kf.add(0):this.kf.add(this.currentTransaction.changes.count)),this.Hn++;const i=this.transactionLevel===1;return i&&(this.Ml||this.Pl(\"StartedTransaction\",t,this.currentTransaction)),i}commitTransaction(t){return t===void 0&&(t=\"\"),this.jC(!0,t)}rollbackTransaction(){return this.jC(!1,\"\")}jC(t,i){if(this.isUndoingRedoing)return!1;this.yu&&this.transactionLevel<1&&U.nt(\"Ending transaction without having started a transaction: \"+i);const e=this.transactionLevel===1;let s=this.currentTransaction;e&&t&&(this.Ml||this.Pl(\"CommittingTransaction\",i,s));let n=0;if(this.transactionLevel>0&&(this.Hn--,this.isEnabled)){const o=this.an.count;o>0&&(i===\"\"&&(i=this.an.elt(0)),this.an.At(),this.an.removeAt(o-1),this.an.p());const r=this.kf.count;r>0&&(n=this.kf.elt(r-1),this.kf.removeAt(r-1))}if(e){if(t){if(this.pm=!1,s===null&&i!==\"\"&&(s=this.currentTransaction),this.isEnabled&&s!==null){const o=s;o.isComplete||(o.isComplete=!0,o.name=i),this.discardHistoryAfterIndex();const r=this.history;r.At();const l=this.maxHistoryLength;if(l>=0){if(l===0)r.clear();else if(r.count>=l){const h=r.elt(0);h!==null&&h.clear(),r.removeAt(0),this.Xs--}}l!==0&&(r.count===0||r.get(r.count-1)!==o)&&(r.add(o),this.Xs++),r.p(),s=o}this.Ml||this.Pl(\"CommittedTransaction\",i,s)}else{this.Ys=!0;try{this.isEnabled&&s!==null&&(s.isComplete=!0,s.undo())}finally{this.Ml||this.Pl(\"RolledBackTransaction\",i,s),this.Ys=!1}s!==null&&s.clear()}return this.mm=null,this.qw&&this.clear(),this.qw=!1,this.Ww=!1,!0}else return this.isEnabled&&!t&&s!==null&&s.xF(n),!1}discardHistoryAfterIndex(){if(this.isUndoingRedoing||!this.canRedo())return;const t=this.history;t.At();for(let i=t.count-1;i>this.historyIndex;i--){const e=t.elt(i);e!==null&&e.clear(),t.removeAt(i),this.pm=!0}t.p()}thaw(){this.history.At()}NE(t){this.Hn+=t,this.Hn<0&&(this.Hn=0)}canUndo(){if(!this.isEnabled||this.transactionLevel>0)return!1;const t=this.transactionToUndo;return!!(t!==null&&t.canUndo())}undo(){if(!this.canUndo())return;const t=this.transactionToUndo;try{this.Ys=!0,this.Pl(\"StartingUndo\",\"Undo\",t),this.Xs--,t.undo()}catch(i){U.nt(\"undo error: \"+i.toString())}finally{this.Pl(\"FinishedUndo\",\"Undo\",t),this.Ys=!1}}canRedo(){if(!this.isEnabled||this.transactionLevel>0)return!1;const t=this.transactionToRedo;return!!(t!==null&&t.canRedo())}redo(){if(!this.canRedo())return;const t=this.transactionToRedo;try{this.Ys=!0,this.Pl(\"StartingRedo\",\"Redo\",t),this.Xs++,t.redo()}catch(i){U.nt(\"redo error: \"+i.toString())}finally{this.Pl(\"FinishedRedo\",\"Redo\",t),this.Ys=!1}}Pl(t,i,e){e===void 0&&(e=null);const s=new ChangedEvent;s.change=1,s.propertyName=t,s.object=e,s.oldValue=i;const n=this.models;for(;n.next();){const o=n.value;s.model=o,o.bF(s)}}handleChanged(t){if(this.isEnabled&&!this.isUndoingRedoing&&!this.skipsEvent(t)){let i=this.currentTransaction;i===null&&(i=new Transaction,this.mm=i);const e=t.copy(),s=i.changes;if(s.At(),s.add(e),s.p(),this.yu&&this.rS>0&&this.transactionLevel<=0&&!this.Kw){const n=t.diagram;if(n!==null&&n.qh===!1)return;U.nt(\"Change not within a transaction: \"+e.toString()),this.rS--}}}skipsEvent(t){if(t===null||t.change===1)return!0;const i=t.object;if(i===null)return!1;if(i.layer!==void 0){const e=i.layer;if(e!==null&&e.isTemporary)return!0}else if(i.isTemporary)return!0;return!1}get models(){return this.Xw.iterator}get isEnabled(){return this.Xi}set isEnabled(t){this.Xi=t}get transactionToUndo(){return this.historyIndex>=0&&this.historyIndex<=this.history.count-1?this.history.elt(this.historyIndex):null}get transactionToRedo(){return this.historyIndex<this.history.count-1?this.history.elt(this.historyIndex+1):null}get isUndoingRedoing(){return this.Ys}get history(){return this.WC}get maxHistoryLength(){return this.oS}set maxHistoryLength(t){this.oS=t}get historyIndex(){return this.Xs}get currentTransaction(){return this.mm}get transactionLevel(){return this.Hn}get isInTransaction(){return this.Hn>0}get yu(){return this.Yw}set yu(t){this.Yw=t}get nestedTransactionNames(){return this.an}get qw(){return this.Uw}set qw(t){this.Uw=t}get Ww(){return this.Gw}set Ww(t){this.Gw=t}get Ml(){return this.Hw}set Ml(t){this.Hw=t}get isJustDiscarded(){return this.pm}}class Tool{C;Lt;Xi;lS;hS;ym;vC;constructor(){GSet.Ji(this),this.C=Diagram.wm(),this.Lt=\"\",this.Xi=!0,this.lS=!1,this.hS=null,this.vC=new InputEvent,this.ym=-1}get diagram(){return this.C}set diagram(t){t instanceof Diagram&&(this.C=t)}toString(){return this.name!==\"\"?this.name+\" Tool\":U.Bn(this.constructor)}updateAdornments(t){}canStart(){return this.isEnabled}doStart(){}doActivate(){this.isActive=!0}doDeactivate(){this.isActive=!1}doStop(){}doCancel(){this.transactionResult=null,this.stopTool()}stopTool(){const t=this.diagram;t.currentTool===this&&(t.currentTool=null,t.currentCursor=\"\")}doMouseDown(){!this.isActive&&this.canStart()&&this.doActivate()}doMouseMove(){}doMouseUp(){this.stopTool()}doMouseWheel(){}canStartMultiTouch(){return!0}standardPinchZoomStart(){const t=this.diagram,i=t.lastInput,e=i.getMultiTouchViewPoint(0,Point.K(NaN,NaN)),s=i.getMultiTouchViewPoint(1,Point.K(NaN,NaN));if(!e.isReal()||!s.isReal()){Point.o(e),Point.o(s);return}if(this.doCancel(),t.getInputOption(\"hasGestureZoom\")){t.aS=t.scale;const n=s.x-e.x,o=s.y-e.y,r=Math.sqrt(n*n+o*o);t.fS=r,i.bubbles=!1}Point.o(e),Point.o(s)}standardPinchZoomMove(){const t=this.diagram,i=t.lastInput,e=i.getMultiTouchViewPoint(0,Point.K(NaN,NaN)),s=i.getMultiTouchViewPoint(1,Point.K(NaN,NaN));if(!e.isReal()||!s.isReal()){Point.o(e),Point.o(s);return}if(this.doCancel(),t.getInputOption(\"hasGestureZoom\")){const n=s.x-e.x,o=s.y-e.y,l=Math.sqrt(n*n+o*o)/t.fS,h=new Point((Math.min(s.x,e.x)+Math.max(s.x,e.x))/2,(Math.min(s.y,e.y)+Math.max(s.y,e.y))/2),f=t.aS*l,a=t.commandHandler;if(f!==t.scale&&a.canResetZoom(f)){const c=t.zoomPoint;t.zoomPoint=h,a.resetZoom(f),t.zoomPoint=c}i.bubbles=!1}Point.o(e),Point.o(s)}doKeyDown(){this.diagram.lastInput.code===\"Escape\"&&this.doCancel()}doKeyUp(){}startTransaction(t){return t===void 0&&(t=this.name),this.transactionResult=null,this.diagram.startTransaction(t)}stopTransaction(){const t=this.diagram;return this.transactionResult===null?t.rollbackTransaction():t.commitTransaction(this.transactionResult)}standardMouseSelect(){const t=this.diagram;if(!t.allowSelect)return;const i=t.lastInput,e=t.findPartAt(i.documentPoint,!1);if(e!==null){if(U.rr?i.meta:i.control){t.O(\"ChangingSelection\",t.selection);let s=e;for(;s!==null&&!s.canSelect();)s=s.containingGroup;s!==null&&(s.isSelected=!s.isSelected),t.O(\"ChangedSelection\",t.selection)}else if(i.shift){if(!e.isSelected){t.O(\"ChangingSelection\",t.selection);let s=e;for(;s!==null&&!s.canSelect();)s=s.containingGroup;s!==null&&(s.isSelected=!0),t.O(\"ChangedSelection\",t.selection)}}else if(!e.isSelected){let s=e;for(;s!==null&&!s.canSelect();)s=s.containingGroup;s!==null&&t.select(s)}}else i.left&&!(U.rr?i.meta:i.control)&&!i.shift&&t.clearSelection()}standardMouseClick(t,i){t===void 0&&(t=null),i===void 0&&(i=o=>!o.layer?.isTemporary);const e=this.diagram,s=e.lastInput,n=e.findObjectAt(s.documentPoint,t,i);return s.targetObject=n,this.kF(n,s,e),s.handled}kF(t,i,e){if(i.handled=!1,t!==null&&!t.isEnabledObject())return;let s=0;i.left?i.clickCount===1?s=1:i.clickCount===2?s=2:s=1:i.right&&i.clickCount===1&&(s=3);let n=\"ObjectSingleClicked\";if(t!==null){switch(s){case 1:n=\"ObjectSingleClicked\";break;case 2:n=\"ObjectDoubleClicked\";break;case 3:n=\"ObjectContextClicked\";break}s!==0&&e.O(n,t)}else{switch(s){case 1:n=\"BackgroundSingleClicked\";break;case 2:n=\"BackgroundDoubleClicked\";break;case 3:n=\"BackgroundContextClicked\";break}s!==0&&e.O(n)}if(t!==null)for(;t!==null;){let o=null;switch(s){case 1:o=t.click;break;case 2:o=t.doubleClick?t.doubleClick:t.click;break;case 3:o=t.contextClick;break}if(o!==null&&(o(i,t),i.handled))break;t=t.panel}else{let o=null;switch(s){case 1:o=e.click;break;case 2:o=e.doubleClick?e.doubleClick:e.click;break;case 3:o=e.contextClick;break}o!==null&&o(i)}}standardMouseOver(){const t=this.diagram,i=t.lastInput;if(t.animationManager.bi===!0)return;const e=t.skipsUndoManager;t.skipsUndoManager=!0;let s=t.viewportBounds.containsPoint(i.documentPoint)?t.findObjectAt(i.documentPoint,null,null):null;i.event&&(i.event.type===\"pointercancel\"||i.event.type===\"pointerout\")&&(s=null),i.targetObject=s;let n=!1;if(s!==t.Sf){let o=t.Sf;const r=o;for(t.Sf=s,this.doCurrentObjectChanged(o,s),i.handled=!1;o!==null;){const l=o.mouseLeave;if(l!==null&&(s===o||s!==null&&s.isContainedBy(o)||(l(i,o,s),n=!0,i.handled)))break;o=o.panel}for(o=r,i.handled=!1;s!==null;){const l=s.mouseEnter;if(l!==null&&(o===s||o!==null&&o.isContainedBy(s)||(l(i,s,o),n=!0,i.handled)))break;s=s.panel}s=t.Sf}if(s!==null){let o=s,r=\"\";for(;o!==null&&(r=o.cursor,r===\"\");)o=o.panel;for(t.currentCursor=r,i.handled=!1,o=s;o!==null;){const l=o.mouseOver;if(l!==null&&(l(i,o),n=!0,i.handled))break;o=o.panel}}else{this.doUpdateCursor(null);const o=t.mouseOver;o!==null&&(o(i),n=!0)}n&&t.requestUpdate(),t.skipsUndoManager=e}doUpdateCursor(t){const i=this.diagram;i&&(i.currentCursor=\"\")}doCurrentObjectChanged(t,i){}standardMouseWheel(){const t=this.diagram,i=t.lastInput;let e=i.delta;if(e===0||!t.documentBounds.isReal())return;const s=t.commandHandler,n=t.toolManager.mouseWheelBehavior;if(s!==null&&(n===2&&!i.shift||n===1&&i.control)){if(e>0?s.canIncreaseZoom():s.canDecreaseZoom()){const o=t.zoomPoint;t.zoomPoint=i.viewPoint,e>0?s.increaseZoom():s.decreaseZoom(),t.zoomPoint=o}i.bubbles=!1}else if(n===2&&i.shift||n===1&&!i.control){const o=t.position.copy(),r=i.event,l=r.deltaMode;let h=r.deltaX,f=r.deltaY,a=\"pixel\";if((h!==0||f!==0)&&!i.shift){switch(l){case 0:a=\"pixel\";break;case 1:a=\"line\";break;case 2:a=\"page\";break}if(h!==0&&t.allowHorizontalScroll){const c=t.scrollHorizontalLineChange;h=h*(c/16),t.scroll(a,h>0?\"right\":\"left\",Math.abs(h))}if(f!==0&&t.allowVerticalScroll){const c=t.scrollVerticalLineChange;f=f*(c/16),t.scroll(a,f>0?\"down\":\"up\",Math.abs(f))}}else!i.shift&&t.allowVerticalScroll?(e=e*3*t.scrollVerticalLineChange,t.scroll(a,e>0?\"up\":\"down\",Math.abs(e))):i.shift&&t.allowHorizontalScroll&&(e=e*3*t.scrollHorizontalLineChange,t.scroll(a,e>0?\"left\":\"right\",Math.abs(e)));this.doWheelChange(t,o,i)}}doWheelChange(t,i,e){(!t.position.equals(i)||e.event.wheelDeltaX!==0)&&(e.bubbles=!1)}standardWaitAfter(t,i){Debug&&U.i(t,\"number\",Tool,\"standardWaitAfter:delay\"),i===void 0&&(i=this.diagram.lastInput),this.cancelWaitAfter();const e=this,s=i.clone(this.vC);this.ym=U.lr(()=>e.doWaitAfter(s),t)}cancelWaitAfter(){this.ym!==-1&&U.Bg(this.ym),this.ym=-1}doWaitAfter(t){}findToolHandleAt(t,i){const s=this.diagram.findObjectAt(t,n=>{for(;n!==null&&!(n.panel instanceof Adornment);)n=n.panel;return n});return s===null?null:s.part.category===i?s:null}isBeyondDragSize(t,i){const e=this.diagram;t===void 0&&(t=e.firstInput.viewPoint),i===void 0&&(i=e.lastInput.viewPoint);const s=e.toolManager.dragSize;let n=s.width,o=s.height;return e.firstInput.isTouchEvent&&(n+=6,o+=6),Math.abs(i.x-t.x)>n||Math.abs(i.y-t.y)>o}get name(){return this.Lt}set name(t){U.i(t,\"string\",Tool,\"name\"),this.Lt=t}get isEnabled(){return this.Xi}set isEnabled(t){U.i(t,\"boolean\",Tool,\"isEnabled\"),this.Xi=t}get isActive(){return this.lS}set isActive(t){U.i(t,\"boolean\",Tool,\"isActive\"),this.lS=t}get transactionResult(){return this.hS}set transactionResult(t){t!==null&&U.i(t,\"string\",Tool,\"transactionResult\"),this.hS=t}}var WheelMode=(y=>(y[y.Scroll=1]=\"Scroll\",y[y.Zoom=2]=\"Zoom\",y[y.None=3]=\"None\",y))(WheelMode||{}),GestureMode=(y=>(y[y.Zoom=1]=\"Zoom\",y[y.Cancel=2]=\"Cancel\",y[y.None=3]=\"None\",y))(GestureMode||{});class ToolManager extends Tool{JC;$C;ZC;cS;uS;dS;gS;mS;pS;yS;xm;Wh;constructor(t){super(),this.name=\"ToolManager\",this.JC=new List,this.$C=new List,this.ZC=new List,this.cS=850,this.uS=850,this.dS=new Size(2,2).it(),this.gS=5e3,this.mS=1,this.pS=1,this.yS=null,this.xm=null,this.Wh=-1,t&&Object.assign(this,t)}static WheelScroll=1;static WheelZoom=2;static WheelNone=3;static GestureZoom=1;static GestureCancel=2;static GestureNone=3;get mouseWheelBehavior(){return this.mS}set mouseWheelBehavior(t){U.j(t,WheelMode,\"WheelMode\"),this.mS=t}get gestureBehavior(){return this.pS}set gestureBehavior(t){U.j(t,GestureMode,\"GestureMode\"),this.pS=t}initializeStandardTools(){}updateAdornments(t){const i=this.currentToolTip;if(i instanceof Adornment&&this.xm===t){const e=i.adornedObject;(t!==null?e!==null&&e.part===t:e===null)?this.showToolTip(i,e):this.hideToolTip()}}doMouseDown(){const t=this.diagram,i=t.lastInput;if(i.isTouchEvent&&this.gestureBehavior===2&&(i.bubbles=!1),i.isMultiTouch){if(this.cancelWaitAfter(),this.gestureBehavior===3){i.bubbles=!0;return}if(this.gestureBehavior===2)return;if(t.currentTool.canStartMultiTouch()){t.currentTool.standardPinchZoomStart();return}}const e=t.undoManager;Debug&&e.yu&&e.transactionLevel!==0&&U.nt(\"WARNING: In ToolManager.doMouseDown: UndoManager.transactionLevel is not zero\");const s=this.mouseDownTools.length;for(let n=0;n<s;n++){const o=this.mouseDownTools.elt(n);if(o.diagram=this.diagram,o.canStart()){t.doFocus(),t.currentTool=o,t.currentTool===o&&(o.isActive||o.doActivate(),o.doMouseDown());return}}t.lastInput.button===1&&(this.mouseWheelBehavior===1?this.mouseWheelBehavior=2:this.mouseWheelBehavior===2&&(this.mouseWheelBehavior=1)),this.doActivate(),this.standardWaitAfter(this.holdDelay,i)}doMouseMove(){const t=this.diagram,i=t.lastInput;if(i.isMultiTouch){if(this.gestureBehavior===3){i.bubbles=!0;return}if(this.gestureBehavior===2)return;if(t.currentTool.canStartMultiTouch()){t.currentTool.standardPinchZoomMove();return}}if(this.isActive){const s=this.mouseMoveTools.length;for(let n=0;n<s;n++){const o=this.mouseMoveTools.elt(n);if(o.diagram=this.diagram,o.canStart()){t.doFocus(),t.currentTool=o,t.currentTool===o&&(o.isActive||o.doActivate(),o.doMouseMove());return}}}this.standardMouseActivity(t);const e=i.event;e!==null&&(e.type===\"pointermove\"||!e.cancelable)&&(i.bubbles=!0)}standardMouseActivity(t){this.standardMouseOver(),this.isBeyondDragSize()&&this.standardWaitAfter(this.isActive?this.holdDelay:this.hoverDelay,t.lastInput)}doCurrentObjectChanged(t,i){const e=this.currentToolTip;e!==null&&(i!==null&&e instanceof Adornment&&(i===e||i.isContainedBy(e))||this.hideToolTip())}doWaitAfter(t){const i=this.diagram;if(i.SF()&&(this.doMouseHover(),this.isActive||this.doToolTip(),t.isTouchEvent&&!i.lastInput.handled)){const e=t.copy();e.button=2,i.lastInput=e,i.jw=!0,i.doMouseUp();return}}doMouseHover(){const t=this.diagram,i=t.lastInput;i.targetObject===null&&(i.targetObject=t.findObjectAt(i.documentPoint,null,null));let e=i.targetObject;if(e!==null)for(i.handled=!1;e!==null;){const s=this.isActive?e.mouseHold:e.mouseHover;if(s!==null&&(s(i,e),i.handled))break;e=e.panel}else{const s=this.isActive?t.mouseHold:t.mouseHover;s!==null&&s(i)}}doToolTip(){const t=this.diagram,i=t.lastInput;i.targetObject===null&&(i.targetObject=t.findObjectAt(i.documentPoint,null,null));let e=i.targetObject;if(e!==null){const s=this.currentToolTip;if(s instanceof Adornment&&(e===s||e.isContainedBy(s)))return;for(;e!==null;){const n=e.toolTip;if(n!==null){this.showToolTip(n,e);return}e=e.panel}this.hideToolTip()}else{const s=t.toolTip;s!==null?this.showToolTip(s,null):this.hideToolTip()}}showToolTip(t,i){Debug&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"showToolTip:tooltip must be an Adornment or HTMLInfo.\"),i!==null&&U.e(i,GraphObject,ToolManager,\"showToolTip:obj\");const e=this.diagram;if(t!==this.currentToolTip&&this.hideToolTip(),t instanceof Adornment){t.layerName=\"Tool\",t.selectable=!1,t.scale=1/e.scale,t.category=\"ToolTip\",t.hasPlaceholder()&&(t.placeholder.scale=e.scale);const n=t.diagram;n!==null&&n!==e&&n.remove(t),e.add(t),i!==null?t.adornedObject=i:t.data=e.model,t.ensureBounds(),this.positionToolTip(t,i)}else t instanceof HTMLInfo&&t!==this.currentToolTip&&t.show!==null&&t.show(i,e,this);this.currentToolTip=t,this.Wh!==-1&&(U.Bg(this.Wh),this.Wh=-1);const s=this.toolTipDuration;if(s>0&&s!==1/0){const n=this;this.Wh=U.lr(()=>n.hideToolTip(),s)}}positionToolTip(t,i){if(t.hasPlaceholder())return;const e=t,s=this.diagram,n=s.lastInput.documentPoint.copy(),o=e.measuredBounds,r=s.viewportBounds;s.lastInput.isTouchEvent&&(n.x-=o.width),n.x+o.width>r.right&&(n.x-=o.width+5/s.scale),n.x<r.x&&(n.x=r.x),n.y+20/s.scale+o.height>r.bottom?n.y-=o.height+5/s.scale:n.y+=20/s.scale,n.y<r.y&&(n.y=r.y),e.position=n}hideToolTip(){this.Wh!==-1&&(U.Bg(this.Wh),this.Wh=-1);const t=this.diagram,i=this.currentToolTip;i!==null&&(i instanceof Adornment?(t.remove(i),this.xm!==null&&this.xm.removeAdornment(i.category),i.data=null,i.adornedObject=null):i instanceof HTMLInfo&&i.hide!==null&&i.hide(t,this),this.currentToolTip=null)}get currentToolTip(){return this.yS}set currentToolTip(t){Debug&&t!==null&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"ToolManager.currentToolTip must be an Adornment or HTMLInfo.\"),this.yS=t,this.xm=t!==null&&t instanceof Adornment?t.adornedPart:null}doMouseUp(){this.cancelWaitAfter();const t=this.diagram;if(this.isActive){const i=this.mouseUpTools.length;for(let e=0;e<i;e++){const s=this.mouseUpTools.elt(e);if(s.diagram=this.diagram,s.canStart()){t.doFocus(),t.currentTool=s,t.currentTool===s&&(s.isActive||s.doActivate(),s.doMouseUp());return}}}t.doFocus(),this.doDeactivate()}doMouseWheel(){this.standardMouseWheel()}doKeyDown(){const t=this.diagram;t.commandHandler!==null&&t.commandHandler.doKeyDown()}doKeyUp(){const t=this.diagram;t.commandHandler!==null&&t.commandHandler.doKeyUp()}findTool(t){U.i(t,\"string\",ToolManager,\"findTool:name\");let i=this.mouseDownTools.length;for(let e=0;e<i;e++){const s=this.mouseDownTools.elt(e);if(s.name===t)return s}i=this.mouseMoveTools.length;for(let e=0;e<i;e++){const s=this.mouseMoveTools.elt(e);if(s.name===t)return s}i=this.mouseUpTools.length;for(let e=0;e<i;e++){const s=this.mouseUpTools.elt(e);if(s.name===t)return s}return null}replaceTool(t,i){U.i(t,\"string\",ToolManager,\"replaceTool:name\"),i!==null&&(U.e(i,Tool,ToolManager,\"replaceTool:newtool\"),i.diagram=this.diagram);let e=this.mouseDownTools.length;for(let s=0;s<e;s++){const n=this.mouseDownTools.elt(s);if(n.name===t)return i!==null?this.mouseDownTools.setElt(s,i):this.mouseDownTools.removeAt(s),n}e=this.mouseMoveTools.length;for(let s=0;s<e;s++){const n=this.mouseMoveTools.elt(s);if(n.name===t)return i!==null?this.mouseMoveTools.setElt(s,i):this.mouseMoveTools.removeAt(s),n}e=this.mouseUpTools.length;for(let s=0;s<e;s++){const n=this.mouseUpTools.elt(s);if(n.name===t)return i!==null?this.mouseUpTools.setElt(s,i):this.mouseUpTools.removeAt(s),n}return null}replaceStandardTool(t,i,e){this.ti(t,i,e)}ti(t,i,e){U.i(t,\"string\",ToolManager,\"replaceStandardTool:name\"),U.e(e,List,ToolManager,\"replaceStandardTool:list\"),i!==null&&(U.e(i,Tool,ToolManager,\"replaceStandardTool:newtool\"),i.name=t,i.diagram=this.diagram),this.findTool(t)?this.replaceTool(t,i):i!==null&&e.add(i)}get mouseDownTools(){return this.JC}get mouseMoveTools(){return this.$C}get mouseUpTools(){return this.ZC}get hoverDelay(){return this.cS}set hoverDelay(t){U.i(t,\"number\",ToolManager,\"hoverDelay\"),this.cS=t}get holdDelay(){return this.uS}set holdDelay(t){U.i(t,\"number\",ToolManager,\"holdDelay\"),this.uS=t}get dragSize(){return this.dS}set dragSize(t){U.e(t,Size,ToolManager,\"dragSize\"),this.dS=t.N()}get toolTipDuration(){return this.gS}set toolTipDuration(t){U.i(t,\"number\",ToolManager,\"toolTipDuration\"),this.gS=t}get actionTool(){return this.findTool(\"Action\")}set actionTool(t){this.ti(\"Action\",t,this.mouseDownTools)}get relinkingTool(){return this.findTool(\"Relinking\")}set relinkingTool(t){this.ti(\"Relinking\",t,this.mouseDownTools)}get linkReshapingTool(){return this.findTool(\"LinkReshaping\")}set linkReshapingTool(t){this.ti(\"LinkReshaping\",t,this.mouseDownTools)}get resizingTool(){return this.findTool(\"Resizing\")}set resizingTool(t){this.ti(\"Resizing\",t,this.mouseDownTools)}get rotatingTool(){return this.findTool(\"Rotating\")}set rotatingTool(t){this.ti(\"Rotating\",t,this.mouseDownTools)}get linkingTool(){return this.findTool(\"Linking\")}set linkingTool(t){this.ti(\"Linking\",t,this.mouseMoveTools)}get draggingTool(){return this.findTool(\"Dragging\")}set draggingTool(t){this.ti(\"Dragging\",t,this.mouseMoveTools)}get dragSelectingTool(){return this.findTool(\"DragSelecting\")}set dragSelectingTool(t){this.ti(\"DragSelecting\",t,this.mouseMoveTools)}get panningTool(){return this.findTool(\"Panning\")}set panningTool(t){this.ti(\"Panning\",t,this.mouseMoveTools)}get contextMenuTool(){return this.findTool(\"ContextMenu\")}set contextMenuTool(t){this.ti(\"ContextMenu\",t,this.mouseUpTools)}get textEditingTool(){return this.findTool(\"TextEditing\")}set textEditingTool(t){this.ti(\"TextEditing\",t,this.mouseUpTools)}get clickCreatingTool(){return this.findTool(\"ClickCreating\")}set clickCreatingTool(t){this.ti(\"ClickCreating\",t,this.mouseUpTools)}get clickSelectingTool(){return this.findTool(\"ClickSelecting\")}set clickSelectingTool(t){this.ti(\"ClickSelecting\",t,this.mouseUpTools)}}class DraggingTool extends Tool{wS;xS;fn;bS;kS;SS;MS;Mf;bm;PS;jh;yr;QC;NS;wu;xu;CS;AS;LS;TS;constructor(t){super(),this.name=\"Dragging\",this.wS=!0,this.TS=!0,this.xS=!0,this.fn=null,this.bS=null,this.kS=null,this.SS=null,this.MS=!1,this.wu=!1,this.Mf=new Point(NaN,NaN),this.bm=new Point,this.PS=!0,this.jh=100,this.yr=[],this.QC=new GSet().p(),this.NS=new DraggingOptions,this.xu=null,this.CS=\"copy\",this.AS=\"\",this.LS=\"no-drop\",t&&Object.assign(this,t)}get isCopyEnabled(){return this.wS}set isCopyEnabled(t){U.i(t,\"boolean\",DraggingTool,\"isCopyEnabled\"),this.wS=t}get copiesEffectiveCollection(){return this.xS}set copiesEffectiveCollection(t){U.i(t,\"boolean\",DraggingTool,\"copiesEffectiveCollection\"),this.xS=t}get dragOptions(){return this.NS}set dragOptions(t){U.e(t,DraggingOptions,DraggingTool,\"dragOptions\"),this.NS=t}get isGridSnapEnabled(){return this.dragOptions.isGridSnapEnabled}set isGridSnapEnabled(t){U.i(t,\"boolean\",DraggingTool,\"isGridSnapEnabled\"),this.dragOptions.isGridSnapEnabled=t}get isComplexRoutingRealtime(){return this.PS}set isComplexRoutingRealtime(t){this.PS=t;const i=this.diagram.findRouter(\"AvoidsLinks\");i!==null&&(i.isRealtime=t)}get isGridSnapRealtime(){return this.dragOptions.isGridSnapRealtime}set isGridSnapRealtime(t){U.i(t,\"boolean\",DraggingTool,\"isGridSnapRealtime\"),this.dragOptions.isGridSnapRealtime=t}get gridSnapCellSize(){return this.dragOptions.gridSnapCellSize}set gridSnapCellSize(t){U.e(t,Size,DraggingTool,\"gridSnapCellSize\"),this.dragOptions.gridSnapCellSize.equals(t)||(t=t.N(),this.dragOptions.gridSnapCellSize=t)}get gridSnapCellSpot(){return this.dragOptions.gridSnapCellSpot}set gridSnapCellSpot(t){U.e(t,Spot,DraggingTool,\"gridSnapCellSpot\"),this.dragOptions.gridSnapCellSpot.equals(t)||(t=t.N(),this.dragOptions.gridSnapCellSpot=t)}get gridSnapOrigin(){return this.dragOptions.gridSnapOrigin}set gridSnapOrigin(t){U.e(t,Point,DraggingTool,\"gridSnapOrigin\"),this.dragOptions.gridSnapOrigin.equals(t)||(t=t.N(),this.dragOptions.gridSnapOrigin=t)}get dragsLink(){return this.dragOptions.dragsLink}set dragsLink(t){U.i(t,\"boolean\",DraggingTool,\"dragsLink\"),this.dragOptions.dragsLink=t}get dragsTree(){return this.dragOptions.dragsTree}set dragsTree(t){U.i(t,\"boolean\",DraggingTool,\"dragsTree\"),this.dragOptions.dragsTree=t}get copyCursor(){return this.CS}set copyCursor(t){this.CS=t}get moveCursor(){return this.AS}set moveCursor(t){this.AS=t}get nodropCursor(){return this.LS}set nodropCursor(t){this.LS=t}get currentPart(){return this.bS}set currentPart(t){t!==null&&U.e(t,Part,DraggingTool,\"currentPart\"),this.bS=t}get copiedParts(){return this.SS}set copiedParts(t){this.SS=t}get draggedParts(){return this.kS}set draggedParts(t){this.kS=t}get draggingParts(){return this.copiedParts!==null?this.copiedParts.toKeySet():this.draggedParts!==null?this.draggedParts.toKeySet():this.QC}get draggedLink(){return this.diagram.draggedLink}set draggedLink(t){t!==null&&U.e(t,Link,DraggingTool,\"draggedLink\"),this.diagram.draggedLink=t}get isDragOutStarted(){return this.MS}set isDragOutStarted(t){this.MS=t}get startPoint(){return this.bm}set startPoint(t){U.e(t,Point,DraggingTool,\"startPoint\"),this.bm.equals(t)||this.bm.c(t)}get delay(){return this.jh}set delay(t){U.i(t,\"number\",DraggingTool,\"delay\"),this.jh=t}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;if(t===null||t.isReadOnly&&!t.allowDragOut||!t.allowMove&&!t.allowCopy&&!t.allowDragOut||!t.allowSelect)return!1;const i=t.lastInput;return!i.left||t.currentTool!==this&&(!this.isBeyondDragSize()||i.isTouchEvent&&i.timestamp-t.firstInput.timestamp<this.jh)?!1:this.findDraggablePart()!==null}findDraggablePart(){const t=this.diagram;let i=t.findPartAt(t.firstInput.documentPoint,!1);if(i===null)return null;for(;i!==null&&!i.canSelect();)i=i.containingGroup;return i!==null&&(i.canMove()||i.canCopy())?i:null}standardMouseSelect(){const t=this.diagram;if(!t.allowSelect)return;let i=t.findPartAt(t.firstInput.documentPoint,!1);if(i!==null){for(;i!==null&&!i.canSelect();)i=i.containingGroup;if(this.currentPart=i,this.currentPart!==null&&!this.currentPart.isSelected){t.O(\"ChangingSelection\",t.selection);const e=t.lastInput;!(U.rr?e.meta:e.control)&&!e.shift&&t.clearSelection(!0),this.currentPart.isSelected=!0,t.O(\"ChangedSelection\",t.selection)}}}doActivate(){const t=this.diagram;this.xu=null,this.currentPart===null&&this.standardMouseSelect();const i=this.currentPart;if(i===null||!i.canMove()&&!i.canCopy())return;t.cacheGroupExternalLinks(!0),DraggingTool.bt=null,this.isActive=!0,this.Mf.set(t.position),this.DS(t.selection),this.yr.length=0,t.animationManager.stopAnimation();const e=this.computeEffectiveCollection(t.selection,this.dragOptions);this.draggedParts=e,this.TS=!!this.diagram.layout.isRealtime,this.diagram.layout.isRealtime=!1,t.bu=!0,t.getRenderingHint(\"temporaryPixelRatio\")===!0&&t.avgSpf>30&&t.vw(),t._C(this.draggedParts),t.ku=!0,this.startTransaction(\"Drag\"),this.startPoint=t.firstInput.documentPoint,t.isMouseCaptured=!0,t.allowDragOut&&this.MF()}DS(t){if(!this.dragsLink)return;const i=this.diagram,e=i.model.km(),s=t.first();e&&t.count===1&&s instanceof Link&&this.mayDragLink(s)?(this.draggedLink=s,this.draggedLink.canRelinkFrom()&&this.draggedLink.canRelinkTo()&&this.draggedLink.clearAdornments(),this.fn=i.toolManager.findTool(\"Relinking\"),this.fn===null&&(this.fn=new RelinkingTool,this.fn.diagram=i),this.fn.originalLink=this.draggedLink):(this.draggedLink=null,this.fn=null)}mayDragLink(t){const i=this.diagram;return i!==null&&i.allowRelink}computeEffectiveCollection(t,i){return this.diagram.commandHandler.computeEffectiveCollection(t,i)}Ks(t){return t===void 0?new DraggingInfo(Point.No):this.isGridSnapEnabled?new DraggingInfo(new Point(Math.round(t.x*1e3)/1e3,Math.round(t.y*1e3)/1e3)):new DraggingInfo(t.copy())}doDeactivate(){this.isActive=!1;const t=this.diagram;this.diagram.layout.isRealtime=this.TS,t.ku=!1,t.Nl=!0,t.cacheGroupExternalLinks(!1),t.stopAutoScroll(),this.FS(),t.RS(this.draggedParts),this.xu=null,this.currentPart=null,this.draggedParts=null,this.isDragOutStarted=!1,this.wu=!1,DraggingTool.PF(),this.tA(),this.Mf.s(NaN,NaN),DraggingTool.vh!==null&&(DraggingTool.vh.currentCursor=\"\"),DraggingTool.vh=null,DraggingTool.bt=null,this.Cl(),t.isMouseCaptured=!1,t.currentCursor=\"\",t.bu=!1,this.stopTransaction(),t.IS(!0)}stopTransaction(){const t=this.diagram,i=super.stopTransaction();return i&&t.undoManager.transactionToUndo!==null&&t.undoManager.transactionToUndo.optimize(),i}FS(){const t=this.diagram,i=t.skipsUndoManager;t.skipsUndoManager=!0;const e=t.lastInput;this.iA(e,null),t.skipsUndoManager=i,this.yr.length=0}eA(){this.Cl(),this.OS();const t=this.diagram;this.Mf.isReal()&&(t.position=this.Mf),t.stopAutoScroll()}doCancel(){this.Cl(),this.OS();const t=this.diagram;this.Mf.isReal()&&(t.position=this.Mf),this.stopTool()}doKeyDown(){const t=this.diagram;if(!this.isActive)return;const i=t.lastInput,e=t.previousInput;i.code===\"Escape\"?this.doCancel():(i.code!==e.code||i.modifiers!==e.modifiers)&&this.doMouseMove()}doKeyUp(){this.isActive&&this.doMouseMove()}NF(t,i){let e=1/0,s=1/0,n=-1/0,o=-1/0;const r=t.iterator;for(;r.next();){const l=r.value;if(!l.isVisible())continue;const h=l.location,f=h.x,a=h.y;isNaN(f)||isNaN(a)||(f<e&&(e=f),a<s&&(s=a),f>n&&(n=f),a>o&&(o=a))}return e===1/0?i.s(0,0,0,0):i.s(e,s,n-e,o-s),i}ES(t){if(this.copiedParts!==null)return;const i=this.diagram;if(t&&(i.isReadOnly||i.isModelReadOnly)||this.draggedParts===null)return;const e=i.undoManager;e.isEnabled&&e.isInTransaction?e.currentTransaction!==null&&e.currentTransaction.changes.count>0&&(i.undoManager.rollbackTransaction(),i.startTransaction(\"Drag\")):this.OS(),i.skipsUndoManager=!t,i.partManager.addsToTemporaryLayer=!t,this.startPoint=i.firstInput.documentPoint;const s=this.copiesEffectiveCollection?this.draggedParts.toKeySet():i.selection,n=i.copyParts(s,i,!0),o=new GMap,r=this.draggedParts.iterator;for(;r.next();){const h=r.key;if(h.Ce()&&h.canCopy()){const f=n.get(h);if(f===null)continue;f.location=h.location,f.ensureBounds(),o.set(f,this.Ks(f.location))}}const l=n.iterator;for(;l.next();){const h=l.value;h instanceof Link&&h.canCopy()&&o.set(h,this.Ks())}if(this.copiedParts=o,this.DS(o.toKeySet()),this.draggedLink!==null){const h=this.draggedLink,f=h.routeBounds;h.wr(this.startPoint.x-(f.x+f.width/2),this.startPoint.y-(f.y+f.height/2))}this.doUpdateCursor(null)}Cl(){const t=this.diagram;if(this.copiedParts!==null){if(t.removeParts(this.copiedParts.toKeySet(),!1),this.copiedParts=null,this.draggedParts!==null){const i=this.draggedParts.iterator;for(;i.next();)if(i.key instanceof Link){const s=i.value;s.point=new Point(0,0)}}this.doUpdateCursor(null)}t.skipsUndoManager=!1,t.partManager.addsToTemporaryLayer=!1,this.startPoint=t.firstInput.documentPoint}tA(){this.draggedLink!==null&&(this.dragsLink&&this.fn!==null&&(this.fn.stopDraggingMouseMove(),this.fn.originalLink=null),this.draggedLink=null,this.fn=null)}Pf(t,i){if(t===null)return;const e=this.diagram,s=this.startPoint,n=Point.a();n.c(e.lastInput.documentPoint),this.moveParts(t,n.subtract(s),i),Point.o(n),e.getRenderingHint(\"temporaryPixelRatio\")===!0&&e.Al===null&&e.avgSpf>30&&(e.vw(),e.Su())}moveParts(t,i,e){e===void 0&&(e=!1);const s=this.diagram;s!==null&&s.BS(t,i,this.dragOptions,e)}OS(){if(this.draggedParts===null)return;const t=this.diagram;let i=this.draggedParts.iterator;for(;i.next();){const e=i.key;e.Ce()&&(e.location=i.value.point)}for(i=this.draggedParts.iterator;i.next();){const e=i.key;if(e instanceof Link&&e.suspendsRouting){const s=i.value.point;this.draggedParts.set(e,this.Ks()),e.wr(-s.x,-s.y)}}t.maybeUpdate()}CF(t){if(t===null)return!0;const i=t.part;return!!(i===null||i instanceof Adornment||i.layer?.isTemporary||this.draggedParts&&this.draggedParts.has(i)||this.copiedParts&&this.copiedParts.has(i))}VS(t){const i=this.diagram;this.dragsLink&&(this.draggedLink!==null&&(this.draggedLink.fromNode=null,this.draggedLink.toNode=null),this.sA(!1));const e=this.findDragOverObject(t),s=i.lastInput;s.targetObject=e,this.doUpdateCursor(e);const n=i.skipsUndoManager;let o=!1;try{if(i.skipsUndoManager=!0,o=this.iA(s,e),!this.isActive&&DraggingTool.bt===null)return;const r=e!==null?e.part:null;if(r===null||i.handlesDragDropForTopLevelParts&&r.isTopLevel&&!(r instanceof Group)){const l=i.mouseDragOver;l!==null&&(l(s),o=!0)}if(!this.isActive&&DraggingTool.bt===null||(this.doDragOver(t,e),!this.isActive&&DraggingTool.bt===null))return}finally{i.skipsUndoManager=n,o&&i.maybeUpdate()}this.xu=e,!i.isReadOnly&&(i.allowMove||i.allowCopy)&&(i.allowHorizontalScroll||i.allowVerticalScroll)&&i.doAutoScroll(s.viewPoint)}findDragOverObject(t){return this.diagram.zS(t,null,i=>!this.CF(i))}doUpdateCursor(t){const i=this.diagram;(t===null||this.xu!==t)&&(!this.diagram.currentTool.isActive||this.mayCopy()?i.currentCursor=this.copyCursor:this.mayMove()?i.currentCursor=this.moveCursor:this.mayDragOut()&&(i.currentCursor=this.nodropCursor))}iA(t,i){let e=!1,s=this.yr.length;const n=s>0?this.yr[0]:null;if(i===n)return!1;t.handled=!1;for(let r=0;r<s;r++){const l=this.yr[r],h=l.mouseDragLeave;if(h!==null&&(h(t,l,i),e=!0,t.handled))break}if(this.yr.length=0,!this.isActive&&DraggingTool.bt===null||i===null)return e;t.handled=!1;let o=i;for(;o!==null;)this.yr.push(o),o=this.nA(o);s=this.yr.length;for(let r=0;r<s;r++){const l=this.yr[r],h=l.mouseDragEnter;if(h!==null&&(h(t,l,n),e=!0,t.handled))break}return e}CE(t,i){return t===null?!1:!!(t===i||t.isContainedBy(i)||i instanceof Group&&!(t instanceof Group)&&i.handlesDragDropForMembers&&t.part?.isMemberOf(i))}nA(t){const i=t.panel;if(i!==null)return i;if(t instanceof Part&&!(t instanceof Group)){const e=t.containingGroup;if(e!==null&&e.handlesDragDropForMembers)return e}return null}oA(t,i){const e=this.diagram,s=this.fn;if(s===null)return null;const n=s.portGravity,o=e.findObjectsNear(t,n,f=>s.findValidLinkablePort(f,i)),r=Point.a();let l=1/0,h=null;for(const f=o.iterator;f.next();){const a=f.value;if(a.part===null)continue;const u=a.getDocumentPoint(Spot.Center,r),d=t.distanceSquaredPoint(u);d<l&&(h=a,l=d)}return Point.o(r),h}sA(t){const i=this.draggedLink;if(i!==null){if(i.pointsCount<2)return;const e=this.diagram;if(e.isReadOnly)return;const s=this.fn;if(s===null)return;let n=null,o=null;i.fromNode===null&&(n=this.oA(i.getPoint(0),!1),n!==null&&(o=n.part));let r=null,l=null;i.toNode===null&&(r=this.oA(i.getPoint(i.pointsCount-1),!0),r!==null&&(l=r.part)),s.isValidLink(o,n,l,r)?t?(i.defaultFromPoint=i.getPoint(0),i.defaultToPoint=i.getPoint(i.pointsCount-1),i.suspendsRouting=!1,i.fromNode=o,n!==null&&(i.fromPortId=n.portId),i.toNode=l,r!==null&&(i.toPortId=r.portId),i.fromPort!==e.XS&&e.O(\"LinkRelinked\",i,e.XS),i.toPort!==e.YS&&e.O(\"LinkRelinked\",i,e.YS)):s.doDraggingMouseMove(o,n,l,r):s.doDraggingMouseMove(null,null,null,null)}}doDragOver(t,i){}rA(t){const i=this.diagram;this.dragsLink&&this.sA(!0),this.FS();const e=this.findDragOverObject(t),s=i.lastInput;if(s.targetObject=e,e!==null){s.handled=!1;let l=e;for(;l!==null;){const h=l.mouseDrop;if(h!==null&&(h(s,l),s.handled))break;this.AF(s,l),l=this.nA(l)}}else{const l=i.mouseDrop;l!==null&&l(s)}if(!this.isActive&&DraggingTool.bt===null)return;const n=this.copiedParts||this.draggedParts;if(n!==null){const l=n.iterator;for(;l.next();){const h=l.key;h instanceof Node&&h.linksConnected.each(f=>f.suspendsRouting=!1)}}if(this.doDropOnto(t,e),!this.isActive&&DraggingTool.bt===null)return;const o=Rect.a(),r=i.selection.iterator;for(;r.next();){const l=r.value;l instanceof Node&&this.LF(i,l,o)}Rect.o(o)}AF(t,i){const e=this.diagram,s=i.part;if(e.handlesDragDropForTopLevelParts&&s!==null&&s.isTopLevel&&!(s instanceof Group)){const n=e.mouseDrop;n!==null&&n(t)}}LF(t,i,e){if(!i.canAvoid())return;let s=!1;e=i.getAvoidableRect(e),t.viewportBounds.containsRect(e)&&(s=!0);const n=this.copiedParts||this.draggedParts;if(n===null)return;const o=t.KS(e,l=>l.part,l=>l instanceof Link,!0,l=>l instanceof Link,s);if(o.count===0)return;const r=o.iterator;for(;r.next();){const l=r.value;n.has(l)&&n.has(i)||!l.isMemberOf(i)&&l.isAvoiding&&l.invalidateRoute()}}doDropOnto(t,i){}doMouseMove(){if(!this.isActive)return;const t=this.diagram,i=t.lastInput;if(this.simulatedMouseMove(i.event,i.documentPoint,i.targetDiagram))return;this.currentPart!==null&&this.draggedParts!==null&&(this.mayCopy()?(this.ES(!1),this.Pf(this.copiedParts,!1)):this.mayMove()?(this.Cl(),this.Pf(this.draggedParts,!0)):this.mayDragOut()?(this.ES(!1),this.Pf(this.copiedParts,!1)):this.Cl(),this.VS(t.lastInput.documentPoint))}doMouseUp(){if(!this.isActive)return;const t=this.diagram,i=t.lastInput;if(this.simulatedMouseUp(i.event,i.documentPoint,i.targetDiagram))return;let e=!1;const s=this.mayCopy();if(s&&this.copiedParts!==null?(this.Cl(),this.ES(!0),this.Pf(this.copiedParts,!1),this.copiedParts!==null&&(t.O(\"ChangingSelection\",t.selection),t.clearSelection(!0),this.copiedParts.iteratorKeys.each(n=>{n.isSelected=!0}))):(e=!0,this.Cl(),this.mayMove()&&(this.Pf(this.draggedParts,!0),this.VS(t.lastInput.documentPoint))),this.wu=!0,this.rA(t.lastInput.documentPoint),this.isActive){const n=s&&this.copiedParts,o=n?this.copiedParts?.toKeySet():this.draggedParts?this.draggedParts.toKeySet():null;this.copiedParts=null,e&&this.TF(),t.invalidateDocumentBounds(),t.RS(this.draggedParts),this.transactionResult=n?\"Copy\":\"Move\",t.O(n?\"SelectionCopied\":\"SelectionMoved\",o)}this.stopTool(),s&&t.O(\"ChangedSelection\",t.selection)}simulatedMouseMove(t,i,e){if(DraggingTool.bt===null)return!1;const s=DraggingTool.bt.diagram;e instanceof Diagram||(e=null);const n=DraggingTool.vh;if(e!==n){if(n!==null&&n!==s){n.stopAutoScroll(),DraggingTool.bt.isDragOutStarted=!1;const r=n.toolManager.findTool(\"Dragging\");r!==null&&r.doSimulatedDragLeave()}if(DraggingTool.vh=e,e!==null&&e!==s){DraggingTool.bt.eA();const r=e.toolManager.findTool(\"Dragging\");r!==null&&(r.lA(),r.doSimulatedDragEnter())}this.doUpdateCursor(null)}if(e===null||e===s||!e.allowDrop||e.isReadOnly||!e.allowInsert)return!1;const o=e.toolManager.findTool(\"Dragging\");if(o!==null){let r=i;t!==null&&(t.targetTouches!==void 0&&(t.targetTouches.length>0?t=t.targetTouches[0]:t.changedTouches.length>0&&(t=t.changedTouches[0])),r=e.getMouse(t)),e.lastInput.documentPoint=r,e.lastInput.viewPoint=e.transformDocToView(r),e.lastInput.down=!1,e.lastInput.up=!1,o.doSimulatedDragOver()}return!0}simulatedMouseUp(t,i,e){if(DraggingTool.bt===null)return!1;const s=DraggingTool.vh,n=DraggingTool.bt.diagram;if(e===null)return DraggingTool.bt.doCancel(),!0;if(e!==s){if(s!==null){const r=s.toolManager.findTool(\"Dragging\");if(s!==null&&s!==n&&r!==null)return s.stopAutoScroll(),DraggingTool.bt.isDragOutStarted=!1,r.doSimulatedDragLeave(),!1}DraggingTool.vh=e;const o=e.toolManager.findTool(\"Dragging\");o!==null&&(DraggingTool.bt.eA(),o.lA(),o.doSimulatedDragEnter())}if(e!==this.diagram){let o=i;t!==null?(t.targetTouches!==void 0&&(t.targetTouches.length>0?t=t.targetTouches[0]:t.changedTouches.length>0&&(t=t.changedTouches[0])),o=e.getMouse(t)):o===null&&(o=new Point),e.lastInput.documentPoint=o,e.lastInput.viewPoint=e.transformDocToView(o),e.lastInput.down=!1,e.lastInput.up=!0;const r=e.toolManager.findTool(\"Dragging\");r!==null&&r.doSimulatedDrop();const l=DraggingTool.bt;if(l!==null){const h=l.mayCopy();l.transactionResult=h?\"Copy\":\"Move\",l.stopTool()}return!0}return!1}TF(){if(this.draggedParts===null)return;const t=this.draggedParts.iterator;for(;t.next();){const i=t.key;if(i instanceof Node){const e=i.containingGroup;e!==null&&e.hasPlaceholder()&&!this.draggedParts.has(e)&&e.placeholder.u()}}}mayCopy(){if(!this.isCopyEnabled)return!1;const t=this.diagram;if(t.isReadOnly||t.isModelReadOnly||!t.allowInsert||!t.allowCopy||!(U.rr?t.lastInput.alt:t.lastInput.control))return!1;const i=t.selection.iterator;for(;i.next();)if(i.value.canCopy())return!0;return!!(this.draggedLink!==null&&this.dragsLink&&this.draggedLink.canCopy())}mayDragOut(){if(!this.isCopyEnabled)return!1;const t=this.diagram;if(!t.allowDragOut||!t.allowCopy||t.allowMove)return!1;const i=t.selection.iterator;for(;i.next();)if(i.value.canCopy())return!0;return!!(this.draggedLink!==null&&this.dragsLink&&this.draggedLink.canCopy())}mayMove(){const t=this.diagram;if(t.isReadOnly||!t.allowMove)return!1;const i=t.selection.iterator;for(;i.next();)if(i.value.canMove())return!0;return!!(this.draggedLink!==null&&this.dragsLink&&this.draggedLink.canMove())}lA(){DraggingTool.Jw.has(this)||DraggingTool.Jw.add(this)}static PF(){if(DraggingTool.Jw.count>0){const t=DraggingTool.Jw,i=t.length;for(let e=0;e<i;e++){const s=t.elt(e);s.tA(),s.Cl(),s.FS(),s.diagram.stopAutoScroll()}t.clear()}}computeBorder(t,i,e){return!this.wu&&this.draggedParts!==null&&!this.draggedParts.has(t)?e.c(i):null}getDraggingSource(){return DraggingTool.bt}mayDragIn(){const t=this.diagram;if(!t.allowDrop||t.isReadOnly||t.isModelReadOnly||!t.allowInsert)return!1;const i=DraggingTool.bt;return!(i===null||i.diagram.model.dataFormat!==t.model.dataFormat)}doSimulatedDragEnter(){if(!this.mayDragIn())return;const t=this.diagram;t.animationManager.stopAnimation(),t.xr(),t.animationManager.stopAnimation();const i=DraggingTool.bt;i!==null&&(this.diagram.bu=!0,t.lastInput.event===null&&(t.lastInput.event=i.diagram.lastInput.event)),this.doUpdateCursor(null)}doSimulatedDragLeave(){const t=DraggingTool.bt;t!==null&&t.doSimulatedDragOut(),this.diagram.bu=!1,this.doCancel()}doSimulatedDragOver(){const t=this.diagram;t.animationManager.Mu=!0;const i=DraggingTool.bt;if(i!==null&&i.draggedParts!==null){if(!this.mayDragIn())return;this.hA(i.draggedParts.toKeySet(),!1,t.firstInput),this.Pf(this.copiedParts,!1),this.VS(t.lastInput.documentPoint)}t.animationManager.Mu=!1}doSimulatedDrop(){const t=this.diagram,i=DraggingTool.bt;if(i!==null){const e=i.diagram;if(i.wu=!0,this.Cl(),i.draggedParts===null||!this.mayDragIn())return;t.animationManager.Mu=!0,t.O(\"ChangingSelection\",t.selection),this.startTransaction(\"Drop\"),this.hA(i.draggedParts.toKeySet(),!0,t.lastInput),this.Pf(this.copiedParts,!1);const s=new GSet;this.copiedParts!==null&&(t.clearSelection(!0),this.copiedParts.iteratorKeys.each(n=>{n.isSelected=!0,s.add(n)})),this.rA(t.lastInput.documentPoint),t.invalidateDocumentBounds(),this.copiedParts!==null&&(this.transactionResult=\"ExternalCopy\"),this.copiedParts=null,t.doFocus(),t.bu=!1,t.O(\"ExternalObjectsDropped\",s,e),this.stopTransaction(),t.O(\"ChangedSelection\",t.selection)}t.animationManager.Mu=!1}hA(t,i,e){if(this.copiedParts!==null)return;const s=this.diagram;if(s.isReadOnly||s.isModelReadOnly)return;s.skipsUndoManager=!i,s.partManager.addsToTemporaryLayer=!i,this.startPoint=e.documentPoint;const n=s.copyParts(t,s,!0),o=Rect.a();this.NF(t,o);const r=o.x+o.width/2,l=o.y+o.height/2;Rect.o(o);const h=this.bm,f=new GMap,a=Point.a(),c=t.iterator;for(;c.next();){const d=c.value;if(d instanceof Link&&d.canCopy()){const m=n.get(d);if(m===null)continue;m.points=d.points,m.wr(h.x-r,h.y-l),m.suspendsRouting=!0,f.set(m,this.Ks())}}const u=t.iterator;for(;u.next();){const d=u.value;if(d.Ce()&&d.canCopy()){const m=n.get(d);if(m===null)continue;const g=d.location;a.s(h.x-(r-g.x),h.y-(l-g.y)),m.location=a,m.ensureBounds(),f.set(m,this.Ks(a))}}if(Point.o(a),this.copiedParts=f,this.DS(f.toKeySet()),this.draggedLink!==null){const d=this.draggedLink,m=d.routeBounds;d.wr(this.startPoint.x-(m.x+m.width/2),this.startPoint.y-(m.y+m.height/2))}this.doUpdateCursor(null)}MF(){this.isDragOutStarted=!0,this.wu=!1,DraggingTool.bt=this,DraggingTool.vh=this.diagram,this.doSimulatedDragOut()}doSimulatedDragOut(){const t=this.diagram;!this.mayCopy()&&!this.mayMove()?t.currentCursor=this.nodropCursor:t.currentCursor=\"\",this.xu=null}computeMove(t,i,e,s){const n=this.diagram;return n!==null?n.computeMove(t,i,this.dragOptions,s):new Point}static Jw=new List;static bt=null;static vh=null}ToolManager.prototype.doCancel=function(){DraggingTool.bt!==null&&DraggingTool.bt.doCancel(),Tool.prototype.doCancel.call(this)};class LinkingBaseTool extends Tool{US;GS;Ll;HS;qS;Jh;WS;$h;jS;vS;JS;$S;ZS;QS;aA;_S;Tl;tM;constructor(){super(),this.US=100,this.GS=!1,this.Ll=\"pointer\",this.HS=new Link({layerName:\"Tool\"}).add(new Shape({isPanelMain:!0,stroke:\"blue\"}).theme(\"stroke\",\"tempLink\"),new Shape({toArrow:\"Standard\",fill:\"blue\",stroke:\"blue\"}).theme(\"fill\",\"tempLink\").theme(\"stroke\",\"tempLink\")).Kt(),this.Jh=new Shape(\"Rectangle\",{portId:\"\",fill:null,stroke:\"magenta\",strokeWidth:2,desiredSize:Size.Wk}).theme(\"stroke\",\"tempPort\"),this.qS=new Node({selectable:!1,layerName:\"Tool\"}).add(this.Jh).Kt(),this.$h=new Shape(\"Rectangle\",{portId:\"\",fill:null,stroke:\"magenta\",strokeWidth:2,desiredSize:Size.Wk}).theme(\"stroke\",\"tempPort\"),this.WS=new Node({selectable:!1,layerName:\"Tool\"}).add(this.$h).Kt(),this.jS=null,this.vS=null,this.JS=null,this.$S=null,this.ZS=null,this.QS=!0,this.aA=new GMap,this._S=null,this.Tl=null,this.tM=null}doStop(){this.diagram.stopAutoScroll(),this.originalLink=null,this.originalFromNode=null,this.originalFromPort=null,this.originalToNode=null,this.originalToPort=null,this.validPortsCache.clear(),this.targetPort=null}get portGravity(){return this.US}set portGravity(t){U.i(t,\"number\",LinkingBaseTool,\"portGravity\"),t>=0&&(this.US=t)}get isUnconnectedLinkValid(){return this.GS}set isUnconnectedLinkValid(t){U.i(t,\"boolean\",LinkingBaseTool,\"isUnconnectedLinkValid\"),this.GS=t}get linkingCursor(){return this.Ll}set linkingCursor(t){this.Ll=t}get temporaryLink(){return this.HS}set temporaryLink(t){U.e(t,Link,LinkingBaseTool,\"temporaryLink\"),t.Kt(),this.HS=t}get temporaryFromNode(){return this.qS}set temporaryFromNode(t){U.e(t,Node,LinkingBaseTool,\"temporaryFromNode\"),t.Kt(),this.qS=t,t&&(this.Jh=t.port)}get temporaryFromPort(){return this.Jh}set temporaryFromPort(t){if(U.e(t,GraphObject,LinkingBaseTool,\"temporaryFromPort\"),this.Jh!==null){const i=this.Jh.panel;if(i!==null){const e=i.T.indexOf(this.Jh);i.removeAt(e),i.insertAt(e,t)}}this.Jh=t}get temporaryToNode(){return this.WS}set temporaryToNode(t){U.e(t,Node,LinkingBaseTool,\"temporaryToNode\"),t.Kt(),this.WS=t,t&&(this.$h=t.port)}get temporaryToPort(){return this.$h}set temporaryToPort(t){if(U.e(t,GraphObject,LinkingBaseTool,\"temporaryToPort\"),this.$h!==null){const i=this.$h.panel;if(i!==null){const e=i.T.indexOf(this.$h);i.removeAt(e),i.insertAt(e,t)}}this.$h=t}get originalLink(){return this.jS}set originalLink(t){t!==null&&U.e(t,Link,LinkingBaseTool,\"originalLink\"),this.jS=t}get originalFromNode(){return this.vS}set originalFromNode(t){t!==null&&U.e(t,Node,LinkingBaseTool,\"originalFromNode\"),this.vS=t}get originalFromPort(){return this.JS}set originalFromPort(t){t!==null&&U.e(t,GraphObject,LinkingBaseTool,\"originalFromPort\"),this.JS=t}get originalToNode(){return this.$S}set originalToNode(t){t!==null&&U.e(t,Node,LinkingBaseTool,\"originalToNode\"),this.$S=t}get originalToPort(){return this.ZS}set originalToPort(t){t!==null&&U.e(t,GraphObject,LinkingBaseTool,\"originalToPort\"),this.ZS=t}get isForwards(){return this.QS}set isForwards(t){this.QS=t}get validPortsCache(){return this.aA}get targetPort(){return this._S}set targetPort(t){t!==null&&U.e(t,GraphObject,LinkingBaseTool,\"targetPort\"),this._S=t}copyPortProperties(t,i,e,s,n){if(t===null||i===null||e===null||s===null)return;const o=i.getDocumentScale(),r=Size.a();r.width=i.naturalBounds.width*o,r.height=i.naturalBounds.height*o,s.desiredSize=r,Size.o(r),n?(s.toSpot=i.toSpot,s.toEndSegmentLength=i.toEndSegmentLength):(s.fromSpot=i.fromSpot,s.fromEndSegmentLength=i.fromEndSegmentLength),e.locationSpot=Spot.Center;const l=Point.a();e.location=i.getDocumentPoint(Spot.Center,l),Point.o(l),s.angle=i.getDocumentAngle(),this.portTargeted!==null&&this.portTargeted(t,i,e,s,n)}setNoTargetPortProperties(t,i,e){i!==null&&(i.desiredSize=Size.Wk,i.fromSpot=Spot.None,i.toSpot=Spot.None),t!==null&&(t.location=this.diagram.lastInput.documentPoint),this.portTargeted!==null&&this.portTargeted(null,null,t,i,e)}doMouseDown(){this.isActive&&this.doMouseMove()}doMouseMove(){if(this.isActive){const t=this.diagram;if(this.targetPort=this.findTargetPort(this.isForwards),this.targetPort!==null&&this.targetPort.part instanceof Node){const i=this.targetPort.part;this.isForwards?this.copyPortProperties(i,this.targetPort,this.temporaryToNode,this.temporaryToPort,!0):this.copyPortProperties(i,this.targetPort,this.temporaryFromNode,this.temporaryFromPort,!1)}else this.isForwards?this.setNoTargetPortProperties(this.temporaryToNode,this.temporaryToPort,!0):this.setNoTargetPortProperties(this.temporaryFromNode,this.temporaryFromPort,!1);(t.allowHorizontalScroll||t.allowVerticalScroll)&&t.doAutoScroll(t.lastInput.viewPoint)}}findValidLinkablePort(t,i){if(t===null)return null;const e=t.part;if(!(e instanceof Node))return null;for(;t!==null;){const s=i?t.toLinkable:t.fromLinkable;if(s===!0&&(t.portId!==null||t instanceof Node)&&(i?this.isValidTo(e,t):this.isValidFrom(e,t)))return t;if(s===!1)return null;t=t.panel}return null}findTargetPort(t){const i=this.diagram,e=i.lastInput.documentPoint;let s=this.portGravity;const n=i.findObjectsNear(e,s,h=>this.findValidLinkablePort(h,t),null,!0);let o=1/0,r=null;const l=n.iterator;for(;l.next();){const h=l.value,f=h.part;if(!(f instanceof Node))continue;const a=h.getDocumentPoint(Spot.Center,Point.a()),c=e.x-a.x,u=e.y-a.y;Point.o(a);const d=c*c+u*u;if(d<o){const m=this.validPortsCache.get(h);m!==null?m&&(r=h,o=d):t&&this.isValidLink(this.originalFromNode,this.originalFromPort,f,h)||!t&&this.isValidLink(f,h,this.originalToNode,this.originalToPort)?(this.validPortsCache.set(h,!0),r=h,o=d):this.validPortsCache.set(h,!1)}}if(r!==null){const h=r.part;if(h instanceof Node&&(h.layer===null||h.layer.allowLink))return r}return null}isValidFrom(t,i){if(t===null||i===null)return this.isUnconnectedLinkValid;if(this.diagram.currentTool===this&&(t.layer!==null&&!t.layer.allowLink||i.fromLinkable!==!0))return!1;const e=i.fromMaxLinks;if(e<1/0){if(this.originalLink!==null&&t===this.originalFromNode&&i===this.originalFromPort)return!0;let s=i.portId;if(s===null&&(s=\"\"),t.findLinksOutOf(s).count>=e)return!1}return!0}isValidTo(t,i){if(t===null||i===null)return this.isUnconnectedLinkValid;if(this.diagram.currentTool===this&&(t.layer!==null&&!t.layer.allowLink||i.toLinkable!==!0))return!1;const e=i.toMaxLinks;if(e<1/0){if(this.originalLink!==null&&t===this.originalToNode&&i===this.originalToPort)return!0;let s=i.portId;if(s===null&&(s=\"\"),t.findLinksInto(s).count>=e)return!1}return!0}isInSameNode(t,i){if(t===null||i===null)return!1;if(t===i)return!0;const e=t.part,s=i.part;return e!==null&&e===s}isLinked(t,i){if(t===null||i===null)return!1;const e=t.part;if(!(e instanceof Node))return!1;let s=t.portId;s===null&&(s=\"\");const n=i.part;if(!(n instanceof Node))return!1;let o=i.portId;o===null&&(o=\"\");const r=n.findLinksInto(o);for(;r.next();){const l=r.value;if(l.fromNode===e&&l.fromPortId===s)return!0}return!1}isValidLink(t,i,e,s){if(!this.isValidFrom(t,i)||!this.isValidTo(e,s)||i!==null&&s!==null&&(!(i.fromLinkableSelfNode&&s.toLinkableSelfNode)&&this.isInSameNode(i,s)||!(i.fromLinkableDuplicates&&s.toLinkableDuplicates)&&this.isLinked(i,s))||this.originalLink!==null&&(t!==null&&this.isLabelDependentOnLink(t,this.originalLink)||e!==null&&this.isLabelDependentOnLink(e,this.originalLink))||t!==null&&e!==null&&(t.data===null&&e.data!==null||t.data!==null&&e.data===null)||!this.isValidCycle(t,e,this.originalLink))return!1;let n;return t!==null&&i!==null&&(n=t.linkValidation,n!==null&&!n(t,i,e,s,this.originalLink))||e!==null&&s!==null&&(n=e.linkValidation,n!==null&&!n(t,i,e,s,this.originalLink))?!1:(n=this.linkValidation,n!==null?n(t,i,e,s,this.originalLink):!0)}isLabelDependentOnLink(t,i){if(t===null)return!1;const e=t.labeledLink;if(e===null)return!1;if(e===i)return!0;const s=new GSet;return s.add(t),this.iM(e,i,s)}iM(t,i,e){if(t===i)return!0;const s=t.fromNode;if(s!==null&&s.labeledLink&&(e.add(s),this.iM(s.labeledLink,i,e)))return!0;const n=t.toNode;return!!(n!==null&&n.labeledLink&&(e.add(n),this.iM(n.labeledLink,i,e)))}isValidCycle(t,i,e){if(e===void 0&&(e=null),t===null||i===null)return this.isUnconnectedLinkValid;const s=this.diagram;let n=1;if(s&&(s.model.Sm()?n=s.isTreePathToChildren?5:6:n=s.validCycle),n===1)return!0;if(n===5){const o=e||this.temporaryLink;if(o!==null&&!o.isTreeLink)return!0;const r=i.linksConnected;for(;r.next();){const l=r.value;if(l!==e&&l.isTreeLink&&l.toNode===i)return!1}return!this.Pu(t,i,e,!0)}else if(n===6){const o=e||this.temporaryLink;if(o!==null&&!o.isTreeLink)return!0;const r=t.linksConnected;for(;r.next();){const l=r.value;if(l!==e&&l.isTreeLink&&l.fromNode===t)return!1}return!this.Pu(t,i,e,!0)}else{if(n===2)return!this.DF(t,i,e);if(n===3)return!this.Pu(t,i,e,!1);if(n===4)return!this.FF(t,i,e)}return!0}Pu(t,i,e,s){if(t===i)return!0;if(t===null||i===null)return!1;const n=t.linksConnected;for(;n.next();){const o=n.value;if(o===e||s&&!o.isTreeLink||o.toNode!==t)continue;const r=o.fromNode;if(!(r===t||r===null)&&this.Pu(r,i,e,s))return!0}return!1}DF(t,i,e){if(t===i)return!0;const s=new GSet;return s.add(i),this.fA(s,t,i,e)}fA(t,i,e,s){if(i===e)return!0;if(i===null||e===null||t.has(i))return!1;t.add(i);const n=i.linksConnected;for(;n.next();){const o=n.value;if(o===s||o.toNode!==i)continue;const r=o.fromNode;if(!(r===i||r===null)&&this.fA(t,r,e,s))return!0}return!1}FF(t,i,e){if(t===i)return!0;const s=new GSet;return s.add(i),this.cA(s,t,i,e)}cA(t,i,e,s){if(i===e)return!0;if(i===null||e===null||t.has(i))return!1;t.add(i);const n=i.linksConnected;for(;n.next();){const o=n.value;if(o===s)continue;const r=o.fromNode,l=o.toNode,h=r===i?l:r;if(!(h===i||h===null)&&this.cA(t,h,e,s))return!0}return!1}get linkValidation(){return this.Tl}set linkValidation(t){t!==null&&U.P(t,LinkingBaseTool,\"linkValidation\"),this.Tl=t}get portTargeted(){return this.tM}set portTargeted(t){t!==null&&U.P(t,LinkingBaseTool,\"portTargeted\"),this.tM=t}}var LinkingDirection=(y=>(y[y.Either=1]=\"Either\",y[y.ForwardsOnly=2]=\"ForwardsOnly\",y[y.BackwardsOnly=3]=\"BackwardsOnly\",y))(LinkingDirection||{});class LinkingTool extends LinkingBaseTool{eM;sM;S;nM;constructor(t){super(),this.name=\"Linking\",this.eM={},this.sM=null,this.S=1,this.nM=null,t&&Object.assign(this,t)}static Either=1;static ForwardsOnly=2;static BackwardsOnly=3;get archetypeLinkData(){return this.eM}set archetypeLinkData(t){t!==null&&U.Mo(t,LinkingTool,\"archetypeLinkData\"),t instanceof GraphObject&&U.e(t,Link,LinkingTool,\"archetypeLinkData\"),this.eM=t}get archetypeLabelNodeData(){return this.sM}set archetypeLabelNodeData(t){t!==null&&U.Mo(t,LinkingTool,\"archetypeLabelNodeData\"),t instanceof GraphObject&&U.e(t,Node,LinkingTool,\"archetypeLabelNodeData\"),this.sM=t}get direction(){return this.S}set direction(t){U.j(t,LinkingDirection,\"LinkingDirection\"),this.S=t}get startObject(){return this.nM}set startObject(t){t!==null&&U.e(t,GraphObject,LinkingTool,\"startObject\"),this.nM=t}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;return t.isReadOnly||t.isModelReadOnly||!t.allowLink||!t.model.$w()||!t.lastInput.left||t.currentTool!==this&&!this.isBeyondDragSize()?!1:this.findLinkablePort()!==null}findLinkablePort(){const t=this.diagram;let i=this.startObject;if(i===null&&(i=t.findObjectAt(t.firstInput.documentPoint,null,null)),i===null)return null;const e=i.part;if(!(e instanceof Node))return null;const s=this.direction;if(s===1||s===2){const n=this.findValidLinkablePort(i,!1);if(n!==null)return this.isForwards=!0,n;if(this.startObject===e){const o=e.port;if(this.findValidLinkablePort(o,!1))return this.isForwards=!0,o}}if(s===1||s===3){const n=this.findValidLinkablePort(i,!0);if(n!==null)return this.isForwards=!1,n;if(this.startObject===e){const o=e.port;if(this.findValidLinkablePort(o,!0))return this.isForwards=!1,o}}return null}doActivate(){const t=this.diagram,i=this.findLinkablePort();if(i===null){this.stopTool();return}if(this.startTransaction(this.name),t.isMouseCaptured=!0,t.currentCursor=this.linkingCursor,this.isForwards){this.temporaryToNode!==null&&(this.temporaryToNode.location=t.lastInput.documentPoint),this.originalFromPort=i;const e=this.originalFromPort.part;e instanceof Node&&(this.originalFromNode=e),this.copyPortProperties(this.originalFromNode,this.originalFromPort,this.temporaryFromNode,this.temporaryFromPort,!1)}else{this.temporaryFromNode!==null&&(this.temporaryFromNode.location=t.lastInput.documentPoint),this.originalToPort=i;const e=this.originalToPort.part;e instanceof Node&&(this.originalToNode=e),this.copyPortProperties(this.originalToNode,this.originalToPort,this.temporaryToNode,this.temporaryToPort,!0)}t.add(this.temporaryFromNode),this.temporaryFromNode&&this.temporaryFromNode.ensureBounds(),t.add(this.temporaryToNode),this.temporaryToNode&&this.temporaryToNode.ensureBounds(),this.temporaryLink!==null&&(this.temporaryFromNode!==null&&(this.temporaryLink.fromNode=this.temporaryFromNode),this.temporaryToNode!==null&&(this.temporaryLink.toNode=this.temporaryToNode),this.temporaryLink.isTreeLink=this.isNewTreeLink(),this.temporaryLink.invalidateRoute(),t.add(this.temporaryLink)),this.isActive=!0}doDeactivate(){this.isActive=!1;const t=this.diagram;t.remove(this.temporaryLink),t.remove(this.temporaryFromNode),t.remove(this.temporaryToNode),t.isMouseCaptured=!1,t.currentCursor=\"\",this.stopTransaction()}doStop(){super.doStop(),this.startObject=null}doMouseUp(){if(this.isActive){const t=this.diagram;this.transactionResult=null;let i=null,e=null,s=null,n=null,o=null;try{this.targetPort=this.findTargetPort(this.isForwards);const r=this.targetPort;if(r!==null){const l=r.part;l instanceof Node&&(this.isForwards?(this.originalFromNode!==null&&(i=this.originalFromNode,e=this.originalFromPort),s=l,n=r):(i=l,e=r,this.originalToNode!==null&&(s=this.originalToNode,n=this.originalToPort)))}else this.isForwards?this.originalFromNode!==null&&this.isUnconnectedLinkValid&&(i=this.originalFromNode,e=this.originalFromPort):this.originalToNode!==null&&this.isUnconnectedLinkValid&&(s=this.originalToNode,n=this.originalToPort);i!==null||s!==null?(o=this.insertLink(i,e,s,n),o!==null?(r===null&&(this.isForwards?o.defaultToPoint=t.lastInput.documentPoint:o.defaultFromPoint=t.lastInput.documentPoint),t.allowSelect&&(t.O(\"ChangingSelection\",t.selection),t.clearSelection(!0),o.isSelected=!0),this.transactionResult=this.name,t.O(\"LinkDrawn\",o)):this.doNoLink(i,e,s,n)):this.isForwards?this.doNoLink(this.originalFromNode,this.originalFromPort,null,null):this.doNoLink(null,null,this.originalToNode,this.originalToPort)}finally{this.stopTool(),o&&t.allowSelect&&t.O(\"ChangedSelection\",t.selection)}}}isNewTreeLink(){const t=this.archetypeLinkData;if(t===null)return!0;if(t instanceof Link)return t.isTreeLink;const i=this.diagram;if(i===null)return!0;const e=i.partManager.getLinkCategoryForData(t),s=i.partManager.findLinkTemplateForCategory(e);return s!==null?s.isTreeLink:!0}insertLink(t,i,e,s){return this.diagram.partManager.insertLink(t,i,e,s)}doNoLink(t,i,e,s){}}class RelinkingTool extends LinkingBaseTool{uA=null;dA=null;oM=null;rM=null;ps;lM;constructor(t){super(),this.name=\"Relinking\",this.fromHandleArchetype=new Shape(\"Diamond\",{desiredSize:Size.fu,fill:\"lightblue\",stroke:\"dodgerblue\",cursor:this.linkingCursor,segmentIndex:0}).theme(\"fill\",\"adornmentFill\").theme(\"stroke\",\"adornmentStroke\"),this.toHandleArchetype=new Shape(\"Diamond\",{desiredSize:Size.fu,fill:\"lightblue\",stroke:\"dodgerblue\",cursor:this.linkingCursor,segmentIndex:-1}).theme(\"fill\",\"adornmentFill\").theme(\"stroke\",\"adornmentStroke\"),this.ps=null,this.lM=new Rect,t&&Object.assign(this,t)}updateAdornments(t){if(t===null||!(t instanceof Link))return;let i=\"RelinkFrom\",e=null;if(t.isSelected&&!this.diagram.isReadOnly){const s=t.selectionObject;s!==null&&t.canRelinkFrom()&&t.actualBounds.isReal()&&t.isVisible()&&s.actualBounds.isReal()&&s.isVisibleObject()&&(e=t.findAdornment(i),e===null&&(e=this.makeAdornment(s,!1),t.addAdornment(i,e)))}if(e===null&&t.removeAdornment(i),i=\"RelinkTo\",e=null,t.isSelected&&!this.diagram.isReadOnly){const s=t.selectionObject;s!==null&&t.canRelinkTo()&&t.actualBounds.isReal()&&t.isVisible()&&s.actualBounds.isReal()&&s.isVisibleObject()&&(e=t.findAdornment(i),e===null?(e=this.makeAdornment(s,!0),t.addAdornment(i,e)):e.u())}e===null&&t.removeAdornment(i)}makeAdornment(t,i){let e=i?this.rM:this.oM;return e&&(e=e.copy(),e.adornedObject=t),e}get fromHandleArchetype(){return this.uA}set fromHandleArchetype(t){t!==null&&U.e(t,GraphObject,RelinkingTool,\"fromHandleArchetype\"),this.uA=t,t!==null?this.oM=new Adornment(Panel.Link).add(t).Kt():this.oM=null}get toHandleArchetype(){return this.dA}set toHandleArchetype(t){t!==null&&U.e(t,GraphObject,RelinkingTool,\"toHandleArchetype\"),this.dA=t,t!==null?this.rM=new Adornment(Panel.Link).add(t).Kt():this.rM=null}get handle(){return this.ps}set handle(t){t!==null&&(U.e(t,GraphObject,RelinkingTool,\"handle\"),t.part instanceof Adornment||U.n(\"new handle is not in an Adornment: \"+t)),this.ps=t}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;if(t.isReadOnly||t.isModelReadOnly||!t.allowRelink||!t.model.$w()||!t.lastInput.left)return!1;let e=this.findToolHandleAt(t.firstInput.documentPoint,\"RelinkFrom\");return e===null&&(e=this.findToolHandleAt(t.firstInput.documentPoint,\"RelinkTo\")),e!==null}doActivate(){const t=this.diagram;if(this.originalLink===null){let e=this.handle;if(e===null&&(e=this.findToolHandleAt(t.firstInput.documentPoint,\"RelinkFrom\"),e===null&&(e=this.findToolHandleAt(t.firstInput.documentPoint,\"RelinkTo\"))),e===null)return;const s=e.part;if(!(s instanceof Adornment)||!(s.adornedPart instanceof Link))return;this.handle=e,this.isForwards=s===null||s.category===\"RelinkTo\",this.originalLink=s.adornedPart}const i=this.originalLink;i!==null&&(this.startTransaction(this.name),t.isMouseCaptured=!0,t.currentCursor=this.linkingCursor,this.originalFromPort=i.fromPort,this.originalFromNode=i.fromNode,this.originalToPort=i.toPort,this.originalToNode=i.toNode,this.lM.set(i.actualBounds),i.pointsCount>0&&(i.fromNode===null&&(this.temporaryFromPort!==null&&(this.temporaryFromPort.desiredSize=Size.Gh),this.temporaryFromNode!==null&&(this.temporaryFromNode.location=i.getPoint(0))),i.toNode===null&&(this.temporaryToPort!==null&&(this.temporaryToPort.desiredSize=Size.Gh),this.temporaryToNode!==null&&(this.temporaryToNode.location=i.getPoint(i.pointsCount-1)))),this.copyPortProperties(this.originalFromNode,this.originalFromPort,this.temporaryFromNode,this.temporaryFromPort,!1),this.copyPortProperties(this.originalToNode,this.originalToPort,this.temporaryToNode,this.temporaryToPort,!0),t.add(this.temporaryFromNode),t.add(this.temporaryToNode),this.temporaryLink!==null&&(this.temporaryFromNode!==null&&(this.temporaryLink.fromNode=this.temporaryFromNode),this.temporaryToNode!==null&&(this.temporaryLink.toNode=this.temporaryToNode),this.copyLinkProperties(i,this.temporaryLink),this.temporaryLink.invalidateRoute(),t.add(this.temporaryLink)),this.isActive=!0)}copyLinkProperties(t,i){if(t===null||i===null)return;i.adjusting=t.adjusting,i.corner=t.corner;let e=t.curve;(e===11||e===10)&&(e=0),i.curve=e,i.curviness=t.curviness,i.isTreeLink=t.isTreeLink,i.points=t.points,i.routing=t.routing,i.smoothness=t.smoothness,i.fromSpot=t.fromSpot,i.fromEndSegmentLength=t.fromEndSegmentLength,i.fromShortLength=t.fromShortLength,i.toSpot=t.toSpot,i.toEndSegmentLength=t.toEndSegmentLength,i.toShortLength=t.toShortLength}doDeactivate(){this.isActive=!1;const t=this.diagram;t.remove(this.temporaryLink),t.remove(this.temporaryFromNode),t.remove(this.temporaryToNode),t.isMouseCaptured=!1,t.currentCursor=\"\",this.stopTransaction()}doStop(){super.doStop(),this.handle=null}doMouseUp(){if(this.isActive){const t=this.diagram;this.transactionResult=null;let i=this.originalFromNode,e=this.originalFromPort,s=this.originalToNode,n=this.originalToPort,o=this.originalLink;try{if(this.targetPort=this.findTargetPort(this.isForwards),this.targetPort!==null){const r=this.targetPort.part;r instanceof Node&&(this.isForwards?(s=r,n=this.targetPort):(i=r,e=this.targetPort))}else this.isUnconnectedLinkValid?this.isForwards?(s=null,n=null):(i=null,e=null):o=null;o!==null?(this.reconnectLink(o,this.isForwards?s:i,this.isForwards?n:e,this.isForwards),this.targetPort===null&&(this.isForwards?o.defaultToPoint=t.lastInput.documentPoint:o.defaultFromPoint=t.lastInput.documentPoint,o.invalidateRoute()),this.transactionResult=this.name,t.O(\"LinkRelinked\",o,this.isForwards?this.originalToPort:this.originalFromPort)):this.originalLink!==null&&this.doNoRelink(this.originalLink,this.isForwards),this.originalLink!==null&&this.originalLink.invalidateOtherJumpOvers(this.lM)}finally{this.stopTool()}}}reconnectLink(t,i,e,s){const n=e!==null&&e.portId!==null?e.portId:\"\";return s?(t.toNode=i,t.toPortId=n):(t.fromNode=i,t.fromPortId=n),!0}doNoRelink(t,i){}doDraggingMouseMove(t,i,e,s){t!==null?(this.copyPortProperties(t,i,this.temporaryFromNode,this.temporaryFromPort,!1),this.diagram.add(this.temporaryFromNode)):this.diagram.remove(this.temporaryFromNode),e!==null?(this.copyPortProperties(e,s,this.temporaryToNode,this.temporaryToPort,!0),this.diagram.add(this.temporaryToNode)):this.diagram.remove(this.temporaryToNode)}stopDraggingMouseMove(){this.diagram.remove(this.temporaryFromNode),this.diagram.remove(this.temporaryToNode)}}var ReshapingBehavior=(y=>(y[y.None=0]=\"None\",y[y.Horizontal=1]=\"Horizontal\",y[y.Vertical=2]=\"Vertical\",y[y.All=3]=\"All\",y))(ReshapingBehavior||{});class LinkReshapingTool extends Tool{br;hM;aM;ps;Zw;fM;Mm;constructor(t){super(),this.name=\"LinkReshaping\",this.br=new Shape(\"Rectangle\",{desiredSize:Size.SC,fill:\"lightblue\",stroke:\"dodgerblue\"}).theme(\"fill\",\"adornmentFill\").theme(\"stroke\",\"adornmentStroke\"),this.hM=new Shape(\"Diamond\",{desiredSize:Size.fu,fill:\"lightblue\",stroke:\"dodgerblue\",cursor:\"move\"}).theme(\"fill\",\"adornmentFill\").theme(\"stroke\",\"adornmentStroke\"),this.aM=3,this.ps=null,this.Zw=null,this.fM=new Point,this.Mm=new List,t&&Object.assign(this,t)}static None=0;static Horizontal=1;static Vertical=2;static All=3;getReshapingBehavior(t){return t?t.kr:0}setReshapingBehavior(t,i){t.kr=i}updateAdornments(t){if(t===null||!(t instanceof Link))return;let i=null;if(t.isSelected&&!this.diagram.isReadOnly){const e=t.path;e!==null&&t.canReshape()&&t.actualBounds.isReal()&&t.isVisible()&&e.actualBounds.isReal()&&e.isVisibleObject()&&(i=t.findAdornment(this.name),(i===null||i.cM!==t.pointsCount||i.uM!==t.resegmentable)&&(i=this.makeAdornment(e),i!==null&&(i.cM=t.pointsCount,i.uM=t.resegmentable,t.addAdornment(this.name,i))))}i===null&&t.removeAdornment(this.name)}makeAdornment(t){const i=t.part,e=i.points,s=i.pointsCount,n=i.isOrthogonal;let o=null;if(e!==null&&s>1){o=new Adornment,o.type=Panel.Link;const r=i.firstPickIndex,l=i.lastPickIndex,h=n?1:0;if(i.resegmentable&&i.computeCurve()!==9)for(let f=r+h;f<l-h;f++){const a=this.makeResegmentHandle(t,f);a!==null&&(a.segmentIndex=f,a.segmentFraction=.5,a.fromMaxLinks=999,o.add(a))}for(let f=r+1;f<l;f++){const a=this.makeHandle(t,f);if(a!==null){if(a.segmentIndex=f,f!==r)if(f===r+1&&n){const c=i.getPoint(r);let u=i.getPoint(r+1);Geo.g(c.x,u.x)&&Geo.g(c.y,u.y)?(u=i.getPoint(r-1),Geo.g(c.x,u.x)?(this.setReshapingBehavior(a,2),a.cursor=\"n-resize\"):Geo.g(c.y,u.y)&&(this.setReshapingBehavior(a,1),a.cursor=\"w-resize\")):Geo.g(c.x,u.x)?(this.setReshapingBehavior(a,2),a.cursor=\"n-resize\"):Geo.g(c.y,u.y)&&(this.setReshapingBehavior(a,1),a.cursor=\"w-resize\")}else if(f===l-1&&n){let c=i.getPoint(l-1);const u=i.getPoint(l);Geo.g(c.x,u.x)&&Geo.g(c.y,u.y)?(c=i.getPoint(l+1),Geo.g(c.x,u.x)?(this.setReshapingBehavior(a,2),a.cursor=\"n-resize\"):Geo.g(c.y,u.y)&&(this.setReshapingBehavior(a,1),a.cursor=\"w-resize\")):Geo.g(c.x,u.x)?(this.setReshapingBehavior(a,2),a.cursor=\"n-resize\"):Geo.g(c.y,u.y)&&(this.setReshapingBehavior(a,1),a.cursor=\"w-resize\")}else f===l||(this.setReshapingBehavior(a,3),a.cursor=\"move\");o.add(a)}}o.adornedObject=t}return o}makeHandle(t,i){const e=this.handleArchetype;return e===null?null:e.copy().dM()}get handleArchetype(){return this.br}set handleArchetype(t){t!==null&&U.e(t,GraphObject,LinkReshapingTool,\"handleArchetype\"),this.br=t}makeResegmentHandle(t,i){const e=this.midHandleArchetype;return e===null?null:e.copy().dM()}get midHandleArchetype(){return this.hM}set midHandleArchetype(t){t!==null&&U.e(t,GraphObject,LinkReshapingTool,\"midHandleArchetype\"),this.hM=t}get handle(){return this.ps}set handle(t){t!==null&&(U.e(t,GraphObject,LinkReshapingTool,\"handle\"),t.part instanceof Adornment||U.n(\"new handle is not in an Adornment: \"+t)),this.ps=t}get adornedLink(){return this.Zw}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;return t.isReadOnly||!t.allowReshape||!t.lastInput.left?!1:this.findToolHandleAt(t.firstInput.documentPoint,this.name)!==null}doActivate(){const t=this.diagram;if(this.handle===null&&(this.handle=this.findToolHandleAt(t.firstInput.documentPoint,this.name)),this.handle===null)return;const i=this.handle.part.adornedPart;if(i instanceof Link){if(this.Zw=i,t.isMouseCaptured=!0,this.startTransaction(this.name),i.resegmentable&&this.handle.fromMaxLinks===999){const e=i.points.copy(),s=this.getResegmentingPoint();if(e.insertAt(this.handle.segmentIndex+1,s),i.isOrthogonal&&e.insertAt(this.handle.segmentIndex+1,s),i.points=e,i.invalidateAdornments(),i.updateAdornments(),this.handle=this.findToolHandleAt(t.firstInput.documentPoint,this.name),this.handle===null){this.doDeactivate();return}}this.fM=i.getPoint(this.handle.segmentIndex),this.Mm=i.points.copy(),this.isActive=!0}}doDeactivate(){this.stopTransaction(),this.handle=null,this.Zw=null;const t=this.diagram;t.isMouseCaptured=!1,this.isActive=!1}stopTransaction(){const t=this.diagram,i=super.stopTransaction();return i&&t.undoManager.transactionToUndo!==null&&t.undoManager.transactionToUndo.optimize(),i}doCancel(){const t=this.adornedLink;t!==null&&(t.points=this.Mm),this.stopTool()}getResegmentingPoint(){return this.handle===null?this.diagram.lastInput.documentPoint:this.handle.getDocumentPoint(Spot.Center)}doMouseMove(){const t=this.diagram;if(this.isActive){const i=this.computeReshape(t.lastInput.documentPoint);this.reshape(i)}}doMouseUp(){const t=this.diagram;if(this.isActive){const i=this.computeReshape(t.lastInput.documentPoint);this.reshape(i);const e=this.adornedLink;if(e!==null&&e.resegmentable&&this.handle!==null){const s=this.handle.segmentIndex,n=e.getPoint(s-1),o=e.getPoint(s),r=e.getPoint(s+1);if(e.isOrthogonal){if(s>e.firstPickIndex+1&&s<e.lastPickIndex-1){let l=e.getPoint(s-2);if(this.isWithinResegmentingDistance(n,o)&&(this.isInLineOrtho(l,n,o,r,!0)||this.isInLineOrtho(l,n,o,r,!1))){const h=e.points.copy();this.isInLineOrtho(l,n,o,r,!0)?(h.setElt(s-2,new Point(l.x,(r.y+l.y)/2)),h.setElt(s+1,new Point(r.x,(r.y+l.y)/2))):(h.setElt(s-2,new Point((r.x+l.x)/2,l.y)),h.setElt(s+1,new Point((r.x+l.x)/2,r.y))),h.removeAt(s),h.removeAt(s-1),e.points=h,e.invalidateAdornments()}else if(l=e.getPoint(s+2),this.isWithinResegmentingDistance(o,r)&&(this.isInLineOrtho(n,o,r,l,!0)||this.isInLineOrtho(n,o,r,l,!1))){const h=e.points.copy();this.isInLineOrtho(n,o,r,l,!0)?(h.setElt(s-1,new Point(n.x,(n.y+l.y)/2)),h.setElt(s+2,new Point(l.x,(n.y+l.y)/2))):(h.setElt(s-1,new Point((n.x+l.x)/2,n.y)),h.setElt(s+2,new Point((n.x+l.x)/2,l.y))),h.removeAt(s+1),h.removeAt(s),e.points=h,e.invalidateAdornments()}}}else{const l=Point.a();if(Geo.xl(n.x,n.y,r.x,r.y,o.x,o.y,l)&&l.distanceSquaredPoint(o)<this.resegmentingDistance*this.resegmentingDistance){const h=e.points.copy();h.removeAt(s),e.points=h,e.invalidateAdornments()}Point.o(l)}}t.invalidateDocumentBounds(),this.transactionResult=this.name,t.O(\"LinkReshaped\",this.adornedLink,this.Mm)}this.stopTool()}isWithinResegmentingDistance(t,i){return Math.abs(t.x-i.x)<this.resegmentingDistance&&Math.abs(t.y-i.y)<this.resegmentingDistance}isInLineOrtho(t,i,e,s,n){return n?Math.abs(t.y-i.y)<this.resegmentingDistance&&Math.abs(i.y-e.y)<this.resegmentingDistance&&Math.abs(e.y-s.y)<this.resegmentingDistance:Math.abs(t.x-i.x)<this.resegmentingDistance&&Math.abs(i.x-e.x)<this.resegmentingDistance&&Math.abs(e.x-s.x)<this.resegmentingDistance}get resegmentingDistance(){return this.aM}set resegmentingDistance(t){U.i(t,\"number\",LinkReshapingTool,\"resegmentingDistance\"),this.aM=t}reshape(t){const i=this.adornedLink;if(i===null)return;const e=this.handle;if(e===null)return;i.startRoute();let s=e.segmentIndex;const n=this.getReshapingBehavior(e);if(i.isOrthogonal)if(s===i.firstPickIndex+1){const o=i.firstPickIndex+1;n===2?(i.setPointAt(o,i.getPoint(o-1).x,t.y),i.setPointAt(o+1,i.getPoint(o+2).x,t.y)):n===1&&(i.setPointAt(o,t.x,i.getPoint(o-1).y),i.setPointAt(o+1,t.x,i.getPoint(o+2).y))}else if(s===i.lastPickIndex-1){const o=i.lastPickIndex-1;n===2?(i.setPointAt(o-1,i.getPoint(o-2).x,t.y),i.setPointAt(o,i.getPoint(o+1).x,t.y)):n===1&&(i.setPointAt(o-1,t.x,i.getPoint(o-2).y),i.setPointAt(o,t.x,i.getPoint(o+1).y))}else{let o=s;const r=i.getPoint(o),l=i.getPoint(o-1),h=i.getPoint(o+1);Geo.g(l.x,r.x)&&Geo.g(r.y,h.y)?(Geo.g(l.x,i.getPoint(o-2).x)&&!Geo.g(l.y,i.getPoint(o-2).y)?(i.insertPointAt(o,t.x,l.y),s++,o++):i.setPointAt(o-1,t.x,l.y),Geo.g(h.y,i.getPoint(o+2).y)&&!Geo.g(h.x,i.getPoint(o+2).x)?i.insertPointAt(o+1,h.x,t.y):i.setPointAt(o+1,h.x,t.y)):Geo.g(l.y,r.y)&&Geo.g(r.x,h.x)?(Geo.g(l.y,i.getPoint(o-2).y)&&!Geo.g(l.x,i.getPoint(o-2).x)?(i.insertPointAt(o,l.x,t.y),s++,o++):i.setPointAt(o-1,l.x,t.y),Geo.g(h.x,i.getPoint(o+2).x)&&!Geo.g(h.y,i.getPoint(o+2).y)?i.insertPointAt(o+1,t.x,h.y):i.setPointAt(o+1,t.x,h.y)):Geo.g(l.x,r.x)&&Geo.g(r.x,h.x)?(Geo.g(l.x,i.getPoint(o-2).x)&&!Geo.g(l.y,i.getPoint(o-2).y)?(i.insertPointAt(o,t.x,l.y),s++,o++):i.setPointAt(o-1,t.x,l.y),Geo.g(h.x,i.getPoint(o+2).x)&&!Geo.g(h.y,i.getPoint(o+2).y)?i.insertPointAt(o+1,t.x,h.y):i.setPointAt(o+1,t.x,h.y)):Geo.g(l.y,r.y)&&Geo.g(r.y,h.y)&&(Geo.g(l.y,i.getPoint(o-2).y)&&!Geo.g(l.x,i.getPoint(o-2).x)?(i.insertPointAt(o,l.x,t.y),s++,o++):i.setPointAt(o-1,l.x,t.y),Geo.g(h.y,i.getPoint(o+2).y)&&!Geo.g(h.x,i.getPoint(o+2).x)?i.insertPointAt(o+1,h.x,t.y):i.setPointAt(o+1,h.x,t.y)),i.setPointAt(s,t.x,t.y)}else{i.setPointAt(s,t.x,t.y);let o=i.fromNode,r=i.fromPort;if(o!==null){const f=o.findVisibleNode();f!==null&&f!==o&&(o=f,r=o.port)}if(s===1&&r!==null&&i.computeSpot(!0,r).isNoSpot()){const f=r.getDocumentPoint(Spot.Center,Point.a()),a=i.getLinkPointFromPoint(o,r,f,t,!0,Point.a());i.setPointAt(0,a.x,a.y),Point.o(f),Point.o(a)}let l=i.toNode,h=i.toPort;if(l!==null){const f=l.findVisibleNode();f!==null&&f!==l&&(l=f,h=l.port)}if(s===i.pointsCount-2&&h!==null&&i.computeSpot(!1,h).isNoSpot()){const f=h.getDocumentPoint(Spot.Center,Point.a()),a=i.getLinkPointFromPoint(l,h,f,t,!1,Point.a());i.setPointAt(i.pointsCount-1,a.x,a.y),Point.o(f),Point.o(a)}}i.commitRoute()}computeReshape(t){const i=this.adornedLink;if(i===null)return t;const e=this.handle;if(e===null)return t;const s=e.segmentIndex;switch(this.getReshapingBehavior(e)){case 3:return t;case 2:{const n=i.getPoint(s);return new Point(n.x,t.y)}case 1:{const n=i.getPoint(s);return new Point(t.x,n.y)}default:case 0:return i.getPoint(s)}}get originalPoint(){return this.fM}get originalPoints(){return this.Mm}}class ResizingTool extends Tool{Sr;Mr;Lo;Nf;gM;ys;br;ps;Pm;mM;Cf;Qw;_w;tx;constructor(t){super(),this.name=\"Resizing\",this.Sr=new Size(1,1).p(),this.Mr=new Size(9999,9999).p(),this.Lo=new Size(NaN,NaN).p(),this.Nf=!1,this.gM=!0,this.ys=null,this.br=new Shape(\"Rectangle\",{alignmentFocus:Spot.Center,desiredSize:Size.SC,fill:\"lightblue\",stroke:\"dodgerblue\",strokeWidth:1,cursor:\"pointer\"}).theme(\"fill\",\"adornmentFill\").theme(\"stroke\",\"adornmentStroke\"),this.ps=null,this.Pm=new Point,this.mM=new Size,this.Cf=new Point,this.Qw=new Size(0,0),this._w=new Size(1/0,1/0),this.tx=new Size(1,1),t&&Object.assign(this,t)}updateAdornments(t){if(!(t===null||t instanceof Link)){if(t.isSelected&&!this.diagram.isReadOnly){const i=t.resizeObject;let e=t.findAdornment(this.name);if(i!==null&&t.canResize()&&t.actualBounds.isReal()&&t.isVisible()&&i.actualBounds.isReal()&&i.isVisibleObject()&&((e===null||e.adornedObject!==i)&&(e=this.makeAdornment(i)),e!==null)){const s=i.getDocumentAngle();t.Dl()&&this.updateResizeHandles(e,s),t.addAdornment(this.name,e);return}}t.removeAdornment(this.name)}}makeAdornment(t){let i=null;const e=t.part?.resizeAdornmentTemplate;if(e){if(i=e.copy(),i===null)return null}else{i=new Adornment,i.type=Panel.Spot,i.locationSpot=Spot.Center;const s=new Placeholder;s.isPanelMain=!0,i.add(s);let n=this.makeHandle(t,Spot.TopLeft);n!==null&&i.add(n),n=this.makeHandle(t,Spot.TopRight),n!==null&&i.add(n),n=this.makeHandle(t,Spot.BottomRight),n!==null&&i.add(n),n=this.makeHandle(t,Spot.BottomLeft),n!==null&&i.add(n),n=this.makeHandle(t,Spot.MiddleTop),n!==null&&i.add(n),n=this.makeHandle(t,Spot.MiddleRight),n!==null&&i.add(n),n=this.makeHandle(t,Spot.MiddleBottom),n!==null&&i.add(n),n=this.makeHandle(t,Spot.MiddleLeft),n!==null&&i.add(n)}return i.adornedObject=t,i}makeHandle(t,i){const e=this.handleArchetype;if(e===null)return null;const s=e.copy().dM();return s.alignment=i,s}updateResizeHandles(t,i){if(t!==null){if(!t.alignment.isDefault()&&(t.cursor===\"pointer\"||t.cursor.indexOf(\"resize\")>0))this.RF(t,i);else if(t instanceof Panel){const e=t.elements;for(;e.next();){const s=e.value;this.updateResizeHandles(s,i)}}}}RF(t,i){let e=t.alignment;e.isNoSpot()&&(e=Spot.Center);let s=i;if(e.x<=0)e.y<=0?s+=225:e.y>=1?s+=135:s+=180;else if(e.x>=1)e.y<=0?s+=315:e.y>=1&&(s+=45);else if(e.y<=0)s+=270;else if(e.y>=1)s+=90;else return;s<0?s+=360:s>=360&&(s-=360),s<22.5?t.cursor=\"e-resize\":s<67.5?t.cursor=\"se-resize\":s<112.5?t.cursor=\"s-resize\":s<157.5?t.cursor=\"sw-resize\":s<202.5?t.cursor=\"w-resize\":s<247.5?t.cursor=\"nw-resize\":s<292.5?t.cursor=\"n-resize\":s<337.5?t.cursor=\"ne-resize\":t.cursor=\"e-resize\"}get handleArchetype(){return this.br}set handleArchetype(t){t!==null&&U.e(t,GraphObject,ResizingTool,\"handleArchetype\"),this.br=t}get handle(){return this.ps}set handle(t){t!==null&&(U.e(t,GraphObject,ResizingTool,\"handle\"),t.part instanceof Adornment||U.n(\"new handle is not in an Adornment: \"+t)),this.ps=t}get adornedObject(){return this.ys}set adornedObject(t){t!==null&&(U.e(t,GraphObject,ResizingTool,\"handle\"),t.part instanceof Adornment&&U.n(\"new handle must not be in an Adornment: \"+t)),this.ys=t}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;return t.isReadOnly||!t.allowResize||!t.lastInput.left?!1:this.findToolHandleAt(t.firstInput.documentPoint,this.name)!==null}doActivate(){const t=this.diagram;this.handle===null&&(this.handle=this.findToolHandleAt(t.firstInput.documentPoint,this.name)),this.handle!==null&&(this.adornedObject=this.handle.part.adornedObject,this.adornedObject!==null&&this.adornedObject.part!==null&&(t.isMouseCaptured=!0,t.animationManager.stopAnimation(),t.ku=!0,this.startTransaction(this.name),this.Pm.set(this.adornedObject.getDocumentPoint(this.handle.alignment.opposite())),this.Cf.set(this.adornedObject.part.location),this.mM.set(this.adornedObject.desiredSize),this.tx=this.computeCellSize(),this.Qw=this.computeMinSize(),this._w=this.computeMaxSize(),this.isActive=!0))}doDeactivate(){const t=this.diagram;t.ku=!1,t.Nl=!0,this.stopTransaction(),this.handle=null,this.ys=null,t.isMouseCaptured=!1,this.isActive=!1}stopTransaction(){const t=this.diagram,i=super.stopTransaction();return i&&t.undoManager.transactionToUndo!==null&&t.undoManager.transactionToUndo.optimize(),i}doCancel(){this.adornedObject!==null&&this.adornedObject.part!==null&&(this.adornedObject.desiredSize=this.originalDesiredSize,this.adornedObject.part.location=this.originalLocation),this.stopTool()}doMouseMove(){const t=this.diagram;if(!this.isActive||this.adornedObject===null||this.handle===null)return;const i=this.Qw,e=this._w,s=this.tx,n=t.lastInput.documentPoint,o=this.adornedObject.getLocalPoint(n,Point.a()),r=this.computeReshape(),l=this.computeResize(o,this.handle.alignment,i,e,s,r);this.resize(l),t.maybeUpdate(),Point.o(o)}doMouseUp(){const t=this.diagram;if(this.isActive&&this.adornedObject!==null&&this.handle!==null){const i=this.Qw,e=this._w,s=this.tx,n=this.adornedObject.getLocalPoint(t.lastInput.documentPoint,Point.a()),o=this.computeReshape(),r=this.computeResize(n,this.handle.alignment,i,e,s,o);this.resize(r),Point.o(n),t.invalidateDocumentBounds(),this.transactionResult=this.name,t.O(\"PartResized\",this.adornedObject,this.originalDesiredSize)}this.stopTool()}resize(t){const i=this.diagram,e=this.adornedObject;if(e===null)return;e.desiredSize=t.size;const s=e.part;if(s===null||this.handle===null)return;s.ensureBounds();const n=e.getDocumentPoint(this.handle.alignment.opposite());if(s instanceof Group){const o=new List;o.add(s);let r;!this.dragsMembers&&!s.hasPlaceholder()&&(r=new DraggingOptions,r.dragsMembers=!1),i.moveParts(o,this.oppositePoint.copy().subtract(n),!0,r)}else s.location=s.location.copy().subtract(n).add(this.oppositePoint);i.maybeUpdate()}computeResize(t,i,e,s,n,o){if(this.adornedObject===null)return Rect.zg;i.isNoSpot()&&(i=Spot.Center);const r=this.adornedObject.naturalBounds,l=r.x,h=r.y,f=r.x+r.width,a=r.y+r.height;let c=1;if(!o){let m=r.width,g=r.height;m<=0&&(m=1),g<=0&&(g=1),c=g/m}const u=Point.a();Geo.Vg(t.x,t.y,l,h,n.width,n.height,u);const d=r.copy();return i.x<=0?i.y<=0?(d.x=Math.max(u.x,f-s.width),d.x=Math.min(d.x,f-e.width),d.width=Math.max(f-d.x,e.width),d.y=Math.max(u.y,a-s.height),d.y=Math.min(d.y,a-e.height),d.height=Math.max(a-d.y,e.height),o||(d.height/d.width>=1?(d.height=Math.max(Math.min(c*d.width,s.height),e.height),d.width=d.height/c):(d.width=Math.max(Math.min(d.height/c,s.width),e.width),d.height=c*d.width),d.x=f-d.width,d.y=a-d.height)):i.y>=1?(d.x=Math.max(u.x,f-s.width),d.x=Math.min(d.x,f-e.width),d.width=Math.max(f-d.x,e.width),d.height=Math.max(Math.min(u.y-h,s.height),e.height),o||(d.height/d.width>=1?(d.height=Math.max(Math.min(c*d.width,s.height),e.height),d.width=d.height/c):(d.width=Math.max(Math.min(d.height/c,s.width),e.width),d.height=c*d.width),d.x=f-d.width)):(d.x=Math.max(u.x,f-s.width),d.x=Math.min(d.x,f-e.width),d.width=f-d.x,o||(d.height=Math.max(Math.min(c*d.width,s.height),e.height),d.width=d.height/c,d.y=h+.5*(a-h-d.height))):i.x>=1?i.y<=0?(d.width=Math.max(Math.min(u.x-l,s.width),e.width),d.y=Math.max(u.y,a-s.height),d.y=Math.min(d.y,a-e.height),d.height=Math.max(a-d.y,e.height),o||(d.height/d.width>=1?(d.height=Math.max(Math.min(c*d.width,s.height),e.height),d.width=d.height/c):(d.width=Math.max(Math.min(d.height/c,s.width),e.width),d.height=c*d.width),d.y=a-d.height)):i.y>=1?(d.width=Math.max(Math.min(u.x-l,s.width),e.width),d.height=Math.max(Math.min(u.y-h,s.height),e.height),o||(d.height/d.width>=1?(d.height=Math.max(Math.min(c*d.width,s.height),e.height),d.width=d.height/c):(d.width=Math.max(Math.min(d.height/c,s.width),e.width),d.height=c*d.width))):(d.width=Math.max(Math.min(u.x-l,s.width),e.width),o||(d.height=Math.max(Math.min(c*d.width,s.height),e.height),d.width=d.height/c,d.y=h+.5*(a-h-d.height))):i.y<=0?(d.y=Math.max(u.y,a-s.height),d.y=Math.min(d.y,a-e.height),d.height=a-d.y,o||(d.width=Math.max(Math.min(d.height/c,s.width),e.width),d.height=c*d.width,d.x=l+.5*(f-l-d.width))):i.y>=1&&(d.height=Math.max(Math.min(u.y-h,s.height),e.height),o||(d.width=Math.max(Math.min(d.height/c,s.width),e.width),d.height=c*d.width,d.x=l+.5*(f-l-d.width))),Point.o(u),d}computeReshape(){let t=0;return this.adornedObject instanceof Shape&&(t=this.adornedObject.pM()),!(t===6||this.diagram.lastInput.shift)}computeMinSize(){if(this.adornedObject===null)return Size.Gh;const t=this.adornedObject.minSize.copy(),i=this.minSize;return!isNaN(i.width)&&i.width>t.width&&(t.width=i.width),!isNaN(i.height)&&i.height>t.height&&(t.height=i.height),t}computeMaxSize(){if(this.adornedObject===null)return Size.Mw;const t=this.adornedObject.maxSize.copy(),i=this.maxSize;return!isNaN(i.width)&&i.width<t.width&&(t.width=i.width),!isNaN(i.height)&&i.height<t.height&&(t.height=i.height),t}computeCellSize(){const t=new Size(NaN,NaN),i=this.adornedObject?.part;if(i){const n=i.resizeCellSize;!isNaN(n.width)&&n.width>0&&(t.width=n.width),!isNaN(n.height)&&n.height>0&&(t.height=n.height)}let e=this.cellSize;isNaN(t.width)&&!isNaN(e.width)&&e.width>0&&(t.width=e.width),isNaN(t.height)&&!isNaN(e.height)&&e.height>0&&(t.height=e.height);const s=this.diagram;if((isNaN(t.width)||isNaN(t.height))&&s){const n=s.grid;n!==null&&n.visible&&this.isGridSnapEnabled&&(e=n.gridCellSize,isNaN(t.width)&&!isNaN(e.width)&&e.width>0&&(t.width=e.width),isNaN(t.height)&&!isNaN(e.height)&&e.height>0&&(t.height=e.height))}return(isNaN(t.width)||t.width===0||t.width===1/0)&&(t.width=1),(isNaN(t.height)||t.height===0||t.height===1/0)&&(t.height=1),t}get minSize(){return this.Sr}set minSize(t){if(U.e(t,Size,ResizingTool,\"minSize\"),!this.Sr.equals(t)){let e=t.width;isNaN(e)&&(e=0);let s=t.height;isNaN(s)&&(s=0),this.Sr.s(e,s)}}get maxSize(){return this.Mr}set maxSize(t){if(U.e(t,Size,ResizingTool,\"maxSize\"),!this.Mr.equals(t)){let e=t.width;isNaN(e)&&(e=1/0);let s=t.height;isNaN(s)&&(s=1/0),this.Mr.s(e,s)}}get cellSize(){return this.Lo}set cellSize(t){U.e(t,Size,ResizingTool,\"cellSize\"),this.Lo.equals(t)||this.Lo.c(t)}get isGridSnapEnabled(){return this.Nf}set isGridSnapEnabled(t){U.i(t,\"boolean\",ResizingTool,\"isGridSnapEnabled\"),this.Nf=t}get dragsMembers(){return this.gM}set dragsMembers(t){U.i(t,\"boolean\",ResizingTool,\"dragsMembers\"),this.gM=t}get oppositePoint(){return this.Pm}set oppositePoint(t){U.e(t,Point,ResizingTool,\"oppositePoint\"),this.Pm.equals(t)||this.Pm.c(t)}get originalDesiredSize(){return this.mM}get originalLocation(){return this.Cf}}class RotatingTool extends Tool{yM;wM;ys=null;br=null;ix=null;ps=null;xM;Nm;Cf;bM;kM;constructor(t){super(),this.name=\"Rotating\",this.yM=45,this.wM=2,this.Cf=new Point,this.ys=null,this.handleArchetype=new Shape(\"Ellipse\",{desiredSize:Size.fu,fill:\"lightblue\",stroke:\"dodgerblue\",strokeWidth:1,cursor:\"pointer\"}).theme(\"fill\",\"adornmentFill\").theme(\"stroke\",\"adornmentStroke\"),this.ps=null,this.xM=0,this.Nm=new Point(NaN,NaN),this.bM=0,this.kM=50,t&&Object.assign(this,t)}updateAdornments(t){if(t!==null){if(t.Fl()){const i=t.rotateObject;if(i===t||i===t.path||i.isPanelMain)return}if(t.isSelected&&!this.diagram.isReadOnly){const i=t.rotateObject;if(i!==null&&t.canRotate()&&t.actualBounds.isReal()&&t.isVisible()&&i.actualBounds.isReal()&&i.isVisibleObject()){let e=t.findAdornment(this.name);if((e===null||e.adornedObject!==i)&&(e=this.makeAdornment(i)),e!==null){e.angle=i.getDocumentAngle(),e.hasPlaceholder()||(e.location=this.computeAdornmentLocation(i)),t.addAdornment(this.name,e);return}}}t.removeAdornment(this.name)}}makeAdornment(t){let i=null;const e=t.part?.rotateAdornmentTemplate;return e?i=e.copy():this.ix!==null&&(i=this.ix.copy()),i===null?null:(i.adornedObject=t,i)}get handleArchetype(){return this.br}set handleArchetype(t){t!==null&&U.e(t,GraphObject,RotatingTool,\"handleArchetype\"),this.br=t,t!==null?this.ix=new Adornment(Panel.Position,{locationSpot:Spot.Center}).add(t).Kt():this.ix=null}get handle(){return this.ps}set handle(t){t!==null&&(U.e(t,GraphObject,RotatingTool,\"handle\"),t.part instanceof Adornment||U.n(\"new handle is not in an Adornment: \"+t)),this.ps=t}get adornedObject(){return this.ys}set adornedObject(t){t!==null&&(U.e(t,GraphObject,RotatingTool,\"handle\"),t.part instanceof Adornment&&U.n(\"new handle must not be in an Adornment: \"+t)),this.ys=t}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;return t.isReadOnly||!t.allowRotate||!t.lastInput.left?!1:this.findToolHandleAt(t.firstInput.documentPoint,this.name)!==null}doActivate(){const t=this.diagram;if(this.adornedObject===null){if(this.handle===null&&(this.handle=this.findToolHandleAt(t.firstInput.documentPoint,this.name)),this.handle===null)return;this.adornedObject=this.handle.part.adornedObject}this.adornedObject===null||this.adornedObject.part===null||(t.isMouseCaptured=!0,t.delaysLayout=!0,this.startTransaction(this.name),this.xM=this.adornedObject.angle,this.Nm=this.computeRotationPoint(this.adornedObject),this.Cf=this.adornedObject.part.location.copy(),this.isActive=!0)}computeRotationPoint(t){const i=t.part;if(i!==null){const e=i.locationObject;if(i.rotationSpot.isSpot())return t.getDocumentPoint(i.rotationSpot);if(t===i||t===e)return e.getDocumentPoint(i.locationSpot)}return t.getDocumentPoint(Spot.Center)}computeAdornmentLocation(t){let i=this.rotationPoint;i.isReal()||(i=this.computeRotationPoint(t));const e=t.getLocalPoint(i);let s=this.handleAngle;s<0?s+=360:s>=360&&(s-=360),s=Math.round(Math.round(s/45)*45);const n=this.handleDistance;return s===0?e.x=t.naturalBounds.width+n:s===45?(e.x=t.naturalBounds.width+n,e.y=t.naturalBounds.height+n):s===90?e.y=t.naturalBounds.height+n:s===135?(e.x=-n,e.y=t.naturalBounds.height+n):s===180?e.x=-n:s===225?(e.x=-n,e.y=-n):s===270?e.y=-n:s===315&&(e.x=t.naturalBounds.width+n,e.y=-n),t.getDocumentPoint(e)}doDeactivate(){const t=this.diagram;this.stopTransaction(),this.handle=null,this.ys=null,this.Nm=new Point(NaN,NaN),t.isMouseCaptured=!1,this.isActive=!1}stopTransaction(){const t=this.diagram,i=super.stopTransaction();return i&&t.undoManager.transactionToUndo!==null&&t.undoManager.transactionToUndo.optimize(),i}doCancel(){const t=this.diagram;t.delaysLayout=!1,this.rotate(this.originalAngle),this.stopTool()}doMouseMove(){const t=this.diagram;if(this.isActive){const i=this.computeRotate(t.lastInput.documentPoint);this.rotate(i)}}doMouseUp(){const t=this.diagram;if(this.isActive){t.delaysLayout=!1;const i=this.computeRotate(t.lastInput.documentPoint);this.rotate(i),t.invalidateDocumentBounds(),this.transactionResult=this.name,t.O(\"PartRotated\",this.adornedObject,this.originalAngle)}this.stopTool()}rotate(t){Debug&&U.r(t,RotatingTool,\"rotate:newangle\");const i=this.adornedObject;if(i===null||i.part===null)return;i.angle=t;const e=i.part;e.ensureBounds();const s=e.locationObject,n=e.rotateObject;if(s===n||s.isContainedBy(n)){const o=this.Cf.copy();e.location=o.subtract(this.rotationPoint).rotate(t-this.originalAngle).add(this.rotationPoint)}this.diagram.maybeUpdate()}computeRotate(t){let i=this.rotationPoint.directionPoint(t)-this.handleAngle;const e=this.adornedObject?.panel;e&&(i-=e.getDocumentAngle()),i>=360?i-=360:i<0&&(i+=360);const s=Math.min(Math.abs(this.snapAngleMultiple),180),n=Math.min(Math.abs(this.snapAngleEpsilon),s/2);return!this.diagram.lastInput.shift&&s>0&&n>0&&(i%s<n?i=Math.floor(i/s)*s:i%s>s-n&&(i=(Math.floor(i/s)+1)*s)),i>=360?i-=360:i<0&&(i+=360),i}get snapAngleMultiple(){return this.yM}set snapAngleMultiple(t){U.i(t,\"number\",RotatingTool,\"snapAngleMultiple\"),this.yM=t}get snapAngleEpsilon(){return this.wM}set snapAngleEpsilon(t){U.i(t,\"number\",RotatingTool,\"snapAngleEpsilon\"),this.wM=t}get originalAngle(){return this.xM}get rotationPoint(){return this.Nm}set rotationPoint(t){this.Nm=t.copy()}get handleAngle(){return this.bM}set handleAngle(t){U.i(t,\"number\",RotatingTool,\"handleAngle\"),this.bM=t}get handleDistance(){return this.kM}set handleDistance(t){U.i(t,\"number\",RotatingTool,\"handleDistance\"),this.kM=t}}class ClickSelectingTool extends Tool{constructor(t){super(),this.name=\"ClickSelecting\",t&&Object.assign(this,t)}canStart(){return!(!this.isEnabled||this.isBeyondDragSize())}doMouseUp(){this.isActive&&(this.standardMouseSelect(),this.standardMouseClick()||this.diagram.lastInput.isTouchEvent&&this.diagram.toolManager.doToolTip()),this.stopTool()}}class ActionTool extends Tool{Af;constructor(t){super(),this.name=\"Action\",this.Af=null,t&&Object.assign(this,t)}canStart(){if(!this.isEnabled)return!1;const t=this.diagram,i=t.lastInput,e=t.findObjectAt(i.documentPoint,s=>{for(;s.panel!==null;){if(s.isActionable)return s;s=s.panel}return s});return e!==null&&e.isActionable?(this.Af=e,t.Sf=t.findObjectAt(i.documentPoint,null,null),!0):!1}doMouseDown(){if(!this.isActive)this.canStart()&&this.doActivate();else{const i=this.diagram.lastInput,e=this.Af;if(e===null)return;i.targetObject=e,e.actionDown!==null&&e.actionDown(i,e)}}doMouseMove(){if(this.isActive){const i=this.diagram.lastInput,e=this.Af;if(e===null)return;i.targetObject=e,e.actionMove!==null&&e.actionMove(i,e)}}doMouseUp(){if(this.isActive){const i=this.diagram.lastInput,e=this.Af;if(e===null)return;i.targetObject=e,e.actionUp!==null&&e.actionUp(i,e),this.standardMouseClick(s=>{for(;s.panel!==null;){if(s.isActionable&&s===e)return s;s=s.panel}return s},s=>s===e)}this.stopTool()}doCancel(){const i=this.diagram.lastInput,e=this.Af;e!==null&&(i.targetObject=e,e.actionCancel!==null&&e.actionCancel(i,e),this.stopTool())}doStop(){this.Af=null}}class ClickCreatingTool extends Tool{Rl;SM;Nf;MM;constructor(t){super(),this.name=\"ClickCreating\",this.Rl=null,this.SM=!0,this.Nf=!1,this.MM=new Point(0,0),t&&Object.assign(this,t)}canStart(){if(!this.isEnabled||this.archetypeNodeData===null)return!1;const t=this.diagram;if(t.isReadOnly||t.isModelReadOnly||!t.allowInsert||!t.lastInput.left||this.isBeyondDragSize())return!1;if(this.isDoubleClick){if(t.lastInput.clickCount===1&&(this.MM=t.lastInput.viewPoint.copy()),t.lastInput.clickCount!==2||this.isBeyondDragSize(this.MM))return!1}else if(t.lastInput.clickCount!==1)return!1;return!(t.currentTool!==this&&t.findPartAt(t.lastInput.documentPoint,!0)!==null)}doMouseUp(){const t=this.diagram;this.isActive&&this.insertPart(t.lastInput.documentPoint),this.stopTool()}insertPart(t){const i=this.diagram,e=this.archetypeNodeData;if(e===null)return null;let s=null;try{if(i.O(\"ChangingSelection\",i.selection),this.startTransaction(this.name),e instanceof Part)e.Ce()&&(e.Kt(),s=e.copy(),s!==null&&i.add(s));else if(e!==null){const n=i.model.copyNodeData(e);U.W(n)&&(i.model.addNodeData(n),s=i.findPartForData(n))}if(s!==null){const n=Point.K(t.x,t.y);this.isGridSnapEnabled&&this.diagram.PM(s,t,n),s.location=n,i.allowSelect&&(i.clearSelection(!0),s.isSelected=!0),Point.o(n)}i.invalidateDocumentBounds(),this.transactionResult=this.name,i.O(\"PartCreated\",s)}finally{this.stopTransaction(),i.O(\"ChangedSelection\",i.selection)}return s}get archetypeNodeData(){return this.Rl}set archetypeNodeData(t){t!==null&&U.Mo(t,ClickCreatingTool,\"archetypeNodeData\"),this.Rl=t}get isDoubleClick(){return this.SM}set isDoubleClick(t){U.i(t,\"boolean\",ClickCreatingTool,\"isDoubleClick\"),this.SM=t}get isGridSnapEnabled(){return this.Nf}set isGridSnapEnabled(t){U.i(t,\"boolean\",ClickCreatingTool,\"isGridSnapEnabled\"),this.Nf=t}}class DragSelectingTool extends Tool{jh;NM;Il;constructor(t){super(),this.name=\"DragSelecting\",this.jh=175,this.NM=!1,this.Il=new Part({layerName:\"Tool\",selectable:!1}).add(new Shape(\"Rectangle\",{name:\"SHAPE\",fill:null,stroke:\"magenta\"}).theme(\"stroke\",\"dragSelect\")).Kt(),t&&Object.assign(this,t)}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;if(!t.allowSelect)return!1;const i=t.lastInput;return!(!i.left||t.currentTool!==this&&(!this.isBeyondDragSize()||i.timestamp-t.firstInput.timestamp<this.delay||t.findPartAt(i.documentPoint,!0)!==null))}doActivate(){const t=this.diagram;this.isActive=!0,t.isMouseCaptured=!0,t.skipsUndoManager=!0,this.box&&t.add(this.box),this.doMouseMove()}doDeactivate(){const t=this.diagram;t.stopAutoScroll(),this.box&&t.remove(this.box),t.skipsUndoManager=!1,t.isMouseCaptured=!1,this.isActive=!1}doMouseMove(){const t=this.diagram;if(this.isActive&&this.box!==null){const i=this.computeBoxBounds();let e=this.box.findObject(\"SHAPE\");e===null&&(e=this.box.findMainElement());const s=Size.a().s(i.width,i.height);e!==null&&(e.desiredSize=s),this.box.Lf(i.x,i.y,!1),Size.o(s),(t.allowHorizontalScroll||t.allowVerticalScroll)&&t.doAutoScroll(t.lastInput.viewPoint)}}doMouseUp(){if(this.isActive){const t=this.diagram;this.box&&t.remove(this.box);try{t.currentCursor=\"wait\",t.O(\"ChangingSelection\",t.selection),this.selectInRect(this.computeBoxBounds()),t.O(\"ChangedSelection\",t.selection)}finally{t.currentCursor=\"\"}}this.stopTool()}computeBoxBounds(){const t=this.diagram;return new Rect(t.firstInput.documentPoint,t.lastInput.documentPoint)}selectInRect(t){const i=this.diagram,e=i.lastInput,s=i.findPartsIn(t,this.isPartialInclusion);if(U.rr?e.meta:e.control)if(e.shift){const n=s.iterator;for(;n.next();){const o=n.value;o.isSelected&&(o.isSelected=!1)}}else{const n=s.iterator;for(;n.next();){const o=n.value;o.isSelected=!o.isSelected}}else if(e.shift){const n=s.iterator;for(;n.next();){const o=n.value;o.isSelected||(o.isSelected=!0)}}else{const n=new List,o=i.selection.iterator;for(;o.next();){const h=o.value;s.has(h)||n.add(h)}const r=n.iterator;for(;r.next();){const h=r.value;h.isSelected=!1}const l=s.iterator;for(;l.next();){const h=l.value;h.isSelected||(h.isSelected=!0)}}}get delay(){return this.jh}set delay(t){U.i(t,\"number\",DragSelectingTool,\"delay\"),this.jh=t}get isPartialInclusion(){return this.NM}set isPartialInclusion(t){U.i(t,\"boolean\",DragSelectingTool,\"isPartialInclusion\"),this.NM=t}get box(){return this.Il}set box(t){t!==null&&(U.e(t,Part,DragSelectingTool,\"box\"),t.Kt()),this.Il=t}}class PanningTool extends Tool{ex;gA;Ao;CM;constructor(t){super(),this.name=\"Panning\",this.ex=new Point,this.gA=new Point,this.Ao=!1;const i=this;this.CM=()=>{const e=i.diagram;e!==null&&e.Ai(root.document,\"scroll\",i.CM,!1),i.stopTool()},t&&Object.assign(this,t)}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;return!(!t.allowHorizontalScroll&&!t.allowVerticalScroll||!t.lastInput.left||t.currentTool!==this&&!this.isBeyondDragSize())}doActivate(){const t=this.diagram;this.Ao?(t.lastInput.bubbles=!0,t.Ut(root.document,\"scroll\",this.CM,!1)):(t.currentCursor=\"move\",t.isMouseCaptured=!0,this.ex.c(t.position)),this.isActive=!0}doDeactivate(){const t=this.diagram;t.currentCursor=\"\",t.isMouseCaptured=!1,this.isActive=!1}doCancel(){const t=this.diagram;t.position=this.ex,t.isMouseCaptured=!1,this.stopTool()}doMouseMove(){this.mA()}doMouseUp(){this.mA(),this.stopTool()}mA(){const t=this.diagram;if(this.isActive&&t){if(this.Ao){t.lastInput.bubbles=!0;return}const i=t.position,e=t.firstInput.documentPoint,s=t.lastInput.documentPoint;let n=i.x+e.x-s.x,o=i.y+e.y-s.y;t.allowHorizontalScroll||(n=i.x),t.allowVerticalScroll||(o=i.y),t.position=this.gA.s(n,o)}}get bubbles(){return this.Ao}set bubbles(t){U.i(t,\"boolean\",PanningTool,\"bubbles\"),this.Ao=t}get originalPosition(){return this.ex}}class HTMLInfo{nx;lx;AM;LM;constructor(t){this.nx=null,this.lx=null,this.AM=null,this.LM=null,t&&Object.assign(this,t)}get mainElement(){return this.AM}set mainElement(t){t!==null&&U.e(t,HTMLElement,HTMLInfo,\"mainElement\"),this.AM=t}get show(){return this.nx}set show(t){this.nx!==t&&(t!==null&&U.P(t,HTMLInfo,\"show\"),this.nx=t)}get hide(){return this.lx}set hide(t){this.lx!==t&&(t!==null&&U.P(t,HTMLInfo,\"hide\"),this.lx=t)}get valueFunction(){return this.LM}set valueFunction(t){this.LM=t}}class ContextMenuButtonInfo{fi;hx;Tf;constructor(t,i,e){this.fi=t,this.hx=i,this.Tf=e}}class ContextMenuTool extends Tool{TM;ax;DM;FM;fx;cx;Cm;constructor(t){super(),this.name=\"ContextMenu\",this.TM=null,this.ax=null,this.DM=null,this.FM=new Point,this.fx=null,this.Cm=!1;const i=this;this.cx=()=>i.stopTool(),t&&Object.assign(this,t)}IF(){const t=new HTMLInfo;t.show=(r,l,h)=>h.showDefaultContextMenu(),t.hide=(r,l)=>l.hideDefaultContextMenu(),ContextMenuTool.Nu=t;const i=this;this.cx=()=>i.stopTool();const e=U.ds(\"div\"),s=U.ds(\"div\");e.style.cssText=\"top: 0px;z-index:10002;position: fixed;display: none;text-align: center;left: 25%;width: 50%;background-color: #F5F5F5;padding: 16px;border: 16px solid #444;border-radius: 10px;margin-top: 10px\",s.style.cssText=\"z-index:10001;position: fixed;display: none;top: 0;left: 0;width: 100%;height: 100%;background-color: black;opacity: 0.8;\";const n=U.ds(\"style\");root.document.getElementsByTagName(\"head\")[0].appendChild(n),n.sheet.insertRule(\".goCXul { list-style: none; }\",0),n.sheet.insertRule(\".goCXli {font:700 1.5em Helvetica, Arial, sans-serif;position: relative;min-width: 60px; }\",0),n.sheet.insertRule(\".goCXa {color: #444;display: inline-block;padding: 4px;text-decoration: none;margin: 2px;border: 1px solid gray;border-radius: 10px; }\",0);const o=this.diagram;o!==null&&(o.Ut(e,\"contextmenu\",ContextMenuTool.Zh,!1),o.Ut(e,\"selectstart\",ContextMenuTool.Zh,!1),o.Ut(s,\"contextmenu\",ContextMenuTool.Zh,!1)),e.className=\"goCXforeground\",s.className=\"goCXbackground\",root.document.body&&(root.document.body.appendChild(e),root.document.body.appendChild(s)),ContextMenuTool.Am=e,ContextMenuTool.Lm=s,ContextMenuTool.RM=!0}static Nu=null;static RM=!1;static Lm;static Am;static Zh(t){return t.preventDefault(),!1}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;return this.isBeyondDragSize()||!t.lastInput.right||t.lastInput.clickCount>1?!1:!!(t.lastInput.isTouchEvent&&this.defaultTouchContextMenu!==null||this.findObjectWithContextMenu()!==null)}doStart(){const t=this.diagram;this.FM.set(t.firstInput.documentPoint)}doStop(){this.hideContextMenu(),this.currentObject=null,this.Cm=!1}findObjectWithContextMenu(t){t===void 0&&(t=null);const i=this.diagram,e=i.lastInput;let s=null;if(t instanceof Diagram||(t instanceof GraphObject?s=t:s=i.findObjectAt(e.documentPoint,null,n=>!n.layer?.isTemporary)),s!==null){let n=s;for(;n!==null;){if(n.contextMenu!==null)return n;n=n.panel}if(i.lastInput.isTouchEvent&&this.defaultTouchContextMenu)return s.part}else if(i.contextMenu!==null)return i;return null}doActivate(){}doMouseDown(){if(super.doMouseDown(),this.isActive&&this.currentContextMenu instanceof Adornment){const t=this.diagram.toolManager.findTool(\"Action\");t!==null&&t.canStart()&&(t.doActivate(),t.doMouseDown(),t.doDeactivate())}this.diagram.toolManager.mouseDownTools.has(this)&&this.doContextClick()}doMouseUp(){if(this.isActive&&this.currentContextMenu instanceof Adornment){const t=this.diagram.toolManager.findTool(\"Action\");t!==null&&t.canStart()&&(t.doActivate(),t.doCancel(),t.doDeactivate())}this.doContextClick()}doContextClick(){const t=this.diagram;if(!this.isActive)this.canStart()&&(this.openMenu(!0),this.isActive||this.stopTool());else{const i=this.currentContextMenu;if(i===null)return;let e=null;i instanceof HTMLInfo||(e=t.findObjectAt(t.lastInput.documentPoint,null,null),e!==null&&e.isContainedBy(i)&&this.standardMouseClick(null,null)),this.maybeStopTool(e)}}maybeStopTool(t){this.stopTool(),this.canStart()&&(this.diagram.currentTool=this,this.doMouseUp())}openMenu(t,i){if(i===void 0&&(i=null),this.Cm)return;this.Cm=!0,t&&this.standardMouseSelect();const e=this.standardMouseClick();if(this.Cm=!1,!e){this.isActive=!0;const s=ContextMenuTool.Nu;if(i===null&&(i=this.findObjectWithContextMenu()),i!==null){const n=i.contextMenu;n!==null?(this.currentObject=i instanceof GraphObject?i:null,this.showContextMenu(n,this.currentObject)):s!==null&&this.showContextMenu(s,this.currentObject)}else s!==null&&this.showContextMenu(s,null);this.currentContextMenu instanceof Adornment&&!this.currentContextMenu.visible&&this.stopTool()}}doMouseMove(){const t=this.diagram.toolManager.findTool(\"Action\");t!==null&&t.doMouseMove(),this.isActive&&this.diagram.toolManager.doMouseMove()}showContextMenu(t,i){Debug&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"showContextMenu:contextMenu must be an Adornment or HTMLInfo.\"),i!==null&&U.e(i,GraphObject,ContextMenuTool,\"showContextMenu:obj\");const e=this.diagram;if(t!==this.currentContextMenu&&this.hideContextMenu(),t instanceof Adornment){const s=t;s.layerName=\"Tool\",s.selectable=!1,s.scale=1/e.scale,s.category=this.name,s.hasPlaceholder()&&(s.placeholder.scale=e.scale);const n=s.diagram;n!==null&&n!==e&&n.remove(s),e.add(s),i!==null?s.adornedObject=i:s.data=e.model,s.ensureBounds(),this.positionContextMenu(s,i)}else t instanceof HTMLInfo&&t.show!==null&&t.show(i,e,this);this.currentContextMenu=t}positionContextMenu(t,i){if(t.hasPlaceholder())return;const e=t,s=this.diagram,n=s.lastInput.documentPoint.copy(),o=e.measuredBounds,r=s.viewportBounds;s.lastInput.isTouchEvent&&(n.x-=o.width),n.x+o.width>r.right&&(n.x-=o.width+5/s.scale),n.x<r.x&&(n.x=r.x),n.y+o.height>r.bottom&&(n.y-=o.height+5/s.scale),n.y<r.y&&(n.y=r.y),e.position=n}hideContextMenu(){const t=this.diagram,i=this.currentContextMenu;i!==null&&(i instanceof Adornment?(t.remove(i),this.ax!==null&&this.ax.removeAdornment(i.category),i.data=null,i.adornedObject=null):i instanceof HTMLInfo&&(i.hide!==null?i.hide(t,this):i.mainElement!==null&&(i.mainElement.style.display=\"none\")),this.currentContextMenu=null,this.standardMouseOver())}OF(){const t=this,i=new List;return i.add(new ContextMenuButtonInfo(\"Copy\",e=>e.commandHandler.copySelection(),e=>e.commandHandler.canCopySelection())),i.add(new ContextMenuButtonInfo(\"Cut\",e=>e.commandHandler.cutSelection(),e=>e.commandHandler.canCutSelection())),i.add(new ContextMenuButtonInfo(\"Delete\",e=>e.commandHandler.deleteSelection(),e=>e.commandHandler.canDeleteSelection())),i.add(new ContextMenuButtonInfo(\"Paste\",e=>e.commandHandler.pasteSelection(t.mouseDownPoint),e=>e.commandHandler.canPasteSelection(t.mouseDownPoint))),i.add(new ContextMenuButtonInfo(\"Select All\",e=>e.commandHandler.selectAll(),e=>e.commandHandler.canSelectAll())),i.add(new ContextMenuButtonInfo(\"Undo\",e=>e.commandHandler.undo(),e=>e.commandHandler.canUndo())),i.add(new ContextMenuButtonInfo(\"Redo\",e=>e.commandHandler.redo(),e=>e.commandHandler.canRedo())),i.add(new ContextMenuButtonInfo(\"Scroll To Part\",e=>e.commandHandler.scrollToPart(),e=>e.commandHandler.canScrollToPart())),i.add(new ContextMenuButtonInfo(\"Zoom To Fit\",e=>e.commandHandler.zoomToFit(),e=>e.commandHandler.canZoomToFit())),i.add(new ContextMenuButtonInfo(\"Reset Zoom\",e=>e.commandHandler.resetZoom(),e=>e.commandHandler.canResetZoom())),i.add(new ContextMenuButtonInfo(\"Group Selection\",e=>e.commandHandler.groupSelection(),e=>e.commandHandler.canGroupSelection())),i.add(new ContextMenuButtonInfo(\"Ungroup Selection\",e=>e.commandHandler.ungroupSelection(),e=>e.commandHandler.canUngroupSelection())),i.add(new ContextMenuButtonInfo(\"Edit Text\",e=>e.commandHandler.editTextBlock(),e=>e.commandHandler.canEditTextBlock())),i}showDefaultContextMenu(){const t=this.diagram;this.fx===null&&(this.fx=this.OF()),ContextMenuTool.Am.innerHTML=\"\",ContextMenuTool.Lm.addEventListener(\"pointerdown\",this.cx,!1);const i=this,e=U.ds(\"ul\");e.className=\"goCXul\",ContextMenuTool.Am.appendChild(e),e.innerHTML=\"\";const s=this.fx.iterator;for(;s.next();){const n=s.value,o=n.hx,r=n.Tf;if(!U.rt(o)||U.rt(r)&&!r(t))continue;const l=U.ds(\"li\");l.className=\"goCXli\";const h=U.ds(\"a\");h.className=\"goCXa\",h.href=\"#\",h.hx=o,h.addEventListener(\"pointerdown\",function(f){return this.hx(t),i.stopTool(),f.preventDefault(),!1},!1),h.textContent=n.fi,l.appendChild(h),e.appendChild(l)}ContextMenuTool.Am.style.display=\"block\",ContextMenuTool.Lm.style.display=\"block\"}hideDefaultContextMenu(){if(this.currentContextMenu===null||this.currentContextMenu!==ContextMenuTool.Nu)return;ContextMenuTool.Am.style.display=\"none\",ContextMenuTool.Lm.style.display=\"none\";const t=this.diagram;t!==null&&t.Ai(ContextMenuTool.Lm,\"pointerdown\",this.cx,!1),this.currentContextMenu=null}get currentContextMenu(){return this.TM}set currentContextMenu(t){Debug&&t!==null&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"ContextMenuTool.currentContextMenu must be an Adornment or HTMLInfo.\"),this.TM=t,this.ax=t instanceof Adornment?t.adornedPart:null}get defaultTouchContextMenu(){return ContextMenuTool.RM===!1&&ContextMenuTool.Nu===null&&Diagram.isUsingDOM()&&this.IF(),ContextMenuTool.Nu}set defaultTouchContextMenu(t){Debug&&t!==null&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"ContextMenuTool.defaultTouchContextMenu must be an Adornment or HTMLInfo.\"),t===null&&(ContextMenuTool.RM=!0),ContextMenuTool.Nu=t}get currentObject(){return this.DM}set currentObject(t){t!==null&&U.e(t,GraphObject,ContextMenuTool,\"currentObject\"),this.DM=t}get mouseDownPoint(){return this.FM}}var TextEditingAccept=(y=>(y[y.LostFocus=1]=\"LostFocus\",y[y.MouseDown=2]=\"MouseDown\",y[y.Tab=3]=\"Tab\",y[y.Enter=4]=\"Enter\",y))(TextEditingAccept||{}),TextEditingStarting=(y=>(y[y.SingleClick=1]=\"SingleClick\",y[y.SingleClickSelected=2]=\"SingleClickSelected\",y[y.DoubleClick=3]=\"DoubleClick\",y))(TextEditingStarting||{}),TextEditingState=(y=>(y[y.None=1]=\"None\",y[y.Active=2]=\"Active\",y[y.Editing=3]=\"Editing\",y[y.Validating=4]=\"Validating\",y[y.Invalid=5]=\"Invalid\",y[y.Validated=6]=\"Validated\",y))(TextEditingState||{});class TextEditingTool extends Tool{Ae;IM;OM;Ol;vt;EM;BM;VM;ux;zM;constructor(t){super(),this.name=\"TextEditing\",this.Ae=new TextBlock,this.IM=null,this.OM=2,this.Ol=null,this.vt=1,this.EM=1,this.BM=!0,this.VM=null,this.ux=new HTMLInfo,this.EF(this.ux),t&&Object.assign(this,t)}static LostFocus=1;static MouseDown=2;static Tab=3;static Enter=4;static SingleClick=1;static SingleClickSelected=2;static DoubleClick=3;static StateNone=1;static StateActive=2;static StateEditing=3;static StateValidating=4;static StateInvalid=5;static StateValidated=6;EF(t){if(!Diagram.isUsingDOM())return;const i=U.ds(\"textarea\");this.zM=i;const e=this;i.addEventListener(\"input\",function(s){if(e.textBlock===null)return;const n=e.measureTemporaryTextBlock(this.value),o=this.textScale;this.style.width=20+Math.max(e.textBlock.measuredBounds.width,n.measuredBounds.width)*o+\"px\",this.rows=Math.max(e.textBlock.lineCount,n.lineCount)},!1),i.addEventListener(\"keydown\",function(s){if(s.isComposing||e.textBlock===null)return;const n=s.key;if(n===\"Enter\"){e.textBlock.isMultiline===!1&&s.preventDefault(),e.acceptText(4);return}else if(n===\"Tab\"){e.acceptText(3),s.preventDefault();return}else n===\"Escape\"&&(e.doCancel(),e.diagram!==null&&e.diagram.doFocus())},!1),i.addEventListener(\"focus\",function(s){e.BF(s)},!1),i.addEventListener(\"blur\",function(s){e.VF(s)},!1),t.valueFunction=()=>i.value,t.mainElement=i,t.show=(s,n,o)=>{if(!(s instanceof TextBlock)||!n||!n.div||!(o instanceof TextEditingTool))return;if(o.state===5){i.style.border=\"3px solid red\",i.focus();return}const r=s.getDocumentPoint(Spot.Center),l=n.position,h=n.scale;let f=s.getDocumentScale()*h;f<o.minimumEditorScale&&(f=o.minimumEditorScale);const a=s.naturalBounds.width*f+6,c=s.naturalBounds.height*f+2,u=(r.x-l.x)*h,d=(r.y-l.y)*h,m=s.verticalAlignment,p=(s.lineHeight+s.spacingAbove+s.spacingBelow)*s.lineCount*f,w=.5*c-.5*p,x=m.y*c-m.y*p+m.offsetY-w-p/2;i.value=s.text,n.div.style.font=s.font;const k=1;i.style.position=\"absolute\",i.style.zIndex=\"100\",i.style.font=\"inherit\",i.style.fontSize=f*100+\"%\",i.style.lineHeight=\"normal\",i.style.width=a+\"px\",i.style.left=(u-a/2|0)-k+\"px\",i.style.top=(d+x|0)-k+\"px\",i.style.textAlign=s.textAlign,i.style.margin=\"0\",i.style.padding=k+\"px\",i.style.border=\"0\",i.style.outline=\"none\",i.style.whiteSpace=\"pre-wrap\",i.style.overflow=\"hidden\",i.rows=s.lineCount,i.textScale=f,i.className=\"goTXarea\",n.div.appendChild(i),i.focus(),o.selectsTextOnActivate&&(i.select(),i.setSelectionRange(0,9999))},t.hide=(s,n)=>{s.div&&s.div.removeChild(i)}}get textBlock(){return this.IM}set textBlock(t){t!==null&&U.e(t,TextBlock,TextEditingTool,\"textBlock\"),this.IM=t}get currentTextEditor(){return this.VM}set currentTextEditor(t){this.VM=t}get defaultTextEditor(){return this.ux}set defaultTextEditor(t){Debug&&!(t instanceof HTMLInfo)&&U.n(\"TextEditingTool.defaultTextEditor must be an HTMLInfo.\"),this.ux=t}get starting(){return this.OM}set starting(t){U.j(t,TextEditingStarting,\"TextEditingStarting\"),this.OM=t}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;if(t===null||t.isReadOnly||TextEditingTool.Df&&TextEditingTool.Df!==this&&(TextEditingTool.Df.acceptText(2),TextEditingTool.Df&&TextEditingTool.Df!==this)||!t.lastInput.left||this.isBeyondDragSize())return!1;const i=t.lastInput.documentPoint,e=t.findObjectAt(i);if(e===null||!(e instanceof TextBlock)||!e.editable||e.part===null||!e.part.canEdit())return!1;const s=e.part;return!(s===null||this.starting===2&&!s.isSelected||this.starting===3&&t.lastInput.clickCount<2)}doStart(){TextEditingTool.Df=this,this.textBlock!==null&&this.doActivate()}doActivate(){if(this.isActive)return;const t=this.diagram;if(t===null)return;let i=this.textBlock;if(i===null&&(i=t.findObjectAt(t.lastInput.documentPoint)),i===null||!(i instanceof TextBlock)||(this.textBlock=i,i.part===null))return;t.animationManager.stopAnimation(),this.isActive=!0,this.vt=2;let s=this.defaultTextEditor;i.textEditor!==null&&(s=i.textEditor),this.Ae=this.textBlock.copy();const n=new Rect(this.textBlock.getDocumentPoint(Spot.TopLeft),this.textBlock.getDocumentPoint(Spot.BottomRight));t.scrollToRect(n),s!==null&&s.show!==null&&s.show(i,t,this),this.currentTextEditor=s}doCancel(){this.stopTool()}doMouseUp(){this.canStart()&&this.doActivate()}doMouseDown(){this.isActive&&this.acceptText(2)}acceptText(t){switch(t){case 2:this.vt===6?this.currentTextEditor instanceof HTMLElement&&this.currentTextEditor.focus():(this.vt===2||this.vt===5||this.vt===3)&&(this.vt=4,this.pA());break;case 1:case 4:case 3:if(t===4&&this.textBlock!==null&&this.textBlock.isMultiline===!0)return;(this.vt===2||this.vt===5||this.vt===3)&&(this.vt=4,this.pA());break}}pA(){const t=this.textBlock,i=this.diagram,e=this.currentTextEditor;if(t!==null&&e!==null){const s=t.text;let n=\"\";if(e.valueFunction!==null&&(n=e.valueFunction()),!this.isValidText(t,s,n)){this.vt=5,this.doError(s,n);return}this.startTransaction(this.name),this.vt=6,this.transactionResult=this.name,t.text=n,this.doSuccess(s,n),i!==null&&i.O(\"TextEdited\",t,s),this.stopTransaction(),this.stopTool(),i!==null&&i.doFocus()}}doError(t,i){const e=this.textBlock;if(e===null)return;e.errorFunction!==null&&e.errorFunction(this,t,i);const s=this.currentTextEditor;s!==null&&s.show!==null&&s.show(e,this.diagram,this)}doSuccess(t,i){const e=this.textBlock;e!==null&&e.textEdited!==null&&e.textEdited(e,t,i)}doDeactivate(){const t=this.diagram;if(t!==null){if(this.vt=1,this.currentTextEditor!==null){const i=this.currentTextEditor;i!==null&&i.hide!==null&&i.hide(t,this)}this.textBlock=null,this.isActive=!1}}doStop(){TextEditingTool.Df=null}BF(t){if(this.currentTextEditor===null||this.state===1)return;const i=this.zM;this.vt===2&&(this.vt=3),U.rt(i.select)&&this.selectsTextOnActivate&&(i.select(),i.setSelectionRange(0,9999))}VF(t){if(this.currentTextEditor===null||this.state===1)return;const i=this.zM;U.rt(i.focus)&&i.focus(),U.rt(i.select)&&this.selectsTextOnActivate&&(i.select(),i.setSelectionRange(0,9999))}isValidText(t,i,e){U.e(t,TextBlock,TextEditingTool,\"isValidText:textblock\");const s=this.textValidation;if(s!==null&&!s(t,i,e))return!1;const n=t.textValidation;return!(n!==null&&!n(t,i,e))}get textValidation(){return this.Ol}set textValidation(t){t!==null&&U.P(t,TextEditingTool,\"textValidation\"),this.Ol=t}get minimumEditorScale(){return this.EM}set minimumEditorScale(t){t!==null&&U.i(t,\"number\",TextEditingTool,\"minimumEditorScale\"),this.EM=t}get selectsTextOnActivate(){return this.BM}set selectsTextOnActivate(t){t!==null&&U.i(t,\"boolean\",TextEditingTool,\"selectsTextOnActivate\"),this.BM=t}get state(){return this.vt}set state(t){this.vt!==t&&(U.j(t,TextEditingState,\"TextEditingState\"),this.vt=t)}measureTemporaryTextBlock(t){const i=this.Ae;return i.text=t,this.textBlock!==null&&i.dt(this.textBlock.El,1/0),i}static Df=null}var AnimationStyle=(y=>(y[y.Default=1]=\"Default\",y[y.AnimateLocations=2]=\"AnimateLocations\",y[y.None=3]=\"None\",y))(AnimationStyle||{});class AnimationManager{C;Li;Xi;Pr;qn;To;XM;YM;Tm;bi;Ff;cn;Dm;Qh;gx;Fm;mx;Rf;Mu;Rm;constructor(t){this.C=Diagram.wm(),this.Li=!1,this.Tm=!1,this.bi=!1,this.Ff=!1,this.mx=!0,this.Rf=1,this.Mu=!1,this.Xi=!0,this.Pr=!0,this.To=600,this.XM=!1,this.YM=!1,this.qn=new GSet,this.cn=new Animation,this.Dm=new Animation,this.cn.ws=this,this.Qh=new GSet,this.gx=new GSet,this.Fm=new GSet,this.Rm=new GSet,t&&Object.assign(this,t)}Do(t){this.C=t}AE(){return this.C}canStart(t){return!0}Bl(t){return!this.Xi||!this.canStart(t)?!1:(this.qn.add(t),this.defaultAnimation.isAnimating&&this.stopAnimation(),this.C.Ti(),this.bi=!0,!0)}getBundleAnimation(){return this.Dm}KM(){if(!this.Xi||(this.Dm.ge.count>0&&this.Dm.start(),!this.bi))return;const t=this.cn,i=this.C,e=this.qn.has(\"Model\");if(e&&(this.Ff=!0,this.Rf===1?(t.isViewportUnconstrained=!0,t.ge.clear(),t.add(i,\"position\",i.position.copy().offset(0,-200),i.position),t.add(i,\"opacity\",0,1)):this.Rf===3&&t.ge.clear(),this.Rf===2&&i.yx.equals(i.gt)?this.mx=!0:this.mx=!1,i.O(\"InitialAnimationStarting\",this)),e&&!this.Pr||t.ge.count===0){this.qn.clear(),this.bi=!1,t.ge.clear(),t.wx(i),this.Ff=!1,i.L();return}this.qn.clear(),i.Nr=!1;const s=t.ge.get(i);i.autoScale!==1&&s!==null&&(delete s.li.scale,delete s.xs.scale);const n=this;root.requestAnimationFrame(()=>{n.bi===!1||t.Li||(i.getRenderingHint(\"temporaryPixelRatio\")&&i.vw(),i.UM(),n.bi=!1,t.start(),t.Li&&(n.Cu(),i.invalidateDocumentBounds(),t.yA(0),i.xr(!0),n.Au(),i.O(\"AnimationStarting\",n)))})}GM(){return this.qn.has(\"Trigger\")&&this.qn.count===1}wA(t,i,e,s){this.isTicking||this.GM()||t instanceof Link&&(t.fromNode!==null||t.toNode!==null)||this.cn.add(t,\"position\",i,e,s)}xx(t){return this.cn.xx(t)}HM(t){return this.cn.HM(t)}zF(t){const i=this.Qh,e=this;function s(){if(e.Fm.count>0&&(i.addAll(e.Fm),e.Fm.clear(),e.Li=!0),e.Li===!1||i.count===0)return;e.gx.addAll(i);const n=e.gx.iterator;for(;n.next();){const o=n.value;o.Li!==!1&&(o.XF()?o.xA(!1):o.If=!0)}if(e.gx.clear(),e.Li===!1){root.requestAnimationFrame(s);return}e.Cu(),e.C.xr(),e.Au(),root.requestAnimationFrame(s)}this.Li?this.YF(t):(this.Li=!0,i.add(t),root.requestAnimationFrame(()=>s()))}YF(t){this.Fm.add(t)}KF(){const t=this.Qh.iterator;for(;t.next();)t.value.If=!1}Cu(){if(this.Tm)return;const t=this.C;this.XM=t.skipsUndoManager,this.YM=t.me,t.skipsUndoManager=!0,t.me=!0,this.Tm=!0}Au(){const t=this.C;t.skipsUndoManager=this.XM,t.me=this.YM,this.Tm=!1}stopAnimation(t){const i=this.cn;if(this.bi===!0&&(this.bi=!1,this.Ff=!1,this.qn.clear(),i.UF()&&this.C.requestUpdate()),!this.Li){i.ge.clear(),i.wx(this.C);return}if(i.Lu(!0),i.wx(null),t===!0){const e=this.Qh.toArray();for(let s=0;s<e.length;s++)e[s].Lu(!0)}}Lu(t){this.Qh.delete(t),this.Qh.count===0&&(this.Li=!1,this.C.requestUpdate()),t===this.defaultAnimation&&this.C.O(\"AnimationFinished\",this)}Of(t,i){this.bi&&(!this.qn.has(\"Expand Tree\")&&!this.qn.has(\"Expand SubGraph\")||(this.cn.Of(t,i),this.bA(t)))}Ef(t,i){this.bi&&(!this.qn.has(\"Collapse Tree\")&&!this.qn.has(\"Collapse SubGraph\")||(this.cn.Ef(t,i),this.cn.qM(i,\"position\",i.position,i.position),this.bA(t)))}kA(t,i){!this.bi||t.equals(i)||this.GM()||(this.C.qh||(t=i.copy()),this.cn.qM(this.C,\"position\",t,i))}SA(t,i){this.bi&&(this.GM()||this.cn.add(this.C,\"scale\",t,i))}WM(t,i){t.Le&&(t.Cr=i,this.Rm.add(t))}bA(t){const i=t.findLinksConnected();for(;i.next();){const e=i.value;e.Le&&(e.Cr=e.points.copy(),this.Rm.add(e))}}get isEnabled(){return this.Xi}set isEnabled(t){U.i(t,\"boolean\",AnimationManager,\"isEnabled\"),this.Xi=t,t&&this.Qh.each(i=>{!i.isAnimating&&i.runCount===1/0&&i.start()})}get duration(){return this.To}set duration(t){U.i(t,\"number\",AnimationManager,\"duration\"),t<1&&U.U(t,\">= 1\",AnimationManager,\"duration\"),this.To=t}get isAnimating(){return this.Li}get isTicking(){return this.Tm}get isInitial(){return this.Pr}set isInitial(t){U.i(t,\"boolean\",AnimationManager,\"isInitial\"),this.Pr=t}get defaultAnimation(){return this.cn}get activeAnimations(){return this.Qh}get initialAnimationStyle(){return this.Rf}set initialAnimationStyle(t){Debug&&U.j(t,AnimationStyle,\"AnimationStyle\"),this.Rf=t}static bx=new GMap;static defineAnimationEffect(t,i){AnimationManager.bx.set(t,i)}static jM(t,i,e,s,n){t===null&&(t=[0,0,0,0]),i===null&&(i=[0,0,0,0]);let o=t[0],r=t[1];const l=t[2],h=t[3];let f=i[0],a=i[1];const c=i[2],u=i[3];l===0||l===100?(o=f,r=a):(c===0||c===100)&&(f=o,a=r),Math.abs(f-o)>180&&(f>o?o+=360:f+=360);const d=n(e,o,f-o,s)%360,m=n(e,r,a-r,s),g=n(e,l,c-l,s),p=n(e,h,u-h,s);return\"hsla(\"+d+\", \"+m+\"%, \"+g+\"%, \"+p+\")\"}static Default=1;static AnimateLocations=2;static None=3}{const y=AnimationManager.bx,t=(i,e,s,n,o,r)=>{i.position=new Point(n(o,e.x,s.x-e.x,r),n(o,e.y,s.y-e.y,r))};y.set(\"position:diagram\",t),y.set(\"position\",t),y.set(\"position:part\",(i,e,s,n,o,r)=>{o<r?i.Lf(n(o,e.x,s.x-e.x,r),n(o,e.y,s.y-e.y,r),!1):i.position=new Point(n(o,e.x,s.x-e.x,r),n(o,e.y,s.y-e.y,r))}),y.set(\"location\",(i,e,s,n,o,r)=>{o<r?i.Lf(n(o,e.x,s.x-e.x,r),n(o,e.y,s.y-e.y,r),!0):i.location=new Point(n(o,e.x,s.x-e.x,r),n(o,e.y,s.y-e.y,r))}),y.set(\"position:placeholder\",(i,e,s,n,o,r)=>{o<r?i.Lf(n(o,e.x,s.x-e.x,r),n(o,e.y,s.y-e.y,r),!1):i.position=new Point(n(o,e.x,s.x-e.x,r),n(o,e.y,s.y-e.y,r))}),y.set(\"position:nodeCollapse\",(i,e,s,n,o,r)=>{const l=i.actualBounds,h=s.actualBounds,f=h.x+h.width/2-l.width/2,a=h.y+h.height/2-l.height/2;o<r?i.Lf(n(o,e.x,f-e.x,r),n(o,e.y,a-e.y,r),!1):i.position=new Point(n(o,e.x,f-e.x,r),n(o,e.y,a-e.y,r))}),y.set(\"desiredSize\",(i,e,s,n,o,r)=>{i.desiredSize=new Size(n(o,e.width,s.width-e.width,r),n(o,e.height,s.height-e.height,r))}),y.set(\"width\",(i,e,s,n,o,r)=>{i.width=n(o,e,s-e,r)}),y.set(\"height\",(i,e,s,n,o,r)=>{i.height=n(o,e,s-e,r)}),y.set(\"fill\",(i,e,s,n,o,r)=>{i.fill=AnimationManager.jM(e,s,o,r,n)}),y.set(\"stroke\",(i,e,s,n,o,r)=>{i.stroke=AnimationManager.jM(e,s,o,r,n)}),y.set(\"strokeWidth\",(i,e,s,n,o,r)=>{i.strokeWidth=n(o,e,s-e,r)}),y.set(\"strokeDashOffset\",(i,e,s,n,o,r)=>{i.strokeDashOffset=n(o,e,s-e,r)}),y.set(\"background\",(i,e,s,n,o,r)=>{i.background=AnimationManager.jM(e,s,o,r,n)}),y.set(\"opacity\",(i,e,s,n,o,r)=>{i.opacity=n(o,e,s-e,r)}),y.set(\"scale\",(i,e,s,n,o,r)=>{i.scale=n(o,e,s-e,r)}),y.set(\"angle\",(i,e,s,n,o,r)=>{i.angle=n(o,e,s-e,r)})}class Animation{kx;Im;Li;Tu;To;bs;MA;Bf;ge;Sx;li;Wn;Du;Vf;Mx;Px;If;vM;Nx;ws;C;JM;$M;ZM;constructor(t){this.C=null,this.ws=null,this.vM=null,this.Nx=null,this.JM=!1,this.Li=!1,this.If=!1,this.li=0,this.Wn=0,this.kx=Animation.EaseInOutQuad,this.Im=Animation.EaseInOutQuad,this.Du=!1,this.Vf=!1,this.Mx=1,this.Px=0,this.To=NaN,this.bs=NaN,this.$M=0,this.Tu=null,this.MA=Point.No,this.ge=new GMap,this.Sx=new GMap,this.Bf=new GSet,this.ZM=1,t&&Object.assign(this,t)}suspend(){this.If=!0}advanceTo(t,i){i&&(this.If=!1),this.Du&&t>=this.bs&&(this.Vf=!0,t=t-this.bs),this.$M=t,this.xA(!0),this.ws.Cu(),this.C.xr(),this.ws.Au(),this.C.redraw()}wx(t){if(this.Sx.clear(),this.Vf=!1,this.Px=0,this.bs=NaN,this.Bf.count>0&&this.Bf.clear(),t!==null){const i=t.links;for(;i.next();)i.value.Cr=null}}UF(){return this.ge.count>0}start(){if(this.ge.count===0)return this;if(this.Li)return this;let t=this.C;const i=this.ge.iterator;for(;i.next();){const s=i.key;t===null&&(s instanceof Diagram?t=s:s instanceof GraphObject&&(t=s.diagram))}if(t!==null)this.C=t,this.ws=t.animationManager;else return this;const e=this.ws;return e.isEnabled===!1?this:(this.bs=isNaN(this.To)?e.duration:this.To,this.Im=this.kx,e.Ff&&e.Rf===1&&this===e.defaultAnimation&&(this.Im=Animation.EaseOutExpo,this.bs=isNaN(this.To)?e.duration===600?900:e.duration:this.To),this.ZM=t.scrollMode,this.isViewportUnconstrained&&(t._h=2),e.Cu(),this.Bf.each(s=>{s.data=null,t.add(s)}),e.Au(),this.Li=!0,this.li=+new Date,this.Wn=this.li+this.bs,e.zF(this),this)}addTemporaryPart(t,i){return t.Ce()?(Debug&&(i===void 0&&U.n(\"addTemporaryPart: Required Diagram argument missing\"),t.diagram===i&&U.n(\"addTemporaryPart: Part already in Diagram, did you mean to pass in a copy?\"),this.C!==null&&this.C!==i&&U.n(\"addTemporaryPart: A different Diagram is already associated with this Animation: \"+this.C.toString())),this.Bf.add(t),this.C=i,this):this}add(t,i,e,s,n){if(this.C===null&&(t instanceof Diagram?this.C=t:t instanceof GraphObject&&t.diagram!==null&&(this.C=t.diagram)),t instanceof Part){if(!t.isAnimated)return this;i===\"position\"&&(i=\"position:part\")}return this.qM(t,i,e,s,n),this}qM(t,i,e,s,n){const o=this.ge;let r,l,h;if(t instanceof Diagram&&i===\"position\"&&(i=\"position:diagram\"),(i===\"fill\"||i===\"stroke\"||i===\"background\")&&(Brush.Fo(e),Brush.QM(),e=[Brush.Yi.n0,Brush.Yi.n1,Brush.Yi.n2,Brush.Yi.n3],Brush.Fo(s),Brush.QM(),s=[Brush.Yi.n0,Brush.Yi.n1,Brush.Yi.n2,Brush.Yi.n3]),o.has(t))r=o.get(t),l=r.li,h=r.xs,l[i]===void 0&&(l[i]=this.Fu(e)),h[i]=this.Fu(s);else{if(i===\"position\"&&e.equalsApprox(s))return;l={},h={},l[i]=this.Fu(e),h[i]=this.Fu(s),r=new AnimationState(l,h,n),o.set(t,r)}const f=l[i];f instanceof Point&&!f.isReal()&&f.c(this.MA),n&&i.indexOf(\"position:\")===0&&t instanceof Part?r.Cx.location=this.Fu(t.location):n&&(r.Cx[i]=this.Fu(e))}Fu(t){return t instanceof Point||t instanceof Size?t.copy():t}GF(t){const i=this.ge;if(i.has(t)){const e=i.get(t);e.Ax=!0}}xx(t){if(!this.Li)return!1;const i=this.ge.get(t);return i!==null&&i.Ax}HM(t){if(!this.Li)return!1;const i=this.ge.get(t);return i!==null&&!!(i.li.position||i.li[\"position:part\"]||i.li.location)}XF(){if(this.Bf.count>0)return!0;const t=this.ge.iterator;for(;t.next();){const i=t.key;if(i instanceof GraphObject&&i.diagram!==null||i instanceof Diagram)return!0}return!1}xA(t){if(this.If&&!t)return;const i=this.ws;if(this.Li===!1)return;const e=+new Date;let s=e>this.Wn?this.bs:e-this.li;t&&(s=this.$M,s<this.bs?(this.li=+new Date-s,this.Wn=this.li+this.bs):s=this.bs),i.Cu(),this.yA(s),this.C.xr(!0),i.Au(),e>this.Wn&&(this.Du&&!this.Vf?(this.li=+new Date,this.Wn=this.li+this.bs,this.Vf=!0):this.Lu(!1))}yA(t){const i=this.bs,e=this.ge.iterator,s=this.Vf;for(;e.next();){const n=e.key;if(n instanceof GraphObject&&n.diagram===null)continue;const o=e.value,r=s?o.xs:o.li,l=s?o.li:o.xs,h=AnimationManager.bx;for(const f in l)f===\"position\"&&(l[\"position:placeholder\"]||l[\"position:nodeCollapse\"])||h.get(f)!==null&&h.get(f)(n,r[f],l[f],this.Im,t,i,this)}}stop(){return this.Li?(this.Lu(!0),this):this}Lu(t){if(this.Nx!==null&&this.Nx.HF(this.vM),!this.Li)return;const i=this.C,e=this.ws;e.Ff=!1,this.Li=!1,this.If=!1,e.Cu();const s=this.ge,n=this.Bf.iterator;for(;n.next();)i.remove(n.value);const o=this.Du,r=s.iterator,l=AnimationManager.bx;for(;r.next();){const f=r.key,a=r.value,c=o?a.xs:a.li,u=o?a.li:a.xs,d=a.Cx;for(const m in u)if(l.get(m)!==null){let g=m;a.Lx&&(g===\"position:nodeCollapse\"||g===\"position:placeholder\")&&(g=\"position\"),l.get(g)(f,c[m],d[m]!==void 0?d[m]:a.Lx?c[m]:u[m],this.Im,this.bs,this.bs,this)}a.Lx&&d.location!==void 0&&f instanceof Part&&(f.location=d.location),a.Ax&&f instanceof Part&&f.Ki(!1)}this.Px++;const h=!t&&this.Mx>this.Px;if(!h&&(this===e.Dm||this===e.defaultAnimation)&&this.ge.clear(),i.Tx.clear(),i.IS(!1),i.invalidateDocumentBounds(),i.L(),i.xr(!0),e.defaultAnimation===this){const f=e.Rm.iterator;for(;f.next();)f.value.qF();e.Rm.clear()}if(i.xr(!0),this.isViewportUnconstrained&&(i.scrollMode=this.ZM),e.Au(),h){this.Vf=!1,this.start();return}this.wx(null),i.PA(),e.Lu(this),this.Tu&&this.Tu(this),i.requestUpdate()}Of(t,i){const e=i.actualBounds;let s=null;if(i instanceof Group&&(s=i.placeholder),s!==null&&s.visible){const n=s.getDocumentPoint(Spot.TopLeft),o=s.padding;n.x+=o.left,n.y+=o.top,this.add(t,\"position\",n,t.position,!1)}else this.add(t,\"position\",new Point(e.x+e.width/2,e.y+e.height/2),t.position,!1);this.add(t,\"scale\",.01,t.scale,!1),t instanceof Group&&this.WF(t,i)}WF(t,i){const e=t.memberParts;for(;e.next();){const s=e.value;s instanceof Node&&this.Of(s,i)}}Ef(t,i){if(!t.isVisible())return;let e=null;if(i instanceof Group&&(e=i.placeholder),e!==null&&e.visible){const s=e.getDocumentPoint(Spot.TopLeft),n=e.padding;s.x+=n.left,s.y+=n.top,this.add(t,\"position:placeholder\",t.position,s,!0)}else this.add(t,\"position:nodeCollapse\",t.position,i,!0);this.add(t,\"scale\",t.scale,.01,!0),this.GF(t),t instanceof Group&&this.jF(t,i)}jF(t,i){const e=t.memberParts;for(;e.next();){const s=e.value;s instanceof Node&&this.Ef(s,i)}}get duration(){return this.To}set duration(t){U.i(t,\"number\",Animation,\"duration\"),t<1&&U.U(t,\">= 1\",Animation,\"duration\"),this.To=t}get reversible(){return this.Du}set reversible(t){this.Du=t}get runCount(){return this.Mx}set runCount(t){t>0?this.Mx=t:U.n(\"Animation.runCount value must be a positive integer.\")}get finished(){return this.Tu}set finished(t){this.Tu!==t&&(t!==null&&U.P(t,Animation,\"finished\"),this.Tu=t)}get easing(){return this.kx}set easing(t){this.kx=t}get isViewportUnconstrained(){return this.JM}set isViewportUnconstrained(t){this.JM=t}get isAnimating(){return this.Li}getTemporaryState(t){let i=this.Sx.get(t);return i===null&&(i={},this.Sx.set(t,i)),i}static EaseLinear=(t,i,e,s)=>e*t/s+i;static EaseInOutQuad=(t,i,e,s)=>(t/=s/2,t<1?e/2*t*t+i:-e/2*(--t*(t-2)-1)+i);static EaseInQuad=(t,i,e,s)=>e*(t/=s)*t+i;static EaseOutQuad=(t,i,e,s)=>-e*(t/=s)*(t-2)+i;static EaseInExpo=(t,i,e,s)=>t===0?i:e*Math.pow(2,10*(t/s-1))+i;static EaseOutExpo=(t,i,e,s)=>t===s?i+e:e*(-Math.pow(2,-10*t/s)+1)+i}class AnimationState{li;xs;Cx;Lx;Ax;constructor(t,i,e){this.li=t,this.xs=i,this.Cx={},this.Lx=e,this.Ax=!1}}var TriggerStart=(y=>(y[y.Default=1]=\"Default\",y[y.Immediate=2]=\"Immediate\",y[y.Bundled=3]=\"Bundled\",y))(TriggerStart||{});class AnimationTrigger{Ne;hn;Ru;zf;constructor(t,i,e){e&&Debug&&U.j(e,TriggerStart,\"TriggerStart\"),this.Ne=null,this.hn=t,this.Ru=e||1,this.zf=null,i!==void 0&&(this.zf=i,e===void 0&&(this.Ru=2))}copy(){const t=new AnimationTrigger(this.hn);t.Ru=this.Ru;const i=this.zf;if(i!==null){const e={};i.duration!==void 0&&(e.duration=i.duration),i.finished!==void 0&&(e.finished=i.finished),i.easing!==void 0&&(e.easing=i.easing),t.zf=e}return t}get propertyName(){return this.hn}set propertyName(t){this.hn=t}get animationSettings(){return this.zf}set animationSettings(t){this.zf=t}vF(t){const i=this.zf;i!==null&&(i.duration&&(t.duration=i.duration),i.finished&&(t.finished=i.finished),i.easing&&(t.easing=i.easing))}get startCondition(){return this.Ru}set startCondition(t){Debug&&U.j(t,TriggerStart,\"TriggerStart\"),this.Ru=t}static Default=1;static Immediate=2;static Bundled=3}class Layer{C;Lt;ii;Ar;Vl;zl;Xl;Yl;Kl;Ul;Gl;Hl;ql;Wl;jl;vl;Tf;Jl;Dx;Om;Iu;Ft;constructor(t){GSet.Ji(this),this.C=null,this.Ft=new List,this.Lt=\"\",this.ii=1,this.Ar=!1,this.Vl=!0,this.zl=!0,this.Xl=!0,this.Yl=!0,this.Kl=!0,this.Ul=!0,this.Gl=!0,this.Hl=!0,this.ql=!0,this.Wl=!0,this.jl=!0,this.vl=!0,this.Tf=!0,this.Jl=!0,this.Dx=!0,this.Om=!1,this.Iu=[],t&&Object.assign(this,t)}JF(){const t=this.Ft;for(let i=0;i<t.length;i++)t.h[i]._M(null);t.clear(),this.Iu.length=0}Do(t){this.C=t}toString(t){t===void 0&&(t=0);const i='Layer \"'+this.name+'\"';if(t<=0)return i;let e=0,s=0,n=0,o=0,r=0;const l=this.Ft.iterator;for(;l.next();){const f=l.value;f instanceof Group?n++:f instanceof Node?s++:f instanceof Link?o++:f instanceof Adornment?r++:e++}let h=\"\";if(e>0&&(h+=e+\" Parts \"),s>0&&(h+=s+\" Nodes \"),n>0&&(h+=n+\" Groups \"),o>0&&(h+=o+\" Links \"),r>0&&(h+=r+\" Adornments \"),t>1){const f=this.Ft.iterator;for(;f.next();){const a=f.value;h+=`\n    `+a.toString();const c=a.data;c!==null&&GSet.gs(c)&&(h+=\" #\"+GSet.gs(c)),a instanceof Node?h+=\" \"+U.toString(c):a instanceof Link&&(h+=\" \"+U.toString(a.fromNode)+\" \"+U.toString(a.toNode))}}return i+\" \"+this.Ft.count+\": \"+h}findObjectAt(t,i,e){if(i===void 0&&(i=null),e===void 0&&(e=null),this.Jl===!1)return null;Debug&&!t.isReal()&&U.n(\"findObjectAt: Point must have a real value, not: \"+t.toString());let s=!1;this.diagram!==null&&this.diagram.viewportBounds.containsPoint(t)&&(s=!0);const n=Point.a(),o=this.Ft.h,r=o.length;for(let l=r;l--;){const h=o[l];if(s===!0&&h.Dl()===!1||!h.isVisible())continue;n.c(t),n.Xe(h.Us);let f=h.NA(n,i,e);if(f!==null&&(i!==null&&(f=i(f)),f!==null&&(e===null||e(f))))return Point.o(n),f}return Point.o(n),null}findObjectsAt(t,i,e,s){if(i===void 0&&(i=null),e===void 0&&(e=null),!(s instanceof List)&&!(s instanceof GSet)&&(s=new GSet),this.Jl===!1)return s;Debug&&!t.isReal()&&U.n(\"findObjectsAt: Point must have a real value, not: \"+t.toString());let n=!1;this.diagram!==null&&this.diagram.viewportBounds.containsPoint(t)&&(n=!0);const o=Point.a(),r=this.Ft.h,l=r.length;for(let h=l;h--;){const f=r[h];if(n===!0&&f.Dl()===!1||!f.isVisible())continue;o.c(t),o.Xe(f.Us);let a=f;f.CA(o,i,e,s)&&(i!==null&&(a=i(a)),a!==null&&(e===null||e(a))&&s.add(a))}return Point.o(o),s}findObjectsIn(t,i,e,s,n){if(i===void 0&&(i=null),e===void 0&&(e=null),s===void 0&&(s=!1),!(n instanceof List)&&!(n instanceof GSet)&&(n=new GSet),this.Jl===!1)return n;Debug&&!t.isReal()&&U.n(\"findObjectsIn: Rect must have a real value, not: \"+t.toString());let o=!1;this.diagram!==null&&this.diagram.viewportBounds.containsRect(t)&&(o=!0);const r=this.Ft.h,l=r.length;for(let h=l;h--;){const f=r[h];if(o===!0&&f.Dl()===!1||!f.isVisible())continue;let a=f;f.Em(t,i,e,s,n)&&(i!==null&&(a=i(a)),a!==null&&(e===null||e(a))&&n.add(a))}return n}KS(t,i,e,s,n,o,r){if(this.Jl===!1)return n;const l=this.Ft.h,h=l.length;for(let f=h;f--;){const a=l[f];if(r===!0&&a.Dl()===!1||!o(a)||!a.isVisible())continue;let c=a;a.Em(t,i,e,s,n)&&(i!==null&&(c=i(c)),c!==null&&(e===null||e(c))&&n.add(c))}return n}findObjectsNear(t,i,e,s,n,o){if(e===void 0&&(e=null),s===void 0&&(s=null),n===void 0&&(n=!0),n!==!1&&n!==!0&&((n instanceof List||n instanceof GSet)&&(o=n),n=!0),!(o instanceof List)&&!(o instanceof GSet)&&(o=new GSet),this.Jl===!1)return o;Debug&&!t.isReal()&&U.n(\"findObjectsNear: Point must have a real value, not: \"+t.toString());let r=!1;this.diagram!==null&&this.diagram.viewportBounds.containsPoint(t)&&(r=!0);const l=Point.a(),h=Point.a(),f=this.Ft.h,a=f.length;for(let c=a;c--;){const u=f[c];if(r===!0&&u.Dl()===!1||!u.isVisible())continue;l.c(t),l.Xe(u.Us),h.s(t.x+i,t.y),h.Xe(u.Us);let d=u;u.AA(l,h,e,s,n,o)&&(e!==null&&(d=e(d)),d!==null&&(s===null||s(d))&&o.add(d))}return Point.o(l),Point.o(h),o}t2(){return this.Ft.h}ks(t,i){if(!this.visible)return;const e=this.Ft.h,s=e.length;if(s===0)return;const n=U.lt(),o=U.lt();for(let r=0;r<s;r++){const l=e[r];if(l.i2=r,l instanceof Link){if(l.Le===!1)continue}else if(l instanceof Adornment&&l.adornedPart!==null)continue;const h=l.actualBounds;l.isVisible()&&h.intersectsRectPlus(i,10)?(l.ks(!0),n.push(l)):(l.ks(!1),l.adornments!==null&&l.adornments.count>0&&o.push(l))}for(let r=0;r<n.length;r++){const l=n[r];l.e2();const h=l.adornments;for(;h.next();){const f=h.value;f.dt(1/0,1/0),f.Gt(),f.ks(!0)}}for(let r=0;r<o.length;r++)o[r].e2();U.tt(n),U.tt(o)}Ou(t){let i=1;return this.ii!==1&&(i=t.globalAlpha,t.globalAlpha=i*this.ii),i}LA(t,i){for(let e=0;e<i;e++)t[e].Eu()}Ui(t,i,e){if(!this.visible||this.ii===0||(e===void 0&&(e=!0),!e&&this.isTemporary))return;const s=this.Ft.h,n=s.length;if(n===0)return;t.Ar&&this.LA(s,n);const o=this.Ou(t),r=this.Iu;r.length=0;const l=i.scale,h=Rect.a();for(let f=0;f<n;f++){const a=s[f];this.Bm(t,a,i,r,l,h,!0)}Rect.o(h),t.Ar&&this.LA(s,n),t.globalAlpha=o}LE(t,i,e){if(!this.visible||this.ii===0)return;const s=this.Ft.h,n=s.length;if(n===0)return;const o=this.Ou(t),r=this.Iu;r.length=0;const l=i.scale,h=Rect.a();for(let f=0;f<n;f++){const a=s[f];e.has(a)||this.Bm(t,a,i,r,l,h,!0)}Rect.o(h),t.globalAlpha=o}$F(t,i,e,s){if(!this.visible||this.ii===0||!s&&this.isTemporary)return;const n=this.Ft.h,o=n.length;if(o===0)return;const r=this.Ou(t),l=this.Iu;l.length=0;const h=i.scale,f=Rect.a();for(let a=0;a<o;a++){const c=n[a];e.has(c)&&this.Bm(t,c,i,l,h,f,!1)}Rect.o(f),t.globalAlpha=r}ZF(t,i,e,s,n){if(!this.visible||this.opacity===0)return;const o=this.diagram.grid.part;if(!s&&this.isTemporary){if(n&&o.layer===this){const r=this.Ou(t);o.Ui(t,e),t.globalAlpha=r}}else{const r=this.Ou(t),l=e.scale,h=Rect.a(),f=this.Ft.h,a=f.length;for(let c=0;c<a;c++){const u=f[c];!n&&u===o||this.Bm(t,u,e,null,l,h,!1)}Rect.o(h),t.globalAlpha=r}}TE(t,i,e){if(!this.visible||this.ii===0)return;const s=this.Ou(t),n=this.Iu;n.length=0;const o=i.scale,r=Rect.a(),l=this.Ft.h,h=l.length,f=e.length;for(let a=0;a<h;a++){const c=l[a],u=c.ta(c.actualBounds);this.QF(u,e,f,o)&&this.Bm(t,c,i,n,o,r,!0)}Rect.o(r),t.globalAlpha=s}Bm(t,i,e,s,n,o,r){if(r&&!i.Dl()){t.removePartFromView(i);return}if(s!==null&&i instanceof Link&&(i.isOrthogonal&&s.push(i),i.Le===!1)){t.removePartFromView(i);return}let l=!1,h=i.containingGroup;for(;h!==null;)l?h.hi!==null&&o.intersectRect(h.hi):h.hi!==null&&(l=!0,o.c(h.hi)),h=h.containingGroup;const f=i.actualBounds;let a=!1;if(l&&i.isVisible()){if(!o.intersectsRect(f)){t.removePartFromView(i);return}a=!o.containsRect(f)}a&&(t.save(),t instanceof SVGContext?t.partClipRect=o.copy():(t.beginPath(),t.rect(o.x,o.y,o.width,o.height),t.clip())),f.width*n>e.Vm||f.height*n>e.Vm?i.Ui(t,e):this._F(t,i,e),a&&(t.restore(),t.clearContextCache(!0))}_F(t,i,e){if(t instanceof SVGContext){i.Ui(t,e);return}const s=i.actualBounds,n=i.naturalBounds;if(s.width===0||s.height===0||isNaN(s.x)||isNaN(s.y)||!i.isVisible())return;const o=i.F;if(i.background===null){i.un(t,\"rgba(0,0,0,0.3)\",!0,!1,n,s),t.fillRect(s.x,s.y,s.width,s.height);return}if(t.transform(o.m11,o.m12,o.m21,o.m22,o.dx,o.dy),i.un(t,i.background,!0,!1,n,s),t.fillRect(0,0,n.width/2,n.height/2),!o.$k()){const r=1/(o.m11*o.m22-o.m12*o.m21);t.transform(o.m22*r,-o.m12*r,-o.m21*r,o.m11*r,r*(o.m21*o.dy-o.m22*o.dx),r*(o.m12*o.dx-o.m11*o.dy))}}QF(t,i,e,s){const n=2/s,o=4/s;for(let r=0;r<e;r++){const l=i[r];if(!(l.width===0||l.height===0)&&t.intersects(l.x-n,l.y-n,l.width+o,l.height+o))return!0}return!1}t(t,i,e,s,n){const o=this.diagram;o!==null&&o.raiseChangedEvent(2,t,this,i,e,s,n)}ia(t,i,e){const s=this.Ft;if(i._M(this),t>=s.count)t=s.count;else if(s.elt(t)===i)return-1;s.insertAt(t,i),i.zm(e);const n=this.diagram;return n!==null&&(e?n.L():n.ia(i)),this.Fx(t,i),t}ne(t,i,e){if(!e&&i.layer!==this&&i.layer!==null)return i.layer.ne(t,i,e);const s=this.Ft;if(t<0||t>=s.length){if(t=s.indexOf(i),t<0)return-1}else if(s.elt(t)!==i&&(t=s.indexOf(i),t<0))return-1;i.Xm(e),s.removeAt(t);const n=this.diagram;return n!==null&&(e?n.L():n.ne(i)),i._M(null),t}Fx(t,i){t=this.tR(t,i),i instanceof Group&&this.iR(t,i),i.svg!==null&&i.svg.remove()}tR(t,i){const e=i.zOrder;if(isNaN(e))return t;const s=this.Ft,n=s.count;if(n<=1)return t;if(t<0&&(t=s.indexOf(i)),t<0)return-1;let o=t-1,r=NaN;for(;o>=0&&(r=s.elt(o).zOrder,!!isNaN(r));)o--;let l=t+1,h=NaN;for(;l<n&&(h=s.elt(l).zOrder,!!isNaN(h));)l++;if(!isNaN(r)&&r>e)for(;;){if(o===-1||r<=e)return o++,o===t?t:(s.removeAt(t),s.insertAt(o,i),o);for(r=NaN;--o>=0&&(r=s.elt(o).zOrder,!!isNaN(r)););}else if(!isNaN(h)&&h<e)for(;;){if(l===n||h>=e)return l--,l===t?t:(s.removeAt(t),s.insertAt(l,i),l);for(h=NaN;++l<n&&(h=s.elt(l).zOrder,!!isNaN(h)););}return t}iR(t,i){if(i===null||!isNaN(i.zOrder))return;this.eR(t,i);const e=i.containingGroup;e!==null&&this.Fx(-1,e)}eR(t,i){if(i.memberParts.count===0)return;let e=-1;const s=this.Ft.h,n=s.length;for(let o=0;o<n;o++){const r=s[o];if(r===i&&(t=o,e>=0)||e<0&&r.containingGroup===i&&(e=o,t>=0))break}if(!(e<0)&&e<t){const o=this.Ft;o.removeAt(t),o.insertAt(e,i)}}get parts(){return this.Ft.iterator}get partsBackwards(){return this.Ft.iteratorBackwards}get diagram(){return this.C}get name(){return this.Lt}set name(t){U.i(t,\"string\",Layer,\"name\");const i=this.Lt;if(i!==t){const e=this.diagram;if(e!==null){i===\"\"&&U.n(\"Cannot rename default Layer to: \"+t);const n=e.layers;for(;n.next();)n.value.name===t&&U.n(\"Layer.name is already present in this diagram: \"+t)}this.Lt=t,this.t(\"name\",i,t);const s=this.Ft.iterator;for(;s.next();){const n=s.value;n.layerName=this.Lt}}}get opacity(){return this.ii}set opacity(t){const i=this.ii;if(i!==t){U.i(t,\"number\",Layer,\"opacity\"),(t<0||t>1)&&U.U(t,\"0 <= value <= 1\",Layer,\"opacity\"),this.ii=t;const e=this.diagram;e!==null&&e.L(),this.t(\"opacity\",i,t)}}get isViewportAligned(){return this.Om}set isViewportAligned(t){const i=this.Om;i!==t&&(this.Om=t,this.diagram&&(this.TA(),this.diagram.L()),this.t(\"isViewportAligned\",i,t),t&&(this.isInDocumentBounds=!1))}TA(){if(!this.Om)return;const t=this.diagram,i=this.Ft.h,e=i.length,s=t.Pt,n=t.Nt;for(let o=0;o<e;o++){const r=i[o],l=r.naturalBounds.width,h=r.naturalBounds.height;let f=r.alignment;(f.isDefault()||!f.isSpot())&&(f=Spot.BottomRight);let a=r.alignmentFocus;a.isDefault()&&(a=new Spot(f.x,f.y));const c=f.x*s+f.offsetX-(a.x*l+a.offsetX),u=f.y*n+f.offsetY-(a.y*h+a.offsetY),d=Point.K(c,u);t.sR(d),r.Lf(d.x,d.y,!0),Point.o(d),r.ot=1/t.scale}}get isTemporary(){return this.Ar}set isTemporary(t){const i=this.Ar;i!==t&&(U.i(t,\"boolean\",Layer,\"isTemporary\"),this.Ar=t,this.t(\"isTemporary\",i,t))}get visible(){return this.Tf}set visible(t){const i=this.Tf;if(i!==t){U.i(t,\"boolean\",Layer,\"visible\"),this.Tf=t;const e=this.Ft.iterator;for(;e.next();)e.value.Ki(t);const s=this.diagram;s!==null&&s.L(),this.t(\"visible\",i,t)}}get pickable(){return this.Jl}set pickable(t){const i=this.Jl;i!==t&&(U.i(t,\"boolean\",Layer,\"pickable\"),this.Jl=t,this.t(\"pickable\",i,t))}get isInDocumentBounds(){return this.Dx}set isInDocumentBounds(t){const i=this.Dx;i!==t&&(this.Dx=t,this.diagram!==null&&this.diagram.invalidateDocumentBounds(),this.t(\"isInDocumentBounds\",i,t))}get allowCopy(){return this.Vl}set allowCopy(t){const i=this.Vl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowCopy\"),this.Vl=t,this.t(\"allowCopy\",i,t))}get allowDelete(){return this.zl}set allowDelete(t){const i=this.zl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowDelete\"),this.zl=t,this.t(\"allowDelete\",i,t))}get allowTextEdit(){return this.Xl}set allowTextEdit(t){const i=this.Xl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowTextEdit\"),this.Xl=t,this.t(\"allowTextEdit\",i,t))}get allowGroup(){return this.Yl}set allowGroup(t){const i=this.Yl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowGroup\"),this.Yl=t,this.t(\"allowGroup\",i,t))}get allowUngroup(){return this.Kl}set allowUngroup(t){const i=this.Kl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowUngroup\"),this.Kl=t,this.t(\"allowUngroup\",i,t))}get allowLink(){return this.Ul}set allowLink(t){const i=this.Ul;i!==t&&(U.i(t,\"boolean\",Layer,\"allowLink\"),this.Ul=t,this.t(\"allowLink\",i,t))}get allowRelink(){return this.Gl}set allowRelink(t){const i=this.Gl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowRelink\"),this.Gl=t,this.t(\"allowRelink\",i,t))}get allowMove(){return this.Hl}set allowMove(t){const i=this.Hl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowMove\"),this.Hl=t,this.t(\"allowMove\",i,t))}get allowReshape(){return this.ql}set allowReshape(t){const i=this.ql;i!==t&&(U.i(t,\"boolean\",Layer,\"allowReshape\"),this.ql=t,this.t(\"allowReshape\",i,t))}get allowResize(){return this.Wl}set allowResize(t){const i=this.Wl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowResize\"),this.Wl=t,this.t(\"allowResize\",i,t))}get allowRotate(){return this.jl}set allowRotate(t){const i=this.jl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowRotate\"),this.jl=t,this.t(\"allowRotate\",i,t))}get allowSelect(){return this.vl}set allowSelect(t){const i=this.vl;i!==t&&(U.i(t,\"boolean\",Layer,\"allowSelect\"),this.vl=t,this.t(\"allowSelect\",i,t))}}var AutoScale=(y=>(y[y.None=1]=\"None\",y[y.Uniform=2]=\"Uniform\",y[y.UniformToFill=3]=\"UniformToFill\",y))(AutoScale||{}),CycleMode=(y=>(y[y.All=1]=\"All\",y[y.NotDirected=2]=\"NotDirected\",y[y.NotDirectedFast=3]=\"NotDirectedFast\",y[y.NotUndirected=4]=\"NotUndirected\",y[y.DestinationTree=5]=\"DestinationTree\",y[y.SourceTree=6]=\"SourceTree\",y))(CycleMode||{}),ScrollMode=(y=>(y[y.Document=1]=\"Document\",y[y.Infinite=2]=\"Infinite\",y))(ScrollMode||{}),CollapsePolicy=(y=>(y[y.TreeParent=1]=\"TreeParent\",y[y.AllParents=2]=\"AllParents\",y[y.AnyParents=3]=\"AnyParents\",y))(CollapsePolicy||{});class Diagram{ws;_t;s2;Rx;Lr;Bu;Ix;Ox;Ex;Bx;Vx;zx;ea;_h;Xx;Yx;Kx;$l;Xf;Tr;Ym;Ux;Gx;Vu;jn;Dr;sa;Ro;Km;Yf;Um;Kf;zu;Fr;vn;o2;l2;Hx;qx;h2;Wx;a2;f2;c2;jx;Gm;Rr;Ir;Or;Er;Br;Vr;vx;zr;Jx;Xr;Yr;Kr;Ur;$x;u2;Io;d2;Zx;Qx;g2;Ci;m2;p2;w2;Xs;Oo;Xi;_x;Vl;zl;t1;i1;Xl;Yl;Kl;e1;Ul;Gl;Hl;ql;Wl;jl;vl;s1;o1;b2;Xu;Yu;l1;h1;a1;f1;Hm;c1;u1;d1;ei;k2;g1;S2;Ku;dn;Jn;oe;$n;DA;Zl;M2;P2;qm;m1;Uu;Wm;p1;Gr;Ql;na;N2;C2;jm;w1;b1;es;Gu;vm;Hu;_l;Uf;Jm;Hr;oa;A2;$m;Zt;F;Ue;Nr;Gi;Ss;L2;th;qr;Nl;Wr;ra;Gf;T2;qu;la;Wu;Wt;ih;gt;ot;ju;Pt;Nt;wt;Hf;jw;k1;ha;qf;S1;M1;P1;nR;oR;Hi;Al;Vm;Zm;D2;F2;FA;Qm;rR;lR;hR;N1;aR;fR;cR;aa;RA;eh;fa;ca;ua;da;Su;Zh;si;Tt;Wf;aS;fS;Sf;ii;static C1=null;static IA=new GMap;static R2;static I2=null;ku;A1;L1;T1;D1;F1;_m;O2;t0;i0;e0;yx;E2;B2;jf;constructor(t,i){if(Diagram.kw||(Diagram.Zk(),Diagram.kw=!0),GSet.Ji(this),Diagram.OA(this),this.Zt=!0,this.Tt=null,this.Pt=0,this.Nt=0,this.wt=null,Diagram.isUsingDOM()){const s=this,n=()=>{s.Ai(root.document,\"DOMContentLoaded\",n,!1),s.setRTL()};root.document.body!==null?this.setRTL():s.Ut(root.document,\"DOMContentLoaded\",n,!1)}this.Hf=null,Diagram.V2(\"Model\",PartManager);const e=this;return this.m2=s=>e.partManager.doModelDataChanged(s),this.p2=s=>e.partManager.doModelChanged(s),this.S1=null,this.M1=null,this.EA(),this.model=Model.z2(),this.themeManager=new ThemeManager,this.Io=!0,this.BA(),this.layout=new Layout,this.Io=!1,this.rR=null,this.lR=null,this.hR=null,this.N1=null,this.aR=null,this.fR=null,this.cR=null,this.aa=null,this.RA=null,this.eh=null,this.fa=null,this.ca=null,this.ua=null,this.da=null,this.Su=()=>{},this.Zh=null,this.Hu=!1,this.Wf=new DiagramHelper(this),t!==void 0&&(typeof t==\"string\"||root.Element&&t instanceof Element?this.X2(t):i=t),i&&this.setProperties(i),this.Zt=!1,this.requestUpdate(),this}SF(){return this.wt!==null}get renderer(){return this.Uf}set renderer(t){if(this instanceof Overview)return;t===\"\"&&(t=\"default\");const i=t.toLowerCase(),e=this.Uf;if(i===e)return;this.Uf=i;let s=null;i===\"default\"||i===\"canvas\"?(s=this._l.get(\"svg\"),s!==null&&s.Et.remove(),this.wt&&(this.si=this.wt.ci),this.si.clearContextCache(!0)):i===\"svg\"?(this._l.has(\"svg\")?s=this._l.get(\"svg\"):(s=new SVGSurface(this,root.document),this.addRenderer(\"svg\",s)),this.div!==null&&this.div.appendChild(s.Et),this.si=s.ci,this.wt&&(this.wt.ci.setTransform(this.Hi,0,0,this.Hi,0,0),this.wt.ci.clearRect(0,0,this.Pt,this.Nt))):i===\"debug\"&&(this._l.has(\"SVG\")||(s=new SVGSurface(this,root.document),this.addRenderer(\"SVG\",s),s.Et.style.backgroundColor=\"whitesmoke\",this.div!==null&&this.div.after(s.Et))),this.Zt||this.redraw()}EA(){this.jf=new List,this.setupRouters(),this.ws=new AnimationManager,this.ws.Do(this),this._t=17,this.s2=!1,this.ju=!1,this.Rx=\"default\",this.Wt=new List,this._l=new GMap,this.Uf=\"default\",this.resetRenderingHints(),this.uR(),this.ii=1,this.gt=new Point(NaN,NaN).p(),this.yx=new Point(NaN,NaN),this.ot=1,this.$m=1,this.Ix=new Point(NaN,NaN).p(),this.Ox=NaN,this.Ex=1e-4,this.Bx=100,this.F=new Transform,this.Vx=new Point(NaN,NaN).p(),this.zx=new Rect(NaN,NaN,NaN,NaN).p(),this.ea=new Margin(0,0,0,0).p(),this._h=1,this.Xx=!1,this.Yx=null,this.Kx=null,this.$l=1,this.Xf=Spot.Default,this.Tr=1,this.Ym=Spot.Default,this.Ux=Spot.None,this.Gx=Spot.None,this.Ue=!0,this.Vu=!1,this.jn=new Set,this.Dr=new GSet,this.sa=new GSet,this.Ro=!1,this.ih=new GMap,this.qu=!0,this.Km=250,this.Yf=-1,this.Um=new Margin(16,16,16,16).p(),this.Nr=!1,this.Kf=!1,this.zu=!0,this.Jm=new InputEvent,this.Jm.diagram=this,this.Hr=new InputEvent,this.Hr.diagram=this,this.oa=new InputEvent,this.oa.diagram=this,this.Fr=null,this.vn=null,this.jw=!1,this.dR(),this.Wr=new GSet,this.Hx=!0,this.qx=1,this.h2=!1,this.Wx=1,this.jx=\"auto\",this.Gm=\"auto\",this.Rr=null,this.Ir=null,this.Or=null,this.Er=null,this.Br=null,this.Vr=null,this.vx=null,this.zr=null,this.Jx=!1,this.Xr=null,this.Yr=null,this.Kr=null,this.Ur=null,this.$x=!1,this.k1={},this.ha=[null,null],this.Io=!1,this.d2=!1,this.Zx=!1,this.Qx=!1,this.g2=!0,this.Ss=!1,this.la=!1,this.w2=!0,this.Xs=-2,this.th=new GMap,this.Wu=new List,this.Oo=!1,this.Xi=!0,this._x=!0,this.Vl=!0,this.zl=!0,this.t1=!1,this.i1=!0,this.Xl=!0,this.Yl=!0,this.Kl=!0,this.e1=!0,this.Ul=!0,this.Gl=!0,this.Hl=!0,this.ql=!0,this.Wl=!0,this.jl=!0,this.vl=!0,this.s1=!0,this.o1=!0,this.b2=!1,this.qf=!1,this.Xu=!0,this.Yu=!0,this.l1=!0,this.h1=!0,this.a1=16,this.f1=16,this.Hm=!1,this.c1=!1,this.u1=0,this.d1=0,this.ei=new Margin(5).p(),this.k2=new GSet().p(),this.g1=999999999,this.S2=new GSet().p(),this.ra=!0,this.Ku=!0,this.Gf=!0,this.dn=!1,this.Jn=!1,this.qr=!0,this.Nl=!1,this.$n=!1,this.DA=new GSet,this.T2=new GSet,this.Zl=null,this.M2=new Size(8,8),this.P2=999,this.qm=!1,this.aS=1,this.fS=0,this.Gi={scale:1,position:new Point,bounds:new Rect,canvasSize:new Size,newCanvasSize:new Size,isScroll:!1},this.Gi.canvasSize=this.Gi.canvasSize,this.Gi.newCanvasSize=this.Gi.newCanvasSize,this.Gi.isScroll=!1,this.m1=new Rect(NaN,NaN,NaN,NaN).p(),this.Uu=new Size(NaN,NaN).p(),this.Wm=new Rect(NaN,NaN,NaN,NaN).p(),this.p1=!1,this.gR(),this.es=null,this.Gu=!1,this.Sf=null,this.partManager=new PartManager,this.toolManager=new ToolManager,this.toolManager.initializeStandardTools(),this.defaultTool=this.toolManager,this.currentTool=this.defaultTool,this.L1=null,this.T1=new DraggingOptions,this.D1=null,this.F1=null,this.A1=!1,this.ku=!1,this.commandHandler=new CommandHandler,this.i0=null,this.e0=Point.Hk,this.E2=!1,this.Hi=1,this.Al=null,this.Vm=1,this._m=0,this.O2=[0,0,0,0,0],this.t0=0,this.Zm=1,this.D2=0,this.F2=new Point,this.FA=500,this.vm=new Point,this.Qm=!1}static VA=root.document!==void 0;static isUsingDOM(){return Diagram.VA}static useDOM(t){Diagram.VA=t?root.document!==void 0:!1}static ss=new WeakMap;clear(){this.animationManager.stopAnimation(),this.model.clear(),Diagram.zA(),this.XA(!1),this.Wu.clear(),this.YA(),this.Zl=null,this.invalidateDocumentBounds(),this.ensureBounds(),this.L()}XA(t){this.animationManager.stopAnimation(!0),this.k2=new GSet().p(),this.S2=new GSet().p();const i=this.skipsUndoManager,e=this.Ci!==null&&this.Ci!==void 0;e&&(this.skipsUndoManager=!0);let s=null;this.es!==null&&(s=this.es.part,s!==null&&this.remove(s));const n=[],o=this.Wt.length;if(t){for(let r=0;r<o;r++){const h=this.Wt.h[r].parts;for(;h.next();){const f=h.value;f!==s&&f.data===null&&n.push(f)}}for(let r=0;r<n.length;r++){const l=n[r];this.remove(l)}}for(let r=0;r<o;r++)this.Wt.h[r].JF();return this.partManager.clear(),this.jn.clear(),this.Dr.clear(),this.sa.clear(),this.ih.clear(),this.Wr.clear(),this.Sf=null,this.Wu.clear(),this.YA(),U.Uk=[],s!==null&&(this.add(s),this.partManager.parts.delete(s)),e&&(this.skipsUndoManager=i),n}static s0=null;static R1=\"\";static zA(){Diagram.s0=null,Diagram.R1=\"\"}static DE(){return null}reset(){this.clear(),this.Zt=!0,this.EA(),this.themeManager=new ThemeManager,this.nh(),this.Io=!0,this.BA(),this.layout=new Layout,this.Io=!1,this.model=Model.z2(),this.model.undoManager=new UndoManager,this.Hu=!1,this.Zt=!1,this.L()}gR(){this.Gr=new GMap,this.N2=new Node().add(new TextBlock({stroke:\"black\",font:\"10pt sans-serif\"}).bind(\"text\",\"\",U.toString).theme(\"stroke\",\"text\").theme(\"font\",\"normal\")),this.Gr.set(\"\",this.N2),this.Gr.set(\"Comment\",new Node().add(new TextBlock({stroke:\"brown\",font:\"10pt sans-serif\"}).bind(\"text\",\"\",U.toString).theme(\"stroke\",\"comment\").theme(\"font\",\"normal\"))),this.Gr.set(\"LinkLabel\",new Node({selectable:!1,avoidable:!1}).add(new Shape(\"Ellipse\",{fill:\"black\",stroke:null,desiredSize:new Size(3,3).it()}).theme(\"fill\",\"link\"))),this.na=new GMap,this.L2=new Group(Panel.Vertical,{selectionObjectName:\"GROUPPANEL\"}).add(new TextBlock({stroke:\"black\",font:\"bold 12pt sans-serif\"}).bind(\"text\",\"\",U.toString).theme(\"stroke\",\"text\").theme(\"font\",\"bold\"),new Panel(Panel.Auto,{name:\"GROUPPPANEL\"}).add(new Shape({fill:\"rgba(128,128,128,0.2)\",stroke:\"black\",strokeWidth:1}).theme(\"fill\",\"group\").theme(\"stroke\",\"outline\").theme(\"strokeWidth\",\"group\"),new Placeholder({padding:5}).theme(\"padding\",\"group\"))),this.na.set(\"\",this.L2),this.Ql=new GMap,this.C2=new Link().add(new Shape({isPanelMain:!0,stroke:\"black\"}).theme(\"stroke\",\"link\"),new Shape({toArrow:\"Standard\",fill:\"black\",stroke:null,strokeWidth:0}).theme(\"toArrow\").theme(\"fill\",\"link\")),this.Ql.set(\"\",this.C2),this.Ql.set(\"Comment\",new Link().add(new Shape({isPanelMain:!0,stroke:\"brown\"}).theme(\"stroke\",\"comment\"))),this.jm=new Adornment(Panel.Auto).add(new Shape({fill:null,stroke:\"dodgerblue\",strokeWidth:3}).theme(\"stroke\",\"selection\").theme(\"strokeWidth\",\"selection\"),new Placeholder({margin:1.5}).theme(\"margin\",\"selection\",\"numbers\",null,t=>t?new Margin(t/2):1.5)),this.w1=this.jm,this.b1=new Adornment(Panel.Link).add(new Shape({isPanelMain:!0,fill:null,stroke:\"dodgerblue\",strokeWidth:3}).theme(\"stroke\",\"selection\").theme(\"strokeWidth\",\"selection\"))}setRTL(t){let i=t===void 0?this.div:t;i===null&&(i=root.document.body);const e=U.ds(\"div\");e.dir=\"rtl\",e.style.cssText=\"font-size: 14px; width: 1px; height: 1px; position: absolute; top: -1000px; overflow: scroll;\",e.textContent=\"A\",i.appendChild(e);let s=\"reverse\";e.scrollLeft>0?s=\"default\":(e.scrollLeft=1,e.scrollLeft===0&&(s=\"negative\")),i.removeChild(e),this.Rx=s}setScrollWidth(t){let i=t===void 0?this.div:t;i===null&&(i=root.document.body);let e=0;if(Diagram.isUsingDOM()){let s=Diagram.I2,n=Diagram.R2;s===null&&(Diagram.I2=U.ds(\"p\"),s=Diagram.I2,s.style.width=\"100%\",s.style.height=\"200px\",s.style.boxSizing=\"content-box\",Diagram.R2=U.ds(\"div\"),n=Diagram.R2,n.style.position=\"absolute\",n.style.visibility=\"hidden\",n.style.width=\"200px\",n.style.height=\"150px\",n.style.boxSizing=\"content-box\",n.appendChild(s)),n.style.overflow=\"hidden\",i.appendChild(n);const o=s.offsetWidth;n.style.overflow=\"scroll\";let r=s.offsetWidth;o===r&&(r=n.clientWidth),i.removeChild(n),e=o-r,e===0&&!U.rr&&(e=11)}this._t=e,this.s2=!0}ai(t){t in AutoScale?this.autoScale=t:U.hr(this,t)}toString(t){t===void 0&&(t=0);let i=\"\";this.div&&this.div.id&&(i=this.div.id);let e='Diagram \"'+i+'\"';if(t<=0)return e;const s=this.Wt.iterator;for(;s.next();){const n=s.value;e+=`\n  `+n.toString(t-1)}return e}static OA(t){Diagram.C1=t}static wm(){return Diagram.C1}static fromDiv(t){let i=t;if(typeof t==\"string\"&&(i=root.document.getElementById(t)),i instanceof HTMLDivElement){const e=Diagram.ss.get(i);if(e)return e}return null}get div(){return this.Tt}set div(t){if(t!==null&&U.e(t,HTMLDivElement,Diagram,\"div\"),this.Tt!==t){const i=this.Tt;if(i!==null){if(Diagram.ss.delete(i),i.goDiagram=void 0,i.go=void 0,i.innerHTML=\"\",this.wt!==null){const s=this.wt.Et;this.Ai(s,\"pointermove\",this.fa,!1),this.Ai(s,\"pointerdown\",this.eh,!1),this.Ai(s,\"pointerup\",this.ca,!1),this.Ai(s,\"pointerout\",this.ua,!1),this.Ai(s,\"pointercancel\",this.da,!1),this.wt.dispose()}this.Hf&&(this.Hf.disconnect(),this.Hf=null);const e=this.toolManager;e!==null&&(e.mouseDownTools.each(s=>s.cancelWaitAfter()),e.mouseMoveTools.each(s=>s.cancelWaitAfter()),e.mouseUpTools.each(s=>s.cancelWaitAfter())),e.cancelWaitAfter(),this.currentTool.doCancel(),this.wt=null,this.Ai(root,\"resize\",this.N1,!1),this.Ai(root,\"wheel\",this.aa,!0),Diagram.wm()===this&&Diagram.OA(null)}else this.eh===null&&(this.$n=!1);if(this.Tt=null,t!==null){const e=Diagram.ss.get(t);e&&(e.div=null),this.X2(t),this.Su(),this.themeManager&&this.themeManager.mR()}else this.themeManager&&this.themeManager.pR()}}setupRouters(){this.jf.push(new AvoidsNodesRouter)}X2(t){const i=this;if(!Diagram.isUsingDOM())return;t==null&&U.n(\"Diagram setup requires an argument DIV.\"),i.Tt!==null&&U.n(\"Diagram has already completed setup.\"),typeof t==\"string\"?i.Tt=root.document.getElementById(t):t instanceof HTMLDivElement?i.Tt=t:U.n(\"No DIV or DIV id supplied: \"+t),i.Tt===null&&U.n(\"Invalid DIV id; could not get element with id: \"+t);const e=Diagram.ss.get(i.Tt);if(e&&e!==this&&U.n(\"Invalid div id; div already has a Diagram associated with it.\"),!i.Hf&&root.ResizeObserver){const a=root.ResizeObserver,c=U.Kk(()=>i.requestUpdate(),250,!1);i.Hf=new a(()=>c()),i.Hf.observe(i.Tt)}root.getComputedStyle(i.Tt,null).position===\"static\"&&(i.Tt.style.position=\"relative\");let s=5;const n=\"rgba(2\"+s+\"5, 255, 255, 0)\";s--,i.Tt.style[\"-webkit-tap-highlight-color\"]=n,i.Tt.innerHTML=\"\",Diagram.ss.set(i.Tt,i),i.Tt.goDiagram=i,i.Tt.go=root.go;const o=new CanvasSurface(i);o.style!==void 0&&(o.style.position=\"absolute\",o.style.top=\"0px\",o.style.left=\"0px\",root.getComputedStyle(i.Tt,null).getPropertyValue(\"direction\")===\"rtl\"&&(i.ju=!0),o.style.zIndex=\"2\",o.style.userSelect=\"none\",o.style.MozUserSelect=\"none\",o.style.touchAction=\"none\",o.style.letterSpacing=\"normal !important\",o.style.wordSpacing=\"normal !important\",o.style.lang=\"unknown\"),i.wt=o,i.si=o.ci;const r=i.si;i.Hi=i.computePixelRatio(),i.viewSize.isReal()||(i.Pt=i.Tt.clientWidth||1,i.Nt=i.Tt.clientHeight||1),i.KA(i.Pt,i.Nt);const l=i;i.Tt.insertBefore(o.Et,i.Tt.firstChild);const h=new CanvasSurface(null);if(h.width=1,h.height=1,i.nR=h,i.oR=h.ci,Diagram.isUsingDOM()){const a=U.ds(\"div\"),c=U.ds(\"div\");a.style.position=\"absolute\",a.style.overflow=\"auto\",a.style.width=i.Pt+\"px\",a.style.height=i.Nt+\"px\",a.style.zIndex=\"1\",c.style.position=\"absolute\",c.style.width=\"1px\",c.style.height=\"1px\",i.Tt.appendChild(a),a.appendChild(c),a.onscroll=Diagram.yR,a.addEventListener(\"pointerdown\",Diagram.wR),a.C=i,a.xR=!0,a.bR=!0,i.S1=a,i.M1=c}i.Su=U.Kk(()=>{i.Al=null,i.L()},300,!1),i.N1=U.Kk(()=>{i.UM()},250,!1),i.Zh=a=>(a.preventDefault(),!1),i.aa=a=>{if(!l.isEnabled)return;const c=l.vf(a,!0);c.bubbles=!0;let u=0,d=0;c.delta=0,a.deltaX!==void 0?(a.deltaX!==0&&(u=a.deltaX>0?1:-1),a.deltaY!==0&&(d=a.deltaY>0?1:-1),c.delta=Math.abs(a.deltaX)>Math.abs(a.deltaY)?-u:-d):a.wheelDeltaX!==void 0?(a.wheelDeltaX!==0&&(u=a.wheelDeltaX>0?-1:1),a.wheelDeltaY!==0&&(d=a.wheelDeltaY>0?-1:1),c.delta=Math.abs(a.wheelDeltaX)>Math.abs(a.wheelDeltaY)?-u:-d):a.wheelDelta!==void 0&&a.wheelDelta!==0&&(c.delta=a.wheelDelta>0?1:-1),l.doMouseWheel(),l.ga(c,a)},i.RA=a=>{if(!l.isEnabled)return;i.qf=!1,l.vf(a,!0);const c=l.currentTool;c.cancelWaitAfter(),c.standardMouseOver()},i.eh=a=>{if(!l.isEnabled)return;i.qf=!0;const c=l.k1;c[a.pointerId]===void 0&&(c[a.pointerId]=a);const u=l.ha;let d=!1;if(u[0]!==null&&(u[0].pointerId===a.pointerId||u[0].pointerType!==a.pointerType))u[0]=a;else if(u[1]!==null&&u[1].pointerId===a.pointerId)u[1]=a,d=!0;else if(u[0]===null)u[0]=a;else if(u[1]===null)u[1]=a,d=!0;else{a.preventDefault();return}const m=a.pointerType===\"touch\"||a.pointerType===\"pen\";m&&(l.jw=!1,l.Qm=!0);const g=l.kR(a,a,d),p=l.F2,w=m?25:10;if(a.timeStamp-l.D2<l.FA&&!(Math.abs(p.x-a.screenX)>w||Math.abs(p.y-a.screenY)>w)?l.Zm++:l.Zm=1,g.clickCount=l.Zm,l.D2=a.timeStamp,l.F2.setTo(a.screenX,a.screenY),l.doMouseDown(),a.button===1){a.preventDefault();return}l.ga(g,a)},i.fa=a=>{if(!l.isEnabled)return;i.qf=!0;const c=l.ha;if(c[0]!==null&&(c[0].pointerId===a.pointerId||c[0].pointerType!==a.pointerType))c[0]=a;else if(c[1]!==null&&c[1].pointerId===a.pointerId){c[1]=a;return}else if(c[0]===null)c[0]=a;else return;if(c[0].pointerId!==a.pointerId)return;const u=l.SR(a,a,c[1]!==null);l.doMouseMove(),l.ga(u,a)},i.ca=a=>{if(!l.isEnabled)return;i.qf=!0;const c=a.pointerType===\"touch\"||a.pointerType===\"pen\",u=l.k1;if(c&&l.jw){delete u[a.pointerId],a.preventDefault();return}const d=l.ha;if(d[0]!==null&&(d[0].pointerId===a.pointerId||d[0].pointerType!==a.pointerType))d[0]=null;else if(d[1]!==null&&d[1].pointerId===a.pointerId){d[1]=null;return}else return;const m=l.Y2(a,!1,!0,!1,!0,!1);let g=root.document.elementFromPoint(a.clientX,a.clientY)||null;g!==null&&g.shadowRoot!==void 0&&g.shadowRoot!==null&&(g=g.shadowRoot.elementFromPoint(a.clientX,a.clientY)),g!==null&&g.C instanceof Diagram&&g.C!==l&&g.C.o0(a,m),g===null&&(g=a.target),l.o0(a,m),m.clickCount=l.Zm,m.targetDiagram=l.I1(a,g),m.targetObject=null,l.doMouseUp(),l.ga(m,a),c&&(l.Qm=!1)},i.ua=a=>{if(!l.isEnabled)return;i.qf=!1;const c=l.k1;c[a.pointerId]&&delete c[a.pointerId];const u=l.ha;if(u[0]!==null&&u[0].pointerId===a.pointerId&&(u[0]=null),u[1]!==null&&u[1].pointerId===a.pointerId&&(u[1]=null),a.pointerType===\"touch\"||a.pointerType===\"pen\")return;const d=l.currentTool;d.cancelWaitAfter(),d.standardMouseOver()},i.da=a=>{const c=l.ha;c[0]!==null&&c[0].pointerId===a.pointerId?(c[0]=null,l.Qm=!1):c[1]!==null&&c[1].pointerId===a.pointerId&&(c[1]=null)};const f=r;if(i.P1=f.z[U.Os(\"7eba17a4ca3b1a8346\")][U.Os(\"78a118b7\")](f.z,Diagram.vu,s,s),r.clearContextCache(!0),i.MR(),this.Uf===\"svg\"){const a=this._l.get(\"svg\");this.Tt&&this.Tt.appendChild(a.Et),this.si=a.ci}}addEventListener(t,i,e,s){t.addEventListener(i,e,{capture:s,passive:!1})}Ut(t,i,e,s){t.addEventListener(i,e,{capture:s,passive:!1})}removeEventListener(t,i,e,s){t.removeEventListener(i,e,{capture:s})}Ai(t,i,e,s){t.removeEventListener(i,e,{capture:s})}MR(){const t=this;let i=this.wt.Et;i instanceof HTMLCanvasElement||(i=t.div),this.Ut(i,\"pointerdown\",t.eh,!1),this.Ut(i,\"pointermove\",t.fa,!1),this.Ut(i,\"pointerup\",t.ca,!1),this.Ut(i,\"pointerout\",t.ua,!1),this.Ut(i,\"pointercancel\",t.da,!1),this.Ut(i,\"pointerenter\",t.PR,!1),this.Ut(i,\"pointerleave\",t.NR,!1),this.Ut(i,\"wheel\",t.aa,!1),this.Ut(i,\"keydown\",t.CR,!1),this.Ut(i,\"keyup\",t.AR,!1),this.Ut(i,\"blur\",t.LR,!1),this.Ut(i,\"focus\",t.TR,!1),this.Ut(i,\"selectstart\",e=>(e.preventDefault(),!1),!1),this.Ut(i,\"contextmenu\",e=>(e.preventDefault(),!1),!1),this.Ut(root,\"resize\",t.N1,!1)}vw(){this._m>30&&(this.Al=1)}IS(t){this.Al!==null&&(this.Al=null,t&&this.Su(),Debug&&Debug.drawFrames||(this._m=0,this.O2=[0,0,0,0,0],this.t0=0))}computePixelRatio(){return this.Al!==null?this.Al:root.devicePixelRatio||1}get avgSpf(){return this._m}doMouseDown(){this.currentTool.doMouseDown()}doMouseMove(){this.currentTool.doMouseMove()}doMouseUp(){this.currentTool.doMouseUp()}doMouseWheel(){this.currentTool.doMouseWheel()}doKeyDown(){this.currentTool.doKeyDown()}doKeyUp(){this.currentTool.doKeyUp()}doFocus(){this.focus()}focus(){if(this.wt)if(this.scrollsPageOnFocus)this.wt.focus();else{const t=root.scrollX,i=root.scrollY;this.wt.focus(),root.scrollTo(t,i)}}TR(t){const i=Diagram.ss.get(this);i&&i.O(\"GainedFocus\")}LR(t){const i=Diagram.ss.get(this);i&&i.O(\"LostFocus\")}UM(){if(this.wt===null)return;const i=this.Tt;if(i===null||i.clientWidth===0||i.clientHeight===0)return;this.s2||this.setScrollWidth();const e=this.Jn?this._t:0,s=this.dn?this._t:0,n=this.Hi;if(this.Hi=this.computePixelRatio(),this.Hi!==n&&(this.Vu=!0,this.requestUpdate()),i.clientWidth!==this.Pt+e||i.clientHeight!==this.Nt+s){this.ma(),this.Ue=!0;const o=this.layout;o!==null&&o.isViewportSized&&this.autoScale===1&&(this.Kf=!0,o.invalidateLayout()),this.Ss||this.requestUpdate()}}BA(){let t=0,i=new Layer;i.name=\"Grid\",i.allowSelect=!1,i.pickable=!1,i.isTemporary=!0,i.isInDocumentBounds=!1,this.jr(i,t++),i=new Layer,i.name=\"ViewportBackground\",i.isViewportAligned=!0,i.isTemporary=!0,i.isInDocumentBounds=!1,this.jr(i,t++),i=new Layer,i.name=\"Background\",this.jr(i,t++),i=new Layer,i.name=\"\",this.jr(i,t++),i=new Layer,i.name=\"Foreground\",this.jr(i,t++),i=new Layer,i.name=\"ViewportForeground\",i.isViewportAligned=!0,i.isTemporary=!0,i.isInDocumentBounds=!1,this.jr(i,t++),i=new Layer,i.name=\"Adornment\",i.isTemporary=!0,i.isInDocumentBounds=!1,this.jr(i,t++),i=new Layer,i.name=\"Tool\",i.isTemporary=!0,i.isInDocumentBounds=!0,this.jr(i,t++)}UA(){const t=new Panel(Panel.Grid,{name:\"GRID\"}).add(new Shape(\"LineH\",{stroke:\"lightgray\",strokeWidth:.5,interval:1}).theme(\"stroke\",\"gridMinor\"),new Shape(\"LineV\",{stroke:\"lightgray\",strokeWidth:.5,interval:1}).theme(\"stroke\",\"gridMinor\"),new Shape(\"LineH\",{stroke:\"gray\",strokeWidth:.5,interval:5}).theme(\"stroke\",\"gridMajor\"),new Shape(\"LineV\",{stroke:\"gray\",strokeWidth:.5,interval:5}).theme(\"stroke\",\"gridMajor\"),new Shape(\"LineH\",{stroke:\"gray\",strokeWidth:1,interval:10}).theme(\"stroke\",\"gridMajor\"),new Shape(\"LineV\",{stroke:\"gray\",strokeWidth:1,interval:10}).theme(\"stroke\",\"gridMajor\")),i=new Part({layerName:\"Grid\",zOrder:0,isInDocumentBounds:!1,isAnimated:!1,pickable:!1,locationObjectName:\"GRID\"}).add(t);return this.add(i),this.partManager.parts.delete(i),t.visible=!1,t}static yR(){const t=Diagram.ss.get(this.parentElement||this);if(t){if(t.c1){t.c1=!1;return}if(!t.isEnabled){t.GA();return}t.diagramScroll(this)}}static wR(t){if(!this.C.isEnabled){this.C.updateScroll();return}this.C.u1=t.target.scrollTop,this.C.d1=t.target.scrollLeft}diagramScroll(t){if(this.wt===null)return;const i=this.S1,e=this.M1;this.Hm=!0;let s=this.documentBounds,n=this.viewportBounds;const o=this.ea;let r=s.x-o.left,l=s.y-o.top;const h=s.width+o.left+o.right,f=s.height+o.top+o.bottom;let a=s.right+o.right,c=s.bottom+o.bottom,u=n.x,d=n.y;const m=n.width,g=n.height;let p=n.right,w=n.bottom;const x=this.scale;let k,b=t.scrollLeft;if(this.ju)switch(this.Rx){case\"negative\":b=b+t.scrollWidth-t.clientWidth;break;case\"reverse\":b=t.scrollWidth-b-t.clientWidth;break}const S=b;if(m<h||g<f){k=Point.K(this.position.x,this.position.y),this.allowHorizontalScroll&&this.d1!==S&&(k.x=S/x+r,this.d1=S),this.allowVerticalScroll&&this.u1!==t.scrollTop&&(k.y=t.scrollTop/x+l,this.u1=t.scrollTop),this.position=k,Point.o(k),this.Hm=!1,this.Ku=!1;return}if(k=Point.a(),t.xR&&this.allowHorizontalScroll&&(r<u&&(this.position=k.s(S+r,this.position.y)),a>p)){const M=i.scrollWidth-this.Pt;this.position=k.s(-M+S-this.Pt/x+a,this.position.y)}if(t.bR&&this.allowVerticalScroll&&(l<d&&(this.position=k.s(this.position.x,t.scrollTop+l)),c>w)){const M=i.scrollHeight-this.Nt;this.position=k.s(this.position.x,-M+t.scrollTop-this.Nt/x+c)}Point.o(k),this.oh(),this.Hm=!1,this.Ku=!1,s=this.documentBounds,n=this.viewportBounds,a=s.right,p=n.right,c=s.bottom,w=n.bottom,r=s.x,u=n.x,l=s.y,d=n.y,m>=h&&r>=u&&a<=p&&(e.style.width=\"1px\"),g>=f&&l>=d&&c<=w&&(e.style.height=\"1px\")}computeBounds(t){return t===void 0&&(t=new Rect),this.Ti(),this.HA(t)}HA(t){if(this.fixedBounds.isReal())return t.c(this.fixedBounds),t.addMargin(this.ei),t;let i=!0;const e=this.Wt.h,s=e.length;for(let n=0;n<s;n++){const o=e[n];if(!o.visible||!o.isInDocumentBounds)continue;const r=o.Ft.h,l=r.length;for(let h=0;h<l;h++){const f=r[h];if(!f.isInDocumentBounds||!f.isVisible())continue;const a=f.actualBounds;a.isReal()&&(i?(i=!1,t.c(a)):t.unionRect(a))}}return i&&t.s(0,0,0,0),t.addMargin(this.ei),t}computePartsBounds(t,i){i===void 0&&(i=!1);let e=null;if(Array.isArray(t))for(let s=0;s<t.length;s++){const n=t[s];!i&&n instanceof Link||(n.ensureBounds(),e===null?e=n.actualBounds.copy():e.unionRect(n.actualBounds))}else{const s=t.iterator;for(;s.next();){const n=s.value;!i&&n instanceof Link||(n.ensureBounds(),e===null?e=n.actualBounds.copy():e.unionRect(n.actualBounds))}}return e===null?new Rect(NaN,NaN,0,0):e}Gs(t){if(!t&&!this.$n||this.Zt||this.wt===null||!this.documentBounds.isReal())return;if(this.Zt=!0,t){const c=this.initialPosition;if(c.isReal()){this.Zt=!1,this.position=c;return}let u=this.initialDocumentSpot,d=this.initialViewportSpot;u.isNoSpot()&&(u=Spot.TopLeft),d.isNoSpot()&&(d=Spot.TopLeft);const m=Point.a();m.setRectSpot(this.documentBounds,u);const g=this.viewportBounds,p=Rect.K(0,0,g.width,g.height),w=Point.a();w.setRectSpot(p,d),w.s(m.x-w.x,m.y-w.y),this.Zt=!1,this.position=w,Rect.o(p),Point.o(w)}let i=this.$l;t&&this.Tr!==1&&(i=this.Tr);const e=i!==1?this.Ju(i):this.scale,s=this.gt.x,n=this.gt.y,o=this.Pt/e,r=this.Nt/e;let l=this.Xf;const h=this.Ym;if(t&&!l.isSpot()&&(h.isSpot()||h.isDefault())){const c=this.initialDocumentSpot.isSpot()&&this.initialViewportSpot.isSpot();l=h.isDefault()&&!c?Spot.Center:h}this.K2(this.documentBounds,o,r,l,t);const f=this.scale;this.scale=e,this.Zt=!1;const a=this.viewportBounds;a.equalsApproxTo(s,n,o,r)||this.onViewportBoundsChanged(new Rect(s,n,o,r),a,f,!1)}Ju(t){const i=this.$m;if(this.wt===null)return i;if(t===1)return this.scale;this.ensureBounds();const e=this.documentBounds;if(!e.isReal())return i;const s=e.width,n=e.height,o=this.Pt+(this.Jn?this._t:0),r=this.Nt+(this.dn?this._t:0);let l=o/s,h=r/n;const f=this.ea,a=f.left+f.right!==0,c=f.top+f.bottom!==0;(a||c)&&(h===l?(h=(r-this._t)/n,l=(o-this._t)/s):h>l?h=(r-this._t)/n:l=(o-this._t)/s);let u=0;return t===2?u=Math.min(h,l):t===3&&(h>l?u=(r-this._t)/n:u=(o-this._t)/s),u>i&&(u=i),u<this.minScale&&(u=this.minScale),u>this.maxScale&&(u=this.maxScale),u}zoomToFit(){const t=this._h;this._h=1,this.scale=this.Ju(2),this.alignDocument(Spot.Center,Spot.Center),t!==1&&(this.Gs(!1),this.K2(this.documentBounds,this.Pt/this.ot,this.Nt/this.ot,this.Xf,!1)),this._h=t}zoomToRect(t,i){i===void 0&&(i=2);const e=t.width,s=t.height;if(e===0||s===0||isNaN(e)&&isNaN(s))return;let n=1;if(i===2||i===3)if(isNaN(e))n=this.viewportBounds.height*this.scale/s;else if(isNaN(s))n=this.viewportBounds.width*this.scale/e;else{const o=this.Pt,r=this.Nt;i===3?r/s>o/e?n=(r-(this.dn?this._t:0))/s:n=(o-(this.Jn?this._t:0))/e:n=Math.min(r/s,o/e)}this.scale=n,this.position=new Point(t.x,t.y)}get DR(){return this.Zt}set DR(t){this.Zt=t}alignDocument(t,i){this.ensureBounds();const e=this.documentBounds,s=this.viewportBounds;this.position=new Point(e.x+(t.x*e.width+t.offsetX)-(i.x*s.width-i.offsetX),e.y+(t.y*e.height+t.offsetY)-(i.y*s.height-i.offsetY))}focusObject(t){if(t instanceof GraphObject){this.i0=t;const i=Point.a();this.e0=this.transformDocToView(t.getDocumentPoint(Spot.TopLeft,i)),Point.o(i)}else this.i0=null,this.e0=Point.Hk}K2(t,i,e,s,n){const o=Point.K(this.gt.x,this.gt.y);let r=o.x,l=o.y;if(this.i0!==null){let h=Point.a();h=this.i0.getDocumentPoint(Spot.TopLeft,h),r=h.x-this.e0.x/this.scale,l=h.y-this.e0.y/this.scale,s=Spot.None,Point.o(h)}if(n||this.scrollMode===1){s.isSpot()&&(i>t.width&&(r=t.x+(s.x*t.width+s.offsetX)-(s.x*i-s.offsetX)),e>t.height&&(l=t.y+(s.y*t.height+s.offsetY)-(s.y*e-s.offsetY)));const h=this.ea,f=i-t.width;if(i<t.width+h.left+h.right){let c=r+i/2;c=Math.min(c,t.right+Math.max(f,h.right)-i/2),c=Math.max(c,t.left-Math.max(f,h.left)+i/2),r=c-i/2}else r>t.left?r=t.left:r<t.right-i&&(r=t.right-i);const a=e-t.height;if(e<t.height+h.top+h.bottom){let c=l+e/2;c=Math.min(c,t.bottom+Math.max(a,h.bottom)-e/2),c=Math.max(c,t.top-Math.max(a,h.top)+e/2),l=c-e/2}else l>t.top?l=t.top:l<t.bottom-e&&(l=t.bottom-e)}if(o.x=isFinite(r)?r:-this.ei.left,o.y=isFinite(l)?l:-this.ei.top,this.positionComputation!==null){const h=this.positionComputation(this,o);o.x=h.x,o.y=h.y}this.ws.kA(this.gt,o),this.gt.s(o.x,o.y),this.r0(),this.nh(),this.FR(),Point.o(o)}findPartAt(t,i){if(i===void 0&&(i=!0),i){const e=this.zS(t,s=>s.part,s=>s.canSelect());if(e instanceof Part)return e}else{const e=this.zS(t,s=>s.part);if(e instanceof Part)return e}return null}findObjectAt(t,i,e){i===void 0&&(i=null),e===void 0&&(e=null),this.Ti();const s=this.Wt.iteratorBackwards;for(;s.next();){const n=s.value;if(!n.visible)continue;const o=n.findObjectAt(t,i,e);if(o!==null)return o}return null}zS(t,i,e){i===void 0&&(i=null),e===void 0&&(e=null),this.Ti();const s=this.Wt.iteratorBackwards;for(;s.next();){const n=s.value;if(!n.visible||n.isTemporary)continue;const o=n.findObjectAt(t,i,e);if(o!==null)return o}return null}findPartsAt(t,i,e){return i===void 0&&(i=!0),this.RR(t,s=>s.part,i?s=>s instanceof Part&&s.canSelect():null,e)}RR(t,i,e,s){i===void 0&&(i=null),e===void 0&&(e=null),!(s instanceof List)&&!(s instanceof GSet)&&(s=new GSet),this.Ti();const n=this.Wt.iteratorBackwards;for(;n.next();){const o=n.value;!o.visible||o.isTemporary||o.findObjectsAt(t,i,e,s)}return s}findObjectsAt(t,i,e,s){i===void 0&&(i=null),e===void 0&&(e=null),!(s instanceof List)&&!(s instanceof GSet)&&(s=new GSet),this.Ti();const n=this.Wt.iteratorBackwards;for(;n.next();){const o=n.value;o.visible&&o.findObjectsAt(t,i,e,s)}return s}findPartsIn(t,i,e,s){return i===void 0&&(i=!1),e===void 0&&(e=!0),this.IR(t,null,n=>n instanceof Part&&(!e||n.canSelect()),i,s)}findObjectsIn(t,i,e,s,n){i===void 0&&(i=null),e===void 0&&(e=null),s===void 0&&(s=!1),!(n instanceof List)&&!(n instanceof GSet)&&(n=new GSet),this.Ti();const o=this.Wt.iteratorBackwards;for(;o.next();){const r=o.value;r.visible&&r.findObjectsIn(t,i,e,s,n)}return n}KS(t,i,e,s,n,o){const r=new GSet;this.Ti();const l=this.Wt.iteratorBackwards;for(;l.next();){const h=l.value;h.visible&&h.KS(t,i,e,s,r,n,o)}return r}IR(t,i,e,s,n){i===void 0&&(i=null),e===void 0&&(e=null),s===void 0&&(s=!1),!(n instanceof List)&&!(n instanceof GSet)&&(n=new GSet),this.Ti();const o=this.Wt.iteratorBackwards;for(;o.next();){const r=o.value;!r.visible||r.isTemporary||r.findObjectsIn(t,i,e,s,n)}return n}findPartsNear(t,i,e,s,n){return e===void 0&&(e=!0),s===void 0&&(s=!0),this.OR(t,i,null,o=>o instanceof Part&&(!s||o.canSelect()),e,n)}findObjectsNear(t,i,e,s,n,o){e===void 0&&(e=null),s===void 0&&(s=null),n===void 0&&(n=!0),n!==!1&&n!==!0&&((n instanceof List||n instanceof GSet)&&(o=n),n=!0),!(o instanceof List)&&!(o instanceof GSet)&&(o=new GSet),this.Ti();const r=this.Wt.iteratorBackwards;for(;r.next();){const l=r.value;l.visible&&l.findObjectsNear(t,i,e,s,n,o)}return o}OR(t,i,e,s,n,o){e===void 0&&(e=null),s===void 0&&(s=null),n===void 0&&(n=!0),n!==!1&&n!==!0&&((n instanceof List||n instanceof GSet)&&(o=n),n=!0),!(o instanceof List)&&!(o instanceof GSet)&&(o=new GSet),this.Ti();const r=this.Wt.iteratorBackwards;for(;r.next();){const l=r.value;!l.visible||l.isTemporary||l.findObjectsNear(t,i,e,s,n,o)}return o}acceptEvent(t){return this.vf(t,t instanceof MouseEvent)}vf(t,i){const e=this.Hr;this.Hr=this.oa,this.oa=e,e.diagram=this,e.event=t,i?this.o0(t,e):(e.viewPoint=this.Hr.viewPoint,e.documentPoint=this.Hr.documentPoint);let s=0;const n=t;return n.ctrlKey&&(s+=1),n.altKey&&(s+=2),n.shiftKey&&(s+=4),n.metaKey&&(s+=8),e.modifiers=s,e.button=n.button,n.buttons!==void 0&&(e.buttons=n.buttons),U.rr&&n.button===0&&n.ctrlKey&&(e.button=2),e.down=!1,e.up=!1,e.clickCount=1,e.delta=0,e.handled=!1,e.bubbles=!1,e.timestamp=t.timeStamp,e.isMultiTouch=!1,e.targetDiagram=this.I1(t,t.target),e.targetObject=null,e}I1(t,i){if(i===null)return null;const e=Diagram.ss.get(i);if(e)return e;let s=t.path;if(!s&&U.rt(t.composedPath)&&(s=t.composedPath()),s&&s[0]){const n=Diagram.ss.get(s[0]);if(n)return n}return null}kR(t,i,e){const s=this.Y2(t,!0,!1,!1,!0,e);return this.o0(i,s),s.targetDiagram=this.I1(t,t.target),s.targetObject=null,e||s.clone(this.Jm),s}SR(t,i,e){const s=this.Y2(t,!1,!1,!1,!1,e);let n=root.document.elementFromPoint(i.clientX,i.clientY)||null;n!==null&&n.shadowRoot!==void 0&&n.shadowRoot!==null&&(n=n.shadowRoot.elementFromPoint(i.clientX,i.clientY));let o=this,r=t;if(n){const l=this.I1(t,n);l&&(r=i,o=l)}return s.targetDiagram=o,this.o0(r,s),s.targetObject=null,s}Y2(t,i,e,s,n,o){const r=this.Hr;this.Hr=this.oa,this.oa=r,r.diagram=this,r.clickCount=1,r.delta=0;let l=0;return t.ctrlKey&&(l+=1),t.altKey&&(l+=2),t.shiftKey&&(l+=4),t.metaKey&&(l+=8),r.modifiers=l,r.event=t,r.timestamp=t.timeStamp,r.button=e?this.firstInput.button:t.button,r.buttons=t.buttons,U.rr&&t.button===0&&t.ctrlKey&&(r.button=2),r.down=i,r.up=e,r.handled=s,r.bubbles=n,r.isMultiTouch=o,r}ga(t,i){return t.bubbles?(Debug&&Debug.handleMessages&&U.nt(\"NOT handled \"+i.type+\" \"+t.toString()),!0):(Debug&&Debug.handleMessages&&U.nt(\"handled \"+i.type+\" \"+this.currentTool.name+\" \"+t.toString()),i.stopPropagation!==void 0&&i.stopPropagation(),i.cancelable!==!1&&i.preventDefault(),i.cancelBubble=!0,!1)}CR(t){const i=Diagram.ss.get(this);if(!i||!i.isEnabled)return!1;const e=i.vf(t,!1);return e.key=t.key,e.code=t.code,e.down=!0,i.doKeyDown(),i.ga(e,t)}AR(t){const i=Diagram.ss.get(this);if(!i||!i.isEnabled)return!1;const e=i.vf(t,!1);return e.key=t.key,e.code=t.code,e.up=!0,i.doKeyUp(),i.ga(e,t)}PR(t){const i=Diagram.ss.get(this);if(!i||!i.isEnabled)return!1;const e=i.vf(t,!0);return i.mouseEnter!==null&&i.mouseEnter(e),i.currentTool.standardMouseOver(),i.ga(e,t)}NR(t){const i=Diagram.ss.get(this);if(!i||!i.isEnabled)return!1;const e=i.vf(t,!0);return i.mouseLeave!==null&&i.mouseLeave(e),i.ga(e,t)}getMouse(t){const i=this.wt;if(i===null)return new Point(0,0);const e=i.getBoundingClientRect(),s=(t.clientX-e.left)*(this.Pt/e.width),n=(t.clientY-e.top)*(this.Nt/e.height);return new Point(s,n).Xe(this.F)}o0(t,i){const e=this.wt;let s=0,n=0;if(e!==null){const r=e.getBoundingClientRect();s=(t.clientX-r.left)*(this.Pt/r.width),n=(t.clientY-r.top)*(this.Nt/r.height)}i.viewPoint.s(s,n);const o=Point.K(s,n);this.F.is(o),i.documentPoint.c(o),Point.o(o)}GC(t,i,e){let s;if(this.ha[0]!==null)s=this.ha[i];else return;const n=this.wt;if(n!==null){const o=n.getBoundingClientRect();e.s((s.clientX-o.left)*(this.Pt/o.width),(s.clientY-o.top)*(this.Nt/o.height))}}invalidateDocumentBounds(){this.ra||(this.ra=!0,this.requestUpdate(!1))}ER(){this.Ss||this.Ti(),this.ensureBounds()}redraw(){this.Zt||this.Ss||(this.L(),this.maybeUpdate())}isUpdateRequested(){return this.Nr}delayInitialization(t){t===void 0&&(t=null);const i=this.animationManager,e=i.isEnabled;i.stopAnimation(),i.isEnabled=!1,this.xr(),this.$n=!1,this.yx=new Point(NaN,NaN),i.isEnabled=e,this.Ss=!0;const s=this;t!==null&&U.lr(()=>{s.Ss=!1,i.Bl(\"Model\"),t(s)},1)}requestUpdate(t){if(t===void 0&&(t=!1),this.Nr===!0||this.Zt||t===!1&&this.Ss)return;this.Nr=!0;const i=this;root.requestAnimationFrame(()=>{i.Nr&&i.maybeUpdate()})}maybeUpdate(){this.zu&&!this.Nr||(this.zu&&(this.zu=!1),this.xr())}U2(t,i){!this.Ku||this.Zt||this.animationManager.defaultAnimation.isAnimating||this.GA()||(t&&this.Ti(),i&&this.Gs(!1))}xr(t){if(this.Ss||(this.Nr=!1,this.Tt===null&&!this.Uu.isReal()))return;this.Ss=!0;const i=this.animationManager,e=this.Wu;if(!i.isAnimating&&e.length!==0){const a=e.h,c=a.length;for(let u=0;u<c;u++){const d=a[u];d.pe(!1),d.u()}e.clear()}const s=this.T2;s.count>0&&(s.each(a=>a.G2()),s.clear());let n=!1,o=!1;i.defaultAnimation.isAnimating&&(o=!0,n=this.skipsUndoManager,this.skipsUndoManager=!0),i.bi||this.UM(),t||this.U2(!1,!0);const r=!this.undoManager.isUndoingRedoing&&(this.Nl||this.jf.count!==0&&this.Dr.size!==0),l=!this.$n||this.qr;this.Ti(!0);let h=!1;(l||r)&&(this.$n?this.H2(!this.Kf,r):(this.startTransaction(\"Initial Layout\"),i.isEnabled===!1&&i.stopAnimation(),this.H2(!1,r)),h=l),this.Kf=!1,this.Nl=!1,this.Ti(),this.es!==null&&(this.es.visible&&!this.Gu&&(this.lh(),this.Gu=!0),!this.es.visible&&this.Gu&&(this.Gu=!1)),this.Zx||this.ER(),t||this.U2(!0,!1);let f=!1;if(h){const a=Rect.a();a.c(this.viewportBounds),this.$n||(this.$n=!0,f=!0,this.skipsUndoManager||(this.undoManager.qw=!0),this.undoManager.Ww=!0,this.BR()),this.VR(),this.Ti(!1),t||this.U2(!0,!0),Rect.o(a)}else if(i.Ff&&i.mx){if(this.Tr!==1)this.scale=this.Ju(this.Tr);else if(this.$l!==1)this.scale=this.Ju(this.$l);else{const a=this.initialScale;isFinite(a)&&a>0&&(this.scale=a)}this.Gs(!0)}h&&f&&this.commitTransaction(\"Initial Layout\"),t||this.Ui(this.si),o&&(this.skipsUndoManager=n),this.Ss=!1}get qh(){return this.$n}BR(){if(this.Tr!==1)this.scale=this.Ju(this.Tr);else if(this.$l!==1)this.scale=this.Ju(this.$l);else{const i=this.initialScale;isFinite(i)&&i>0&&(this.scale=i)}this.Gs(!0);const t=this.Wt.h;this.ks(t,t.length,this,this.viewportBounds),this.O(\"InitialLayoutCompleted\"),this.yx.c(this.gt),this.lh()}VR(){this.O(\"LayoutCompleted\")}l0(t){this.jn.add(t)}addInvalidRoute(t){this.Ro?this.sa.add(t):this.Dr.add(t)}Ti(t){if(this.jn.size!==0&&!(!this.Ss&&this.animationManager.isTicking)){if(this.Ss||(this.Nl=!0),t){this.qA(this.jn);return}for(let i=0;i<23&&this.jn.size!==0;i++){const e=new Set(this.jn);this.jn.clear(),this.G2(e,this.jn),Debug&&i===22&&U.nt(\"failure to validate parts\")}this.nodes.each(i=>{i instanceof Group&&i.WA(!1)})}}qA(t,i){for(const e of t)!e.Ce()||e instanceof Group||(e.vr()?(e.dt(1/0,1/0),e.Gt()):i&&i.add(e));for(const e of t)if(e instanceof Group){if(!e.isVisible())continue;this.O1(e)}}G2(t,i){this.qA(t,i);for(const e of t){if(!(e instanceof Link))continue;const s=e;s.isVisible()&&(s.vr()?(s.dt(1/0,1/0),s.Gt()):i.add(s))}for(const e of t)e instanceof Adornment&&e.isVisible()&&(e.vr()?(e.dt(1/0,1/0),e.Gt()):i.add(e))}h0(t){const i=t instanceof Diagram,e=i?t.links:t.memberParts,s=this.jn;if(i)this.Ti(!0);else{for(;e.next();){const n=e.value;s.has(n)&&(!n.Ce()||n instanceof Group||n.vr()&&(n.dt(1/0,1/0),n.Gt()))}for(e.reset();e.next();){const n=e.value;if(s.has(n)&&n instanceof Group){if(!n.isVisible())continue;this.O1(n)}}e.reset()}for(;e.next();){const n=e.value;n instanceof Link&&s.has(n)&&n.isVisible()&&n.vr()&&(n.dt(1/0,1/0),n.Gt())}}O1(t){const i=U.lt(),e=U.lt(),s=t.memberParts;for(;s.next();){const o=s.value;o.isVisible()&&(o instanceof Group?(o.Eo()||o.ns()||o.hh())&&this.O1(o):o instanceof Link?o.fromNode===t||o.toNode===t?e.push(o):i.push(o):(o.dt(1/0,1/0),o.Gt()))}let n=i.length;for(let o=0;o<n;o++){const r=i[o];r.dt(1/0,1/0),r.Gt()}U.tt(i),t.dt(1/0,1/0),t.Gt(),n=e.length;for(let o=0;o<n;o++){const r=e[o];r.dt(1/0,1/0),r.Gt()}U.tt(e)}ks(t,i,e,s){if(!(!this.Gf&&!this.animationManager.isAnimating)){for(let n=0;n<i;n++)t[n].ks(e,s);this.Ti()}}Ui(t){if(this.Tt===null)return;this.wt===null&&U.n(\"No canvas specified\"),this.Uf===\"svg\"?this.zR(t):this.XR(t)}XR(t){const i=this.animationManager;if(i.bi||i.isAnimating&&!i.isTicking)return;const e=new Date;if(this.a0(),this.Tt&&this.Tt.style.opacity===\"0\")return;const s=t!==this.si,n=this.Wt.h,o=n.length,r=this;if(this.ks(n,o,r,r.viewportBounds),s)t.clearContextCache(!0),this.oh();else if(!this.Ue&&!i.isAnimating)return;const l=this.F,h=this.Hi;t.setTransform(h,0,0,h,0,0),t.clearRect(0,0,this.Pt,this.Nt),this.ii!==1&&(t.globalAlpha=this.ii),this.q2(t);for(let m=0;m<o;m++)t.setTransform(h,0,0,h,0,0),t.transform(l.m11,l.m12,l.m21,l.m22,l.dx,l.dy),t.commitTransform(),n[m].Ui(t,r);let f=!1;this.Wf?this.Wf.vu(this)&&(f=this.P1()):f=!0,f&&(Transform.prototype.is=Transform.prototype.Tw),s?(this.si.clearContextCache(!0),this.oh()):(this.Gf=!1,this.Ue=!1);const c=+new Date-+e,u=Debug&&Debug.drawFrames,d=this.O2;if(u||this.Al===null){d[this.t0]=c,this.t0=(this.t0+1)%d.length;let m=0;for(let g=0;g<d.length;g++)m+=d[g];this._m=m/d.length}if(this.ii!==1&&(t.globalAlpha=1),u){t.setTransform(1,0,0,1,0,0);for(let m=0;m<d.length;m++)t.fillText(d[m].toString(),20,150+ +(m*20))}}zR(t){if(this.Tt===null)return;const i=this.animationManager;if(i.bi||i.isAnimating&&!i.isTicking)return;this.a0();const e=this.Pt,s=this.Nt;t.surface.resize(e,s,e,s);const o=this.Wt.h,r=o.length,l=this;if(this.ks(o,r,l,l.viewportBounds),!this.Ue&&!i.isAnimating)return;const h=this.F;t.lastDrawnPart=null,t.setDiagramPosScale(h.m11,h.m12,h.m21,h.m22,h.dx,h.dy),this.ii!==1&&(t.globalAlpha=this.ii),this.q2(t);const f=this.Hi;this.wt.ci.setTransform(f,0,0,f,0,0),this.wt.ci.clearRect(0,0,this.Pt,this.Nt);for(let c=0;c<r;c++)o[c].Ui(t,l);let a=!1;this.Wf?this.Wf.vu(this)&&(a=this.P1()):a=!0,a&&(Transform.prototype.is=Transform.prototype.Tw),this.Gf=!1,this.Ue=!1}E1(t,i,e,s,n,o,r,l,h){if(this.Tt===null)return;this.wt===null&&U.n(\"No canvas specified\"),o===void 0&&(o=null),r===void 0&&(r=null),l===void 0&&(l=!1),h===void 0&&(h=!1),this.a0(),this.si.clearContextCache(!0),this.oh(),this.la=!0;const f=this.ot;this.ot=s;const a=this,c=this.Wt.h,u=c.length;try{const d=new Rect(n.x,n.y,e.width/s,e.height/s),m=d.copy();m.addMargin(i),this.lh(m),this.Ti(),this.ks(c,u,a,d),t.setTransform(1,0,0,1,0,0),t.clearRect(0,0,e.width,e.height),r!==null&&r!==\"\"&&(t.fillStyle=r,t.fillBackground(0,0,e.width,e.height));const g=this.Hi;t.scale(g,g);const p=Transform.a();p.Vi(),p.Bs(i.left,i.top),p.ot(s),(n.x!==0||n.y!==0)&&p.Bs(-n.x,-n.y),t.setTransform(p.m11,p.m12,p.m21,p.m22,p.dx,p.dy),t.commitTransform(),t instanceof SVGContext&&t.setDiagramPosScale(p.m11,p.m12,p.m21,p.m22,p.dx,p.dy),Transform.o(p),this.q2(t),t.globalAlpha=this.ii;const w=this.findLayer(\"Grid\");if(o){const x=new GSet,k=o.iterator;for(k.reset();k.next();){const b=k.value;b instanceof Part&&(!h&&b.layer===w||(b.Eu(),x.add(b)))}for(let b=0;b<u;b++)c[b].$F(t,a,x,l);x.each(b=>b.Eu())}else for(let x=0;x<u;x++){const k=c[x];k===w?h&&k.Ui(t,a,!0):k.Ui(t,a,l)}this.la=!1,this.Wf&&this.Wf.vu(this)&&this.P1()}finally{this.ot=f,this.si.clearContextCache(!0),this.oh(),this.ks(c,u,a,a.viewportBounds),this.lh(),this.si instanceof SVGContext&&(this.si.diagramGroup.replaceChildren(),this.redraw())}}getRenderingHint(t){return this.Lr[t]}setRenderingHint(t,i){t===\"minDrawingLength\"&&(this.Vm=i),this.Lr[t]=i,this.redraw()}resetRenderingHints(){this.Lr=new PropertyCollection,this.Lr.drawShadows=!0,this.Lr.textGreeking=!0,this.Lr.viewportOptimizations=!U.rr,this.Lr.temporaryPixelRatio=!0,this.Lr.pictureRatioOptimization=!0,this.Lr.minDrawingLength=1,this.Vm=1}q2(t){const i=this.Lr;if(i===null)return;if(i.imageSmoothingEnabled!==void 0){const s=!!i.imageSmoothingEnabled;t.setImageSmoothingEnabled(s)}const e=i.defaultFont;e!=null&&(t.font=e)}getInputOption(t){return this.Bu[t]}setInputOption(t,i){this.Bu[t]=i}uR(){this.Bu=new PropertyCollection,this.Bu.extraTouchArea=10,this.Bu.extraTouchThreshold=10,this.Bu.hasGestureZoom=!0}set(t){if(Debug)for(const i in t)(i.startsWith(\"_\")||i.indexOf(\".\")!==-1)&&U.n(\"Property with underscore or period passed to Diagram.set. Did you mean to use Diagram.assign?\");return Object.assign(this,t),this}attach(t){return this.setProperties(t)}setProperties(t){return Diagram.f0(this,t),this}static f0(t,i){const e=t instanceof Panel,s=t instanceof Diagram;for(const n in i){n===\"\"&&U.n(\"Setting properties requires non-empty property names\");let o=t,r=n;if(e||s){const h=n.indexOf(\".\");if(h>0){const f=n.substring(0,h);e?o=t.findObject(f):(o=t[f],o==null&&(o=t.toolManager[f])),U.W(o)?r=n.substring(h+1):U.n(\"Unable to find object named: \"+f+\" in \"+t.toString()+\" when trying to set property: \"+n)}}if(r[0]!==\"_\"&&!U.bw(o,r))if(s&&r===\"ModelChanged\"){t.addModelChangedListener(i[r]);continue}else if(s&&r===\"Changed\"){t.addChangedListener(i[r]);continue}else if(s&&U.bw(t.toolManager,r))o=t.toolManager;else if(s&&t.jA(r)){t.addDiagramListener(r,i[r]);continue}else if(t instanceof Model&&r===\"Changed\"){t.addChangedListener(i[r]);continue}else U.n('Trying to set undefined property \"'+r+'\" on object: '+o.toString());const l=i[n];o[r]=l,r[0]===\"_\"&&o instanceof GraphObject&&o.addCopyProperty(r)}}PA(){if(this.ih.count!==0&&!(this.undoManager.transactionLevel>1)){for(;this.ih.count>0;){const t=this.ih;this.ih=new GMap;const i=t.iterator;for(;i.next();){const e=i.key;e.invalidateOtherJumpOvers(i.value),e.re()}}this.L()}}L(t){if(t===void 0)this.Ue=!0,this.requestUpdate();else{const i=this.viewportBounds;t.isReal()&&i.intersectsRect(t)&&(this.Ue=!0,this.requestUpdate())}this.O(\"InvalidateDraw\")}invalidateViewport(t,i){if(this.Ue===!0)return;if(this.Ue=!0,this.Uf===\"svg\"){this.maybeUpdate();return}this.getRenderingHint(\"temporaryPixelRatio\")===!0?(this.vw(),this.maybeUpdate(),this.IS(!0)):this.maybeUpdate()}ma(){this.Ku=!0}oh(){this.Gf=!0}a0(){this.Vu!==!1&&(this.Vu=!1,this.KA(this.Pt,this.Nt))}KA(t,i){this.nh();const e=this.Hi,s=t*e,n=i*e;this.wt.resize(s,n,t,i)&&(this.Ue=!0,this.si.clearContextCache(!0))}GA(){const t=this.wt;if(t===null||this.Uu.isReal())return!0;const i=this.Pt,e=this.Nt,s=this.Tt;let n=!1,o=this.Jn?this._t:0,r=this.dn?this._t:0,l=s.clientWidth||i+o,h=s.clientHeight||e+r;const f=this.viewportBounds,a=f.x,c=f.y,u=f.width,d=f.height;if((l!==i+o||h!==e+r)&&(this.Jn=!1,this.dn=!1,o=0,r=0,this.Pt=l,this.Nt=h,this.Vu=!0,n=!0,this.nh()),!this.$n||!this.viewportBounds.isReal())return!0;const m=this.S1,g=this.M1;if(this.Ku=!1,!n&&!this.Jn&&!this.dn&&!this.Xu&&!this.Yu)return!0;const p=this.documentBounds;let w=0,x=0,k=0,b=0;const S=f.width,M=f.height,A=this.ea;this.contentAlignment.isSpot()?(p.width>S&&(w=A.left,x=A.right),p.height>M&&(k=A.top,b=A.bottom)):(w=A.left,x=A.right,k=A.top,b=A.bottom);const C=p.width+w+x,P=p.height+k+b,N=this.scale,T=N;let L=C>l/N,D=P>h/N;if(!n&&!this.Jn&&!this.dn&&!L&&!D)return!0;const F=p.x-w,I=f.x,R=p.right+x;let O=f.right+o;const Y=p.y-k,K=f.y,B=p.bottom+b;let z=f.bottom+r,V=\"1px\",H=\"1px\";if(this.scrollMode===1&&(L||D)){if(L&&this.hasHorizontalScrollbar&&this.allowHorizontalScroll){let X=1;F+1<I&&(X=Math.max((I-F)*N+this.Pt,X)),R>O+1&&(X=Math.max((R-O)*N+this.Pt,X)),S+o+1<C&&(X=Math.max((C-S)*N+this.Pt,X)),V=X.toString()+\"px\"}if(D&&this.hasVerticalScrollbar&&this.allowVerticalScroll){let X=1;Y+1<K&&(X=Math.max((K-Y)*N+this.Nt,X)),B>z+1&&(X=Math.max((B-z)*N+this.Nt,X)),M+r+1<P&&(X=Math.max((P-M)*N+this.Nt,X)),H=X.toString()+\"px\"}}let W=V!==\"1px\",j=H!==\"1px\";if(!(W&&j)&&(W||j)){if(L=!(C<S+o),D=!(P<M+r),j&&(O-=this._t),W&&(z-=this._t),L&&this.hasHorizontalScrollbar&&this.allowHorizontalScroll){let J=1;F+1<I&&(J=Math.max((I-F)*N+this.Pt,J)),R>O+1&&(J=Math.max((R-O)*N+this.Pt,J)),S+1<C&&(J=Math.max((C-S)*N+this.Pt,J)),V=J.toString()+\"px\"}W=V!==\"1px\";let X=this.Nt;if(W!==this.dn&&(X=W?this.Nt-this._t:this.Nt+this._t),D&&this.hasVerticalScrollbar&&this.allowVerticalScroll){let J=1;Y+1<K&&(J=Math.max((K-Y)*N+X,J)),B>z+1&&(J=Math.max((B-z)*N+X,J)),M+1<P&&(J=Math.max((P-M)*N+X,J)),H=J.toString()+\"px\"}j=H!==\"1px\"}if(this.Hm&&!(W!==this.dn||j!==this.Jn))return(i!==this.Pt||e!==this.Nt)&&this.maybeUpdate(),!1;if(W!==this.dn&&(V===\"1px\"?this.Nt=this.Nt+this._t:this.Nt=Math.max(this.Nt-this._t,1),n=!0),this.dn=W,g.style.width=V,j!==this.Jn&&(H===\"1px\"?this.Pt=this.Pt+this._t:this.Pt=Math.max(this.Pt-this._t,1),n=!0,this.ju)){const X=Point.a();j?(t.style.left=this._t+\"px\",this.position=X.s(this.gt.x+this._t/this.scale,this.gt.y)):(t.style.left=\"0px\",this.position=X.s(this.gt.x-this._t/this.scale,this.gt.y)),Point.o(X)}n&&this.nh(),this.Jn=j,g.style.height=H,this.c1=!0,n&&(this.Vu=!0);let $=m.scrollLeft;if(this.hasHorizontalScrollbar&&this.allowHorizontalScroll&&(S+1<C?$=(this.position.x-F)*N:F+1<I?$=m.scrollWidth-m.clientWidth:R>O+1&&($=this.position.x*N)),this.ju)switch(this.Rx){case\"negative\":$=-(m.scrollWidth-$-m.clientWidth);break;case\"reverse\":$=m.scrollWidth-$-m.clientWidth;break}if(m.scrollLeft=$,this.hasVerticalScrollbar&&this.allowVerticalScroll&&(M+1<P?m.scrollTop=(this.position.y-Y)*N:Y+1<K?m.scrollTop=m.scrollHeight-m.clientHeight:B>z+1&&(m.scrollTop=this.position.y*N)),l=this.Pt,h=this.Nt,m.style.width=l+(this.Jn?this._t:0)+\"px\",m.style.height=h+(this.dn?this._t:0)+\"px\",i!==l||e!==h||this.animationManager.bi){const X=Rect.K(a,c,u,d);return this.onViewportBoundsChanged(X,this.viewportBounds,T,n),Rect.o(X),!1}return!0}add(t){U.e(t,Part,Diagram,\"add:part\");const i=t.diagram;if(i===this)return;i!==null&&U.n(\"Cannot add part \"+t.toString()+\" to \"+this.toString()+\". It is already a part of \"+i.toString());let e=this.findLayer(t.layerName);if(e===null&&(e=this.findLayer(\"\")),e===null&&U.n('Cannot add a Part when unable find a Layer named \"'+t.layerName+'\" and there is no default Layer'),t.layer===e)return;const s=e.ia(99999999,t,t.diagram===this);s>=0&&this.raiseChangedEvent(3,\"parts\",e,null,t,null,s),e.isTemporary||this.invalidateDocumentBounds(),t.invalidateLayout(1);const n=t.layerChanged;n!==null&&n(t,null,e)}ia(t){this.partManager.ia(t);const i=this;t.Jr(s=>i.vA(s)),t.data||t.Bo(),t.hasPlaceholder()&&t.u(),t.data!==null&&t.Jr(s=>i.partManager.W2(s,null)),(t.ns()===!0||t.hh()===!0)&&this.l0(t),t.JA(!0,this),t.$A()?(t.actualBounds.isReal()&&this.L(t.ta(t.actualBounds)),this.invalidateDocumentBounds()):t.isVisible()&&t.actualBounds.isReal()&&this.L(t.ta(t.actualBounds)),this.requestUpdate()}ne(t){t.clearAdornments(),this.partManager.ne(t);const i=this;t.data!==null&&t.Jr(s=>i.partManager.j2(s,i)),this.jn.delete(t),t instanceof Link&&this.Dr.delete(t),t.$A()?(t.actualBounds.isReal()&&this.L(t.ta(t.actualBounds)),this.invalidateDocumentBounds()):t.isVisible()&&t.actualBounds.isReal()&&this.L(t.ta(t.actualBounds)),this.requestUpdate()}remove(t){U.e(t,Part,Diagram,\"remove:part\"),this.v2(t,!0)}v2(t,i){const e=t.layer;if(e===null||e.diagram!==this)return;t.isSelected=!1,t.isHighlighted=!1,t.invalidateLayout(2),i&&t.Jf();const s=e.ne(-1,t,!1);s>=0&&this.raiseChangedEvent(4,\"parts\",e,t,null,s,null);const n=t.layerChanged;n!==null&&n(t,e,null)}removeParts(t,i){if(i===void 0&&(i=!1),Array.isArray(t)){const e=t.length;for(let s=0;s<e;s++){const n=t[s];i&&!n.canDelete()||this.remove(n)}}else{const e=new GSet;e.addAll(t);const s=e.iterator;for(;s.next();){const n=s.value;i&&!n.canDelete()||this.remove(n)}}}copyParts(t,i,e){e===void 0&&(e=!1);let s=null;const n=i||this,o=n.model;let r=!1,l=!1;try{o.Sm()&&(r=o.copiesParentKeyOfNodeData,o.copiesParentKeyOfNodeData=n.commandHandler.copiesParentKey),(o.km()||o.B1())&&(l=o.copiesGroupKeyOfNodeData,o.copiesGroupKeyOfNodeData=n.commandHandler.copiesGroupKey),s=this.partManager.copyParts(t,i,e)}finally{o.Sm()&&(o.copiesParentKeyOfNodeData=r),(o.km()||o.B1())&&(o.copiesGroupKeyOfNodeData=l)}return s}moveParts(t,i,e,s){if(e===void 0&&(e=!1),s===void 0&&(s=this.c0()),U.e(i,Point,Diagram,\"moveParts:offset\"),this.toolManager===null)return;const o=new GMap;if(t!==null)if(Array.isArray(t))for(let r=0;r<t.length;r++)this.$r(o,t[r],e,s);else{const r=t.iterator;for(;r.next();)this.$r(o,r.value,e,s)}else{let r=this.parts;for(;r.next();){const l=r.value;this.$r(o,l,e,s)}for(r=this.nodes;r.next();){const l=r.value;this.$r(o,l,e,s)}for(r=this.links;r.next();){const l=r.value;this.$r(o,l,e,s)}}this.BS(o,i,s,e)}$r(t,i,e,s,n){if(!t.has(i)&&(n===void 0&&(n=!1),!(e&&!n&&!i.canMove()&&!i.canCopy())))if(s===void 0&&(s=this.c0()),i instanceof Node){if(t.set(i,this.Ks(s,i,i.location)),i instanceof Group&&(i.hasPlaceholder()||s.dragsMembers)){const r=i.memberParts;for(;r.next();){const l=r.value;this.$r(t,l,e,s,s.groupsAlwaysMove)}}const o=i.linksConnected;for(;o.next();){const r=o.value;if(t.has(r))continue;const l=r.fromNode,h=r.toNode;l!==null&&t.has(l)&&h!==null&&t.has(h)&&this.$r(t,r,e,s)}if(s.dragsTree){const r=i.findTreeChildrenNodes();for(;r.next();){const l=r.value;this.$r(t,l,e,s)}}}else if(i instanceof Link){t.set(i,this.Ks(s,i));const o=i.labelNodes;for(;o.next();){const r=o.value;this.$r(t,r,e,s)}}else i instanceof Adornment||t.set(i,this.Ks(s,i,i.location))}BS(t,i,e,s){if(t===null||(U.e(t,GMap,Diagram,\"moveParts:parts\"),t.count===0))return;const n=Point.a(),o=Point.a();o.c(i),isNaN(o.x)&&(o.x=0),isNaN(o.y)&&(o.y=0);const r=this.A1;r||this._C(t);const l=U.lt(),h=U.lt(),f=t.iterator;let a=Point.a();for(;f.next();){const g=f.key,p=f.value;if(g.Ce()){const w=this.ZA(g,t);if(w!==null)l.push(new DraggingNodeInfoPair(g,p,w));else if(!s||g.canMove()){const x=p.point;n.c(x),this.computeMove(g,n.add(o),e,a),g.location=a,p.shifted===void 0&&(p.shifted=new Point),p.shifted.c(a.subtract(x))}}else f.key instanceof Link&&h.push(new KeyValuePair(f.key,f.value))}Point.o(a);const c=l.length;for(let g=0;g<c;g++){const p=l[g],w=p.QA.point;n.c(w),p.V1.shifted===void 0&&(p.V1.shifted=new Point),p.Te.location=n.add(p.V1.shifted)}const u=Point.a(),d=Point.a(),m=h.length;for(let g=0;g<m;g++){const p=h[g],w=p.key;if(w instanceof Link){if(w.suspendsRouting){w.Cr=null;const x=w.fromNode,k=w.toNode;if(this.draggedLink!==null&&e.dragsLink){const b=p.value.point;if(w.dragComputation===null){t.set(w,this.Ks(e,w,o));const S=o.x-b.x,M=o.y-b.y;w.wr(S,M)}else{const S=Point.K(0,0),M=w.getPoint(0);M&&M.isReal()&&S.c(M),a=Point.a().c(S).add(o);let A=a;e.isGridSnapEnabled&&(e.isGridSnapRealtime||this.lastInput.up)&&(A=Point.a(),this.PM(w,a,A,e)),a.c(w.dragComputation(w,a,A)).subtract(S),t.set(w,this.Ks(e,w,a));const C=a.x-b.x,P=a.y-b.y;w.wr(C,P),Point.o(S),Point.o(a),A!==a&&Point.o(A)}}else{if(x!==null){u.c(x.location);const b=t.get(x);b!==null&&u.subtract(b.point)}if(k!==null){d.c(k.location);const b=t.get(k);b!==null&&d.subtract(b.point)}if(x!==null&&k!==null)if(u.equalsApprox(d)){const b=p.value.point,S=n;S.c(u),S.subtract(b),t.set(w,this.Ks(e,w,u)),w.wr(S.x,S.y)}else w.suspendsRouting=!1,w.invalidateRoute();else{const b=p.value.point;let S;x!==null?S=u:k!==null?S=d:S=o,t.set(w,this.Ks(e,w,S));const M=S.x-b.x,A=S.y-b.y;w.wr(M,A)}}}else if(w.fromNode===null||w.toNode===null){const x=p.value.point;t.set(w,this.Ks(e,w,o));const k=o.x-x.x,b=o.y-x.y;w.wr(k,b)}}}Point.o(n),Point.o(o),Point.o(u),Point.o(d),U.tt(l),U.tt(h),r||(this.Ti(),this.RS(t))}computeMove(t,i,e,s){if(s===void 0&&(s=new Point),s.c(i),t===null)return s;let n=i;const o=e.isGridSnapEnabled;o&&(e.isGridSnapRealtime||this.lastInput.up)&&(n=Point.a(),this.PM(t,i,n,e));const r=t.dragComputation!==null?t.dragComputation(t,i,n):n,l=t.minLocation;let h=l.x;isNaN(h)&&(h=o?Math.round(t.location.x*1e3)/1e3:t.location.x);let f=l.y;isNaN(f)&&(f=o?Math.round(t.location.y*1e3)/1e3:t.location.y);const a=t.maxLocation;let c=a.x;isNaN(c)&&(c=o?Math.round(t.location.x*1e3)/1e3:t.location.x);let u=a.y;return isNaN(u)&&(u=o?Math.round(t.location.y*1e3)/1e3:t.location.y),s.s(Math.max(h,Math.min(r.x,c)),Math.max(f,Math.min(r.y,u))),n!==i&&Point.o(n),s}c0(){const t=this.toolManager.findTool(\"Dragging\");return t instanceof DraggingTool?t.dragOptions:this.T1}PM(t,i,e,s){if(s===void 0&&(s=this.c0()),e.c(i),t===null)return e;const n=this.grid,o=s.gridSnapCellSize;let r=o.width,l=o.height;const h=s.gridSnapOrigin;let f=h.x,a=h.y;const c=s.gridSnapCellSpot;if(n!==null){const d=n.gridCellSize;isNaN(r)&&(r=d.width),isNaN(l)&&(l=d.height);const m=n.gridOrigin;isNaN(f)&&(f=m.x),isNaN(a)&&(a=m.y)}const u=Point.K(0,0);return u.setSpot(0,0,r,l,c),Geo.Vg(i.x,i.y,f+u.x,a+u.y,r,l,e),Point.o(u),e}_C(t){if(t===null)return;this.A1=!0;const i=t.iterator;for(;i.next();){const e=i.key;e instanceof Link&&(e.suspendsRouting=!0)}}RS(t){if(t===null)return;const i=t.iterator;for(;i.next();){const e=i.key;e instanceof Link&&(e.suspendsRouting=!1,e._A()&&e.invalidateRoute())}this.A1=!1}get draggedLink(){return this.L1}set draggedLink(t){this.L1!==t&&(this.L1=t,t!==null&&(this.D1=t.fromPort,this.F1=t.toPort))}get XS(){return this.D1}set XS(t){this.D1=t}get YS(){return this.F1}set YS(t){this.F1=t}ZA(t,i){const e=t.containingGroup;if(e!==null){let s=this.ZA(e,i);if(s!==null||(s=i.get(e),s!==null))return s}return null}Ks(t,i,e){if(e===void 0)return new DraggingInfo(Point.No);let s=t.isGridSnapEnabled;return!t.groupsSnapMembers&&i.containingGroup!==null&&(s=!1),s?new DraggingInfo(new Point(Math.round(e.x*1e3)/1e3,Math.round(e.y*1e3)/1e3)):new DraggingInfo(e.copy())}J2(t,i){if(U.e(t,Layer,Diagram,\"addLayer:layer\"),t.diagram!==null&&t.diagram!==this&&U.n(\"Cannot share a Layer with another Diagram: \"+t+\" of \"+t.diagram),i===null?t.diagram!==null&&U.n(\"Cannot add an existing Layer to this Diagram again: \"+t):(U.e(i,Layer,Diagram,\"addLayer:existingLayer\"),i.diagram!==this&&U.n(\"Existing Layer must be in this Diagram: \"+i+\" not in \"+i.diagram),t===i&&U.n(\"Cannot move a Layer before or after itself: \"+t)),t.diagram===this)return;const e=t.name,s=this.Wt,n=s.count;for(let o=0;o<n;o++)s.elt(o).name===e&&U.n(\"Cannot add Layer with the name '\"+e+\"'; a Layer with the same name is already present in this Diagram.\")}addLayer(t){this.J2(t,null),t.Do(this);const i=this.Wt;let e=i.count-1;if(!t.isTemporary)for(;e>=0&&i.elt(e).isTemporary;)e--;return i.insertAt(e+1,t),this.Ci!==null&&this.raiseChangedEvent(3,\"layers\",this,null,t,null,e+1),this.L(),this.invalidateDocumentBounds(),this}addLayerBefore(t,i){this.J2(t,i),t.Do(this);const e=this.Wt,s=e.indexOf(t);s>=0&&(e.delete(t),this.Ci!==null&&this.raiseChangedEvent(4,\"layers\",this,t,null,s,null));const n=e.count;let o;for(o=0;o<n;o++)if(e.elt(o)===i){e.insertAt(o,t);break}return this.Ci!==null&&this.raiseChangedEvent(3,\"layers\",this,null,t,null,o),this.L(),s<0&&this.invalidateDocumentBounds(),this}addLayerAfter(t,i){this.J2(t,i),t.Do(this);const e=this.Wt,s=e.indexOf(t);s>=0&&(e.delete(t),this.Ci!==null&&this.raiseChangedEvent(4,\"layers\",this,t,null,s,null));const n=e.count;let o;for(o=0;o<n;o++)if(e.elt(o)===i){e.insertAt(o+1,t);break}return this.Ci!==null&&this.raiseChangedEvent(3,\"layers\",this,null,t,null,o+1),this.L(),s<0&&this.invalidateDocumentBounds(),this}jr(t,i){t.Do(this),this.Wt.insertAt(i,t)}tL(t){this.Wt.removeAt(t)}removeLayer(t){if(U.e(t,Layer,Diagram,\"removeLayer:layer\"),t.diagram!==this&&U.n(\"Cannot remove a Layer from another Diagram: \"+t+\" of \"+t.diagram),t.name===\"\")return;const i=this.Wt,e=i.indexOf(t);if(i.delete(t)){const n=t.Ft.copy().iterator;for(;n.next();){const o=n.value,r=o.layerName;r!==t.name?o.layerName=r:o.layerName=\"\"}this.Ci!==null&&this.raiseChangedEvent(4,\"layers\",this,t,null,e,null),this.L(),this.invalidateDocumentBounds()}}findLayer(t){const i=this.layers;for(;i.next();){const e=i.value;if(e.name===t)return e}return null}findRouter(t){for(const i of this.jf)if(i.name===t)return i;return null}addModelChangedListener(t){return U.P(t,Diagram,\"addModelChangedListener:listener\"),this.vn===null&&(this.vn=new List),this.vn.add(t),this.model.addChangedListener(t),this}removeModelChangedListener(t){U.P(t,Diagram,\"removeModelChangedListener:listener\"),this.vn!==null&&(this.vn.delete(t),this.vn.count===0&&(this.vn=null)),this.model.removeChangedListener(t)}addChangedListener(t){return U.P(t,Diagram,\"addChangedListener:listener\"),this.Fr===null&&(this.Fr=new List),this.Fr.add(t),this}removeChangedListener(t){U.P(t,Diagram,\"removeChangedListener:listener\"),this.Fr!==null&&(this.Fr.delete(t),this.Fr.count===0&&(this.Fr=null))}$2(t){if(!this.skipsUndoManager&&!this.model.skipsUndoManager&&this.model.undoManager.handleChanged(t),t.change!==1&&(this.isModified=!0),this.Fr!==null){const i=this.Fr,e=i.length;for(let s=0;s<e;s++)i.elt(s)(t)}}raiseChangedEvent(t,i,e,s,n,o,r){o===void 0&&(o=null),r===void 0&&(r=null);const l=new ChangedEvent;l.diagram=this,l.change=t,l.propertyName=i,l.object=e,l.oldValue=s,l.oldParam=o,l.newValue=n,l.newParam=r,this.$2(l)}raiseChanged(t,i,e,s,n){this.raiseChangedEvent(2,t,this,i,e,s,n)}t(t,i,e,s,n){this.raiseChangedEvent(2,t,this,i,e,s,n)}get animationManager(){return this.ws}get undoManager(){return this.Ci.undoManager}get skipsUndoManager(){return this.Io}set skipsUndoManager(t){U.i(t,\"boolean\",Diagram,\"skipsUndoManager\"),this.Io=t,this.Ci.skipsUndoManager=t}get delaysLayout(){return this.Qx}set delaysLayout(t){this.Qx=t}HC(t,i){if(t===null||t.diagram!==this)return;const e=this.me;try{this.me=!0;const s=t.change;if(s===2){const n=t.object,o=t.propertyName,r=t.getValue(i);if(t.diagram.model.et(n,o,r),n instanceof GraphObject){const l=n.part;l!==null&&l.invalidateAdornments()}this.isModified=!0}else if(s===3){const n=t.object,o=t.newParam,r=t.newValue;if(n instanceof Panel)if(typeof o==\"number\"&&r instanceof GraphObject){i?n.ne(o):n.insertAt(o,r);const l=n.part;l!==null&&l.invalidateAdornments()}else typeof o==\"number\"&&r instanceof RowColumnDefinition&&(r.isRow?n.iL(o,i?void 0:r):n.eL(o,i?void 0:r));else if(n instanceof Layer){const l=t.oldParam===!0;typeof o==\"number\"&&r instanceof Part&&(i?(l||(r.isSelected=!1,r.isHighlighted=!1,r.invalidateAdornments()),n.ne(l?o:-1,r,l)):n.ia(o,r,l))}else n instanceof Diagram?typeof o==\"number\"&&r instanceof Layer&&(i?this.tL(o):this.jr(r,o)):U.n(\"unknown ChangeType.Insert object: \"+t.toString());this.isModified=!0}else if(s===4){const n=t.object,o=t.oldParam,r=t.oldValue;if(n instanceof Panel)typeof o==\"number\"&&r instanceof GraphObject?i?n.insertAt(o,r):n.ne(o):typeof o==\"number\"&&r instanceof RowColumnDefinition&&(r.isRow?n.iL(o,i?r:void 0):n.eL(o,i?r:void 0));else if(n instanceof Layer){const l=t.newParam===!0;typeof o==\"number\"&&r instanceof Part&&(i?n.Ft.indexOf(r)<0&&n.ia(o,r,l):(l||(r.isSelected=!1,r.isHighlighted=!1,r.invalidateAdornments()),n.ne(l?o:-1,r,l)))}else n instanceof Diagram?typeof o==\"number\"&&r instanceof Layer&&(i?this.jr(r,o):this.tL(o)):U.n(\"unknown ChangeType.Remove object: \"+t.toString());this.isModified=!0}else s===1||U.n(\"unknown ChangedEvent: \"+t.toString())}finally{this.me=e}}startTransaction(t){return this.undoManager.startTransaction(t)}commitTransaction(t){return this.undoManager.commitTransaction(t)}rollbackTransaction(){return this.undoManager.rollbackTransaction()}commit(t,i){let e=i;e===void 0&&(e=\"\");const s=this.skipsUndoManager;e===null&&(this.skipsUndoManager=!0,e=\"\"),this.undoManager.startTransaction(e);let n=!1;try{t(this),n=!0}finally{n?this.undoManager.commitTransaction(e):this.undoManager.rollbackTransaction(),this.skipsUndoManager=s}}updateAllTargetBindings(t){this.partManager.updateAllTargetBindings(t)}updateAllThemeBindings(){if(this.partManager.updateAllThemeBindings(),this.es!==null){const t=this.es.part;t!==null&&t.Bo()}}setDivBackground(t){this.div&&(this.div.style.backgroundColor=t)}updateAllRelationshipsFromData(){this.partManager.updateAllRelationshipsFromData()}r0(){const t=this.F,i=this.ot,e=this.gt;t.Vi(),i!==1&&t.ot(i),(e.x!==0||e.y!==0)&&t.Bs(-e.x,-e.y)}sL(t,i){const e=this.animationManager;if(this.Zt||this.Ss){this.ot=i,this.nh(),this.L(),this.ma(),e.SA(t,this.ot),this.r0();return}if(this.wt===null){this.ot=i,this.r0();return}this.Zt=!0;const n=this.viewportBounds.copy(),o=this.Pt,r=this.Nt;let l=this.zoomPoint.x,h=this.zoomPoint.y;const f=this.contentAlignment;isNaN(l)&&(f.isSide()?f.includesSide(Spot.LeftSide)?l=0:f.includesSide(Spot.RightSide)&&(l=o-1):f.isSpot()?l=f.x*(o-1):l=o/2),isNaN(h)&&(f.isSide()?f.includesSide(Spot.TopSide)?h=0:f.includesSide(Spot.BottomSide)&&(h=r-1):f.isSpot()?h=f.y*(r-1):h=r/2),this.scaleComputation!==null&&!this.animationManager.defaultAnimation.isAnimating&&(i=this.scaleComputation(this,i)),i<this.minScale&&(i=this.minScale),i>this.maxScale&&(i=this.maxScale);const a=Point.K(this.gt.x+l/t-l/i,this.gt.y+h/t-h/i);this.position=a,Point.o(a),this.ot=i,this.r0(),this.nh(),this.Zt=!1,this.onViewportBoundsChanged(n,this.viewportBounds,t,!1),this.Gs(!1),e.SA(t,this.ot),this.L()}FR(){const t=this.Wt.h;for(let i=0;i<t.length;i++)t[i].TA()}onViewportBoundsChanged(t,i,e,s){if(t.equals(i))return;s===void 0&&(s=!1),s||this.ma(),this.oh();const n=this.layout;n!==null&&n.isViewportSized&&this.autoScale===1&&(t.width!==i.width||t.height!==i.height)&&n.invalidateLayout();const o=this.currentTool;this.qf===!0&&o instanceof ToolManager&&!this.animationManager.isTicking&&(this.lastInput.documentPoint=this.transformViewToDoc(this.lastInput.viewPoint),o.standardMouseActivity(this)),this.Zt||this.invalidateViewport(t,i),this.lh(),this.Gi.scale=e,this.Gi.position.x=t.x,this.Gi.position.y=t.y,this.Gi.bounds.c(t),this.Gi.canvasSize.width=Math.round(t.width*e),this.Gi.canvasSize.height=Math.round(t.height*e),this.Gi.newCanvasSize.width=this.Pt,this.Gi.newCanvasSize.height=this.Nt,this.Gi.isScroll=s,this.O(\"ViewportBoundsChanged\",this.Gi,t),this.isVirtualized&&this.links.each(r=>{r.isAvoiding&&r.actualBounds.intersectsRect(i)&&r.invalidateRoute()})}lh(t){const i=this.es;if(i===null||!i.visible||i.part===null||i.layer===null)return;const e=t!==void 0?t:this.m1;if(!e.isReal())return;const s=e.width,n=e.height;if(i.scale=1,i.angle=0,i.layer.isViewportAligned)i.width=s*this.scale,i.height=n*this.scale,i.part.alignment=Spot.TopLeft;else{i.ki===null&&(i.ki=new GridPanelSettings);const o=i.ki.$f;if(!o.isReal())return;i.width=s+o.width*2,i.height=n+o.height*2;const r=Point.a();Geo.Vg(e.x,e.y,0,0,o.width,o.height,r),r.offset(-o.width,-o.height),i.part.location=r,Point.o(r)}}clearSelection(t){t===void 0&&(t=!1);const i=this.selection;if(i.count===0)return;t||this.O(\"ChangingSelection\",i);const e=i.toArray(),s=e.length;for(let n=0;n<s;n++){const o=e[n];o.isSelected=!1}i.At(),i.clear(),i.p(),t||this.O(\"ChangedSelection\",i)}select(t){t!==null&&(U.e(t,Part,Diagram,\"select:part\"),t.diagram===this&&(!t.isSelected||this.selection.count>1)&&(this.O(\"ChangingSelection\",this.selection),this.clearSelection(!0),t.isSelected=!0,this.O(\"ChangedSelection\",this.selection)))}selectCollection(t){if(this.O(\"ChangingSelection\",this.selection),this.clearSelection(!0),Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++){const s=t[e];s instanceof Part||U.n(\"Diagram.selectCollection given something that is not a Part: \"+s),s.isSelected=!0}}else{const i=t.iterator;for(;i.next();){const e=i.value;e instanceof Part||U.n(\"Diagram.selectCollection given something that is not a Part: \"+e),e.isSelected=!0}}this.O(\"ChangedSelection\",this.selection)}clearHighlighteds(){const t=this.highlighteds;if(t.count>0){const i=t.toArray(),e=i.length;for(let s=0;s<e;s++){const n=i[s];n.isHighlighted=!1}t.At(),t.clear(),t.p()}}highlight(t){t!==null&&t.diagram===this&&(U.e(t,Part,Diagram,\"highlight:part\"),(!t.isHighlighted||this.highlighteds.count>1)&&(this.clearHighlighteds(),t.isHighlighted=!0))}highlightCollection(t){const i=new GSet().addAll(t),s=this.highlighteds.copy().removeAll(i).iterator;for(;s.next();){const o=s.value;o.isHighlighted=!1}const n=i.iterator;for(;n.next();){const o=n.value;o instanceof Part||U.n(\"Diagram.highlightCollection given something that is not a Part: \"+o),o.isHighlighted=!0}}scroll(t,i,e){e===void 0&&(e=1);const s=i===\"up\"||i===\"down\";let n=0;const o=Point.a();if(t===\"pixel\")n=e;else if(t===\"line\")n=e*(s?this.scrollVerticalLineChange:this.scrollHorizontalLineChange);else if(t===\"page\"){let l=s?this.viewportBounds.height:this.viewportBounds.width;if(l*=this.scale,l!==0){const h=Math.max(l-(s?this.scrollVerticalLineChange:this.scrollHorizontalLineChange),0);n=e*h}}else if(t===\"document\"){const l=this.documentBounds,h=this.viewportBounds;i===\"up\"?this.position=o.s(h.x,l.y):i===\"left\"?this.position=o.s(l.x,h.y):i===\"down\"?this.position=o.s(h.x,l.bottom-h.height):i===\"right\"&&(this.position=o.s(l.right-h.width,h.y)),Point.o(o);return}else U.n(\"scrolling unit must be 'pixel', 'line', 'page', or 'document', not: \"+t);n/=this.scale;const r=this.position;i===\"up\"?this.position=o.s(r.x,r.y-n):i===\"down\"?this.position=o.s(r.x,r.y+n):i===\"left\"?this.position=o.s(r.x-n,r.y):i===\"right\"?this.position=o.s(r.x+n,r.y):U.n(\"scrolling direction must be 'up', 'down', 'left', or 'right', not: \"+i),Point.o(o)}scrollToRect(t){const i=this.viewportBounds;if(i.containsRect(t))return;const e=t.center;e.x-=i.width/2,e.y-=i.height/2,this.position=e}centerRect(t){const i=this.viewportBounds,e=t.center;e.x-=i.width/2,e.y-=i.height/2,this.position=e}transformDocToView(t){return t.copy().F(this.F)}transformViewToDoc(t){return t.copy().Xe(this.F)}sR(t){return t.Xe(this.F)}static None=1;static Uniform=2;static UniformToFill=3;static CycleAll=1;static CycleNotDirected=2;static CycleNotDirectedFast=3;static CycleNotUndirected=4;static CycleDestinationTree=5;static CycleSourceTree=6;static DocumentScroll=1;static InfiniteScroll=2;static TreeParentCollapsed=1;static AllParentsCollapsed=2;static AnyParentsCollapsed=3;get opacity(){return this.ii}set opacity(t){const i=this.ii;i!==t&&(U.i(t,\"number\",Diagram,\"opacity\"),(t<0||t>1)&&U.U(t,\"0 <= value <= 1\",Diagram,\"opacity\"),this.ii=t,this.t(\"opacity\",i,t),this.L())}get validCycle(){return this.Wx}set validCycle(t){const i=this.Wx;i!==t&&(U.j(t,CycleMode,\"CycleMode\"),this.Wx=t,this.t(\"validCycle\",i,t))}get layers(){return this.Wt.iterator}get isModelReadOnly(){const t=this.Ci;return t===null?!1:t.isReadOnly}set isModelReadOnly(t){const i=this.Ci;i!==null&&(i.isReadOnly=t)}get isReadOnly(){return this.Oo}set isReadOnly(t){const i=this.Oo;i!==t&&(U.i(t,\"boolean\",Diagram,\"isReadOnly\"),this.Oo=t,this.t(\"isReadOnly\",i,t))}get isEnabled(){return this.Xi}set isEnabled(t){const i=this.Xi;i!==t&&(U.i(t,\"boolean\",Diagram,\"isEnabled\"),this.Xi=t,this.t(\"isEnabled\",i,t))}get allowClipboard(){return this._x}set allowClipboard(t){const i=this._x;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowClipboard\"),this._x=t,this.t(\"allowClipboard\",i,t))}get allowCopy(){return this.Vl}set allowCopy(t){const i=this.Vl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowCopy\"),this.Vl=t,this.t(\"allowCopy\",i,t))}get allowDelete(){return this.zl}set allowDelete(t){const i=this.zl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowDelete\"),this.zl=t,this.t(\"allowDelete\",i,t))}get allowDragOut(){return this.t1}set allowDragOut(t){const i=this.t1;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowDragOut\"),this.t1=t,this.t(\"allowDragOut\",i,t))}get allowDrop(){return this.i1}set allowDrop(t){const i=this.i1;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowDrop\"),this.i1=t,this.t(\"allowDrop\",i,t))}get allowTextEdit(){return this.Xl}set allowTextEdit(t){const i=this.Xl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowTextEdit\"),this.Xl=t,this.t(\"allowTextEdit\",i,t))}get allowGroup(){return this.Yl}set allowGroup(t){const i=this.Yl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowGroup\"),this.Yl=t,this.t(\"allowGroup\",i,t))}get allowUngroup(){return this.Kl}set allowUngroup(t){const i=this.Kl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowUngroup\"),this.Kl=t,this.t(\"allowUngroup\",i,t))}get allowInsert(){return this.e1}set allowInsert(t){const i=this.e1;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowInsert\"),this.e1=t,this.t(\"allowInsert\",i,t))}get allowLink(){return this.Ul}set allowLink(t){const i=this.Ul;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowLink\"),this.Ul=t,this.t(\"allowLink\",i,t))}get allowRelink(){return this.Gl}set allowRelink(t){const i=this.Gl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowRelink\"),this.Gl=t,this.t(\"allowRelink\",i,t))}get allowMove(){return this.Hl}set allowMove(t){const i=this.Hl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowMove\"),this.Hl=t,this.t(\"allowMove\",i,t))}get allowReshape(){return this.ql}set allowReshape(t){const i=this.ql;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowReshape\"),this.ql=t,this.t(\"allowReshape\",i,t))}get allowResize(){return this.Wl}set allowResize(t){const i=this.Wl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowResize\"),this.Wl=t,this.t(\"allowResize\",i,t))}get allowRotate(){return this.jl}set allowRotate(t){const i=this.jl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowRotate\"),this.jl=t,this.t(\"allowRotate\",i,t))}get allowSelect(){return this.vl}set allowSelect(t){const i=this.vl;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowSelect\"),this.vl=t,this.t(\"allowSelect\",i,t))}get allowUndo(){return this.s1}set allowUndo(t){const i=this.s1;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowUndo\"),this.s1=t,this.t(\"allowUndo\",i,t))}get allowZoom(){return this.o1}set allowZoom(t){const i=this.o1;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowZoom\"),this.o1=t,this.t(\"allowZoom\",i,t))}get hasVerticalScrollbar(){return this.Yu}set hasVerticalScrollbar(t){const i=this.Yu;i!==t&&(U.i(t,\"boolean\",Diagram,\"hasVerticalScrollbar\"),this.Yu=t,this.ma(),this.L(),this.t(\"hasVerticalScrollbar\",i,t),this.Gs(!1))}get hasHorizontalScrollbar(){return this.Xu}set hasHorizontalScrollbar(t){const i=this.Xu;i!==t&&(U.i(t,\"boolean\",Diagram,\"hasHorizontalScrollbar\"),this.Xu=t,this.ma(),this.L(),this.t(\"hasHorizontalScrollbar\",i,t),this.Gs(!1))}get allowHorizontalScroll(){return this.l1}set allowHorizontalScroll(t){const i=this.l1;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowHorizontalScroll\"),this.l1=t,this.t(\"allowHorizontalScroll\",i,t),this.Gs(!1))}get allowVerticalScroll(){return this.h1}set allowVerticalScroll(t){const i=this.h1;i!==t&&(U.i(t,\"boolean\",Diagram,\"allowVerticalScroll\"),this.h1=t,this.t(\"allowVerticalScroll\",i,t),this.Gs(!1))}get scrollHorizontalLineChange(){return this.a1}set scrollHorizontalLineChange(t){const i=this.a1;i!==t&&(U.i(t,\"number\",Diagram,\"scrollHorizontalLineChange\"),t<0&&U.U(t,\">= 0\",Diagram,\"scrollHorizontalLineChange\"),this.a1=t,this.t(\"scrollHorizontalLineChange\",i,t))}get scrollVerticalLineChange(){return this.f1}set scrollVerticalLineChange(t){const i=this.f1;i!==t&&(U.i(t,\"number\",Diagram,\"scrollVerticalLineChange\"),t<0&&U.U(t,\">= 0\",Diagram,\"scrollVerticalLineChange\"),this.f1=t,this.t(\"scrollVerticalLineChange\",i,t))}get lastInput(){return this.oa}set lastInput(t){Debug&&U.e(t,InputEvent,Diagram,\"lastInput\"),this.oa=t}get previousInput(){return this.Hr}set previousInput(t){Debug&&U.e(t,InputEvent,Diagram,\"previousInput\"),this.Hr=t}get firstInput(){return this.Jm}set firstInput(t){Debug&&U.e(t,InputEvent,Diagram,\"firstInput\"),this.Jm=t}get currentCursor(){return this.jx}set currentCursor(t){if(t===\"\"&&(t=this.Gm),this.jx!==t){U.i(t,\"string\",Diagram,\"currentCursor\");const e=this.wt,s=this.Tt;if(e===null||s===null)return;this.jx=t;const n=e.style.cursor;e.style.cursor=t,s.style.cursor=t,e.style.cursor===n&&(e.style.cursor=\"-webkit-\"+t,s.style.cursor=\"-webkit-\"+t,e.style.cursor===n&&(e.style.cursor=\"-moz-\"+t,s.style.cursor=\"-moz-\"+t,e.style.cursor===n&&(e.style.cursor=t,s.style.cursor=t)))}}get defaultCursor(){return this.Gm}set defaultCursor(t){t===\"\"&&(t=\"auto\");const i=this.Gm;i!==t&&(U.i(t,\"string\",Diagram,\"defaultCursor\"),this.Gm=t,this.t(\"defaultCursor\",i,t))}get click(){return this.Rr}set click(t){const i=this.Rr;i!==t&&(t!==null&&U.P(t,Diagram,\"click\"),this.Rr=t,this.t(\"click\",i,t))}get doubleClick(){return this.Ir}set doubleClick(t){const i=this.Ir;i!==t&&(t!==null&&U.P(t,Diagram,\"doubleClick\"),this.Ir=t,this.t(\"doubleClick\",i,t))}get contextClick(){return this.Or}set contextClick(t){const i=this.Or;i!==t&&(t!==null&&U.P(t,Diagram,\"contextClick\"),this.Or=t,this.t(\"contextClick\",i,t))}get mouseOver(){return this.Er}set mouseOver(t){const i=this.Er;i!==t&&(t!==null&&U.P(t,Diagram,\"mouseOver\"),this.Er=t,this.t(\"mouseOver\",i,t))}get mouseHover(){return this.Br}set mouseHover(t){const i=this.Br;i!==t&&(t!==null&&U.P(t,Diagram,\"mouseHover\"),this.Br=t,this.t(\"mouseHover\",i,t))}get mouseHold(){return this.Vr}set mouseHold(t){const i=this.Vr;i!==t&&(t!==null&&U.P(t,Diagram,\"mouseHold\"),this.Vr=t,this.t(\"mouseHold\",i,t))}get mouseDragOver(){return this.vx}set mouseDragOver(t){const i=this.vx;i!==t&&(t!==null&&U.P(t,Diagram,\"mouseDragOver\"),this.vx=t,this.t(\"mouseDragOver\",i,t))}get mouseDrop(){return this.zr}set mouseDrop(t){const i=this.zr;i!==t&&(Debug&&t!==null&&U.P(t,Diagram,\"mouseDrop\"),this.zr=t,this.t(\"mouseDrop\",i,t))}get handlesDragDropForTopLevelParts(){return this.Jx}set handlesDragDropForTopLevelParts(t){const i=this.Jx;i!==t&&(U.i(t,\"boolean\",Diagram,\"handlesDragDropForTopLevelParts\"),this.Jx=t,this.t(\"handlesDragDropForTopLevelParts\",i,t))}get mouseEnter(){return this.Xr}set mouseEnter(t){const i=this.Xr;i!==t&&(t!==null&&U.P(t,Diagram,\"mouseEnter\"),this.Xr=t,this.t(\"mouseEnter\",i,t))}get mouseLeave(){return this.Yr}set mouseLeave(t){const i=this.Yr;i!==t&&(t!==null&&U.P(t,Diagram,\"mouseLeave\"),this.Yr=t,this.t(\"mouseLeave\",i,t))}get toolTip(){return this.Kr}set toolTip(t){const i=this.Kr;i!==t&&(Debug&&t!==null&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"Diagram.toolTip must be an Adornment or HTMLInfo.\"),this.Kr=t,this.t(\"toolTip\",i,t))}get contextMenu(){return this.Ur}set contextMenu(t){const i=this.Ur;i!==t&&(Debug&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"Diagram.contextMenu must be an Adornment or HTMLInfo.\"),this.Ur=t,this.t(\"contextMenu\",i,t))}get commandHandler(){return this.u2}set commandHandler(t){const i=this.u2;i!==t&&(U.e(t,CommandHandler,Diagram,\"commandHandler\"),i&&i.doStop(),this.u2=t,t.Do(this),t.doStart())}get toolManager(){return this.a2}set toolManager(t){this.a2!==t&&(U.e(t,ToolManager,Diagram,\"toolManager\"),this.a2=t,t.diagram=this)}get defaultTool(){return this.f2}set defaultTool(t){const i=this.f2;i!==t&&(U.e(t,Tool,Diagram,\"defaultTool\"),this.f2=t,t.diagram=this,this.currentTool===i&&(this.currentTool=t))}get currentTool(){return this.c2}set currentTool(t){const i=this.c2;i&&(i.isActive&&i.doDeactivate(),i.cancelWaitAfter(),i.doStop()),t===null&&(t=this.defaultTool),t!==null&&(U.e(t,Tool,Diagram,\"currentTool\"),this.c2=t,t.diagram=this,t.doStart())}get selection(){return this.k2}get maxSelectionCount(){return this.g1}set maxSelectionCount(t){const i=this.g1;if(i!==t)if(U.i(t,\"number\",Diagram,\"maxSelectionCount\"),t>=0&&!isNaN(t)){if(this.g1=t,this.t(\"maxSelectionCount\",i,t),!this.undoManager.isUndoingRedoing){const e=this.selection.count-t;if(e>0){this.O(\"ChangingSelection\",this.selection);const s=this.selection.toArray();for(let n=0;n<e;n++)s[n].isSelected=!1;this.O(\"ChangedSelection\",this.selection)}}}else U.U(t,\">= 0\",Diagram,\"maxSelectionCount\")}get nodeSelectionAdornmentTemplate(){return this.jm}set nodeSelectionAdornmentTemplate(t){const i=this.jm;i!==t&&(U.e(t,Adornment,Diagram,\"nodeSelectionAdornmentTemplate\"),this.jm=t.Kt(),this.t(\"nodeSelectionAdornmentTemplate\",i,t))}get groupSelectionAdornmentTemplate(){return this.w1}set groupSelectionAdornmentTemplate(t){const i=this.w1;i!==t&&(U.e(t,Adornment,Diagram,\"groupSelectionAdornmentTemplate\"),this.w1=t.Kt(),this.t(\"groupSelectionAdornmentTemplate\",i,t))}get linkSelectionAdornmentTemplate(){return this.b1}set linkSelectionAdornmentTemplate(t){const i=this.b1;i!==t&&(U.e(t,Adornment,Diagram,\"linkSelectionAdornmentTemplate\"),this.b1=t.Kt(),this.t(\"linkSelectionAdornmentTemplate\",i,t))}get highlighteds(){return this.S2}get isModified(){const t=this.undoManager;return t.isEnabled?t.currentTransaction!==null?!0:this.Hu&&this.Xs!==t.historyIndex:this.Hu}set isModified(t){if(this.Hu!==t){U.i(t,\"boolean\",Diagram,\"isModified\"),this.Hu=t;const e=this.undoManager;!t&&e.isEnabled&&(this.Xs=e.historyIndex),t||this.nL()}}nL(){const t=this.isModified;this.w2!==t&&(this.w2=t,this.O(\"Modified\"))}get model(){return this.Ci}set model(t){const i=this.Ci;if(i!==t){U.e(t,Model,Diagram,\"model\"),this.currentTool.doCancel(),i&&i.undoManager!==t.undoManager&&i.undoManager.isInTransaction&&U.n(\"Do not replace a Diagram.model while a transaction is in progress.\"),this.animationManager.stopAnimation(!0);const e=this.XA(!0);this.$n=!1,this.zu=!0,this.Xs=-2,this.Nr=!1;const s=this.Zt;this.Zt=!0,this.animationManager.Bl(\"Model\"),i&&(this.vn!==null&&this.vn.each(n=>i.removeChangedListener(n)),i.removeChangedListener(this.p2)),this.Ci=t,this.partManager=this.YR(this.Ci.type),this.initializePartManager(this.partManager);for(let n=0;n<e.length;n++)this.add(e[n]);t.addChangedListener(this.m2),this.partManager.Z2(),t.removeChangedListener(this.m2),t.addChangedListener(this.p2),this.vn!==null&&this.vn.each(n=>t.addChangedListener(n)),this.Zt=s,this.invalidateDocumentBounds(),this.Zt||this.L(),i&&t.undoManager.copyProperties(i.undoManager)}}get themeManager(){return this.B2}set themeManager(t){const i=this.B2;i!==t&&(U.e(t,ThemeManager,Model,\"themeManager\"),i&&i.removeDiagram(this),this.B2=t,t!==null&&t.addDiagram(this))}initializePartManager(t){}static V2(t,i){Diagram.IA.set(t,i)}static get licenseKey(){return Diagram.Q2.last()}static set licenseKey(t){Diagram.Q2.add(t.replace(/\\s/g,\"\"))}static get version(){return Diagram.KR}static Q2=new List;static KR=\"3.0.26\";YR(t){const i=Diagram.IA.get(t);return i!==null?new i:new PartManager}get H(){return this.g2}set H(t){this.g2=t}get Tx(){return this.DA}UR(t){if(t.model!==this.model)return;const i=t.change,e=t.propertyName;if(i===1&&e[0]===\"S\"){if(e===\"StartingFirstTransaction\"){const s=this,n=this.toolManager;n.mouseDownTools.each(o=>o.diagram=s),n.mouseMoveTools.each(o=>o.diagram=s),n.mouseUpTools.each(o=>o.diagram=s),this.routers.each(o=>o.diagram=s),!this.Ss&&!this.$n&&(this.Kf=!0,this.zu&&(this.Nr=!0))}else if(e===\"StartingUndo\"||e===\"StartingRedo\"){const s=this.animationManager;this.skipsUndoManager||(s.defaultAnimation.isAnimating&&s.stopAnimation(),s.getBundleAnimation().isAnimating&&s.getBundleAnimation().stop()),this.O(\"ChangingSelection\",this.selection)}else if(e===\"StartedTransaction\"){const s=this.animationManager;s.defaultAnimation.isAnimating&&!this.skipsUndoManager&&s.stopAnimation()}return}if(this.H){this.H=!1;try{if(t.modelChange===\"\"&&i===1){(e===\"FinishedUndo\"||e===\"FinishedRedo\")&&(this.O(\"ChangedSelection\",this.selection),this.Ti());const s=this.animationManager;e===\"RolledBackTransaction\"&&s.stopAnimation(),this.PA(),this.Kf=!0,this.maybeUpdate(),(this.undoManager.transactionLevel===0||this.undoManager.transactionLevel===1)&&s.KM(),e===\"CommittedTransaction\"&&this.undoManager.isJustDiscarded&&(this.Xs=Math.min(this.Xs,this.undoManager.historyIndex-1)),(e===\"CommittedTransaction\"||e===\"RolledBackTransaction\")&&this.undoManager.Ww&&U.lr(()=>{this.isModified=!1},1);const n=t.isTransactionFinished;if(n&&(this.nL(),this.Tx.clear(),this.animationManager.KF()),!this.$x&&n&&this.lastInput.targetDiagram){this.$x=!0;const o=this;U.lr(()=>{o.currentTool.standardMouseOver(),o.$x=!1},10)}}}finally{this.H=!0}}}get me(){return this.d2}set me(t){this.d2=t}get bu(){return this.Zx}set bu(t){this.Zx=t}vA(t){const i=t.T.h;for(const e of i)e instanceof Picture&&this._2(e)}_2(t){const i=t.element;if(i===null||!(i instanceof HTMLImageElement)||(i.os instanceof GSet&&i.os.add(this),t.GR(),!i.u0))return;const e=i.getAttribute(\"src\")||\"\",s=this.th.get(e);if(s===null){Picture.oL(t,i);const n=[];n.push(t),this.th.set(e,n)}else{for(let n=0;n<s.length;n++)if(s[n]===t)return;s.push(t)}}HR(t){const i=t.T.h,e=i.length;for(let s=0;s<e;s++)this.tP(i[s])}tP(t){if(!(t instanceof Picture))return;const i=t.element;if(i===null||!(i instanceof HTMLImageElement)||!i.u0)return;const e=i.getAttribute(\"src\")||\"\",s=this.th.get(e);if(s!==null){for(let n=0;n<s.length;n++)if(s[n]===t){s.splice(n,1),s.length===0&&(this.th.delete(e),Picture.qR(i),i.os instanceof GSet&&i.os.delete(this),Picture.clearCache(e));return}}}YA(){Picture.clearCache(),this.th.clear()}rebuildParts(){this.partManager.rebuildParts()}Ef(t,i){this.ws.Ef(t,i)}Of(t,i){this.ws.Of(t,i)}findPartForKey(t){return this.partManager.findPartForKey(t)}findNodeForKey(t){return this.partManager.findNodeForKey(t)}findLinkForKey(t){return this.partManager.findLinkForKey(t)}findPartForData(t){return this.partManager.findPartForData(t)}findNodeForData(t){return this.partManager.findNodeForData(t)}findLinkForData(t){return this.partManager.findLinkForData(t)}findNodesByExample(...t){return this.partManager.findNodesByExample(...t)}findLinksByExample(...t){return this.partManager.findLinksByExample(...t)}get nodeTemplate(){return this.Gr.get(\"\")}set nodeTemplate(t){const i=this.Gr.get(\"\");i!==t&&(U.e(t,Part,Diagram,\"nodeTemplate\"),this.Gr.set(\"\",t),this.t(\"nodeTemplate\",i,t),this.undoManager.isUndoingRedoing||this.rebuildParts())}get nodeTemplateMap(){return this.Gr}set nodeTemplateMap(t){const i=this.Gr;i!==t&&(U.e(t,GMap,Diagram,\"nodeTemplateMap\"),this.Gr=t,this.t(\"nodeTemplateMap\",i,t),this.undoManager.isUndoingRedoing||this.rebuildParts())}get groupTemplate(){return this.na.get(\"\")}set groupTemplate(t){const i=this.na.get(\"\");i!==t&&(U.e(t,Group,Diagram,\"groupTemplate\"),this.na.set(\"\",t),this.t(\"groupTemplate\",i,t),this.undoManager.isUndoingRedoing||this.rebuildParts())}get groupTemplateMap(){return this.na}set groupTemplateMap(t){const i=this.na;i!==t&&(U.e(t,GMap,Diagram,\"groupTemplateMap\"),this.na=t,this.t(\"groupTemplateMap\",i,t),this.undoManager.isUndoingRedoing||this.rebuildParts())}get linkTemplate(){return this.Ql.get(\"\")}set linkTemplate(t){const i=this.Ql.get(\"\");i!==t&&(U.e(t,Link,Diagram,\"linkTemplate\"),this.Ql.set(\"\",t),this.t(\"linkTemplate\",i,t),this.undoManager.isUndoingRedoing||this.rebuildParts())}get linkTemplateMap(){return this.Ql}set linkTemplateMap(t){const i=this.Ql;i!==t&&(U.e(t,GMap,Diagram,\"linkTemplateMap\"),this.Ql=t,this.t(\"linkTemplateMap\",i,t),this.undoManager.isUndoingRedoing||this.rebuildParts())}get isMouseCaptured(){return this.b2}set isMouseCaptured(t){const i=this.wt;if(i===null)return;const e=i.Et;e instanceof SVGElement||(t?(this.lastInput.bubbles=!1,this.Ai(e,\"pointermove\",this.fa,!1),this.Ai(e,\"pointerdown\",this.eh,!1),this.Ai(e,\"pointerup\",this.ca,!1),this.Ai(e,\"pointerout\",this.ua,!1),this.Ai(e,\"pointercancel\",this.da,!1),this.Ut(root,\"pointermove\",this.fa,!0),this.Ut(root,\"pointerdown\",this.eh,!0),this.Ut(root,\"pointerup\",this.ca,!0),this.Ut(root,\"pointerout\",this.ua,!0),this.Ut(root,\"pointercancel\",this.da,!0),this.Ai(e,\"wheel\",this.aa,!1),this.Ut(root,\"wheel\",this.aa,!0),this.Ut(root,\"selectstart\",this.Zh,!1)):(this.Ai(root,\"pointermove\",this.fa,!0),this.Ai(root,\"pointerdown\",this.eh,!0),this.Ai(root,\"pointerup\",this.ca,!0),this.Ai(root,\"pointerout\",this.ua,!0),this.Ai(root,\"pointercancel\",this.da,!0),this.Ut(e,\"pointermove\",this.fa,!1),this.Ut(e,\"pointerdown\",this.eh,!1),this.Ut(e,\"pointerup\",this.ca,!1),this.Ut(e,\"pointerout\",this.ua,!1),this.Ut(e,\"pointercancel\",this.da,!1),this.Ai(root,\"wheel\",this.aa,!0),this.Ai(root,\"selectstart\",this.Zh,!1),this.Ut(e,\"wheel\",this.aa,!1)),this.b2=t)}get position(){return this.gt}set position(t){if(this.gt.equals(t))return;const i=Point.a().c(this.gt),e=this.viewportBounds.copy();if(this.gt.c(t),this.animationManager.kA(i,this.gt),!this.Zt&&!(this.wt===null&&!this.Uu.isReal())){this.Zt=!0;const s=this.scale,n=this.Pt/s,o=this.Nt/s;this.K2(this.Wm,n,o,this.Xf,!1),this.Zt=!1}else this.nh(),this.r0();if(!this.Zt){const s=this.viewportBounds;this.onViewportBoundsChanged(e,s,this.ot,!1)}Point.o(i)}get initialPosition(){return this.Ix}set initialPosition(t){this.Ix.equals(t)||(U.e(t,Point,Diagram,\"initialPosition\"),this.Ix=t.N())}get initialScale(){return this.Ox}set initialScale(t){this.Ox!==t&&(U.i(t,\"number\",Diagram,\"initialScale\"),this.Ox=t)}get grid(){return this.es===null&&(this.es=this.UA()),this.es}set grid(t){let i=this.es;if(i!==t){i===null&&(this.es=this.UA(),i=this.es),U.e(t,Panel,Diagram,\"grid\"),t.type!==Panel.Grid&&U.n(\"Diagram.grid must be a Panel of type Panel.Grid\");const e=i.panel;e!==null&&e.remove(i),this.es=t,t.name=\"GRID\",e!==null&&e.add(t),this.Gu=!1,this.L(),this.t(\"grid\",i,t)}}get viewportBounds(){return this.m1}nh(){const t=this.m1,i=this.gt,e=this.ot;t.s(i.x,i.y,Math.max(this.Pt,0)/e,Math.max(this.Nt,0)/e),this.oh()}get viewSize(){return this.Uu}set viewSize(t){const i=this.viewSize;if(!i.equals(t)){U.e(t,Size,Diagram,\"viewSize\"),t=t.N(),this.Uu=t;let e=0,s=0;t.isReal()?(e=t.width,s=t.height):this.Tt!==null&&(e=this.Tt.clientWidth||1,s=this.Tt.clientHeight||1),this.Pt=e,this.Nt=s,this.nh(),this.invalidateDocumentBounds(),this.t(\"viewSize\",i,t),this.L()}}get fixedBounds(){return this.zx}set fixedBounds(t){const i=this.zx;i.equals(t)||(U.e(t,Rect,Diagram,\"fixedBounds\"),(Debug&&t.width===1/0||t.width===-1/0||t.height===1/0||t.height===-1/0)&&U.n(\"fixedBounds width/height must not be Infinity\"),t=t.N(),this.zx=t,this.invalidateDocumentBounds(),this.t(\"fixedBounds\",i,t))}get scrollMargin(){return this.ea}set scrollMargin(t){typeof t==\"number\"?t=new Margin(t):U.e(t,Margin,Diagram,\"scrollMargin\");const i=this.ea;i.equals(t)||(t=t.N(),this.ea=t,this.t(\"scrollMargin\",i,t),this.Su())}get scrollMode(){return this._h}set scrollMode(t){const i=this._h;i!==t&&(U.j(t,ScrollMode,\"ScrollMode\"),this._h=t,t===1&&this.Gs(!1),this.t(\"scrollMode\",i,t),this.ma(),this.L())}get scrollsPageOnFocus(){return this.Xx}set scrollsPageOnFocus(t){const i=this.Xx;i!==t&&(U.i(t,\"boolean\",Diagram,\"scrollsPageOnFocus\"),this.Xx=t,this.t(\"scrollsPageOnFocus\",i,t))}get positionComputation(){return this.Yx}set positionComputation(t){const i=this.Yx;i!==t&&(t!==null&&U.P(t,Diagram,\"positionComputation\"),this.Yx=t,this.Gs(!1),this.t(\"positionComputation\",i,t))}get scaleComputation(){return this.Kx}set scaleComputation(t){const i=this.Kx;i!==t&&(t!==null&&U.P(t,Diagram,\"scaleComputation\"),this.Kx=t,this.sL(this.scale,this.scale),this.t(\"scaleComputation\",i,t))}get documentBounds(){return this.Wm}rL(t){this.ra=!1;let i=this.Wm;i.equals(t)||(i=i.copy(),this.Wm.c(t),this.Gs(!1),this.O(\"DocumentBoundsChanged\",void 0,i),this.ma(),this.L())}ensureBounds(){if(this.ra){const t=Rect.a();this.rL(this.computeBounds(t)),Rect.o(t)}}get isVirtualized(){return this.p1}set isVirtualized(t){const i=this.p1;i!==t&&(U.i(t,\"boolean\",Diagram,\"isVirtualized\"),this.p1=t,this.t(\"isVirtualized\",i,t))}get scale(){return this.ot}set scale(t){const i=this.ot;U.r(t,Diagram,\"scale\"),i!==t&&this.sL(i,t)}get defaultScale(){return this.$m}set defaultScale(t){Debug&&U.r(t,Diagram,\"defaultScale\"),Debug&&!(t>0)&&U.n(\"defaultScale must be larger than zero, not: \"+t),this.$m=t}get autoScale(){return this.$l}set autoScale(t){const i=this.$l;i!==t&&(U.j(t,AutoScale,\"AutoScale\"),this.$l=t,this.t(\"autoScale\",i,t),t!==1&&this.Gs(!1))}get initialAutoScale(){return this.Tr}set initialAutoScale(t){const i=this.Tr;i!==t&&(U.j(t,AutoScale,\"AutoScale\"),this.Tr=t,this.t(\"initialAutoScale\",i,t))}get initialViewportSpot(){return this.Gx}set initialViewportSpot(t){const i=this.Gx;i!==t&&(U.e(t,Spot,Diagram,\"initialViewportSpot\"),t.isSpot()||U.n(\"initialViewportSpot must be a specific Spot: \"+t),this.Gx=t,this.t(\"initialViewportSpot\",i,t))}get initialDocumentSpot(){return this.Ux}set initialDocumentSpot(t){const i=this.Ux;i!==t&&(U.e(t,Spot,Diagram,\"initialDocumentSpot\"),t.isSpot()||U.n(\"initialViewportSpot must be a specific Spot: \"+t),this.Ux=t,this.t(\"initialDocumentSpot\",i,t))}get minScale(){return this.Ex}set minScale(t){U.r(t,Diagram,\"minScale\");const i=this.Ex;i!==t&&(t>0?(this.Ex=t,this.t(\"minScale\",i,t),t>this.scale&&(this.scale=t)):U.U(t,\"> 0\",Diagram,\"minScale\"))}get maxScale(){return this.Bx}set maxScale(t){U.r(t,Diagram,\"maxScale\");const i=this.Bx;i!==t&&(t>0?(this.Bx=t,this.t(\"maxScale\",i,t),t<this.scale&&(this.scale=t)):U.U(t,\"> 0\",Diagram,\"maxScale\"))}get zoomPoint(){return this.Vx}set zoomPoint(t){this.Vx.equals(t)||(U.e(t,Point,Diagram,\"zoomPoint\"),t=t.N(),this.Vx=t)}get contentAlignment(){return this.Xf}set contentAlignment(t){const i=this.Xf;i.equals(t)||(U.e(t,Spot,Diagram,\"contentAlignment\"),t=t.N(),this.Xf=t,this.t(\"contentAlignment\",i,t),this.Gs(!1))}get initialContentAlignment(){return this.Ym}set initialContentAlignment(t){const i=this.Ym;i.equals(t)||(U.e(t,Spot,Diagram,\"initialContentAlignment\"),t=t.N(),this.Ym=t,this.t(\"initialContentAlignment\",i,t))}get padding(){return this.ei}set padding(t){typeof t==\"number\"?t=new Margin(t):U.e(t,Margin,Diagram,\"padding\");const i=this.ei;i.equals(t)||(t=t.N(),this.ei=t,this.invalidateDocumentBounds(),this.t(\"padding\",i,t))}get partManager(){return this.A2}set partManager(t){const i=this.A2;i!==t&&(U.e(t,PartManager,Diagram,\"partManager\"),t.diagram!==null&&U.n(\"Cannot share PartManagers between Diagrams: \"+t.toString()),i&&i.Do(null),this.A2=t,t.Do(this))}get nodes(){return this.partManager.nodes.iterator}get links(){return this.partManager.links.iterator}get parts(){return this.partManager.parts.iterator}findTopLevelNodesAndLinks(){const t=new GSet,i=this.nodes;for(;i.next();){const s=i.value;s.isTopLevel&&t.add(s)}const e=this.links;for(;e.next();){const s=e.value;s.isTopLevel&&t.add(s)}return t.iterator}findTopLevelGroups(){return this.Wr.iterator}get routers(){return this.jf}doLinkRouting(t){this.Ro=!0;const i=this.jf.h;for(let e=0;e<i.length;e++)i[e].canRoute(t)&&i[e].routeLinks(this.Dr,t);this.Ro=!1}get layout(){return this.oe}set layout(t){const i=this.oe;i!==t&&(U.e(t,Layout,Diagram,\"layout\"),this.oe=t,t.diagram=this,t.group=null,this.qr=!0,this.t(\"layout\",i,t),this.requestUpdate())}layoutDiagram(t){this.Ti(),t&&this.z1(!0),this.Ss?this.H2(!1,this.Nl||this.jf.count!==0&&this.jn.size!==0):(this.Kf=!0,this.xr())}z1(t){const i=this.Wr.iterator;for(;i.next();)this.lL(i.value,t);this.layout&&(t?this.layout.isValidLayout=!1:this.layout.invalidateLayout())}lL(t,i){if(t===null)return;const e=t.pa.iterator;for(;e.next();){const s=e.value;this.lL(s,i)}t.layout!==null&&(i?t.layout.isValidLayout=!1:t.layout.invalidateLayout())}H2(t,i){if(this.Qx)return;const e=this.H;this.H=!0;const s=\"Layout\",n=this.undoManager.transactionLevel,o=this.layout,r=this.animationManager;try{n===0&&(this.undoManager.Ml=!0,this.startTransaction(s)),n<=1&&!r.defaultAnimation.isAnimating&&!r.bi&&(t||r.Bl(s)),this.qr=!1;let l=this.Wr.iterator;for(;l.next();)this.hL(l.value,t,n,i);let h=!1;if(o.isValidLayout||(!t||o.isRealtime||o.isRealtime===null||n===0?(o.doLayout(this),this.h0(this),h=!0,o.isValidLayout=!0):this.qr=!0),h||this.h0(this),this.doLinkRouting(this),this.Dr.clear(),this.sa.size!==0){for(let f=0;f<23&&this.sa.size!==0;f++){for(l=this.Wr.iterator;l.next();)this.aL(l.value);const a=this.Dr;this.Dr=this.sa,this.sa=a,this.h0(this),this.doLinkRouting(this)}this.Dr.clear(),this.sa.clear()}}finally{const l=this.undoManager.Ml;n===0&&(this.commitTransaction(s),this.undoManager.Ml=!1),l&&(n===0||n===1)&&r.KM(),this.qr&&(this.qr=!o.isValidLayout),this.H=e}}hL(t,i,e,s){const n=t.pa.iterator;for(;n.next();)this.hL(n.value,i,e,s);const o=t.layout;o!==null&&!o.isValidLayout?!i||o.isRealtime||e===0?(t.ya=!t.location.isReal(),o.doLayout(t),t.invalidateLayout(32),this.O1(t),this.h0(t),this.doLinkRouting(t),o.isValidLayout=!0):(this.doLinkRouting(t),this.qr=!0):s&&this.doLinkRouting(t)}aL(t){const i=t.pa.iterator;for(;i.next();)this.aL(i.value);this.h0(t),this.doLinkRouting(t)}get isTreePathToChildren(){return this.Hx}set isTreePathToChildren(t){const i=this.Hx;if(i!==t&&(U.i(t,\"boolean\",Diagram,\"isTreePathToChildren\"),this.Hx=t,this.t(\"isTreePathToChildren\",i,t),!this.undoManager.isUndoingRedoing)){const e=this.nodes;for(;e.next();)e.value.d0()}}findTreeRoots(){const t=new List,i=this.nodes;for(;i.next();){const e=i.value;e.isTopLevel&&e.findTreeParentLink()===null&&t.add(e)}return t.iterator}get treeCollapsePolicy(){return this.qx}set treeCollapsePolicy(t){const i=this.qx;i!==t&&(t!==1&&t!==2&&t!==3&&U.n(\"Unknown Diagram.treeCollapsePolicy: \"+t),this.qx=t,this.t(\"treeCollapsePolicy\",i,t))}get isCollapsingExpanding(){return this.h2}set isCollapsingExpanding(t){this.h2=t}dR(){const t=new GMap,i=new GMap;function e(s){const n=s.toLowerCase(),o=new List;t.set(s,o),t.set(n,o),i.set(s,s),i.set(n,s)}e(\"InitialAnimationStarting\"),e(\"AnimationStarting\"),e(\"AnimationFinished\"),e(\"BackgroundSingleClicked\"),e(\"BackgroundDoubleClicked\"),e(\"BackgroundContextClicked\"),e(\"ClipboardChanged\"),e(\"ClipboardPasted\"),e(\"DocumentBoundsChanged\"),e(\"ExternalObjectsDropped\"),e(\"GainedFocus\"),e(\"InitialLayoutCompleted\"),e(\"LayoutCompleted\"),e(\"LinkDrawn\"),e(\"LinkRelinked\"),e(\"LinkReshaped\"),e(\"LostFocus\"),e(\"Modified\"),e(\"ObjectSingleClicked\"),e(\"ObjectDoubleClicked\"),e(\"ObjectContextClicked\"),e(\"PartCreated\"),e(\"PartResized\"),e(\"PartRotated\"),e(\"SelectionMoved\"),e(\"SelectionCopied\"),e(\"SelectionDeleting\"),e(\"SelectionDeleted\"),e(\"SelectionGrouped\"),e(\"SelectionUngrouped\"),e(\"ChangingSelection\"),e(\"ChangedSelection\"),e(\"SubGraphCollapsed\"),e(\"SubGraphExpanded\"),e(\"TextEdited\"),e(\"ThemeChanged\"),e(\"TreeCollapsed\"),e(\"TreeExpanded\"),e(\"ViewportBoundsChanged\"),e(\"InvalidateDraw\"),this.o2=t,this.l2=i}jA(t){const i=this.l2.get(t);return i!==null?i:this.l2.get(t.toLowerCase())}iP(t){let i=this.o2.get(t);if(i!==null)return i;const e=t.toLowerCase();if(i=this.o2.get(e),i!==null)return i;U.n(\"Unknown DiagramEvent name: \"+t)}addDiagramListener(t,i){U.i(t,\"string\",Diagram,\"addDiagramListener:name\"),U.P(i,Diagram,\"addDiagramListener:listener\");const e=this.iP(t);return e!==null&&e.add(i),this}removeDiagramListener(t,i){U.i(t,\"string\",Diagram,\"removeDiagramListener:name\"),U.P(i,Diagram,\"addDiagramListener:listener\");const e=this.iP(t);e!==null&&e.delete(i)}raiseDiagramEvent(t,i,e){this.O(t,i,e)}O(t,i,e){Debug&&U.i(t,\"string\",Diagram,\"raiseDiagramEvent:name\");const s=this.iP(t),n=new DiagramEvent;n.diagram=this;const o=this.jA(t);o!==null&&(n.name=o),i!==void 0&&(n.subject=i),e!==void 0&&(n.parameter=e);const r=s.length;if(r===1)s.elt(0)(n);else if(r!==0){const l=s.toArray();for(let h=0;h<r;h++){const f=l[h];f(n)}}}isUnoccupied(t,i){return this.getPositions(!1,null,i||null).isUnoccupied(t.x,t.y,t.width,t.height)}computeOccupiedArea(t){return this.isVirtualized?this.viewportBounds.copy():this.ra?this.HA(t):t.c(this.documentBounds)}getPositions(t,i,e){let s=this.Zl;s===null&&(this.Zl=s=new PositionArray(this.avoidanceCellSize));let n=i;if(s.Vo||s.wa!==n||s.eP!==e){if(s.sP=Math.max(s.Zf+1,Math.floor(this.avoidanceLimit/this.avoidanceCellSize.width)),s.nP=Math.max(s.Zf+1,Math.floor(this.avoidanceLimit/this.avoidanceCellSize.height)),n!==null&&(n=this.fL(n)),n===null){const o=Rect.a();this.computeOccupiedArea(o),o.inflate(100,100),s.X1(o);const r=this.nodes;for(;r.next();){const l=r.value,h=l.layer;h===null||!h.visible||h.isTemporary||this.oP(l,e,o)}Rect.o(o)}else{if(n.memberParts.count>0){const l=this.computePartsBounds(n.memberParts,!1);l.inflate(20,20),s.X1(l)}const o=Rect.a(),r=n.memberParts;for(;r.next();){const l=r.value;l instanceof Node&&this.oP(l,e,o)}Rect.o(o)}s.wa=n,s.eP=e,s.Vo=!1}else t&&s.cL();return s}get avoidanceCellSize(){return this.M2}set avoidanceCellSize(t){this.Zl=null,this.M2=new Size(Math.max(1,t.width),Math.max(1,t.height))}get avoidanceLimit(){return this.P2}set avoidanceLimit(t){this.P2=Math.max(1,t)}fL(t){return t.canAvoid()?t:t.containingGroup!==null?this.fL(t.containingGroup):null}oP(t,i,e){if(t===i||!t.isVisible())return;const s=t.canAvoid();if(s){const n=t.getAvoidableRect(e);this.Zl.WR(n.x,n.y,n.width,n.height)}if(t instanceof Group&&(!s||t.avoidableMembers)){const n=t.memberParts;for(;n.next();){const o=n.value;o instanceof Node&&this.oP(o,i,e)}}}rP(t){this.Zl!==null&&!this.Zl.Vo&&(t===void 0||t.canAvoid())&&(this.Zl.Vo=!0)}get autoScrollInterval(){return this.Km}set autoScrollInterval(t){const i=this.Km;U.r(t,Diagram,\"autoScrollInterval\"),i!==t&&(this.Km=t,this.t(\"autoScrollInterval\",i,t))}get autoScrollRegion(){return this.Um}set autoScrollRegion(t){typeof t==\"number\"?t=new Margin(t):U.e(t,Margin,Diagram,\"autoScrollRegion\");const i=this.Um;i.equals(t)||(t=t.N(),this.Um=t,this.invalidateDocumentBounds(),this.t(\"autoScrollRegion\",i,t))}doAutoScroll(t){this.vm.c(t),this.computeAutoScrollPosition(this.vm).equalsApprox(this.position)?this.stopAutoScroll():this.uL()}uL(){if(this.Yf!==-1)return;const t=this.Km,i=this;this.Yf=U.lr(()=>{if(i.Yf===-1||(i.stopAutoScroll(),i.lastInput.event===null))return;const s=i.computeAutoScrollPosition(i.vm);if(s.equalsApprox(i.position))return;i.position=s,i.lastInput.documentPoint=i.transformViewToDoc(i.vm),i.doMouseMove(),i.ra=!0;const n=Rect.a();i.computeBounds(n),n.unionRect(i.documentBounds),i.rL(n),Rect.o(n),i.Ue=!0,i.maybeUpdate(),i.uL()},t)}stopAutoScroll(){this.Yf!==-1&&(U.Bg(this.Yf),this.Yf=-1)}computeAutoScrollPosition(t){let i=this.position;const e=this.Um;if(e.top<=0&&e.left<=0&&e.right<=0&&e.bottom<=0)return i;const s=this.viewportBounds,n=this.scale,o=Rect.K(0,0,s.width*n,s.height*n),r=Point.K(0,0);if(t.x>=o.x&&t.x<o.x+e.left&&this.allowHorizontalScroll){let l=Math.max(this.scrollHorizontalLineChange,1);l=l|0,r.x-=l,t.x<o.x+e.left/2&&(r.x-=l),t.x<o.x+e.left/4&&(r.x-=4*l)}else if(t.x<=o.x+o.width&&t.x>o.x+o.width-e.right&&this.allowHorizontalScroll){let l=Math.max(this.scrollHorizontalLineChange,1);l=l|0,r.x+=l,t.x>o.x+o.width-e.right/2&&(r.x+=l),t.x>o.x+o.width-e.right/4&&(r.x+=4*l)}if(t.y>=o.y&&t.y<o.y+e.top&&this.allowVerticalScroll){let l=Math.max(this.scrollVerticalLineChange,1);l=l|0,r.y-=l,t.y<o.y+e.top/2&&(r.y-=l),t.y<o.y+e.top/4&&(r.y-=4*l)}else if(t.y<=o.y+o.height&&t.y>o.y+o.height-e.bottom&&this.allowVerticalScroll){let l=Math.max(this.scrollVerticalLineChange,1);l=l|0,r.y+=l,t.y>o.y+o.height-e.bottom/2&&(r.y+=l),t.y>o.y+o.height-e.bottom/4&&(r.y+=4*l)}return r.equalsApprox(Point.No)||(i=new Point(i.x+r.x/n,i.y+r.y/n)),Rect.o(o),Point.o(r),i}makeSvg(t){this._l.has(\"SVG\")||this.addRenderer(\"SVG\",new SVGSurface(this,root.document));const i=new SVGSurface(this,root.document,!0);t===void 0&&(t={});const e=this;function s(n,o){const r=e.dL(n,\"SVG\",i),l=r!==null?r.svg:null;return U.rt(o)?(o(l),null):l}return this.gL(s,t)}makeSVG(t){return this.makeSvg(t)}addRenderer(t,i){this._l.set(t,i)}removeRenderer(t){this._l.delete(t)}cacheGroupExternalLinks(t){this.E2=t,t||this.nodes.each(i=>{i instanceof Group&&(i.g0=null)})}gL(t,i){const e=i.callback;let s=!0;const o=this.th.iterator;for(;o.next();)if(!o.value[0].gn){s=!1;break}if(!U.rt(e)||s)return t(i,e,this);const r=this;function l(){const a=+new Date;for(s=!0,o.reset();o.next();)if(!o.value[0].gn){s=!1;break}if(s||a-f>h){t(i,e,r);return}root.requestAnimationFrame(l)}const h=i.callbackTimeout||300,f=+new Date;return root.requestAnimationFrame(()=>l()),null}makeImage(t){return Diagram.isUsingDOM()?(t===void 0&&(t={}),t.returnType=\"Image\",this.makeImageData(t)):null}makeImageData(t){return t===void 0&&(t={}),this.gL(this.jR,t)}static img=\"image\";jR(t,i,e){const s=e.dL(t,\"canvas\",null);if(s===null)return null;const n=s.z.canvas;let o=null;if(n!==null){let r=t.returnType;switch(r===void 0?r=\"string\":r=r.toLowerCase(),r){case Diagram.img+\"data\":o=s.getImageData(0,0,n.width,n.height);break;case Diagram.img:const h=(t.document||document).createElement(\"img\");h.src=n.toDataURL(t.type,t.details),o=h;break;case\"blob\":{const f=n;return U.rt(i)||(o=\"\",U.n('Error: Diagram.makeImageData called with \"returnType: toBlob\", but no required \"callback\" function property defined.')),U.rt(f.toBlob)?(f.toBlob(i,t.type,t.details),\"toBlob\"):(i(null),null)}case\"string\":default:o=n.toDataURL(t.type,t.details)}}return U.rt(i)?(i(o),null):o}static mL=!1;dL(t,i,e){if(this.animationManager.stopAnimation(),this.maybeUpdate(),this.wt===null)return null;U.W(t)||U.n(\"properties argument must be an Object.\");let n=!1,o=t.size||null,r=t.scale||null;t.scale!==void 0&&isNaN(t.scale)&&(r=\"NaN\");let l=t.maxSize;t.maxSize===void 0&&(n=!0,i===\"SVG\"?l=new Size(1/0,1/0):l=new Size(2e3,2e3));const h=t.position||null;let f=t.parts||null;Array.isArray(f)&&(f=new List(f));let a=t.padding===void 0?1:t.padding;const c=t.background||null;let u=t.omitTemporary;u===void 0&&(u=!0);const d=t.document||document,m=t.elementFinished||null;let g=t.showTemporary;g===void 0&&(g=!u);let p=t.showGrid;p===void 0&&(p=g),o!==null&&isNaN(o.width)&&isNaN(o.height)&&(o=null),typeof a==\"number\"?a=new Margin(a):a instanceof Margin||U.n(\"MakeImage padding must be a Margin or a number.\"),a.left=Math.max(a.left,0),a.right=Math.max(a.right,0),a.top=Math.max(a.top,0),a.bottom=Math.max(a.bottom,0),this.si.clearContextCache(!0);const w=new CanvasSurface(null,d,void 0,!0),x=w.ci;if(!(o||r||f||h))return w.width=this.Pt+Math.ceil(a.left+a.right),w.height=this.Nt+Math.ceil(a.top+a.bottom),i===\"SVG\"?e===null?null:(e.resize(w.width,w.height,w.width,w.height),e.Zr=d,e.$u=m,this.E1(e.ci,a,new Size(w.width,w.height),this.ot,this.gt,f,c,g,p),e.ci):(this.qu=!1,this.E1(x,a,new Size(w.width,w.height),this.ot,this.gt,f,c,g,p),this.qu=!0,w.ci);const k=this.$m,b=this.documentBounds.copy();if(b.subtractMargin(this.ei),g){const L=this.Wt.h,D=L.length;for(let F=0;F<D;F++){const I=L[F];if(!I.visible||!I.isTemporary)continue;const R=I.Ft.h,O=R.length;for(let Y=0;Y<O;Y++){const K=R[Y];if(!K.isInDocumentBounds||!K.isVisible())continue;const B=K.actualBounds;B.isReal()&&b.unionRect(B)}}}let S=new Point(b.x,b.y);if(f!==null){const L=new Rect(0,0,0,0);let D=!0;const F=f.iterator;for(F.reset();F.next();){const I=F.value;if(!(I instanceof Part))continue;const R=I.layer;if(R!==null&&!R.visible||R!==null&&!g&&R.isTemporary||!I.isVisible())continue;const O=I.actualBounds;O.isReal()&&(D?(D=!1,L.c(O)):L.unionRect(O))}b.width=L.width,b.height=L.height,S.x=L.x,S.y=L.y}h!==null&&h.isReal()&&(S=h,r||(r=k));let M=0,A=0;a!==null&&(M=a.left+a.right,A=a.top+a.bottom);let C=0,P=0;o!==null&&(C=o.width,P=o.height,isFinite(C)&&(C=Math.max(0,C-M)),isFinite(P)&&(P=Math.max(0,P-A)));let N=0,T=0;if(o!==null&&r!==null?(r===\"NaN\"&&(r=k),o.isReal()?(N=C,T=P):isNaN(P)?(N=C,T=b.height*r):(N=b.width*r,T=P)):o!==null?o.isReal()?(r=Math.min(C/b.width,P/b.height),N=C,T=P):isNaN(P)?(r=C/b.width,N=C,T=b.height*r):(r=P/b.height,N=b.width*r,T=P):r!==null?r===\"NaN\"&&l.isReal()?(r=Math.min((l.width-M)/b.width,(l.height-A)/b.height),r>k?(r=k,N=b.width,T=b.height):(N=l.width,T=l.height)):(N=b.width*r,T=b.height*r):(r=k,N=b.width,T=b.height),a!==null?(N+=M,T+=A):a=new Margin(0),l!==null){let L=l.width,D=l.height;i!==\"SVG\"&&n&&!Diagram.mL&&Debug&&(N>L||T>D)&&(U.nt(\"Diagram.makeImage(data): Diagram width or height is larger than the default max size. (\"+Math.ceil(N)+\"x\"+Math.ceil(T)+\" vs 2000x2000) Consider increasing the max size.\"),Diagram.mL=!0),isNaN(L)&&(L=2e3),isNaN(D)&&(D=2e3),isFinite(L)&&(N=Math.min(N,L)),isFinite(D)&&(T=Math.min(T,D))}return w.width=Math.ceil(N),w.height=Math.ceil(T),i===\"SVG\"?e===null?null:(e.resize(w.width,w.height,w.width,w.height),e.Zr=d,e.$u=m,this.E1(e.ci,a,new Size(Math.ceil(N),Math.ceil(T)),r,S,f,c,g,p),e.ci):(this.qu=!1,this.E1(x,a,new Size(Math.ceil(N),Math.ceil(T)),r,S,f,c,g,p),this.qu=!0,w.ci)}static vu=null;static pL=\"5da73c80a36555d4038e4972187c3cae51fd22\";static kw=!1;static Zk=()=>{if(Diagram.pL[5]===void 0&&(Transform.prototype.is=Transform.prototype.Tw),!Diagram.isUsingDOM())return;const t=U.ds(\"canvas\"),i=t.getContext(\"2d\"),e=U.Os(\"7ca11abfd022028846\");i[e]=U.Os(\"398c3597c01238\");const s=\"7ca11abfd7330390\",n=[Diagram.pL,U.kw+\"4ae6247590da4bb21c324ba3a84e385776\",Transform.Zk+\"fb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387\",Geo.za],o=10,r=0;for(let l=1;l<5;l++)i[U.Os(s)](U.Os(n[l-1]),o,l*15+r);i[e]=U.Os(\"39f046ebb36e4b\");for(let l=1;l<5;l++)i[U.Os(s)](U.Os(n[l-1]),o,l*15+r);(n.length!==4||n[0][0]!==\"5\"||n[3][0]!==\"7\")&&(Transform.prototype.is=Transform.prototype.Tw),Diagram.vu=t}}class DiagramHelper{yL;wL;lP;De;constructor(t){if(this.yL=null,this.wL=\"63ad05bbe23a1786468a4c741b6d2\",this.lP=\"@onz\",this.wL===this._tk){this.lP=!0,this.De=this.lP;return}this.De=null}vR(t,i){let e=\"f\";const s=root[U.Os(\"76a715b2f73f148a\")][U.Os(\"72ba13b5\")]||\"\",n=U.Os;if(this.De=!0,!Diagram.isUsingDOM())return;let o=Diagram[n(\"76a115b6ed251eaf4692\")];if(!o){const l=s[n(\"76ad18b4f73e\")];for(let f=s[n(\"73a612b6fb191d\")](n(\"35e7\"))+2;f<l;f++)e+=s[f];const h=e[n(\"73a612b6fb191d\")](n(\"7da71ca0ad381e90\"));this.De=!(h>=0&&h<e[n(\"73a612b6fb191d\")](n(\"35\")));return}const r=Diagram.Q2.iterator;for(;r.next();){o=r.value;const l=n(o).split(n(\"39e9\"));if(l.length<6)return;const h=n(l[1]).split(\".\");if(l[4]!==\"7da71ca0\")return;const f=n(U[n(\"6cae19\")]).split(\".\");if(!(h[0]>f[0]||h[0]===f[0]&&h[1]>=f[1]))continue;const a=\"73a612b6fb191d\",c=root[n(\"74a900bae4370f8b51\")][n(\"6fbb13a1c2311e8a57\")].toLowerCase(),u=c[n(a)](n(\"3aad1ab6e022098b4dc4\")),d=n(l[2]);if(u>-1){const P=c[n(a)](d.toLowerCase()+\"/\");if(this.De=!(P>-1&&P<u),!this.De)return}const m=s[n(\"76ad18b4f73e\")];for(let P=s[n(a)](n(\"35e7\"))+2;P<m;P++)e+=s[P];let g=e[n(a)](d);if(g<0&&d!==n(\"7da71ca0ad381e90\")&&(g=e[n(a)](n(\"76a715b2ef3e149757\"))),g<0&&(g=e[n(a)](n(\"76a715b2ef3e149757\"))),g<0&&(g=e[n(a)](n(\"2bfa41fdb3784bca12\"))),g<0&&(g=s[n(a)](n(\"7baa19a6f76c1988428554\"))),g<0&&(g=s[n(a)](n(\"7ea902b2b9221e9c57c45767196566\"))),this.De=!(g>=0&&g<e[n(a)](n(\"35\"))||e[n(a)](n(\"35\"))===-1),!this.De||s[n(a)](n(\"7fb002b6ed25128b4da25b2e\"))&&(this.De=!(s[n(a)](d)>-1),!this.De))return;const p=root[U.Os(\"76a715b2f73f148a\")][U.Os(\"69ad17a1e03e\")],w=p[n(a)](n(\"7fb002b6ed25128b4da25b2e\"));if(w>-1&&(this.De=!(p[n(a)](d)>w),!this.De))return;const x=d;if(x[0]!==\"#\")continue;const k=U.ds(\"div\");let b=l[0].replace(/[A-Za-z]/g,\"\");for(;b.length<4;)b+=\"9\";const S=b;b=b.substring(b.length-4);let M=\"\";const A=[\"gsh\",\"gsf\"],C=[\"Header\",\"Background\",\"Display\",\"Feedback\"];if(M+=A[parseInt(b.substring(0,1),10)%2],M+=C[parseInt(b.substring(0,1),10)%4],k[n(\"79a417a0f0181a8946\")]=M,root.document[n(\"78a712aa\")]){root.document[n(\"78a712aa\")][n(\"7bb806b6ed32388c4a875b\")](k);const P=root.getComputedStyle(k).getPropertyValue(n(\"78a704b7e62456904c9b12701b6532a8\")),N=root.getComputedStyle(k).getPropertyValue(n(\"75b817b0ea2202\"));if(root.document[n(\"78a712aa\")][n(\"68ad1bbcf533388c4a875b\")](k),!P)continue;const T=root[n(\"77a902b0eb1b1e804a8a\")],L=\"0.\"+parseInt(S,10)%100;if(N===L||P.indexOf(parseInt(x[1]+x[2],16))!==-1&&P.indexOf(parseInt(x[3]+x[4],16))!==-1){this.De=!1;return}else if(T&&T(n(\"32ae19a1e0331fc94084537c067a67fa59f1386b89d006\")).matches){M=\".\"+M;for(let D=0;D<document.styleSheets.length;D++){const F=document.styleSheets[D].rules||document.styleSheets[D].cssRules;for(const I in F)if(M===F[I].selectorText){this.De=!1;return}}}}else this.De=null,i&&(this.De=!1)}}vu(t){return t.si.setTransform(t.Hi,0,0,t.Hi,0,0),t.si.commitTransform(),this.De===null&&this.vR(t,!0),0<this.De&&this!==this.yL}}class DraggingInfo{hP;aP;constructor(t){this.hP=t===void 0?new Point:t,this.aP=new Point}get point(){return this.hP}set point(t){this.hP=t}get shifted(){return this.aP}set shifted(t){this.aP=t}}class DraggingNodeInfoPair{Te;QA;V1;constructor(t,i,e){this.Te=t,this.QA=i,this.V1=e}}class DraggingOptions{isGridSnapEnabled;isGridSnapRealtime;gridSnapCellSize;gridSnapCellSpot;gridSnapOrigin;dragsLink;dragsTree;groupsSnapMembers;groupsAlwaysMove;dragsMembers;constructor(t){this.Vi(),t&&Object.assign(this,t)}Vi(){this.isGridSnapEnabled=!1,this.isGridSnapRealtime=!0,this.gridSnapCellSize=new Size(NaN,NaN).p(),this.gridSnapCellSpot=Spot.TopLeft,this.gridSnapOrigin=new Point(NaN,NaN).p(),this.dragsLink=!1,this.dragsTree=!1,this.groupsSnapMembers=!1,this.groupsAlwaysMove=!0,this.dragsMembers=!0}}class Palette extends Diagram{constructor(t,i){let e;return t===void 0||typeof t==\"string\"||root.Element&&t instanceof Element?e=t:U.W(t)&&(i=t),super(e),this.xL(),i&&this.setProperties(i),this}xL(){this.allowDragOut=!0,this.allowMove=!1,this.isReadOnly=!0,this.contentAlignment=Spot.TopCenter,this.layout=new GridLayout}setupRouters(){}reset(){super.reset(),this.xL()}}class Overview extends Diagram{Y1;K1;U1;G1;m0;Qf;Il;fP;cP;H1;uP;constructor(t,i){let e;return t===void 0||typeof t==\"string\"||root.Element&&t instanceof Element?e=t:U.W(t)&&(i=t),super(e),this.animationManager.isEnabled=!1,this.Zt=!0,this.Y1=null,this.Xu=!1,this.Yu=!1,this.K1=!0,this.U1=!0,this.G1=0,this.m0=!1,this.Qf=null,this.setRenderingHint(\"drawShadows\",!1),this.Il=new Part({selectable:!0,selectionAdorned:!1,selectionObjectName:\"BOXSHAPE\",locationObjectName:\"BOXSHAPE\",resizeObjectName:\"BOXSHAPE\",cursor:\"move\"}).add(new Shape({name:\"BOXSHAPE\",fill:\"transparent\",stroke:\"magenta\",strokeWidth:2}).theme(\"stroke\",\"overviewBox\")).Kt(),this.allowCopy=!1,this.allowDelete=!1,this.allowDrop=!1,this.allowSelect=!0,this.autoScrollRegion=new Margin(0,0,0,0),this.gt.s(0,0),this.toolManager.ti(\"Dragging\",new OverviewDraggingTool,this.toolManager.mouseMoveTools),this.click=()=>{const s=this.observed;if(s===null)return;const n=s.viewportBounds,o=this.lastInput.documentPoint;s.position=new Point(o.x-n.width/2,o.y-n.height/2)},this.fP=s=>{this.invalidateDocumentBounds(),this.p0()},this.cP=s=>{this.observed!==null&&(this.invalidateDocumentBounds(),this.L())},this.H1=s=>{this.updateDelay<1?this.L():this.m0||(this.m0=!0,U.lr(()=>this.redraw(),this.updateDelay))},this.uP=s=>{this.observed!==null&&this.p0()},this.autoScale=2,this.Zt=!1,i&&Object.assign(this,i),this}setupRouters(){}computePixelRatio(){return 1}redraw(){this.m0&&this.updateDelay>=1&&(this.m0=!1,this.JR()),super.redraw()}Ui(){if(this.Tt===null&&U.n(\"No div specified\"),this.wt===null&&U.n(\"No canvas specified\"),this.wt instanceof SVGSurface||(this.box.e2(),!this.Ue))return;const t=this.observed;if(t===null||t.animationManager.defaultAnimation.isAnimating||!t.qh)return;this.a0();const i=this.wt,e=this.si;if(e.clearContextCache(!0),e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,i.width,i.height),this.updateDelay<1)this.bL();else if(this.Qf!==null){e.drawImage(this.Qf.Et,0,0);const o=this.F;e.scale(this.Hi,this.Hi),e.transform(o.m11,o.m12,o.m21,o.m22,o.dx,o.dy),e.commitTransform()}const s=this.Wt.h,n=s.length;for(let o=0;o<n;o++)s[o].Ui(e,this);this.Gf=!1,this.Ue=!1}JR(){const t=this.wt,i=this.si;if(!(t===null||i===null)){if(this.a0(),this.Qf===null){const e=new CanvasSurface(null);e.width=t.width,e.height=t.height,this.Qf=e}try{this.wt=this.Qf,this.si=this.wt.ci,this.si.clearContextCache(!0),this.si.setTransform(1,0,0,1,0,0),this.si.clearRect(0,0,this.wt.width,this.wt.height),this.bL()}finally{this.wt=t,this.si=i}}}bL(){const t=this.observed;if(t===null)return;const i=this.drawsTemporaryLayers,e=this.drawsGrid&&i,s=t.grid;if(e&&s!==null&&s.visible&&!(isNaN(s.width)||isNaN(s.height))){const a=Rect.a().c(this.viewportBounds).unionRect(t.viewportBounds);t.lh(a),Rect.o(a),t.Ti()}const n=this.F,o=this.si;o.scale(this.Hi,this.Hi),o.transform(n.m11,n.m12,n.m21,n.m22,n.dx,n.dy),o.commitTransform();const r=this.viewportBounds,l=t.Wt.h,h=l.length,f=this.Wt.h;this.ks(f,f.length,this,this.viewportBounds);for(let a=0;a<h;a++)l[a].ZF(o,r,this,i,e)}get observed(){return this.Y1}set observed(t){const i=this.Y1;if(t!==null&&U.e(t,Diagram,Overview,\"observed\"),t instanceof Overview&&U.n(\"Overview.observed Diagram may not be an Overview itself: \"+t),i!==t){if(i!==null&&this.$R(i),this.Y1=t,t!==null&&this.ZR(t),this.invalidateDocumentBounds(),t===null){this.Qf=null;const e=this.wt,s=this.si;e&&s&&(s.setTransform(1,0,0,1,0,0),s.clearRect(0,0,e.width,e.height))}else this.H1(null),this.p0(),this.L();this.t(\"observed\",i,t)}}get box(){return this.Il}set box(t){const i=this.Il;i!==t&&(U.e(t,Part,Overview,\"box\"),t.Kt(),this.Il=t,this.remove(i),this.add(this.Il),this.p0(),this.t(\"box\",i,t))}get drawsTemporaryLayers(){return this.K1}set drawsTemporaryLayers(t){this.K1!==t&&(this.K1=t,this.redraw())}get drawsGrid(){return this.U1}set drawsGrid(t){this.U1!==t&&(this.U1=t,this.redraw())}get updateDelay(){return this.G1}set updateDelay(t){t<0&&(t=0),this.G1!==t&&(this.G1=t)}ZR(t){t!==null&&(t.addDiagramListener(\"ViewportBoundsChanged\",this.fP),t.addDiagramListener(\"DocumentBoundsChanged\",this.cP),t.addDiagramListener(\"InvalidateDraw\",this.H1),t.addDiagramListener(\"AnimationFinished\",this.uP),this.add(this.box))}$R(t){t!==null&&(this.remove(this.box),t.removeDiagramListener(\"ViewportBoundsChanged\",this.fP),t.removeDiagramListener(\"DocumentBoundsChanged\",this.cP),t.removeDiagramListener(\"InvalidateDraw\",this.H1),t.removeDiagramListener(\"AnimationFinished\",this.uP))}p0(){const t=this.box,i=this.observed;if(i===null)return;this.Ue=!0;const e=i.viewportBounds,s=t.selectionObject,n=Size.a();n.s(e.width,e.height),s.desiredSize=n,Size.o(n);const o=2/this.scale;s instanceof Shape&&(s.strokeWidth=o),t.location=new Point(e.x-o/2,e.y-o/2),t.isSelected=!0}computeBounds(){const t=this.observed;if(t===null)return Rect.zg;const i=t.documentBounds.copy();return i.unionRect(t.viewportBounds),i}invalidateViewport(t,i){this.Ue!==!0&&(this.Ue=!0,this.requestUpdate())}onViewportBoundsChanged(t,i,e,s){this.Zt||(this.oh(),this.L(),this.ma(),this.invalidateDocumentBounds(),this.p0(),this.Gi.scale=e,this.Gi.position.x=t.x,this.Gi.position.y=t.y,this.Gi.bounds.c(t),this.Gi.isScroll=s,this.O(\"ViewportBoundsChanged\",this.Gi,t))}}class OverviewDraggingTool extends DraggingTool{ah;constructor(){super(),this.ah=null}canStart(){if(!this.isEnabled)return!1;const t=this.diagram;if(t===null||!t.allowMove||!t.allowSelect)return!1;const i=t.observed;if(i===null)return!1;const e=t.lastInput;if(!e.left||t.currentTool!==this&&(!this.isBeyondDragSize()||e.isTouchEvent&&e.timestamp-t.firstInput.timestamp<this.delay))return!1;if(this.findDraggablePart()===null){const n=i.viewportBounds;this.ah=new Point(n.width/2,n.height/2);const o=t.firstInput.documentPoint;i.position=new Point(o.x-this.ah.x,o.y-this.ah.y)}return!0}doActivate(){this.ah=null,super.doActivate()}doUpdateCursor(t){const i=this.diagram,e=i.box;e!==null&&e.cursor&&(i.currentCursor=e.cursor)}moveParts(t,i,e){e===void 0&&(e=!1);const s=this.diagram,n=s.observed;if(n===null)return;const o=s.box;if(o===null)return;if(this.ah===null){const l=s.firstInput.documentPoint,h=o.location;this.ah=new Point(l.x-h.x,l.y-h.y)}const r=s.lastInput.documentPoint;n.position=new Point(r.x-this.ah.x,r.y-this.ah.y)}}class CommandHandler{C;dP;gP;mP;pP;yP;wP;xP;bP;fh;kP;q1;W1;j1;v1;SP;zo;MP;constructor(t){GSet.Ji(this),this.C=Diagram.wm(),this.dP=!0,this.gP=!0,this.mP=!0,this.pP=!1,this.yP=!1,this.wP=!1,this.xP=!1,this.bP=null,this.fh=null,this.kP=1.05,this.q1=NaN,this.W1=null,this.j1=NaN,this.v1=Rect.zg,this.SP=!1,this.zo=null,this.MP=200,t&&Object.assign(this,t)}toString(){return\"CommandHandler\"}get diagram(){return this.C}Do(t){this.C=t}doStart(){}doStop(){}doKeyDown(){const t=this.diagram,i=t.lastInput,e=U.rr?i.meta:i.control,s=i.shift,n=i.alt,o=i.commandKey;e&&(o===\"Insert\"||o===\"c\")?this.canCopySelection()&&this.copySelection():e&&o===\"x\"||s&&o===\"Delete\"?this.canCutSelection()&&this.cutSelection():e&&o===\"v\"||s&&o===\"Insert\"?this.canPasteSelection()&&this.pasteSelection():e&&o===\"y\"||e&&s&&o===\"z\"||n&&s&&o===\"Backspace\"?this.canRedo()&&this.redo():e&&o===\"z\"||n&&o===\"Backspace\"?this.canUndo()&&this.undo():o===\"Delete\"||o===\"Backspace\"?this.canDeleteSelection()&&this.deleteSelection():e&&o===\"a\"?this.canSelectAll()&&this.selectAll():o===\"Escape\"?this.canStopCommand()&&this.stopCommand():o===\"ArrowUp\"?t.allowVerticalScroll&&(e?t.scroll(\"pixel\",\"up\"):t.scroll(\"line\",\"up\")):o===\"ArrowDown\"?t.allowVerticalScroll&&(e?t.scroll(\"pixel\",\"down\"):t.scroll(\"line\",\"down\")):o===\"ArrowLeft\"?t.allowHorizontalScroll&&(e?t.scroll(\"pixel\",\"left\"):t.scroll(\"line\",\"left\")):o===\"ArrowRight\"?t.allowHorizontalScroll&&(e?t.scroll(\"pixel\",\"right\"):t.scroll(\"line\",\"right\")):o===\"PageUp\"?s&&t.allowHorizontalScroll?t.scroll(\"page\",\"left\"):t.allowVerticalScroll&&t.scroll(\"page\",\"up\"):o===\"PageDown\"?s&&t.allowHorizontalScroll?t.scroll(\"page\",\"right\"):t.allowVerticalScroll&&t.scroll(\"page\",\"down\"):o===\"Home\"?e&&t.allowVerticalScroll?t.scroll(\"document\",\"up\"):!e&&t.allowHorizontalScroll&&t.scroll(\"document\",\"left\"):o===\"End\"?e&&t.allowVerticalScroll?t.scroll(\"document\",\"down\"):!e&&t.allowHorizontalScroll&&t.scroll(\"document\",\"right\"):o===\"Space\"?this.canScrollToPart()&&this.scrollToPart():o===\"Minus\"||o===\"NumpadSubtract\"?this.canDecreaseZoom()&&this.decreaseZoom():o===\"Equal\"||o===\"NumpadAdd\"?this.canIncreaseZoom()&&this.increaseZoom():e&&o===\"Digit0\"?this.canResetZoom()&&this.resetZoom():s&&o===\"z\"?this.canZoomToFit()&&this.zoomToFit():e&&!s&&o===\"g\"?this.canGroupSelection()&&this.groupSelection():e&&s&&o===\"g\"?this.canUngroupSelection()&&this.ungroupSelection():o===\"F2\"?this.canEditTextBlock()&&this.editTextBlock():o===\"ContextMenu\"||s&&o===\"F10\"||e&&s&&o===\"Backslash\"?this.canShowContextMenu()&&this.showContextMenu():i.bubbles=!0}doKeyUp(){const i=this.diagram.lastInput;i.bubbles=!0}stopCommand(){const t=this.diagram,i=t.currentTool;i instanceof ToolManager&&t.allowSelect&&t.clearSelection(),i!==null&&i.doCancel()}canStopCommand(){return!0}selectAll(){const t=this.diagram;t.L();try{t.currentCursor=\"wait\",t.O(\"ChangingSelection\",t.selection);const i=t.parts;for(;i.next();){const n=i.value;n.canSelect()&&!n.layer.isTemporary&&(n.isSelected=!0)}const e=t.nodes;for(;e.next();){const n=e.value;n.canSelect()&&!n.layer.isTemporary&&(n.isSelected=!0)}const s=t.links;for(;s.next();){const n=s.value;n.canSelect()&&!n.layer.isTemporary&&(n.isSelected=!0)}}finally{t.O(\"ChangedSelection\",t.selection),t.currentCursor=\"\"}}canSelectAll(){return this.diagram.allowSelect}deleteSelection(){const t=this.diagram;try{t.currentCursor=\"wait\",t.O(\"ChangingSelection\",t.selection),t.startTransaction(\"Delete\"),t.O(\"SelectionDeleting\",t.selection);const i=new GSet,e=t.selection.iterator;for(;e.next();){const s=e.value;Part.ch(i,s,!0,this.deletesTree?1/0:0,this.deletesConnectedLinks?null:!1,n=>n.canDelete())}t.removeParts(i,!0),t.O(\"SelectionDeleted\",i)}finally{t.commitTransaction(\"Delete\"),t.O(\"ChangedSelection\",t.selection),t.currentCursor=\"\"}}canDeleteSelection(){const t=this.diagram;return!(t.isReadOnly||t.isModelReadOnly||!t.allowDelete||t.selection.count===0)}copySelection(){const t=this.diagram;try{const i=new GSet,e=t.selection.iterator;for(;e.next();){const s=e.value;Part.ch(i,s,!0,this.copiesTree?1/0:0,this.copiesConnectedLinks,n=>n.canCopy())}this.copyToClipboard(i)}finally{}}canCopySelection(){const t=this.diagram;return!(!t.allowCopy||!t.allowClipboard||t.selection.count===0)}cutSelection(){this.copySelection(),this.deleteSelection()}canCutSelection(){const t=this.diagram;return!(t.isReadOnly||t.isModelReadOnly||!t.allowCopy||!t.allowDelete||!t.allowClipboard||t.selection.count===0)}copyToClipboard(t){const i=this.diagram;let e=null;if(t===null)Diagram.zA();else{let s=null;try{s=i.copyParts(t,null,!0)}finally{e=new List,s!==null&&e.addAll(s.iteratorValues),Diagram.s0=e,Diagram.R1=i.model.dataFormat}}i.O(\"ClipboardChanged\",e)}pasteFromClipboard(){const t=new GSet,i=Diagram.s0;if(i===null)return t;const e=this.diagram;if(Diagram.R1!==e.model.dataFormat)return t;let s=null;try{s=e.copyParts(i,e,!1)}finally{if(s!==null){const n=s.iterator;for(;n.next();){const o=n.value,r=n.key;o.location.isReal()||(r.location.isReal()?o.location=r.location:!o.position.isReal()&&r.position.isReal()&&(o.position=r.position)),t.add(o)}}}return t}pasteSelection(t){t===void 0&&(t=null);const i=this.diagram;try{i.currentCursor=\"wait\",i.O(\"ChangingSelection\",i.selection),i.startTransaction(\"Paste\");const e=this.pasteFromClipboard();e.count>0&&i.clearSelection(!0);const s=e.iterator;for(;s.next();){const n=s.value;n.isSelected=!0}if(t!==null){const n=i.computePartsBounds(i.selection);if(n.isReal()){const o=this.computeEffectiveCollection(i.selection,i.T1);i.BS(o,new Point(t.x-n.centerX,t.y-n.centerY),i.T1,!1)}}i.O(\"ClipboardPasted\",e)}finally{i.commitTransaction(\"Paste\"),i.O(\"ChangedSelection\",i.selection),i.currentCursor=\"\"}}canPasteSelection(t){const i=this.diagram;return!(i.isReadOnly||i.isModelReadOnly||!i.allowInsert||!i.allowClipboard||Diagram.s0===null||Diagram.s0.count===0||Diagram.R1!==i.model.dataFormat)}undo(){this.diagram.undoManager.undo()}canUndo(){const t=this.diagram;return t.isReadOnly||t.isModelReadOnly?!1:t.allowUndo&&t.undoManager.canUndo()}redo(){this.diagram.undoManager.redo()}canRedo(){const t=this.diagram;return t.isReadOnly||t.isModelReadOnly?!1:t.allowUndo&&t.undoManager.canRedo()}decreaseZoom(t){t===void 0&&(t=1/this.zoomFactor),U.r(t,CommandHandler,\"decreaseZoom:factor\");const i=this.diagram;if(i.autoScale!==1)return;const e=i.scale*t;e<i.minScale||e>i.maxScale||(i.scale=e)}canDecreaseZoom(t){t===void 0&&(t=1/this.zoomFactor),U.r(t,CommandHandler,\"canDecreaseZoom:factor\");const i=this.diagram;if(i.autoScale!==1)return!1;const e=i.scale*t;return e<i.minScale||e>i.maxScale?!1:i.allowZoom}increaseZoom(t){t===void 0&&(t=this.zoomFactor),U.r(t,CommandHandler,\"increaseZoom:factor\");const i=this.diagram;if(i.autoScale!==1)return;const e=i.scale*t;e<i.minScale||e>i.maxScale||(i.scale=e)}canIncreaseZoom(t){t===void 0&&(t=this.zoomFactor),U.r(t,CommandHandler,\"canIncreaseZoom:factor\");const i=this.diagram;if(i.autoScale!==1)return!1;const e=i.scale*t;return e<i.minScale||e>i.maxScale?!1:i.allowZoom}resetZoom(t){t===void 0&&(t=this.defaultScale),U.r(t,CommandHandler,\"resetZoom:newscale\");const i=this.diagram;t<i.minScale||t>i.maxScale||(i.scale=t)}canResetZoom(t){t===void 0&&(t=this.defaultScale),U.r(t,CommandHandler,\"canResetZoom:newscale\");const i=this.diagram;return t<i.minScale||t>i.maxScale?!1:i.allowZoom}zoomToFit(){const t=this.diagram,i=t.animationManager;i.stopAnimation(),t.redraw();const e=t.position,s=t.scale;i.Bl(\"Zoom To Fit\"),this.isZoomToFitRestoreEnabled&&s===this.j1&&!isNaN(this.q1)&&this.W1!==null&&t.documentBounds.equals(this.v1)?(t.scale=this.q1,t.position=this.W1,this.j1=NaN,this.v1=Rect.zg):(this.q1=s,this.W1=e.copy(),t.zoomToFit(),this.j1=t.scale,this.v1=t.documentBounds.copy()),i.KM()}canZoomToFit(){return this.diagram.allowZoom}scrollToPart(t){t===void 0&&(t=null),t!==null&&U.e(t,Part,CommandHandler,\"part\");const i=this.diagram;if(i.ensureBounds(),t===null){try{this.zo!==null&&(this.zo.next()?t=this.zo.value:this.zo=null)}catch{this.zo=null}t===null&&(i.highlighteds.count>0?this.zo=i.highlighteds.iterator:i.selection.count>0&&(this.zo=i.selection.iterator),this.zo!==null&&this.zo.next()&&(t=this.zo.value))}if(t!==null){const e=i.animationManager;e.Bl(\"Scroll To Part\");const s=this.scrollToPartPause;if(s>0){const n=this._f(t,[t]);if(n.length===1)i.startTransaction(),i.centerRect(t.actualBounds),i.commitTransaction(\"Scroll To Part\");else{const o=()=>{i.startTransaction();let l=n.pop();for(;n.length>0&&l instanceof Node&&l.isTreeExpanded&&(!(l instanceof Group)||l.isSubGraphExpanded);)l=n.pop();n.length>0?(l instanceof Part&&i.scrollToRect(l.actualBounds),l instanceof Node&&!l.isTreeExpanded&&(l.isTreeExpanded=!0),l instanceof Group&&!l.isSubGraphExpanded&&(l.isSubGraphExpanded=!0)):(l instanceof Part&&i.centerRect(l.actualBounds),i.removeDiagramListener(\"LayoutCompleted\",r)),i.commitTransaction(\"Scroll To Part\")},r=()=>{U.lr(o,(e.isEnabled?e.duration:0)+s)};i.addDiagramListener(\"LayoutCompleted\",r),o()}}else{const n=i.position.copy();i.centerRect(t.actualBounds),n.equalsApprox(i.position)&&e.stopAnimation()}}}_f(t,i){if(t.isVisible())return i;if(t instanceof Adornment){const e=t.adornedPart;e!==null&&this._f(e,i)}else if(t instanceof Link){const e=t.fromNode;e!==null&&this._f(e,i);const s=t.toNode;s!==null&&this._f(s,i)}else{if(t instanceof Node){const s=t.labeledLink;s!==null&&this._f(s,i);const n=t.findTreeParentNode();n!==null&&(!n.isTreeExpanded&&!n.wasTreeExpanded&&i.push(n),this._f(n,i))}const e=t.containingGroup;e!==null&&(!e.isSubGraphExpanded&&!e.wasSubGraphExpanded&&i.push(e),this._f(e,i))}return i}canScrollToPart(t){if(t===void 0&&(t=null),t!==null&&!(t instanceof Part))return!1;const i=this.diagram;return i.selection.count===0&&i.highlighteds.count===0?!1:i.allowHorizontalScroll&&i.allowVerticalScroll}collapseTree(t){t===void 0&&(t=null);const i=this.diagram,e=\"Collapse Tree\";try{i.startTransaction(e),i.animationManager.Bl(e);const n=new List;if(t!==null&&t.isTreeExpanded)t.collapseTree(),n.add(t);else if(t===null){const o=i.selection.iterator;for(;o.next();){const r=o.value;r instanceof Node&&r.isTreeExpanded&&(r.collapseTree(),n.add(r))}}i.O(\"TreeCollapsed\",n)}finally{i.commitTransaction(e)}}canCollapseTree(t){t===void 0&&(t=null);const i=this.diagram;if(i.isReadOnly)return!1;if(t!==null){if(!(t instanceof Node)||!t.isTreeExpanded)return!1;if(t.findTreeChildrenLinks().count>0)return!0}else{const e=i.selection.iterator;for(;e.next();){const s=e.value;if(s instanceof Node){if(!s.isTreeExpanded)continue;if(s.findTreeChildrenLinks().count>0)return!0}}}return!1}expandTree(t){t===void 0&&(t=null);const i=this.diagram,e=\"Expand Tree\";try{i.startTransaction(e),i.animationManager.Bl(e);const n=new List;if(t!==null&&!t.isTreeExpanded)t.expandTree(),n.add(t);else if(t===null){const o=i.selection.iterator;for(;o.next();){const r=o.value;r instanceof Node&&(r.isTreeExpanded||(r.expandTree(),n.add(r)))}}i.O(\"TreeExpanded\",n)}finally{i.commitTransaction(e)}}canExpandTree(t){t===void 0&&(t=null);const i=this.diagram;if(i.isReadOnly)return!1;if(t!==null){if(!(t instanceof Node)||t.isTreeExpanded)return!1;if(t.findTreeChildrenLinks().count>0)return!0}else{const e=i.selection.iterator;for(;e.next();){const s=e.value;if(s instanceof Node){if(s.isTreeExpanded)continue;if(s.findTreeChildrenLinks().count>0)return!0}}}return!1}groupSelection(){const t=this.diagram,i=t.model;if(!i.xa())return;const e=this.archetypeGroupData;if(e===null)return;let s=null;try{t.currentCursor=\"wait\",t.O(\"ChangingSelection\",t.selection),t.startTransaction(\"Group\");const n=new List,o=t.selection.iterator;for(;o.next();){const f=o.value;f.Ce()&&f.canGroup()&&n.add(f)}const r=new List,l=n.iterator;for(;l.next();){const f=l.value;let a=!1;const c=n.iterator;for(;c.next();){const u=c.value;if(f.isMemberOf(u)){a=!0;break}}a||r.add(f)}const h=r.first();if(h!==null){let f=h.containingGroup;if(f!==null)for(;f!==null;){let a=!1;const c=r.iterator;for(;c.next();)if(!c.value.isMemberOf(f)){a=!0;break}if(a)f=f.containingGroup;else break}if(e instanceof Group)e.Kt(),s=e.copy(),s!==null&&t.add(s);else if(i.isGroupForData(e)){const a=i.copyNodeData(e);U.W(a)&&(i.addNodeData(a),s=t.findNodeForData(a))}if(s!==null){f!==null&&this.isValidMember(f,s)&&(s.containingGroup=f);const a=r.iterator;for(;a.next();){const c=a.value;this.isValidMember(s,c)&&(c.containingGroup=s)}t.clearSelection(!0),s.isSelected=!0}}t.O(\"SelectionGrouped\",s)}finally{t.commitTransaction(\"Group\"),t.O(\"ChangedSelection\",t.selection),t.currentCursor=\"\"}}canGroupSelection(){const t=this.diagram;if(t.isReadOnly||t.isModelReadOnly||!t.allowInsert||!t.allowGroup||!t.model.xa()||this.archetypeGroupData===null)return!1;const e=t.selection.iterator;for(;e.next();){const s=e.value;if(s.Ce()&&s.canGroup())return!0}return!1}PP(t){const i=U.lt();if(Array.isArray(t))t.forEach(n=>{n instanceof Link||n instanceof Part&&i.push(n)});else{const n=t.iterator;for(;n.next();){const o=n.value;o instanceof Link||o instanceof Part&&i.push(o)}}const e=new GSet,s=i.length;for(let n=0;n<s;n++){const o=i[n];let r=!0;for(let l=0;l<s;l++)if(o.isMemberOf(i[l])){r=!1;break}r&&e.add(o)}return U.tt(i),e}isValidMember(t,i){if(i===null||t===i||i instanceof Link)return!1;let e;return t!==null&&(t===i||t.isMemberOf(i)||(e=t.memberValidation,e!==null&&!e(t,i))||t.data===null&&i.data!==null||t.data!==null&&i.data===null)?!1:(e=this.memberValidation,e!==null?e(t,i):!0)}ungroupSelection(t){t===void 0&&(t=null);const i=this.diagram,e=i.model;if(e.xa())try{i.currentCursor=\"wait\",i.O(\"ChangingSelection\",i.selection),i.startTransaction(\"Ungroup\");const s=new List;if(t!==null)s.add(t);else{const o=i.selection.iterator;for(;o.next();){const r=o.value;r instanceof Group&&r.canUngroup()&&s.add(r)}}const n=new List;if(s.count>0){i.clearSelection(!0);const o=s.iterator;for(;o.next();){const r=o.value;r.expandSubGraph();const l=r.containingGroup,h=l!==null&&l.data!==null?e.getKeyForNodeData(l.data):void 0;n.addAll(r.memberParts);const f=n.iterator;for(;f.next();){const a=f.value;if(a.isSelected=!0,a instanceof Link)continue;const c=a.data;c!==null?e.setGroupForData(c,h):a.containingGroup=l}i.remove(r)}}i.O(\"SelectionUngrouped\",s,n)}finally{i.commitTransaction(\"Ungroup\"),i.O(\"ChangedSelection\",i.selection),i.currentCursor=\"\"}}canUngroupSelection(t){t===void 0&&(t=null);const i=this.diagram;if(i.isReadOnly||i.isModelReadOnly||!i.allowDelete||!i.allowUngroup||!i.model.xa())return!1;if(t!==null){if(!(t instanceof Group))return!1;if(t.canUngroup())return!0}else{const s=i.selection.iterator;for(;s.next();){const n=s.value;if(n instanceof Group&&n.canUngroup())return!0}}return!1}addTopLevelParts(t,i){const e=this.PP(t);let s=!0;const n=e.iterator;for(;n.next();){const o=n.value;o.containingGroup!==null&&(!i||this.isValidMember(null,o)?o.containingGroup=null:s=!1)}return s}collapseSubGraph(t){t===void 0&&(t=null);const i=this.diagram,e=\"Collapse SubGraph\";try{i.startTransaction(e),i.animationManager.Bl(e);const n=new List;if(t!==null&&t.isSubGraphExpanded)t.collapseSubGraph(),n.add(t);else if(t===null){const o=i.selection.iterator;for(;o.next();){const r=o.value;r instanceof Group&&r.isSubGraphExpanded&&(r.collapseSubGraph(),n.add(r))}}i.O(\"SubGraphCollapsed\",n)}finally{i.commitTransaction(e)}}canCollapseSubGraph(t){t===void 0&&(t=null);const i=this.diagram;if(i.isReadOnly)return!1;if(t!==null)return!(!(t instanceof Group)||!t.isSubGraphExpanded);{const e=i.selection.iterator;for(;e.next();){const s=e.value;if(s instanceof Group&&s.isSubGraphExpanded)return!0}}return!1}expandSubGraph(t){t===void 0&&(t=null);const i=this.diagram,e=\"Expand SubGraph\",s=new List;try{if(i.startTransaction(e),i.animationManager.Bl(e),t!==null&&!t.isSubGraphExpanded)t.expandSubGraph(),s.add(t);else if(t===null){const o=i.selection.iterator;for(;o.next();){const r=o.value;r instanceof Group&&(r.isSubGraphExpanded||(r.expandSubGraph(),s.add(r)))}}i.O(\"SubGraphExpanded\",s)}finally{for(const n of s)this.kL(i,n);t&&this.kL(i,t),i.commitTransaction(e)}}kL(t,i){for(const e of i.memberParts)e instanceof Node&&t.Of(e,i)}canExpandSubGraph(t){t===void 0&&(t=null);const i=this.diagram;if(i.isReadOnly)return!1;if(t!==null)return!(!(t instanceof Group)||t.isSubGraphExpanded);{const e=i.selection.iterator;for(;e.next();){const s=e.value;if(s instanceof Group&&!s.isSubGraphExpanded)return!0}}return!1}editTextBlock(t){t===void 0&&(t=null),t!==null&&U.e(t,TextBlock,CommandHandler,\"editTextBlock\");const i=this.diagram,e=i.toolManager.findTool(\"TextEditing\");if(e!==null){if(t===null){let s=null;const n=i.selection.iterator;for(;n.next();){const o=n.value;if(o.canEdit()){s=o;break}}if(s===null)return;t=s.findInVisualTree(o=>o instanceof TextBlock&&o.editable)}t!==null&&(i.currentTool=null,e.textBlock=t,i.currentTool=e)}}canEditTextBlock(t){t===void 0&&(t=null);const i=this.diagram;if(i.isReadOnly||i.isModelReadOnly||!i.allowTextEdit||i.toolManager.findTool(\"TextEditing\")===null)return!1;if(t!==null){if(!(t instanceof TextBlock))return!1;const e=t.part;if(e!==null&&e.canEdit())return!0}else{const e=i.selection.iterator;for(;e.next();){const s=e.value;if(s.canEdit()&&(t=s.findInVisualTree(n=>n instanceof TextBlock&&n.editable),t!==null))return!0}}return!1}showContextMenu(t){const i=this.diagram,e=i.toolManager.findTool(\"ContextMenu\");if(e===null)return;t===void 0&&(t=null),t===null&&(i.selection.count>0?t=i.selection.first():t=i);const s=e.findObjectWithContextMenu(t);if(s!==null){const n=i.lastInput;let o=null;if(s instanceof GraphObject)o=s.getDocumentPoint(Spot.Center);else if(!i.viewportBounds.containsPoint(n.documentPoint)){const r=i.viewportBounds;o=new Point(r.x+r.width/2,r.y+r.height/2)}if(o!==null){const r=new InputEvent;r.diagram=i,r.viewPoint=i.transformDocToView(o),r.documentPoint=o,r.button=2,r.up=!0,i.lastInput=r}i.currentTool=e,e.openMenu(!1,s)}}canShowContextMenu(t){const i=this.diagram,e=i.toolManager.findTool(\"ContextMenu\");return!(e===null||(t===void 0&&(t=null),t===null&&(i.selection.count>0?t=i.selection.first():t=i),e.findObjectWithContextMenu(t)===null))}get copiesClipboardData(){return this.dP}set copiesClipboardData(t){U.i(t,\"boolean\",CommandHandler,\"copiesClipboardData\"),this.dP=t}get copiesConnectedLinks(){return this.gP}set copiesConnectedLinks(t){U.i(t,\"boolean\",CommandHandler,\"copiesConnectedLinks\"),this.gP=t}get deletesConnectedLinks(){return this.mP}set deletesConnectedLinks(t){U.i(t,\"boolean\",CommandHandler,\"deletesConnectedLinks\"),this.mP=t}get copiesTree(){return this.pP}set copiesTree(t){U.i(t,\"boolean\",CommandHandler,\"copiesTree\"),this.pP=t}get deletesTree(){return this.yP}set deletesTree(t){U.i(t,\"boolean\",CommandHandler,\"deletesTree\"),this.yP=t}get copiesParentKey(){return this.wP}set copiesParentKey(t){U.i(t,\"boolean\",CommandHandler,\"copiesParentKey\"),this.wP=t}get copiesGroupKey(){return this.xP}set copiesGroupKey(t){U.i(t,\"boolean\",CommandHandler,\"copiesGroupKey\"),this.xP=t}get archetypeGroupData(){return this.bP}set archetypeGroupData(t){t!==null&&U.Mo(t,CommandHandler,\"archetypeGroupData\");const i=this.diagram;if(Debug&&t!==null){const e=i.model;e.xa()&&!(t instanceof Group)&&!e.isGroupForData(t)&&U.n(\"CommandHandler.archetypeGroupData must be either a Group or a data object for which GraphLinksModel.isGroupForNodeData is true: \"+t)}this.bP=t}get memberValidation(){return this.fh}set memberValidation(t){t!==null&&U.P(t,CommandHandler,\"memberValidation\"),this.fh=t}get defaultScale(){return this.diagram.defaultScale}set defaultScale(t){this.diagram.defaultScale=t}get zoomFactor(){return this.kP}set zoomFactor(t){U.r(t,CommandHandler,\"zoomFactor\"),t>1||U.n(\"zoomFactor must be larger than 1.0, not: \"+t),this.kP=t}get isZoomToFitRestoreEnabled(){return this.SP}set isZoomToFitRestoreEnabled(t){U.i(t,\"boolean\",CommandHandler,\"isZoomToFitRestoreEnabled\"),this.SP=t}get scrollToPartPause(){return this.MP}set scrollToPartPause(t){U.r(t,CommandHandler,\"scrollToPartPause\"),this.MP=t}computeEffectiveCollection(t,i){const e=this.diagram,s=e.toolManager.findTool(\"Dragging\"),n=e.currentTool===s;i===void 0&&(i=e.c0());const o=new GMap;if(t===null)return o;let r=t.iterator;for(;r.next();){const l=r.value;e.$r(o,l,n,i)}if(e.draggedLink!==null&&i.dragsLink)return o;for(r=t.iterator;r.next();){const l=r.value;if(l instanceof Link){const h=l.fromNode;if(h!==null&&!o.has(h))o.delete(l);else{const f=l.toNode;f!==null&&!o.has(f)&&o.delete(l)}}}return o}}var Stretch=(y=>(y[y.None=0]=\"None\",y[y.Default=1]=\"Default\",y[y.Vertical=4]=\"Vertical\",y[y.Horizontal=5]=\"Horizontal\",y[y.Fill=2]=\"Fill\",y))(Stretch||{}),Orientation=(y=>(y[y.None=0]=\"None\",y[y.Along=21]=\"Along\",y[y.Plus90=22]=\"Plus90\",y[y.Minus90=23]=\"Minus90\",y[y.Opposite=24]=\"Opposite\",y[y.Upright=25]=\"Upright\",y[y.Plus90Upright=26]=\"Plus90Upright\",y[y.Minus90Upright=27]=\"Minus90Upright\",y[y.Upright45=28]=\"Upright45\",y))(Orientation||{}),Flip=(y=>(y[y.None=0]=\"None\",y[y.Vertical=1]=\"Vertical\",y[y.Horizontal=2]=\"Horizontal\",y[y.Both=3]=\"Both\",y))(Flip||{});class GraphObject{l;y0;w0;Qr;b;uh;yt;gt;le;ii;x0;Hs;Rt;rs;_r;dh;Si;ba;ot;jt;tl;Di;qi;Zu;ui;Qu;Xt;hi;il;J1;gh;_u;constructor(){GSet.Ji(this),this.l=30723,this.ii=1,this.x0=\"\",this.Hs=null,this.Rt=null,this.gt=new Point(NaN,NaN).p(),this.rs=Size.Pw,this._r=new Transform,this.dh=new Transform,this.Si=null,this.ba=1,this.ot=1,this.jt=0,this.tl=Margin.Xg,this.le=new Rect(NaN,NaN,NaN,NaN).p(),this.Di=new Rect(NaN,NaN,NaN,NaN).p(),this.qi=new Rect(0,0,NaN,NaN).p(),this.Zu=null,this.y0=null,this.yt=null,this.ui=Spot.Default,this.Qu=Spot.Default,this.w0=0,this.Qr=0,this.Xt=null,this.b=null,this.uh=null,this.hi=null,this.J1=null,this.gh=null,this.il=null,this._u=null}cloneProtected(t){t.l=(this.l|2048|4096)&-32769,t.ii=this.ii,t.x0=this.x0,t.Rt=this.Rt,t.gt.c(this.gt),t.rs=this.rs.N(),this.Si!==null?t.Si=this.Si.copy():t.Si=null,t.ot=this.ot,t.jt=this.jt,t.tl=this.tl.N(),t.le.c(this.le),t.Di.c(this.Di),t.qi.c(this.qi),t.y0=this.y0,this.yt!==null&&(t.yt=this.yt.copy()),t.ui=this.ui.N(),t.Qu=this.Qu.N(),t.w0=this.w0,t.Qr=this.Qr,this.Xt!==null&&(t.Xt=this.Xt.copy()),this.b!==null&&(this.b.mi?t.b=this.b:t.b=this.b.copy()),this.uh!==null&&(t.uh=this.uh.slice()),this.hi!==null&&(t.hi=this.hi.copy())}addCopyProperty(t){let i=this.uh;if(!Array.isArray(i))i=[],this.uh=i;else for(let e=0;e<i.length;e++)if(i[e]===t)return;i.push(t)}Xo(t){t.Zu=null,t.il=null,t.u()}clone(){const t=new this.constructor;if(this.cloneProtected(t),this.uh!==null)for(let i=0;i<this.uh.length;i++){const e=this.uh[i];t[e]=this[e]}return t}copy(){return this.clone()}dM(){const t=this.Fi;if(t!==null){this.Fi=null;for(const i of t)i.td()&&(i.isToData?this.themeData(i.targetProperty,i.sourceProperty,i.themeSource,i.converter,i.themeConverter):i.isToObject?this.themeObject(i.targetProperty,i.sourceProperty,i.themeSource,i.converter,i.themeConverter,i.sourceName):i.isToModel?this.themeModel(i.targetProperty,i.sourceProperty,i.themeSource,i.converter,i.themeConverter):this.theme(i.targetProperty,i.sourceProperty,i.themeSource,i.converter,i.themeConverter))}return this}ai(t){t in Orientation?this.segmentOrientation=t:t in Stretch?this.stretch=t:U.hr(this,t)}toString(){return U.Bn(this.constructor)+\"#\"+GSet.gs(this)}static None=0;static Default=1;static Fill=2;static Vertical;static Horizontal;static Uniform=6;static UniformToFill=7;static FlipVertical=1;static FlipHorizontal=2;static FlipBoth=3;mh(){this.b!==null&&(this.b.mi=!0)}Jt(){return this.b===null?this.b=new GraphObjectTemplateSettings:this.b.mi&&(this.b=this.b.copy()),this.b}Ge(){if(this.yt===null){const t=new LinkSettings;t.ka=Spot.None,t.Sa=Spot.None,t.Ma=10,t.Pa=10,t.Na=0,t.Ca=0,this.yt=t}return this.yt}raiseChangedEvent(t,i,e,s,n,o,r){const l=this.part;if(l!==null){l.tc(t,i,e,s,n,o,r),e===this&&t===2&&this.ic()&&this.Aa(l,i);const h=this.diagram;if(this.Ms!==null&&h!==null&&h.qh&&!h.undoManager.isUndoingRedoing&&!h.animationManager.Mu){const f=this.Ms.get(i);if(f!==null&&h.animationManager.isEnabled&&!h.animationManager.isTicking){this._u===null&&(this._u=new GMap);let a=h.undoManager.transactionLevel===0;if(f.startCondition===2?a=!0:f.startCondition===3&&(a=!1),a){const c=new Animation;f.vF(c);const u=this._u.get(f);u!==null&&u.stop(),this._u.set(f,c),c.Nx=this,c.vM=f,c.add(this,i,s,n),c.start()}else h.animationManager.getBundleAnimation().add(this,i,s,n)}}if(this instanceof Panel&&e===l&&l.NP()&&l.data!==null){const f=this.T.h,a=f.length;for(let c=0;c<a;c++){const u=f[c];u instanceof Panel&&u.Jr(d=>{d.data!==null&&d.NP()&&d.updateTargetBindings(i)})}}}}HF(t){this._u.delete(t)}Bo(){if(this.diagram===null)return;if(this.findBindingPanel()===null&&this.Fi!==null){const i=this.diagram.model,e=this.Fi.iterator;for(;e.next();){const s=e.value;if(!s.isToTheme)continue;let n=null;const o=s.sourceName;s.isToObject&&(n=this.SL(o));let r=this;const l=s.targetId;l!==-1&&(r=this.b0(l),r===null)||(o===\"/\"?n=r.part:o===\".\"?n=r:o===\"..\"&&(n=r.panel),s.updateTarget(r,n,void 0,i))}}}Aa(t,i){const e=this.findBindingPanel();if(e!==null){const s=t.diagram,n=this.Fi.iterator;for(;n.next();){const o=n.value;let r=null;if(o.isToObject){if(r=o.ML(e,this),r===null)continue;o.updateSource(this,r,i,null)}else if(o.isToModel)s!==null&&!s.me&&o.updateSource(this,s.model.modelData,i,e);else if(!o.isToTheme){const l=e.data;if(l===null)continue;s!==null&&!s.me&&o.updateSource(this,l,i,e)}if(r===this){const l=o.targetId,h=e.b0(l);h!==null&&o.updateTarget(h,r,i,s?.model)}}}}b0(t){return this.Zn===t?this:null}SL(t){let i;return t===\"\"?i=this:t===\"/\"?i=this:t===\".\"?i=this:t===\"..\"?i=this:(i=this.part.findObject(t),i===null&&Debug&&U.nt(\"Binding error: missing GraphObject named \"+t+\" in \"+this.part.toString())),i}get Zn(){return this.b!==null?this.b.Zn:-1}set Zn(t){this.Zn!==t&&(this.b===null&&(this.b=new GraphObjectTemplateSettings),this.b.Zn=t)}get Fi(){return this.b!==null?this.b.Fi:null}set Fi(t){this.Fi!==t&&(this.b===null&&(this.b=new GraphObjectTemplateSettings),this.b.Fi=t)}get Qn(){return this.b!==null?this.b.Qn:null}set Qn(t){this.Qn!==t&&(this.b===null&&(this.b=new GraphObjectTemplateSettings),this.b.Qn=t)}raiseChanged(t,i,e){this.raiseChangedEvent(2,t,this,i,e)}t(t,i,e){this.raiseChangedEvent(2,t,this,i,e)}_n(t,i,e,s){const n=this.le;if(n.s(t,i,e,s),this.ot!==1||this.jt!==0){this.Si===null&&(this.Si=new Transform);const o=this.Si;o.Vi(),this.k0(o,t,i,e,s),o.Yg(n)}}PL(t,i,e){return this.pickable===!1?!1:(e.uf(this.F),i?this.intersectsRect(t,e):this.containedInRect(t,e))}NL(t,i,e){if(this.pickable===!1)return!1;const s=this.naturalBounds,n=t.distanceSquaredPoint(i);return e?Point.distanceLineSegmentSquared(t.x,t.y,0,0,0,s.height)<=n||Point.distanceLineSegmentSquared(t.x,t.y,0,s.height,s.width,s.height)<=n||Point.distanceLineSegmentSquared(t.x,t.y,s.width,s.height,s.width,0)<=n||Point.distanceLineSegmentSquared(t.x,t.y,s.width,0,0,0)<=n:t.distanceSquared(0,0)<=n&&t.distanceSquared(0,s.height)<=n&&t.distanceSquared(s.width,0)<=n&&t.distanceSquared(s.width,s.height)<=n}mn(){return!0}containsPoint(t){Debug&&U.e(t,Point,GraphObject,\"containsPoint:p\");const i=Point.a();i.c(t),this.F.kt(i);const e=this.actualBounds;if(!e.isReal())return Point.o(i),!1;const s=this.diagram;if(s!==null&&s.Qm){const o=s.getInputOption(\"extraTouchThreshold\"),r=s.getInputOption(\"extraTouchArea\"),l=r/2,h=this.naturalBounds,f=this.getDocumentScale()*s.scale,a=1/f;if(h.width*f<o&&h.height*f<o){const c=Rect.contains(e.x-l*a,e.y-l*a,e.width+r*a,e.height+r*a,i.x,i.y);return Point.o(i),c}}let n=!1;return(this instanceof Adornment||this instanceof Shape?Rect.contains(e.x-5,e.y-5,e.width+10,e.height+10,i.x,i.y):e.containsPoint(i))&&(this.hi&&!this.hi.containsPoint(i)?n=!1:this.Rt!==null&&this.qi.containsPoint(t)?n=!0:n=this.ph(t)),Point.o(i),n}ph(t){const i=this.naturalBounds;return Rect.contains(0,0,i.width,i.height,t.x,t.y)}containsRect(t){if(this.angle===0)return this.actualBounds.containsRect(t);const i=this.naturalBounds,e=Rect.K(0,0,i.width,i.height),s=this.F;let n=!1;const o=Point.K(t.x,t.y);return e.containsPoint(s.is(o))&&(o.s(t.x,t.bottom),e.containsPoint(s.is(o))&&(o.s(t.right,t.bottom),e.containsPoint(s.is(o))&&(o.s(t.right,t.y),e.containsPoint(s.is(o))&&(n=!0)))),Point.o(o),Rect.o(e),n}containedInRect(t,i){if(Debug&&U.e(t,Rect,GraphObject,\"containedInRect:r\"),i===void 0)return t.containsRect(this.actualBounds);const e=this.naturalBounds,s=i;let n=!1;const o=Point.K(0,0);return t.containsPoint(s.kt(o))&&(o.s(0,e.height),t.containsPoint(s.kt(o))&&(o.s(e.width,e.height),t.containsPoint(s.kt(o))&&(o.s(e.width,0),t.containsPoint(s.kt(o))&&(n=!0)))),Point.o(o),n}intersectsRect(t,i){if(Debug&&U.e(t,Rect,GraphObject,\"intersectsRect:r\"),i===void 0&&(i=this.F,this.angle===0))return t.intersectsRect(this.actualBounds);const e=this.naturalBounds,s=i,n=Point.K(0,0),o=Point.K(0,e.height),r=Point.K(e.width,e.height),l=Point.K(e.width,0);let h=!1;if(t.containsPoint(s.kt(n))||t.containsPoint(s.kt(o))||t.containsPoint(s.kt(r))||t.containsPoint(s.kt(l)))h=!0;else{const f=Rect.K(0,0,e.width,e.height),a=Point.K(t.x,t.y);f.containsPoint(s.is(a))?h=!0:(a.s(t.x,t.bottom),f.containsPoint(s.is(a))?h=!0:(a.s(t.right,t.bottom),f.containsPoint(s.is(a))?h=!0:(a.s(t.right,t.y),f.containsPoint(s.is(a))&&(h=!0)))),Point.o(a),Rect.o(f),h||(Geo.Rw(t,n,o)||Geo.Rw(t,o,r)||Geo.Rw(t,r,l)||Geo.Rw(t,l,n))&&(h=!0)}return Point.o(n),Point.o(o),Point.o(r),Point.o(l),h}getDocumentPoint(t,i){if(i===void 0&&(i=new Point),t instanceof Spot){const e=t;Debug&&e.isNoSpot()&&U.n(\"getDocumentPoint:s Spot must be specific: \"+e.toString());const s=this.naturalBounds;return i.s(e.x*s.width+e.offsetX,e.y*s.height+e.offsetY),this.Us.kt(i),i}else return i.set(t),this.Us.kt(i),i}getDocumentBounds(t){t===void 0&&(t=new Rect);const i=this.naturalBounds,e=this.Us,s=Point.K(0,0).F(e);return t.s(s.x,s.y,0,0),s.s(i.width,0).F(e),t.unionNoCheck(s.x,s.y,0,0),s.s(i.width,i.height).F(e),t.unionNoCheck(s.x,s.y,0,0),s.s(0,i.height).F(e),t.unionNoCheck(s.x,s.y,0,0),Point.o(s),t}getDocumentAngle(){return this.Us.nF()}getDocumentScale(){if(this.S0()===!1)return this.ba;const t=this.ot;return this.panel!==null?t*this.panel.getDocumentScale():t}getLocalPoint(t,i){return i===void 0&&(i=new Point),i.c(t),this.Us.is(i),i}getNearestIntersectionPoint(t,i,e){return this.ec(t.x,t.y,i.x,i.y,e)}ec(t,i,e,s,n){const o=this.F,r=1/(o.m11*o.m22-o.m12*o.m21),l=o.m22*r,h=-o.m12*r,f=-o.m21*r,a=o.m11*r,c=r*(o.m21*o.dy-o.m22*o.dx),u=r*(o.m12*o.dx-o.m11*o.dy),d=t*l+i*f+c,m=t*h+i*a+u,g=e*l+s*f+c,p=e*h+s*a+u;n.s(0,0);const w=this.naturalBounds,x=Geo.bl(0,0,w.width,w.height,d,m,g,p,n);return n.F(o),x}dt(t,i,e,s){if(this.Eo()===!1)return;const n=this.tl,o=n.right+n.left,r=n.top+n.bottom;t=Math.max(t-o,0),i=Math.max(i-r,0),e=e||0,s=s||0,e=Math.max(e-o,0),s=Math.max(s-r,0);const l=this.angle;let h=0;const f=this.desiredSize,a=this.M0();l===90||l===270?(t=isFinite(f.height)?f.height+a:t,i=isFinite(f.width)?f.width+a:i):(t=isFinite(f.width)?f.width+a:t,i=isFinite(f.height)?f.height+a:i);let c=e||0,u=s||0;const d=this instanceof Panel;switch(this.qs(!0)){case 0:c=0,u=0,d&&(t=1/0,i=1/0);break;case 2:isFinite(t)&&t>e&&(c=t),isFinite(i)&&i>s&&(u=i);break;case 5:isFinite(t)&&t>e&&(c=t),u=0,d&&(i=1/0);break;case 4:isFinite(i)&&i>s&&(u=i),c=0,d&&(t=1/0);break}const g=this.maxSize,p=this.minSize;c>g.width&&p.width<g.width&&(c=g.width),u>g.height&&p.height<g.height&&(u=g.height),e=Math.max(c,p.width),s=Math.max(u,p.height),g.width<e&&(e=Math.min(p.width,e)),g.height<s&&(s=Math.min(p.height,s)),t=Math.min(g.width,t),i=Math.min(g.height,i),t=Math.max(e,t),i=Math.max(s,i),(l===90||l===270)&&(h=t,t=i,i=h,h=e,e=s,s=h),this.le.At(),this.ed(t,i,e,s),this.le.p(),this.le.isReal()||U.n(\"Non-real measuredBounds has been set. Object \"+this+\", measuredBounds: \"+this.le.toString()),this.pe(!1)}ed(t,i,e,s){}Ws(){return!1}Gt(t,i,e,s,n){this.sc();const o=Rect.a();o.c(this.Di),this.Di.At(),this.ns()===!1?this.Di.s(t,i,e,s):this.yh(t,i,e,s),this.Di.p(),n===void 0?this.hi=null:this.hi=n;let r=!1;if(n!==void 0)r=!0;else{let l=this.panel;if(l!==null&&l.el()&&(l=l.panel),l!==null){const h=l.qi,f=this.measuredBounds,a=i+f.height,c=t+f.width;if(r=!(0<=t+.05&&c<=h.width+.05&&0<=i+.05&&a<=h.height+.05),this instanceof TextBlock){const u=this.naturalBounds;(this.P0>u.height||this.pi>u.width)&&(r=!0)}}}r?this.l|=256:this.l&=-257,this.Di.isReal()||U.n(\"Non-real actualBounds has been set. Object \"+this+\", actualBounds: \"+this.Di.toString()),this.sd(o,this.Di),this.to(!1),Rect.o(o)}yh(t,i,e,s){}commonArrange(t,i,e,s){if(this.Di.s(t,i,e,s),this.desiredSize.isReal())return;const n=this.le,o=this.tl,r=o.right+o.left,l=o.top+o.bottom,h=n.width+r,f=n.height+l;e+=r,s+=l;let a=this.qs(!0);switch(h===e&&f===s&&(a=0),a){case 0:(h>e||f>s)&&(this.pe(!0),this.dt(h>e?e:h,f>s?s:f,0,0));break;case 2:this.pe(!0),this.dt(e,s,0,0);break;case 5:this.pe(!0),this.dt(e,f,0,0);break;case 4:this.pe(!0),this.dt(h,s,0,0);break}}sd(t,i){const e=this.part;e!==null&&e.diagram!==null&&((e.selectionObject===this||e.resizeObject===this||e.rotateObject===this)&&e.CP(!0),this.L(),!t.equalsApproxClose(i)&&(e.wh(),this.N0(e)))}N0(t){this.portId!==null&&(t.CP(!0),t instanceof Node&&t.CL(this))}get shadowVisible(){return this.b!==null?this.b.C0:null}set shadowVisible(t){const i=this.shadowVisible;i!==t&&(Debug&&t!==null&&U.i(t,\"boolean\",GraphObject,\"shadowVisible\"),this.Jt().C0=t,this.He(!0),this.L(),this.t(\"shadowVisible\",i,t))}QR(t,i){const e=this.naturalBounds,s=this.dh,n=s.m11,o=s.m21,r=s.dx,l=s.m12,h=s.m22,f=s.dy;let a=0,c=0,u=a,d=c;a=u*n+d*o+r,c=u*l+d*h+f;let m=a,g=c,p=0,w=0;u=e.width+i,d=0,a=u*n+d*o+r,c=u*l+d*h+f;let x=Math.min(m,a),k=Math.min(g,c);p=Math.max(m+p,a)-x,w=Math.max(g+w,c)-k,m=x,g=k,u=e.width+i,d=e.height+i,a=u*n+d*o+r,c=u*l+d*h+f,x=Math.min(m,a),k=Math.min(g,c),p=Math.max(m+p,a)-x,w=Math.max(g+w,c)-k,m=x,g=k,u=0,d=e.height+i,a=u*n+d*o+r,c=u*l+d*h+f,x=Math.min(m,a),k=Math.min(g,c),p=Math.max(m+p,a)-x,w=Math.max(g+w,c)-k,m=x,g=k;const b=t.viewportBounds,S=b.x,M=b.y,A=b.width,C=b.height;return m>A+S||S>p+m||g>C+M||M>w+g}Ui(t,i){if(this._R(t,i)||!this.visible)return;const e=this.opacity;if(e===0)return;let s=1;e!==1&&(s=t.globalAlpha,t.globalAlpha=s*e);let n=\"\";this.filter!==\"\"&&(n=t.filter,t.filter=this.filter);const o=this.F,r=this.panel;this.S0()===!0&&this.$1();const l=this.part;let h=!1,f=0;if(l&&i.getRenderingHint(\"drawShadows\")&&(h=l.isShadowed,h)){const g=l.shadowOffset;f=Math.max(g.y,g.x)*i.scale*i.Hi}const a=this instanceof Panel&&this.el(),c=this.Di;if(a&&(this.AL(h,t,!1,r),this.tI(t,i),this.LL(h,t,!1,r),this.TL(h,t,!1)),a||!a&&(c.width===0||c.height===0||isNaN(c.x)||isNaN(c.y))){e!==1&&(t.globalAlpha=s),this.filter!==\"\"&&(t.filter=n);return}const u=this.Ws();if(!i.la&&u&&this.QR(i,f)){e!==1&&(t.globalAlpha=s),this.filter!==\"\"&&(t.filter=n);return}let d=(this.l&256)!==0;if(t.clipInsteadOfFill&&(d=!1),this instanceof TextBlock&&(t.font=this.font),d){const g=r.mn()?r.naturalBounds:r.actualBounds;let p=Math.max(c.x,g.x),w=Math.max(c.y,g.y),x=Math.min(c.right,g.right)-p,k=Math.min(c.bottom,g.bottom)-w;const b=this.hi;if(b!==null&&(p=b.x,w=b.y,x=b.width,k=b.height),p>c.width+c.x||c.x>g.width+g.x){e!==1&&(t.globalAlpha=s),this.filter!==\"\"&&(t.filter=n);return}t.save(),t.beginPath(),t.rect(p,w,x,k),t.clip()}if(u){if(!l.isVisible()){e!==1&&(t.globalAlpha=s),this.filter!==\"\"&&(t.filter=n);return}if(h){const g=l.shadowOffset;t.shadowsSet(g.x*i.scale*this.scale*i.Hi,g.y*i.scale*this.scale*i.Hi,l.shadowBlur),t.shadowsOn(),t.shadowColor=l.shadowColor}}const m=this.naturalBounds;if(t.transform(o.m11,o.m12,o.m21,o.m22,o.dx,o.dy),this.AL(h,t,u,r),this.Rt!==null&&(t.commitTransform(),this.Z1(t,m,c)),this.LL(h,t,u,r),this.xh(t,i),this.TL(h,t,u),d&&(t.restore(),t.clearContextCache(this instanceof Panel)),!o.$k()){const g=1/(o.m11*o.m22-o.m12*o.m21);t.transform(o.m22*g,-o.m12*g,-o.m21*g,o.m11*g,g*(o.m21*o.dy-o.m22*o.dx),g*(o.m12*o.dx-o.m11*o.dy))}e!==1&&(t.globalAlpha=s),this.filter!==\"\"&&(t.filter=n)}AL(t,i,e,s){t&&this.shadowVisible===!0?i.shadowsOn():t&&this.shadowVisible===!1&&i.shadowsOff(),t&&this.Q1(s)&&this.shadowVisible===null&&i.shadowsOff()}LL(t,i,e,s){t&&(this.Rt!==null||this.Q1(s))?(this._1(!0),this.shadowVisible===null&&i.shadowsOff()):this._1(!1)}TL(t,i,e){t&&this.AP()===!0&&i.shadowsOn(),e&&t&&i.shadowsOff()}iI(t,i,e){const s=this.part;let n=!1;s&&t.getRenderingHint(\"drawShadows\")&&(n=s.isShadowed),i.clipInsteadOfFill&&(n=!1),this.Ws()&&n&&i.shadowsOn(),n&&this.shadowVisible===!0?i.shadowsOn():n&&this.shadowVisible===!1&&i.shadowsOff();const o=this.panel;if(n&&this.Q1(o)&&this.shadowVisible===null&&i.shadowsOff(),i.sl){const r=t.computePixelRatio(),l=`drop-shadow(${i.shadowOffsetX/r}px ${i.shadowOffsetY/r}px ${i.shadowBlur/r/2}px ${i.shadowColor})`;this.background!==null&&e.Rt.setAttributeNS(null,\"filter\",l)}return n&&(this.Rt!==null||this.Q1(o))?(this._1(!0),this.shadowVisible===null&&i.shadowsOff()):this._1(!1),n}eI(t,i,e,s){if(e.sl){const n=i.computePixelRatio(),o=`drop-shadow(${e.shadowOffsetX/n}px ${e.shadowOffsetY/n}px ${e.shadowBlur/n/2}px ${e.shadowColor})`;this.LP(t,o)}s&&this.AP()===!0&&e.shadowsOn(),this.Ws()&&e.shadowsOff()}Q1(t){return t===null?!1:(t.el()&&(t=t.panel),t.AP()||(t.type===Panel.Auto||t.type===Panel.Spot)&&t.findMainElement()!==this)}LP(t,i){}Z1(t,i,e){const s=this.M0(),n=i.x,o=i.y,r=i.width+s,l=i.height+s;this.un(t,this.Rt,!0,!1,i,e),this.Rt instanceof Brush&&this.Rt.type===3?(t.beginPath(),t.rect(n-s/2,o-s/2,r,l),t.fillContext(this.Rt,!1,null)):t.fillRect(n-s/2,o-s/2,r,l)}DL(t,i){let e=t.sI(this);const s=t.gh!==null?t.gh:t.svg;if(e!==-1)if(e===0)if(s.Rt)s.Rt.after(i);else if(t.type===Panel.Table){const n=s.getElementsByClassName(\"gojs-ts\"),o=n.length!==0?n[0]:null;o!==null&&o.after(i)}else s.prepend(i);else{for(;e!==0&&!t.elt(e-1).isVisibleObject();)e--;if(e===0)s.prepend(i);else{const n=t.elt(e-1).svg;n!==null?n.after(i):s.appendChild(i)}}}_R(t,i){if(!(t instanceof SVGContext))return!1;if(!this.visible||this.opacity===0)return this.svg!==null&&this.svg.parentNode!==null&&this.svg.remove(),!0;const e=this.Di;if(this.Ws()&&(!this.isVisible()||e.width===0||e.height===0||isNaN(e.x)||isNaN(e.y)))return this.svg!==null&&this.svg.parentNode!==null&&this.svg.remove(),!0;const s=this.panel,n=this.nd(t);if(this.nc(t,i,n))return this.FL(this.svg),this.svg.parentElement!==null?(this.Ws()&&(t.lastDrawnPart=this.svg),!0):(this.Ws()?(t.lastDrawnPart!==null?t.lastDrawnPart.after(this.svg):t.diagramGroup.prepend(this.svg),t.lastDrawnPart=this.svg):s&&this.DL(s,this.svg),!0);if(this.He(!1),this.Ws()&&this.isShadowed){const m=this.shadowOffset;t.shadowsSet(m.x*i.scale*this.scale*i.Hi,m.y*i.scale*this.scale*i.Hi,this.shadowBlur),t.shadowsOn(),t.shadowColor=this.shadowColor}this instanceof TextBlock&&(t.font=this.font),t.currentElement=null;const o=this.F,r=this instanceof Panel,l=this instanceof Panel?this.el():!1,h=this.svg;if(this.S0()===!0&&this.$1(),t.setCurrentTransform(1,0,0,1,0,0),t.outerGroup=!1,n)if(t.outerGroup=!0,r&&l)t.newGroup(1,0,0,1,0,0),this.svg=t.lastCreatedElement;else if(r&&this.isClipping){const m=this.findMainElement();let g=0,p=0;m!==null&&(g=m.actualBounds.x,p=m.actualBounds.y),t.newGroup(o.m11,o.m12,o.m21,o.m22,o.dx+g,o.dy+p),this.svg=t.lastCreatedElement,m!==null&&t.createOrUpdateClipGroup(this,m.actualBounds),t.currentElement=t.lastCreatedElement}else r?(t.newGroup(o.m11,o.m12,o.m21,o.m22,o.dx,o.dy),this.svg=t.lastCreatedElement):t.newGroup(1,0,0,1,0,0);const f=this.naturalBounds;r||t.setCurrentTransform(o.m11,o.m12,o.m21,o.m22,o.dx,o.dy),this.background!==null&&(r?(l&&t.setCurrentTransform(o.m11,o.m12,o.m21,o.m22,o.dx,o.dy),this.Z1(t,f,e),l&&t.setCurrentTransform(1,0,0,1,0,0)):(t.setCurrentTransform(o.m11,o.m12,o.m21,o.m22,o.dx,o.dy),this.Z1(t,f,e)),t.currentElement.Rt=t.lastCreatedElement,t.currentElement.prepend(t.lastCreatedElement));const a=this.iI(i,t,t.currentElement);this.xh(t,i),r&&t.endGroup(),t.outerGroup&&t.endGroup();const c=t.surface.$u,u=r?this.svg:t.currentElement;if(h!==null&&h.parentNode!==null&&u!==h&&h.parentNode===this.panel.svg){const m=this.svg.getAttribute(\"filter\");return m!==null&&u.setAttribute(\"filter\",m),this.filter!==\"\"&&u.setAttributeNS(null,\"filter\",this.filter),h.replaceWith(u),this.svg=u,u!==null&&this.A0(t,s,e,u),!0}if(this.svg=u,c!==null&&u===null&&t.dummyGroup(),u===null)return!0;this.A0(t,s,e,u),this.eI(u,i,t,a);const d=this.Ws()?this.opacity*t.globalAlpha:this.opacity;if(d!==1&&u.setAttributeNS(null,\"opacity\",d.toString()),this.filter!==\"\"&&u.setAttributeNS(null,\"filter\",this.filter),this.Ws()){if(h!==null&&u!==h&&h.parentNode===t.diagramGroup){const m=h.getAttribute(\"filter\");m!==null&&u.setAttribute(\"filter\",m),h.replaceWith(u)}else t.lastDrawnPart?t.lastDrawnPart.after(u):t.diagramGroup.prepend(u);t.lastDrawnPart=u}else s!==null&&this.DL(s,u);return c!==null&&c(this,u),this.FL(u),!0}FL(t){const i=this,e=t.dataset;i instanceof GraphObject&&(i.portId!==null&&(e.portId=i.portId),i instanceof Panel&&(isNaN(i.itemIndex)||(e.itemIndex=i.itemIndex.toString()),i instanceof Part&&(e.className=U.Bn(i),i.key!==void 0&&(e.key=i.key.toString()),i.containingGroup!==null&&(e.group=i.containingGroup.key.toString()),i instanceof Link&&(i.fromNode!==null&&i.fromNode.key!==void 0&&(e.fromKey=i.fromNode.key.toString()),i.fromPortId!==\"\"&&(e.fromPortId=i.fromPortId),i.toNode!==null&&i.toNode.key!==void 0&&(e.toKey=i.toNode.key.toString()),i.toPortId!==\"\"&&(e.toPortId=i.toPortId)))))}A0(t,i,e,s){let n=(this.l&256)!==0;if(t.clipInsteadOfFill&&(n=!1),!n){s.removeAttributeNS(null,\"clip-path\");return}const o=i.mn()?i.naturalBounds:i.actualBounds;let r=Math.max(e.x,o.x),l=Math.max(e.y,o.y),h=Math.min(e.right,o.right)-r,f=Math.min(e.bottom,o.bottom)-l;const a=this.hi;a!==null&&(r=a.x,l=a.y,h=a.width,f=a.height);const c=new Rect(r,l,Math.max(h,0),Math.max(f,0));this instanceof Panel&&this.F.copy().Lw().Yg(c),s.setAttributeNS(null,\"clip-path\",`path('      M ${c.x},${c.y}       L ${c.width+c.x} ${c.y}       L ${c.width+c.x} ${c.height+c.y}       L ${c.x} ${c.height+c.y} z') view-box`)}nI(){if(this.svg===null)return;const t=this.svg.innerHTML.match(/url\\(#((CLIP|GRAD).+?)\\)/g),i=this.svg.ownerDocument;if(t!==null)for(const e of t){const s=i.getElementById(e.split(\"#\")[1].slice(0,-1));s!==null&&s.remove()}this.svg.remove()}tI(t,i){const e=this.Di,s=this.qi,n=this.Rt;n!==null&&t.commitTransform(),n!==null&&(this.un(t,n,!0,!1,s,e),n instanceof Brush&&n.type===3?(t.beginPath(),t.rect(e.x,e.y,e.width,e.height),t.fillContext(n,!1,null)):t.fillRect(e.x,e.y,e.width,e.height)),this.xh(t,i)}xh(t,i){}oc(){this.He(!0)}nc(t,i,e){const s=this.svg;if(this.oI()){if(this.oc(),this.He(!1),s===null)return!1;const a=s.getAttribute(\"clip-path\");if(a!==null&&a.includes(\"url\")){const u=t.svg.getElementById(a.split(\"#\")[1].slice(0,-1));u!==null&&u.remove()}return s.getAttribute(\"filter\")&&s.removeAttribute(\"filter\"),!1}if(s===null)return!1;if(!this.visible)return s.remove(),!1;if(s.nodeName!==\"g\"&&e||s.nodeName===\"g\"&&!e)return!1;const n=this.F,o=\"matrix(\"+n.m11+\", \"+n.m12+\", \"+n.m21+\", \"+n.m22+\", \"+n.dx+\", \"+n.dy+\")\",r=this instanceof Panel,l=r?this.el():!1;if(!(r&&l))if(this instanceof Picture){const a=this.tb;t.setCurrentTransform(n.m11,n.m12,n.m21,n.m22,n.dx,n.dy),a!==null&&t.amendImageTransform(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7]),e?s.lastElementChild.setAttributeNS(null,\"transform\",t.getCurrentTransform()):s.setAttributeNS(null,\"transform\",t.getCurrentTransform())}else if(e&&!r)if(this instanceof Shape){const a=s.getElementsByTagName(\"path\");for(let c=0;c<a.length;c++)a[c].setAttributeNS(null,\"transform\",o)}else if(this instanceof TextBlock){const a=s.getElementsByTagName(\"text\"),c=typeof this.stroke==\"string\"?this.stroke:null;for(let u=0;u<a.length;u++)a[u].setAttributeNS(null,\"transform\",o),c&&a[u].setAttributeNS(null,\"fill\",c)}else(s.lastElementChild||s).setAttributeNS(null,\"transform\",o);else if(r&&this.isClipping&&this.gh){const a=this.findMainElement(),c=a!==null?a.actualBounds.x:0,u=a!==null?a.actualBounds.y:0;this.gh.setAttributeNS(null,\"transform\",\"matrix(1,0,0,1,\"+-c+\", \"+-u+\")\"),s.setAttributeNS(null,\"transform\",\"matrix(\"+n.m11+\", \"+n.m12+\", \"+n.m21+\", \"+n.m22+\", \"+(n.dx+c)+\", \"+(n.dy+u)+\")\")}else s.setAttributeNS(null,\"transform\",o);const h=this.Ws()?this.opacity*t.globalAlpha:this.opacity;h===1?s.removeAttribute(\"opacity\"):s.setAttributeNS(null,\"opacity\",h.toString()),t.setCurrentTransform(1,0,0,1,0,0);const f=this.gh?this.gh:this.J1;if(this.background!==null||f.Rt!==void 0){const a=f.Rt;if(this.background===null)t.removeOldGradient(this,f.Rt,\"fill\"),f.Rt.remove(),f.Rt=void 0;else{if((l||e&&!(this instanceof Panel))&&t.setCurrentTransform(n.m11,n.m12,n.m21,n.m22,n.dx,n.dy),this.Z1(t,this.naturalBounds,this.actualBounds),f.Rt){t.removeOldGradient(this,f.Rt,\"fill\");const c=f.Rt.getAttribute(\"filter\");c!==null&&t.lastCreatedElement.setAttribute(\"filter\",c),f.Rt.replaceWith(t.lastCreatedElement)}else f.prepend(t.lastCreatedElement);f.Rt=t.lastCreatedElement}a&&t.removeOldGradient(this,a,\"fill\")}return this.A0(t,this.panel,this.actualBounds,s),!0}nd(t){if(this.background!==null)return!0;let i=(this.l&256)!==0;return t.clipInsteadOfFill&&(i=!1),!!i}static FE(t,i,e,s,n,o,r){let l=.001;const h=o.length;t.moveTo(i,e);let f=s-i;const a=n-e;f===0&&(f=.001);const c=a/f;let u=Math.sqrt(f*f+a*a),d=0,m=!0;l=o[d%h];let g=r!==0;for(;u>=.1;){if(g){for(l=o[d++%h],l-=r;l<0;)l+=o[d++%h],m=!m;g=!1}else l=o[d++%h];l>u&&(l=u);let p=Math.sqrt(l*l/(1+c*c));f<0&&(p=-p),i+=p,e+=c*p,m?t.lineTo(i,e):t.moveTo(i,e),u-=l,m=!m}}un(t,i,e,s,n,o){let r=1,l=1;if(typeof i==\"string\"){e?t.fillStyle=i:t.strokeStyle=i;return}else if(i.type===1){e?t.fillStyle=i.color:t.strokeStyle=i.color;return}let h;const f=this.M0();r=n.width,l=n.height,s?(r=o.width,l=o.height):e||(r+=f,l+=f);const a=t instanceof CanvasSurfaceContext;if(a&&i.pn&&(i.type===4||i.rc===r&&i.ib===l))h=i.pn;else{let c=0,u=0,d=0,m=0,g=0,p=0,w=0,x=0;if(s?(w=o.x,x=o.y):e||(w-=f/2,x-=f/2),c=i.start.x*r+i.start.offsetX+w,u=i.start.y*l+i.start.offsetY+x,d=i.end.x*r+i.end.offsetX+w,m=i.end.y*l+i.end.offsetY+x,i.type===2)h=t.createLinearGradient(c,u,d,m);else if(i.type===3)p=isNaN(i.endRadius)?Math.max(r,l)/2:i.endRadius,isNaN(i.startRadius)?(g=0,p=Math.max(r,l)/2):g=i.startRadius,h=t.createRadialGradient(c,u,g,d,m,p);else if(i.type===4)try{h=t.createPattern(i.pattern,\"repeat\")}catch{h=null}else U.Pi(i.type,\"Brush type\");if(i.type!==4){const k=i.colorStops;if(k!==null){const b=k.iterator;for(;b.next();)h.addColorStop(b.key,b.value)}}if(a&&(i.pn=h,h!==null&&(i.rc=r,i.ib=l),h===null&&i.type===4&&i.rc!==-1)){i.rc=-1;const k=this.diagram;k!==null&&i.rc===-1&&U.lr(()=>{k.redraw()},600)}}e?t.fillStyle=h:t.strokeStyle=h}isContainedBy(t){return t instanceof Panel?this.rI(this,t):!1}rI(t,i){if(t===i||i===null)return!1;let e=t.panel;for(;e!==null;){if(e===i)return!0;e=e.panel}return!1}isVisibleObject(){if(!this.visible)return!1;const t=this.panel;return t!==null?t.isVisibleObject():!0}isEnabledObject(){let t=this instanceof Panel?this:this.panel;for(;t!==null&&t.isEnabled;)t=t.panel;return t===null}get enabledChanged(){return this.b!==null?this.b.L0:null}set enabledChanged(t){const i=this.enabledChanged;i!==t&&(t!==null&&U.P(t,GraphObject,\"enabledChanged\"),this.Jt().L0=t,this.t(\"enabledChanged\",i,t))}$1(){if(this.eb()===!0){const t=this._r;if(t.Vi(),!this.Di.isReal()||!this.le.isReal()){this.od(!1);return}if(t.Bs(this.Di.x-this.le.x,this.Di.y-this.le.y),this.scale!==1||this.angle!==0){const i=this.naturalBounds;this.k0(t,i.x,i.y,i.width,i.height)}this.od(!1),this.La(!0)}if(this.S0()===!0){const t=this.panel;if(t===null)this.dh.set(this._r),this.ba=this.scale;else if(t.Us!==null){const i=this.dh;i.Vi(),t.mn()?i.uf(t.dh):t.panel!==null&&i.uf(t.panel.dh),i.uf(this._r),this.ba=this.scale*t.ba}this.La(!1)}}k0(t,i,e,s,n){if(this.ot!==1&&t.ot(this.ot),this.jt===0)return;const o=Point.a();o.setSpot(i,e,s,n,Spot.Center),t.ms(this.jt,o.x,o.y),Point.o(o)}u(t){if(this.Eo())return;t===void 0&&(t=!1),this.pe(!0),this.to(!0);const i=this.panel;i!==null&&!t&&i.u()}lc(){this.Eo()||(this.pe(!0),this.to(!0))}hc(t){if(this.ns())return;const i=this.panel;!t&&i!==null&&i.u(),this.to(!0)}sc(){this.eb()===!1&&(this.od(!0),this.La(!0))}TP(){this.La(!0)}L(){const t=this.part;t!==null&&t.L()}qs(t){const i=this.stretch,e=this.panel;if(e===null)return this.Yo(i===1?0:i,t);if(e.type===Panel.Table)return this.T0(e.getRowDefinition(this.row),e.getColumnDefinition(this.column),t);if(e.type===Panel.Auto&&e.findMainElement()===this)return this.Yo(2,t);if(i===1){if(e.type===Panel.Spot&&e.findMainElement()===this)return this.Yo(2,t);const s=e.defaultStretch;return s===1?this.Yo(0,t):this.Yo(s,t)}return this.Yo(i,t)}T0(t,i,e){const s=this.stretch;if(s!==1)return this.Yo(s,e);let n=null,o=null;switch(t.stretch){case 1:case 5:break;case 4:o=!0;break;case 2:o=!0;break}switch(i.stretch){case 1:case 4:break;case 5:n=!0;break;case 2:n=!0;break}const r=this.panel.defaultStretch;return n===null&&(n=r===5||r===2),o===null&&(o=r===4||r===2),n===!0&&o===!0?this.Yo(2,e):n===!0?this.Yo(5,e):o===!0?this.Yo(4,e):this.Yo(0,e)}Yo(t,i){if(i)return t;if(t===0)return 0;const e=this.desiredSize;if(e.isReal())return 0;const s=!isNaN(e.width),n=!isNaN(e.height),o=this.angle;if(s)if(o!==90&&o!==270){if(t===5)return 0;if(t===2)return 4}else{if(t===4)return 0;if(t===2)return 5}if(n)if(o!==90&&o!==270){if(t===4)return 0;if(t===2)return 5}else{if(t===5)return 0;if(t===2)return 4}return t}get segmentOrientation(){return this.Xt!==null?this.Xt.D0:0}set segmentOrientation(t){const i=this.segmentOrientation;i!==t&&(Debug&&U.j(t,Orientation,\"Orientation\"),this.Xt===null&&(this.Xt=new LinkElementSettings),this.Xt.D0=t,this.u(),this.t(\"segmentOrientation\",i,t),t===0&&(this.angle=0))}lI(){this.segmentOrientation=21}get segmentIndex(){return this.Xt!==null?this.Xt.F0:-1/0}set segmentIndex(t){Debug&&U.i(t,\"number\",GraphObject,\"segmentIndex\"),t=Math.round(t);const i=this.segmentIndex;i!==t&&(this.Xt===null&&(this.Xt=new LinkElementSettings),this.Xt.F0=t,this.u(),this.t(\"segmentIndex\",i,t))}get segmentFraction(){return this.Xt!==null?this.Xt.R0:0}set segmentFraction(t){Debug&&U.r(t,GraphObject,\"segmentFraction\"),t<0?t=0:t>1&&(t=1);const i=this.segmentFraction;i!==t&&(this.Xt===null&&(this.Xt=new LinkElementSettings),this.Xt.R0=t,this.u(),this.t(\"segmentFraction\",i,t))}get segmentOffset(){return this.Xt!==null?this.Xt.I0:Point.No}set segmentOffset(t){const i=this.segmentOffset;i.equals(t)||(Debug&&U.e(t,Point,GraphObject,\"segmentOffset\"),t=t.N(),this.Xt===null&&(this.Xt=new LinkElementSettings),this.Xt.I0=t,this.u(),this.t(\"segmentOffset\",i,t))}get stretch(){return this.b!==null?this.b.io:1}set stretch(t){const i=this.stretch;i!==t&&(Debug&&U.j(t,Stretch,\"Stretch\"),this.Jt().io=t,this.u(),this.t(\"stretch\",i,t))}get name(){return this.b!==null?this.b.Lt:\"\"}set name(t){const i=this.name;i!==t&&(Debug&&U.i(t,\"string\",GraphObject,\"name\"),this.Jt().Lt=t,this.part!==null&&this.part.O0(),this.t(\"name\",i,t))}get opacity(){return this.ii}set opacity(t){Debug&&U.r(t,GraphObject,\"opacity\"),t<0?t=0:t>1&&(t=1);const i=this.opacity;if(i!==t){this.ii=t,this.t(\"opacity\",i,t);const e=this.diagram,s=this.part;e!==null&&s!==null&&e.L(s.ta(s.actualBounds))}}get filter(){return this.x0}set filter(t){const i=this.filter;if(i!==t){Debug&&U.i(t,\"string\",GraphObject,\"filter\"),this.x0=t,this.He(!0),this.t(\"filter\",i,t);const e=this.diagram,s=this.part;e!==null&&s!==null&&e.L(s.ta(s.actualBounds))}}get visible(){return(this.l&1)!==0}set visible(t){const i=(this.l&1)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",GraphObject,\"visible\"),this.l=this.l^1,this.oc(),this.t(\"visible\",i,t);const e=this.panel;e!==null?e.u():this.Ws()&&this.Ki(t),this.L(),this.RL()}}get pickable(){return(this.l&2)!==0}set pickable(t){const i=(this.l&2)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",GraphObject,\"pickable\"),this.l=this.l^2,this.t(\"pickable\",i,t))}get fromLinkableDuplicates(){return(this.l&4)!==0}set fromLinkableDuplicates(t){const i=(this.l&4)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",GraphObject,\"fromLinkableDuplicates\"),this.l=this.l^4,this.t(\"fromLinkableDuplicates\",i,t))}get fromLinkableSelfNode(){return(this.l&8)!==0}set fromLinkableSelfNode(t){const i=(this.l&8)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",GraphObject,\"fromLinkableSelfNode\"),this.l=this.l^8,this.t(\"fromLinkableSelfNode\",i,t))}get toLinkableDuplicates(){return(this.l&16)!==0}set toLinkableDuplicates(t){const i=(this.l&16)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",GraphObject,\"toLinkableDuplicates\"),this.l=this.l^16,this.t(\"toLinkableDuplicates\",i,t))}get toLinkableSelfNode(){return(this.l&32)!==0}set toLinkableSelfNode(t){const i=(this.l&32)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",GraphObject,\"toLinkableSelfNode\"),this.l=this.l^32,this.t(\"toLinkableSelfNode\",i,t))}get isPanelMain(){return(this.l&64)!==0}set isPanelMain(t){const i=(this.l&64)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",GraphObject,\"isPanelMain\"),this.l=this.l^64,this.u(),this.t(\"isPanelMain\",i,t))}get isActionable(){return(this.l&128)!==0}set isActionable(t){const i=(this.l&128)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",GraphObject,\"isActionable\"),this.l=this.l^128,this.t(\"isActionable\",i,t))}get background(){return this.Rt}set background(t){const i=this.background;i!==t&&(t!==null&&Brush.rd(t,\"GraphObject.background\"),t instanceof Brush&&t.p(),this.Rt=t,this.L(),this.t(\"background\",i,t))}AP(){return(this.l&512)!==0}_1(t){t?this.l|=512:this.l&=-513}ic(){return(this.l&1024)!==0}DP(t){t?this.l|=1024:this.l&=-1025}eb(){return(this.l&2048)!==0}od(t){t?this.l|=2048:this.l&=-2049}S0(){return(this.l&4096)!==0}La(t){t?this.l|=4096:this.l&=-4097}Eo(){return(this.l&8192)!==0}pe(t){t?this.l|=8192:this.l&=-8193}ns(){return(this.l&16384)!==0}to(t){t?this.l|=16384:this.l&=-16385}oI(){return(this.l&32768)!==0}He(t){t?this.l|=32768:this.l&=-32769}get part(){if(this.Ws())return this;if(this.il!==null)return this.il;let t=this;for(t=t.panel;t;){if(t instanceof Part)return this.il=t,t;t=t.panel}return null}get svg(){return this.J1}set svg(t){this.J1=t}Eu(){this.svg=null}get panel(){return this.Hs}Ta(t){this.Hs=t,this.svg!==null&&this.svg.remove()}get layer(){const t=this.part;return t!==null?t.layer:null}get diagram(){const t=this.part;return t!==null?t.diagram:null}get position(){return this.gt}set position(t){Debug&&U.e(t,Point,GraphObject,\"position\");const i=t.x,e=t.y,s=this.position,n=s.x,o=s.y;n!==i&&(!isNaN(n)||!isNaN(i))||o!==e&&(!isNaN(o)||!isNaN(e))?(t=t.copy(),this.FP(t,n,o)&&this.t(\"position\",new Point(n,o),t.copy())):this.RP()}RP(){}FP(t,i,e){return this.gt=t,this.hc(),!0}Lf(t,i,e){this.gt.x===t&&this.gt.y===i||(this.gt.s(t,i),this.sc())}get actualBounds(){return this.Di}get scale(){return this.ot}set scale(t){const i=this.scale;i!==t&&(Debug&&U.r(t,GraphObject,\"scale\"),t<=0&&U.n(\"GraphObject.scale for \"+this+\" must be greater than zero, not: \"+t),this.ot=t,this.u(),this.t(\"scale\",i,t))}get angle(){return this.jt}set angle(t){const i=this.angle;if(i!==t){if(Debug&&U.r(t,GraphObject,\"angle\"),t=t%360,t<0&&(t+=360),i===t)return;this.jt=t,this.RL(),this.u(),this.t(\"angle\",i,t)}}get desiredSize(){return this.rs}set desiredSize(t){Debug&&U.e(t,Size,GraphObject,\"desiredSize\");const i=t.width,e=t.height,s=this.desiredSize,n=s.width,o=s.height;if((n!==i&&(!isNaN(n)||!isNaN(i))||o!==e&&(!isNaN(o)||!isNaN(e)))&&(t=t.N(),this.rs=t,this.u(),this instanceof Shape&&this.re(),this.t(\"desiredSize\",s,t),this.ic())){const r=this.part;r!==null&&(this.Aa(r,\"width\"),this.Aa(r,\"height\"))}}get width(){return this.rs.width}set width(t){const i=this.rs.width;if(i!==t&&(!isNaN(i)||!isNaN(t))){Debug&&U.i(t,\"number\",GraphObject,\"width\");const e=this.rs,s=new Size(t,this.rs.height).p();if(this.rs=s,this.u(),this instanceof Shape&&this.re(),this.t(\"desiredSize\",e,s),this.ic()){const n=this.part;n!==null&&this.Aa(n,\"width\")}}}get height(){return this.rs.height}set height(t){const i=this.rs.height;if(i!==t&&(!isNaN(i)||!isNaN(t))){Debug&&U.i(t,\"number\",GraphObject,\"height\");const e=this.rs,s=new Size(this.rs.width,t).p();if(this.rs=s,this.u(),this instanceof Shape&&this.re(),this.t(\"desiredSize\",e,s),this.ic()){const n=this.part;n!==null&&this.Aa(n,\"height\")}}}get minSize(){return this.b!==null?this.b.Sr:Size.Gh}set minSize(t){const i=this.minSize;i.equals(t)||(Debug&&U.e(t,Size,GraphObject,\"minSize\"),t=t.copy(),isNaN(t.width)&&(t.width=0),isNaN(t.height)&&(t.height=0),t.p(),this.Jt().Sr=t,this.u(),this.t(\"minSize\",i,t))}get maxSize(){return this.b!==null?this.b.Mr:Size.Mw}set maxSize(t){const i=this.maxSize;i.equals(t)||(Debug&&U.e(t,Size,GraphObject,\"maxSize\"),t=t.copy(),isNaN(t.width)&&(t.width=1/0),isNaN(t.height)&&(t.height=1/0),t.p(),this.Jt().Mr=t,this.u(),this.t(\"maxSize\",i,t))}get measuredBounds(){return this.le}get naturalBounds(){return this.qi}M0(){return 0}get margin(){return this.tl}set margin(t){typeof t==\"number\"?t=new Margin(t):Debug&&U.e(t,Margin,GraphObject,\"margin\");const i=this.tl;i.equals(t)||(t=t.N(),this.tl=t,this.u(),this.t(\"margin\",i,t))}get F(){return this.eb()===!0&&this.$1(),this._r}get Us(){return this.S0()===!0&&this.$1(),this.dh}trigger(t,i,e){let s=null;return typeof t==\"string\"?s=new AnimationTrigger(t,i,e):s=t,s.Ne=this,this.Ms===null&&(this.Ms=new GMap),this.Ms.set(s.propertyName,s),this}get Ms(){return this.b!==null?this.b.Ms:null}set Ms(t){this.Ms!==t&&(this.Jt().Ms=t)}get kr(){return this.b!==null?this.b.kr:0}set kr(t){this.kr!==t&&(this.Jt().kr=t)}get alignment(){return this.ui}set alignment(t){const i=this.alignment;i.equals(t)||(Debug&&U.e(t,Spot,GraphObject,\"alignment\"),t.isNoSpot()&&!t.isDefault()&&U.n(\"GraphObject.alignment for \"+this+\" must be a real Spot or Spot.Default, not: \"+t),t=t.N(),this.ui=t,this.hc(),this.t(\"alignment\",i,t))}get column(){return this.Qr}set column(t){Debug&&U.r(t,GraphObject,\"column\"),t=Math.round(t);const i=this.column;i!==t&&(t<0&&U.U(t,\">= 0\",GraphObject,\"column\"),this.Qr=t,this.u(),this.t(\"column\",i,t),this.svg!==null&&this.svg.remove())}get columnSpan(){return this.b!==null?this.b.E0:1}set columnSpan(t){Debug&&U.i(t,\"number\",GraphObject,\"columnSpan\"),t=Math.round(t);const i=this.columnSpan;i!==t&&(t<1&&U.U(t,\">= 1\",GraphObject,\"columnSpan\"),this.Jt().E0=t,this.u(),this.t(\"columnSpan\",i,t))}get row(){return this.w0}set row(t){Debug&&U.r(t,GraphObject,\"row\"),t=Math.round(t);const i=this.row;i!==t&&(t<0&&U.U(t,\">= 0\",GraphObject,\"row\"),this.w0=t,this.u(),this.t(\"row\",i,t),this.svg!==null&&this.svg.remove())}get rowSpan(){return this.b!==null?this.b.B0:1}set rowSpan(t){Debug&&U.i(t,\"number\",GraphObject,\"rowSpan\"),t=Math.round(t);const i=this.rowSpan;i!==t&&(t<1&&U.U(t,\">= 1\",GraphObject,\"rowSpan\"),this.Jt().B0=t,this.u(),this.t(\"rowSpan\",i,t))}get spanAllocation(){return this.b!==null?this.b.V0:null}set spanAllocation(t){const i=this.spanAllocation;i!==t&&(t!==null&&U.P(t,GraphObject,\"spanAllocation\"),this.Jt().V0=t,this.u(),this.t(\"spanAllocation\",i,t))}get alignmentFocus(){return this.Qu}set alignmentFocus(t){const i=this.alignmentFocus;i.equals(t)||(Debug&&U.e(t,Spot,GraphObject,\"alignmentFocus\"),Debug&&t.isNoSpot()&&!t.isDefault()&&!(t.isNone()&&this instanceof Node)&&U.n(\"GraphObject.alignmentFocus must be a real Spot or Spot.Default, not: \"+t),t=t.N(),this.Qu=t,this.u(),this.t(\"alignmentFocus\",i,t))}get portId(){return this.y0}set portId(t){const i=this.portId;if(i!==t){Debug&&t!==null&&U.i(t,\"string\",GraphObject,\"portId\");const e=this.part;e!==null&&!(e instanceof Node)&&U.n(\"Cannot set portID on a Link: \"+t);const s=e;i!==null&&s!==null&&s.IP(this),this.y0=t,t!==null&&s!==null&&(s.yn=!0,s.IL(this)),this.t(\"portId\",i,t)}}Da(){const t=this.part;if(t instanceof Node&&(this.portId!==null||this===t.port)){const i=t.diagram;i!==null&&!i.undoManager.isUndoingRedoing&&t.CL(this)}}RL(){const t=this.diagram;t===null||t.undoManager.isUndoingRedoing||(this instanceof Panel?this instanceof Node?this.invalidateConnectedLinks():this.walkVisualTreeFrom(this,i=>{i.Da()}):this.Da())}get toSpot(){return this.yt!==null?this.yt.Sa:Spot.None}set toSpot(t){const i=this.toSpot;i.equals(t)||(Debug&&U.e(t,Spot,GraphObject,\"toSpot\"),t=t.N(),this.Ge().Sa=t,this.t(\"toSpot\",i,t),this.Da())}get toEndSegmentLength(){return this.yt!==null?this.yt.Pa:10}set toEndSegmentLength(t){const i=this.toEndSegmentLength;i!==t&&(Debug&&U.i(t,\"number\",GraphObject,\"toEndSegmentLength\"),t<0&&U.U(t,\">= 0\",GraphObject,\"toEndSegmentLength\"),this.Ge().Pa=t,this.t(\"toEndSegmentLength\",i,t),this.Da())}get toShortLength(){return this.yt!==null?this.yt.Ca:0}set toShortLength(t){const i=this.toShortLength;i!==t&&(Debug&&U.i(t,\"number\",GraphObject,\"toShortLength\"),this.Ge().Ca=t,this.t(\"toShortLength\",i,t),this.Da())}get toLinkable(){return this.yt!==null?this.yt.z0:null}set toLinkable(t){const i=this.toLinkable;i!==t&&(Debug&&t!==null&&U.i(t,\"boolean\",GraphObject,\"toLinkable\"),this.Ge().z0=t,this.t(\"toLinkable\",i,t))}get toMaxLinks(){return this.yt!==null?this.yt.X0:1/0}set toMaxLinks(t){const i=this.toMaxLinks;i!==t&&(Debug&&U.i(t,\"number\",GraphObject,\"toMaxLinks\"),t<0&&U.U(t,\">= 0\",GraphObject,\"toMaxLinks\"),this.Ge().X0=t,this.t(\"toMaxLinks\",i,t))}get fromSpot(){return this.yt!==null?this.yt.ka:Spot.None}set fromSpot(t){const i=this.fromSpot;i.equals(t)||(Debug&&U.e(t,Spot,GraphObject,\"fromSpot\"),t=t.N(),this.Ge().ka=t,this.t(\"fromSpot\",i,t),this.Da())}get fromEndSegmentLength(){return this.yt!==null?this.yt.Ma:10}set fromEndSegmentLength(t){const i=this.fromEndSegmentLength;i!==t&&(Debug&&U.i(t,\"number\",GraphObject,\"fromEndSegmentLength\"),t<0&&U.U(t,\">= 0\",GraphObject,\"fromEndSegmentLength\"),this.Ge().Ma=t,this.t(\"fromEndSegmentLength\",i,t),this.Da())}get fromShortLength(){return this.yt!==null?this.yt.Na:0}set fromShortLength(t){const i=this.fromShortLength;i!==t&&(Debug&&U.i(t,\"number\",GraphObject,\"fromShortLength\"),this.Ge().Na=t,this.t(\"fromShortLength\",i,t),this.Da())}get fromLinkable(){return this.yt!==null?this.yt.Y0:null}set fromLinkable(t){const i=this.fromLinkable;i!==t&&(Debug&&t!==null&&U.i(t,\"boolean\",GraphObject,\"fromLinkable\"),this.Ge().Y0=t,this.t(\"fromLinkable\",i,t))}get fromMaxLinks(){return this.yt!==null?this.yt.K0:1/0}set fromMaxLinks(t){const i=this.fromMaxLinks;i!==t&&(Debug&&U.i(t,\"number\",GraphObject,\"fromMaxLinks\"),t<0&&U.U(t,\">= 0\",GraphObject,\"fromMaxLinks\"),this.Ge().K0=t,this.t(\"fromMaxLinks\",i,t))}get cursor(){return this.b!==null?this.b.Ll:\"\"}set cursor(t){const i=this.cursor;i!==t&&(U.i(t,\"string\",GraphObject,\"cursor\"),this.Jt().Ll=t,this.t(\"cursor\",i,t))}get click(){return this.b!==null?this.b.Rr:null}set click(t){const i=this.click;i!==t&&(t!==null&&U.P(t,GraphObject,\"click\"),this.Jt().Rr=t,this.t(\"click\",i,t))}get doubleClick(){return this.b!==null?this.b.Ir:null}set doubleClick(t){const i=this.doubleClick;i!==t&&(t!==null&&U.P(t,GraphObject,\"doubleClick\"),this.Jt().Ir=t,this.t(\"doubleClick\",i,t))}get contextClick(){return this.b!==null?this.b.Or:null}set contextClick(t){const i=this.contextClick;i!==t&&(t!==null&&U.P(t,GraphObject,\"contextClick\"),this.Jt().Or=t,this.t(\"contextClick\",i,t))}get mouseEnter(){return this.b!==null?this.b.Xr:null}set mouseEnter(t){const i=this.mouseEnter;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseEnter\"),this.Jt().Xr=t,this.t(\"mouseEnter\",i,t))}get mouseLeave(){return this.b!==null?this.b.Yr:null}set mouseLeave(t){const i=this.mouseLeave;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseLeave\"),this.Jt().Yr=t,this.t(\"mouseLeave\",i,t))}get mouseOver(){return this.b!==null?this.b.Er:null}set mouseOver(t){const i=this.mouseOver;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseOver\"),this.Jt().Er=t,this.t(\"mouseOver\",i,t))}get mouseHover(){return this.b!==null?this.b.Br:null}set mouseHover(t){const i=this.mouseHover;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseHover\"),this.Jt().Br=t,this.t(\"mouseHover\",i,t))}get mouseHold(){return this.b!==null?this.b.Vr:null}set mouseHold(t){const i=this.mouseHold;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseHold\"),this.Jt().Vr=t,this.t(\"mouseHold\",i,t))}get mouseDragEnter(){return this.b!==null?this.b.U0:null}set mouseDragEnter(t){const i=this.mouseDragEnter;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseDragEnter\"),this.Jt().U0=t,this.t(\"mouseDragEnter\",i,t))}get mouseDragLeave(){return this.b!==null?this.b.G0:null}set mouseDragLeave(t){const i=this.mouseDragLeave;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseDragLeave\"),this.Jt().G0=t,this.t(\"mouseDragLeave\",i,t))}get mouseDrop(){return this.b!==null?this.b.zr:null}set mouseDrop(t){const i=this.mouseDrop;i!==t&&(t!==null&&U.P(t,GraphObject,\"mouseDrop\"),this.Jt().zr=t,this.t(\"mouseDrop\",i,t))}get actionDown(){return this.b!==null?this.b.H0:null}set actionDown(t){const i=this.actionDown;i!==t&&(t!==null&&U.P(t,GraphObject,\"actionDown\"),this.Jt().H0=t,this.t(\"actionDown\",i,t))}get actionMove(){return this.b!==null?this.b.q0:null}set actionMove(t){const i=this.actionMove;i!==t&&(t!==null&&U.P(t,GraphObject,\"actionMove\"),this.Jt().q0=t,this.t(\"actionMove\",i,t))}get actionUp(){return this.b!==null?this.b.W0:null}set actionUp(t){const i=this.actionUp;i!==t&&(t!==null&&U.P(t,GraphObject,\"actionUp\"),this.Jt().W0=t,this.t(\"actionUp\",i,t))}get actionCancel(){return this.b!==null?this.b.j0:null}set actionCancel(t){const i=this.actionCancel;i!==t&&(t!==null&&U.P(t,GraphObject,\"actionCancel\"),this.Jt().j0=t,this.t(\"actionCancel\",i,t))}get toolTip(){return this.b!==null?this.b.Kr:null}set toolTip(t){const i=this.toolTip;i!==t&&(Debug&&t!==null&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"GraphObject.toolTip must be an Adornment or HTMLInfo.\"),this.Jt().Kr=t,this.t(\"toolTip\",i,t))}get contextMenu(){return this.b!==null?this.b.Ur:null}set contextMenu(t){const i=this.contextMenu;i!==t&&(Debug&&!(t instanceof Adornment||t instanceof HTMLInfo)&&U.n(\"GraphObject.contextMenu must be an Adornment or HTMLInfo.\"),this.Jt().Ur=t,this.t(\"contextMenu\",i,t))}findBindingPanel(){let t=this instanceof Panel?this:this.panel;for(;t!==null;){if(t.OP())return t;t=t.panel}return null}bind(t,i,e,s){return this.ac(t,i,e,s),this}bindTwoWay(t,i,e,s){return this.ac(t,i,e,s).makeTwoWay(),this}bindModel(t,i,e,s){return this.ac(t,i,e,s).ofModel(),this}bindObject(t,i,e,s,n){return this.ac(t,i,e,s).ofObject(n),this}theme(t,i,e,s,n){return this.bh(t,i,e,s,n),this}themeData(t,i,e,s,n){return this.bh(t,i,e,s,n).ofData(),this}themeObject(t,i,e,s,n,o){return this.bh(t,i,e,s,n).ofObject(o),this}themeModel(t,i,e,s,n){return this.bh(t,i,e,s,n).ofModel(),this}ac(t,i,e,s){let n=null;return typeof t==\"string\"?n=new Binding(t,i,e,s):n=t,this.v0(n),n}bh(t,i,e,s,n){let o=null;return typeof t==\"string\"?o=new ThemeBinding(t,i,e,s,n):o=t,this.v0(o),o}v0(t){t.Ne=this;const i=this.findBindingPanel();i!==null&&i.OL()&&U.n(\"Cannot add a Binding to a template that has already been copied: \"+t),this.Fi===null&&(this.Fi=new List),this.Fi.add(t)}set(t){if(Debug)for(const i in t)(i.startsWith(\"_\")||i.indexOf(\".\")!==-1)&&U.n(\"Property with underscore or period passed to GraphObject.set. Did you mean to use GraphObject.attach?\");return Object.assign(this,t),this}attach(t){return GraphObject.EP(this,t),this}apply(t){return t(this),this}setProperties(t){return Diagram.f0(this,t),this}static make(t,...i){let e=arguments,s=null,n=null;if(U.rt(t))n=t;else if(typeof t==\"string\"){const r=GraphObject.sb.get(t);U.rt(r)?(e=Array.prototype.slice.call(e),s=r(e),U.W(s)||U.n('GraphObject.make invoked object builder \"'+t+'\", but it did not return an Object')):n=root.go[t]}s===null&&((n==null||!n.constructor)&&U.n(\"GraphObject.make requires a class function or GoJS class name or name of an object builder, not: \"+t),s=new n);let o=1;if(s instanceof Diagram&&e.length>1){const r=s,l=e[1];(typeof l==\"string\"||l instanceof HTMLDivElement)&&(r.X2(l),o++)}for(let r=o;r<e.length;r++){const l=e[r];l===void 0?U.n(\"Undefined value at argument \"+r+\" for object being constructed by GraphObject.make: \"+s):GraphObject.EP(s,l)}return s}static EP(t,i){if(typeof i==\"number\")GraphObject.hI(t,i);else if(typeof i==\"string\")GraphObject.aI(t,i);else if(i instanceof GraphObject)t instanceof Panel||U.n(\"A GraphObject can only be added to a Panel, not to: \"+t),t.add(i);else if(i instanceof RowColumnDefinition){let e;i.isRow&&U.rt(t.getRowDefinition)?e=t.getRowDefinition(i.index):!i.isRow&&U.rt(t.getColumnDefinition)&&(e=t.getColumnDefinition(i.index)),e instanceof RowColumnDefinition?e.nb(i):U.n(\"A RowColumnDefinition can only be added to an object that implements getRowDefinition/getColumnDefinition, not to: \"+t)}else if(i instanceof PanelLayout){const e=t;e.type=i}else if(i instanceof Binding)t instanceof GraphObject||t instanceof RowColumnDefinition?t.bind(i):U.n(\"A Binding can only be applied to a GraphObject or RowColumnDefinition, not to: \"+t);else if(i instanceof AnimationTrigger)t instanceof GraphObject?t.trigger(i):U.n(\"An AnimationTrigger can only be applied to a GraphObject, not to: \"+t);else if(i instanceof PathFigure)t instanceof Geometry&&t.type===4?t.figures.add(i):U.n(\"A PathFigure can only be added to a Path Geometry, not to: \"+t);else if(i instanceof PathSegment)t instanceof PathFigure?t.segments.add(i):U.n(\"A PathSegment can only be added to a PathFigure, not to: \"+t);else if(i instanceof Layout)t instanceof Diagram||t instanceof Group?t.layout=i:U.n(\"A Layout can only be assigned to a Diagram or a Group, not to: \"+t);else if(Array.isArray(i))for(let e=0;e<i.length;e++){const s=i[e];GraphObject.EP(t,s)}else U.W(i)?GraphObject.fI(t,i):U.n('Unknown initializer \"'+i+'\" for object being constructed by GraphObject.make: '+t)}static aI(t,i){if(t instanceof TextBlock)t.text=i;else if(t instanceof Shape)t.figure=i;else if(t instanceof Picture)t.source=i;else if(t instanceof Panel){const e=PanelLayout.ls.get(i);e!==null?t.type=e:Debug&&U.n(\"Unknown Panel type as an argument to GraphObject.make: \"+i+\". If building from source, you may need to call Panel.definePanelLayout.\")}else if(t instanceof Brush){const e=U.Uh(BrushType,i);e!==null?t.type=e:U.n(\"Unknown Brush type as an argument to GraphObject.make: \"+i)}else if(t instanceof Geometry){const e=U.Uh(GeometryType,i);e!==null?t.type=e:Debug&&U.n(\"Unknown Geometry type as an argument to GraphObject.make: \"+i)}else if(t instanceof PathSegment){const e=U.Uh(SegmentType,i);e!==null?t.type=e:Debug&&U.n(\"Unknown PathSegment type as an argument to GraphObject.make: \"+i)}else Debug&&U.n(\"Unable to use a string as an argument to GraphObject.make: \"+i)}static hI(t,i){U.rt(t.ai)?t.ai(i):U.hr(t,i)}static fI(t,i){if(t instanceof Brush){const e=new PropertyCollection;for(const s in i){const n=parseFloat(s);isNaN(n)?e[s]=i[s]:t.addColorStop(n,i[s])}Diagram.f0(t,e)}else if(t instanceof RowColumnDefinition){if(i.row!==void 0){const s=i.row;(s==null||s===1/0||isNaN(s)||s<0)&&U.n(\"Must specify non-negative integer row for RowColumnDefinition \"+i+\", not: \"+s),t.isRow=!0,t.index=s}else if(i.column!==void 0){const s=i.column;(s==null||s===1/0||isNaN(s)||s<0)&&U.n(\"Must specify non-negative integer column for RowColumnDefinition \"+i+\", not: \"+s),t.isRow=!1,t.index=s}const e=new PropertyCollection;for(const s in i)s===\"row\"||s===\"column\"||(e[s]=i[s]);Diagram.f0(t,e)}else Diagram.f0(t,i)}static build(t,i,...e){const s=GraphObject.sb.get(t);if(U.rt(s)){const n=s([t].concat(e));if(n instanceof GraphObject)return i&&n.setProperties(i),n}U.n('GraphObject.build invoked object builder \"'+t+'\", but it did not return an Object')}static defineBuilder(t,i){U.i(t,\"string\",GraphObject,\"defineBuilder:name\"),U.P(i,GraphObject,\"defineBuilder:func\");const e=t.toLowerCase();Debug&&(t===\"\"||e===\"none\"||t===e)&&U.n(\"Shape.defineFigureGenerator name must not be empty or None or all-lower-case: \"+t),GraphObject.sb.set(t,i)}static isBuilderDefined(t){return GraphObject.sb.has(t)}static takeBuilderArgument(t,i,e){e===void 0&&(e=null);const s=t[1];return(U.rt(e)?e(s):typeof s==\"string\")?(t.splice(1,1),s):(i===void 0&&U.n(\"no \"+(U.rt(e)?\"satisfactory\":\"string\")+\" argument for GraphObject builder \"+t[0]),i)}static sb=new GMap}GraphObject.Vertical=4,GraphObject.Horizontal=5,GraphObject.defineBuilder(\"Button\",y=>{const t=\"#f5f5f5\",i=\"#737373\",e=\"#d4d4d4\",s=\"#737373\",n=\"#a3a3a3\",o=2.76142374915397,r=2.761423749153969,l=new Panel(Panel.Auto,{isActionable:!0,enabledChanged:(h,f)=>{if(h instanceof Panel){const a=h.findObject(\"ButtonBorder\");if(a!==null)if(h._buttonFillNormal===void 0&&(h._buttonFillNormal=a.fill),f){let c=null;h.layer!==null&&h.diagram!==null&&h.isVisibleObject()&&(c=h.layer.findObjectAt(h.diagram.lastInput.documentPoint)),c===h||c!==null&&c.isContainedBy(h)?a.fill=h._buttonFillOver:a.fill=h._buttonFillNormal}else a.fill=h._buttonFillDisabled}},cursor:\"pointer\"}).attach({_buttonFillNormal:void 0,_buttonStrokeNormal:void 0,_buttonFillOver:e,_buttonStrokeOver:s,_buttonFillDisabled:n}).add(new Shape(\"RoundedRectangle\",{name:\"ButtonBorder\",spot1:new Spot(0,0,o,r),spot2:new Spot(1,1,-o,-r),parameter1:2,fill:t,stroke:i}));return l.mouseEnter=(h,f,a)=>{if(!f.isEnabledObject()||!(f instanceof Panel))return;const c=f.findObject(\"ButtonBorder\");c instanceof Shape&&(f._buttonFillNormal===void 0&&(f._buttonFillNormal=c.fill),c.fill=f._buttonFillOver,f._buttonStrokeNormal===void 0&&(f._buttonStrokeNormal=c.stroke),c.stroke=f._buttonStrokeOver)},l.mouseLeave=(h,f,a)=>{if(!f.isEnabledObject()||!(f instanceof Panel))return;const c=f.findObject(\"ButtonBorder\");c instanceof Shape&&(f._buttonFillNormal!==void 0&&(c.fill=f._buttonFillNormal),f._buttonStrokeNormal!==void 0&&(c.stroke=f._buttonStrokeNormal))},l}),GraphObject.defineBuilder(\"TreeExpanderButton\",y=>{const t=GraphObject.build(\"Button\");return t.attach({_treeExpandedFigure:\"MinusLine\",_treeCollapsedFigure:\"PlusLine\",visible:!1}),t.add(new Shape(\"MinusLine\",{name:\"ButtonIcon\",stroke:\"#0a0a0a\",strokeWidth:2,desiredSize:Size.fu}).bindObject(\"figure\",\"isTreeExpanded\",(i,e)=>{const s=e.panel;return i?s._treeExpandedFigure:s._treeCollapsedFigure})),t.bindObject(\"visible\",\"isTreeLeaf\",i=>!i),t.click=(i,e)=>{let s=e.part;if(s instanceof Adornment&&(s=s.adornedPart),!(s instanceof Node))return;const n=s.diagram;if(n===null)return;const o=n.commandHandler;if(s.isTreeExpanded){if(!o.canCollapseTree(s))return}else if(!o.canExpandTree(s))return;i.handled=!0,s.isTreeExpanded?o.collapseTree(s):o.expandTree(s)},t}),GraphObject.defineBuilder(\"SubGraphExpanderButton\",y=>{const t=GraphObject.build(\"Button\");return t.attach({_subGraphExpandedFigure:\"MinusLine\",_subGraphCollapsedFigure:\"PlusLine\"}),t.add(new Shape(\"MinusLine\",{name:\"ButtonIcon\",stroke:\"#0a0a0a\",strokeWidth:2,desiredSize:Size.fu}).bindObject(\"figure\",\"isSubGraphExpanded\",(i,e)=>{const s=e.panel;return i?s._subGraphExpandedFigure:s._subGraphCollapsedFigure})),t.click=(i,e)=>{let s=e.part;if(s instanceof Adornment&&(s=s.adornedPart),!(s instanceof Group))return;const n=s.diagram;if(n===null)return;const o=n.commandHandler;if(s.isSubGraphExpanded){if(!o.canCollapseSubGraph(s))return}else if(!o.canExpandSubGraph(s))return;i.handled=!0,s.isSubGraphExpanded?o.collapseSubGraph(s):o.expandSubGraph(s)},t}),GraphObject.defineBuilder(\"ToolTip\",y=>new Adornment(Panel.Auto,{isShadowed:!0,shadowColor:\"rgba(0, 0, 0, .4)\",shadowOffset:new Point(0,2)}).add(new Shape(\"RoundedRectangle\",{name:\"Border\",parameter1:1,fill:\"#f5f5f5\",strokeWidth:0,spot1:new Spot(0,0,4,6),spot2:new Spot(1,1,-4,-4)}))),GraphObject.defineBuilder(\"ContextMenu\",y=>new Adornment(Panel.Vertical,{background:\"#f5f5f5\",isShadowed:!0,shadowColor:\"rgba(0, 0, 0, .4)\",shadowOffset:new Point(0,2)}).bindObject(\"background\",\"\",t=>t.adornedPart!==null&&t.hasPlaceholder()?null:\"#f5f5f5\")),GraphObject.defineBuilder(\"ContextMenuButton\",y=>{const t=GraphObject.build(\"Button\");t.stretch=5;const i=t.findObject(\"ButtonBorder\");return i instanceof Shape&&(i.figure=\"Rectangle\",i.strokeWidth=0,i.spot1=new Spot(0,0,4,6),i.spot2=new Spot(1,1,-4,-4)),t}),GraphObject.defineBuilder(\"PanelExpanderButton\",y=>{const t=GraphObject.takeBuilderArgument(y,\"COLLAPSIBLE\"),i=GraphObject.build(\"Button\");i.attach({_buttonExpandedFigure:\"M0 0 M0 6 L4 2 8 6 M8 8\",_buttonCollapsedFigure:\"M0 0 M0 2 L4 6 8 2 M8 8\",\"ButtonBorder.fill\":\"rgba(0, 0, 0, 0)\",_buttonFillNormal:\"rgba(0, 0, 0, 0)\",\"ButtonBorder.stroke\":null,_buttonStrokeNormal:null,_buttonFillOver:\"rgba(0, 0, 0, .2)\",_buttonStrokeOver:null}),i.add(new Shape({name:\"ButtonIcon\",strokeWidth:2}).bindObject(\"geometryString\",\"visible\",s=>s?i._buttonExpandedFigure:i._buttonCollapsedFigure,void 0,t));const e=i.findObject(\"ButtonBorder\");return e instanceof Shape&&(e.stroke=null,e.fill=\"rgba(0, 0, 0, 0)\"),i.click=(s,n)=>{if(!(n instanceof Panel))return;const o=n.diagram;if(o===null||o.isReadOnly)return;let r=n.findBindingPanel();if(r===null&&(r=n.part),r!==null){const l=r.findObject(t);l!==null&&(s.handled=!0,o.startTransaction(\"Collapse/Expand Panel\"),l.visible=!l.visible,o.commitTransaction(\"Collapse/Expand Panel\"))}},i}),GraphObject.defineBuilder(\"CheckBoxButton\",y=>{const t=GraphObject.takeBuilderArgument(y),i=GraphObject.build(\"Button\",{desiredSize:new Size(14,14)});i.attach({\"ButtonBorder.spot1\":new Spot(0,0,1,1),\"ButtonBorder.spot2\":new Spot(1,1,-1,-1)});const e=new Shape({name:\"ButtonIcon\",geometryString:\"M0 0 M0 8.85 L4.9 13.75 16.2 2.45 M16.2 16.2\",strokeWidth:2,stretch:2,geometryStretch:6,visible:!1});return t!==\"\"&&e.bindTwoWay(\"visible\",t),i.add(e),i.click=(s,n)=>{if(!(n instanceof Panel))return;const o=s.diagram;if(o===null||o.isReadOnly||t!==\"\"&&o.model.isReadOnly)return;s.handled=!0;const r=n.findObject(\"ButtonIcon\");o.startTransaction(\"checkbox\"),r!==null&&(r.visible=!r.visible),U.rt(n._doClick)&&n._doClick(s,n),o.commitTransaction(\"checkbox\")},i}),GraphObject.defineBuilder(\"CheckBox\",y=>{const t=GraphObject.takeBuilderArgument(y),i=GraphObject.build(\"CheckBoxButton\",{name:\"Button\",isActionable:!1,margin:new Margin(0,1,0,0)},t),e=new Panel(\"Horizontal\",{isActionable:!0,cursor:i.cursor,margin:new Margin(1),mouseEnter:i.mouseEnter,mouseLeave:i.mouseLeave,click:i.click}).attach({_buttonFillNormal:i._buttonFillNormal,_buttonStrokeNormal:i._buttonStrokeNormal,_buttonFillOver:i._buttonFillOver,_buttonStrokeOver:i._buttonStrokeOver,_buttonFillDisabled:i._buttonFillDisabled,_buttonClick:i.click});return e.add(i),i.mouseEnter=null,i.mouseLeave=null,i.click=null,e});class GraphObjectTemplateSettings{mi;Lt;Zn;Fi;Qn;js;Ll;Rr;Ir;Or;Xr;Yr;Er;Br;Vr;U0;G0;zr;H0;q0;W0;j0;Kr;Ur;L0;V0;Ms;Sr;Mr;io;B0;E0;kr;C0;J0;$0;constructor(){this.mi=!1,this.Lt=\"\",this.Zn=-1,this.Fi=null,this.Qn=null,this.js=null,this.Ll=\"\",this.Rr=null,this.Ir=null,this.Or=null,this.Xr=null,this.Yr=null,this.Er=null,this.Br=null,this.Vr=null,this.U0=null,this.G0=null,this.zr=null,this.H0=null,this.q0=null,this.W0=null,this.j0=null,this.Kr=null,this.Ur=null,this.L0=null,this.V0=null,this.Ms=null,this.Sr=Size.Gh,this.Mr=Size.Mw,this.io=1,this.B0=1,this.E0=1,this.kr=0,this.C0=null,this.J0=null,this.$0=\"category\"}copy(){const t=new GraphObjectTemplateSettings;return t.Lt=this.Lt,t.Zn=this.Zn,t.Fi=this.Fi,t.js=this.js,t.Ll=this.Ll,t.Rr=this.Rr,t.Ir=this.Ir,t.Or=this.Or,t.Xr=this.Xr,t.Yr=this.Yr,t.Er=this.Er,t.Br=this.Br,t.Vr=this.Vr,t.U0=this.U0,t.G0=this.G0,t.zr=this.zr,t.H0=this.H0,t.q0=this.q0,t.W0=this.W0,t.j0=this.j0,t.Kr=this.Kr,t.Ur=this.Ur,t.L0=this.L0,t.V0=this.V0,t.Ms=this.Ms,t.Sr=this.Sr.N(),t.Mr=this.Mr.N(),t.io=this.io,t.B0=this.B0,t.E0=this.E0,t.kr=this.kr,t.C0=this.C0,t.J0=this.J0,t.$0=this.$0,t}}class STransform{m;constructor(){this.m=[1,0,0,1,0,0]}copy(){const t=new STransform;return t.m[0]=this.m[0],t.m[1]=this.m[1],t.m[2]=this.m[2],t.m[3]=this.m[3],t.m[4]=this.m[4],t.m[5]=this.m[5],t}translate(t,i){this.m[4]+=this.m[0]*t+this.m[2]*i,this.m[5]+=this.m[1]*t+this.m[3]*i}scale(t,i){this.m[0]*=t,this.m[1]*=t,this.m[2]*=i,this.m[3]*=i}rotate(t,i,e){if(t>=360?t-=360:t<0&&(t+=360),t===0)return;this.translate(i,e);let s=0,n=0;if(t===90)s=0,n=1;else if(t===180)s=-1,n=0;else if(t===270)s=0,n=-1;else{const f=t*Math.PI/180;s=Math.cos(f),n=Math.sin(f)}const o=this.m[0]*s+this.m[2]*n,r=this.m[1]*s+this.m[3]*n,l=this.m[0]*-n+this.m[2]*s,h=this.m[1]*-n+this.m[3]*s;this.m[0]=o,this.m[1]=r,this.m[2]=l,this.m[3]=h,this.translate(-i,-e)}}class SGradient{type;x1;y1;r1;x2;y2;r2;colors;pattern;constructor(t){this.type=t,this.x1=0,this.y1=0,this.r1=0,this.x2=0,this.y2=0,this.r2=0,this.colors=[],this.pattern=null}addColorStop(t,i){this.colors.push({offset:t,color:i})}}class SVGSurface{Et;ci;Zr;$u;BP;constructor(t,i,e){const s=i===void 0?root.document:i;this.Zr=s,this.BP=\"http://www.w3.org/2000/svg\";const n=\"http://www.w3.org/2000/xmlns/\";s!==void 0&&(this.Et=this.makeElement(\"svg\",{width:\"1px\",height:\"1px\",viewBox:\"0 0 1 1\"}),this.style.display=\"block\",this.style.letterSpacing=\"normal\",this.style.wordSpacing=\"normal\",e||(this.style.position=\"absolute\"),this.Et.setAttributeNS(n,\"xmlns\",this.BP),this.Et.setAttributeNS(n,\"xmlns:xlink\",\"http://www.w3.org/1999/xlink\")),this.$u=null,this.ci=new SVGContext(this,e)}resize(t,i,e,s){return this.width!==t||this.height!==i?(this.width=t,this.height=i,this.style.width=e+\"px\",this.style.height=s+\"px\",this.Et.setAttributeNS(null,\"width\",e+\"px\"),this.Et.setAttributeNS(null,\"height\",s+\"px\"),this.Et.setAttributeNS(null,\"viewBox\",\"0 0 \"+e+\" \"+s),this.ci.VP.firstElementChild.setAttributeNS(null,\"width\",e+\"px\"),this.ci.VP.firstElementChild.setAttributeNS(null,\"height\",s+\"px\"),!0):!1}makeElement(t,i,e){const s=this.Zr.createElementNS(this.BP,t);if(U.W(i))for(const n in i)s.setAttributeNS(n===\"href\"?\"http://www.w3.org/1999/xlink\":\"\",n,i[n]);return e!==void 0&&(s.textContent=e),s}getBoundingClientRect(){return this.Et.getBoundingClientRect()}focus(){this.Et.focus()}get width(){return this.Et.width.baseVal.value}set width(t){this.Et.setAttribute(\"width\",t+\"px\")}get height(){return this.Et.height.baseVal.value}set height(t){this.Et.setAttribute(\"height\",t+\"px\")}dispose(){this.Zr=null}get style(){return this.Et.style}}class SVGContext{fc;cc;wn;Ri;qe;fillStyle;font;globalAlpha;lineCap;lineDashOffset;lineJoin;lineWidth;miterLimit;shadowBlur;shadowColor;shadowOffsetX;shadowOffsetY;strokeStyle;textAlign;imageSmoothingEnabled;clipInsteadOfFill;lastCreatedElement;uc;dc;surface;svg;VP;EL;ob;Ko;kh;Fa;currentElement;clipPathGroup;diagramGroup;lastDrawnPart;currentPath;outerGroup;pathAttributes;sl;Ar;filter;partClipRect;constructor(t,i){if(this.surface=t,this.svg=t.Et,this.uc=[],this.dc=[],this.fillStyle=\"#000000\",this.font=\"10px sans-serif\",this.globalAlpha=1,this.lineCap=\"butt\",this.lineDashOffset=0,this.lineJoin=\"miter\",this.lineWidth=1,this.miterLimit=10,this.shadowBlur=0,this.shadowColor=\"rgba(0, 0, 0, 0)\",this.shadowOffsetX=0,this.shadowOffsetY=0,this.sl=!1,this.strokeStyle=\"#000000\",this.textAlign=\"start\",this.clipInsteadOfFill=!1,this.fc=0,this.cc=0,this.wn=0,this.lastCreatedElement=null,this.currentElement=null,this.Ri=[],this.pathAttributes={},this.ob=!1,this.Ko=null,this.kh=0,this.qe=new STransform,t.Zr===null||t.Zr===void 0)return;this.clipPathGroup=this.newGroup2(),this.diagramGroup=this.newGroup2(\"gojs-diagram\"),this.lastDrawnPart=null,this.currentPath=null;const e=GSet.Sw++,s=this.makeElement(\"clipPath\",{id:\"mainClip\"+e}),n={x:0,y:0,width:t.width,height:t.height};s.appendChild(this.makeElement(\"rect\",n)),this.VP=s,this.svg.appendChild(this.clipPathGroup),this.clipPathGroup.appendChild(this.diagramGroup),this.svg.appendChild(s),this.clipPathGroup.setAttributeNS(null,\"clip-path\",\"url(#mainClip\"+e+\")\"),this.EL={},this.Ar=!!i,this.filter=\"\",this.partClipRect=null}setDiagramPosScale(t,i,e,s,n,o){this.diagramGroup===void 0?this.newGroup(t,i,e,s,n,o):this.diagramGroup.setAttribute(\"transform\",\"matrix(\"+t+\", \"+i+\", \"+e+\", \"+s+\", \"+n+\", \"+o+\")\")}resetInnerSVG(){this.diagramGroup!==null&&(this.diagramGroup.innerHTML=\"\")}arc(t,i,e,s,n,o,r,l){const h=2*Math.PI,f=1e-6,a=h-f,c=e*Math.cos(s),u=e*Math.sin(s),d=t+c,m=i+u,g=o?0:1;let p=o?s-n:n-s;(Math.abs(r-d)>f||Math.abs(l-m)>f)&&this.Ri.push([\"L\",d,+m]),p<0&&(p=p%h+h),p>a?(this.Ri.push([\"A\",e,e,0,1,g,t-c,i-u]),this.Ri.push([\"A\",e,e,0,1,g,d,m])):p>f&&this.Ri.push([\"A\",e,e,0,+(p>=Math.PI),g,t+e*Math.cos(n),i+e*Math.sin(n)])}beginPath(){this.Ri=[],this.pathAttributes={stroke:\"none\",fill:\"none\"}}endPath(t){this.cI(this.Ri,this.qe,t||0)}bezierCurveTo(t,i,e,s,n,o){this.Ri.push([\"C\",t,i,e,s,n,o])}clearRect(t,i,e,s){}clip(){this.pathAttributes.clipPath=!0}closePath(){this.Ri.push([\"z\"])}createLinearGradient(t,i,e,s){const n=new SGradient(\"linear\");return n.x1=t,n.y1=i,n.x2=e,n.y2=s,n}createPattern(t,i){let e=\"\";t instanceof HTMLCanvasElement&&(e=t.toDataURL()),t instanceof HTMLImageElement&&(e=t.getAttribute(\"src\"));const s=this.EL;if(s[e])return\"url(#\"+s[e]+\")\";const n=\"PATTERN\"+GSet.Sw++,o={width:t.width,height:t.height,id:n,patternUnits:\"userSpaceOnUse\"},r={x:0,y:0,width:t.width,height:t.height,href:e},l=this.makeElement(\"pattern\",o);return l.appendChild(this.makeElement(Diagram.img,r)),this.svg.appendChild(l),s[e]=n,\"url(#\"+n+\")\"}createRadialGradient(t,i,e,s,n,o){const r=new SGradient(\"radial\");return r.x1=t,r.y1=i,r.r1=e,r.x2=s,r.y2=n,r.r2=o,r}amendImageTransform(t,i,e,s,n,o,r,l){const h=r/e,f=l/s;(n!==0||o!==0)&&this.qe.translate(n,o),(h!==1||f!==1)&&this.qe.scale(h,f),(t!==0||i!==0)&&this.qe.translate(-t,-i)}drawImage(t,i,e,s,n,o,r,l,h){let f=\"\";t instanceof HTMLCanvasElement&&(f=t.toDataURL()),t instanceof HTMLImageElement&&(f=t.getAttribute(\"src\"));const a=t instanceof HTMLImageElement?t.naturalWidth:t.width,c=t instanceof HTMLImageElement?t.naturalHeight:t.height;s===void 0&&(o=i,r=e,l=s=a,h=n=c),s=s||0,n=n||0,o=o||0,r=r||0,l=l||0,h=h||0,this.amendImageTransform(i,e,s,n,o,r,l,h);const u={x:0,y:0,width:a||s,height:c||n,href:f};!Geo.G(s,l)||!Geo.G(n,h)?u.preserveAspectRatio=\"none\":f.toLowerCase().indexOf(\".svg\")===-1&&f.toLowerCase().indexOf(\"data:image/svg\")===-1&&(u.preserveAspectRatio=\"xMidYMid slice\"),(i!==0||e!==0||s!==a||n!==c)&&(s+=i,n+=e,u[\"clip-path\"]=`path('M ${i},${e} L ${s} ${e} L ${s} ${n} L ${i} ${n} z')`),this.processCommon(Diagram.img,u,this.qe),this.ld(Diagram.img,u)}fill(t,i){t&&(this.pathAttributes[\"fill-rule\"]=\"evenodd\"),this.setFill(this.pathAttributes)}fillContext(t,i,e){this.clipInsteadOfFill?this.clip():this.fill(i,e)}createOrUpdateClipGroup(t,i){const e=this.newGroup(1,0,0,1,-i.x,-i.y);e.setAttributeNS(null,\"class\",\"spotClip\"),t.gh=e}fillRect(t,i,e,s){this.addRect(\"fill\",[t,i,e,s],this.qe)}fillBackground(t,i,e,s){const n={x:t,y:i,width:e,height:s};this.processCommon(\"fill\",n,this.qe),this.setFill(n),this.svg.prepend(this.makeElement(\"rect\",n))}fillText(t,i,e){this.addText(\"fill\",[t,i,e],this.qe)}lineTo(t,i){this.Ri.push([\"L\",t,i])}moveTo(t,i){this.Ri.push([\"M\",t,i])}quadraticCurveTo(t,i,e,s){this.Ri.push([\"Q\",t,i,e,s])}rect(t,i,e,s){this.Ri.push([\"M\",t,i],[\"L\",t+e,i],[\"L\",t+e,i+s],[\"L\",t,i+s],[\"z\"])}restore(){this.qe=this.uc.pop(),this.Ri=this.uc.pop();const t=this.uc.pop();this.fillStyle=t.fillStyle,this.font=t.font,this.globalAlpha=t.globalAlpha,this.lineCap=t.lineCap,this.lineDashOffset=t.lineDashOffset,this.lineJoin=t.lineJoin,this.lineWidth=t.lineWidth,this.miterLimit=t.miterLimit,this.shadowBlur=t.shadowBlur,this.shadowColor=t.shadowColor,this.shadowOffsetX=t.shadowOffsetX,this.shadowOffsetY=t.shadowOffsetY,this.strokeStyle=t.strokeStyle,this.textAlign=t.textAlign,this.partClipRect=t.partClipRect}save(){const t={fillStyle:this.fillStyle,font:this.font,globalAlpha:this.globalAlpha,lineCap:this.lineCap,lineDashOffset:this.lineDashOffset,lineJoin:this.lineJoin,lineWidth:this.lineWidth,miterLimit:this.miterLimit,shadowBlur:this.shadowBlur,shadowColor:this.shadowColor,shadowOffsetX:this.shadowOffsetX,shadowOffsetY:this.shadowOffsetY,strokeStyle:this.strokeStyle,textAlign:this.textAlign,partClipRect:this.partClipRect};this.uc.push(t);const i=[];for(let e=0;e<this.Ri.length;e++)i.push(this.Ri[e]);this.uc.push(i),this.uc.push(this.qe.copy())}setTransform(t,i,e,s,n,o){t===1&&i===0&&e===0&&s===1&&n===0&&o===0||this.newGroup(t,i,e,s,n,o)}setCurrentTransform(t,i,e,s,n,o){this.qe.m=[t,i,e,s,n,o]}getCurrentTransform(){const t=this.qe.m;return\"matrix(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\")\"}scale(t,i){this.qe.scale(t,i)}translate(t,i){this.qe.translate(t,i)}transform(t,i,e,s,n,o){}commitTransform(){}stroke(){this.setStroke(this.pathAttributes)}strokeContext(){this.clipInsteadOfFill||this.stroke()}strokeRect(t,i,e,s){this.addRect(\"stroke\",[t,i,e,s],this.qe)}makeElement(t,i,e){return this.surface.makeElement(t,i,e)}ld(t,i,e){const s=this.makeElement(t,i,e);return this.currentElement!==null?this.currentElement.appendChild(s):this.currentElement=s,this.lastCreatedElement=s,s}processCommon(t,i,e){if(t===\"fill\"?this.setFill(i):t===\"stroke\"&&this.setStroke(i),e!==null){const s=e.m;i.transform=\"matrix(\"+s[0]+\", \"+s[1]+\", \"+s[2]+\", \"+s[3]+\", \"+s[4]+\", \"+s[5]+\")\"}}setFill(t){if(this.fillStyle instanceof SGradient){t.fill=this.addGradient(this.fillStyle,!0);return}if(/^rgba\\(/.test(this.fillStyle)){const e=/^\\s*rgba\\s*\\(([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\)\\s*$/i.exec(this.fillStyle);t.fill=\"rgb(\"+e[1]+\",\"+e[2]+\",\"+e[3]+\")\",t[\"fill-opacity\"]=e[4]}else t.fill=this.fillStyle}setFillOrStrokeInPlace(t,i){const e=i?\"fill\":\"stroke\";if(this.fillStyle instanceof SGradient){t.setAttributeNS(null,\"fill\",this.addGradient(this.fillStyle,!0));return}if(/^rgba\\(/.test(this.fillStyle)){const n=/^\\s*rgba\\s*\\(([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\)\\s*$/i.exec(this.fillStyle);t.setAttributeNS(null,e,\"rgb(\"+n[1]+\",\"+n[2]+\",\"+n[3]+\")\"),t.setAttributeNS(null,e+\"-opacity\",n[4])}else t.setAttributeNS(null,e,this.fillStyle)}setStroke(t){if(this.strokeStyle instanceof SGradient)t.stroke=this.addGradient(this.strokeStyle,!1);else if(/^rgba\\(/.test(this.strokeStyle)){const e=/^\\s*rgba\\s*\\(([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\)\\s*$/i.exec(this.strokeStyle);t.stroke=\"rgb(\"+e[1]+\",\"+e[2]+\",\"+e[3]+\")\",t[\"stroke-opacity\"]=e[4]}else t.stroke=this.strokeStyle;t[\"stroke-width\"]=this.lineWidth,t[\"stroke-linecap\"]=this.lineCap,t[\"stroke-linejoin\"]=this.lineJoin,t[\"stroke-miterlimit\"]=this.miterLimit,this.ob&&(t[\"stroke-dasharray\"]=this.Ko.toString(),t[\"stroke-dashoffset\"]=this.kh)}addGradient(t,i){let e=\"\";const s=this.currentPath!==null?this.currentPath.getAttribute(i?\"fill\":\"stroke\"):null;if(s!==null&&s.indexOf(\"GRAD\")!==-1){e=s.split(\"#\")[1].slice(0,-1);const h=this.svg.getElementById(e);h!==null&&h.remove()}else e=\"GRAD\"+GSet.Sw++;let n;if(t.type===\"linear\"){const h={x1:t.x1,x2:t.x2,y1:t.y1,y2:t.y2,id:e,gradientUnits:\"userSpaceOnUse\"};n=this.makeElement(\"linearGradient\",h)}else if(t.type===\"radial\"){const h={x1:t.x1,x2:t.x2,y1:t.y1,y2:t.y2,r1:t.r1,r2:t.r2,id:e};n=this.makeElement(\"radialGradient\",h)}else U.n(\"invalid gradient\");const o=t.colors,r=o.length,l=[];for(let h=0;h<r;h++){const f=o[h],a=f.color,c={offset:f.offset,\"stop-color\":a};if(/^rgba\\(/.test(a)){const d=/^\\s*rgba\\s*\\(([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\s*,\\s*([^,\\s]+)\\)\\s*$/i.exec(a);c[\"stop-color\"]=\"rgb(\"+d[1]+\",\"+d[2]+\",\"+d[3]+\")\",c[\"stop-opacity\"]=d[4]}l.push(c)}l.sort((h,f)=>h.offset>f.offset?1:-1);for(let h=0;h<r;h++)n.appendChild(this.makeElement(\"stop\",l[h]));return this.svg.appendChild(n),\"url(#\"+e+\")\"}addRect(t,i,e){const s={x:i[0],y:i[1],width:i[2],height:i[3]};this.processCommon(t,s,e),this.ld(\"rect\",s)}addText(t,i,e){let s=this.textAlign;s===\"left\"?s=\"start\":s===\"right\"?s=\"end\":s===\"center\"&&(s=\"middle\");const n={x:i[1],y:i[2],style:\"font: \"+this.font,\"text-anchor\":s};this.processCommon(t,n,e),this.ld(\"text\",n,i[0])}cI(t,i,e){const s=this.uI(t),n=this.pathAttributes;if(n.clipPath){this.dc.length>1&&this.dc[this.dc.length-2].setAttributeNS(null,\"clip-path\",'path(\"'+s+'\") view-box');return}if(n.d=s,this.processCommon(\"\",n,i),this.currentPath!==null){const r=this.currentPath;if(r.nodeName!==\"g\")for(const l in n)l!==\"transform\"&&r.setAttributeNS(null,l,n[l]);else{const l=r.getElementsByTagName(\"path\");for(const h in n)h!==\"transform\"&&l[e].setAttributeNS(null,h,n[h])}}else this.ld(\"path\",n)}uI(t){const i=[];for(let e=0;e<t.length;e++){const s=t[e].slice(),n=[s.shift()];if(n[0]===\"A\")n.push(s.shift()+\",\"+s.shift(),s.shift(),s.shift()+\",\"+s.shift(),s.shift()+\",\"+s.shift());else for(;s.length;)n.push(s.shift()+\",\"+s.shift());i.push(n.join(\" \"))}return i.join(\" \")}newGroup(t,i,e,s,n,o){const r=new STransform;r.m=[t,i,e,s,n,o];const l={};this.processCommon(\"g\",l,r);const h=this.ld(\"g\",l);return this.dc.push(h),h}newGroup2(t){const i={};t&&(i.class=t);const e=this.ld(\"g\",i);return this.dc.push(e),e}endGroup(){return this.dc.pop()}dummyGroup(){return this.newGroup2(),this.endGroup()}shadowsSet(t,i,e){this.fc=t,this.cc=i,this.wn=e}shadowsOff(){this.sl=!1,this.shadowOffsetX=0,this.shadowOffsetY=0,this.shadowBlur=0}shadowsOn(){this.sl=!0,this.shadowOffsetX=this.fc,this.shadowOffsetY=this.cc,this.shadowBlur=this.wn}enableDash(t,i){this.ob=!0,this.Ko=t,this.kh=i}disableDash(){this.ob=!1}clearContextCache(t){}setImageSmoothingEnabled(t){}rotate(t){this.qe.rotate(t*57.2958,0,0)}getImageData(t,i,e,s){return null}measureText(t){return null}removeOldGradient(t,i,e){const s=i.getAttribute(e);if(s===null)return;const n=s.split(\"#\");if(n.length===1)return;const o=this.svg.getElementById(n[1].slice(0,-1));if(o!==null){const r=new RegExp(o.id,\"g\");this.svg.innerHTML.match(r).length===1&&o.remove()}}removePartFromView(t){t.svg!==null&&t.svg.parentNode===this.diagramGroup&&t.svg.remove()}}class CanvasSurface{Et;ci;Zr;$u;constructor(t,i,e,s){const n=i===void 0?root.document:i;this.Zr=n,this.$u=null;const o=n.createElement(\"canvas\");o.tabIndex=0,this.Et=o,this.ci=new CanvasSurfaceContext(o,e,s),Diagram.ss.set(o,t)}resize(t,i,e,s){return this.width!==t||this.height!==i?(this.width=t,this.height=i,this.style.width=e+\"px\",this.style.height=s+\"px\",!0):!1}toDataURL(t,i){return this.Et.toDataURL(t,i)}getBoundingClientRect(){return this.Et.getBoundingClientRect()}focus(){this.Et.focus()}get width(){return this.Et.width}set width(t){this.Et.width=t}get height(){return this.Et.height}set height(t){this.Et.height=t}dispose(){Diagram.ss.delete(this.Et),this.Zr=null}get style(){return this.Et.style}}class CanvasSurfaceContext{z;rb;lb;hb;clipInsteadOfFill;fc;cc;wn;Fa;sl;Ar;constructor(t,i,e){this.z=t.getContext?t.getContext(\"2d\",i):null,this.z===null&&U.n(\"Browser does not support HTML Canvas Element\"),this.rb=\"\",this.lb=\"\",this.hb=\"\",this.clipInsteadOfFill=!1,this.fc=0,this.cc=0,this.wn=0,this.sl=!1,this.Fa=new Transform,this.Ar=!!e}createOrUpdateClipGroup(t,i){}setImageSmoothingEnabled(t){this.z.imageSmoothingEnabled=t}get fillStyle(){return this.z.fillStyle}set fillStyle(t){this.hb!==t&&(this.z.fillStyle=t,this.hb=t)}get font(){return this.z.font}set font(t){this.rb!==t&&(this.z.font=t,this.rb=t)}get globalAlpha(){return this.z.globalAlpha}set globalAlpha(t){this.z.globalAlpha=t}get lineCap(){return this.z.lineCap}set lineCap(t){this.z.lineCap=t}get lineDashOffset(){return this.z.lineDashOffset}set lineDashOffset(t){this.z.lineDashOffset=t}get lineJoin(){return this.z.lineJoin}set lineJoin(t){this.z.lineJoin=t}get lineWidth(){return this.z.lineWidth}set lineWidth(t){this.z.lineWidth=t}get miterLimit(){return this.z.miterLimit}set miterLimit(t){this.z.miterLimit=t}get shadowBlur(){return this.z.shadowBlur}set shadowBlur(t){this.z.shadowBlur=t}get shadowColor(){return this.z.shadowColor}set shadowColor(t){this.z.shadowColor=t}get shadowOffsetX(){return this.z.shadowOffsetX}set shadowOffsetX(t){this.z.shadowOffsetX=t}get shadowOffsetY(){return this.z.shadowOffsetY}set shadowOffsetY(t){this.z.shadowOffsetY=t}get strokeStyle(){return this.z.strokeStyle}set strokeStyle(t){this.lb!==t&&(this.z.strokeStyle=t,this.lb=t)}get textAlign(){return this.z.textAlign}set textAlign(t){this.z.textAlign=t}get imageSmoothingEnabled(){return this.z.imageSmoothingEnabled}set imageSmoothingEnabled(t){this.z.imageSmoothingEnabled=t}get filter(){return this.z.filter}set filter(t){t===\"\"?this.z.filter=\"none\":this.z.filter=t}arc(t,i,e,s,n,o,r,l){this.z.arc(t,i,e,s,n,o)}beginPath(){this.z.beginPath()}endPath(){}bezierCurveTo(t,i,e,s,n,o){this.z.bezierCurveTo(t,i,e,s,n,o)}clearRect(t,i,e,s){this.commitTransform(),this.z.clearRect(t,i,e,s)}clip(t){t?this.z.clip(t):this.z.clip()}closePath(){this.z.closePath()}createLinearGradient(t,i,e,s){return this.z.createLinearGradient(t,i,e,s)}createPattern(t,i){return this.z.createPattern(t,i)}createRadialGradient(t,i,e,s,n,o){return this.z.createRadialGradient(t,i,e,s,n,o)}drawImage(t,i,e,s,n,o,r,l,h){s===void 0?this.z.drawImage(t,i,e):this.z.drawImage(t,i,e,s,n,o,r,l,h)}fill(t,i){i?this.z.fill(i,t?\"evenodd\":\"nonzero\"):this.z.fill(t?\"evenodd\":\"nonzero\")}fillRect(t,i,e,s){this.z.fillRect(t,i,e,s)}fillBackground(t,i,e,s){this.z.fillRect(t,i,e,s)}fillText(t,i,e){this.z.fillText(t,i,e)}getImageData(t,i,e,s){return this.z.getImageData(t,i,e,s)}lineTo(t,i){this.z.lineTo(t,i)}measureText(t){return this.z.measureText(t)}moveTo(t,i){this.z.moveTo(t,i)}quadraticCurveTo(t,i,e,s){this.z.quadraticCurveTo(t,i,e,s)}rect(t,i,e,s){this.z.rect(t,i,e,s)}restore(){this.z.restore()}save(){this.commitTransform(),this.z.save()}rotate(t){this.Fa.ms(t*57.2958,0,0)}setTransform(t,i,e,s,n,o){this.Fa.setTo(t,i,e,s,n,o)}scale(t,i){this.Fa.ot(t,i)}translate(t,i){this.Fa.Bs(t,i)}stroke(t){t?this.z.stroke(t):this.z.stroke()}transform(t,i,e,s,n,o){if(t===1&&i===0&&e===0&&s===1&&n===0&&o===0)return;const r=this.Fa,l=r.m11*t+r.m21*i,h=r.m12*t+r.m22*i,f=r.m11*e+r.m21*s,a=r.m12*e+r.m22*s;r.dx=r.m11*n+r.m21*o+r.dx,r.dy=r.m12*n+r.m22*o+r.dy,r.m11=l,r.m12=h,r.m21=f,r.m22=a}commitTransform(){const t=this.Fa;this.z.setTransform(t.m11,t.m12,t.m21,t.m22,t.dx,t.dy)}fillContext(t,i,e){this.radialFill(t,i,e)||this.fillOrClip(i,e)}radialFill(t,i,e){if(!(t instanceof Brush)||t.type!==3)return!1;const s=t.rc,n=t.ib;return n>s?(this.scale(s/n,1),this.translate((n-s)/2,0)):s>n&&(this.scale(1,n/s),this.translate(0,(s-n)/2)),this.fillOrClip(i,e),n>s?(this.translate(-(n-s)/2,0),this.scale(1/(s/n),1)):s>n&&(this.translate(0,-(s-n)/2),this.scale(1,1/(n/s))),!0}strokeContext(){this.clipInsteadOfFill||this.stroke()}fillOrClip(t,i){this.clipInsteadOfFill?this.clip(i):this.fill(t,i)}shadowsSet(t,i,e){this.fc=t,this.cc=i,this.wn=e}shadowsOff(){this.sl=!1,this.shadowOffsetX=0,this.shadowOffsetY=0,this.shadowBlur=0}shadowsOn(){this.sl=!0,this.shadowOffsetX=this.fc,this.shadowOffsetY=this.cc,this.shadowBlur=this.wn}enableDash(t,i){const e=this.z;e.setLineDash!==void 0&&(e.setLineDash(t),e.lineDashOffset=i)}disableDash(){const t=this.z;t.setLineDash!==void 0&&(t.setLineDash(CanvasSurfaceContext.EmptyArray),t.lineDashOffset=0)}clearContextCache(t){t&&(this.rb=\"\"),this.lb=\"\",this.hb=\"\"}removePartFromView(t){}static EmptyArray=Object.freeze([])}var BrushType=(y=>(y[y.Solid=1]=\"Solid\",y[y.Linear=2]=\"Linear\",y[y.Radial=3]=\"Radial\",y[y.Pattern=4]=\"Pattern\",y))(BrushType||{}),ColorSpace=(y=>(y[y.Lab=1]=\"Lab\",y[y.HSL=2]=\"HSL\",y[y.Oklch=3]=\"Oklch\",y))(ColorSpace||{});class ColorNumbers{n0;n1;n2;n3;constructor(){this.n0=0,this.n1=0,this.n2=0,this.n3=0}}class Brush{f;$;Ra;li;xs;Z0;Q0;Uo;_0;pn;rc;ib;constructor(t,i){if(GSet.Ji(this),this.f=!1,t===void 0)this.$=1,this.Ra=\"black\";else if(typeof t==\"string\"){const s=U.Uh(BrushType,t);s!==null?(this.$=s,this.Ra=\"black\"):(this.$=1,Debug&&!Brush.isValidColor(t)&&U.n('Color \"'+t+'\" is not a valid color string for Brush constructor'),this.Ra=t)}else Object.keys(BrushType).hasOwnProperty(t)?(Debug&&U.j(t,BrushType,\"BrushType\"),this.$=t,this.Ra=\"black\"):typeof t==\"object\"&&(this.$=1,i=t);const e=this.$;if(e===2?(this.li=Spot.TopCenter,this.xs=Spot.BottomCenter):e===3?(this.li=Spot.Center,this.xs=Spot.Center):(this.li=Spot.None,this.xs=Spot.None),this.Z0=0,this.Q0=NaN,this.Uo=null,this._0=null,this.pn=null,this.rc=0,this.ib=0,i){const s={};for(const n in i)isFinite(parseFloat(n))?this.addColorStop(parseFloat(n),i[n]):s[n]=i[n];Object.assign(this,s)}}copy(){const t=new Brush;return t.$=this.$,t.Ra=this.Ra,t.li=this.li.N(),t.xs=this.xs.N(),t.Z0=this.Z0,t.Q0=this.Q0,this.Uo!==null&&(t.Uo=this.Uo.copy()),t._0=this._0,t}p(){return this.f=!0,this.Uo!==null&&this.Uo.p(),this}ai(t){t in BrushType?this.type=t:U.hr(this,t)}toString(){let t=\"Brush(\";if(this.type===1)t+=this.color;else if(this.type===2?t+=\"Linear \":this.type===3?t+=\"Radial \":this.type===4?t+=\"Pattern \":t+=\"(unknown) \",t+=this.start+\" \"+this.end,this.colorStops!==null){const i=this.colorStops.iterator;for(;i.next();){const e=i.key,s=i.value;t+=\" \"+e+\":\"+s}}return t+=\")\",t}addColorStop(t,i){return this.f&&U.D(this),(typeof t!=\"number\"||!isFinite(t)||t>1||t<0)&&U.U(t,\"0 <= loc <= 1\",Brush,\"addColorStop:loc\"),U.i(i,\"string\",Brush,\"addColorStop:color\"),Debug&&!Brush.isValidColor(i)&&U.n('Color \"'+i+'\" is not a valid color string for Brush.addColorStop'),this.Uo===null&&(this.Uo=new GMap),this.Uo.set(t,i),this.$===1&&(this.type=2),this.pn=null,this}get type(){return this.$}set type(t){this.f&&U.D(this,t),Debug&&U.j(t,BrushType,\"BrushType\"),this.$=t,this.start.isNoSpot()&&(t===2?this.start=Spot.TopCenter:t===3&&(this.start=Spot.Center)),this.end.isNoSpot()&&(t===2?this.end=Spot.BottomCenter:t===3&&(this.end=Spot.Center)),this.pn=null}get color(){return this.Ra}set color(t){this.f&&U.D(this,t),Debug&&!Brush.isValidColor(t)&&U.n('Color \"'+t+'\" is not a valid color string for Brush.color'),this.Ra=t,this.pn=null}get start(){return this.li}set start(t){this.f&&U.D(this,t),Debug&&U.e(t,Spot,Brush,\"start\"),this.li=t.N(),this.pn=null}get end(){return this.xs}set end(t){this.f&&U.D(this,t),Debug&&U.e(t,Spot,Brush,\"end\"),this.xs=t.N(),this.pn=null}get startRadius(){return this.Z0}set startRadius(t){this.f&&U.D(this,t),Debug&&U.r(t,Brush,\"startRadius\"),t<0&&U.U(t,\">= zero\",Brush,\"startRadius\"),this.Z0=t,this.pn=null}get endRadius(){return this.Q0}set endRadius(t){this.f&&U.D(this,t),Debug&&U.r(t,Brush,\"endRadius\"),t<0&&U.U(t,\">= zero\",Brush,\"endRadius\"),this.Q0=t,this.pn=null}get colorStops(){return this.Uo}set colorStops(t){this.f&&U.D(this,t),Debug&&U.e(t,GMap,Brush,\"colorStops\"),this.Uo=t,this.pn=null}get pattern(){return this._0}set pattern(t){this.f&&U.D(this,t),this._0=t,this.pn=null}static randomColor(t,i){t===void 0&&(t=128),Debug&&(U.r(t,Brush,\"randomColor:min\"),(t<0||t>255)&&U.U(t,\"0 <= min <= 255\",Brush,\"randomColor:min\")),i===void 0&&(i=Math.max(t,255)),Debug&&(U.r(i,Brush,\"randomColor:max\"),(i<t||i>255)&&U.U(i,\"min <= max <= 255\",Brush,\"randomColor:max\"));const e=Math.abs(i-t);let s=Math.floor(t+Math.random()*e).toString(16),n=Math.floor(t+Math.random()*e).toString(16),o=Math.floor(t+Math.random()*e).toString(16);return s.length<2&&(s=\"0\"+s),n.length<2&&(n=\"0\"+n),o.length<2&&(o=\"0\"+o),\"#\"+s+n+o}static isValidColor(t){return root.CSS?root.CSS.supports(\"color\",t):!0}static lighten(t){return Brush.lightenBy(t)}lightenBy(t,i){this.f&&U.D(this);const e=t===void 0||typeof t!=\"number\"?.2:t,s=i===void 0?3:i;if(this.type===1)Brush.Fo(this.color),this.color=Brush.hd(e,s);else if((this.type===2||this.type===3)&&this.colorStops!==null){const n=this.colorStops.iterator;for(;n.next();)Brush.Fo(n.value),this.addColorStop(n.key,Brush.hd(e,s))}return this}static lightenBy(t,i,e){const s=i===void 0||typeof i!=\"number\"?.2:i,n=e===void 0?3:e;return Brush.Fo(t),Brush.hd(s,n)}static darken(t){return Brush.darkenBy(t)}darkenBy(t,i){this.f&&U.D(this);const e=t===void 0||typeof t!=\"number\"?.2:t,s=i===void 0?3:i;if(this.type===1)Brush.Fo(this.color),this.color=Brush.hd(-e,s);else if((this.type===2||this.type===3)&&this.colorStops!==null){const n=this.colorStops.iterator;for(;n.next();)Brush.Fo(n.value),this.addColorStop(n.key,Brush.hd(-e,s))}return this}static darkenBy(t,i,e){const s=i===void 0||typeof i!=\"number\"?.2:i,n=e===void 0?3:e;return Brush.Fo(t),Brush.hd(-s,n)}static mix(t,i,e){Brush.Fo(t);const s=Brush.q.n0,n=Brush.q.n1,o=Brush.q.n2,r=Brush.q.n3;Brush.Fo(i),e===void 0&&(e=.5);const l=Math.round((Brush.q.n0-s)*e+s),h=Math.round((Brush.q.n1-n)*e+n),f=Math.round((Brush.q.n2-o)*e+o),a=Math.round((Brush.q.n3-r)*e+r);return`rgba(${l}, ${h}, ${f}, ${a})`}isDark(){if(this.type===1)return Brush.isDark(this.color);if((this.type===2||this.type===3)&&this.colorStops!==null){const t=this.colorStops;if(this.type===3)return Brush.isDark(t.first().value);if(t.get(.5)!==null)return Brush.isDark(t.get(.5));if(t.count===2){const l=t.toArray();return Brush.isDark(Brush.mix(l[0].value,l[1].value))}const i=t.iterator;let e=-1,s=-1,n=1,o=1;for(;i.next();){const l=i.key,h=Math.abs(.5-i.key);n>o&&h<n?(e=l,n=h):o>=n&&h<o&&(s=l,o=h)}if(e>s){let l=e;e=s,s=l,l=n,n=o,o=l}const r=s-e;return Brush.isDark(Brush.mix(t.get(e),t.get(s),1-o/r))}return!1}static isDark(t){return t?t instanceof Brush?t.isDark():(Brush.Fo(t),(299*Brush.q.n0+587*Brush.q.n1+114*Brush.q.n2)/1e3<128):!1}static hd(t,i){switch(i){case 1:return Brush.dI(),Brush.eo.n0=Math.min(100,Math.max(0,Brush.eo.n0+100*t)),Brush.gI(),\"rgba(\"+Brush.q.n0+\", \"+Brush.q.n1+\", \"+Brush.q.n2+\", \"+Brush.q.n3+\")\";case 2:return Brush.QM(),Brush.Yi.n2=Math.min(100,Math.max(0,Brush.Yi.n2+100*t)),\"hsla(\"+Brush.Yi.n0+\", \"+Brush.Yi.n1+\"%, \"+Brush.Yi.n2+\"%, \"+Brush.Yi.n3+\")\";case 3:return Brush.mI(),Brush.so.n0=Math.min(100,Math.max(0,Brush.so.n0+100*t)),Brush.pI(),\"rgba(\"+Brush.q.n0+\", \"+Brush.q.n1+\", \"+Brush.q.n2+\", \"+Brush.q.n3+\")\";default:U.n(\"Unknown color space: \"+i)}}static Fo(t){Brush.tp===!1&&(Brush.tp=!0,Brush.no=Diagram.isUsingDOM()?new CanvasSurface(null,void 0,{willReadFrequently:!0}).ci:null);const i=Brush.no;if(i===null)return;i.clearRect(0,0,1,1),i.fillStyle=\"#000000\";const e=i.fillStyle;if(i.fillStyle=t,i.fillStyle!==e){i.fillRect(0,0,1,1);const s=i.getImageData(0,0,1,1).data;Brush.q.n0=s[0],Brush.q.n1=s[1],Brush.q.n2=s[2],Brush.q.n3=s[3]/255}else{i.fillStyle=\"#FFFFFF\";const s=i.fillStyle;i.fillStyle=t,i.fillStyle===s&&Debug&&U.n('Color \"'+t+'\" is not a valid color string for RGBA color conversion'),Brush.q.n0=0,Brush.q.n1=0,Brush.q.n2=0,Brush.q.n3=1}}static QM(){const t=Brush.q.n0/255,i=Brush.q.n1/255,e=Brush.q.n2/255,s=Math.max(t,i,e),n=Math.min(t,i,e),o=s-n;let r,l;const h=(s+n)/2;if(o===0)r=l=0;else{switch(s){case t:r=(i-e)/o%6;break;case i:r=(e-t)/o+2;break;case e:r=(t-i)/o+4;break}r*=60,r<0&&(r+=360),l=o/(1-Math.abs(2*h-1))}Brush.Yi.n0=Math.round(r),Brush.Yi.n1=Math.round(l*100),Brush.Yi.n2=Math.round(h*100),Brush.Yi.n3=Brush.q.n3}static RE(){const t=Brush.Yi.n0,i=Brush.Yi.n1/100,e=Brush.Yi.n2/100;let s,n,o;const r=(1-Math.abs(2*e-1))*i,l=t/60,h=r*(1-Math.abs(l%2-1));l>=0&&l<1?(s=r,n=h,o=0):l>=1&&l<2?(s=h,n=r,o=0):l>=2&&l<3?(s=0,n=r,o=h):l>=3&&l<4?(s=0,n=h,o=r):l>=4&&l<5?(s=h,n=0,o=r):l>=5&&l<6&&(s=r,n=0,o=h);const f=e-.5*r;s+=f,n+=f,o+=f,Brush.q.n0=Math.round(s*255),Brush.q.n1=Math.round(n*255),Brush.q.n2=Math.round(o*255),Brush.q.n3=Brush.Yi.n3}static dI(){Brush.BL(),Brush.yI()}static gI(){Brush.wI(),Brush.VL()}static zP(t){return t/=255,t<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}static XP(t){return t<=.0031308?t*12.92:1.055*Math.pow(t,1/2.4)-.055}static BL(){const t=Brush.zP(Brush.q.n0),i=Brush.zP(Brush.q.n1),e=Brush.zP(Brush.q.n2);Brush.Bt.n0=.4124564*t+.3575761*i+.1804375*e,Brush.Bt.n1=.2126729*t+.7151522*i+.072175*e,Brush.Bt.n2=.0193339*t+.119192*i+.9503041*e,Brush.Bt.n3=Brush.q.n3}static VL(){const t=3.2404542*Brush.Bt.n0+-1.5371385*Brush.Bt.n1+-.4985314*Brush.Bt.n2,i=-.969266*Brush.Bt.n0+1.8760108*Brush.Bt.n1+.041556*Brush.Bt.n2,e=.0556434*Brush.Bt.n0+-.2040259*Brush.Bt.n1+1.0572252*Brush.Bt.n2;Brush.q.n0=Brush.XP(t)*255,Brush.q.n1=Brush.XP(i)*255,Brush.q.n2=Brush.XP(e)*255,Brush.q.n3=Brush.Bt.n3,Brush.q.n0=Math.round(Brush.q.n0),Brush.q.n0>255?Brush.q.n0=255:Brush.q.n0<0&&(Brush.q.n0=0),Brush.q.n1=Math.round(Brush.q.n1),Brush.q.n1>255?Brush.q.n1=255:Brush.q.n1<0&&(Brush.q.n1=0),Brush.q.n2=Math.round(Brush.q.n2),Brush.q.n2>255?Brush.q.n2=255:Brush.q.n2<0&&(Brush.q.n2=0)}static YP=216/24389;static ab=24389/27;static ad=[95.047,100,108.883];static KP(t){return t>Brush.YP?Math.pow(t,1/3):(Brush.ab*t+16)/116}static yI(){const t=Brush.KP(Brush.Bt.n0*100/Brush.ad[0]),i=Brush.KP(Brush.Bt.n1*100/Brush.ad[1]),e=Brush.KP(Brush.Bt.n2*100/Brush.ad[2]);Brush.eo.n0=116*i-16,Brush.eo.n1=500*(t-i),Brush.eo.n2=200*(i-e),Brush.eo.n3=Brush.Bt.n3}static zL(t){const i=t*t*t;return i>Brush.YP?i:(116*t-16)/Brush.ab}static wI(){const t=(Brush.eo.n0+16)/116,i=Brush.eo.n1/500+t,e=t-Brush.eo.n2/200;Brush.Bt.n0=Brush.ad[0]/100*Brush.zL(i),Brush.Bt.n1=Brush.ad[1]/100*(Brush.eo.n0>Brush.ab*Brush.YP?Math.pow(t,3):Brush.eo.n0/Brush.ab),Brush.Bt.n2=Brush.ad[2]/100*Brush.zL(e),Brush.Bt.n3=Brush.eo.n3}static xI(){let t=.8190224*Brush.Bt.n0+.3619062*Brush.Bt.n1+-.1288737*Brush.Bt.n2,i=.03298366*Brush.Bt.n0+.9292868*Brush.Bt.n1+.03614466*Brush.Bt.n2,e=.04817719*Brush.Bt.n0+.2642395*Brush.Bt.n1+.6335478*Brush.Bt.n2;t=Math.cbrt(t),i=Math.cbrt(i),e=Math.cbrt(e),Brush.di.n0=.2104542*t+.7936177*i+-.004072046*e,Brush.di.n1=1.977998*t+-2.428592*i+.4505937*e,Brush.di.n2=.02590403*t+.7827717*i+-.8086757*e,Brush.di.n3=Brush.Bt.n3,Brush.di.n0*=100}static bI(){Brush.di.n0/=100;let t=.9999999*Brush.di.n0+.3963377*Brush.di.n1+.2158037*Brush.di.n2,i=1.000000009*Brush.di.n0+-.1055613*Brush.di.n1+-.06385417*Brush.di.n2,e=1.00000005*Brush.di.n0+-.08948418*Brush.di.n1+-1.291485*Brush.di.n2;t=t**3,i=i**3,e=e**3,Brush.Bt.n0=1.2268798*t+-.5578149*i+.281391*e,Brush.Bt.n1=-.04057576*t+1.112286*i+-.07171106*e,Brush.Bt.n2=-.07637294*t+-.4214933*i+1.586924*e,Brush.Bt.n3=Brush.di.n3}static kI(){const t=Math.atan2(Brush.di.n2,Brush.di.n1)*180/Math.PI;Brush.so.n0=Brush.di.n0,Brush.so.n1=Math.sqrt(Brush.di.n1**2+Brush.di.n2**2),Brush.so.n2=t>=0?t:t+360,Brush.so.n3=Brush.di.n3}static SI(){Brush.di.n0=Brush.so.n0,Brush.di.n1=Brush.so.n1*Math.cos(Brush.so.n2*Math.PI/180),Brush.di.n2=Brush.so.n1*Math.sin(Brush.so.n2*Math.PI/180),Brush.di.n3=Brush.so.n3}static mI(){Brush.BL(),Brush.xI(),Brush.kI()}static pI(){Brush.SI(),Brush.bI(),Brush.VL()}static rd(t,i){typeof t==\"string\"?Debug&&!Brush.isValidColor(t)&&U.n('Color \"'+t+'\" is not a valid color string for '+i):t instanceof Brush||U.n(\"Value for \"+i+\" must be a color string or a Brush, not \"+t)}static Solid=1;static Linear=2;static Radial=3;static Pattern=4;static Lab=1;static HSL=2;static no=null;static tp=!1;static q=new ColorNumbers;static Yi=new ColorNumbers;static Bt=new ColorNumbers;static eo=new ColorNumbers;static di=new ColorNumbers;static so=new ColorNumbers}class PanelLayout{Lt=\"Base\";static ls=new GMap;static xn(t,i){i.name=t,PanelLayout.ls.set(t,i)}get name(){return this.Lt}set name(t){this.Lt=t}constructor(){}get classType(){return Panel}measure(t,i,e,s,n,o,r){}measureElement(t,i,e,s,n){t.dt(i,e,s,n)}arrange(t,i,e){}arrangeElement(t,i,e,s,n,o){t.Gt(i,e,s,n,o)}remeasureObject(t){t.lc()}Ui(t,i,e){}}class PanelLayoutPosition extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){const l=s.length,h=t.Go();for(let f=0;f<l;f++){const a=s[f];if(!a.visible&&a!==h)continue;const c=a.margin,u=c.right+c.left,d=c.top+c.bottom;a.dt(i,e,o,r);const m=a.measuredBounds,g=Math.max(m.width+u,0),p=Math.max(m.height+d,0);let w=a.position.x,x=a.position.y;if(isFinite(w)||(w=0),isFinite(x)||(x=0),a instanceof Shape&&a.isGeometryPositioned){const k=a.strokeWidth/2;w-=k,x-=k}n.unionNoCheck(w,x,g,p)}}arrange(t,i,e){const s=i.length,n=t.padding,o=e.x-n.left,r=e.y-n.top;for(let l=0;l<s;l++){const h=i[l],f=h.measuredBounds,a=h.margin,c=h.position.x,u=h.position.y;let d=isNaN(c)?-o:c-o,m=isNaN(u)?-r:u-r;if(h instanceof Shape&&h.isGeometryPositioned){const g=h.strokeWidth/2;d-=g,m-=g}h.visible&&h.Gt(d+a.left,m+a.top,f.width,f.height)}}}PanelLayout.xn(\"Position\",new PanelLayoutPosition);class PanelLayoutHorizontal extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){const l=s.length,h=U.lt(),f=t.Go();for(let c=0;c<l;c++){const u=s[c];if(!u.visible&&u!==f)continue;const d=u.qs(!1);if(d!==0&&d!==5){h.push(u);continue}u.dt(1/0,e,0,r);const m=u.margin,g=u.measuredBounds,p=Math.max(g.width+m.right+m.left,0),w=Math.max(g.height+m.top+m.bottom,0);n.Vn(n.width+p,Math.max(n.height,w))}const a=h.length;t.desiredSize.height?e=Math.min(t.desiredSize.height,t.maxSize.height):n.height!==0&&(e=Math.min(n.height,t.maxSize.height));for(let c=0;c<a;c++){const u=h[c];if(!u.visible&&u!==f)continue;const d=u.margin,m=d.right+d.left,g=d.top+d.bottom;u.dt(1/0,e,0,r);const p=u.measuredBounds,w=Math.max(p.width+m,0),x=Math.max(p.height+g,0);n.width+=w,n.height=Math.max(n.height,x)}U.tt(h)}arrange(t,i,e){const s=i.length,n=t.padding,o=n.top,r=t.isOpposite;let l=r?e.width:n.left;for(let h=0;h<s;h++){const f=o,a=i[h];if(!a.visible)continue;const c=a.measuredBounds,u=a.margin,d=u.top+u.bottom,m=o+n.bottom;let g=c.height;const p=a.qs(!1);(isNaN(a.desiredSize.height)&&p===2||p===4)&&(g=Math.max(e.height-d-m,0));const w=g+d+m;let x=a.alignment;x.isDefault()&&(x=t.defaultAlignment),x.isSpot()||(x=Spot.Center),r&&(l-=c.width+u.left+u.right),a.Gt(l+x.offsetX+u.left,f+x.offsetY+u.top+(e.height*x.y-w*x.y),c.width,g),r||(l+=c.width+u.left+u.right)}}}PanelLayout.xn(\"Horizontal\",new PanelLayoutHorizontal);class PanelLayoutVertical extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){const l=s.length,h=U.lt(),f=t.Go();for(let c=0;c<l;c++){const u=s[c];if(!u.visible&&u!==f)continue;const d=u.qs(!1);if(d!==0&&d!==4){h.push(u);continue}u.dt(i,1/0,o,0);const m=u.margin,g=u.measuredBounds,p=Math.max(g.width+m.right+m.left,0),w=Math.max(g.height+m.top+m.bottom,0);n.Vn(Math.max(n.width,p),n.height+w)}const a=h.length;t.desiredSize.width?i=Math.min(t.desiredSize.width,t.maxSize.width):n.width!==0&&(i=Math.min(n.width,t.maxSize.width));for(let c=0;c<a;c++){const u=h[c];if(!u.visible&&u!==f)continue;const d=u.margin,m=d.right+d.left,g=d.top+d.bottom;u.dt(i,1/0,o,0);const p=u.measuredBounds,w=Math.max(p.width+m,0),x=Math.max(p.height+g,0);n.width=Math.max(n.width,w),n.height+=x}U.tt(h)}arrange(t,i,e){const s=i.length,n=t.padding,o=n.left,r=t.isOpposite;let l=r?e.height:n.top;for(let h=0;h<s;h++){const f=o,a=i[h];if(!a.visible)continue;const c=a.measuredBounds,u=a.margin,d=u.left+u.right,m=o+n.right;let g=c.width;const p=a.qs(!1);(isNaN(a.desiredSize.width)&&p===2||p===5)&&(g=Math.max(e.width-d-m,0));const w=g+d+m;let x=a.alignment;x.isDefault()&&(x=t.defaultAlignment),x.isSpot()||(x=Spot.Center),r&&(l-=c.height+u.bottom+u.top),a.Gt(f+x.offsetX+u.left+(e.width*x.x-w*x.x),l+x.offsetY+u.top,g,c.height),r||(l+=c.height+u.bottom+u.top)}}}PanelLayout.xn(\"Vertical\",new PanelLayoutVertical);class PanelLayoutSpot extends PanelLayout{constructor(){super()}static XL=!1;measure(t,i,e,s,n,o,r){const l=s.length;if(l===0)return;const h=t.findMainElement();let f=h.margin,a=0,c=0;const u=f.right+f.left,d=f.top+f.bottom;h.dt(i,e,o,r);let m=h.measuredBounds,g=m.width,p=m.height,w=Math.max(g+u,0),x=Math.max(p+d,0);const k=t.isClipping;k&&h.M0()!==0&&!PanelLayoutSpot.XL&&(PanelLayoutSpot.XL=!0,U.nt(\"Main Shape for Spot Panel with isClipping = true must have a zero strokeWidth: \"+t.toString()));const b=Rect.K(-f.left,-f.top,w,x);let S=Rect.K(0,0,g,p);this.UP(h,S,!0),g=S.width,p=S.height;let M=!0;const A=t.Go();let C;for(let P=0;P<l;P++){const N=s[P];let T=i,L=e;if(N===h||!N.visible&&N!==A)continue;f=N.margin;let D=f.left,F=f.top;switch(a=f.right+f.left,c=f.top+f.bottom,C=N.qs(!1),C){case 2:T=g,L=p,a=0,c=0,D=0,F=0;break;case 5:T=g,a=0,D=0;break;case 4:L=p,c=0,F=0;break}N.dt(T,L,0,0),m=N.measuredBounds,w=Math.max(m.width+a,0),x=Math.max(m.height+c,0);let I=N.alignment;I.isDefault()&&(I=t.defaultAlignment),I.isSpot()||(I=Spot.Center);let R=N.alignmentFocus;R.isDefault()&&(R=Spot.Center);let O=null;N instanceof Panel&&N.oo!==\"\"&&(O=N.findObject(N.oo),O===N&&(O=null));let Y=S.x-D,K=S.y-F;if(O!==null){N.Gt(0,0,m.width,m.height);const B=O.actualBounds,z=Point.K(B.x+(R.x*B.width-R.offsetX),B.y+(R.y*B.height-R.offsetY));for(O=O.panel;O!==N;)O.F.kt(z),O=O.panel;Y+=I.x*g+I.offsetX-z.x,K+=I.y*p+I.offsetY-z.y,Point.o(z)}else Y+=I.x*g+I.offsetX-(R.x*m.width+R.offsetX),K+=I.y*p+I.offsetY-(R.y*m.height+R.offsetY);M?(M=!1,n.s(Y,K,w,x)):n.unionNoCheck(Y,K,w,x)}switch(M?n.c(b):k?n.intersect(S.x,S.y,S.width,S.height):n.unionNoCheck(b.x,b.y,b.width,b.height),Rect.o(b),Rect.o(S),C=h.stretch,C===1&&(C=h.qs(!1)),C){case 0:return;case 2:if(!isFinite(i)&&!isFinite(e))return;break;case 5:if(!isFinite(i))return;break;case 4:if(!isFinite(e))return;break}m=h.measuredBounds,g=m.width,p=m.height,w=Math.max(g+u,0),x=Math.max(p+d,0),f=h.margin,S=Rect.K(-f.left,-f.top,w,x),this.UP(h,S,!0),g=S.width,p=S.height;for(let P=0;P<l;P++){const N=s[P];if(N===h||!N.visible&&N!==A)continue;f=N.margin,a=f.right+f.left,c=f.top+f.bottom,m=N.measuredBounds,w=Math.max(m.width+a,0),x=Math.max(m.height+c,0);let T=N.alignment;T.isDefault()&&(T=t.defaultAlignment),T.isSpot()||(T=Spot.Center);let L=N.alignmentFocus;L.isDefault()&&(L=Spot.Center),M?(M=!1,n.s(T.x*g+T.offsetX-(L.x*m.width+L.offsetX)-f.left,T.y*p+T.offsetY-(L.y*m.height+L.offsetY)-f.top,w,x)):n.unionNoCheck(T.x*g+T.offsetX-(L.x*m.width+L.offsetX)-f.left,T.y*p+T.offsetY-(L.y*m.height+L.offsetY)-f.top,w,x)}M?n.c(b):k?n.intersect(S.x,S.y,S.width,S.height):n.unionNoCheck(b.x,b.y,b.width,b.height),Rect.o(S)}arrange(t,i,e){const s=i.length;if(s===0)return;const n=t.findMainElement(),o=n.measuredBounds,r=o.width,l=o.height,h=t.padding,f=h.left,a=h.top;let c=f-e.x,u=a-e.y;n.Gt(c,u,r,l);const d=Rect.K(0,0,r,l);this.UP(n,d,!1);for(let m=0;m<s;m++){const g=i[m];if(g===n)continue;const p=g.measuredBounds,w=p.width,x=p.height;let k=g.alignment;k.isDefault()&&(k=t.defaultAlignment),k.isSpot()||(k=Spot.Center);let b=g.alignmentFocus;b.isDefault()&&(b=Spot.Center);let S=null;if(g instanceof Panel&&g.oo!==\"\"&&(S=g.findObject(g.oo),S===g&&(S=null)),S!==null){const M=S.actualBounds,A=Point.K(M.x+(b.x*M.width-b.offsetX),M.y+(b.y*M.height-b.offsetY));for(S=S.panel;S!==g;)S.F.kt(A),S=S.panel;c=k.x*d.width+k.offsetX-A.x,u=k.y*d.height+k.offsetY-A.y,Point.o(A)}else c=k.x*d.width+k.offsetX-(b.x*w+b.offsetX),u=k.y*d.height+k.offsetY-(b.y*x+b.offsetY);c+=d.x-e.x,u+=d.y-e.y,g.visible&&g.Gt(f+c,a+u,w,x)}Rect.o(d)}UP(t,i,e){let s=null;if(t instanceof Panel&&t.oo!==\"\"&&(s=t.findObject(t.oo),s===t&&(s=null)),s!==null)for(e&&t.Gt(0,0,i.width,i.height),i.c(s.actualBounds),s=s.panel;s!==t;)s.F.Yg(i),s=s.panel}}PanelLayout.xn(\"Spot\",new PanelLayoutSpot);class PanelLayoutAuto extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){const l=s.length;if(l===0)return;const h=t.findMainElement();let f=h.margin,a=i,c=e;const u=f.right+f.left,d=f.top+f.bottom;h.dt(i,e,o,r);let m=h.measuredBounds,g=0,p=null;h instanceof Shape&&(p=h,g=p.strokeWidth*p.scale);let w=Math.max(m.width+u,0),x=Math.max(m.height+d,0),k=t.GP(h);const b=k.x*w+k.offsetX,S=k.y*x+k.offsetY;let M=t.HP(h);const A=M.x*w+M.offsetX,C=M.y*x+M.offsetY;isFinite(i)&&(a=Math.max(Math.abs(b-A)-g,0)),isFinite(e)&&(c=Math.max(Math.abs(S-C)-g,0));let P=0,N=0;o>0&&(P=Math.max(Math.abs(k.x*o+k.offsetX-(M.x*o+M.offsetX))-g,0)),r>0&&(N=Math.max(Math.abs(k.y*r+k.offsetY-(M.y*r+M.offsetY))-g,0));const T=Size.a();T.s(0,0);const L=t.Go();for(let R=0;R<l;R++){const O=s[R];if(O===h||!O.visible&&O!==L)continue;f=O.margin;const Y=f.right+f.left,K=f.top+f.bottom;O.dt(a,c,P,N),m=O.measuredBounds,w=Math.max(m.width+Y,0),x=Math.max(m.height+K,0),T.s(Math.max(w,T.width),Math.max(x,T.height))}if(l===1){m=h.measuredBounds,n.width=w,n.height=x,Size.o(T);return}k=t.GP(h),M=t.HP(h);let D=0,F=0;M.x!==k.x&&M.y!==k.y&&(D=T.width/Math.abs(M.x-k.x),F=T.height/Math.abs(M.y-k.y)),Size.o(T),g=0,p!==null&&(g=p.strokeWidth*p.scale,p.pM()===6&&(D=F=Math.max(D,F))),D+=Math.abs(k.offsetX)+Math.abs(M.offsetX)+g,F+=Math.abs(k.offsetY)+Math.abs(M.offsetY)+g;let I=h.stretch;switch(I===1&&(I=h.qs(!1)),I){case 0:o=0,r=0;break;case 2:isFinite(i)&&(D=i),isFinite(e)&&(F=e);break;case 5:isFinite(i)&&(D=i),r=0;break;case 4:o=0,isFinite(e)&&(F=e);break}h.lc(),h.dt(D,F,o,r),n.width=h.measuredBounds.width+u,n.height=h.measuredBounds.height+d}arrange(t,i,e){const s=i.length;if(s===0)return;const n=t.findMainElement(),o=n.measuredBounds,r=Rect.a();r.s(0,0,1,1);let l=n.margin;const h=l.left,f=l.top,a=t.padding,c=a.left,u=a.top;let d=h,m=f,g=o.width,p=o.height;n.Gt(c+d,u+m,g,p);const w=t.GP(n),x=t.HP(n),k=0+w.x*o.width+w.offsetX,b=0+w.y*o.height+w.offsetY,S=0+x.x*o.width+x.offsetX,M=0+x.y*o.height+x.offsetY;r.x=k,r.y=b,r.unionNoCheck(S,M,0,0),r.x+=h+c,r.y+=f+u;for(let A=0;A<s;A++){const C=i[A];if(C===n)continue;const P=C.measuredBounds;l=C.margin;const N=Math.max(P.width+l.right+l.left,0),T=Math.max(P.height+l.top+l.bottom,0);let L=C.alignment;L.isDefault()&&(L=t.defaultAlignment),L.isSpot()||(L=Spot.Center),d=r.width*L.x+L.offsetX-N*L.x+l.left+r.x,m=r.height*L.y+L.offsetY-T*L.y+l.top+r.y,g=r.width,p=r.height,C.visible&&(Rect.contains(r.x,r.y,r.width,r.height,d,m,P.width,P.height)?C.Gt(d,m,P.width,P.height):C.Gt(d,m,P.width,P.height,new Rect(r.x,r.y,r.width,r.height)))}Rect.o(r)}}PanelLayout.xn(\"Auto\",new PanelLayoutAuto);class PanelLayoutTable extends PanelLayout{constructor(){super(),this.name=\"Table\"}measure(t,i,e,s,n,o,r){let l=s.length;const h=U.lt(),f=U.lt();for(let G=0;G<l;G++){const E=s[G],q=E instanceof Panel?E:null;if(q!==null&&q.el()&&E.visible){Debug&&(q.desiredSize.isReal()&&U.n(q.toString()+\" TableRow/TableColumn Panels cannot set a desiredSize: \"+q.desiredSize.toString()),q.minSize.equals(Size.Gh)||U.n(q.toString()+\" TableRow/TableColumn Panels cannot set a minSize: \"+q.minSize.toString()),q.maxSize.equals(Size.Mw)||U.n(q.toString()+\" TableRow/TableColumn Panels cannot set a maxSize: \"+q.maxSize.toString())),f.push(q);const Z=q.T.h,st=Z.length;for(let tt=0;tt<st;tt++){const it=Z[tt];q.type===Panel.TableRow?it.row=E.row:q.type===Panel.TableColumn&&(it.column=E.column),h.push(it)}}else h.push(E)}l=h.length,l===0&&(t.getRowDefinition(0),t.getColumnDefinition(0));const a=[];for(let G=0;G<l;G++){const E=h[G];E.visible&&(E.pe(!0),E.to(!0),a[E.row]||(a[E.row]=[]),a[E.row][E.column]||(a[E.row][E.column]=[]),a[E.row][E.column].push(E))}U.tt(h);const c=U.lt(),u=U.lt(),d=U.lt(),m={count:0},g={count:0};let p=i,w=e;const x=t.We,k=t.je;let b=null;l=x.length;for(let G=0;G<l;G++)b=x[G],b!==void 0&&(b.actual=0,b.Ii=0);l=k.length;for(let G=0;G<l;G++)b=k[G],b!==void 0&&(b.actual=0,b.Ii=0);let S=a.length,M=0;for(let G=0;G<S;G++)a[G]&&(M=Math.max(M,a[G].length));const A=Math.min(t.topIndex,S-1),C=Math.min(t.leftIndex,M-1);let P=0,N;S=a.length;const T=t.Go();for(let G=0;G<S;G++){if(!a[G])continue;M=a[G].length;const E=t.getRowDefinition(G);E.actual=0,E.Ii=0;for(let q=0;q<M;q++){if(!a[G][q])continue;const Z=t.getColumnDefinition(q);c[q]===void 0&&(Z.actual=0,Z.Ii=0,c[q]=!0);const st=a[G][q],tt=st.length;for(let it=0;it<tt;it++){const et=st[it];if(!et.visible&&et!==T)continue;const ct=et.rowSpan>1,rt=et.columnSpan>1;(ct||rt)&&!(G<A)&&!(q<C)&&u.push(et);const ht=et.margin,nt=ht.right+ht.left,ot=ht.top+ht.bottom;N=et.T0(E,Z,!1);const at=et.desiredSize,Q=!isNaN(at.width),ut=!isNaN(at.height);if(N!==0&&!(Q&&ut)&&!(G<A)&&!(q<C)&&(!rt&&m[q]===void 0&&(N===2||N===5)&&(m[q]=-1,m.count++),!ct&&g[G]===void 0&&(N===2||N===4)&&(g[G]=-1,g.count++),!ct&&!rt&&d.push(et)),et.dt(1/0,1/0,0,0),G<A||q<C)continue;const ft=et.measuredBounds,dt=Math.max(ft.width+nt,0),gt=Math.max(ft.height+ot,0);if(et.rowSpan===1&&(N===0||N===5)){b=t.getRowDefinition(G);const mt=b.computeEffectiveSpacing(),pt=b.st===0;P=Math.max(gt-b.actual,0),P+(pt?mt:0)>w&&(P=Math.max(w-mt,0)),b.Ii=b.Ii+P,b.actual=b.st+P,w=Math.max(w-(P+(pt?mt:0)),0)}if(et.columnSpan===1&&(N===0||N===4)){b=t.getColumnDefinition(q);const mt=b.computeEffectiveSpacing(),pt=b.st===0;P=Math.max(dt-b.actual,0),P+(pt?mt:0)>p&&(P=Math.max(p-mt,0)),b.Ii=b.Ii+P,b.actual=b.st+P,p=Math.max(p-(P+(pt?mt:0)),0)}(ct||rt)&&et.lc()}}}U.tt(c);let L=0,D=0;l=t.columnCount;for(let G=0;G<l;G++){const E=k[G];E!==void 0&&(L+=isNaN(E.ye)?E.Ii:E.ye,E.Ii!==0&&(L+=E.computeEffectiveSpacing()))}l=t.rowCount;for(let G=0;G<l;G++){const E=x[G];E!==void 0&&(D+=isNaN(E.ye)?E.Ii:E.ye,E.Ii!==0&&(D+=E.computeEffectiveSpacing()))}p=Math.max(i-L,0),w=Math.max(e-D,0);let F=w,I=p;l=d.length;for(let G=0;G<l;G++){const E=d[G],q=t.getRowDefinition(E.row),Z=t.getColumnDefinition(E.column),st=E.measuredBounds,tt=E.margin,it=tt.right+tt.left,et=tt.top+tt.bottom;Z.Ii===0&&m[E.column]!==void 0?m[E.column]=Math.max(st.width+it,m[E.column]):m[E.column]=null,q.Ii===0&&g[E.row]!==void 0?g[E.row]=Math.max(st.height+et,g[E.row]):g[E.row]=null}let R=0,O=0,Y;for(Y in g)Y!==\"count\"&&(R+=g[Y]);for(Y in m)Y!==\"count\"&&(O+=m[Y]);const K=Size.a();for(let G=0;G<l;G++){const E=d[G];if(!E.visible&&E!==T)continue;const q=t.getRowDefinition(E.row),Z=t.getColumnDefinition(E.column);let st=0;isFinite(Z.width)?st=Z.width:(isFinite(p)&&m[E.column]!==null?O===0?st=Z.actual+p:st=m[E.column]/O*I:m[E.column]!==null?st=p:st=Z.actual||p,st=Math.max(0,st-Z.computeEffectiveSpacing()));let tt=0;switch(isFinite(q.height)?tt=q.height:(isFinite(w)&&g[E.row]!==null?R===0?tt=q.actual+w:tt=g[E.row]/R*F:g[E.row]!==null?tt=w:tt=q.actual||w,tt=Math.max(0,tt-q.computeEffectiveSpacing())),K.s(Math.max(Z.minimum,Math.min(st,Z.maximum)),Math.max(q.minimum,Math.min(tt,q.maximum))),N=E.T0(q,Z,!1),N){case 5:K.height=Math.max(K.height,q.actual+w);break;case 4:K.width=Math.max(K.width,Z.actual+p);break}const it=E.margin,et=it.right+it.left,ct=it.top+it.bottom;E.lc();let rt=Z.minimum,ht=q.minimum;const nt=E.measuredBounds;nt.width===0&&m[E.column]!==null&&(rt=Math.max(rt,m[E.column])),nt.height===0&&g[E.row]!==null&&(ht=Math.max(rt,g[E.row])),E.dt(K.width,K.height,rt,ht);const ot=E.measuredBounds;let at=Math.max(ot.width+et,0),Q=Math.max(ot.height+ct,0);isFinite(p)&&(at=Math.min(at,K.width)),isFinite(w)&&(Q=Math.min(Q,K.height));let ut=0;ut=q.actual,q.actual=Math.max(q.actual,Q),q.Ii=Math.max(q.Ii,Q),P=q.actual-ut,w=Math.max(w-P,0),g[E.row]===null&&(F=Math.max(F-P,0)),ut=Z.actual,Z.actual=Math.max(Z.actual,at),Z.Ii=Math.max(Z.Ii,at),P=Z.actual-ut,p=Math.max(p-P,0),m[E.column]===null&&(I=Math.max(I-P,0))}U.tt(d);const B=Size.a(),z=U.lt(),V=U.lt();if(l=u.length,l!==0)for(let G=0;G<S;G++){if(!a[G])continue;M=a[G].length;const E=t.getRowDefinition(G);z[G]=E.actual;for(let q=0;q<M;q++){if(!a[G][q])continue;const Z=t.getColumnDefinition(q);V[q]=Z.actual}}for(let G=0;G<l;G++){const E=u[G];if(!E.visible&&E!==T)continue;const q=t.getRowDefinition(E.row),Z=t.getColumnDefinition(E.column);switch(K.s(Math.max(Z.minimum,Math.min(i,Z.maximum)),Math.max(q.minimum,Math.min(e,q.maximum))),N=E.T0(q,Z,!1),N){case 2:V[Z.index]!==0&&(K.width=Math.min(K.width,V[Z.index])),z[q.index]!==0&&(K.height=Math.min(K.height,z[q.index]));break;case 5:V[Z.index]!==0&&(K.width=Math.min(K.width,V[Z.index]));break;case 4:z[q.index]!==0&&(K.height=Math.min(K.height,z[q.index]));break}isFinite(Z.width)&&(K.width=Z.width),isFinite(q.height)&&(K.height=q.height),B.s(0,0);let st=Z.minimum,tt=q.minimum;for(let Q=1;Q<E.rowSpan&&!(E.row+Q>=t.rowCount);Q++)b=t.getRowDefinition(E.row+Q),P=0,N===2||N===4?P=Math.max(b.minimum,z[E.row+Q]===0?b.maximum:Math.min(z[E.row+Q],b.maximum)):P=Math.max(b.minimum,isNaN(b.ye)?b.maximum:Math.min(b.ye,b.maximum)),B.height+=P,tt+=b.minimum;for(let Q=1;Q<E.columnSpan&&!(E.column+Q>=t.columnCount);Q++)b=t.getColumnDefinition(E.column+Q),P=0,N===2||N===5?P=Math.max(b.minimum,V[E.column+Q]===0?b.maximum:Math.min(V[E.column+Q],b.maximum)):P=Math.max(b.minimum,isNaN(b.ye)?b.maximum:Math.min(b.ye,b.maximum)),B.width+=P,st+=b.minimum;K.width+=B.width,K.height+=B.height;const it=E.margin,et=it.right+it.left,ct=it.top+it.bottom;E.dt(K.width,K.height,st,tt);const rt=E.measuredBounds,ht=Math.max(rt.width+et,0),nt=Math.max(rt.height+ct,0);let ot=0;for(let Q=0;Q<E.rowSpan&&!(E.row+Q>=t.rowCount);Q++)b=t.getRowDefinition(E.row+Q),ot+=b.total||0;if(ot<nt){let Q=nt-ot;const ut=nt-ot;if(E.spanAllocation!==null){const lt=E.spanAllocation;for(let ft=0;ft<E.rowSpan&&!(Q<=0||E.row+ft>=t.rowCount);ft++){b=t.getRowDefinition(E.row+ft);const dt=b.st||0,gt=lt(E,b,ut);Debug&&typeof gt!=\"number\"&&U.n(E+\" spanAllocation does not return a number: \"+gt),b.actual=Math.min(b.maximum,dt+gt),b.st!==dt&&(Q-=b.st-dt)}}for(;Q>0;){const lt=b.st||0;if(isNaN(b.height)&&b.maximum>lt&&(b.actual=Math.min(b.maximum,lt+Q),b.st!==lt&&(Q-=b.st-lt)),b.index===0)break;b=t.getRowDefinition(b.index-1)}}let at=0;for(let Q=0;Q<E.columnSpan&&!(E.column+Q>=t.columnCount);Q++)b=t.getColumnDefinition(E.column+Q),at+=b.total||0;if(at<ht){let Q=ht-at;const ut=ht-at;if(E.spanAllocation!==null){const lt=E.spanAllocation;for(let ft=0;ft<E.columnSpan&&!(Q<=0||E.column+ft>=t.columnCount);ft++){b=t.getColumnDefinition(E.column+ft);const dt=b.st||0,gt=lt(E,b,ut);Debug&&typeof gt!=\"number\"&&U.n(E+\" spanAllocation does not return a number: \"+gt),b.actual=Math.min(b.maximum,dt+gt),b.st!==dt&&(Q-=b.st-dt)}}for(;Q>0;){const lt=b.st||0;if(isNaN(b.width)&&b.maximum>lt&&(b.actual=Math.min(b.maximum,lt+Q),b.st!==lt&&(Q-=b.st-lt)),b.index===0)break;b=t.getColumnDefinition(b.index-1)}}}U.tt(u),Size.o(B),Size.o(K),z!==void 0&&U.tt(z),V!==void 0&&U.tt(V);let H=0,W=0;const j=t.desiredSize,$=t.maxSize;N=t.qs(!0),L=0,D=0;let X=0,J=0;l=t.columnCount;for(let G=0;G<l;G++)if(k[G]!==void 0){if(b=t.getColumnDefinition(G),isFinite(b.width)){X+=b.width,X+=b.computeEffectiveSpacing();continue}else if(b.fb()===2){X+=b.st,X+=b.computeEffectiveSpacing();continue}b.st!==0&&(L+=b.st,L+=b.computeEffectiveSpacing())}isFinite(j.width)?H=Math.min(j.width,$.width):N!==0&&isFinite(i)?H=i:H=L,H=Math.max(H,isFinite(i)?Math.min(o,i):o),H=Math.max(H-X,0);const v=L===0?1:Math.max(H/L,1);for(let G=0;G<l;G++)k[G]!==void 0&&(b=t.getColumnDefinition(G),!isFinite(b.width)&&b.fb()!==2&&(b.actual=b.st*v),b.position=n.width,b.st!==0&&(n.width+=b.st,n.width+=b.computeEffectiveSpacing()));l=t.rowCount;for(let G=0;G<l;G++)if(x[G]!==void 0){if(b=t.getRowDefinition(G),isFinite(b.height)){J+=b.height,J+=b.computeEffectiveSpacing();continue}else if(b.fb()===2){J+=b.st,J+=b.computeEffectiveSpacing();continue}b.st!==0&&(D+=b.st,D+=b.computeEffectiveSpacing())}isFinite(j.height)?W=Math.min(j.height,$.height):N!==0&&isFinite(e)?W=e:W=D,W=Math.max(W,isFinite(e)?Math.min(r,e):r),W=Math.max(W-J,0);const _=D===0?1:Math.max(W/D,1);for(let G=0;G<l;G++)x[G]!==void 0&&(b=t.getRowDefinition(G),!isFinite(b.height)&&b.fb()!==2&&(b.actual=b.st*_),b.position=n.height,b.st!==0&&(n.height+=b.st,n.height+=b.computeEffectiveSpacing()));l=f.length;for(let G=0;G<l;G++){const E=f[G];let q=0,Z=0;E.type===Panel.TableRow?(q=n.width,b=t.getRowDefinition(E.row),Z=b.actual):(b=t.getColumnDefinition(E.column),q=b.actual,Z=n.height),E.measuredBounds.s(0,0,q,Z),E.pe(!1)}U.tt(f),t.Sh=a}arrange(t,i,e){const s=i.length,n=t.padding,o=n.left,r=n.top,l=t.Sh;if(l===null)return;let h=0,f=0;const a=l.length;let c=0;for(let C=0;C<a;C++)l[C]&&(c=Math.max(c,l[C].length));const u=t.We,d=t.je;let m=0,g=0,p=Math.min(t.topIndex,a-1);if(u.length>0){for(;p!==a&&(u[p]===void 0||u[p].st===0);)p++;p=Math.max(Math.min(p,a-1),0),m=-u[p].position}let w=Math.min(t.leftIndex,c-1);if(d.length>0){for(;w!==c&&(d[w]===void 0||d[w].st===0);)w++;w=Math.max(Math.min(w,c-1),0),g=-d[w].position}let x=0,k=0;for(;x!==a&&u[x]===void 0;)x++;for(;k!==a&&d[k]===void 0;)k++;const b=t.part;let S=t.getRowDefinition(x),M=t.getColumnDefinition(k);for(let C=0;C<i.length;C++){const P=i[C];if(!(P instanceof Panel&&P.visible&&P.el()))continue;P.type===Panel.TableRow?(S=t.getRowDefinition(P.row),M=t.getColumnDefinition(k)):(S=t.getRowDefinition(x),M=t.getColumnDefinition(P.column)),f=S.position+m+r,S.st!==0&&(f+=S.computeEffectiveSpacingTop(Math.max(x,p))),h=M.position+g+o,M.st!==0&&(h+=M.computeEffectiveSpacingTop(Math.max(k,w)));const N=P.measuredBounds;P.sc(),P.actualBounds.At();const T=P.actualBounds,L=Rect.K(T.x,T.y,T.width,T.height);if(T.x=P.type===Panel.TableRow?o:h,T.y=P.type===Panel.TableColumn?r:f,T.width=N.width,T.height=N.height,P.actualBounds.p(),P.to(!1),L.equalsApproxClose(T)){Rect.o(L);continue}b!==null&&(b.wh(),P.N0(b)),Rect.o(L)}const A=Size.a();for(let C=0;C<a;C++){if(!l[C])continue;c=l[C].length;const P=t.getRowDefinition(C);f=P.position+m+r,P.st!==0&&(f+=P.computeEffectiveSpacingTop(Math.max(x,p)));for(let N=0;N<c;N++){if(!l[C][N])continue;const T=t.getColumnDefinition(N);h=T.position+g+o,T.st!==0&&(h+=T.computeEffectiveSpacingTop(Math.max(k,w)));const L=l[C][N],D=L.length;for(let F=0;F<D;F++){const I=L[F],R=I.measuredBounds;A.s(0,0);for(let nt=1;nt<I.rowSpan&&!(C+nt>=t.rowCount);nt++){const ot=t.getRowDefinition(C+nt);ot.st!==0&&(A.height+=ot.total)}for(let nt=1;nt<I.columnSpan&&!(N+nt>=t.columnCount);nt++){const ot=t.getColumnDefinition(N+nt);ot.st!==0&&(A.width+=ot.total)}const O=T.st+A.width,Y=P.st+A.height;let K=h,B=f;const z=O,V=Y,H=h,W=f;let j=O,$=Y;h+O>e.width&&(j=Math.max(e.width-h,0)),f+Y>e.height&&($=Math.max(e.height-f,0));let X=I.alignment,J=0,v=0,_=0,G=0;if(X.isDefault()){X=t.defaultAlignment,X.isSpot()||(X=Spot.Center),J=X.x,v=X.y,_=X.offsetX,G=X.offsetY;const nt=T.alignment,ot=P.alignment;nt.isSpot()&&(J=nt.x,_=nt.offsetX),ot.isSpot()&&(v=ot.y,G=ot.offsetY)}else J=X.x,v=X.y,_=X.offsetX,G=X.offsetY;(isNaN(J)||isNaN(v))&&(J=.5,v=.5,_=0,G=0);let E=R.width,q=R.height;const Z=I.margin,st=Z.left+Z.right,tt=Z.top+Z.bottom,it=I.T0(P,T,!1);isNaN(I.desiredSize.width)&&(it===2||it===5)&&(E=Math.max(O-st,0)),isNaN(I.desiredSize.height)&&(it===2||it===4)&&(q=Math.max(Y-tt,0));const et=I.maxSize,ct=I.minSize;E=Math.min(et.width,E),q=Math.min(et.height,q),E=Math.max(ct.width,E),q=Math.max(ct.height,q);const rt=E+st,ht=q+tt;K+=z*J-rt*J+_+Z.left,B+=V*v-ht*v+G+Z.top,I.visible&&(Rect.contains(H,W,j,$,K,B,R.width,R.height)?I.Gt(K,B,E,q):I.Gt(K,B,E,q,new Rect(H,W,j,$)))}}}Size.o(A);for(let C=0;C<s;C++){const P=i[C],N=P instanceof Panel?P:null;if(N!==null&&N.el()){const T=P.actualBounds;P.naturalBounds.At(),P.naturalBounds.s(0,0,T.width,T.height),P.naturalBounds.p()}}}}PanelLayout.xn(\"Table\",new PanelLayoutTable);class PanelLayoutTableRow extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){}arrange(t,i,e){}}PanelLayout.xn(\"TableRow\",new PanelLayoutTableRow);class PanelLayoutTableColumn extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){}arrange(t,i,e){}}PanelLayout.xn(\"TableColumn\",new PanelLayoutTableColumn);class PanelLayoutViewbox extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){s.length!==1&&U.n(\"Viewbox Panel must contain exactly one GraphObject.\");const h=s[0];h.ot=1,h.lc(),h.dt(1/0,1/0,o,r);let f=h.measuredBounds;const a=h.margin,c=a.right+a.left,u=a.top+a.bottom;if(isFinite(i)||isFinite(e)){const d=h.scale,m=f.width,g=f.height,p=Math.max(i-c,0),w=Math.max(e-u,0);let x=1;t.viewboxStretch===6?(m!==0&&g!==0&&(x=Math.min(p/m,w/g)),x===0&&(x=1e-4),h.ot*=x):(m!==0&&g!==0&&(x=Math.max(p/m,w/g)),x===0&&(x=1e-4),h.ot*=x),d!==h.scale&&(h.pe(!0),h.dt(1/0,1/0,o,r))}f=h.measuredBounds,n.width=isFinite(i)?i:Math.max(f.width+c,0),n.height=isFinite(e)?e:Math.max(f.height+u,0)}arrange(t,i,e){const s=i[0],n=s.measuredBounds,o=s.margin,r=o.right+o.left,l=o.top+o.bottom,h=Math.max(n.width+r,0),f=Math.max(n.height+l,0);let a=s.alignment;a.isDefault()&&(a=t.defaultAlignment),a.isSpot()||(a=Spot.Center),s.Gt(e.width*a.x-h*a.x+a.offsetX,e.height*a.y-f*a.y+a.offsetY,n.width,n.height)}}PanelLayout.xn(\"Viewbox\",new PanelLayoutViewbox);class PanelLayoutGrid extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){t.ki===null&&(t.ki=new GridPanelSettings),this.MI(t),this.NI(t)}arrange(t,i,e){}Ui(t,i,e){const s=t.naturalBounds,n=s.width,o=s.height;i.save(),i.beginPath(),i.rect(0,0,n,o),i.clip(),i.endPath(),this.CI(t,i,e),i.restore(),i.clearContextCache(!1)}CI(t,i,e){let s=t.getDocumentScale()*e.scale;s<=0&&(s=1);const n=t.gridCellSize,o=n.width,r=n.height,l=t.naturalBounds,h=t.actualBounds,f=l.width,a=l.height,c=Math.ceil(f/o),u=Math.ceil(a/r),d=t.gridOrigin,m=d.x,g=d.y,p=t.ki.ip,w=t.T.h,x=w.length;for(let k=0;k<x;k++){const b=w[k];if(!b.visible)continue;const S=b.interval||1,M=Math.abs(S);if(o*M*s<2)continue;let A=b.segmentIndex;(!isFinite(A)||isNaN(A))&&(A=0),A<0&&(A=M-Math.min(-A,M)),A=Math.round(A%M);const C=b.opacity;let P=1;if(C!==1){if(C===0)continue;P=i.globalAlpha,i.globalAlpha=P*C}const N=p[k];let T=!1;const L=b.strokeDashArray;if(L!==null&&(T=!0,i.enableDash(L,b.strokeDashOffset)),b.stroke!==null&&b.strokeWidth>0&&(b.figure===\"LineV\"||b.figure===\"LineH\")){if(i.lineWidth=b.strokeWidth,t.un(i,b.stroke,!1,!1,l,h),i.beginPath(),b.figure===\"LineV\"){const D=Math.floor((m-o)/o);for(let F=D;F<=D+c;F++){const I=F*o+m;0<=I&&I<=f&&this.cb(F,S,A,N)&&(i.moveTo(I,0),i.lineTo(I,a))}}else if(b.figure===\"LineH\"){const D=Math.floor((g-r)/r);for(let F=D;F<=D+u;F++){const I=F*r+g;0<=I&&I<=a&&this.cb(F,S,A,N)&&(i.moveTo(0,I),i.lineTo(f,I))}}i.stroke(),i.endPath()}else if(b.fill!==null){if(t.un(i,b.fill,!0,!1,l,h),b.figure===\"BarV\"){let D=b.width;isNaN(D)&&(D=o);const F=Math.floor((m-o)/o);for(let I=F;I<=F+c;I++){const R=I*o+m;0<=R+D&&R<=f&&this.cb(I,S,A,N)&&i.fillRect(R,0,D,a)}}else if(b.figure===\"BarH\"){let D=b.height;isNaN(D)&&(D=r);const F=Math.floor((g-r)/r);for(let I=F;I<=F+u;I++){const R=I*r+g;0<=R+D&&R<=a&&this.cb(I,S,A,N)&&i.fillRect(0,R,f,D)}}}T&&i.disableDash(),C!==1&&(i.globalAlpha=P)}}cb(t,i,e,s){if(i<0)return t%i===e;if(t%i!==e)return!1;const n=s.length;for(let o=0;o<n;o++){const r=s[o];if(t%r===e)return!1}return!0}NI(t){const i=[],e=t.T.h,s=e.length;for(let n=0;n<s;n++){const o=e[n],r=[];if(i.push(r),!o.visible)continue;const l=o.interval;if(l<0)continue;const h=o.figure,f=this.qP(h);for(let a=0;a<s;a++){if(a===n)continue;const c=e[a];if(!c.visible)continue;const u=c.figure;if(this.qP(u)!==f)continue;const d=c.interval;d>l&&r.push(d)}}t.ki.ip=i}qP(t){return t===\"LineV\"||t===\"BarV\"}MI(t){let i=1,e=1;const s=t.T.h,n=s.length;for(let l=0;l<n;l++){const h=s[l],f=Math.abs(h.interval);f<2||(this.qP(h.figure)?e=e*f/Geo.EC(e,f):i=i*f/Geo.EC(i,f))}const o=t.gridCellSize,r=t.ki;r.$f.isReal()?r.$f.s(e*o.width,i*o.height):r.$f=new Size(e*o.width,i*o.height)}}PanelLayout.xn(\"Grid\",new PanelLayoutGrid);class PanelLayoutLink extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){const l=s.length;if(!(t instanceof Adornment||t instanceof Link))return;let h=null,f=null;if(t instanceof Link&&(h=t),t instanceof Adornment&&(f=t,h=f.adornedPart,t.gc===null&&(t.gc=[])),!(h instanceof Link))return;const a=h;if(l===0){t.naturalBounds.Vn(0,0),t.measuredBounds.s(0,0,0,0);return}const c=t instanceof Adornment?null:h.path,u=h.routeBounds,d=t.Ho;d.s(0,0,u.width,u.height);const m=a.points,g=h.pointsCount;f!==null?f.fd(!1):h!==null&&h.fd(!1);const p=u.width,w=u.height,x=t.gc;if(x.length=0,c!==null){this.measureLinkPath(t,p,w,c);const M=c.measuredBounds;d.unionRect(M),x.push(M)}const k=Transform.a(),b=Point.a(),S=Point.a();for(let M=0;M<l;M++){const A=s[M];if(A===c)continue;let C=A.measuredBounds;if(A.isPanelMain&&A instanceof Shape){this.measureLinkPath(t,p,w,A),C=A.measuredBounds,d.unionRect(C),x.push(C);continue}if(g<2){A.dt(1/0,1/0,0,0),C=A.measuredBounds,d.unionRect(C),x.push(C);continue}const P=A.segmentIndex,N=A.segmentFraction;let T=A.alignmentFocus;T.isNoSpot()&&(T=Spot.Center);const L=A.segmentOrientation,D=A.segmentOffset;let F=0,I=0,R=0,O=0;if(isNaN(P)){const X=a.ft,J=U.lt();X.getPointAndAngleAlongPath(N,J);const v=Point.K(J[0],J[1]);O=J[2],L!==0&&(R=a.computeAngle(A,L,O),A.jt=R,A.pe(!0),A.to(!0)),F=v.x,I=v.y,Point.o(v),U.tt(J)}else if(P<-g||P>=g){const X=Point.a();a.YL(X),O=a.midAngle,L!==0&&(R=a.computeAngle(A,L,O),A.jt=R,A.pe(!0),A.to(!0)),F=X.x-u.x,I=X.y-u.y,Point.o(X)}else{let X,J,v=0;if(P>=0?(X=m.elt(P),J=P<g-1?m.elt(P+1):X):(v=g+P,X=m.elt(v),J=v>0?m.elt(v-1):X),O=0,X.equalsApprox(J)){let _,G;P>=0?(_=P>0?m.elt(P-1):X,G=P<g-2?m.elt(P+2):J):(_=v<g-1?m.elt(v+1):X,G=v>1?m.elt(v-2):J);const E=_.distanceSquaredPoint(X),q=J.distanceSquaredPoint(G);E>q+10?O=P>=0?_.directionPoint(X):X.directionPoint(_):q>E+10?O=P>=0?J.directionPoint(G):G.directionPoint(J):O=P>=0?_.directionPoint(G):G.directionPoint(_)}else O=P>=0?X.directionPoint(J):J.directionPoint(X);L!==0&&(R=a.computeAngle(A,L,O),A.jt=R,A.pe(!0),A.to(!0)),F=X.x+(J.x-X.x)*N-u.x,I=X.y+(J.y-X.y)*N-u.y}A.dt(1/0,1/0,0,0),C=A.measuredBounds;const Y=A.naturalBounds;let K=0;A instanceof Shape&&(K=A.strokeWidth);const B=Y.width+K,z=Y.height+K;k.Vi(),k.Bs(-C.x,-C.y),k.ot(A.scale,A.scale),k.ms(L===0?A.angle:O,B/2,z/2),(L===22||L===26)&&k.ms(90,B/2,z/2),(L===23||L===27)&&k.ms(-90,B/2,z/2),L===28&&(O>45&&O<135||O>225&&O<315)&&k.ms(-O,B/2,z/2);const V=new Rect(0,0,B,z);b.setRectSpot(V,T),k.kt(b);const H=-b.x+K/2*A.scale,W=-b.y+K/2*A.scale;S.c(D);const j=isNaN(D.x),$=isNaN(D.y);if(j||$){const X=B/2+3,J=z/2+3,v=O>=45&&O<=135,_=O>=225&&O<=315;L===0&&(v||_)?(S.x=$?X:D.y,S.y=j?J:D.x,v?P>=0||isNaN(P)&&N<.5||j&&(S.y=-J):_&&((P>=0||isNaN(P)&&N<.5)&&j&&(S.y=-J),$&&(S.x=-X))):(j&&(P>=0||isNaN(P)&&N<.5?S.x=X:S.x=-X),$&&(S.y=-J),S.rotate(O))}else S.rotate(O);F+=S.x,I+=S.y,V.s(F+H,I+W,C.width,C.height),x.push(V),d.unionRect(V)}if(h!==null){const M=h.labelNodes;for(;M.next();)M.value.dt(1/0,1/0)}t.Ho=d,t.position.s(u.x+d.x,u.y+d.y),n.Vn(d.width||0,d.height||0),Transform.o(k),Point.o(b),Point.o(S)}arrange(t,i,e){const s=i.length;if(!(t instanceof Adornment||t instanceof Link))return;let n=t,o=null;t instanceof Adornment&&(o=t,n=o.adornedPart);const r=t,l=t instanceof Adornment?null:n.path,h=t.gc;if(h.length!==0){let u=0;if(l!==null&&u<h.length){const d=h[u];u++,l.Gt(d.x-r.Ho.x,d.y-r.Ho.y,d.width,d.height)}for(let d=0;d<s;d++){const m=i[d];if(m!==l&&u<h.length){const g=h[u];u++,m.Gt(g.x-r.Ho.x,g.y-r.Ho.y,g.width,g.height)}}}const f=n.points,a=f.count;if(a>=2&&r instanceof Link){const u=r.labelNodes;for(;u.next();){const d=u.value;r.AI(d,a,f)}}o!==null?o.fd(!1):n.fd(!1);const c=t.KL(Point.a());t.location.s(t.position.x+c.x,t.position.y+c.y),Point.o(c)}measureLinkPath(t,i,e,s){if(s.Eo()===!1)return;let n=s.strokeWidth;if(n===0&&t instanceof Adornment&&t.type===Panel.Link&&t.adornedObject instanceof Shape&&(n=t.adornedObject.strokeWidth),n=n*s.ot,t instanceof Link&&t.ft!==null){const o=t.geometry.bounds;s._n(o.x-n/2,o.y-n/2,o.width+n,o.height+n)}else if(t instanceof Adornment&&t.adornedPart.ft!==null){const o=t.adornedPart.ft.bounds;s._n(o.x-n/2,o.y-n/2,o.width+n,o.height+n)}else s._n(-(n/2),-(n/2),i+n,e+n);s.LI(),s.pe(!1)}}PanelLayout.xn(\"Link\",new PanelLayoutLink);class PanelLayoutGraduated extends PanelLayout{constructor(){super()}measure(t,i,e,s,n,o,r){const l=t.findMainElement();t.ve=[];const h=l.margin,f=h.right+h.left,a=h.top+h.bottom;l.dt(i,e,o,r);const c=l.measuredBounds,u=c.width,d=c.height,m=Math.max(u+f,0),g=Math.max(d+a,0),p=new Rect(-h.left,-h.top,m,g);t.ve.push(p),n.c(p),this.determineGraduatedMarks(t,l);const w=t.Ps;if(w===null)return;const x=s.length;for(let k=0;k<x;k++){const b=s[k],S=w[k];!b.visible||b===l||S.length===0||(b instanceof Shape?this.measureGraduatedTicks(t,b,S,n):b instanceof TextBlock&&this.measureGraduatedLabels(t,b,S,n),b.pe(!1))}}arrange(t,i,e){if(t.ve===null)return;const s=t.findMainElement(),n=t.Ps;if(n===null)return;const o=t.ve;let r=0,l=o[r];r++,s!==null&&s.Gt(l.x-e.x,l.y-e.y,l.width,l.height);const h=i.length;for(let f=0;f<h;f++){const a=i[f],c=n[f];!a.visible||a===s||c.length===0||(l=o[r],r++,a.Gt(l.x-e.x,l.y-e.y,l.width,l.height))}t.ve=null}measureGraduatedTicks(t,i,e,s){let n=i.alignmentFocus;n.isNoSpot()&&(n=Spot.TopCenter);const o=i.angle;i.jt=0,i.dt(1/0,1/0,0,0),i.jt=o;const r=i.measuredBounds,l=r.width,h=r.height,f=Rect.K(0,0,l,h),a=Point.a();a.setRectSpot(f,n),Rect.o(f);const c=-a.x,u=-a.y,d=new Rect,m=e.length;for(let g=0;g<m;g++){const p=e[g],w=p.pt.x,x=p.pt.y,k=p.angle;for(let b=0;b<4;b++){switch(b){case 0:a.s(c,u);break;case 1:a.s(c+l,u);break;case 2:a.s(c,u+h);break;case 3:a.s(c+l,u+h);break}a.rotate(k+i.angle),a.offset(w,x),g===0&&b===0?d.s(a.x,a.y,0,0):d.unionPoint(a),a.offset(-w,-x),a.rotate(-k-i.angle)}}Point.o(a),t.ve!==null&&t.ve.push(d),s.unionNoCheck(d.x,d.y,d.width,d.height)}measureGraduatedLabels(t,i,e,s){t.Ae===null&&(t.Ae=new TextBlock);const n=t.Ae;this.UL(i,n);let o=i.alignmentFocus;o.isNoSpot()&&(o=Spot.TopCenter);const r=i.segmentOrientation,l=i.segmentOffset,h=new Rect;let f=0,a=0,c=0,u=0,d=0;const m=e.length;for(let g=0;g<m;g++){const p=e[g];f=p.pt.x,a=p.pt.y,c=p.angle,u=i.angle,d=i.angle,r!==0&&(r===21||r===25?d=c+i.angle:d=c,u=Link.computeAngle(r,d)),n.jt=u,n.text=p.text||\"\",n.dt(1/0,1/0,0,0);const w=n.measuredBounds,x=n.naturalBounds,k=x.width,b=x.height,S=Transform.a();S.Vi(),S.Bs(-w.x,-w.y),S.ot(n.scale,n.scale),S.ms(d,k/2,b/2),(r===22||r===26)&&S.ms(90,k/2,b/2),(r===23||r===27)&&S.ms(-90,k/2,b/2),r===28&&(c>45&&c<135||c>225&&c<315)&&S.ms(-c,k/2,b/2);const M=Rect.K(0,0,k,b),A=Point.a();A.setRectSpot(M,o),S.kt(A);const C=-A.x,P=-A.y,N=Point.a();N.c(l),isNaN(N.x)&&(N.x=k/2+3),isNaN(N.y)&&(N.y=-(b/2+3)),N.rotate(c),f+=N.x+C,a+=N.y+P;const T=new Rect(f,a,w.width,w.height),L=new Rect(w.x,w.y,w.width,w.height),D=new Rect(x.x,x.y,x.width,x.height);p.labelAngle=u,p.lineCount=n.lineCount,p.lines=n.getMetrics(),p.actualBounds=T,p.measuredBounds=L,p.naturalBounds=D,g===0?h.c(T):h.unionRect(T),Point.o(N),Point.o(A),Rect.o(M),Transform.o(S)}t.ve!==null&&t.ve.push(h),s.unionNoCheck(h.x,h.y,h.width,h.height)}determineGraduatedMarks(t,i){const e=i.geometry,s=i.strokeWidth,n=e.flattenedSegments,o=e.flattenedLengths,r=e.flattenedTotalLength,l=n.length;let h=0,f=0;const a=U.lt();for(let x=0;x<l;x++){const k=n[x],b=[];h=0,f=0;const S=k.length;for(let M=0;M<S;M+=2){const A=k[M],C=k[M+1];if(M===0){h=A,f=C;continue}let P=Math.atan2(C-f,A-h)*180/Math.PI;P<0&&(P+=360),b.push(P),h=A,f=C}a.push(b)}const c=this.TI(t),u=t.T.h,d=u.length;let m=0,g=0,p=r;t.Ps=[];let w;for(let x=0;x<d;x++){const k=u[x];if(w=[],!k.visible||k===i){t.Ps.push(w);continue}const b=Math.abs(k.interval),S=t.graduatedTickUnit;if(S*b*r/t.graduatedRange<2&&k.graduatedSkip===null){t.Ps.push(w);continue}let M=o[0][0],A=0,C=0;g=r*k.graduatedStart-1e-4,p=r*k.graduatedEnd+1e-4;const P=S*b;let N=t.graduatedTickBase;if(N<t.graduatedMin){let F=(t.graduatedMin-N)/P;F=F%1===0?F:Math.floor(F+1),N+=F*P}else if(N>t.graduatedMin+P){const F=Math.floor((N-t.graduatedMin)/P);N-=F*P}const T=c[x],L=N,D=t.graduatedMax*1e-6;for(let F=1;N<=t.graduatedMax+D;F++){if(this.DI(t,N-t.graduatedTickBase,T)&&(N>t.graduatedMax&&(N=t.graduatedMax),(k.graduatedSkip===null||k instanceof TextBlock&&!k.graduatedSkip(N,k)||k instanceof Shape&&!k.graduatedSkip(N,k))&&(m=(N-t.graduatedMin)*r/t.graduatedRange,m>r&&(m=r),g<=m&&m<=p))){let I=a[A][C],R=o[A][C];for(;A<o.length;){for(;m>M&&C<o[A].length-1;)C++,I=a[A][C],R=o[A][C],M+=R;if(m<=M)break;A++,C=0,I=a[A][C],R=o[A][C],M+=R}const O=n[A],Y=O[C*2],K=O[C*2+1],B=O[C*2+2],z=O[C*2+3],V=(m-(M-R))/R,H=new Point(Y+(B-Y)*V+s/2-e.bounds.x,K+(z-K)*V+s/2-e.bounds.y);if(H.scale(i.scale,i.scale),I=this.FI(I,V,O,a[A],C),k instanceof TextBlock){let W=\"\";k.graduatedFunction!==null?(W=k.graduatedFunction(N,k),W=W!=null?W.toString():\"\"):W=(+N.toFixed(2)).toString(),W!==\"\"&&w.push({pt:H,angle:I,text:W})}else w.push({pt:H,angle:I})}N=L+F*P}t.Ps.push(w)}U.tt(a)}FI(t,i,e,s,n){if(i<.5005&&i>.4995)return t;let o=t;if(i<.5?n>0?o=s[n-1]:Geo.G(e[0],e[e.length-2])&&Geo.G(e[1],e[e.length-1])&&(o=s[s.length-1]):i>.5&&(n+1<s.length?o=s[n+1]:Geo.G(e[0],e[e.length-2])&&Geo.G(e[1],e[e.length-1])&&(o=s[0])),t!==o){let r=Math.abs(t-o);if(r>180&&(t<o?t+=360:o+=360,r=Math.abs(t-o)),i<5e-4||i>.9995)return(t+o)/2%360;if(r<10){const l=1-Math.abs(.5-i);return(t*l+o*(1-l))%360}}return t}TI(t){if(t.hs===null){const i=[],e=t.T.h,s=e.length;for(let n=0;n<s;n++){const o=e[n],r=[];if(i.push(r),!o.visible)continue;const l=o.interval;if(!(l<0))for(let h=0;h<s;h++){if(h===n)continue;const f=e[h];if(!f.visible||o.constructor!==f.constructor)continue;const a=f.interval;a>l&&r.push(a)}}t.hs=i}return t.hs}DI(t,i,e){const s=e.length;for(let n=0;n<s;n++){const o=e[n]*t.graduatedTickUnit,r=i%o,l=t.graduatedTickUnit*1e-6;if(r<l&&r>-l)return!1}return!0}Ui(t,i,e){const s=e.la;e.la=!0;const n=t.naturalBounds,o=n.width,r=n.height,l=i instanceof SVGContext;i.save(),i.beginPath(),i.rect(-1,-1,o+1,r+1),i.clip(),i.endPath();const h=t.findMainElement();h.Ui(i,e);let f=t.getDocumentScale()*e.scale;f<=0&&(f=1);const a=h.actualBounds,c=t.T.h,u=t.Ps,d=c.length;for(let m=0;m<d;m++){const g=c[m],p=u[m],w=p.length;if(!(!g.visible||g===h||p.length===0)){if(g instanceof Shape){if(t.graduatedTickUnit*g.interval*h.geometry.flattenedTotalLength/t.graduatedRange*f<2&&g.graduatedSkip===null)continue;const x=g.measuredBounds,k=g.strokeWidth*g.scale;let b=g.alignmentFocus;b.isNoSpot()&&(b=Spot.TopCenter);for(let S=0;S<w;S++){const M=p[S].pt,A=p[S].angle;this.RI(g,M,a,A,x,k,b),g.Ui(i,e),l&&(t.svg.appendChild(g.svg),g.svg=null),g._r.Vi()}}else if(g instanceof TextBlock){t.Ae===null&&(t.Ae=new TextBlock);const x=t.Ae;this.UL(g,x),x.WP=!0;for(let k=0;k<w;k++){const b=p[k];if(b.actualBounds&&b.measuredBounds&&b.naturalBounds){x.II(b);const S=b.actualBounds;x.Gt(S.x,S.y,S.width,S.height),this.OI(x,a,S,b.measuredBounds,b.naturalBounds),x.il=g.part,x.Hs=g.panel,x.Ui(i,e),x.Hs=null,x.il=null,l&&(t.svg.appendChild(x.svg),x.svg=null)}}}}}e.la=s,i.restore(),i.clearContextCache(!0)}RI(t,i,e,s,n,o,r){const l=t._r;l.Vi(),l.Bs(i.x+e.x,i.y+e.y),l.ms(s+t.angle,0,0),l.Bs(-n.width*r.x+r.offsetX+o/2,-n.height*r.y+r.offsetY+o/2),l.ot(t.scale,t.scale),t.od(!1),t.dh.set(t._r),t.ba=t.scale,t.La(!1)}OI(t,i,e,s,n){const o=t._r;o.Vi(),o.Bs(e.x+i.x,e.y+i.y),o.Bs(-s.x,-s.y),t.k0(o,n.x,n.y,n.width,n.height),t.od(!1),t.dh.set(t._r),t.ba=t.scale,t.La(!1)}UL(t,i){i.EI(t)}}PanelLayout.xn(\"Graduated\",new PanelLayoutGraduated);var ViewboxStretch=(y=>(y[y.Uniform=6]=\"Uniform\",y[y.UniformToFill=7]=\"UniformToFill\",y))(ViewboxStretch||{});class Panel extends GraphObject{$;T;ei;cd;Gn;nl;oo;Ho;jP;E;ud;ht;ki;ni;dd;Mh;vs;constructor(t,i){if(super(),this.$=null,t===void 0)this.$=Panel.Position;else if(typeof t==\"string\"){const e=PanelLayout.ls.get(t);e!==null&&(this.$=e)}else t instanceof PanelLayout?this.$=t:t&&(this.$=Panel.Position,i=t);this.$===null&&U.n(\"Panel type not specified or PanelLayout not loaded: \"+t),this.l|=4194304|(this.$===Panel.Grid?1048576:0),this.T=new List,this.ei=Margin.Xg,this.cd=Spot.Default,this.Gn=1,this.nl=null,this.oo=\"\",this.Ho=new Rect(NaN,NaN,NaN,NaN),this.jP=null,this.E=null,this.ud=6,this.ki=null,this.ht=null,this.ni=null,this.dd=NaN,this.Mh=null,this.vs=null,i&&Object.assign(this,i)}cloneProtected(t){super.cloneProtected(t),t.$=this.$,t.ei=this.ei.N(),t.cd=this.cd.N(),t.Gn=this.Gn,t.oo=this.oo,t.Ho.c(this.Ho),this.E!==null&&(t.E=this.E.copy(t)),t.ud=this.ud,this.ht!==null&&(t.ht=this.ht.copy()),this.ki!==null&&(t.ki=this.ki.copy()),t.ni=this.ni,t.dd=this.dd,t.Mh=this.Mh}Xo(t){super.Xo(t),t.T=this.T;const i=t.T.h,e=i.length;for(let s=0;s<e;s++){const n=i[s];n.Hs=t}t.nl=null}copy(){const t=super.copy();if(t!==null){const i=this.T.h,e=i.length;for(let s=0;s<e;s++){const o=i[s].copy();t.BI(o)}return t}else return null}toString(){return\"Panel(\"+this.type.name+\")#\"+GSet.gs(this)}get type(){return this.$}set type(t){const i=this.$;i!==t&&(Debug&&U.e(t,PanelLayout,\"PanelLayout\"),this.$=t,this.mc=this.$===Panel.Grid,this.u(),this.t(\"type\",i,t))}get elements(){return this.T.iterator}get naturalBounds(){return this.qi}get padding(){return this.ei}set padding(t){typeof t==\"number\"?(t<0&&U.U(t,\">= 0\",Panel,\"padding\"),t=new Margin(t)):(U.e(t,Margin,Panel,\"padding\"),t.left<0&&U.U(t.left,\">= 0\",Panel,\"padding:value.left\"),t.right<0&&U.U(t.right,\">= 0\",Panel,\"padding:value.right\"),t.top<0&&U.U(t.top,\">= 0\",Panel,\"padding:value.top\"),t.bottom<0&&U.U(t.bottom,\">= 0\",Panel,\"padding:value.bottom\"));const i=this.ei;i.equals(t)||(t=t.N(),this.ei=t,this.u(),this.t(\"padding\",i,t))}get defaultAlignment(){return this.cd}set defaultAlignment(t){const i=this.cd;i.equals(t)||(Debug&&U.e(t,Spot,Panel,\"defaultAlignment\"),t=t.N(),this.cd=t,this.u(),this.t(\"defaultAlignment\",i,t))}get defaultStretch(){return this.Gn}set defaultStretch(t){const i=this.Gn;i!==t&&(Debug&&U.j(t,Stretch,\"Stretch\"),this.Gn=t,this.u(),this.t(\"defaultStretch\",i,t))}get defaultSeparatorPadding(){return this.E!==null?this.E.ep:Margin.Xg}set defaultSeparatorPadding(t){typeof t==\"number\"?t=new Margin(t):Debug&&U.e(t,Margin,Panel,\"defaultSeparatorPadding\");const i=this.defaultSeparatorPadding;i.equals(t)||(t=t.N(),this.E===null&&(this.E=new TablePanelSettings),this.E.ep=t,this.u(),this.t(\"defaultSeparatorPadding\",i,t))}get defaultRowSeparatorStroke(){return this.E!==null?this.E.sp:null}set defaultRowSeparatorStroke(t){const i=this.defaultRowSeparatorStroke;i!==t&&(t===null||typeof t==\"string\"||t instanceof Brush)&&(t instanceof Brush&&t.p(),this.E===null&&(this.E=new TablePanelSettings),this.E.sp=t,this.L(),this.t(\"defaultRowSeparatorStroke\",i,t))}get defaultRowSeparatorStrokeWidth(){return this.E!==null?this.E.np:1}set defaultRowSeparatorStrokeWidth(t){const i=this.defaultRowSeparatorStrokeWidth;i!==t&&isFinite(t)&&t>=0&&(this.E===null&&(this.E=new TablePanelSettings),this.E.np=t,this.u(),this.t(\"defaultRowSeparatorStrokeWidth\",i,t))}get defaultRowSeparatorDashArray(){return this.E!==null?this.E.op:null}set defaultRowSeparatorDashArray(t){const i=this.defaultRowSeparatorDashArray;if(i!==t){if(t!==null&&!Array.isArray(t)&&U.Pi(t,\"Array\",Panel,\"defaultRowSeparatorDashArray:value\"),t!==null){const e=t.length;let s=0;for(let n=0;n<e;n++){const o=t[n];(typeof o!=\"number\"||!(o>=0)||!isFinite(o))&&U.n(\"defaultRowSeparatorDashArray value \"+o+\" at index \"+n+\" must be a positive number or zero.\"),s+=o}if(s===0){if(i===null)return;t=null}}this.E===null&&(this.E=new TablePanelSettings),this.E.op=t,this.L(),this.t(\"defaultRowSeparatorDashArray\",i,t)}}get defaultColumnSeparatorStroke(){return this.E!==null?this.E.rp:null}set defaultColumnSeparatorStroke(t){const i=this.defaultColumnSeparatorStroke;i!==t&&(t===null||typeof t==\"string\"||t instanceof Brush)&&(t instanceof Brush&&t.p(),this.E===null&&(this.E=new TablePanelSettings),this.E.rp=t,this.L(),this.t(\"defaultColumnSeparatorStroke\",i,t))}get defaultColumnSeparatorStrokeWidth(){return this.E!==null?this.E.lp:1}set defaultColumnSeparatorStrokeWidth(t){const i=this.defaultColumnSeparatorStrokeWidth;i!==t&&isFinite(t)&&t>=0&&(this.E===null&&(this.E=new TablePanelSettings),this.E.lp=t,this.u(),this.t(\"defaultColumnSeparatorStrokeWidth\",i,t))}get defaultColumnSeparatorDashArray(){return this.E!==null?this.E.hp:null}set defaultColumnSeparatorDashArray(t){const i=this.defaultColumnSeparatorDashArray;if(i!==t){if(t!==null&&!Array.isArray(t)&&U.Pi(t,\"Array\",Panel,\"defaultColumnSeparatorDashArray:value\"),t!==null){const e=t.length;let s=0;for(let n=0;n<e;n++){const o=t[n];(typeof o!=\"number\"||!(o>=0)||!isFinite(o))&&U.n(\"defaultColumnSeparatorDashArray value \"+o+\" at index \"+n+\" must be a positive number or zero.\"),s+=o}if(s===0){if(i===null)return;t=null}}this.E===null&&(this.E=new TablePanelSettings),this.E.hp=t,this.L(),this.t(\"defaultColumnSeparatorDashArray\",i,t)}}get Sh(){return this.E!==null?this.E.Sh:null}set Sh(t){this.E===null&&(this.E=new TablePanelSettings),this.E.Sh=t}get viewboxStretch(){return this.ud}set viewboxStretch(t){const i=this.ud;i!==t&&(Debug&&U.j(t,ViewboxStretch,\"ViewboxStretch\"),this.ud=t,this.u(),this.t(\"viewboxStretch\",i,t))}get gridCellSize(){return this.ki!==null?this.ki.gd:Size.MC}set gridCellSize(t){this.ki===null&&(this.ki=new GridPanelSettings);const i=this.ki.gd;if(!i.equals(t)){(!t.isReal()||t.width===0||t.height===0)&&U.n(\"Invalid Panel.gridCellSize: \"+t),this.ki.gd=t.N();const e=this.diagram;e!==null&&this===e.grid&&e.lh(),this.L(),this.t(\"gridCellSize\",i,t)}}get gridOrigin(){return this.ki!==null?this.ki.md:Point.No}set gridOrigin(t){this.ki===null&&(this.ki=new GridPanelSettings);const i=this.ki.md;if(!i.equals(t)){t.isReal()||U.n(\"Invalid Panel.gridOrigin: \"+t),this.ki.md=t.N();const e=this.diagram;e!==null&&this===e.grid&&e.lh(),this.L(),this.t(\"gridOrigin\",i,t)}}get graduatedMin(){return this.ht!==null?this.ht.ap:0}set graduatedMin(t){const i=this.graduatedMin;if(i!==t&&(Debug&&U.r(t,Panel,\"graduatedMin\"),this.ht===null&&(this.ht=new GradPanelSettings),this.ht.ap=t,this.u(),this.t(\"graduatedMin\",i,t),this.ic())){const e=this.part;e!==null&&this.Aa(e,\"graduatedRange\")}}get graduatedMax(){return this.ht!==null?this.ht.fp:100}set graduatedMax(t){const i=this.graduatedMax;if(i!==t&&(Debug&&U.r(t,Panel,\"graduatedMax\"),this.ht===null&&(this.ht=new GradPanelSettings),this.ht.fp=t,this.u(),this.t(\"graduatedMax\",i,t),this.ic())){const e=this.part;e!==null&&this.Aa(e,\"graduatedRange\")}}get graduatedRange(){return this.graduatedMax-this.graduatedMin}get graduatedTickUnit(){return this.ht!==null?this.ht.cp:10}set graduatedTickUnit(t){const i=this.graduatedTickUnit;i!==t&&t>0&&(Debug&&U.r(t,Panel,\"graduatedTickUnit\"),this.ht===null&&(this.ht=new GradPanelSettings),this.ht.cp=t,this.u(),this.t(\"graduatedTickUnit\",i,t))}get graduatedTickBase(){return this.ht!==null?this.ht.dp:0}set graduatedTickBase(t){const i=this.graduatedTickBase;i!==t&&(Debug&&U.r(t,Panel,\"graduatedTickBase\"),this.ht===null&&(this.ht=new GradPanelSettings),this.ht.dp=t,this.u(),this.t(\"graduatedTickBase\",i,t))}get Ps(){return this.ht!==null?this.ht.Ps:null}set Ps(t){this.ht!==null?this.ht.Ps=t:t!==null&&(this.ht=new GradPanelSettings,this.ht.Ps=t)}get ve(){return this.ht!==null?this.ht.ve:null}set ve(t){this.ht!==null?this.ht.ve=t:t!==null&&(this.ht=new GradPanelSettings,this.ht.ve=t)}get hs(){return this.ht!==null?this.ht.hs:null}set hs(t){this.ht!==null?this.ht.hs=t:t!==null&&(this.ht=new GradPanelSettings,this.ht.hs=t)}get Ae(){return this.ht!==null?this.ht.Ae:null}set Ae(t){this.ht!==null?this.ht.Ae=t:t!==null&&(this.ht=new GradPanelSettings,this.ht.Ae=t)}N0(t){super.N0(t);const i=this.T.h,e=i.length;for(let s=0;s<e;s++)i[s].N0(t)}xh(t,i){if(this.$===Panel.Grid){t.commitTransform(),this.$.Ui(this,t,i);return}if(this.$===Panel.Graduated){t.commitTransform(),this.$.Ui(this,t,i);return}if(this.$===Panel.Table)if(t.commitTransform(),t instanceof SVGContext){const r=t.currentElement;t.currentElement=t.newGroup2(\"gojs-ts\"),this.vP(t,i),t.endGroup(),t.currentElement=r}else this.vP(t,i);const e=this.isClipping&&this.$===Panel.Spot;e&&t.save();const s=this.findMainElement(),n=this.T.h,o=n.length;for(let r=0;r<o;r++){const l=n[r];e&&l===s&&(t.clipInsteadOfFill=!0),l.Ui(t,i),e&&l===s&&(t.clipInsteadOfFill=!1)}e&&(t.restore(),t.clearContextCache(!0))}vP(t,i){t.lineCap=\"butt\";const e=this.rowCount>0?this.We:null,s=this.columnCount>0?this.je:null;e!==null&&this.ub(t,i,!0,e,!0),s!==null&&this.ub(t,i,!1,s,!0),e!==null&&this.GL(t,!0,e),s!==null&&this.GL(t,!1,s),e!==null&&this.ub(t,i,!0,e,!1),s!==null&&this.ub(t,i,!1,s,!1)}GL(t,i,e){const s=e.length,n=this.actualBounds,o=this.naturalBounds;let r=!0;for(let l=0;l<s;l++){const h=e[l];if(h===void 0||h.actual===0)continue;if(r){r=!1;continue}if(i){if(h.position>o.height)continue}else if(h.position>o.width)continue;let f=h.separatorStrokeWidth;isNaN(f)&&(f=i?this.defaultRowSeparatorStrokeWidth:this.defaultColumnSeparatorStrokeWidth);let a=h.separatorStroke;if(a===null&&(a=i?this.defaultRowSeparatorStroke:this.defaultColumnSeparatorStroke),f===0||a===null)continue;this.un(t,a,!1,!1,o,n);let c=!1,u=h.separatorDashArray;u===null&&(u=i?this.defaultRowSeparatorDashArray:this.defaultColumnSeparatorDashArray),u!==null&&(c=!0,t.enableDash(u,0)),t.beginPath();const d=h.position+f;i?d>o.height&&(f-=d-o.height):d>o.width&&(f-=d-o.width);let m=h.position+f/2;t.lineWidth=f;const g=this.ei;if(i){m+=g.top;const p=g.left,w=o.width-g.right;t.moveTo(p,m),t.lineTo(w,m)}else{m+=g.left;const p=g.top,w=o.height-g.bottom;t.moveTo(m,p),t.lineTo(m,w)}t.stroke(),t.endPath(),c&&t.disableDash()}}ub(t,i,e,s,n){const o=s.length,r=this.actualBounds,l=this.naturalBounds,h=this.HL(!0),f=this.HL(!1);for(let a=0;a<o;a++){const c=s[a];if(c===void 0||c.background===null||c.coversSeparators===n||c.actual===0)continue;const u=e?r.height:r.width;if(c.position>u)continue;let d=c.computeEffectiveSpacing(),m=c.separatorStrokeWidth;isNaN(m)&&(m=e?this.defaultRowSeparatorStrokeWidth:this.defaultColumnSeparatorStrokeWidth);let g=c.separatorStroke;g===null&&(g=e?this.defaultRowSeparatorStroke:this.defaultColumnSeparatorStroke),(g===null||c.index===(e?h:f))&&(m=0),d-=m;const p=c.position+m;let w=d+c.actual;if(p+w>u&&(w=u-p),w<=0)continue;const x=this.ei;this.un(t,c.background,!0,!1,l,r),e?t.fillRect(x.left,p+x.top,r.width-(x.left+x.right),w):t.fillRect(p+x.left,x.top,w,r.height-(x.top+x.bottom))}}HL(t){const i=t?this.rowCount:this.columnCount;for(let e=0;e<i;e++){const s=t?this.We[e]:this.je[e];if(s!==void 0)return s.index}return 0}oc(){const t=this.T.h,i=t.length;for(let e=0;e<i;e++)t[e].oc();this.He(!0)}nc(t,i,e){const s=this.svg;if(s===null)return!1;if(this.type===Panel.Table){const r=s.getElementsByClassName(\"gojs-ts\"),l=r.length!==0?r[0]:null;l!==null&&(l.innerHTML=\"\"),t.currentElement=l,this.vP(t,i),t.currentElement=null}else{if(this.$===Panel.Grid)return s.innerHTML=\"\",s.remove(),!1;if(this.$===Panel.Graduated)return s.innerHTML=\"\",s.remove(),!1;if(this.$===Panel.Spot&&this.isClipping)return s.innerHTML=\"\",s.remove(),this.gh=null,this.oc(),!1}if(!super.nc(t,i,e))return!1;const n=this.T.h,o=n.length;for(let r=0;r<o;r++)n[r].Ui(t,i);return!0}nd(t){return!0}A0(t,i,e,s){if(!this.isClipping){if(this.Ws()&&t.partClipRect!==null){const n=t.partClipRect,o=this.T.h;let r=0,l=0;for(let h=0;h<o.length;h++){if(!o[h].isVisibleObject())continue;const f=o[h].actualBounds;r=h===0?f.x:Math.min(f.x,r),l=h===0?f.y:Math.min(f.y,l)}s.setAttributeNS(null,\"clip-path\",`path('M ${n.x-e.x-r},${n.y-e.y-l} l ${n.width} 0 l 0 ${n.height} l -${n.width} 0 z')`);return}super.A0(t,i,e,s)}}ec(t,i,e,s,n){const o=this.mn(),r=this.F,l=1/(r.m11*r.m22-r.m12*r.m21);let h=r.m22*l,f=-r.m12*l,a=-r.m21*l,c=r.m11*l,u=l*(r.m21*r.dy-r.m22*r.dx),d=l*(r.m12*r.dx-r.m11*r.dy);if(this.background!==null){const m=t*h+i*a+u,g=t*f+i*c+d,p=e*h+s*a+u,w=e*f+s*c+d;n.s(0,0);const x=this.naturalBounds,k=Geo.bl(0,0,x.width,x.height,m,g,p,w,n);return n.F(r),k}else{o||(h=1,f=0,a=0,c=1,u=0,d=0);const m=t*h+i*a+u,g=t*f+i*c+d,p=e*h+s*a+u,w=e*f+s*c+d;n.s(p,w);let x=(p-m)**2+(w-g)**2,k=!1;const b=this.T.h,S=b.length,M=Point.a();let A=null,C=1/0,P=null;const N=this.isClipping&&this.$===Panel.Spot;N&&(P=Point.a(),A=this.findMainElement(),k=A.ec(m,g,p,w,P),k&&(C=(m-P.x)**2+(g-P.y)**2));for(let T=0;T<S;T++){const L=b[T];if(!L.visible||L===A||!L.ec(m,g,p,w,M))continue;k=!0;const D=(m-M.x)**2+(g-M.y)**2;D<x&&(x=D,n.set(M))}return N&&(C>x&&n.set(P),Point.o(P)),Point.o(M),o&&n.F(r),k}}Eu(){const t=this.T.h,i=t.length;for(let e=0;e<i;e++)t[e].Eu();super.Eu()}u(t){if(this.Eo())return;super.u(t);let i=null;(this.$===Panel.Auto||this.$===Panel.Link)&&(i=this.findMainElement());const e=this.T.h,s=e.length;for(let n=0;n<s;n++){const o=e[n];if((o===i||o.isPanelMain)&&o.u(!0),o.desiredSize.isReal())continue;const r=o.qs(!1);!(o instanceof Placeholder)&&!(o instanceof Panel)&&!(o instanceof TextBlock)&&r===0||o.u(!0)}}lc(){if(this.Eo())return;this.pe(!0),this.to(!0);const t=this.T.h,i=t.length;for(let e=0;e<i;e++)t[e].lc()}sc(){if(this.eb()===!1){this.od(!0),this.La(!0);const t=this.T.h,i=t.length;for(let e=0;e<i;e++)t[e].TP()}}TP(){this.La(!0);const t=this.T.h,i=t.length;for(let e=0;e<i;e++)t[e].TP()}ed(t,i,e,s){const n=this.Ho;n.s(0,0,0,0);const o=this.desiredSize,r=this.minSize;e===void 0&&(e=r.width,s=r.height),e=Math.max(e,r.width),s=Math.max(s,r.height);const l=this.maxSize;isNaN(o.width)||(t=Math.min(o.width,l.width)),isNaN(o.height)||(i=Math.min(o.height,l.height)),t=Math.max(e,t),i=Math.max(s,i);const h=this.ei;t=Math.max(t-h.left-h.right,0),i=Math.max(i-h.top-h.bottom,0);const f=this.T.h;this.$.measure(this,t,i,f,n,e,s);let a=n.width+h.left+h.right,c=n.height+h.top+h.bottom;isFinite(o.width)&&(a=o.width),isFinite(o.height)&&(c=o.height),a=Math.min(l.width,a),c=Math.min(l.height,c),a=Math.max(r.width,a),c=Math.max(r.height,c),a=Math.max(e,a),c=Math.max(s,c),n.Vn(a,c),this.naturalBounds.Vn(a,c),this._n(0,0,a,c)}findMainElement(){if(this.nl===null){const t=this.T.h,i=t.length;if(i===0)return null;for(let e=0;e<i;e++){const s=t[e];if(s.isPanelMain===!0)return this.nl=s,s}this.nl=t[0]}return this.nl}Go(){return this.part!==null?this.part.locationObject:null}get panelLayoutState(){return this.jP}set panelLayoutState(t){this.jP=t}yh(t,i,e,s){const n=this.T.h;if(this.actualBounds.s(t,i,e,s),!this.desiredSize.isReal()){let o=this.qs(!0);const r=this.measuredBounds,l=r.width,h=r.height,f=this.tl,a=f.left+f.right,c=f.top+f.bottom;switch(l===e&&h===s&&(o=0),o){case 0:(l>e||h>s)&&(this.u(),this.dt(l>e?e:l,h>s?s:h,0,0));break;case 2:this.u(!0),this.dt(e+a,s+c,0,0);break;case 5:this.u(!0),this.dt(e+a,h+c,0,0);break;case 4:this.u(!0),this.dt(l+a,s+c,0,0);break}}this.$.arrange(this,n,this.Ho)}ph(t){const i=this.naturalBounds,e=this.Go();if(Rect.contains(0,0,i.width,i.height,t.x,t.y)){const s=this.T.h,n=s.length,o=Point.K(0,0);for(let r=n;r--;){const l=s[r];if(!(!l.visible&&l!==e)&&(o.set(t).Xe(l.F),l.containsPoint(o)))return Point.o(o),!0}return Point.o(o),this.Rt!==null}return!1}b0(t){if(this.Zn===t)return this;const i=this.T.h,e=i.length;for(let s=0;s<e;s++){const o=i[s].b0(t);if(o!==null)return o}return null}walkVisualTreeFrom(t,i){if(i(this,t),t instanceof Panel){const e=t.T.h,s=e.length;for(let n=0;n<s;n++)this.walkVisualTreeFrom(e[n],i)}}Jr(t){this.qL(this,t)}qL(t,i){i(t);const e=t.T.h,s=e.length;for(let n=0;n<s;n++){const o=e[n];o instanceof Panel&&this.qL(o,i)}}VI(t){this.WL(this,t)}WL(t,i){if(i(t),t instanceof Panel){const e=t.T.h,s=e.length;for(let n=0;n<s;n++)this.WL(e[n],i)}}findInVisualTree(t){return this.jL(this,t)}jL(t,i){if(i(t))return t;if(t instanceof Panel){const e=t.T.h,s=e.length;for(let n=0;n<s;n++){const o=this.jL(e[n],i);if(o!==null)return o}}return null}findObject(t){if(this.name===t)return this;const i=this.T.h;let e=i.length;this.zI()&&(e=this.gp());for(let s=0;s<e;s++){const n=i[s];if(n instanceof Panel){const o=n.findObject(t);if(o!==null)return o}if(n.name===t)return n}return null}vL(){const t=this.T.h,i=t.length;let e=0;for(let s=0;s<i;s++){const n=t[s];n instanceof Panel?e=Math.max(e,n.vL()):n instanceof Shape&&(e=Math.max(e,n.XI()))}return e}mn(){return!(this.type===Panel.TableRow||this.type===Panel.TableColumn)}el(){return this.type===Panel.TableRow||this.type===Panel.TableColumn}NA(t,i,e){if(this.pickable===!1||(i===void 0&&(i=null),e===void 0&&(e=null),this.ns()))return null;const s=this.naturalBounds,n=1/this.getDocumentScale(),o=this.mn(),r=o?t:Point.K(t.x,t.y).Xe(this.F),l=this.diagram;let h=10,f=5;if(l!==null&&(h=l.getInputOption(\"extraTouchArea\"),f=h/2),Rect.contains(-(f*n),-(f*n),s.width+h*n,s.height+h*n,r.x,r.y)){if(!this.mc){const c=this.T.h,u=c.length,d=Point.a(),m=this.isClipping&&this.$===Panel.Spot,g=m?this.findMainElement():null;if(m&&(g.mn()?d.set(t).Xe(g.F):d.set(t),!g.containsPoint(d)))return Point.o(d),o||Point.o(r),null;const p=this.Go();for(let w=u;w--;){const x=c[w];if(!x.visible&&x!==p||(x.mn()?d.set(t).Xe(x.F):d.set(t),m&&x===g))continue;let k=null;if(x instanceof Panel?k=x.NA(d,i,e):x.pickable===!0&&x.containsPoint(d)&&(k=x),k!==null&&(i!==null&&(k=i(k)),k!==null&&(e===null||e(k))))return Point.o(d),o||Point.o(r),k}Point.o(d)}if(this.background===null)return o||Point.o(r),null;const a=Rect.contains(0,0,s.width,s.height,r.x,r.y)?this:null;return o||Point.o(r),a}return o||Point.o(r),null}CA(t,i,e,s){if(this.pickable===!1)return!1;i===void 0&&(i=null),e===void 0&&(e=null);const n=this.naturalBounds,o=this.mn(),r=o?t:Point.K(t.x,t.y).Xe(this.F),l=this.el(),h=Rect.contains(0,0,n.width,n.height,r.x,r.y);if(l||h){if(!this.mc){const f=this.T.h,a=f.length,c=Point.a(),u=this.Go();for(let d=a;d--;){const m=f[d];if(!m.visible&&m!==u)continue;m.mn()?c.set(t).Xe(m.F):c.set(t);let g=m;const p=m instanceof Panel?m:null;if(p!==null?p.CA(c,i,e,s):g.containsPoint(c)){if(g.pickable===!1)continue;i!==null&&(g=i(g)),g!==null&&(e===null||e(g))&&s.add(g)}}Point.o(c)}return o||Point.o(r),h&&this.background!==null}return o||Point.o(r),!1}Em(t,i,e,s,n,o){if(this.pickable===!1)return!1;i===void 0&&(i=null),e===void 0&&(e=null);let r=o;if(r===void 0&&(r=Transform.a(),r.Vi()),r.uf(this.F),this.containedInRect(t,r))return this.JP(i,e,n),o===void 0&&Transform.o(r),!0;if(this.intersectsRect(t,r)){if(!this.mc){const l=this.Go(),h=this.T.h,f=h.length;for(let a=f;a--;){const c=h[a];if(!c.visible&&c!==l)continue;const u=c.actualBounds,d=this.naturalBounds;if(u.x>d.width||u.y>d.height||u.x+u.width<0||u.y+u.height<0)continue;let m=c;const g=c instanceof Panel?c:null,p=Transform.a();p.set(r),(g!==null?g.Em(t,i,e,s,n,p):m.PL(t,s,p))&&(i!==null&&(m=i(m)),m!==null&&(e===null||e(m))&&n.add(m)),Transform.o(p)}}return o===void 0&&Transform.o(r),s}return o===void 0&&Transform.o(r),!1}JP(t,i,e){const s=this.T.h,n=s.length;for(let o=n;o--;){const r=s[o];if(!r.visible)continue;const l=r.actualBounds,h=this.naturalBounds;if(l.x>h.width||l.y>h.height||l.x+l.width<0||l.y+l.height<0)continue;r instanceof Panel&&r.JP(t,i,e);let f=r;t!==null&&(f=t(f)),f!==null&&(i===null||i(f))&&e.add(f)}}AA(t,i,e,s,n,o){if(this.pickable===!1)return!1;e===void 0&&(e=null),s===void 0&&(s=null);const r=this.naturalBounds,l=this.mn(),h=l?t:Point.K(t.x,t.y).Xe(this.F),f=l?i:Point.K(i.x,i.y).Xe(this.F),a=h.distanceSquaredPoint(f),c=h.x>0&&h.x<r.width&&h.y>0&&h.y<r.height||Point.distanceLineSegmentSquared(h.x,h.y,0,0,0,r.height)<=a||Point.distanceLineSegmentSquared(h.x,h.y,0,r.height,r.width,r.height)<=a||Point.distanceLineSegmentSquared(h.x,h.y,r.width,r.height,r.width,0)<=a||Point.distanceLineSegmentSquared(h.x,h.y,r.width,0,0,0)<=a,u=h.distanceSquared(0,0)<=a&&h.distanceSquared(0,r.height)<=a&&h.distanceSquared(r.width,0)<=a&&h.distanceSquared(r.width,r.height)<=a;if(l||(Point.o(h),Point.o(f)),c){if(!this.mc){const d=Point.a(),m=Point.a(),g=this.Go(),p=this.T.h,w=p.length;for(let x=w;x--;){const k=p[x];if(!k.visible&&k!==g)continue;const b=k.actualBounds,S=this.naturalBounds;if(l&&(b.x>S.width||b.y>S.height||b.x+b.width<0||b.y+b.height<0))continue;if(k.mn()){const C=k.F;d.set(t).Xe(C),m.set(i).Xe(C)}else d.set(t),m.set(i);let M=k;const A=k instanceof Panel?k:null;(A!==null?A.AA(d,m,e,s,n,o):M.NL(d,m,n))&&(e!==null&&(M=e(M)),M!==null&&(s===null||s(M))&&o.add(M))}Point.o(d),Point.o(m)}return n?c:u}return!1}GP(t){let i=null;if(t instanceof Shape){i=t.spot1,i===Spot.Default&&(i=null);const e=t.geometry;e!==null&&i===null&&(i=e.spot1)}return i===null&&(i=Spot.TopLeft),i}HP(t){let i=null;if(t instanceof Shape){i=t.spot2,i===Spot.Default&&(i=null);const e=t.geometry;e!==null&&i===null&&(i=e.spot2)}return i===null&&(i=Spot.BottomRight),i}add(...t){for(let i=0;i<t.length;i++)this.insertAt(this.T.count,t[i]);return this}elt(t){return this.T.elt(t)}insertAt(t,i){Debug&&U.e(i,GraphObject,Panel,\"insertAt\"),i instanceof Part&&U.n(\"Cannot add a Part to a Panel: \"+i+\"; use a Panel instead\"),(this===i||this.isContainedBy(i))&&(this===i&&U.n(\"Cannot make a Panel contain itself: \"+this.toString()),U.n(\"Cannot make a Panel indirectly contain itself: \"+this.toString()+\" already contains \"+i.toString()));const e=i.panel;if(e!==null&&e!==this&&U.n(\"Cannot add a GraphObject that already belongs to another Panel to this Panel: \"+i.toString()+\", already contained by \"+e.toString()+\", cannot be shared by this Panel: \"+this.toString()),this.$===Panel.Grid&&!(i instanceof Shape)&&U.n(\"Can only add Shapes to a Grid Panel, not: \"+i),this.$===Panel.Graduated&&!(i instanceof Shape||i instanceof TextBlock)&&U.n(\"Can only add Shapes or TextBlocks to a Graduated Panel, not: \"+i),i.Ta(this),i.il=null,this.itemArray!==null){const r=i.data;U.W(r)&&(this.vs===null&&(this.vs=new GMap),this.vs.set(r,i))}const s=this.T;let n=-1;if(e===this){let r=-1;const l=this.T.h,h=l.length;for(let f=0;f<h;f++)if(l[f]===i){r=f;break}if(r!==-1){if(r===t||r+1>=s.count&&t>=s.count)return;s.removeAt(r),n=r}else U.n(\"element \"+i.toString()+\" has panel \"+e.toString()+\" but is not contained by it.\")}(t<0||t>s.count)&&(t=s.count),s.insertAt(t,i),(t===0||i.isPanelMain)&&(this.nl=null),this.Eo()||this.u(),i.u(!1),i.portId!==null?this.yn=!0:i instanceof Panel&&i.yn===!0&&(this.yn=!0),this.hs=null,this.isEnabledObject()||this.db(i,!1);const o=this.part;if(o!==null){o.O0(),o.pc(),this.yn&&o instanceof Node&&(o.yn=!0),o.yn&&o instanceof Node&&(o.he=null);const r=this.diagram;if(r!==null&&r.undoManager.isUndoingRedoing)return;n!==-1&&o.raiseChangedEvent(4,\"elements\",this,i,null,n,null),o.raiseChangedEvent(3,\"elements\",this,null,i,null,t)}}get yn(){return(this.l&8388608)!==0}set yn(t){(this.l&8388608)!==0!==t&&(this.l=this.l^8388608)}NP(){return(this.l&16777216)!==0}$P(t){t?this.l|=16777216:this.l&=-16777217}BI(t){t.Ta(this),t.il=null;const i=this.T,e=i.count;i.insertAt(e,t);const s=this.part;if(s!==null){s.O0(),t.portId!==null&&s instanceof Node&&(s.yn=!0);const n=this.diagram;if(n!==null&&n.undoManager.isUndoingRedoing)return;s.raiseChangedEvent(3,\"elements\",this,null,t,null,e)}}sI(t){const i=this.T.h,e=i.length;let s=-1;for(let n=0;n<e;n++)if(i[n]===t){s=n;break}return s}remove(t){Debug&&U.e(t,GraphObject,Panel,\"remove:element\");const i=this.T.h,e=i.length;let s=-1;for(let n=0;n<e;n++)if(i[n]===t){s=n;break}s!==-1&&this.ne(s,!0)}removeAt(t){Debug&&U.r(t,Panel,\"removeAt:idx\"),t>=0&&this.ne(t,!0)}ne(t,i){const e=this.T,s=e.elt(t);if(s.il=null,s.Ta(null),this.vs!==null){const o=s.data;U.W(o)&&this.vs.delete(o)}e.removeAt(t),this.pe(!1),this.u(),this.nl===s&&(this.nl=null),this.hs=null;const n=this.part;if(n!==null){n.O0(),n.pc(),n.invalidateAdornments(),n instanceof Node&&(s instanceof Panel?s.walkVisualTreeFrom(s,(r,l)=>n.IP(l,i)):n.IP(s,i));const o=this.diagram;if(o!==null&&o.undoManager.isUndoingRedoing)return;n.raiseChangedEvent(4,\"elements\",this,s,null,t,null)}}get We(){return this.E===null&&(this.E=new TablePanelSettings),this.E.We}get rowCount(){return this.E===null?0:this.We.length}getRowDefinition(t){Debug&&U.r(t,Panel,\"getRowDefinition:idx\"),t<0&&U.U(t,\">= 0\",Panel,\"getRowDefinition:idx\"),t=Math.round(t);const i=this.We;if(i[t]===void 0){const e=new RowColumnDefinition;e.Ta(this),e.isRow=!0,e.index=t,i[t]=e,this.raiseChangedEvent(3,\"rowdefs\",this,null,e,null,t)}return i[t]}removeRowDefinition(t){if(Debug&&U.r(t,Panel,\"removeRowDefinition:idx\"),t<0&&U.U(t,\">= 0\",Panel,\"removeRowDefinition:idx\"),this.rowCount===0)return;t=Math.round(t);const i=this.We,e=i[t];if(e){i[t]=void 0;let s=i.length-1;for(;s>=0&&i[s--]===void 0;)i.length--;this.raiseChangedEvent(4,\"rowdefs\",this,e,null,t,null),this.u()}}iL(t,i){const e=this.We;if(!(t<0)){if(e[t]=i instanceof RowColumnDefinition?i:void 0,!i){let s=e.length-1;for(;s>=0&&e[s--]===void 0;)e.length--}this.u()}}get je(){return this.E===null&&(this.E=new TablePanelSettings),this.E.je}get columnCount(){return this.E===null?0:this.je.length}getColumnDefinition(t){Debug&&U.r(t,Panel,\"getColumnDefinition:idx\"),t<0&&U.U(t,\">= 0\",Panel,\"getColumnDefinition:idx\"),t=Math.round(t);const i=this.je;if(i[t]===void 0){const e=new RowColumnDefinition;e.Ta(this),e.isRow=!1,e.index=t,i[t]=e,this.raiseChangedEvent(3,\"coldefs\",this,null,e,null,t)}return i[t]}removeColumnDefinition(t){if(Debug&&U.r(t,Panel,\"removeColumnDefinition:idx\"),t<0&&U.U(t,\">= 0\",Panel,\"removeColumnDefinition:idx\"),this.columnCount===0)return;t=Math.round(t);const i=this.je,e=i[t];if(e){i[t]=void 0;let s=i.length-1;for(;s>=0&&i[s--]===void 0;)i.length--;this.raiseChangedEvent(4,\"coldefs\",this,e,null,t,null),this.u()}}eL(t,i){const e=this.je;if(!(t<0)){if(e[t]=i instanceof RowColumnDefinition?i:void 0,!i){let s=e.length-1;for(;s>=0&&e[s--]===void 0;)e.length--}this.u()}}addRowColumnDefinition(t){let i=null;return t.isRow?i=this.getRowDefinition(t.index):t.isRow||(i=this.getColumnDefinition(t.index)),i&&i.nb(t),this}addRowDefinition(t,i){const e=this.getRowDefinition(t);return e&&e.nb(new RowColumnDefinition(i)),this}addColumnDefinition(t,i){const e=this.getColumnDefinition(t);return e&&e.nb(new RowColumnDefinition(i)),this}get rowSizing(){return this.E!==null?this.E.mp:3}set rowSizing(t){const i=this.rowSizing;i!==t&&(Debug&&t!==3&&t!==2&&U.n(\"Panel.rowSizing must be ProportionalExtra or None, not: \"+t),this.E===null&&(this.E=new TablePanelSettings),this.E.mp=t,this.u(),this.t(\"rowSizing\",i,t))}get columnSizing(){return this.E!==null?this.E.pp:3}set columnSizing(t){const i=this.columnSizing;i!==t&&(Debug&&t!==3&&t!==2&&U.n(\"Panel.columnSizing must be ProportionalExtra or None, not: \"+t),this.E===null&&(this.E=new TablePanelSettings),this.E.pp=t,this.u(),this.t(\"columnSizing\",i,t))}get topIndex(){return this.E!==null?this.E.yp:0}set topIndex(t){const i=this.topIndex;i!==t&&((!isFinite(t)||t<0)&&U.n(\"Panel.topIndex must be greater than zero and a real number, not: \"+t),this.E===null&&(this.E=new TablePanelSettings),this.E.yp=t,this.u(),this.t(\"topIndex\",i,t))}get leftIndex(){return this.E!==null?this.E.wp:0}set leftIndex(t){const i=this.leftIndex;i!==t&&((!isFinite(t)||t<0)&&U.n(\"Panel.leftIndex must be greater than zero and a real number, not: \"+t),this.E===null&&(this.E=new TablePanelSettings),this.E.wp=t,this.u(),this.t(\"leftIndex\",i,t))}findRowForLocalY(t){if(t<0||this.type!==Panel.Table||this.rowCount===0)return-1;let i=0;const e=this.We,s=e.length;let n=this.topIndex;for(;n<s;n++){const o=e[n];if(o!==void 0&&(i+=o.total,t<i))return n}return n}findColumnForLocalX(t){if(t<0||this.type!==Panel.Table||this.columnCount===0)return-1;let i=0;const e=this.je,s=e.length;let n=this.leftIndex;for(;n<s;n++){const o=e[n];if(o!==void 0&&(i+=o.total,t<i))return n}return n}graduatedPointForValue(t,i){if(i===void 0&&(i=new Point(NaN,NaN)),this.type!==Panel.Graduated)return i.s(NaN,NaN),i;t=Math.min(Math.max(t,this.graduatedMin),this.graduatedMax);const e=this.findMainElement();return e.geometry.getPointAlongPath((t-this.graduatedMin)/this.graduatedRange,i),e.F.kt(i)}graduatedValueForPoint(t){if(this.type!==Panel.Graduated)return NaN;const i=this.findMainElement();return i.F.is(t),i.geometry.getFractionForPoint(t)*this.graduatedRange+this.graduatedMin}get data(){return this.ni}set data(t){const i=this.ni;if(i!==t){const e=this instanceof Part&&!(this instanceof Adornment);e&&U.i(t,\"object\",Panel,\"data\"),this.Kt(),this.ni=t;const s=this.diagram;if(s!==null)if(e)s.partManager.YI(this,i,t);else{const n=this.panel;n!==null&&n.vs!==null&&(i!==null&&n.vs.delete(i),t!==null&&n.vs.set(t,this))}if(this.t(\"data\",i,t),s!==null&&s.undoManager.isUndoingRedoing)return;t!==null&&this.updateTargetBindings()}}get itemIndex(){return this.dd}set itemIndex(t){const i=this.dd;i!==t&&(Debug&&U.i(t,\"number\",Panel,\"itemIndex\"),this.dd=t,this.t(\"itemIndex\",i,t))}get js(){return this.b!==null?this.b.js:null}set js(t){this.Fi!==t&&(this.b===null&&(this.b=new GraphObjectTemplateSettings),this.b.js=t)}OP(){return this.js!==null}OL(){const t=this.js;return t!==null&&t.f}freezeBindings(){return this.Kt()}Kt(){let t=this.js;if(t===null)this.data!==null&&U.n(\"Template cannot have .data be non-null: \"+this),this.js=t=new List;else if(t.f)return this;const i=new List;this.$P(!1),this.walkVisualTreeFrom(this,(n,o)=>{o.mh();const r=o.Fi;if(r!==null){o.DP(!1);const l=r.iterator;for(;l.next();){const h=l.value;h.mode===2&&o.DP(!0);const f=h.sourceName;if(h.isToObject){f===\"/\"&&n.$P(!0);const a=h.ML(n,o);a!==null&&(i.add(a),a.Qn===null&&(a.Qn=new List),a.Qn.add(h))}t.add(h)}}if(o instanceof Panel&&o.type===Panel.Table){if(o.rowCount>0){const l=o.We,h=l.length;for(let f=0;f<h;f++){const a=l[f];if(a!==void 0&&a.Ns!==null){const c=a.Ns.iterator;for(;c.next();){const u=c.value;u.Ne=a,u.pd=2,u.yc=a.index,t.add(u)}}}}if(o.columnCount>0){const l=o.je,h=l.length;for(let f=0;f<h;f++){const a=l[f];if(a!==void 0&&a.Ns!==null){const c=a.Ns.iterator;for(;c.next();){const u=c.value;u.Ne=a,u.pd=1,u.yc=a.index,t.add(u)}}}}}});const e=i.iterator;for(;e.next();){const n=e.value;if(n.Qn!==null){n.DP(!0);const o=n.Qn.iterator;for(;o.next();){const r=o.value;n.Fi===null&&(n.Fi=new List),n.Fi.add(r)}}n.Qn=null}let s=t.iterator;for(;s.next();){const n=s.value;let o=n.Ne;if(o!==null){n.Ne=null;const r=n.targetProperty,l=r.indexOf(\".\");if(l>0&&o instanceof Panel){const h=r.substring(0,l),f=r.substring(l+1),a=o.findObject(h);a!==null?(o=a,n.targetProperty=f):(U.nt('Warning: unable to find GraphObject named \"'+h+'\" for Binding: '+n.toString()),o=null)}if(o instanceof RowColumnDefinition){const h=GSet.gs(o.panel);n.targetId=h===void 0?-1:h,o.panel.Zn=n.targetId}else if(o instanceof GraphObject){const h=GSet.gs(o);n.targetId=h===void 0?-1:h,o.Zn=n.targetId}else U.n(\"Unknown type of binding target: \"+o);n.check(o)}}return t.p(),this instanceof Part&&(this.Ce()&&this.ensureBounds(),Debug&&!Panel.JL&&this.walkVisualTreeFrom(this,(n,o)=>{if(o instanceof Panel&&(o.type===Panel.Auto||o.type===Panel.Spot||o.type===Panel.Graduated)&&o.elements.count<=1&&!(o instanceof Part)){let r=!1;if(o.elements.count===1&&(r=o.itemArray!==null,!r)){for(s=t.iterator;s.next();)if(s.value.targetProperty===\"itemArray\"){r=!0;break}}r||(U.nt(\"Auto, Spot, or Graduated Panel should not have zero or one elements: \"+o.toString()+\" in \"+n.toString()),Panel.JL=!0)}})),this}static JL=!1;copyTemplate(t){t===void 0&&(t=!1);const i=this.copy();return i.VI(e=>{e instanceof Panel&&(e.js=null,e.ni=null);const s=e.Fi;s!==null&&(e.Fi=null,s.each(o=>e.bind(o.copy())));const n=e.Ms;n!==null&&(e.Ms=null,n.each(o=>e.trigger(o.value.copy())))}),t&&i.Kt(),i}updateTargetBindings(t){const i=this.js;if(i===null)return;t===void 0&&(t=\"\");const e=this.diagram?.model,s=i.iterator;for(;s.next();){const n=s.value,o=this.$L(n,t);if(o===null)continue;const{data:r,elt:l}=o;n.isToTheme&&this.diagram===null||l!==void 0&&n.updateTarget(l,r,void 0,e)}}Bo(){if(this.diagram!==null)if(this.OP()){const t=this.diagram.model,i=this.js.iterator;for(;i.next();){const e=i.value;if(!e.isToTheme)continue;const s=this.$L(e);if(s===null)continue;const{data:n,elt:o}=s;o!==void 0&&e.updateTarget(o,n,void 0,t)}}else{const t=this.T.h,i=t.length;for(let e=0;e<i;e++)t[e].Bo()}}$L(t,i=\"\"){const e=t.sourceProperty;if(i!==\"\"&&e!==\"\"&&e!==i)return null;const s=t.targetProperty;if(t.converter===null&&s===\"\")return null;let o=this.data;const r=t.sourceName;if(t.isToObject){if(o=this.SL(r),o===null)return null}else if(t.isToModel){const a=this.diagram;if(a===null)return null;o=a.model.modelData}let l=this;const h=t.targetId;if(h!==-1){if(l=this.b0(h),l===null)return null}else t.Ne!==null&&(l=t.Ne);r===\"/\"?o=l.part:r===\".\"?o=l:r===\"..\"&&(o=l.panel);const f=t.pd;if(f!==0){if(!(l instanceof Panel))return null;f===1?l=l.getColumnDefinition(t.yc):f===2&&(l=l.getRowDefinition(t.yc))}return{data:o,elt:l}}get itemArray(){return this.Mh}set itemArray(t){Debug&&t!==null&&!Array.isArray(t)&&U.n(\"Panel.itemArray must be an Array-like object or null, not: \"+t);const i=this.Mh;if(i!==t||t!==null&&this.KI(t)){const e=this.diagram;if(i!==t&&(e!==null&&i!==null&&e.partManager.j2(this,e),this.Mh=t,e!==null&&t!==null&&e.partManager.W2(this,e)),this.t(\"itemArray\",i,t),e!==null&&e.undoManager.isUndoingRedoing)return;this.ZL(i,t)}}findItemPanelForData(t){return t==null||this.vs===null?null:(U.Mo(t,Panel,\"findItemPanelForData\"),this.vs.get(t))}KI(t){const i=this.T.h,e=i.length,s=t.length;let n=0,o=null;for(;n<e&&(o=i[n],!(o instanceof Panel)||o.data===null);)n++,o=i[n];if(e-n!==s)return!0;if(o===null)return s>0;let r=0;for(;n<e&&r<s;){if(o=i[n],!(o instanceof Panel)||o.data!==t[r])return!0;n++,r++}return!1}gp(){if(this.type===Panel.Spot||this.type===Panel.Auto)return Math.min(this.T.length,1);if(this.type===Panel.Link){const t=this.T,i=t.length;let e=0;for(;e<i;e++){const s=t.elt(e);if(!(s instanceof Shape)||!s.isPanelMain)return e}return e}if(this.type===Panel.Table&&this.T.length>0){const i=this.T.elt(0);if(i.isPanelMain&&i instanceof Panel&&i.el())return 1}return 0}rebuildItemElements(){const t=this.gp();for(;this.T.length>t;)this.ne(this.T.length-1,!1);this.ZL(null,this.itemArray)}ZL(t,i){const e=this.gp(),s=i;if(s===null||s.length===0){for(;this.T.length>e;)this.ne(this.T.length-1,!1);return}if(this.T.length<=e){const n=s.length;for(let o=0;o<n;o++)this.gb(s[o],o,!0)}else{let n=e;for(let r=0;r<s.length;r++,n++){const l=s[r],h=n<this.T.length?this.T.elt(n):null;if(h instanceof Panel){if(h.data!==l){const f=this.ZP(h.data,r),a=this.ZP(l,r);let c=a!==f;if(!c){const u=this.QP(h.data,r,f);c=this.QP(l,r,a)!==u}c?(this.ne(n,!1),this.gb(l,r,!1)):h.data=l}}else this.gb(l,r,!1)}for(;n<this.T.length;)this.ne(n,!1);this.nl=null,this._P(e,0),this.Eo()||this.u(),this.hs=null,this.isEnabledObject()||this.db(this,!1);const o=this.part;o!==null&&(o.O0(),o.pc(),this.yn&&o instanceof Node&&(o.yn=!0),o.yn&&o instanceof Node&&(o.he=null))}}gb(t,i,e){if(t==null||i<0)return null;const s=this.ZP(t,i),n=this.QP(t,i,s);if(n!==null){n.Kt();const o=n.copy();if(o.NP()){const l=this.findBindingPanel();l!==null&&l.$P(!0)}U.W(t)&&(this.vs===null&&(this.vs=new GMap),this.vs.set(t,o));const r=i+this.gp();return this.insertAt(r,o),e&&(o.ni=t,this._P(r,i),o.ni=null),o.data=t,o}return null}UI(t){if(t<0)return;const i=t+this.gp();this.ne(i,!0),this._P(i,t)}_P(t,i){const e=this.T;let s=t,n=i;for(;s<e.length;){const o=e.elt(s);o instanceof Panel&&o.GI(s,n),s++,n++}}GI(t,i){this.type===Panel.TableRow?this.row=t:this.type===Panel.TableColumn&&(this.column=t),this.itemIndex=i}zI(){return this.Mh!==null||this.itemTemplateMap!==null}get itemTemplate(){return this.itemTemplateMap===null?null:this.itemTemplateMap.get(\"\")}set itemTemplate(t){if(this.itemTemplateMap===null){if(t===null)return;this.itemTemplateMap=new GMap}const i=this.itemTemplateMap.get(\"\");if(i!==t){U.e(t,Panel,Panel,\"itemTemplate\"),(t instanceof Part||t.isPanelMain)&&U.n(\"Panel.itemTemplate must not be a Part or be Panel.isPanelMain: \"+t),this.itemTemplateMap.set(\"\",t),this.t(\"itemTemplate\",i,t);const e=this.diagram;if(e!==null&&e.undoManager.isUndoingRedoing)return;this.rebuildItemElements()}}get itemTemplateMap(){return this.b!==null?this.b.J0:null}set itemTemplateMap(t){const i=this.itemTemplateMap;if(i!==t){U.e(t,GMap,Panel,\"itemTemplateMap\");const e=t.iterator;for(;e.next();){const n=e.value;Debug&&(n instanceof Part||n.isPanelMain)&&U.n(\"Template in Panel.itemTemplateMap must not be a Part or be Panel.isPanelMain: \"+n)}this.Jt().J0=t,this.t(\"itemTemplateMap\",i,t);const s=this.diagram;if(s!==null&&s.undoManager.isUndoingRedoing)return;this.rebuildItemElements()}}get itemCategoryProperty(){return this.b!==null?this.b.$0:\"category\"}set itemCategoryProperty(t){const i=this.itemCategoryProperty;i!==t&&(typeof t!=\"string\"&&!U.rt(t)&&U.Pi(t,\"string or function\",Panel,\"itemCategoryProperty\"),this.Jt().$0=t,this.t(\"itemCategoryProperty\",i,t))}ZP(t,i){if(t===null)return\"\";const e=this.itemCategoryProperty;let s=\"\";if(U.rt(e))s=e(t);else if(typeof e==\"string\"&&U.W(t)){if(e===\"\")return\"\";const n=this.diagram,o=n!==null?n.model:null;o?s=o.St(t,e):s=Model.St(t,e)}else return\"\";if(s===void 0)return\"\";if(typeof s==\"string\")return s;U.n(\"Panel.getCategoryForItemData found a non-string category for \"+t+\": \"+s)}static QL=!1;static _L=null;QP(t,i,e){const s=this.itemTemplateMap;let n=null;return s!==null&&(n=s.get(e)),n===null&&(s!==null&&(n=s.get(\"\")),n===null&&(Panel.QL||(Panel.QL=!0,U.nt('No item template Panel found for category \"'+e+'\" on '+this),U.nt(\"  Using default item template.\"),Panel._L=new Panel().add(new TextBlock().bind(\"text\",\"\",U.toString).theme(\"stroke\",\"text\"))),n=Panel._L)),n}get mc(){return(this.l&1048576)!==0}set mc(t){const i=(this.l&1048576)!==0;i!==t&&(U.i(t,\"boolean\",Panel,\"isAtomic\"),this.l=this.l^1048576,this.t(\"isAtomic\",i,t))}get isClipping(){return(this.l&2097152)!==0}set isClipping(t){const i=(this.l&2097152)!==0;i!==t&&(this.oc(),Debug&&(U.i(t,\"boolean\",Panel,\"isClipping\"),t&&this.type!==Panel.Spot&&!(this instanceof Group)&&U.nt(\"Warning: Panel.isClipping set on non-Spot Panel: \"+this.toString())),this.l=this.l^2097152,this instanceof Group&&(this.hi=null),this.u(),this.t(\"isClipping\",i,t))}get isOpposite(){return(this.l&33554432)!==0}set isOpposite(t){const i=(this.l&33554432)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Panel,\"isOpposite\"),this.l=this.l^33554432,this.u(),this.t(\"isOpposite\",i,t))}get isEnabled(){return(this.l&4194304)!==0}set isEnabled(t){const i=(this.l&4194304)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",Panel,\"isEnabled\");const e=this.panel===null||this.panel.isEnabledObject();this.l=this.l^4194304,this.t(\"isEnabled\",i,t);const s=this.diagram;if(s!==null&&s.undoManager.isUndoingRedoing)return;e&&this.db(this,t)}}db(t,i){const e=t.enabledChanged;if(e!==null&&e(t,i),t instanceof Panel){const s=t.T.h,n=s.length;for(let o=0;o<n;o++){const r=s[o];i&&r instanceof Panel&&!r.isEnabled||this.db(r,i)}}}get alignmentFocusName(){return this.oo}set alignmentFocusName(t){const i=this.oo;i!==t&&(Debug&&U.i(t,\"string\",Panel,\"alignmentFocusName\"),this.oo=t,this.u(),this.t(\"alignmentFocusName\",i,t))}static definePanelLayout(t,i){PanelLayout.xn(t,i)}static isBuilderDefined(t){return PanelLayout.ls.has(t)}static Position=PanelLayout.ls.get(\"Position\");static Horizontal=PanelLayout.ls.get(\"Horizontal\");static Vertical=PanelLayout.ls.get(\"Vertical\");static Spot=PanelLayout.ls.get(\"Spot\");static Auto=PanelLayout.ls.get(\"Auto\");static Table=PanelLayout.ls.get(\"Table\");static Viewbox=PanelLayout.ls.get(\"Viewbox\");static TableRow=PanelLayout.ls.get(\"TableRow\");static TableColumn=PanelLayout.ls.get(\"TableColumn\");static Link=PanelLayout.ls.get(\"Link\");static Grid=PanelLayout.ls.get(\"Grid\");static Graduated=PanelLayout.ls.get(\"Graduated\")}Panel.definePanelLayout=Panel.definePanelLayout;class GradPanelSettings{ap;fp;cp;dp;Ps;ve;hs;Ae;constructor(){this.ap=0,this.fp=100,this.cp=10,this.dp=0,this.Ps=null,this.ve=null,this.hs=null,this.Ae=null}copy(){const t=new GradPanelSettings;return t.ap=this.ap,t.fp=this.fp,t.cp=this.cp,t.dp=this.dp,t.Ps=this.Ps,t.ve=this.ve,t.hs=this.hs,t.Ae=this.Ae,t}}class GridPanelSettings{gd;md;$f;ip;constructor(){this.gd=Size.MC,this.md=Point.No,this.$f=Size.Pw,this.ip=[]}copy(){const t=new GridPanelSettings;return t.gd=this.gd.copy(),t.md=this.md.copy(),t.$f=this.$f.copy(),t.ip=this.ip,t}}class TablePanelSettings{We;je;mp;pp;yp;wp;ep;np;sp;op;lp;rp;hp;Sh;constructor(){this.We=[],this.je=[],this.mp=3,this.pp=3,this.yp=0,this.wp=0,this.ep=Margin.Xg,this.np=1,this.sp=null,this.op=null,this.lp=1,this.rp=null,this.hp=null,this.Sh=null}copy(t){const i=new TablePanelSettings,e=this.We,s=e.length,n=i.We;for(let h=0;h<s;h++){if(e[h]===void 0)continue;const f=e[h].copy();f.Ta(t),n[h]=f}const o=this.je,r=o.length,l=i.je;for(let h=0;h<r;h++){if(o[h]===void 0)continue;const f=o[h].copy();f.Ta(t),l[h]=f}return i.mp=this.mp,i.pp=this.pp,i.yp=this.yp,i.wp=this.wp,i.ep=this.ep.N(),i.np=this.np,i.sp=this.sp,i.op=this.op,i.lp=this.lp,i.rp=this.rp,i.hp=this.hp,i.Sh=this.Sh,i}}var Sizing=(y=>(y[y.Default=1]=\"Default\",y[y.None=2]=\"None\",y[y.ProportionalExtra=3]=\"ProportionalExtra\",y))(Sizing||{});class RowColumnDefinition{Hs;xp;Ot;Ia;Oa;ui;gt;yd;io;ol;wd;xd;Ea;Rt;bd;Ns;st;Ii;ye;constructor(t){GSet.Ji(this),this.Hs=null,this.xp=!0,this.Ot=0,this.ye=NaN,this.Ia=0,this.Oa=1/0,this.ui=Spot.Default,this.st=0,this.Ii=0,this.gt=0,this.Ns=null,this.yd=1,this.io=1,this.ol=null,this.wd=null,this.xd=NaN,this.Ea=null,this.Rt=null,this.bd=!1,t&&(Object.assign(this,t),t.column!==void 0?(this.isRow=!1,this.index=t.column):t.row!==void 0&&(this.isRow=!0,this.index=t.row))}copy(){const t=new RowColumnDefinition;return t.xp=this.xp,t.Ot=this.Ot,t.ye=this.ye,t.Ia=this.Ia,t.Oa=this.Oa,t.ui=this.ui,t.st=this.st,t.Ii=this.Ii,t.gt=this.gt,t.io=this.io,t.yd=this.yd,this.ol===null?t.ol=null:t.ol=this.ol.N(),t.wd=this.wd,t.xd=this.xd,t.Ea=null,this.Ea!==null&&(t.separatorDashArray=this.Ea.slice()),t.Rt=this.Rt,t.bd=this.bd,t.Ns=this.Ns,t}nb(t){t.isRow?t.height!==void 0&&(this.height=t.height):t.width!==void 0&&(this.width=t.width),t.minimum!==void 0&&(this.minimum=t.minimum),t.maximum!==void 0&&(this.maximum=t.maximum),t.alignment!==void 0&&(this.alignment=t.alignment),t.stretch!==void 0&&(this.stretch=t.stretch),t.sizing!==void 0&&(this.sizing=t.sizing),t.separatorPadding!==void 0&&(this.separatorPadding=t.separatorPadding),t.separatorStroke!==void 0&&(this.separatorStroke=t.separatorStroke),t.separatorStrokeWidth!==void 0&&(this.separatorStrokeWidth=t.separatorStrokeWidth),t.separatorDashArray!==void 0&&(this.Ea=t.separatorDashArray),t.background!==void 0&&(this.background=t.background),t.coversSeparators!==void 0&&(this.coversSeparators=t.coversSeparators),t.Ns!==void 0&&(this.Ns=t.Ns)}ai(t){t in Sizing?this.sizing=t:U.hr(this,t)}toString(){return\"RowColumnDefinition \"+(this.isRow?\"(Row \":\"(Column \")+this.index+\") #\"+GSet.gs(this)}static Default=1;static None=2;static ProportionalExtra=3;Ta(t){this.Hs=t}computeEffectiveSpacingTop(t){let i=0;const e=this.Hs;if(this.index!==t){let n=this.separatorStroke;n===null&&e!==null&&(n=this.isRow?e.defaultRowSeparatorStroke:e.defaultColumnSeparatorStroke),n!==null&&(i=this.separatorStrokeWidth,isNaN(i)&&(e!==null?i=this.isRow?e.defaultRowSeparatorStrokeWidth:e.defaultColumnSeparatorStrokeWidth:i=0))}let s=this.ol;if(s===null)if(e!==null)s=e.defaultSeparatorPadding;else return i;return i+(this.isRow?s.top:s.left)}computeEffectiveSpacing(){let t=0;const i=this.Hs;let e=0;const s=this.isRow;if(i!==null&&i.type===Panel.Table){const o=s?i.We.length:i.je.length;for(let r=0;r<o;r++){const l=s?i.We[r]:i.je[r];if(l!==void 0&&l.st!==0){e=l.index;break}}}if(this.index!==e){let o=this.separatorStroke;o===null&&i!==null&&(o=s?i.defaultRowSeparatorStroke:i.defaultColumnSeparatorStroke),o!==null&&(t=this.separatorStrokeWidth,isNaN(t)&&(i!==null?t=s?i.defaultRowSeparatorStrokeWidth:i.defaultColumnSeparatorStrokeWidth:t=0))}let n=this.ol;if(n===null)if(i!==null)n=i.defaultSeparatorPadding;else return t;return t+(this.isRow?n.top+n.bottom:n.left+n.right)}t(t,i,e,s,n){const o=this.Hs;if(o!==null&&(o.raiseChangedEvent(2,t,this,i,e,s,n),this.Ns!==null)){const r=o.diagram;if(r!==null&&!r.me){const l=o.findBindingPanel();if(l!==null){const h=l.data;if(h!==null){const f=this.Ns.iterator;for(;f.next();)f.value.updateSource(this,h,t,l)}}}}}get panel(){return this.Hs}get isRow(){return this.xp}set isRow(t){this.xp=t}get index(){return this.Ot}set index(t){this.Ot=t}get height(){return this.ye}set height(t){const i=this.ye;i!==t&&(Debug&&U.i(t,\"number\",RowColumnDefinition,\"height\"),t<0&&U.U(t,\">= 0\",RowColumnDefinition,\"height\"),this.ye=t,this.actual=this.st,this.panel!==null&&this.panel.u(),this.t(\"height\",i,t))}get width(){return this.ye}set width(t){const i=this.ye;i!==t&&(Debug&&U.i(t,\"number\",RowColumnDefinition,\"width\"),t<0&&U.U(t,\">= 0\",RowColumnDefinition,\"width\"),this.ye=t,this.actual=this.st,this.panel!==null&&this.panel.u(),this.t(\"width\",i,t))}get minimum(){return this.Ia}set minimum(t){const i=this.Ia;i!==t&&(Debug&&U.i(t,\"number\",RowColumnDefinition,\"minimum\"),(t<0||!isFinite(t))&&U.U(t,\">= 0\",RowColumnDefinition,\"minimum\"),this.Ia=t,this.actual=this.st,this.panel!==null&&this.panel.u(),this.t(\"minimum\",i,t))}get maximum(){return this.Oa}set maximum(t){const i=this.Oa;i!==t&&(Debug&&U.i(t,\"number\",RowColumnDefinition,\"maximum\"),t<0&&U.U(t,\">= 0\",RowColumnDefinition,\"maximum\"),this.Oa=t,this.actual=this.st,this.panel!==null&&this.panel.u(),this.t(\"maximum\",i,t))}get alignment(){return this.ui}set alignment(t){const i=this.ui;i.equals(t)||(Debug&&U.e(t,Spot,RowColumnDefinition,\"alignment\"),this.ui=t.N(),this.panel!==null&&this.panel.u(),this.t(\"alignment\",i,t))}get stretch(){return this.io}set stretch(t){const i=this.io;i!==t&&(this.io=t,this.panel!==null&&this.panel.u(),this.t(\"stretch\",i,t))}get separatorPadding(){return this.ol}set separatorPadding(t){typeof t==\"number\"?t=new Margin(t):t!==null&&Debug&&U.e(t,Margin,RowColumnDefinition,\"separatorPadding\");const i=this.ol;(t===null||i===null||!i.equals(t))&&(t!==null&&(t=t.N()),this.ol=t,this.panel!==null&&this.panel.u(),this.t(\"separatorPadding\",i,t))}get separatorStroke(){return this.wd}set separatorStroke(t){const i=this.wd;i!==t&&(t!==null&&Brush.rd(t,\"RowColumnDefinition.separatorStroke\"),t instanceof Brush&&t.p(),this.wd=t,this.panel!==null&&this.panel.u(),this.t(\"separatorStroke\",i,t))}get separatorStrokeWidth(){return this.xd}set separatorStrokeWidth(t){const i=this.xd;i!==t&&(this.xd=t,this.panel!==null&&this.panel.u(),this.t(\"separatorStrokeWidth\",i,t))}get separatorDashArray(){return this.Ea}set separatorDashArray(t){const i=this.Ea;if(i!==t){if(t!==null&&!Array.isArray(t)&&U.Pi(t,\"Array\",RowColumnDefinition,\"separatorDashArray:value\"),t!==null){const e=t.length;let s=0;for(let n=0;n<e;n++){const o=t[n];(typeof o!=\"number\"||!(o>=0)||!isFinite(o))&&U.n(\"separatorDashArray value \"+o+\" at index \"+n+\" must be a positive number or zero.\"),s+=o}if(s===0){if(i===null)return;t=null}}this.Ea=t,this.panel!==null&&this.panel.L(),this.t(\"separatorDashArray\",i,t)}}get background(){return this.Rt}set background(t){const i=this.Rt;i!==t&&(t!==null&&Brush.rd(t,\"RowColumnDefinition.background\"),t instanceof Brush&&t.p(),this.Rt=t,this.panel!==null&&this.panel.L(),this.t(\"background\",i,t))}get coversSeparators(){return this.bd}set coversSeparators(t){const i=this.bd;i!==t&&(U.i(t,\"boolean\",RowColumnDefinition,\"coversSeparators\"),this.bd=t,this.panel!==null&&this.panel.L(),this.t(\"coversSeparators\",i,t))}get sizing(){return this.yd}set sizing(t){const i=this.yd;i!==t&&(Debug&&U.j(t,Sizing,\"Sizing\"),this.yd=t,this.panel!==null&&this.panel.u(),this.t(\"sizing\",i,t))}fb(){if(this.sizing===1){const t=this.Hs;return this.isRow?t.rowSizing:t.columnSizing}return this.sizing}get actual(){return this.st}set actual(t){isNaN(this.ye)?this.st=Math.max(Math.min(this.Oa,t),this.Ia):this.st=Math.max(Math.min(this.Oa,this.ye),this.Ia)}get measured(){return this.Ii}set measured(t){this.Ii=t}get total(){return this.st+this.computeEffectiveSpacing()}get position(){return this.gt}set position(t){this.gt=t}bind(t,i,e,s){return this.ac(t,i,e,s),this}bindTwoWay(t,i,e,s){const n=this.ac(t,i,e,s);return s===void 0&&n.makeTwoWay(),this}theme(t,i,e,s,n){return this.bh(t,i,e,s,n),this}themeData(t,i,e,s,n){return this.bh(t,i,e,s,n).ofData(),this}themeObject(t,i,e,s,n,o){return this.bh(t,i,e,s,n).ofObject(o),this}themeModel(t,i,e,s,n){return this.bh(t,i,e,s,n).ofModel(),this}ac(t,i,e,s){let n;return typeof t==\"string\"?n=new Binding(t,i,e,s):n=t,this.v0(n),n}bh(t,i,e,s,n){let o;return typeof t==\"string\"?o=new ThemeBinding(t,i,e,s,n):o=t,this.v0(o),o}v0(t){t.Ne=this;const i=this.panel;if(i!==null){const e=i.findBindingPanel();e!==null&&e.OL()&&U.n(\"Cannot add a Binding to a RowColumnDefinition that is already frozen: \"+t+\" on \"+i)}this.Ns===null&&(this.Ns=new List),this.Ns.add(t)}}class Shape extends GraphObject{ft;Cs;kd;Ba;$i;qo;Ko;$t;Sd;Md;v;constructor(t,i){super(),this.ft=null,this.Cs=null,this.kd=\"None\",this.Ba=\"black\",this.$i=\"black\",this.qo=1,this.Ko=null,this.$t=null,this.Sd=NaN,this.Md=NaN,this.v=null,typeof t==\"string\"?this.figure=t:t&&Object.assign(this,t),i&&Object.assign(this,i)}cloneProtected(t){super.cloneProtected(t),t.ft=this.ft,t.Cs=this.Cs,t.kd=this.kd,t.Ba=this.Ba,t.$i=this.$i,t.qo=this.qo,this.Ko!==null&&(t.Ko=this.Ko.slice()),this.$t!==null&&(this.$t.mi?t.$t=this.$t:t.$t=this.$t.copy()),t.Sd=this.Sd,t.Md=this.Md,this.v!==null&&(t.v=this.v.copy())}Va(){return this.$t===null?this.$t=new ShapeTemplateSettings:this.$t.mi&&(this.$t=this.$t.copy()),this.$t}mh(){super.mh(),this.$t!==null&&(this.$t.mi=!0)}ai(t){t in GeometryStretch?this.geometryStretch=t:super.ai(t)}toString(){return\"Shape(\"+(this.figure!==\"None\"?this.figure:this.toArrow!==\"None\"?this.toArrow:this.fromArrow)+\")#\"+GSet.gs(this)}HI(t,i){const e=this.pathPattern;e.dt(1/0,1/0);const s=e.measuredBounds;e.Gt(0,0,s.width,s.height);const n=this.geometry;t.save(),t.beginPath();const o=U.lt();if(n.type===1)o.push(n.startX),o.push(n.startY),o.push(n.endX),o.push(n.endY),this.Pd(t,i,o,e);else if(n.type===4){const r=n.figures.iterator;for(;r.next();){const l=r.value;o.length=0,o.push(l.startX),o.push(l.startY);let h=l.startX,f=l.startY,a=h,c=f;const u=l.segments.h,d=u.length;for(let m=0;m<d;m++){const g=u[m];switch(g.type){case 1:this.Pd(t,i,o,e),o.length=0,o.push(g.endX),o.push(g.endY),h=g.endX,f=g.endY,a=h,c=f;break;case 2:o.push(g.endX),o.push(g.endY),h=g.endX,f=g.endY;break;case 3:Geo.Xn(h,f,g.point1X,g.point1Y,g.point2X,g.point2Y,g.endX,g.endY,.5,o),h=g.endX,f=g.endY;break;case 4:Geo.Kg(h,f,g.point1X,g.point1Y,g.endX,g.endY,.5,o),h=g.endX,f=g.endY;break;case 5:{const p=g.Co(l),w=p.length;if(w===0){o.push(g.centerX),o.push(g.centerY),h=g.centerX,f=g.centerY;break}for(let x=0;x<w;x++){const k=p[x];Geo.Xn(h,f,k[2],k[3],k[4],k[5],k[6],k[7],.5,o),h=k[6],f=k[7]}break}case 6:{const p=g.Hh(l,h,f),w=p.length;if(w===0){o.push(g.endX),o.push(g.endY),h=g.endX,f=g.endY;break}for(let x=0;x<w;x++){const k=p[x];Geo.Xn(h,f,k[2],k[3],k[4],k[5],k[6],k[7],.5,o),h=k[6],f=k[7]}break}default:U.n(\"Segment not of valid type: \"+g.type)}g.isClosed&&(o.push(a),o.push(c),this.Pd(t,i,o,e))}this.Pd(t,i,o,e)}}else if(n.type===2)o.push(n.startX),o.push(n.startY),o.push(n.endX),o.push(n.startY),o.push(n.endX),o.push(n.endY),o.push(n.startX),o.push(n.endY),o.push(n.startX),o.push(n.startY),this.Pd(t,i,o,e);else if(n.type===3){const r=new PathFigure;r.startX=n.endX,r.startY=(n.startY+n.endY)/2;const l=new PathSegment(5);l.startAngle=0,l.sweepAngle=360,l.centerX=(n.startX+n.endX)/2,l.centerY=(n.startY+n.endY)/2,l.radiusX=Math.abs(n.startX-n.endX)/2,l.radiusY=Math.abs(n.startY-n.endY)/2,r.add(l);const h=l.Co(r),f=h.length;if(f===0)o.push(l.centerX),o.push(l.centerY);else{let a=r.startX,c=r.startY;for(let u=0;u<f;u++){const d=h[u];Geo.Xn(a,c,d[2],d[3],d[4],d[5],d[6],d[7],.5,o),a=d[6],c=d[7]}}this.Pd(t,i,o,e)}U.tt(o),t.restore(),t.clearContextCache(!1)}qI(t){let i=t.measuredBounds.width;return t instanceof Shape&&(i-=t.strokeWidth),i<1&&(i=1),i}Pd(t,i,e,s){const n=e.length;if(n<4)return;const o=s.measuredBounds,r=Math.max(1,o.width),l=o.height;let h=e[0],f=e[1],a=0,c=0,u=0,d=0,m=0,g=0,p=0,w=0;const x=U.lt();for(let N=2;N<n;N+=2)a=e[N],c=e[N+1],u=a-h,d=c-f,u===0&&(u=.001),m=d/u,g=Math.atan2(d,u),p=Math.sqrt(u*u+d*d),x.push([u,g,m,p]),w+=p,h=a,f=c;h=e[0],f=e[1];const k=this.qI(s);let b=k;const S=r/2;let M=S!==0,A=0,C=x[A];u=C[0],g=C[1],m=C[2],p=C[3];let P=0;for(;w>=.1;){if(P===0&&(M?(b=k,b-=S,w-=S,M=!1):b=k,b===0&&(b=1)),b>w){b=w,U.tt(x);return}b>p?(P=b-p,b=p):P=0;let N=Math.sqrt(b*b/(1+m*m));if(u<0&&(N=-N),h+=N,f+=m*N,t.translate(h,f),t.rotate(g),t.translate(-(r/2),-(l/2)),P===0&&s.xh(t,i),t.translate(r/2,l/2),t.rotate(-g),t.translate(-h,-f),w-=b,p-=b,P!==0){if(A++,A===x.length){U.tt(x);return}C=x[A],u=C[0],g=C[1],m=C[2],p=C[3],b=P}}U.tt(x)}xh(t,i){const e=t instanceof SVGContext;let s=this.$i;const n=this.Ba;if(s===null&&n===null)return;const o=this.ft;if(o===null)return;t.commitTransform();const r=this.actualBounds,l=this.naturalBounds;n!==null&&this.un(t,n,!0,!1,l,r);const h=this.part;let f=this.qo;s!==null&&f===0&&h!==null&&(this.isPanelMain||h.findMainElement()===this)&&(f=h.WI()),f===0&&(s=null),s!==null&&f!==0&&(this.un(t,s,!1,!1,l,r),t.lineWidth=f,t.lineJoin=this.strokeJoin,t.lineCap=this.strokeCap,t.miterLimit=this.strokeMiterLimit);let a=!1;h&&i.getRenderingHint(\"drawShadows\")&&(a=h.isShadowed),t.sl===!1&&(a=!1);let c=!0;s!==null&&(n===null||n===\"transparent\")&&(c=!1);let u=!1;const d=this.strokeDashArray;if(d!==null&&(u=!0,t.enableDash(d,this.strokeDashOffset)),o.type===1)t.beginPath(),t.moveTo(o.startX,o.startY),t.lineTo(o.endX,o.endY),s!==null&&t.strokeContext(),t.endPath();else if(o.type===2){const m=o.startX,g=o.startY,p=o.endX,w=o.endY,x=Math.min(m,p),k=Math.min(g,w),b=Math.abs(p-m),S=Math.abs(w-g);t.beginPath(),t.rect(x,k,b,S),n!==null&&t.fillContext(n,!1,null),s!==null&&(c&&a&&t.shadowsOff(),t.strokeContext(),c&&a&&t.shadowsOn()),t.endPath()}else if(o.type===3){const m=o.startX,g=o.startY,p=o.endX,w=o.endY,x=Math.abs(p-m)/2,k=Math.abs(w-g)/2,b=Math.min(m,p)+x,S=Math.min(g,w)+k;t.beginPath(),t.moveTo(b,S-k),t.bezierCurveTo(b+Geo.zn*x,S-k,b+x,S-Geo.zn*k,b+x,S),t.bezierCurveTo(b+x,S+Geo.zn*k,b+Geo.zn*x,S+k,b,S+k),t.bezierCurveTo(b-Geo.zn*x,S+k,b-x,S+Geo.zn*k,b-x,S),t.bezierCurveTo(b-x,S-Geo.zn*k,b-Geo.zn*x,S-k,b,S-k),t.closePath(),n!==null&&t.fillContext(n,!1,null),s!==null&&(c&&a&&t.shadowsOff(),t.strokeContext(),c&&a&&t.shadowsOn()),t.endPath()}else if(o.type===4){const m=o.figures,g=m.length;for(let p=0;p<g;p++){const w=m.h[p];e?(t.beginPath(),this.buildPath(t,w)):w.Ke===null&&(w.Ke=new Path2D,this.buildPath(w.Ke,w));const x=w.isFilled;a?w.isShadowed?(x===!0&&n!==\"transparent\"&&n!==null&&t.fillContext(n,w.isEvenOdd,w.Ke),s!==null&&(x&&c&&t.shadowsOff(),t.stroke(w.Ke),x&&c&&t.shadowsOn())):(t.shadowsOff(),x&&n!==\"transparent\"&&n!==null&&t.fillContext(n,w.isEvenOdd,w.Ke),s!==null&&t.stroke(w.Ke),t.shadowsOn()):(x&&n!==null&&t.fillContext(n,w.isEvenOdd,w.Ke),s!==null&&t.stroke(w.Ke)),t.endPath(p)}}u&&t.disableDash(),this.pathPattern!==null&&this.HI(t,i)}buildPath(t,i){t.moveTo(i.startX,i.startY);const e=i.segments.h,s=e.length;let n=null;for(let o=0;o<s;o++){const r=e[o];switch(r.type){case 1:t.moveTo(r.endX,r.endY);break;case 2:t.lineTo(r.endX,r.endY);break;case 3:t.bezierCurveTo(r.point1X,r.point1Y,r.point2X,r.point2Y,r.endX,r.endY);break;case 4:t.quadraticCurveTo(r.point1X,r.point1Y,r.endX,r.endY);break;case 5:if(r.radiusX===r.radiusY){const l=n!==null?n.endX:i.startX,h=n!==null?n.endY:i.startY,f=Math.PI/180;t.arc(r.point1X,r.point1Y,r.radiusX,r.startAngle*f,(r.startAngle+r.sweepAngle)*f,r.sweepAngle<0,l,h)}else{const l=r.Co(i),h=l.length;if(h===0){t.lineTo(r.centerX,r.centerY);break}for(let f=0;f<h;f++){const a=l[f];f===0&&t.lineTo(a[0],a[1]),t.bezierCurveTo(a[2],a[3],a[4],a[5],a[6],a[7])}}break;case 6:{let l=0,h=0,f;if(n!==null&&n.type===5){f=n.Co(i);const c=f.length;if(c===0){t.lineTo(r.endX,r.endY);break}const u=f[c-1]||null;u!==null&&(l=u[6],h=u[7])}else l=n!==null?n.endX:i.startX,h=n!==null?n.endY:i.startY;f=r.Hh(i,l,h);const a=f.length;if(a===0){t.lineTo(r.endX,r.endY);break}for(let c=0;c<a;c++){const u=f[c];t.bezierCurveTo(u[2],u[3],u[4],u[5],u[6],u[7])}break}}r.isClosed&&t.closePath(),n=r}}nc(t,i,e){if(!super.nc(t,i,e)||this.$i===null&&this.Ba===null||this.ft===null||this.pathPattern!==null)return!1;const s=this.svg.getElementsByTagName(\"path\");return this.geometry.figures.length!==s.length?!1:(t.currentPath=this.svg,this.xh(t,i),t.currentPath=null,!0)}nd(t){return this.geometry!==null&&this.geometry.figures.length>1||this.pathPattern!==null?!0:super.nd(t)}LP(t,i){if(t.nodeName!==\"g\")t.setAttributeNS(null,\"filter\",i);else{const e=t.getElementsByTagName(\"path\");for(let s=0;s<e.length;s++)e[s].setAttributeNS(null,\"filter\",i)}}getDocumentPoint(t,i){if(i===void 0&&(i=new Point),t instanceof Spot){const e=t;e.isNoSpot()&&U.n(\"getDocumentPoint Spot must be a real, specific Spot, not: \"+e.toString());const s=this.naturalBounds,n=this.strokeWidth;return i.s(e.x*(s.width+n)-n/2+s.x+e.offsetX,e.y*(s.height+n)-n/2+s.y+e.offsetY),this.Us.kt(i),i}else return i.set(t),this.Us.kt(i),i}getDocumentBounds(t){t===void 0&&(t=new Rect);const i=this.naturalBounds,e=this.Us,s=Rect.K(i.x,i.y,i.width,i.height),n=this.strokeWidth;s.inflate(n/2,n/2);const o=Point.K(s.x,s.y).F(e);return t.s(o.x,o.y,0,0),o.s(s.right,s.y).F(e),t.unionNoCheck(o.x,o.y,0,0),o.s(s.right,s.bottom).F(e),t.unionNoCheck(o.x,o.y,0,0),o.s(s.x,s.bottom).F(e),t.unionNoCheck(o.x,o.y,0,0),Rect.o(s),Point.o(o),t}ph(t,i){const e=this.geometry;if(e===null||this.fill===null&&this.stroke===null)return!1;const s=e.bounds;let n=this.strokeWidth/2;e.type===1&&!i&&(n+=2);const o=Rect.a();if(o.c(s),o.inflate(n+2,n+2),!o.containsPoint(t))return Rect.o(o),!1;const r=n+1e-4;if(e.type===1){if(this.stroke===null)return!1;const l=(e.startX-e.endX)*(t.x-e.endX)+(e.startY-e.endY)*(t.y-e.endY),h=(e.endX-e.startX)*(t.x-e.startX)+(e.endY-e.startY)*(t.y-e.startY);return l<0||h<0?!1:(Rect.o(o),Geo.zi(e.startX,e.startY,e.endX,e.endY,n,t.x,t.y))}else if(e.type===2){const l=e.startX,h=e.startY,f=e.endX,a=e.endY;if(o.x=Math.min(l,f),o.y=Math.min(h,a),o.width=Math.abs(f-l),o.height=Math.abs(a-h),this.fill===null){if(o.inflate(-r,-r),o.containsPoint(t))return Rect.o(o),!1;o.inflate(r,r)}this.stroke!==null&&o.inflate(n,n);const c=o.containsPoint(t);return Rect.o(o),c}else if(e.type===3){const l=e.startX,h=e.startY,f=e.endX,a=e.endY;let c=Math.min(l,f),u=Math.min(h,a);const d=Math.abs(f-l),m=Math.abs(a-h);let g=d/2,p=m/2;if(c=t.x-(c+g),u=t.y-(u+p),this.fill===null){if(g-=r,p-=r,g<=0||p<=0)return Rect.o(o),!1;if(c*c/(g*g)+u*u/(p*p)<=1)return Rect.o(o),!1;g+=r,p+=r}return this.stroke!==null&&(g+=r,p+=r),Rect.o(o),g<=0||p<=0?!1:c*c/(g*g)+u*u/(p*p)<=1}else{if(e.type===4)return Rect.o(o),this.fill===null?e.KC(t.x,t.y,n):e.iS(t,n,this.strokeWidth>1,i);U.n(\"Unknown Geometry type: \"+e.type)}}ed(t,i,e,s){const n=this.desiredSize,o=this.qo;t=Math.max(t,0),i=Math.max(i,0);let r;if(this.Cs!==null)r=this.geometry.bounds;else{const g=this.figure;let p=Shape.tN[g];if(p===void 0){let w=Geo.rn[g];typeof w==\"string\"&&(w=Geo.rn[w]),U.rt(w)?(p=w(null,100,100),Shape.tN[g]=p):U.n(\"Unsupported Figure: \"+g)}r=p.bounds}let l=r.width,h=r.height,f=r.width,a=r.height;switch(this.qs(!0)){case 0:e=0,s=0;break;case 2:f=Math.max(t-o,0),a=Math.max(i-o,0);break;case 5:f=Math.max(t-o,0),s=0;break;case 4:e=0,a=Math.max(i-o,0);break}isFinite(n.width)&&(f=n.width),isFinite(n.height)&&(a=n.height);const u=this.maxSize,d=this.minSize;e=Math.max(e-o,d.width),s=Math.max(s-o,d.height),f=Math.min(u.width,f),a=Math.min(u.height,a),f=isFinite(f)?Math.max(e,f):Math.max(l,e),a=isFinite(a)?Math.max(s,a):Math.max(h,s);const m=this.pM();switch(m){case 0:break;case 2:l=f,h=a;break;case 6:{let g=Math.min(f/l,a/h);isFinite(g)||(g=1),l=l*g,h=h*g;break}default:U.n(m+\" is not a valid geometryStretch.\")}if(this.Cs!==null){l===0&&(l=.001),h===0&&(h=.001);const p=(this.Cs!==null?this.Cs:this.ft).yF(l,h);Debug&&p.p(),this.ft=p}else(this.ft===null||!Geo.G(this.ft.gf,t-o)||!Geo.G(this.ft.mf,i-o))&&(this.ft=Shape.jI(this,l,h));r=this.ft.bounds,t===1/0||i===1/0?this._n(r.x-o/2,r.y-o/2,t===0&&l===0?0:r.width+o,i===0&&h===0?0:r.height+o):this._n(-(o/2),-(o/2),f+o,a+o),n.isReal()?(f=n.width,a=n.height,f=Math.min(u.width,f),a=Math.min(u.height,a),f=Math.max(d.width,f),a=Math.max(d.height,a),this.qi.s(0,0,f,a)):this.qi.c(r)}pM(){const t=this.geometryStretch;return this.Cs!==null?t===1?2:t:t===1?Shape.tN[this.figure].defaultStretch:t}yh(t,i,e,s){this.commonArrange(t,i,e,s)}getNearestIntersectionPoint(t,i,e){return this.ec(t.x,t.y,i.x,i.y,e)}ec(t,i,e,s,n){const o=this.F,r=1/(o.m11*o.m22-o.m12*o.m21),l=o.m22*r,h=-o.m12*r,f=-o.m21*r,a=o.m11*r,c=r*(o.m21*o.dy-o.m22*o.dx),u=r*(o.m12*o.dx-o.m11*o.dy),d=t*l+i*f+c,m=t*h+i*a+u,g=e*l+s*f+c,p=e*h+s*a+u,w=this.qo/2;let x=this.ft;x===null&&(this.dt(1/0,1/0),x=this.ft);const k=x.bounds;let b=!1;if(x.type===1)if(this.strokeWidth<=1.5)b=Geo.Yn(x.startX,x.startY,x.endX,x.endY,d,m,g,p,n);else{let S=0,M=0;if(x.startX===x.endX)S=w,M=0;else{const T=(x.endY-x.startY)/(x.endX-x.startX);M=w/Math.sqrt(1+T*T),S=M*T}const A=U.lt();let C=new Point;Geo.Yn(x.startX+S,x.startY+M,x.endX+S,x.endY+M,d,m,g,p,C)&&A.push(C),C=new Point,Geo.Yn(x.startX-S,x.startY-M,x.endX-S,x.endY-M,d,m,g,p,C)&&A.push(C),C=new Point,Geo.Yn(x.startX+S,x.startY+M,x.startX-S,x.startY-M,d,m,g,p,C)&&A.push(C),C=new Point,Geo.Yn(x.endX+S,x.endY+M,x.endX-S,x.endY-M,d,m,g,p,C)&&A.push(C);const P=A.length;if(P===0)return U.tt(A),!1;b=!0;let N=1/0;for(let T=0;T<P;T++){const L=A[T],D=(L.x-d)**2+(L.y-m)**2;D<N&&(N=D,n.x=L.x,n.y=L.y)}U.tt(A)}else if(x.type===2)b=Geo.bl(k.x-w,k.y-w,k.x+k.width+w,k.y+k.height+w,d,m,g,p,n);else if(x.type===3){const S=Rect.K(k.x,k.y,k.width,k.height).inflate(w,w);b=this.vI(S,d,m,g,p,n),Rect.o(S)}else if(x.type===4){let S=0,M=0,A=0,C=0;const P=Point.a();let N=g-d,T=p-m,L=N*N+T*T,D=d,F=m;if(L>0&&k.contains(D,F)&&(P.x=D,P.y=F,this.containsPoint(P)))for(N!==0&&Math.abs(N)<.5?(T*=.5/N,N=.5):T!==0&&Math.abs(T)<.5&&(N*=.5/T,T=.5),D-=N,F-=T;k.contains(D,F);)D-=N,F-=T;const I=.6;n.x=g,n.y=p;for(let K=0;K<x.figures.count;K++){const B=x.figures.h[K],z=B.isFilled?D:d,V=B.isFilled?F:m,H=B.segments;S=B.startX,M=B.startY;let W=S,j=M;for(let $=0;$<H.count;$++){const X=H.h[$],J=X.type;A=X.endX,C=X.endY;let v=!1;switch(J){case 1:W=A,j=C;break;case 2:v=this.pb(S,M,A,C,z,V,g,p,P);break;case 3:{v=Geo.Ug(S,M,X.point1X,X.point1Y,X.point2X,X.point2Y,A,C,z,V,g,p,I,P);break}case 4:{v=Geo.Ug(S,M,S+2/3*(X.point1X-S),M+2/3*(X.point1Y-M),A+2/3*(X.point1X-A),C+2/3*(X.point1Y-C),A,C,z,V,g,p,I,P);break}case 5:case 6:{const _=X.type===5?X.Co(B):X.Hh(B,S,M),G=_.length;if(G===0){v=this.pb(S,M,X.type===5?X.centerX:X.endX,X.type===5?X.centerY:X.endY,z,V,g,p,P);break}let E=null;for(let q=0;q<G;q++){if(E=_[q],q===0&&this.pb(S,M,E[0],E[1],z,V,g,p,P)){const Z=this.yb(z,V,P,L,n);Z<L&&(L=Z,b=!0)}if(Geo.Ug(E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],z,V,g,p,I,P)){const Z=this.yb(z,V,P,L,n);Z<L&&(L=Z,b=!0)}}A=E[6],C=E[7];break}default:U.n(\"Unknown Segment type: \"+J)}if(S=A,M=C,v){const _=this.yb(z,V,P,L,n);_<L&&(L=_,b=!0)}if(X.isClosed&&(A=W,C=j,this.pb(S,M,A,C,z,V,g,p,P))){const _=this.yb(z,V,P,L,n);_<L&&(L=_,b=!0)}}}let R=e-t,O=s-i;const Y=Math.sqrt(R*R+O*O);Y!==0&&(R/=Y,O/=Y),n.x-=R*w,n.y-=O*w,Point.o(P)}else U.n(\"Unknown Geometry type: \"+x.type);return b?(this.F.kt(n),!0):!1}yb(t,i,e,s,n){const o=e.x-t,r=e.y-i,l=o*o+r*r;return l<s?(n.x=e.x,n.y=e.y,l):s}pb(t,i,e,s,n,o,r,l,h){if(Geo.G(t,e)&&Geo.G(i,s)||Geo.G(n,r)&&Geo.G(o,l))return!1;let f=!1;const a=(n-r)*(i-s)-(o-l)*(t-e);if(a===0)return!1;if(h.x=((n*l-o*r)*(t-e)-(n-r)*(t*s-i*e))/a,h.y=((n*l-o*r)*(i-s)-(o-l)*(t*s-i*e))/a,(t>e?t-e:e-t)<(i>s?i-s:s-i)){const c=i<s?i:s,u=i<s?s:i;(h.y>c||Geo.G(h.y,c))&&(h.y<u||Geo.G(h.y,u))&&(f=!0)}else{const c=t<e?t:e,u=t<e?e:t;(h.x>c||Geo.G(h.x,c))&&(h.x<u||Geo.G(h.x,u))&&(f=!0)}return f}JI(t,i,e){return this.pickable===!1?!1:(e.uf(this.F),i?this.$I(t,e):this.containedInRect(t,e))}containedInRect(t,i){if(i===void 0)return t.containsRect(this.actualBounds);let e=this.ft;e===null&&(this.dt(1/0,1/0),e=this.ft);const s=e.bounds,n=this.strokeWidth/2;let o=!1;const r=Point.a();return r.s(s.x-n,s.y-n),t.containsPoint(i.kt(r))&&(r.s(s.x-n,s.bottom+n),t.containsPoint(i.kt(r))&&(r.s(s.right+n,s.bottom+n),t.containsPoint(i.kt(r))&&(r.s(s.right+n,s.y-n),t.containsPoint(i.kt(r))&&(o=!0)))),Point.o(r),o}intersectsRect(t,i){if(this.containedInRect(t,i)||i===void 0&&(i=this.F,t.containsRect(this.actualBounds)))return!0;const e=Transform.a();e.set(i),e.Lw();const s=t.left,n=t.right,o=t.top,r=t.bottom,l=Point.a();if(l.s(s,o),e.kt(l),this.ph(l,!0))return Point.o(l),!0;if(l.s(n,o),e.kt(l),this.ph(l,!0))return Point.o(l),!0;if(l.s(s,r),e.kt(l),this.ph(l,!0))return Point.o(l),!0;if(l.s(n,r),e.kt(l),this.ph(l,!0))return Point.o(l),!0;const h=Point.a(),f=Point.a();e.set(i),e.DC(this.F),e.Lw(),h.x=n,h.y=o,h.F(e),l.x=s,l.y=o,l.F(e);let a=!1;return this.za(l,h,f)?a=!0:(l.x=n,l.y=r,l.F(e),this.za(l,h,f)?a=!0:(h.x=s,h.y=r,h.F(e),this.za(l,h,f)?a=!0:(l.x=s,l.y=o,l.F(e),this.za(l,h,f)&&(a=!0)))),Point.o(l),Transform.o(e),Point.o(h),Point.o(f),a}za(t,i,e){if(!this.getNearestIntersectionPoint(t,i,e))return!1;const s=t.x,n=t.y,o=i.x,r=i.y,l=e.x,h=e.y;if(s===o){let f=0,a=0;return n<r?(f=n,a=r):(f=r,a=n),h>=f&&h<=a}else{let f=0,a=0;return s<o?(f=s,a=o):(f=o,a=s),l>=f&&l<=a}}$I(t,i){if(this.containedInRect(t,i)||i===void 0&&(i=this.F,t.containsRect(this.actualBounds)))return!0;const e=t.left,s=t.right,n=t.top,o=t.bottom,r=Point.a(),l=Point.a(),h=Point.a(),f=Transform.a();f.set(i),f.DC(this.F),f.Lw(),l.x=s,l.y=n,l.F(f),r.x=e,r.y=n,r.F(f);let a=!1;return this.za(r,l,h)?a=!0:(r.x=s,r.y=o,r.F(f),this.za(r,l,h)?a=!0:(l.x=e,l.y=o,l.F(f),this.za(r,l,h)?a=!0:(r.x=e,r.y=n,r.F(f),this.za(r,l,h)&&(a=!0)))),Transform.o(f),Point.o(r),Point.o(l),Point.o(h),a}NL(t,i,e){if(e&&this.fill!==null&&this.ph(t,!0))return!0;let s=t.distanceSquaredPoint(i);const n=s;this.strokeWidth>1.5&&(s=this.strokeWidth/2+Math.sqrt(s),s*=s);let o=this.ft;if(o===null&&(this.dt(1/0,1/0),o=this.ft,o===null))return!1;if(!e){const c=o.bounds,u=c.x,d=c.y,m=c.x+c.width,g=c.y+c.height;if(Point.distanceSquared(t.x,t.y,u,d)<=s&&Point.distanceSquared(t.x,t.y,m,d)<=s&&Point.distanceSquared(t.x,t.y,u,g)<=s&&Point.distanceSquared(t.x,t.y,m,g)<=s)return!0}function r(c,u){const d=c.length;for(let m=0;m<d;m+=2)if(u.distanceSquared(c[m],c[m+1])>s)return!0;return!1}const l=o.startX,h=o.startY,f=o.endX,a=o.endY;if(o.type===1){const c=Point.distanceLineSegmentSquared(t.x,t.y,l,h,f,a),u=(f-l)*(t.x-l)+(a-h)*(t.y-h),d=(l-f)*(t.x-f)+(h-a)*(t.y-a),m=u>=0&&d>=0?s:n;return c<=m}else if(o.type===2){let c=!1;return e&&(c=Point.distanceLineSegmentSquared(t.x,t.y,l,h,l,a)<=s||Point.distanceLineSegmentSquared(t.x,t.y,l,h,f,h)<=s||Point.distanceLineSegmentSquared(t.x,t.y,f,h,f,a)<=s||Point.distanceLineSegmentSquared(t.x,t.y,l,a,f,a)<=s),c}else if(o.type===3){const c=(l+f)/2,u=(h+a)/2,d=t.x-c,m=t.y-u,g=Math.abs(f-l)/2,p=Math.abs(a-h)/2;if(g===0||p===0)return Point.distanceLineSegmentSquared(t.x,t.y,l,h,f,a)<=s;if(e){const w=Geo.hF(g,p,d,m);return w*w<=s}else return!(Point.distanceSquared(d,m,-g,0)>=s||Point.distanceSquared(d,m,0,-p)>=s||Point.distanceSquared(d,m,0,p)>=s||Point.distanceSquared(d,m,g,0)>=s)}else if(o.type===4){const c=o.bounds,u=c.x,d=c.y,m=c.x+c.width,g=c.y+c.height;if(t.x>m&&t.x<u&&t.y>g&&t.y<d&&Point.distanceLineSegmentSquared(t.x,t.y,u,d,u,g)>s&&Point.distanceLineSegmentSquared(t.x,t.y,u,d,m,d)>s&&Point.distanceLineSegmentSquared(t.x,t.y,m,g,u,g)>s&&Point.distanceLineSegmentSquared(t.x,t.y,m,g,m,d)>s)return!1;const p=Math.sqrt(s);if(e){if(this.fill===null?o.KC(t.x,t.y,p):o.iS(t,p,!0,!1))return!0}else{const w=o.figures;for(let x=0;x<w.count;x++){const k=w.h[x];let b=k.startX,S=k.startY;if(t.distanceSquared(b,S)>s)return!1;const M=k.segments.h,A=M.length;for(let C=0;C<A;C++){const P=M[C];switch(P.type){case 1:case 2:if(b=P.endX,S=P.endY,t.distanceSquared(b,S)>s)return!1;break;case 3:{const N=U.lt();Geo.Xn(b,S,P.point1X,P.point1Y,P.point2X,P.point2Y,P.endX,P.endY,.8,N);const T=r(N,t);if(U.tt(N),T||(b=P.endX,S=P.endY,t.distanceSquared(b,S)>s))return!1;break}case 4:{const N=U.lt();Geo.Kg(b,S,P.point1X,P.point1Y,P.endX,P.endY,.8,N);const T=r(N,t);if(U.tt(N),T||(b=P.endX,S=P.endY,t.distanceSquared(b,S)>s))return!1;break}case 5:case 6:{const N=P.type===5?P.Co(k):P.Hh(k,b,S),T=N.length;if(T===0){if(b=P.type===5?P.centerX:P.endX,S=P.type===5?P.centerY:P.endY,t.distanceSquared(b,S)>s)return!1;break}let L=null;const D=U.lt();for(let F=0;F<T;F++)if(L=N[F],D.length=0,Geo.Xn(L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],.8,D),r(D,t))return U.tt(D),!1;U.tt(D),L!==null&&(b=L[6],S=L[7]);break}default:U.n(\"Unknown Segment type: \"+P.type)}}}return!0}}return!1}vI(t,i,e,s,n,o){if(t.width===0)return Geo.Yn(t.x,t.y,t.x,t.y+t.height,i,e,s,n,o);if(t.height===0)return Geo.Yn(t.x,t.y,t.x+t.width,t.y,i,e,s,n,o);{const r=t.width/2,l=t.height/2,h=t.x+r,f=t.y+l;let a=9999;if(i!==s&&(a=(e-n)/(i-s)),Math.abs(a)<9999){const c=e-f-a*(i-h);if(r*r*(a*a)+l*l-c*c<0)return o.x=NaN,o.y=NaN,!1;const u=Math.sqrt(r*r*(a*a)+l*l-c*c),d=(-(r*r*a*c)+r*l*u)/(l*l+r*r*(a*a))+h,m=(-(r*r*a*c)-r*l*u)/(l*l+r*r*(a*a))+h,g=a*(d-h)+c+f,p=a*(m-h)+c+f,w=Math.abs((i-d)**2)+Math.abs((e-g)**2),x=Math.abs((i-m)**2)+Math.abs((e-p)**2);w<x?(o.x=d,o.y=g):(o.x=m,o.y=p)}else{const c=l*l,u=r*r,d=i-h,m=c-c/u*(d*d);if(m<0)return o.x=NaN,o.y=NaN,!1;const g=Math.sqrt(m),p=f+g,w=f-g,x=Math.abs(p-e),k=Math.abs(w-e);x<k?(o.x=i,o.y=p):(o.x=i,o.y=w)}return!0}}XI(){return this.qo/2*this.strokeMiterLimit*this.getDocumentScale()}get geometry(){return this.ft!==null?this.ft:this.Cs}set geometry(t){const i=this.ft,e=this.Cs;if(i===t)return;t!==null?(Debug&&U.e(t,Geometry,Shape,\"geometry\"),this.ft=t.p(),this.Cs=this.ft):(this.ft=null,this.Cs=null);const s=this.part;if(s!==null&&s.pc(),this.u(),this.t(\"geometry\",i||e,t),this.ic()){const n=this.part;n!==null&&this.Aa(n,\"geometryString\")}}get geometryString(){return this.geometry===null?\"\":this.geometry.toString()}set geometryString(t){const i=Geometry.parse(t),e=i.normalize();this.geometry=i;const s=Point.K(-e.x,-e.y);this.position=s,Point.o(s)}get isGeometryPositioned(){return(this.l&1048576)!==0}set isGeometryPositioned(t){const i=(this.l&1048576)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Shape,\"isGeometryPositioned\"),this.l=this.l^1048576,this.u(),this.t(\"isGeometryPositioned\",i,t))}re(){this.ft=null}get fill(){return this.Ba}set fill(t){const i=this.Ba;i!==t&&(t!==null&&Brush.rd(t,\"Shape.fill\"),t instanceof Brush&&t.p(),this.Ba=t,this.L(),this.t(\"fill\",i,t))}get stroke(){return this.$i}set stroke(t){const i=this.$i;i!==t&&(t!==null&&Brush.rd(t,\"Shape.stroke\"),t instanceof Brush&&t.p(),this.$i=t,this.L(),this.t(\"stroke\",i,t))}get strokeWidth(){return this.qo}set strokeWidth(t){const i=this.qo;if(i!==t)if(Debug&&U.r(t,Shape,\"strokeWidth\"),t>=0){this.qo=t,this.u();const e=this.part;e!==null&&e.pc(),this.t(\"strokeWidth\",i,t)}else U.U(t,\"value >= 0\",Shape,\"strokeWidth:value\")}M0(){return this.qo}get strokeCap(){return this.$t!==null?this.$t.bp:\"butt\"}set strokeCap(t){const i=this.strokeCap;i!==t&&(typeof t==\"string\"&&(t===\"butt\"||t===\"round\"||t===\"square\")?(this.Va().bp=t,this.L(),this.t(\"strokeCap\",i,t)):U.U(t,'\"butt\", \"round\", or \"square\"',Shape,\"strokeCap\"))}get strokeJoin(){return this.$t!==null?this.$t.kp:\"miter\"}set strokeJoin(t){const i=this.strokeJoin;i!==t&&(typeof t==\"string\"&&(t===\"miter\"||t===\"bevel\"||t===\"round\")?(this.Va().kp=t,this.L(),this.t(\"strokeJoin\",i,t)):U.U(t,'\"miter\", \"bevel\", or \"round\"',Shape,\"strokeJoin\"))}get strokeMiterLimit(){return this.$t!==null?this.$t.Sp:10}set strokeMiterLimit(t){const i=this.strokeMiterLimit;if(i!==t)if(Debug&&U.r(t,Shape,\"strokeMiterLimit\"),t>=1){this.Va().Sp=t,this.L();const e=this.part;e!==null&&e.pc(),this.t(\"strokeMiterLimit\",i,t)}else Debug&&U.U(t,\"value >= 1\",Shape,\"strokeWidth:value\")}get strokeDashArray(){return this.Ko}set strokeDashArray(t){const i=this.Ko;if(i!==t){if(t!==null&&!Array.isArray(t)&&U.Pi(t,\"Array\",Shape,\"strokeDashArray:value\"),t!==null){const e=t.length;let s=0;for(let n=0;n<e;n++){const o=t[n];(Debug&&typeof o!=\"number\"||!(o>=0)||!isFinite(o))&&U.n(\"strokeDashArray:value \"+o+\" at index \"+n+\" must be a positive number or zero.\"),s+=o}if(s===0){if(i===null)return;t=null}}this.Ko=t,this.L(),this.t(\"strokeDashArray\",i,t)}}get strokeDashOffset(){return this.$t!==null?this.$t.kh:0}set strokeDashOffset(t){const i=this.strokeDashOffset;i!==t&&(Debug&&U.r(t,Shape,\"strokeDashOffset\"),t>=0&&(this.Va().kh=t,this.L(),this.t(\"strokeDashOffset\",i,t)))}get figure(){return this.kd}set figure(t){const i=this.kd;if(i!==t){Debug&&U.i(t,\"string\",Shape,\"figure\");let e=Geo.rn[t];if(U.rt(e)?e=t:(e=Geo.rn[t.toLowerCase()],e||U.n(\"Unknown Shape.figure: \"+t)),i!==e){const s=this.part;s!==null&&s.pc(),this.kd=e,this.Cs=null,this.re(),this.u(),this.t(\"figure\",i,e)}}}get toArrow(){return this.Xt!==null?this.Xt.Mp:\"None\"}set toArrow(t){const i=this.toArrow;if(t===!0?t=\"Standard\":t===!1&&(t=\"\"),i!==t){Debug&&U.i(t,\"string\",Shape,\"toArrow\");const e=Shape.tT(t);e===null?U.n(\"Unknown Shape.toArrow: \"+t):i!==e&&(this.Xt===null&&(this.Xt=new LinkElementSettings),this.Xt.Mp=e,this.Cs=null,this.re(),this.u(),this.iT(e),this.t(\"toArrow\",i,e))}}get fromArrow(){return this.Xt!==null?this.Xt.Pp:\"None\"}set fromArrow(t){const i=this.fromArrow;if(t===!0?t=\"Standard\":t===!1&&(t=\"\"),i!==t){Debug&&U.i(t,\"string\",Shape,\"fromArrow\");const e=Shape.tT(t);e===null?U.n(\"Unknown Shape.fromArrow: \"+t):i!==e&&(this.Xt===null&&(this.Xt=new LinkElementSettings),this.Xt.Pp=e,this.Cs=null,this.re(),this.u(),this.iT(e),this.t(\"fromArrow\",i,e))}}iT(t){const i=this.diagram;if(i!==null&&i.undoManager.isUndoingRedoing)return;this.lI();const e=Spot.MiddleRight;this.toArrow!==\"None\"?(this.segmentIndex=-1,this.alignmentFocus=e):this.fromArrow!==\"None\"&&(this.segmentIndex=0,this.alignmentFocus=new Spot(1-e.x,e.y))}get spot1(){return this.$t!==null?this.$t.Kn:Spot.Default}set spot1(t){const i=this.spot1;i.equals(t)||(Debug&&U.e(t,Spot,Shape,\"spot1\"),t=t.N(),this.Va().Kn=t,this.u(),this.t(\"spot1\",i,t))}get spot2(){return this.$t!==null?this.$t.Un:Spot.Default}set spot2(t){const i=this.spot2;i.equals(t)||(Debug&&U.e(t,Spot,Shape,\"spot2\"),t=t.N(),this.Va().Un=t,this.u(),this.t(\"spot2\",i,t))}get parameter1(){return this.Sd}set parameter1(t){const i=this.Sd;i!==t&&(this.Sd=t,this.re(),this.u(),this.t(\"parameter1\",i,t))}get parameter2(){return this.Md}set parameter2(t){const i=this.Md;i!==t&&(this.Md=t,this.re(),this.u(),this.t(\"parameter2\",i,t))}get naturalBounds(){return this.qi}LI(){const t=this.desiredSize;if(!t.isReal()&&this.ft!==null){const i=this.ft.bounds;this.qi.c(i)}else this.qi.s(0,0,t.width,t.height)}get pathPattern(){return this.$t!==null?this.$t.Np:null}set pathPattern(t){const i=this.pathPattern;i!==t&&(Debug&&t!==null&&U.e(t,GraphObject,Shape,\"pathPattern\"),this.Va().Np=t,this.L(),this.t(\"pathPattern\",i,t))}get geometryStretch(){return this.$t!==null?this.$t.Cp:1}set geometryStretch(t){const i=this.geometryStretch;i!==t&&(U.j(t,GeometryStretch,\"GeometryStretch\"),this.Va().Cp=t,this.u(),this.t(\"geometryStretch\",i,t))}get interval(){return this.v!==null?this.v.wc:1}set interval(t){const i=this.interval;if(Debug&&U.r(t,Shape,\"interval\"),t=Math.round(t),i!==t&&t!==0&&isFinite(t)){this.v===null&&(this.v=new GradElementSettings),this.v.wc=t;const e=this.diagram;e!==null&&this.panel===e.grid&&e.lh(),this.u();const s=this.panel;s!==null&&(s.hs=null),this.t(\"interval\",i,t)}}get graduatedStart(){return this.v!==null?this.v.xc:0}set graduatedStart(t){const i=this.graduatedStart;Debug&&U.r(t,Shape,\"graduatedStart\"),i!==t&&(t<0?t=0:t>1&&(t=1),this.v===null&&(this.v=new GradElementSettings),this.v.xc=t,this.u(),this.t(\"graduatedStart\",i,t))}get graduatedEnd(){return this.v!==null?this.v.bc:1}set graduatedEnd(t){const i=this.graduatedEnd;Debug&&U.r(t,Shape,\"graduatedEnd\"),i!==t&&(t<0?t=0:t>1&&(t=1),this.v===null&&(this.v=new GradElementSettings),this.v.bc=t,this.u(),this.t(\"graduatedEnd\",i,t))}get graduatedSkip(){return this.v!==null?this.v.kc:null}set graduatedSkip(t){const i=this.graduatedSkip;i!==t&&(t!==null&&U.P(t,Shape,\"graduatedSkip\"),this.v===null&&(this.v=new GradElementSettings),this.v.kc=t,this.u(),this.t(\"graduatedSkip\",i,t))}static jI(t,i,e){let n=null;if(t.toArrow!==\"None\")n=Shape.bn[t.toArrow];else if(t.fromArrow!==\"None\")n=Shape.bn[t.fromArrow];else{let o=Geo.rn[t.figure];typeof o==\"string\"&&(o=Geo.rn[o]),o===void 0&&U.n(\"Unknown Shape.figure: \"+t.figure),n=o(t,i,e),n.gf=i,n.mf=e}if(n===null){const o=Geo.rn.Rectangle;U.rt(o)&&(n=o(t,i,e))}return Debug&&(n.bounds.width>i+1e-5||n.bounds.height>e+1e-5)&&U.n('Geometry made with figure \"'+t.figure+'\" has bounds '+n.bounds.toString()+\" that are too large for the given size (\"+i+\",\"+e+\"). See documentation for Shape.defineFigureGenerator.\"),n}static getFigureGenerators(){const t=new GMap;for(const i in Geo.rn){if(i===i.toLowerCase())continue;const e=Geo.rn[i];t.set(i,e)}return t.p(),t}static defineFigureGenerator(t,i){U.i(t,\"string\",Shape,\"defineFigureGenerator:name\"),typeof i==\"string\"?Debug&&(i===\"\"||!Geo.rn[i])&&U.n(\"Shape.defineFigureGenerator synonym must not be empty or None or not a defined figure name: \"+i):U.P(i,Shape,\"defineFigureGenerator:func\");const e=t.toLowerCase();Debug&&(t===\"\"||t===e)&&U.n(\"Shape.defineFigureGenerator name must not be empty or all-lower-case: \"+t);const s=Geo.rn;s[t]=i,s[e]=t}static isFigureDefined(t){return Geo.rn.has(t)}static getArrowheadGeometries(){const t=new GMap;for(const i in Geo.qg)if(Shape.bn[i]===void 0){const e=Geometry.parse(Geo.qg[i],!1);Shape.bn[i]=e;const s=i.toLowerCase();s!==i&&(Shape.bn[s]=i)}for(const i in Shape.bn){if(i===i.toLowerCase())continue;const e=Shape.bn[i];e instanceof Geometry&&t.set(i,e)}return t.p(),t}static defineArrowheadGeometry(t,i){U.i(t,\"string\",Shape,\"defineArrowheadGeometry:name\");let e=null;typeof i==\"string\"?(U.i(i,\"string\",Shape,\"defineArrowheadGeometry:pathstr\"),e=Geometry.parse(i,!1)):(U.e(i,Geometry,Shape,\"defineArrowheadGeometry:pathstr\"),e=i);const s=t.toLowerCase();(Debug&&t===\"\"||s===\"none\"||t===s)&&U.n(\"Shape.defineArrowheadGeometry name must not be empty or None or all-lower-case: \"+t);const n=Shape.bn;n[t]=e,n[s]=t}static isArrowheadDefined(t){return Shape.bn.has(t)}static bn=new PropertyCollection;static tN=new PropertyCollection;static tT(t){let i=Shape.bn[t];if(i===void 0){const e=t.toLowerCase();if(e===\"none\")return\"None\";if(i=Shape.bn[e],i===void 0){let s=null;for(const n in Geo.qg)if(n.toLowerCase()===e){s=n;break}if(s!==null){const n=Geometry.parse(Geo.qg[s],!1);return Shape.bn[s]=n,e!==s&&(Shape.bn[e]=s),s}}}return typeof i==\"string\"?i:i instanceof Geometry?t:null}}class ShapeTemplateSettings{mi;bp;kp;Sp;kh;Np;Cp;Kn;Un;constructor(){this.mi=!1,this.bp=\"butt\",this.kp=\"miter\",this.Sp=10,this.kh=0,this.Np=null,this.Cp=1,this.Kn=Spot.Default,this.Un=Spot.Default}copy(){const t=new ShapeTemplateSettings;return t.bp=this.bp,t.kp=this.kp,t.Sp=this.Sp,t.kh=this.kh,t.Np=this.Np,t.Cp=this.Cp,t.Kn=this.Kn.N(),t.Un=this.Un.N(),t}}var Wrap=(y=>(y[y.None=0]=\"None\",y[y.Fit=1]=\"Fit\",y[y.DesiredSize=2]=\"DesiredSize\",y[y.BreakAll=3]=\"BreakAll\",y))(Wrap||{}),TextOverflow=(y=>(y[y.Clip=0]=\"Clip\",y[y.Ellipsis=1]=\"Ellipsis\",y))(TextOverflow||{}),TextFormat=(y=>(y[y.Trim=0]=\"Trim\",y[y.None=1]=\"None\",y))(TextFormat||{});class TextBlock extends GraphObject{fi;$i;kn;we;pi;P0;Nd;v;ct;El;ro;Sn;Fe;Oi;Mn;constructor(t,i){return super(),TextBlock.tp===!1&&(TextBlock.tp=!0,TextBlock.no=Diagram.isUsingDOM()?new CanvasSurface(null).ci:null),this.l|=2097152,this.fi=\"\",this.$i=\"black\",this.kn=\"13px sans-serif\",this.we=0,this.pi=0,this.P0=0,this.Nd=null,this.v=null,this.ct=null,this.El=0,this.ro=null,this.Sn=0,this.Fe=null,this.Oi=null,this.Mn=null,typeof t==\"string\"?this.text=t:t&&Object.assign(this,t),i&&Object.assign(this,i),this}cloneProtected(t){super.cloneProtected(t),t.fi=this.fi,t.$i=this.$i,t.kn=this.kn,t.we=this.we,t.pi=this.pi,t.P0=this.P0,t.Nd=this.Nd,this.v!==null&&(t.v=this.v.copy()),this.ct!==null&&(this.ct.mi?t.ct=this.ct:t.ct=this.ct.copy()),t.El=this.El,t.ro=this.ro,t.Sn=this.Sn,t.Fe=this.Fe,t.Oi=this.Oi,t.Mn=this.Mn}Pn(){return this.ct===null?this.ct=new TextBlockTemplateSettings:this.ct.mi&&(this.ct=this.ct.copy()),this.ct}mh(){super.mh(),this.ct!==null&&(this.ct.mi=!0)}EI(t){this.l=t.l|2048|4096,this.ii=t.opacity,this.Rt=t.background,this.rs=t.desiredSize.N(),this.minSize=t.minSize.N(),this.maxSize=t.maxSize.N(),t.Si!==null?this.Si=t.Si.copy():this.Si=null,this.ot=t.scale,this.jt=t.angle,this.stretch=t.stretch,this.tl=t.margin.N(),this.ui=t.alignment.N(),this.Qu=t.alignmentFocus.N(),this.segmentFraction=t.segmentFraction,this.segmentOffset=t.segmentOffset.N(),this.segmentOrientation=t.segmentOrientation,t.hi!==null&&(this.hi=t.hi.copy()),this.shadowVisible=t.shadowVisible,this.fi=t.fi,this.$i=t.$i,this.kn=t.kn,this.v!==null&&(this.v=t.v.copy()),t.ct!==null&&(t.ct.mi?this.ct=t.ct:this.ct=t.ct.copy()),this.El=t.El}II(t){if(this.fi=t.text||\"\",this.jt=t.labelAngle||0,this.we=t.lineCount||0,this.ZI(t.lines),t.naturalBounds&&(this.qi=t.naturalBounds),t.actualBounds){const i=t.actualBounds;this.Gt(i.x,i.y,i.width,i.height)}}ai(t){t in Wrap?this.wrap=t:super.ai(t)}toString(){return this.fi.length>22?'TextBlock(\"'+this.fi.substring(0,20)+'\"...)':'TextBlock(\"'+this.fi+'\")'}static getEllipsis(){return TextBlock.Ap}static setEllipsis(t){TextBlock.Ap=t,TextBlock.wb=new PropertyCollection,TextBlock.iN=0}static getBaseline(){return TextBlock.xb}static setBaseline(t){TextBlock.xb=t}static xb=null;static getUnderline(){return TextBlock.bb}static setUnderline(t){TextBlock.bb=t}static bb=null;static None=0;static WrapFit=1;static WrapDesiredSize=2;static WrapBreakAll=3;static OverflowClip=0;static OverflowEllipsis=1;static FormatTrim=0;static FormatNone=1;u(){super.u(),this.He(!0)}get font(){return this.kn}set font(t){const i=this.kn;i!==t&&(Debug&&(U.i(t,\"string\",TextBlock,\"font\"),TextBlock.isValidFont(t)||U.n('Not a valid font: \"'+t+'\"')),this.kn=t,this.ro=null,this.u(),this.t(\"font\",i,t))}static isValidFont(t){return root.CSS?root.CSS.supports(\"font\",t):!0}get text(){return this.fi}set text(t){const i=this.fi;t!=null?t=t.toString():t=\"\",i!==t&&(this.fi=t,this.u(),this.t(\"text\",i,t))}get textAlign(){return this.ct!==null?this.ct.Lp:\"start\"}set textAlign(t){const i=this.textAlign;i!==t&&(Debug&&U.i(t,\"string\",TextBlock,\"textAlign\"),t===\"start\"||t===\"end\"||t===\"left\"||t===\"right\"||t===\"center\"?(this.Pn().Lp=t,this.L(),this.t(\"textAlign\",i,t)):Debug&&U.U(t,'\"start\", \"end\", \"left\", \"right\", or \"center\"',TextBlock,\"textAlign\"))}get flip(){return this.ct!==null?this.ct.lo:0}set flip(t){const i=this.flip;i!==t&&(U.j(t,Flip,\"Flip\"),this.Pn().lo=t,this.L(),this.t(\"flip\",i,t))}get verticalAlignment(){return this.ct!==null?this.ct.rl:Spot.Top}set verticalAlignment(t){const i=this.verticalAlignment;i.equals(t)||(Debug&&(U.e(t,Spot,TextBlock,\"verticalAlignment\"),t.isNoSpot()&&U.n(\"TextBlock.verticalAlignment for \"+this+\" must be a real Spot, not:\"+t)),t=t.N(),this.Pn().rl=t,this.hc(),this.t(\"verticalAlignment\",i,t))}get naturalBounds(){if(!this.qi.isReal()){const t=Size.a();this.eN(this.fi,999999,t);let i=t.width;Size.o(t);let e=this.eT(i);const s=this.desiredSize;isNaN(s.width)||(i=s.width),isNaN(s.height)||(e=s.height),this.qi.Vn(i,e)}return this.qi}get isMultiline(){return(this.l&2097152)!==0}set isMultiline(t){const i=(this.l&2097152)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",TextBlock,\"isMultiline\"),this.l=this.l^2097152,this.u(),this.t(\"isMultiline\",i,t))}get isUnderline(){return(this.l&4194304)!==0}set isUnderline(t){const i=(this.l&4194304)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",TextBlock,\"isUnderline\"),this.l=this.l^4194304,this.He(!0),this.L(),this.t(\"isUnderline\",i,t))}get isStrikethrough(){return(this.l&8388608)!==0}set isStrikethrough(t){const i=(this.l&8388608)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",TextBlock,\"isStrikethrough\"),this.l=this.l^8388608,this.He(!0),this.L(),this.t(\"isStrikethrough\",i,t))}get wrap(){return this.ct!==null?this.ct.Tp:2}set wrap(t){const i=this.wrap;i!==t&&(Debug&&U.j(t,Wrap,\"Wrap\"),this.Pn().Tp=t,this.u(),this.t(\"wrap\",i,t))}get overflow(){return this.ct!==null?this.ct.Dp:0}set overflow(t){const i=this.overflow;i!==t&&(Debug&&U.j(t,TextOverflow,\"Overflow\"),this.Pn().Dp=t,this.u(),this.t(\"overflow\",i,t))}get isOverflowed(){return(this.l&16777216)!==0}sN(t){t?this.l|=16777216:this.l&=-16777217}get stroke(){return this.$i}set stroke(t){const i=this.$i;i!==t&&(t!==null&&Brush.rd(t,\"TextBlock.stroke\"),t instanceof Brush&&t.p(),this.$i=t,typeof t!=\"string\"&&this.oc(),this.L(),this.t(\"stroke\",i,t))}get lineCount(){return this.we}get lineHeight(){return this.Fp()}get editable(){return(this.l&1048576)!==0}set editable(t){const i=(this.l&1048576)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",TextBlock,\"editable\"),this.l=this.l^1048576,this.t(\"editable\",i,t))}get WP(){return(this.l&33554432)!==0}set WP(t){this.l=this.l^33554432}get textEditor(){return this.ct!==null?this.ct.Rp:null}set textEditor(t){const i=this.textEditor;i!==t&&(Debug&&!(t instanceof HTMLInfo)&&U.n(\"TextBlock.textEditor must be an HTMLInfo.\"),this.Pn().Rp=t,this.t(\"textEditor\",i,t))}get errorFunction(){return this.ct!==null?this.ct.as:null}set errorFunction(t){const i=this.errorFunction;i!==t&&(t!==null&&U.P(t,TextBlock,\"errorFunction\"),this.Pn().as=t,this.t(\"errorFunction\",i,t))}get interval(){return this.v!==null?this.v.wc:1}set interval(t){const i=this.interval;if(Debug&&U.r(t,TextBlock,\"interval\"),t=Math.round(t),i!==t&&t!==0&&isFinite(t)){this.v===null&&(this.v=new GradElementSettings),this.v.wc=t,this.u();const e=this.panel;e!==null&&(e.hs=null),this.t(\"interval\",i,t)}}get graduatedStart(){return this.v!==null?this.v.xc:0}set graduatedStart(t){const i=this.graduatedStart;Debug&&U.r(t,TextBlock,\"graduatedStart\"),i!==t&&(t<0?t=0:t>1&&(t=1),this.v===null&&(this.v=new GradElementSettings),this.v.xc=t,this.u(),this.t(\"graduatedStart\",i,t))}get graduatedEnd(){return this.v!==null?this.v.bc:1}set graduatedEnd(t){const i=this.graduatedEnd;Debug&&U.r(t,TextBlock,\"graduatedEnd\"),i!==t&&(t<0?t=0:t>1&&(t=1),this.v===null&&(this.v=new GradElementSettings),this.v.bc=t,this.u(),this.t(\"graduatedEnd\",i,t))}get graduatedFunction(){return this.v!==null?this.v.Ip:null}set graduatedFunction(t){const i=this.graduatedFunction;i!==t&&(t!==null&&U.P(t,TextBlock,\"graduatedFunction\"),this.v===null&&(this.v=new GradElementSettings),this.v.Ip=t,this.u(),this.t(\"graduatedFunction\",i,t))}get graduatedSkip(){return this.v!==null?this.v.kc:null}set graduatedSkip(t){const i=this.graduatedSkip;i!==t&&(t!==null&&U.P(t,TextBlock,\"graduatedSkip\"),this.v===null&&(this.v=new GradElementSettings),this.v.kc=t,this.u(),this.t(\"graduatedSkip\",i,t))}xh(t,i){if(this.$i===null||this.fi.length===0||this.kn===null)return;const e=this.naturalBounds,s=this.actualBounds,n=e.width,o=e.height,r=this.Fp();let l=t.textAlign=this.textAlign;const h=i.ju;l===\"start\"?l=h?\"right\":\"left\":l===\"end\"&&(l=h?\"left\":\"right\");const f=this.isUnderline,a=this.isStrikethrough;this.un(t,this.$i,!0,!1,e,s),(f||a)&&this.un(t,this.$i,!1,!1,e,s);const c=0;let u=0;const d=n;let m=!1;i.si===t&&!(i.si instanceof SVGContext)&&!this.WP&&i.getRenderingHint(\"textGreeking\")===!0&&r*this.ba*i.scale<3&&(m=!0);const g=this.spacingAbove,p=this.spacingBelow;switch(this.flip){case 0:break;case 2:t.translate(n,0),t.scale(-1,1);break;case 1:t.translate(0,o),t.scale(1,-1);break;case 3:t.translate(n,o),t.scale(-1,-1);break}t.commitTransform();const w=this.we,k=(g+r+p)*w;if(o>k){const b=this.verticalAlignment;u=b.y*o-b.y*k+b.offsetY}if(w===1&&this.Mn!==null){let b=this.pi;b>d&&(b=d),u+=g,this.sT(this.Mn,t,c,u,d,r,b,m,l,f,a)}else if(this.Fe!==null&&this.Oi!==null)for(let b=0;b<w;b++){let S=this.Fe[b];S>d&&(S=d),u+=g,this.sT(this.Oi[b],t,c,u,d,r,S,m,l,f,a),u+=r+p}switch(this.flip){case 0:break;case 2:t.scale(-1,1),t.translate(-n,0);break;case 1:t.scale(1,-1),t.translate(0,-o);break;case 3:t.scale(-1,-1),t.translate(-n,-o);break}}sT(t,i,e,s,n,o,r,l,h,f,a){let c=0;if(l){h===\"left\"?c=0:h===\"right\"?c=n-r:h===\"center\"&&(c=(n-r)/2);const m=i.globalAlpha;i.globalAlpha=m/2,i.fillRect(e+c,s+o/4,r,o/2),i.globalAlpha=m;return}h===\"left\"?c=0:h===\"right\"?c=n:h===\"center\"&&(c=n/2);const u=TextBlock.xb!==null?TextBlock.xb(this,o):o*.75;i.fillText(t,e+c,s+u);let d=o/20|0;if(d===0&&(d=1),h===\"right\"?c-=r:h===\"center\"&&(c-=r/2),f){const m=TextBlock.bb!==null?TextBlock.bb(this,o):o*.8;this.nT(e+c,s+m,e+c+r,s+m,d,i),i instanceof SVGContext&&i.lastCreatedElement.classList.add(\"gojs-td\")}if(a){let m=s+o-o/2.2|0;d%2!==0&&(m+=.5),this.nT(e+c,m,e+c+r,m,d,i),i instanceof SVGContext&&i.lastCreatedElement.classList.add(\"gojs-td\")}}nT(t,i,e,s,n,o){o.beginPath(),o.lineWidth=n,o.moveTo(t,i),o.lineTo(e,s),o.stroke(),o.endPath()}nc(t,i,e){if(!super.nc(t,i,e))return!1;if(this.un(t,this.$i,!0,!1,this.naturalBounds,this.actualBounds),e){if(this.svg.getElementsByTagName(\"text\").length===0)return!0;const n=this.svg.getElementsByClassName(\"gojs-td\");for(let o=0;o<n.length;o++)t.setFillOrStrokeInPlace(n[o],!1)}else this.QI(this.svg,this.text,t);return!0}QI(t,i,e){t.innerHTML=i,e.setFillOrStrokeInPlace(t,!0)}nd(t){return this.lineCount>1||this.isUnderline||this.isStrikethrough?!0:super.nd(t)}LP(t,i){if(t.nodeName!==\"g\")t.setAttributeNS(null,\"filter\",i);else{const e=t.getElementsByTagName(\"text\");for(let s=0;s<e.length;s++)e[s].setAttributeNS(null,\"filter\",i)}}_I(){this.Sn=0,this.pi=0,this.ro=null,this.Fe=null,this.Oi=null,this.Mn=null}ed(t,i,e,s){const n=this.we;this.El=t,this.sN(!1);const o=this.kn;TextBlock.no!==null&&TextBlock.oT!==o&&(TextBlock.no.font=o,TextBlock.oT=o),this._I();let r=0,l=0;isNaN(this.desiredSize.width)?(r=this.tO(),r=Math.min(r,t/this.scale)):r=this.desiredSize.width,this.panel!==null&&(r=Math.min(r,this.panel.maxSize.width)),l=this.eT(r),isNaN(this.desiredSize.height)?l=Math.min(l,i/this.scale):l=this.desiredSize.height,this.iO(t,l),(this.wrap===1||isNaN(this.desiredSize.width))&&(r=isNaN(t)?this.pi:Math.min(t,this.pi)),r=Math.max(e,r),l=Math.max(s,l),this.qi.Vn(r,l),this._n(0,0,r,l),this.svg!==null&&n!==this.we&&this.He(!0)}yh(t,i,e,s){this.commonArrange(t,i,e,s)}Nn(t,i){this.Mn===null?(this.Mn=t,this.pi=i):((this.Oi===null||this.Fe===null)&&(this.Oi=[],this.Fe=[],this.Oi.push(this.Mn),this.Fe.push(this.pi)),this.Oi.push(t),this.Fe.push(i),this.Oi.length>this.maxLines&&(this.l|=16777216))}eN(t,i,e){const s=this.formatting===0;s&&(t=t.trim());let n=0,o=0,r=0;const l=this.kn,h=this.spacingAbove+this.spacingBelow,f=Math.max(0,this.Fp()+h),a=this.overflow===1?this.rT(l):0;if(this.we>=this.maxLines){e!==null&&e.s(0,f);return}let c=t;if(this.wrap===0){if(this.Sn=1,o=this.getStringWidth(t),a===0||o<=i){this.pi=Math.max(this.pi,o),this.Nn(t,this.pi),e!==null&&e.s(o,f);return}let d=this.Cd(c);c=c.substring(d.length);let m=this.Cd(c);for(o=this.getStringWidth(d+m),r=0;m.length>0&&o<=i;){d+=m,c=c.substring(m.length),m=this.Cd(c),r=o;let g=d+m;s&&(g=g.trim()),o=this.getStringWidth(g)}for(s&&(m=m.trim()),d+=m,i=Math.max(1,i-a);this.getStringWidth(d)>i&&d.length>1;)d=d.substring(0,d.length-1);this.sN(!0),d+=TextBlock.Ap,r=this.getStringWidth(d),this.pi=r,this.Nn(d,r),e!==null&&e.s(r,f);return}let u=0;for(c.length===0&&(u=1,this.Nn(c,0));c.length>0;){let d=this.Cd(c);for(c=c.substring(d.length);this.getStringWidth(d)>i;){let p=1;for(o=this.getStringWidth(d.substring(0,p)),r=0;o<=i;)p++,r=o,o=this.getStringWidth(d.substring(0,p));let w=0;p===1?(w=o,n=Math.max(n,o)):(w=r,n=Math.max(n,r)),p--,p<1&&(p=1);const x=d.substring(0,p);if(this.Nn(x,w),u++,d=d.substring(p),this.we+u>this.maxLines)break}let m=this.Cd(c);for(o=this.getStringWidth(d+m),r=0;m.length>0&&o<=i;){d+=m,c=c.substring(m.length),m=this.Cd(c),r=o;let p=d+m;s&&(p=p.trim()),o=this.getStringWidth(p)}if(s&&(d=d.trim()),d===\"\")continue;d[d.length-1]===\"\\xAD\"&&(d=d.substring(0,d.length-1)+\"\\u2010\");let g=0;if(m.length===0?(g=o,n=Math.max(n,o)):(r=this.getStringWidth(d),g=r,n=Math.max(n,r)),this.Nn(d,g),u++,this.we+u>this.maxLines)break}this.Sn=Math.min(this.maxLines-this.we,u),this.pi=Math.max(this.pi,n),e!==null&&e.s(this.pi,f*this.Sn)}iO(t,i){if(this.pi===0||this.Fe===null||this.Oi===null||this.overflow!==1)return;const e=this.kn,s=this.overflow===1?this.rT(e):0,n=this.spacingAbove+this.spacingBelow,o=Math.max(0,this.Fp()+n),r=Math.min(this.maxLines-1,Math.max(Math.floor(i/o+.01)-1,0));if(r+1>=this.Oi.length)return;this.sN(!0);let l=this.Oi[r];const h=Math.max(1,t-s);for(;this.getStringWidth(l)>h&&l.length>1;)l=l.substring(0,l.length-1);l+=TextBlock.Ap;const f=this.getStringWidth(l);this.Oi[r]=l,this.Oi=this.Oi.slice(0,r+1),this.Fe[r]=f,this.Fe=this.Fe.slice(0,r+1),this.Sn=this.Oi.length,this.pi=Math.max(this.pi,f),this.we=this.Sn,this.we===1&&(this.Mn=this.Oi[0])}Cd(t){if(this.wrap===3)return t.substring(0,1);let i=t.length,e=0;const s=TextBlock.eO;for(;e<i&&!s.test(t.charAt(e));)e++;for(this.formatting===1&&(i=Math.min(i,e+1));e<i&&s.test(t.charAt(e));)e++;return e>=t.length?t:t.substring(0,e)}getStringWidth(t){return TextBlock.no===null?t.length*8:TextBlock.no.measureText(t).width}Fp(){if(this.ro!==null)return this.ro;const t=this.kn;let i=0;return TextBlock.no===null?(i=16,this.ro=i,i):(TextBlock.nN[t]!==void 0&&TextBlock.lT<5e3?i=TextBlock.nN[t]:(i=TextBlock.no.measureText(\"M\").width*1.3,TextBlock.nN[t]=i,TextBlock.lT++),this.ro=i,i)}rT(t){if(TextBlock.no===null)return 6;let i=0;return TextBlock.wb[t]!==void 0&&TextBlock.iN<5e3?i=TextBlock.wb[t]:(i=TextBlock.no.measureText(TextBlock.Ap).width,TextBlock.wb[t]=i,TextBlock.iN++),i}kb(t,i){return t.indexOf(`\n`,i)}eT(t){let i=this.fi.replace(/\\r\\n/g,`\n`).replace(/\\r/g,`\n`);const e=this.spacingAbove+this.spacingBelow,s=Math.max(0,this.Fp()+e);if(i.length===0)return this.pi=0,this.we=1,s;if(!this.isMultiline){const h=this.kb(i,0);h>=0&&(i=i.substring(0,h))}let n=0;this.we=0;let o=0,r=-1,l=!1;for(;!l;){if(r=this.kb(i,o),r===-1&&(r=i.length,l=!0),o<=r){const h=i.substring(o,r);if(this.wrap!==0){this.Sn=0;const f=Size.a();this.eN(h,t,f),n+=f.height,Size.o(f),this.we+=this.Sn}else this.eN(h,t,null),n+=s,this.we++;this.we===this.maxLines&&(l=!0)}o=r+1}return this.P0=n,n}tO(){let t=this.fi.replace(/\\r\\n/g,`\n`).replace(/\\r/g,`\n`);if(t.length===0)return 8;if(this.isMultiline){let i=0,e=0,s=!1;for(;!s;){let n=this.kb(t,e);n===-1&&(n=t.length,s=!0);let o=t.substring(e,n);this.formatting===0&&(o=o.trim()),i=Math.max(i,this.getStringWidth(o)),e=n+1}return i}else{const i=this.kb(t,0);return i>=0&&(t=t.substring(0,i)),this.getStringWidth(t)}}get textValidation(){return this.ct!==null?this.ct.Ol:null}set textValidation(t){const i=this.textValidation;i!==t&&(t!==null&&U.P(t,TextBlock,\"textValidation\"),this.Pn().Ol=t,this.t(\"textValidation\",i,t))}get textEdited(){return this.ct!==null?this.ct.Op:null}set textEdited(t){const i=this.textEdited;i!==t&&(t!==null&&U.P(t,TextBlock,\"textEdited\"),this.Pn().Op=t,this.t(\"textEdited\",i,t))}get spacingAbove(){return this.ct!==null?this.ct.Ep:0}set spacingAbove(t){const i=this.spacingAbove;i!==t&&(Debug&&U.i(t,\"number\",TextBlock,\"spacingAbove\"),this.Pn().Ep=t,this.u(),this.t(\"spacingAbove\",i,t))}get spacingBelow(){return this.ct!==null?this.ct.Bp:0}set spacingBelow(t){const i=this.spacingBelow;i!==t&&(Debug&&U.i(t,\"number\",TextBlock,\"spacingBelow\"),this.Pn().Bp=t,this.u(),this.t(\"spacingBelow\",i,t))}get formatting(){return this.ct!==null?this.ct.Vp:0}set formatting(t){const i=this.formatting;i!==t&&(U.j(t,TextFormat,\"formatting\"),this.Pn().Vp=t,this.u(),this.t(\"formatting\",i,t))}get maxLines(){return this.ct!==null?this.ct.zp:1/0}set maxLines(t){const i=this.maxLines;i!==t&&(Debug&&U.i(t,\"number\",TextBlock,\"maxLines\"),t=Math.floor(t),t<=0&&U.U(t,\"> 0\",TextBlock,\"maxLines\"),this.Pn().zp=t,this.u(),this.t(\"maxLines\",i,t))}getMetrics(){return[this.pi,this.El,this.ro,this.Sn,this.Fe,this.Oi,this.Mn]}ZI(t){t!==void 0&&(this.pi=t[0],this.El=t[1],this.ro=t[2],this.Sn=t[3],this.Fe=t[4],this.Oi=t[5],this.Mn=t[6])}get metrics(){return{arrSize:this.Fe!==null?this.Fe:[this.pi],arrText:this.Oi!==null?this.Oi:[this.Mn],maxLineWidth:this.pi,fontHeight:this.ro}}get choices(){return this.Nd}set choices(t){const i=this.Nd;i!==t&&(Debug&&t!==null&&!Array.isArray(t)&&U.Pi(t,\"Array\",TextBlock,\"choices:value\"),this.Nd=t,this.t(\"choices\",i,t))}static eO=new RegExp(\"[ \\u200B\\xAD]\");static nN=new PropertyCollection;static lT=0;static wb=new PropertyCollection;static iN=0;static Ap=\"...\";static oT=\"\";static no=null;static tp=!1}class TextBlockTemplateSettings{mi;as;lo;Vp;zp;Dp;Ep;Bp;Lp;Op;Rp;Ol;rl;Tp;constructor(){this.mi=!1,this.as=null,this.lo=0,this.Vp=0,this.zp=1/0,this.Dp=0,this.Ep=0,this.Bp=0,this.Lp=\"start\",this.Op=null,this.Rp=null,this.Ol=null,this.rl=Spot.Top,this.Tp=2}copy(){const t=new TextBlockTemplateSettings;return t.as=this.as,t.lo=this.lo,t.Vp=this.Vp,t.zp=this.zp,t.Dp=this.Dp,t.Ep=this.Ep,t.Bp=this.Bp,t.Lp=this.Lp,t.Op=this.Op,t.Rp=this.Rp,t.Ol=this.Ol,t.rl=this.rl,t.Tp=this.Tp,t}}class GradElementSettings{wc;xc;bc;Ip;kc;constructor(){this.wc=1,this.xc=0,this.bc=1,this.Ip=null,this.kc=null}copy(){const t=new GradElementSettings;return t.wc=this.wc,t.xc=this.xc,t.bc=this.bc,t.Ip=this.Ip,t.kc=this.kc,t}}var ImageStretch=(y=>(y[y.None=0]=\"None\",y[y.Fill=2]=\"Fill\",y[y.Uniform=6]=\"Uniform\",y[y.UniformToFill=7]=\"UniformToFill\",y))(ImageStretch||{});class Picture extends GraphObject{ll;bt;hl;Sc;as;al;Mc;lo;Pc;Nc;tb;constructor(t,i){super(),this.l|=2097152,this.ll=null,this.bt=\"\",this.hl=Rect.sF,this.Sc=2,this.as=null,this.al=null,this.Mc=Spot.Center,this.lo=0,this.Pc=null,this.Nc=null,this.tb=null,typeof t==\"string\"?this.source=t:t&&Object.assign(this,t),i&&Object.assign(this,i)}cloneProtected(t){super.cloneProtected(t),t.bt=this.bt,t.element=this.ll,t.hl=this.hl.N(),t.Sc=this.Sc,t.lo=this.lo,t.as=this.as,t.al=this.al,t.Mc=this.Mc.N(),t.Nc=this.Nc}ai(t){t in ImageStretch?this.imageStretch=t:super.ai(t)}toString(){return\"Picture(\"+this.source+\")#\"+GSet.gs(this)}get Cc(){return(this.l&1048576)!==0}set Cc(t){this.Cc!==t&&(this.l=this.l^1048576)}get Xa(){return(this.l&2097152)!==0}set Xa(t){this.Xa!==t&&(this.l=this.l^2097152)}get gn(){return(this.l&4194304)!==0}set gn(t){this.gn!==t&&(this.l=this.l^4194304)}static clearCache(t){t===void 0&&(t=\"\"),U.i(t,\"string\",Picture,\"clearCache:url\"),t!==\"\"?Picture.Xp[t]&&(delete Picture.Xp[t],Picture.Sb--):(Picture.Xp=new PropertyCollection,Picture.Sb=0)}static oL(t,i){i.hT||(i.Mb=e=>{Picture.sO(i,e),t.desiredSize.isReal()||(t.pe(!1),t.u())},i.Pb=e=>Picture.nO(i,e),i.addEventListener(\"load\",i.Mb),i.addEventListener(\"error\",i.Pb),i.hT=!0)}static qR(t){t.Mb&&t.removeEventListener(\"load\",t.Mb),t.Pb&&t.removeEventListener(\"error\",t.Pb),delete t.Mb,delete t.Pb,delete t.hT}get element(){return this.ll}set element(t){const i=this.ll;if(this.He(!0),i!==t){this.Cc=t instanceof HTMLCanvasElement;const e=t instanceof HTMLImageElement;t!==null&&!(e||t instanceof HTMLVideoElement||this.Cc)&&U.n(\"Picture.element must be an instance of Image, Canvas, or Video, not: \"+t);const s=this.diagram;s!==null&&s.tP(this),this.ll=t,t!==null&&e&&t.os===void 0&&(t.os=new GSet),s!==null&&e&&s._2(this),this.t(\"element\",i,t),this.L()}}GR(){const t=this.ll;if(t===null)return;const i=this.desiredSize.isReal();(this.Cc||t.complete===!0)&&(t.u0&&(t.Yp instanceof Event&&this.as!==null?this.as(this,t.Yp):t.gn===!0&&!t.Yp&&this.al!==null&&t.oN&&this.al(this,t.oN)),t.gn=!0),t.gn&&i&&this.diagram!==null&&this.diagram.Wu.add(this)}oO(){if(this.ll===null){this.Pc=!1;return}const t=new CanvasSurface(null).ci;try{t.drawImage(this.ll,0,0)}catch(i){Debug&&this.Xa&&U.nt(i.toString()),this.Xa=!1}try{t.getImageData(0,0,1,1).data[3]&&(this.Pc=!1),this.Pc=!1}catch{this.Pc=!0}}get source(){return this.bt}set source(t){const i=this.bt;if(i!==t){this.He(!0),U.i(t,\"string\",Picture,\"source\"),this.bt=t;let e=Picture.Xp;if(!Diagram.isUsingDOM()){this.t(\"source\",i,t);return}let s=null;if(e[t]!==void 0)s=e[t];else if(t!==\"\"){Picture.Sb>30&&(Picture.clearCache(),e=Picture.Xp),s=U.ds(\"img\"),s.u0=!0,Picture.oL(this,s);const n=this.Nc;n!==null&&(s.crossOrigin=n(this)),s.src=t,e[t]=s,Picture.Sb++}this.element=s,s!==null&&s.__goCache===void 0&&(s.__goCache=new PictureCacheArray),this.u(),this.L(),this.t(\"source\",i,t)}}static sO(t,i){t.gn=!0,t.Yp=!1;let e;const s=t.os.copy();if(s==null)return;const n=s.iterator;for(;n.next();){const o=n.value;o.L();const r=t.getAttribute(\"src\")||\"\",l=o.th.get(r);if(l===null)continue;const h=l.length;for(let f=0;f<h;f++)e=l[f],e.desiredSize.isReal()||o.Wu.add(e),e.He(!0),o.requestUpdate(),t.u0&&(t.oN===void 0&&(t.oN=i),e.al!==null&&e.al(e,i))}t.os.clear()}static nO(t,i){t.Yp=i;let e;const s=t.os.copy();if(s==null)return;const n=s.iterator;for(;n.next();){const o=n.value,r=t.getAttribute(\"src\")||\"\",l=o.th.get(r);if(l===null)continue;const h=l.length,f=U.lt();for(let a=0;a<h;a++)f.push(l[a]);if(t.u0)for(let a=0;a<h;a++)e=f[a],e.as!==null&&e.as(e,i);U.tt(f)}t.os.clear()}reloadSource(){if(this.source===\"\")return;Picture.clearCache(this.source);const t=this.source;this.source=\"\",this.source=t}redraw(){this.L(),this.He(!0)}get sourceCrossOrigin(){return this.Nc}set sourceCrossOrigin(t){if(this.Nc!==t&&(t!==null&&U.P(t,Picture,\"sourceCrossOrigin\"),this.Nc=t,this.element!==null)){const e=this.element.getAttribute(\"src\");t===null&&typeof e==\"string\"?this.element.crossOrigin=null:t!==null&&(this.element.crossOrigin=t(this)),this.element.src=e}}get sourceRect(){return this.hl}set sourceRect(t){const i=this.hl;i.equals(t)||(U.e(t,Rect,Picture,\"sourceRect\"),t=t.N(),this.hl=t,this.L(),this.t(\"sourceRect\",i,t))}get imageStretch(){return this.Sc}set imageStretch(t){const i=this.Sc;i!==t&&(U.j(t,ImageStretch,\"ImageStretch\"),this.Sc=t,this.L(),this.t(\"imageStretch\",i,t))}get flip(){return this.lo}set flip(t){const i=this.lo;i!==t&&(U.j(t,Flip,\"Flip\"),this.lo=t,this.L(),this.t(\"flip\",i,t))}get imageAlignment(){return this.Mc}set imageAlignment(t){U.e(t,Spot,Picture,\"imageAlignment\");const i=this.Mc;i.equals(t)||(t=t.N(),this.Mc=t,this.L(),this.t(\"imageAlignment\",i,t))}get errorFunction(){return this.as}set errorFunction(t){const i=this.as;i!==t&&(t!==null&&U.P(t,Picture,\"errorFunction\"),this.as=t,this.t(\"errorFunction\",i,t))}get successFunction(){return this.al}set successFunction(t){const i=this.al;i!==t&&(t!==null&&U.P(t,Picture,\"successFunction\"),this.al=t,this.t(\"successFunction\",i,t))}xh(t,i){const e=this.ll;if(e===null)return;const s=e.getAttribute(\"src\");if(e instanceof HTMLImageElement&&(s===null||s===\"\")||e.Yp instanceof Event&&t instanceof CanvasSurfaceContext)return;const n=t instanceof SVGContext,o=this.naturalBounds;let r=0,l=0;const h=this.Cc;let f=h?+e.width:e.naturalWidth,a=h?+e.height:e.naturalHeight;if(f===void 0&&e.videoWidth&&(f=e.videoWidth),a===void 0&&e.videoHeight&&(a=e.videoHeight),f===0||a===0)return;const c=f,u=a;this.sourceRect.isReal()&&(r=this.hl.x,l=this.hl.y,f=this.hl.width,a=this.hl.height);let d=f,m=a;const g=this.Sc,p=this.Mc;switch(g){case 0:if(this.sourceRect.isReal())break;d>=o.width&&(r=r+p.offsetX+(d*p.x-o.width*p.x)),m>=o.height&&(l=l+p.offsetY+(m*p.y-o.height*p.y)),f=Math.min(o.width,d),a=Math.min(o.height,m);break;case 2:d=o.width,m=o.height;break;case 6:case 7:let L=0;g===6?(L=Math.min(o.height/m,o.width/d),d*=L,m*=L):g===7&&(L=Math.max(o.height/m,o.width/d),d*=L,m*=L,d>=o.width&&(r=(r+p.offsetX+(d*p.x-o.width*p.x)/d)*f),m>=o.height&&(l=(l+p.offsetY+(m*p.y-o.height*p.y)/m)*a),f*=1/(d/o.width),a*=1/(m/o.height),d=o.width,m=o.height);break}const w=f*a,x=this.getDocumentScale()*i.scale,k=d*x,b=m*x,S=k*b,M=w/S,A=e.__goCache;let C=null;const P=Picture.rO;if(!n){if(e.gn&&A!==void 0&&c<8e3&&u<8e3&&S>4&&M>P*P){A.Ht===null&&(A.aT(4,c,u,e),A.aT(16,c,u,e));const L=A.Ht,D=L.length;for(let F=0;F<D&&L[F].Ad*L[F].Ad<M;F++)C=L[F]}if(!i.qu&&(this.Pc===null&&this.oO(),this.Pc))return}const N=d<o.width?p.offsetX+(o.width*p.x-d*p.x):0,T=m<o.height?p.offsetY+(o.height*p.y-m*p.y):0;switch(this.flip){case 0:break;case 2:t.translate(Math.min(o.width,d),0),t.scale(-1,1);break;case 1:t.translate(0,Math.min(o.height,m)),t.scale(1,-1);break;case 3:t.translate(Math.min(o.width,d),Math.min(o.height,m)),t.scale(-1,-1);break}if(t.commitTransform(),i.getRenderingHint(\"pictureRatioOptimization\")&&!i.la&&A!==void 0&&C!==null&&C.Ad!==1){t.save();const L=C.Ad;try{t.drawImage(C.bt,r/L,l/L,Math.min(C.bt.width,f/L),Math.min(C.bt.height,a/L),N,T,Math.min(o.width,d),Math.min(o.height,m)),t instanceof SVGContext&&(this.tb=[r/L,l/L,Math.min(C.bt.width,f/L),Math.min(C.bt.height,a/L),N,T,Math.min(o.width,d),Math.min(o.height,m)])}catch(D){Debug&&this.Xa&&U.nt(D.toString()),this.Xa=!1}t.restore()}else try{t.drawImage(e,r,l,f,a,N,T,Math.min(o.width,d),Math.min(o.height,m)),t instanceof SVGContext&&(this.tb=[r,l,f,a,N,T,Math.min(o.width,d),Math.min(o.height,m)])}catch(L){Debug&&this.Xa&&U.nt(L.toString()),this.Xa=!1}switch(this.flip){case 0:break;case 2:t.scale(-1,1),t.translate(-Math.min(o.width,d),0);break;case 1:t.scale(1,-1),t.translate(0,-Math.min(o.height,m));break;case 3:t.scale(-1,-1),t.translate(-Math.min(o.width,d),-Math.min(o.height,m));break}}get naturalBounds(){return this.qi}ed(t,i,e,s){const n=this.desiredSize,o=this.qs(!0),r=this.ll,l=this.Cc;let h=0,f=0;(l||!this.gn&&r&&r.complete)&&(this.gn=!0),r===null?(isFinite(n.width)||(t=e),isFinite(n.height)||(i=s)):(h=l?+r.width:r.naturalWidth,f=l?+r.height:r.naturalHeight),!isFinite(n.width)&&o!==2&&o!==5?r!==null&&this.gn!==!1&&(this.sourceRect.isReal()?t=this.sourceRect.width:t=h):(isFinite(t)||(this.sourceRect.isReal()?t=this.sourceRect.width:r!==null&&(t=h)),e=0),!isFinite(n.height)&&o!==2&&o!==4?r!==null&&this.gn!==!1&&(this.sourceRect.isReal()?i=this.sourceRect.height:i=f):(isFinite(i)||(this.sourceRect.isReal()?i=this.sourceRect.height:r!==null&&(i=f)),s=0),isFinite(n.width)&&(t=n.width),isFinite(n.height)&&(i=n.height);const a=this.maxSize,c=this.minSize;e=Math.max(e||0,c.width),s=Math.max(s||0,c.height),t=Math.min(a.width,t),i=Math.min(a.height,i),t=Math.max(e,t),i=Math.max(s,i),r!==null&&!r.complete&&(isFinite(t)||(t=0),isFinite(i)||(i=0)),this.qi.Vn(t,i),this._n(0,0,t,i)}yh(t,i,e,s){this.commonArrange(t,i,e,s)}static Xp=new PropertyCollection;static Sb=0;static rO=4}class PictureCacheArray{Ht;constructor(){this.Ht=null}aT(t,i,e,s){this.Ht===null&&(this.Ht=[]);const n=new CanvasSurface(null),o=n.ci,r=1/t;if(n.width=i/t,n.height=e/t,n.width===0||n.height===0)return;const l=new PictureCacheInstance(n.Et,t);let h=s,f=1;if(this.Ht.length>0){const a=this.Ht[this.Ht.length-1];h=a.bt,f=a.Ad}o.setTransform(r*f,0,0,r*f,0,0),o.commitTransform(),o.drawImage(h,0,0),this.Ht.push(l)}}class PictureCacheInstance{bt;Ad;constructor(t,i){this.bt=t,this.Ad=i}}class GeoStream{Ni;$g;constructor(){this.$g=new Geometry,this.Ni=null}Vi(t){t!==null?(this.$g=t,t.figures.clear()):this.$g=new Geometry,this.Ni=null}gu(t,i,e,s,n,o){if(s!==void 0&&s===!0){const r=new PathSegment(1);r.endX=t,r.endY=i,this.Ni.segments.add(r)}else this.Ni=new PathFigure,this.Ni.startX=t,this.Ni.startY=i,this.Ni.isFilled=e,this.Ni.isEvenOdd=o||!1,this.$g.figures.add(this.Ni);n!==void 0&&(this.Ni.isShadowed=n)}dF(){const t=this.Ni.segments.length;t>0&&this.Ni.segments.elt(t-1).close()}gF(){this.Ni.segments.length>0&&(this.Ni.isFilled=!0)}mF(t){this.Ni.isShadowed=t}IE(t){this.Ni.isEvenOdd=t}fF(t,i,e){e===void 0&&(e=!1);const s=new PathSegment(1);s.endX=t,s.endY=i,e&&s.close(),this.Ni.segments.add(s)}dr(t,i,e){e===void 0&&(e=!1);const s=new PathSegment(2);s.endX=t,s.endY=i,e&&s.close(),this.Ni.segments.add(s)}gr(t,i,e,s,n,o,r){r===void 0&&(r=!1);const l=new PathSegment(3);l.point1X=t,l.point1Y=i,l.point2X=e,l.point2Y=s,l.endX=n,l.endY=o,r&&l.close(),this.Ni.segments.add(l)}Ow(t,i,e,s,n){n===void 0&&(n=!1);const o=new PathSegment(4);o.point1X=t,o.point1Y=i,o.endX=e,o.endY=s,n&&o.close(),this.Ni.segments.add(o)}cF(t,i,e,s,n,o,r){o===void 0&&(o=0),r===void 0&&(r=!1);const l=new PathSegment(5);l.startAngle=t,l.sweepAngle=i,l.centerX=e,l.centerY=s,l.radiusX=n,o!==0?l.radiusY=o:l.radiusY=n,r&&l.close(),this.Ni.segments.add(l)}uF(t,i,e,s,n,o,r,l){l===void 0&&(l=!1);const h=new PathSegment(6,o,r,t,i,e,s,n);l&&h.close(),this.Ni.segments.add(h)}static rN=null;static VC(t){const i=GeoStream.rN;if(i!==null)return GeoStream.rN=null,i.Vi(t),i;{const e=new GeoStream;return e.Vi(t),e}}static zC(t){GeoStream.rN=t}}{const y=function(n,o){const r=n.toLowerCase(),l=Geo.rn;l[n]=o,l[r]=n};y(\"Rectangle\",(n,o,r)=>{const l=\"r\"+o+\",\"+r;let h=Geo.cr[l];return h!==void 0||(h=new Geometry(2),h.endX=o,h.endY=r,Geo.ur<Geo.Wg&&(Geo.cr[l]=h,Geo.ur++)),h}),y(\"Square\",(n,o,r)=>{const l=\"s\"+o+\",\"+r;let h=Geo.cr[l];return h!==void 0||(h=new Geometry(2),h.endX=o,h.endY=r,h.defaultStretch=6,Geo.ur<Geo.Wg&&(Geo.cr[l]=h,Geo.ur++)),h});const t=(n,o,r,l,h)=>{(isNaN(l)||l<0)&&(l=5),isNaN(h)&&(h=15);const f=\"rr\"+o+\",\"+r+\",\"+l+\",\"+h;let a=Geo.cr[f];if(a!==void 0)return a;let c=l;(h&1)===1?(c=Math.min(c,(h&2)===2?o/3:o),c=Math.min(c,(h&8)===8?r/3:r)):c=0;const u=new PathFigure(c,0,!0);a=new Geometry().add(u);const d=Spot.TopLeft.copy(),m=Spot.BottomRight.copy();if((h&2)===2){let g=l;g=Math.min(g,(h&1)===1?o/3:o),g=Math.min(g,(h&4)===4?r/3:r);const p=g*Geo.zn;u.add(new PathSegment(2,o-g,0)).add(new PathSegment(3,o,g,o-p,0,o,p)),d.offsetY=p,m.offsetX=-p}else u.add(new PathSegment(2,o,0));if((h&4)===4){let g=l;g=Math.min(g,(h&8)===8?o/3:o),g=Math.min(g,(h&2)===2?r/3:r);const p=g*Geo.zn;u.add(new PathSegment(2,o,r-g)).add(new PathSegment(3,o-g,r,o,r-p,o-p,r)),m.offsetX=-p,m.offsetY=-p}else u.add(new PathSegment(2,o,r));if((h&8)===8){let g=l;g=Math.min(g,(h&4)===4?o/3:o),g=Math.min(g,(h&1)===1?r/3:r);const p=g*Geo.zn;u.add(new PathSegment(2,g,r)).add(new PathSegment(3,0,r-g,p,r,0,r-p)),d.offsetX=p,m.offsetY=-p}else u.add(new PathSegment(2,0,r));if((h&1)===1){const g=c*Geo.zn;u.add(new PathSegment(2,0,c)).add(new PathSegment(3,c,0,0,g,g,0).close()),d.offsetX=g,d.offsetY=g}else u.add(new PathSegment(2,0,0).close());return a.spot1=d,a.spot2=m,Geo.ur<Geo.Wg&&(Geo.cr[f]=a,Geo.ur++),a};y(\"RoundedRectangle\",(n,o,r)=>{const l=n?n.parameter1:NaN,h=n?n.parameter2:NaN;return t(n,o,r,l,h)}),y(\"Border\",\"RoundedRectangle\"),y(\"RoundedTopRectangle\",(n,o,r)=>{const l=n?n.parameter1:NaN;return t(n,o,r,l,3)}),y(\"RoundedBottomRectangle\",(n,o,r)=>{const l=n?n.parameter1:NaN;return t(n,o,r,l,12)}),y(\"RoundedLeftRectangle\",(n,o,r)=>{const l=n?n.parameter1:NaN;return t(n,o,r,l,9)}),y(\"RoundedRightRectangle\",(n,o,r)=>{const l=n?n.parameter1:NaN;return t(n,o,r,l,6)}),y(\"Ellipse\",(n,o,r)=>{const l=\"e\"+o+\",\"+r;let h=Geo.cr[l];return h!==void 0||(h=new Geometry(3),h.endX=o,h.endY=r,h.spot1=Spot.vk,h.spot2=Spot.Jk,Geo.ur<Geo.Wg&&(Geo.cr[l]=h,Geo.ur++)),h}),y(\"Circle\",(n,o,r)=>{const l=\"c\"+o+\",\"+r;let h=Geo.cr[l];return h!==void 0||(h=new Geometry(3),h.endX=o,h.endY=r,h.spot1=Spot.vk,h.spot2=Spot.Jk,h.defaultStretch=6,Geo.ur<Geo.Wg&&(Geo.cr[l]=h,Geo.ur++)),h}),y(\"TriangleRight\",(n,o,r)=>new Geometry().add(new PathFigure(0,0).add(new PathSegment(2,o,.5*r)).add(new PathSegment(2,0,r).close())).setSpots(0,.25,.5,.75)),y(\"TriangleDown\",(n,o,r)=>new Geometry().add(new PathFigure(0,0).add(new PathSegment(2,o,0)).add(new PathSegment(2,.5*o,r).close())).setSpots(.25,0,.75,.5)),y(\"TriangleLeft\",(n,o,r)=>new Geometry().add(new PathFigure(o,r).add(new PathSegment(2,0,.5*r)).add(new PathSegment(2,o,0).close())).setSpots(.5,.25,1,.75)),y(\"TriangleUp\",(n,o,r)=>new Geometry().add(new PathFigure(o,r).add(new PathSegment(2,0,r)).add(new PathSegment(2,.5*o,0).close())).setSpots(.25,.5,.75,1)),y(\"Triangle\",\"TriangleUp\"),y(\"Diamond\",(n,o,r)=>new Geometry().add(new PathFigure(.5*o,0).add(new PathSegment(2,0,.5*r)).add(new PathSegment(2,.5*o,r)).add(new PathSegment(2,o,.5*r).close())).setSpots(.25,.25,.75,.75)),y(\"LineH\",(n,o,r)=>{const l=new Geometry(1);return l.startX=0,l.startY=r/2,l.endX=o,l.endY=r/2,l}),y(\"LineV\",(n,o,r)=>{const l=new Geometry(1);return l.startX=o/2,l.startY=0,l.endX=o/2,l.endY=r,l}),y(\"None\",\"Rectangle\"),y(\"BarH\",\"Rectangle\"),y(\"BarV\",\"Rectangle\"),y(\"MinusLine\",\"LineH\"),y(\"PlusLine\",(n,o,r)=>new Geometry().add(new PathFigure(0,r/2,!1).add(new PathSegment(2,o,r/2)).add(new PathSegment(1,o/2,0)).add(new PathSegment(2,o/2,r)))),y(\"XLine\",(n,o,r)=>new Geometry().add(new PathFigure(0,r,!1).add(new PathSegment(2,o,0)).add(new PathSegment(1,0,0)).add(new PathSegment(2,o,r)))),y(\"LineRight\",(n,o,r)=>new Geometry().add(new PathFigure(.25*o,0,!1).add(new PathSegment(2,.75*o,.5*r)).add(new PathSegment(2,.25*o,r)))),y(\"LineDown\",(n,o,r)=>new Geometry().add(new PathFigure(0,.25*r,!1).add(new PathSegment(2,.5*o,.75*r)).add(new PathSegment(2,o,.25*r)))),y(\"LineLeft\",(n,o,r)=>new Geometry().add(new PathFigure(.75*o,0,!1).add(new PathSegment(2,.25*o,.5*r)).add(new PathSegment(2,.75*o,r)))),y(\"LineUp\",(n,o,r)=>new Geometry().add(new PathFigure(0,.75*r,!1).add(new PathSegment(2,.5*o,.25*r)).add(new PathSegment(2,o,.75*r)))),y(\"Capsule\",(n,o,r)=>{const l=new Geometry;if(o<r){const h=o/2,f=new PathFigure(0,h,!0);l.add(f),f.add(new PathSegment(5,180,180,h,h,h,h)),f.add(new PathSegment(2,o,r-h)),f.add(new PathSegment(5,0,180,h,r-h,h,h)),f.add(new PathSegment(2,0,h));const a=isFinite(n.parameter1)?n.parameter1:o*.156;return l.spot1=new Spot(0,0,0,a),l.spot2=new Spot(1,1,0,-a),l}else if(o>r){const h=r/2,f=new PathFigure(h,0,!0);l.add(f),f.add(new PathSegment(2,o-h,0)),f.add(new PathSegment(5,270,180,o-h,h,h,h)),f.add(new PathSegment(2,h,r)),f.add(new PathSegment(5,90,180,h,h,h,h));const a=isFinite(n.parameter1)?n.parameter1:r*.156;return l.spot1=new Spot(0,0,a,0),l.spot2=new Spot(1,1,-a,0),l}else return l.type=3,l.endX=o,l.endY=r,l.spot1=Spot.vk,l.spot2=Spot.Jk,l});const i=(n,o)=>new PathFigure(n,o,!1,!1),e=(n,o,r)=>n.add(new PathSegment(2,o,r)),s=(n,o,r)=>n.add(new PathSegment(1,o,r));y(\"Borders\",(n,o,r)=>{let l=n?n.parameter1:NaN;isNaN(l)?l=10:l=l&15;const h=new Geometry;let f;return l===10?(f=i(o,0),e(f,o,r),s(f,0,r),e(f,0,0)):l===5?(f=i(0,0),e(f,o,0),s(f,o,r),e(f,0,r)):l===1?(f=i(0,0),e(f,o,0),s(f,o,r)):l===2?(f=i(o,0),e(f,o,r)):l===4?(f=i(o,r),e(f,0,r)):l===8?(f=i(0,r),e(f,0,0),s(f,o,r)):l===3?(f=i(0,0),e(f,o,0),e(f,o,r)):l===6?(f=i(o,0),e(f,o,r),e(f,0,r)):l===12?(f=i(o,r),e(f,0,r),e(f,0,0)):l===9?(f=i(0,r),e(f,0,0),e(f,o,0)):l===7?(f=i(0,0),e(f,o,0),e(f,o,r),e(f,0,r)):l===14?(f=i(o,0),e(f,o,r),e(f,0,r),e(f,0,0)):l===13?(f=i(o,r),e(f,0,r),e(f,0,0),e(f,o,0)):l===11?(f=i(0,r),e(f,0,0),e(f,o,0),e(f,o,r)):l===15?(f=i(0,0),e(f,o,0),e(f,o,r),e(f,0,r),f.add(new PathSegment(2,0,0).close())):(f=i(0,0),s(f,o,r)),h.add(f),h})}Geo.qg={\"\":\"\",Standard:\"F1 m 0,0 l 8,4 -8,4 2,-4 z\",Backward:\"F1 m 8,0 l -2,4 2,4 -8,-4 z\",Triangle:\"F1 m 0,0 l 8,4.62 -8,4.62 z\",BackwardTriangle:\"F1 m 8,4 l 0,4 -8,-4 8,-4 0,4 z\",Boomerang:\"F1 m 0,0 l 8,4 -8,4 4,-4 -4,-4 z\",BackwardBoomerang:\"F1 m 8,0 l -8,4 8,4 -4,-4 4,-4 z\",SidewaysV:\"m 0,0 l 8,4 -8,4 0,-1 6,-3 -6,-3 0,-1 z\",BackwardV:\"m 8,0 l -8,4 8,4 0,-1 -6,-3 6,-3 0,-1 z\",OpenTriangle:\"m 0,0 l 8,4 -8,4\",BackwardOpenTriangle:\"m 8,0 l -8,4 8,4\",OpenTriangleLine:\"m 0,0 l 8,4 -8,4 m 8.5,0 l 0,-8\",BackwardOpenTriangleLine:\"m 8,0 l  -8,4 8,4 m -8.5,0 l 0,-8\",OpenTriangleTop:\"m 0,0 l 8,4 m 0,4\",BackwardOpenTriangleTop:\"m 8,0 l -8,4 m 0,4\",OpenTriangleBottom:\"m 0,8 l 8,-4\",BackwardOpenTriangleBottom:\"m 0,4 l 8,4\",HalfTriangleTop:\"F1 m 0,0 l 0,4 8,0 z m 0,8\",BackwardHalfTriangleTop:\"F1 m 8,0 l 0,4 -8,0 z m 0,8\",HalfTriangleBottom:\"F1 m 0,4 l 0,4 8,-4 z\",BackwardHalfTriangleBottom:\"F1 m 8,4 l 0,4 -8,-4 z\",ForwardSemiCircle:\"m 4,0 b 270 180 0 4 4\",BackwardSemiCircle:\"m 4,8 b 90 180 0 -4 4\",Feather:\"m 0,0 l 3,4 -3,4\",BackwardFeather:\"m 3,0 l -3,4 3,4\",DoubleFeathers:\"m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4\",BackwardDoubleFeathers:\"m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4\",TripleFeathers:\"m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4 m 3,-8 l 3,4 -3,4\",BackwardTripleFeathers:\"m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4 m 3,-8 l -3,4 3,4\",ForwardSlash:\"m 0,8 l 5,-8\",BackSlash:\"m 0,0 l 5,8\",DoubleForwardSlash:\"m 0,8 l 4,-8 m -2,8 l 4,-8\",DoubleBackSlash:\"m 0,0 l 4,8 m -2,-8 l 4,8\",TripleForwardSlash:\"m 0,8 l 4,-8 m -2,8 l 4,-8 m -2,8 l 4,-8\",TripleBackSlash:\"m 0,0 l 4,8 m -2,-8 l 4,8 m -2,-8 l 4,8\",Fork:\"m 0,4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4\",BackwardFork:\"m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4\",LineFork:\"m 0,0 l 0,8 m 0,-4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4\",BackwardLineFork:\"m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4 m 8,-8 l 0,8\",CircleFork:\"F1 m 6,4 b 0 360 -3 0 3 z m 0,0 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4\",BackwardCircleFork:\"F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 6,0 b 0 360 -3 0 3\",CircleLineFork:\"F1 m 6,4 b 0 360 -3 0 3 z m 1,-4 l 0,8 m 0,-4 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4\",BackwardCircleLineFork:\"F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 0,-4 l 0,8 m 7,-4 b 0 360 -3 0 3\",Circle:\"F1 m 8,4 b 0 360 -4 0 4 z\",Block:\"F1 m 0,0 l 0,8 8,0 0,-8 z\",StretchedDiamond:\"F1 m 0,3 l 5,-3 5,3 -5,3 -5,-3 z\",Diamond:\"F1 m 0,4 l 4,-4 4,4 -4,4 -4,-4 z\",Chevron:\"F1 m 0,0 l 5,0 3,4 -3,4 -5,0 3,-4 -3,-4 z\",StretchedChevron:\"F1 m 0,0 l 8,0 3,4 -3,4 -8,0 3,-4 -3,-4 z\",NormalArrow:\"F1 m 0,2 l 4,0 0,-2 4,4 -4,4 0,-2 -4,0 z\",X:\"m 0,0 l 8,8 m 0,-8 l -8,8\",TailedNormalArrow:\"F1 m 0,0 l 2,0 1,2 3,0 0,-2 2,4 -2,4 0,-2 -3,0 -1,2 -2,0 1,-4 -1,-4 z\",DoubleTriangle:\"F1 m 0,0 l 4,4 -4,4 0,-8 z  m 4,0 l 4,4 -4,4 0,-8 z\",BigEndArrow:\"F1 m 0,0 l 5,2 0,-2 3,4 -3,4 0,-2 -5,2 0,-8 z\",ConcaveTailArrow:\"F1 m 0,2 h 4 v -2 l 4,4 -4,4 v -2 h -4 l 2,-2 -2,-2 z\",RoundedTriangle:\"F1 m 0,1 a 1,1 0 0 1 1,-1 l 7,3 a 0.5,1 0 0 1 0,2 l -7,3 a 1,1 0 0 1 -1,-1 l 0,-6 z\",SimpleArrow:\"F1 m 1,2 l -1,-2 2,0 1,2 -1,2 -2,0 1,-2 5,0 0,-2 2,2 -2,2 0,-2 z\",AccelerationArrow:\"F1 m 0,0 l 0,8 0.2,0 0,-8 -0.2,0 z m 2,0 l 0,8 1,0 0,-8 -1,0 z m 3,0 l 2,0 2,4 -2,4 -2,0 0,-8 z\",BoxArrow:\"F1 m 0,0 l 4,0 0,2 2,0 0,-2 2,4 -2,4 0,-2 -2,0 0,2 -4,0 0,-8 z\",TriangleLine:\"F1 m 8,4 l -8,-4 0,8 8,-4 z m 0.5,4 l 0,-8\",CircleEndedArrow:\"F1 m 10,4 l -2,-3 0,2 -2,0 0,2 2,0 0,2 2,-3 z m -4,0 b 0 360 -3 0 3 z\",DynamicWidthArrow:\"F1 m 0,3 l 2,0 2,-1 2,-2 2,4 -2,4 -2,-2 -2,-1 -2,0 0,-2 z\",EquilibriumArrow:\"m 0,3 l 8,0 -3,-3 m 3,5 l -8,0 3,3\",FastForward:\"F1 m 0,0 l 3.5,4 0,-4 3.5,4 0,-4 1,0 0,8 -1,0 0,-4 -3.5,4 0,-4 -3.5,4 0,-8 z\",Kite:\"F1 m 0,4 l 2,-4 6,4 -6,4 -2,-4 z\",HalfArrowTop:\"F1 m 0,0 l 4,4 4,0 -8,-4 z m 0,8\",HalfArrowBottom:\"F1 m 0,8 l 4,-4 4,0 -8,4 z\",OpposingDirectionDoubleArrow:\"F1 m 0,4 l 2,-4 0,2 4,0 0,-2 2,4 -2,4 0,-2 -4,0 0,2 -2,-4 z\",PartialDoubleTriangle:\"F1 m 0,0 4,3 0,-3 4,4 -4,4 0,-3 -4,3 0,-8 z\",LineCircle:\"F1 m 0,0 l 0,8 m 7 -4 b 0 360 -3 0 3 z\",DoubleLineCircle:\"F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z\",TripleLineCircle:\"F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z\",CircleLine:\"F1 m 6 4 b 0 360 -3 0 3 z m 1,-4 l 0,8\",DiamondCircle:\"F1 m 8,4 l -4,4 -4,-4 4,-4 4,4 m 8,0 b 0 360 -4 0 4 z\",PlusCircle:\"F1 m 8,4 b 0 360 -4 0 4 l -8 0 z m -4 -4 l 0 8\",OpenRightTriangleTop:\"m 8,0 l 0,4 -8,0 m 0,4\",OpenRightTriangleBottom:\"m 8,8 l 0,-4 -8,0\",Line:\"m 0,0 l 0,8\",DoubleLine:\"m 0,0 l 0,8 m 2,0 l 0,-8\",TripleLine:\"m 0,0 l 0,8 m 2,0 l 0,-8 m 2,0 l 0,8\",PentagonArrow:\"F1 m 8,4 l -4,-4 -4,0 0,8 4,0 4,-4 z\"};var LayoutConditions=(y=>(y[y.None=0]=\"None\",y[y.Added=1]=\"Added\",y[y.Removed=2]=\"Removed\",y[y.Shown=4]=\"Shown\",y[y.Hidden=8]=\"Hidden\",y[y.NodeSized=16]=\"NodeSized\",y[y.GroupLayout=32]=\"GroupLayout\",y[y.NodeReplaced=64]=\"NodeReplaced\",y[y.Standard=127]=\"Standard\",y[y.All=16777215]=\"All\",y))(LayoutConditions||{});class Part extends Panel{k;Wo;J;fl;cl;jo;fi;vo;Ph;Js;Jo;Ld;i2;fT;Kp;Up;constructor(t,i){let e;t===void 0||t instanceof PanelLayout||typeof t==\"string\"?e=t:t&&(i=t),super(e),this.k=2408959,this.Wo=\"\",this.J=null,this.fl=\"\",this.cl=null,this.jo=null,this.fi=\"\",this.vo=null,this.Ph=null,this.Js=new Point(NaN,NaN).p(),this.Jo=null,this.Ld=NaN,this.i2=-1,this.fT=new Rect,this.Kp=null,this.Up=NaN,i&&Object.assign(this,i)}cloneProtected(t){super.cloneProtected(t),t.k=this.k&-4097|16384|32768,t.Wo=this.Wo,this.J!==null&&(this.J.mi?t.J=this.J:t.J=this.J.copy()),t.fl=this.fl,t.jo=null,t.fi=this.fi,t.Js.c(this.Js),t.Ld=this.Ld}Xo(t){super.Xo(t),t.wh(),t.cl=null,t.Jo=null,t.Kp=null}toString(){let t=U.Bn(this.constructor)+\"#\"+GSet.gs(this);return this.data!==null&&(t+=\"(\"+U.toString(this.data)+\")\"),t}static LayoutNone=0;static LayoutAdded=1;static LayoutRemoved=2;static LayoutShown=4;static LayoutHidden=8;static LayoutNodeSized=16;static LayoutGroupLayout=32;static LayoutNodeReplaced=64;static LayoutStandard=127;static LayoutAll=16777215;Zi(){return this.J===null?this.J=new PartTemplateSettings:this.J.mi&&(this.J=this.J.copy()),this.J}mh(){super.mh(),this.J!==null&&(this.J.mi=!0)}tc(t,i,e,s,n,o,r){const l=this.diagram;l!==null&&(t===3&&i===\"elements\"?n instanceof Panel?n.Jr(h=>{l.partManager.W2(h,l)}):n instanceof Picture&&l._2(n):t===4&&i===\"elements\"&&(n instanceof Panel?n.Jr(h=>l.partManager.j2(h,l)):n instanceof Picture&&l.tP(n)),l.raiseChangedEvent(t,i,e,s,n,o,r))}updateTargetBindings(t){if(super.updateTargetBindings(t),this.data===null)return;const i=this.T.h,e=i.length;for(let n=0;n<e;n++){const o=i[n];o instanceof Panel&&o.Jr(r=>{r.data!==null&&r.updateTargetBindings()})}const s=this.adornments;for(;s.next();)s.value.updateTargetBindings(t)}Bo(){if(super.Bo(),this.OP()){const i=this.T.h,e=i.length;for(let s=0;s<e;s++){const n=i[s];n instanceof Panel&&n.Jr(o=>o.Bo())}}const t=this.adornments;for(;t.next();)t.value.Bo()}updateRelationshipsFromData(){this.data!==null&&this.diagram?.partManager.updateRelationshipsFromData(this)}get key(){const t=this.diagram;if(t!==null)return t.model.getKeyForNodeData(this.data)}get adornments(){return this.jo===null?EmptyIterator.instance:this.jo.iteratorValues}findAdornment(t){Debug&&U.i(t,\"string\",Part,\"findAdornment:category\");const i=this.jo;return i===null?null:i.get(t)}addAdornment(t,i){if(i===null)return;Debug&&(U.i(t,\"string\",Part,\"addAdornment:category\"),U.e(i,Adornment,Part,\"addAdornment:ad\"));let e=null,s=this.jo;if(s!==null&&(e=s.get(t)),e!==i){if(e!==null){const o=e.diagram;o!==null&&o.remove(e)}s===null&&(s=new GMap,this.jo=s),i.Wo!==t&&(i.category=t),s.set(t,i);const n=this.diagram;if(n!==null){n.add(i);const o=i.adornedObject;if(o!==null){const r=o.findBindingPanel();r!==null&&(i.data=r.data)}}}}removeAdornment(t){Debug&&U.i(t,\"string\",Part,\"removeAdornment:category\");const i=this.jo;if(i===null)return;const e=i.get(t);if(e!==null){const s=e.diagram;s!==null&&(s.remove(e),e.data=null)}i.delete(t),i.count===0&&(this.jo=null)}clearAdornments(){const t=this.jo;if(t===null)return;const i=U.lt(),e=t.iterator;for(;e.next();){const n=e.key;i.push(n)}const s=i.length;for(let n=0;n<s;n++)this.removeAdornment(i[n]);U.tt(i)}updateAdornments(){const t=this.diagram;if(t===null)return;this.lO(t),this.hO(t);let i=this.adornments;for(;i.next();){const e=i.value;e.u(),e.hasPlaceholder()&&e.placeholder?.u()}for(i=this.adornments;i.next();)i.value.updateTargetBindings()}invalidateAdornments(){const t=this.diagram;t!==null&&(t.oh(),this.cT()!==!0&&this.uT(!0))}e2(){this.cT()!==!1&&(this.updateAdornments(),this.uT(!1))}lO(t){const i=\"Selection\";if(this.isSelected&&this.selectionAdorned){const e=this.selectionObject;if(e!==null&&this.actualBounds.isReal()&&this.isVisible()&&e.isVisibleObject()&&e.actualBounds.isReal()){let s=this.findAdornment(i);if(s===null){let n=this.selectionAdornmentTemplate;n===null&&(this.Fl()?n=t.linkSelectionAdornmentTemplate:this instanceof Group?n=t.groupSelectionAdornmentTemplate:n=t.nodeSelectionAdornmentTemplate),s=n.copy(),s!==null&&(this.Fl()&&this.selectionObject===this.path&&(s.type=Panel.Link),s.adornedObject=e)}if(s!==null){s.type===Panel.Link&&s.u(),this.addAdornment(i,s);return}}}this.removeAdornment(i)}hO(t){const i=this;t.toolManager.mouseDownTools.each(e=>{e.isEnabled&&e.updateAdornments(i)}),t.toolManager.updateAdornments(i)}_M(t){this.vo=t,t===null&&this.nI()}get layer(){return this.vo}get diagram(){const t=this.vo;return t==null?null:t.diagram}get layerName(){return this.fl}set layerName(t){const i=this.fl;if(i===t)return;Debug&&U.i(t,\"string\",Part,\"layerName\");let e=this.diagram;if(e!==null&&(e.findLayer(t)===null||e.partManager.addsToTemporaryLayer))return;this.fl=t,e!==null&&e.invalidateDocumentBounds(),this.t(\"layerName\",i,t);const s=this.layer;if(s===null||s.name===t||(e=s.diagram,e===null))return;const n=e.findLayer(t);if(n===null||n===s)return;let o=s.ne(-1,this,!0);o>=0&&e.raiseChangedEvent(4,\"parts\",s,this,null,o,!0),o=n.ia(99999999,this,!0),s.visible!==n.visible&&this.Ki(n.visible),o>=0&&e.raiseChangedEvent(3,\"parts\",n,null,this,!0,o);const r=this.layerChanged;if(r===null)return;const l=e.H;e.H=!0,r(this,s,n),e.H=l}get layerChanged(){return this.J!==null?this.J.Gp:null}set layerChanged(t){const i=this.layerChanged;i!==t&&(t!==null&&U.P(t,Part,\"layerChanged\"),this.Zi().Gp=t,this.t(\"layerChanged\",i,t))}get zOrder(){return this.Ld}set zOrder(t){const i=this.Ld;if(i===t)return;Debug&&U.i(t,\"number\",Part,\"zOrder\"),this.Ld=t;const e=this.layer;e!==null&&e.Fx(-1,this),this.t(\"zOrder\",i,t);const s=this.diagram;s!==null&&s.L()}aO(){const t=this.layer;t!==null&&t.Fx(-1,this)}Nb(){if(this.hh()!==!1)return;this.lN(!0),this.sc();const t=this.diagram;t!==null&&(t.l0(this),t.requestUpdate())}dT(){if(this.k|=2097152,this.hh()===!1)return;const t=this.position,i=this.location;(!i.isReal()||!t.isReal())&&this.gT(t,i);const e=this.Di,s=Rect.a().c(e);e.At(),e.x=t.x,e.y=t.y,e.p(),this.sd(s,e),Rect.o(s),this.lN(!1),this.sc()}_n(t,i,e,s){const n=this.le;n.s(t,i,e,s),this.Si===null&&(this.Si=new Transform);const o=this.Si;o.Vi(),this.k0(o,t,i,e,s),this.Si=o,o.$k()||o.Yg(n)}k0(t,i,e,s,n){if(this.ot!==1&&t.ot(this.ot),this.jt===0)return;let o=Spot.Center;this.locationSpot.isSpot()&&(o=this.locationSpot);const r=Point.a();if(this.locationObject!==this){const l=this.locationObject,h=l.naturalBounds;r.setSpot(h.x,h.y,h.width,h.height,o),l.Si!==null&&l.Si.kt(r),r.offset(-l.measuredBounds.x,-l.measuredBounds.y);let f=l.panel;for(;f!==null&&f!==this;)f.Si!==null&&f.Si.kt(r),r.offset(-f.measuredBounds.x,-f.measuredBounds.y),f=f.panel}else r.setSpot(i,e,s,n,o);t.ms(this.jt,r.x,r.y),Point.o(r)}get locationObject(){if(this.Jo===null)if(this instanceof Adornment&&this.type!==Panel.Link&&this.hasPlaceholder())this.Jo=this.placeholder;else{const t=this.locationObjectName;if(t!==\"\"){const i=this.findObject(t);i!==null?this.Jo=i:this.Jo=this}else this.Jo=this}return this.Jo?.visible?this.Jo:this}get minLocation(){return this.J!==null?this.J.Hp:Point.xC}set minLocation(t){const i=this.minLocation;i.equals(t)||(Debug&&U.e(t,Point,Part,\"minLocation\"),t=t.N(),this.Zi().Hp=t,this.t(\"minLocation\",i,t))}get maxLocation(){return this.J!==null?this.J.qp:Point.bC}set maxLocation(t){const i=this.maxLocation;i.equals(t)||(Debug&&U.e(t,Point,Part,\"maxLocation\"),t=t.N(),this.Zi().qp=t,this.t(\"maxLocation\",i,t))}get locationObjectName(){return this.J!==null?this.J.Wp:\"\"}set locationObjectName(t){const i=this.locationObjectName;i!==t&&(Debug&&U.i(t,\"string\",Part,\"locationObjectName\"),this.Zi().Wp=t,this.Jo=null,this.u(),this.t(\"locationObjectName\",i,t))}get locationSpot(){return this.J!==null?this.J.jp:Spot.TopLeft}set locationSpot(t){const i=this.locationSpot;i.equals(t)||(Debug&&(U.e(t,Spot,Part,\"locationSpot\"),t.isSpot()||U.n(\"Part.locationSpot must be a specific Spot value, not: \"+t)),t=t.N(),this.Zi().jp=t,this.u(),this.t(\"locationSpot\",i,t))}move(t,i){i===!0?this.location=t:this.position=t}moveTo(t,i,e){const s=Point.K(t,i);this.move(s,e),Point.o(s)}isVisible(){if(!this.visible)return!1;const t=this.layer;if(t!==null){if(!t.visible)return!1;const e=t.diagram;if(e!==null&&e.animationManager.xx(this))return!0}const i=this.containingGroup;return!(i!==null&&(!i.isSubGraphExpanded||!i.isVisible()))}Ki(t){const i=this.diagram;t?(this.invalidateLayout(4),this.invalidateAdornments(),i!==null&&i.l0(this)):(this.invalidateLayout(8),this.clearAdornments()),this.wh(),i!==null&&(i.invalidateDocumentBounds(),i.L())}findObject(t){if(this.name===t)return this;let i=this.Kp;if(i===null&&(this.Kp=i=new GMap),i.get(t)!==null)return i.get(t);const e=super.findObject(t);return e!==null?(i.set(t,e),e):(i.set(t,null),null)}O0(){this.Kp=null}getRelativePoint(t,i,e){e===void 0&&(e=new Point);const s=i.isNoSpot()?Spot.Center:i,n=t.naturalBounds;if(e.s(n.width*s.x+s.offsetX,n.height*s.y+s.offsetY),t===null||t===this)return e;t.F.kt(e);let o=t.panel;for(;o!==null&&o!==this;)o.F.kt(e),o=o.panel;return this.Si!==null&&this.Si.kt(e),e.offset(-this.le.x,-this.le.y),e}getDocumentBounds(t){return t===void 0&&(t=new Rect),t.c(this.actualBounds)}ensureBounds(){this.dt(1/0,1/0),this.Gt()}KL(t){const i=this.locationSpot,e=this.locationObject;let s=e.naturalBounds;s.isReal()||(s=Rect.zg);const n=e instanceof Shape?e.strokeWidth:0;if(t.setSpot(0,0,s.width+n,s.height+n,i),e!==this){t.offset(-n/2,-n/2),e.F.kt(t);let o=e.panel;for(;o!==null&&o!==this;)o.F.kt(t),o=o.panel}return this.Si!==null&&this.Si.kt(t),t.offset(-this.le.x,-this.le.y),t}ta(t,i){const e=i===void 0?this.fT:i,s=this.fO(),n=s*2;if(!this.isShadowed)return e.s(t.x-1-s,t.y-1-s,t.width+2+n,t.height+2+n),e;let o=t.x,r=t.y,l=t.width,h=t.height;const f=this.shadowBlur,a=this.shadowOffset;return l+=f,h+=f,o-=f/2,r-=f/2,a.x>0?l+=a.x:(o+=a.x,l-=a.x),a.y>0?h+=a.y:(r+=a.y,h-=a.y),e.s(o-1,r-1,l+2,h+2),e}WI(){return this.type===Panel.Link&&this instanceof Adornment&&this.category===\"Selection\"&&this.adornedObject instanceof Shape&&this.adornedPart.findMainElement()===this.adornedObject?this.adornedObject.strokeWidth:0}fO(){return isNaN(this.Up)&&(this.Up=this.vL()),this.Up}pc(){this.Up=NaN}Gt(){if(this.ns()===!1){this.dT();return}this.to(!1);const t=this.Di,i=Rect.a();i.c(t);const e=this.Dl();this.yh(0,0,this.le.width,this.le.height);const s=this.position;this.gT(s,this.location),t.At(),t.x=s.x,t.y=s.y,t.p(),this.sd(i,t),i.equals(t)?this.ks(e):this.Ce()&&(!Geo.g(i.width,t.width)||!Geo.g(i.height,t.height))&&this.i2>=0&&this.invalidateLayout(16),Rect.o(i),this.lN(!1)}sd(t,i){const e=this.diagram;if(e===null)return;let s=!1;if(e.ra===!1&&t.isReal()){const n=Rect.a();n.c(e.documentBounds),n.subtractMargin(e.padding),t.x>n.x&&t.y>n.y&&t.right<n.right&&t.bottom<n.bottom&&i.x>n.x&&i.y>n.y&&i.right<n.right&&i.bottom<n.bottom&&(s=!0),Rect.o(n)}(this.cO()===!0||!t.equals(i))&&this.JA(s,e),e.L(),!(!t.isReal()&&!i.isReal()||t.equalsApproxClose(i))&&(this instanceof Node&&!e.undoManager.isUndoingRedoing&&this.invalidateConnectedLinks(),this.wh())}get location(){return this.Js}set location(t){Debug&&U.e(t,Point,Part,\"location\");const i=t.x,e=t.y,s=this.Js;(s.x!==i&&(!isNaN(s.x)||!isNaN(i))||s.y!==e&&(!isNaN(s.y)||!isNaN(e)))&&(t=t.copy(),this.uO(t,s)&&this.t(\"location\",s,t.copy()))}uO(t,i){if(this.Fl())return!1;if(this.Js=t,this.k|=2097152,this.ns()===!1){this.Nb();const e=this.gt;if(e.isReal()){const s=this.diagram;if(s===null||s.animationManager.isTicking||!s.undoManager.isUndoingRedoing){const n=e.copy();e.s(e.x+(t.x-i.x),e.y+(t.y-i.y)),this.mT(s,e,n.x,n.y),this.t(\"position\",n,e.copy())}}}return!0}FP(t,i,e){if(this.Fl()||!t.isReal())return!1;const s=this.diagram;if(s!==null&&this.mT(s,t,i,e),this.gt=t,this.k&=-2097153,this.Js.isReal()&&(s===null||s.animationManager.isTicking||!s.undoManager.isUndoingRedoing)){const n=this.Js;this.Js=new Point(n.x+(t.x-i),n.y+(t.y-e)),this.t(\"location\",n,this.Js.copy())}return this.hh()===!1&&this.ns()===!1&&(this.Nb(),this.dT()),!0}mT(t,i,e,s){if(t===null||this instanceof Adornment)return;const n=t.animationManager;n.bi&&n.wA(this,new Point(e,s),i,!1)}Lf(t,i,e){const s=this.Js,n=this.gt;if(e){if(s.x===t&&s.y===i)return;this.hh()||this.ns()?n.s(NaN,NaN):n.s(n.x+t-s.x,n.y+i-s.y),s.s(t,i)}else{if(n.x===t&&n.y===i)return;s.s(s.x+t-n.x,s.y+i-n.y),n.s(t,i)}this.Nb()}RP(){this.k&=-2097153,this.Nb()}gT(t,i){const e=this.KL(Point.a()),s=this.diagram,n=i.isReal(),o=t.isReal();n&&o?this.k&2097152?this.pT(t,i,s,e):this.yT(t,i,s,e):n?this.pT(t,i,s,e):o&&this.yT(t,i,s,e),this.k|=2097152,Point.o(e),this.sc()}pT(t,i,e,s){const n=t.x,o=t.y;if(t.s(i.x-s.x,i.y-s.y),e!==null){const r=e.animationManager,l=r.defaultAnimation.isAnimating;!l&&r.bi&&!(this instanceof Adornment)&&r.wA(this,new Point(n,o),t,!1),!l&&!(t.x===n&&t.y===o)&&this.t(\"position\",new Point(n,o),t.copy())}}yT(t,i,e,s){const n=i.copy();i.s(t.x+s.x,t.y+s.y),!i.equals(n)&&e!==null&&this.t(\"location\",n,i.copy())}JA(t,i){this.CP(!1),this instanceof Node&&i.rP(this),!this.layer.isTemporary&&!t&&i.invalidateDocumentBounds();const e=this.Di,s=i.viewportBounds;s.isReal()?this.Dl()?(e.intersectsRectPlus(s,10)||this.ks(!1),this.updateAdornments()):this.isVisible()&&e.intersectsRect(s)?(this.ks(!0),this.updateAdornments()):this.invalidateAdornments():i.Gf=!0}vr(){return!0}Ce(){return!0}Fl(){return!1}Ws(){return!0}hasPlaceholder(){return!1}get category(){return this.Wo}set category(t){const i=this.Wo;if(i===t)return;this.svg!==null&&(this.svg.remove(),this.He(!0)),Debug&&U.i(t,\"string\",Part,\"category\");const e=this.diagram,s=this.data;let n=null;if(e!==null&&s!==null&&!(this instanceof Adornment)){const o=e.model.undoManager;o.isEnabled&&!o.isUndoingRedoing&&(n=this.clone(),n.T.addAll(this.T))}if(this.Wo=t,this.t(\"category\",i,t),e!==null&&s!==null&&!(this instanceof Adornment)){const o=e.model;if(o.undoManager.isUndoingRedoing)return;if(this.Fl()){e.partManager.setLinkCategoryForData(s,t);const r=e.partManager.findLinkTemplateForCategory(t);if(r!==null){r.Kt();const l=r.copy();l!==null&&this.hN(l,i,t)}}else{o!==null&&o.setCategoryForNodeData(s,t);const r=e.partManager.findTemplateForNodeData(s,t);if(r!==null){r.Kt();const l=r.copy();if(l!==null&&!(l instanceof Link)){const h=this.location.copy();this.hN(l,i,t),this.location.isReal()||(this.location=h)}}}if(n!==null){const r=this.clone();r.T.addAll(this.T),this.t(\"self\",n,r)}}else if(this instanceof Adornment){const o=this.adornedPart;if(o!==null){const r=o.jo;r!==null&&r.delete(i),o.addAdornment(this.category,this)}}}get self(){return this}set self(t){this.hN(t,this.category,t.category)}static wT=!1;hN(t,i,e){t.constructor!==this.constructor&&(Part.wT||(Part.wT=!0,U.nt('Should not change the class of the Part when changing category from \"'+i+'\" to \"'+e+'\"'),U.nt(\"  Old class: \"+U.Bn(this.constructor)+\", new class: \"+U.Bn(t.constructor)+\", part: \"+this.toString()))),this.clearAdornments();const s=this.data,n=this.layerName,o=this.isSelected,r=this.isHighlighted;let l=!0,h=!0,f=!1;this instanceof Node&&(l=this.isTreeLeaf,h=this.isTreeExpanded,f=this.wasTreeExpanded),t.Xo(this),t.cloneProtected(this),this.Wo=e,this.svg!==null&&(this.svg.remove(),this.svg=null,this.He(!0)),this.u(),this.L();const a=this.diagram;let c=!0;a!==null&&(c=a.skipsUndoManager,a.skipsUndoManager=!0),this.ni=s,this.k=o?this.k|4096:this.k&-4097,this.k=r?this.k|524288:this.k&-524289,this instanceof Node&&(this.B=l?this.B|4:this.B&-5,this.B=h?this.B|1:this.B&-2,this.B=f?this.B|2:this.B&-3),s!==null&&this.updateTargetBindings();const u=this.layerName;u!==n&&(this.fl=n,this.layerName=u),a!==null&&(a.skipsUndoManager=c),this.Ce()&&this.invalidateLayout(64)}canCopy(){if(!this.copyable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowCopy)return!1;const i=t.diagram;return i===null?!0:!!i.allowCopy}canDelete(){if(!this.deletable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowDelete)return!1;const i=t.diagram;return i===null?!0:!!i.allowDelete}canEdit(){if(!this.textEditable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowTextEdit)return!1;const i=t.diagram;return i===null?!0:!!i.allowTextEdit}canGroup(){if(!this.groupable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowGroup)return!1;const i=t.diagram;return i===null?!0:!!i.allowGroup}canMove(){if(!this.movable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowMove)return!1;const i=t.diagram;return i===null?!0:!!i.allowMove}canReshape(){if(!this.reshapable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowReshape)return!1;const i=t.diagram;return i===null?!0:!!i.allowReshape}canResize(){if(!this.resizable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowResize)return!1;const i=t.diagram;return i===null?!0:!!i.allowResize}canRotate(){if(!this.rotatable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowRotate)return!1;const i=t.diagram;return i===null?!0:!!i.allowRotate}canSelect(){if(!this.selectable)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowSelect)return!1;const i=t.diagram;return i===null?!0:!!i.allowSelect}get copyable(){return(this.k&1)!==0}set copyable(t){const i=(this.k&1)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"copyable\"),this.k=this.k^1,this.t(\"copyable\",i,t))}get deletable(){return(this.k&2)!==0}set deletable(t){const i=(this.k&2)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"deletable\"),this.k=this.k^2,this.t(\"deletable\",i,t))}get textEditable(){return(this.k&4)!==0}set textEditable(t){const i=(this.k&4)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"textEditable\"),this.k=this.k^4,this.t(\"textEditable\",i,t),this.invalidateAdornments())}get groupable(){return(this.k&8)!==0}set groupable(t){const i=(this.k&8)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"groupable\"),this.k=this.k^8,this.t(\"groupable\",i,t))}get movable(){return(this.k&16)!==0}set movable(t){const i=(this.k&16)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"movable\"),this.k=this.k^16,this.t(\"movable\",i,t))}get selectionAdorned(){return(this.k&32)!==0}set selectionAdorned(t){const i=(this.k&32)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"selectionAdorned\"),this.k=this.k^32,this.t(\"selectionAdorned\",i,t),this.invalidateAdornments())}get isInDocumentBounds(){return(this.k&64)!==0}set isInDocumentBounds(t){const i=(this.k&64)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",Part,\"isInDocumentBounds\"),this.k=this.k^64;const e=this.diagram;e!==null&&e.invalidateDocumentBounds(),this.t(\"isInDocumentBounds\",i,t)}}get isLayoutPositioned(){return(this.k&128)!==0}set isLayoutPositioned(t){const i=(this.k&128)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"isLayoutPositioned\"),this.k=this.k^128,this.t(\"isLayoutPositioned\",i,t),this.invalidateLayout(t?4:8))}get selectable(){return(this.k&256)!==0}set selectable(t){const i=(this.k&256)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"selectable\"),this.k=this.k^256,this.t(\"selectable\",i,t),this.invalidateAdornments())}get reshapable(){return(this.k&512)!==0}set reshapable(t){const i=(this.k&512)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"reshapable\"),this.k=this.k^512,this.t(\"reshapable\",i,t),this.invalidateAdornments())}get resizable(){return(this.k&1024)!==0}set resizable(t){const i=(this.k&1024)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"resizable\"),this.k=this.k^1024,this.t(\"resizable\",i,t),this.invalidateAdornments())}get rotatable(){return(this.k&2048)!==0}set rotatable(t){const i=(this.k&2048)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"rotatable\"),this.k=this.k^2048,this.t(\"rotatable\",i,t),this.invalidateAdornments())}get isSelected(){return(this.k&4096)!==0}set isSelected(t){const i=(this.k&4096)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",Part,\"isSelected\");const e=this.diagram;if(t){if(!this.canSelect())return;if(e!==null){const o=e.maxSelectionCount;if(e.selection.count>=o)return}}this.k=this.k^4096;let s=!1;if(e!==null){s=e.skipsUndoManager,e.skipsUndoManager=!0;const o=e.selection;o.At(),t?o.add(this):o.delete(this),o.p()}this.t(\"isSelected\",i,t),this.invalidateAdornments();const n=this.selectionChanged;n!==null&&n(this),e!==null&&(e.requestUpdate(),e.skipsUndoManager=s)}}get isHighlighted(){return(this.k&524288)!==0}set isHighlighted(t){const i=(this.k&524288)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",Part,\"isHighlighted\"),this.k=this.k^524288;const e=this.diagram;if(e!==null){const n=e.highlighteds;n.At(),t?n.add(this):n.delete(this),n.p()}this.t(\"isHighlighted\",i,t),this.L();const s=this.highlightedChanged;s!==null&&s(this)}}get isShadowed(){return(this.k&8192)!==0}set isShadowed(t){const i=(this.k&8192)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"isShadowed\"),this.k=this.k^8192,this.He(!0),this.t(\"isShadowed\",i,t),this.L())}cT(){return(this.k&16384)!==0}uT(t){t?this.k|=16384:this.k&=-16385}hh(){return(this.k&32768)!==0}lN(t){t?this.k|=32768:this.k&=-32769}cO(){return(this.k&65536)!==0}CP(t){t?this.k|=65536:this.k&=-65537}Dl(){return(this.k&131072)!==0}ks(t){t?this.k|=131072:this.k&=-131073}xT(){return(this.k&1048576)!==0}Cb(t){t?this.k|=1048576:this.k&=-1048577}get isAnimated(){return(this.k&262144)!==0}set isAnimated(t){const i=(this.k&262144)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Part,\"isAnimated\"),this.k=this.k^262144,this.t(\"isAnimated\",i,t))}get highlightedChanged(){return this.J!==null?this.J.vp:null}set highlightedChanged(t){const i=this.highlightedChanged;i!==t&&(t!==null&&U.P(t,Part,\"highlightedChanged\"),this.Zi().vp=t,this.t(\"highlightedChanged\",i,t))}get selectionObjectName(){return this.J!==null?this.J.Jp:\"\"}set selectionObjectName(t){const i=this.selectionObjectName;i!==t&&(Debug&&U.i(t,\"string\",Part,\"selectionObjectName\"),this.Zi().Jp=t,this.cl=null,this.t(\"selectionObjectName\",i,t))}get selectionAdornmentTemplate(){return this.J!==null?this.J.$p:null}set selectionAdornmentTemplate(t){const i=this.selectionAdornmentTemplate;i!==t&&(t!==null&&(U.e(t,Adornment,Part,\"selectionAdornmentTemplate\"),t.Kt()),this.Zi().$p=t,this.t(\"selectionAdornmentTemplate\",i,t))}get selectionObject(){if(this.cl===null){const t=this.selectionObjectName;if(t!==null&&t!==\"\"){const i=this.findObject(t);i!==null?this.cl=i:this.cl=this}else if(this instanceof Link){const i=this.path;i!==null?this.cl=i:this.cl=this}else this.cl=this}return this.cl}get selectionChanged(){return this.J!==null?this.J.Zp:null}set selectionChanged(t){const i=this.selectionChanged;i!==t&&(t!==null&&U.P(t,Part,\"selectionChanged\"),this.Zi().Zp=t,this.t(\"selectionChanged\",i,t))}get resizeAdornmentTemplate(){return this.J!==null?this.J.Qp:null}set resizeAdornmentTemplate(t){const i=this.resizeAdornmentTemplate;i!==t&&(Debug&&U.e(t,Adornment,Part,\"resizeAdornmentTemplate\"),this.Zi().Qp=t!==null?t.Kt():null,this.t(\"resizeAdornmentTemplate\",i,t))}get resizeObjectName(){return this.J!==null?this.J._p:\"\"}set resizeObjectName(t){const i=this.resizeObjectName;i!==t&&(Debug&&U.i(t,\"string\",Part,\"resizeObjectName\"),this.Zi()._p=t,this.t(\"resizeObjectName\",i,t))}get resizeObject(){const t=this.resizeObjectName;if(t!==\"\"){const i=this.findObject(t);if(i!==null)return i}return this}get resizeCellSize(){return this.J!==null?this.J.ty:Size.Pw}set resizeCellSize(t){const i=this.resizeCellSize;i.equals(t)||(Debug&&U.e(t,Size,Part,\"resizeCellSize\"),t=t.N(),this.Zi().ty=t,this.t(\"resizeCellSize\",i,t))}get rotateAdornmentTemplate(){return this.J!==null?this.J.iy:null}set rotateAdornmentTemplate(t){const i=this.rotateAdornmentTemplate;i!==t&&(Debug&&U.e(t,Adornment,Part,\"rotateAdornmentTemplate\"),this.Zi().iy=t!==null?t.Kt():null,this.t(\"rotateAdornmentTemplate\",i,t))}get rotateObjectName(){return this.J!==null?this.J.ey:\"\"}set rotateObjectName(t){const i=this.rotateObjectName;i!==t&&(Debug&&U.i(t,\"string\",Part,\"rotateObjectName\"),this.Zi().ey=t,this.t(\"rotateObjectName\",i,t))}get rotateObject(){const t=this.rotateObjectName;if(t!==\"\"){const i=this.findObject(t);if(i!==null)return i}return this}get rotationSpot(){return this.J!==null?this.J.ny:Spot.Default}set rotationSpot(t){const i=this.rotationSpot;i.equals(t)||(Debug&&(U.e(t,Spot,Part,\"rotationSpot\"),t!==Spot.Default&&!t.isSpot()&&U.n(\"Part.rotationSpot must be a specific Spot value or Spot.Default, not: \"+t)),t=t.N(),this.Zi().ny=t,this.t(\"rotationSpot\",i,t))}get text(){return this.fi}set text(t){const i=this.fi;i!==t&&(Debug&&U.i(t,\"string\",Part,\"text\"),this.fi=t,this.t(\"text\",i,t))}get containingGroup(){return this.Ph}set containingGroup(t){if(this.Ce()){const i=this.Ph;if(i!==t){Debug&&t!==null&&U.e(t,Group,Part,\"containingGroup\"),t!==null&&(this===t||t.isMemberOf(this))&&(this===t&&U.n(\"Cannot make a Group a member of itself: \"+this.toString()),U.n(\"Cannot make a Group indirectly contain itself: \"+this.toString()+\" already contains \"+t.toString())),this.invalidateLayout(2);const e=this.diagram;if(i!==null?i.aN(this):this instanceof Group&&e!==null&&e.Wr.delete(this),this.Ph=t,t!==null?t.fN(this):this instanceof Group&&e!==null&&e.Wr.add(this),this.invalidateLayout(1),e!==null&&e.H){const n=this.data,o=e.model;if(n!==null&&o.xa()){const r=t!==null?t.data:null;o.setGroupForData(n,o.getKeyForNodeData(r))}}const s=this.containingGroupChanged;if(s!==null){let n=!0;e!==null&&(n=e.H,e.H=!0),s(this,i,t),e!==null&&(e.H=n)}if(this instanceof Group){const n=new GSet;Part.ch(n,this,!0,0,!0);const o=n.iterator;for(;o.next();){const r=o.value;if(r instanceof Node){const l=r.linksConnected;for(;l.next();)l.value.Td()}}}if(this instanceof Node){const n=this.linksConnected;for(;n.next();)n.value.Td();const o=this.labeledLink;o!==null&&o.Td()}this.t(\"containingGroup\",i,t),t!==null&&t.aO()}}else U.n(\"cannot set the Part.containingGroup of a Link or Adornment\")}wh(){const t=this.containingGroup;t!==null&&(t.hasPlaceholder()&&t.placeholder?.u(),t.u(),t.invalidateConnectedLinks())}L(){const t=this.diagram;t!==null&&!this.ns()&&!this.hh()&&this.isVisible()&&this.Di.isReal()&&t.L(this.ta(this.Di))}u(){if(this.Eo())return;super.u();const t=this.diagram;t!==null&&(t.l0(this),this instanceof Node&&this.labeledLink!==null&&this.labeledLink.hc(),t.requestUpdate(!0))}hc(t){if(this.ns())return;const i=this.diagram;i!==null&&(i.l0(this),this instanceof Node&&this.invalidateConnectedLinks(),i.requestUpdate()),this.to(!0)}zm(t){if(!t){const i=this.Ph;i!==null&&i.fN(this)}}Xm(t){if(!t){const i=this.Ph;i!==null&&i.aN(this)}}Jf(){const t=this.data;if(t!==null){const i=this.diagram;if(i!==null){const e=i.model;e!==null&&e.removeNodeData(t)}}}get containingGroupChanged(){return this.J!==null?this.J.ly:null}set containingGroupChanged(t){const i=this.containingGroupChanged;i!==t&&(t!==null&&U.P(t,Part,\"containingGroupChanged\"),this.Zi().ly=t,this.t(\"containingGroupChanged\",i,t))}findSubGraphLevel(){return this.cN(this)}cN(t){const i=t.containingGroup;if(i!==null)return 1+this.cN(i);if(t instanceof Node){const e=t.labeledLink;if(e!==null)return this.cN(e)}return 0}findTopLevelPart(){return this.uN(this)}uN(t){const i=t.containingGroup;if(i!==null)return this.uN(i);if(t instanceof Node){const e=t.labeledLink;if(e!==null)return this.uN(e)}return t}get isTopLevel(){return!(this.containingGroup!==null||this instanceof Node&&this.labeledLink!==null)}isMemberOf(t){return t instanceof Group?this.dN(this,t):!1}dN(t,i){if(t===i||i===null)return!1;const e=t.containingGroup;if(e!==null&&(e===i||this.dN(e,i)))return!0;if(t instanceof Node){const s=t.labeledLink;if(s!==null)return this.dN(s,i)}return!1}findCommonContainingGroup(t){if(t===null)return null;if(Debug&&U.e(t,Part,Part,\"findCommonContainingGroup:other\"),this===t)return this.containingGroup;let i=this;for(;i!==null;){if(i instanceof Group&&i.Cb(!0),i instanceof Node){const s=i.labeledLink;s!==null&&(i=s)}i=i.containingGroup}let e=null;for(i=t;i!==null;){if(i.xT()){e=i;break}if(i instanceof Node){const s=i.labeledLink;s!==null&&(i=s)}i=i.containingGroup}for(i=this;i!==null;){if(i instanceof Group&&i.Cb(!1),i instanceof Node){const s=i.labeledLink;s!==null&&(i=s)}i=i.containingGroup}return e}get layoutConditions(){return this.J!==null?this.J.hy:127}set layoutConditions(t){const i=this.layoutConditions;i!==t&&(Debug&&U.i(t,\"number\",Part,\"layoutConditions\"),this.Zi().hy=t,this.t(\"layoutConditions\",i,t))}canLayout(){if(!this.isLayoutPositioned||!this.isVisible())return!1;const t=this.layer;return!(t!==null&&t.isTemporary||this instanceof Node&&this.isLinkLabel)}dO(t){if(!this.isLayoutPositioned||!(t&this.layoutConditions))return!1;const i=this.layer;if(i!==null&&i.isTemporary||this instanceof Node&&this.isLinkLabel)return!1;const e=this.diagram;return!(e!==null&&e.undoManager.isUndoingRedoing)}invalidateLayout(t){if(t===void 0&&(t=16777215),!this.dO(t))return;const i=this.Ph;if(i!==null){const e=i.layout;e!==null?e.invalidateLayout():i.invalidateLayout(t)}else{const e=this.diagram;if(e!==null){const s=e.layout;s!==null&&s.invalidateLayout()}}}$A(){if(!this.isVisible())return!1;const t=this.layer;return!(t!==null&&t.isTemporary)}static ch(t,i,e,s,n,o){if(o===void 0&&(o=null),!t.has(i)&&!(o!==null&&!o(i))&&!(i instanceof Adornment)){if(t.add(i),i instanceof Node){if(e&&i instanceof Group){const r=i.memberParts;for(;r.next();){const l=r.value;Part.ch(t,l,e,s,n,o)}}if(n!==!1){const r=i.linksConnected;for(;r.next();){const l=r.value;if(t.has(l))continue;const h=l.fromNode,f=l.toNode,a=h===null||t.has(h),c=f===null||t.has(f);(n?a&&c:a||c)&&Part.ch(t,l,e,s,n,o)}}if(s>1){const r=i.findTreeChildrenNodes();for(;r.next();){const l=r.value;Part.ch(t,l,e,s-1,n,o)}}}else if(i instanceof Link){const r=i.labelNodes;for(;r.next();){const l=r.value;Part.ch(t,l,e,s,n,o)}}}}get dragComputation(){return this.J!==null?this.J.ay:null}set dragComputation(t){const i=this.dragComputation;i!==t&&(t!==null&&U.P(t,Part,\"dragComputation\"),this.Zi().ay=t,this.t(\"dragComputation\",i,t))}get shadowOffset(){return this.J!==null?this.J.fy:Point.kC}set shadowOffset(t){const i=this.shadowOffset;i.equals(t)||(Debug&&U.e(t,Point,Part,\"shadowOffset\"),t=t.N(),this.Zi().fy=t,this.L(),this.t(\"shadowOffset\",i,t))}get shadowColor(){return this.J!==null?this.J.cy:\"gray\"}set shadowColor(t){const i=this.shadowColor;i!==t&&(Debug&&U.i(t,\"string\",Part,\"shadowColor\"),this.Zi().cy=t,this.L(),this.t(\"shadowColor\",i,t))}get shadowBlur(){return this.J!==null?this.J.wn:4}set shadowBlur(t){const i=this.shadowBlur;i!==t&&(Debug&&U.i(t,\"number\",Part,\"shadowBlur\"),this.Zi().wn=t,this.L(),this.t(\"shadowBlur\",i,t))}}class PartTemplateSettings{mi;Gp;ly;$p;Jp;Zp;vp;Qp;_p;ty;iy;ey;ny;Wp;jp;Hp;qp;ay;hy;fy;cy;wn;constructor(){this.mi=!1,this.Gp=null,this.ly=null,this.$p=null,this.Jp=\"\",this.Zp=null,this.vp=null,this.Qp=null,this._p=\"\",this.ty=Size.Pw,this.iy=null,this.ey=\"\",this.ny=Spot.Default,this.Wp=\"\",this.jp=Spot.TopLeft,this.Hp=Point.xC,this.qp=Point.bC,this.ay=null,this.hy=127,this.fy=Point.kC,this.cy=\"gray\",this.wn=4}copy(){const t=new PartTemplateSettings;return t.Gp=this.Gp,t.ly=this.ly,t.$p=this.$p,t.Jp=this.Jp,t.Zp=this.Zp,t.vp=this.vp,t.Qp=this.Qp,t._p=this._p,t.ty=this.ty.N(),t.iy=this.iy,t.ey=this.ey,t.ny=this.ny.N(),t.Wp=this.Wp,t.jp=this.jp.N(),t.Hp=this.Hp.N(),t.qp=this.qp.N(),t.ay=this.ay,t.hy=this.hy,t.fy=this.fy.N(),t.cy=this.cy,t.wn=this.wn,t}}class Adornment extends Part{ys;It;cM;uM;gc;constructor(t,i){let e;t===void 0||t instanceof PanelLayout||typeof t==\"string\"?e=t:t&&(i=t),super(e),this.k&=-257,this.fl=\"Adornment\",this.ys=null,this.cM=0,this.uM=!1,this.It=null,this.gc=null,i&&Object.assign(this,i)}toString(){const t=this.adornedPart;return\"Adornment(\"+this.category+\")\"+(t!==null?t.toString():\"\")}updateRelationshipsFromData(){}fd(t){const i=this.adornedObject;if(!(i instanceof Shape))return;const e=i.part;if(!(e instanceof Link))return;const s=e.path;let n=s.geometry;e.fd(t),n=s.geometry;const o=this.T.h,r=o.length;for(let l=0;l<r;l++){const h=o[l];h.isPanelMain&&h instanceof Shape&&(h.ft=n)}}hasPlaceholder(){return this.It!==null&&this.It.isVisibleObject()}get placeholder(){return this.It}get adornedObject(){return this.ys}set adornedObject(t){Debug&&t!==null&&U.e(t,GraphObject,Part,\"adornedObject:value\");const i=this.adornedPart;let e=null;t!==null&&(e=t.part),i!==null&&(t===null||i!==e)&&i.removeAdornment(this.category),this.ys=t,e!==null&&e.addAdornment(this.category,this)}get adornedPart(){const t=this.ys;return t!==null?t.part:null}vr(){const t=this.ys;if(t===null)return!0;const i=t.part;return i===null||!i.ns()}Ce(){return!1}get containingGroup(){return null}tc(t,i,e,s,n,o,r){if(t===3&&i===\"elements\"){if(n instanceof Placeholder)this.It===null?this.It=n:Debug&&this.It!==n&&U.n(\"Cannot insert a second Placeholder into the visual tree of an Adornment.\");else if(n instanceof Panel){const l=n.findInVisualTree(h=>h instanceof Placeholder);l instanceof Placeholder&&(this.It===null?this.It=l:Debug&&this.It!==l&&U.n(\"Cannot insert a second Placeholder into the visual tree of an Adornment.\"))}}else t===4&&i===\"elements\"&&this.It!==null&&(s===this.It?this.It=null:s instanceof Panel&&this.It.isContainedBy(s)&&(this.It=null));super.tc(t,i,e,s,n,o,r)}updateAdornments(){}Jf(){}}var PortSpreading=(y=>(y[y.None=0]=\"None\",y[y.Evenly=1]=\"Evenly\",y[y.Packed=2]=\"Packed\",y))(PortSpreading||{});class Node extends Part{B;Vt;Ac;ul;Nh;he;oi;constructor(t,i){let e;t===void 0||t instanceof PanelLayout||typeof t==\"string\"?e=t:t&&(i=t),super(e),this.B=13,this.Vt=null,this.oi=new List,this.Ac=null,this.ul=null,this.he=null,this.Nh=!1,i&&Object.assign(this,i)}cloneProtected(t){super.cloneProtected(t),t.B=this.B,this.Vt!==null&&(this.Vt.mi?t.Vt=this.Vt:t.Vt=this.Vt.copy())}Xo(t){super.Xo(t),t.invalidateConnectedLinks(),t.ul=this.ul,t.he=null}static SpreadingNone=0;static SpreadingEvenly=1;static SpreadingPacked=2;dl(){return this.Vt===null?this.Vt=new NodeTemplateSettings:this.Vt.mi&&(this.Vt=this.Vt.copy()),this.Vt}mh(){super.mh(),this.Vt!==null&&(this.Vt.mi=!0)}bT(t){t!==null&&(this.ul===null&&(this.ul=new GSet),this.ul.add(t))}kT(t){t!==null&&this.ul!==null&&this.ul.delete(t)}ST(t,i,e){if(t===null||this.ul===null)return null;const s=this.ul.iterator;for(;s.next();){const n=s.value;if(n.uy===this&&n.Ab===t&&n.gN===i&&n.mN===e||n.uy===t&&n.Ab===this&&n.gN===e&&n.mN===i)return n}return null}invalidateLinkBundle(t,i,e){i==null&&(i=\"\"),e==null&&(e=\"\");const s=this.ST(t,i,e);s!==null&&s.Dd()}tc(t,i,e,s,n,o,r){t===3&&i===\"elements\"?this.he=null:t===4&&i===\"elements\"&&(this.he=null),super.tc(t,i,e,s,n,o,r)}invalidateConnectedLinks(t){const i=this.linksConnected;for(;i.next();){const e=i.value;t!==void 0&&t.has(e)||(this.Qi(e.fromPort),this.Qi(e.toPort),e.invalidateRoute())}}CL(t){const i=this.linksConnected;for(;i.next();){const e=i.value;e.fromPort!==t&&e.toPort!==t||(this.Qi(e.fromPort),this.Qi(e.toPort),e.invalidateRoute())}}Qi(t){if(t===null)return;const i=t.Zu;i!==null&&i.Dd();const e=t.part,s=e.containingGroup;s!==null&&!e.isVisible()&&s.Qi(s.port)}vr(){return!0}get portSpreading(){return this.Vt!==null?this.Vt.gy:1}set portSpreading(t){const i=this.portSpreading;if(i!==t){Debug&&t!==0&&t!==1&&t!==2&&U.n(\"Node.portSpreading can only be set to PortSpreading.None, PortSpreading.Evenly, or PortSpreading.Packed, not: \"+t),this.dl().gy=t,this.t(\"portSpreading\",i,t);const e=this.diagram;if(e!==null&&e.undoManager.isUndoingRedoing)return;this.invalidateConnectedLinks()}}get avoidable(){return(this.B&8)!==0}set avoidable(t){const i=(this.B&8)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",Node,\"avoidable\"),this.B=this.B^8;const e=this.diagram;e!==null&&e.rP(this),this.t(\"avoidable\",i,t)}}get avoidableMargin(){return this.Vt!==null?this.Vt.my:Margin.AC}set avoidableMargin(t){typeof t==\"number\"?t=new Margin(t):U.e(t,Margin,Node,\"avoidableMargin\");const i=this.avoidableMargin;if(!i.equals(t)){t=t.N(),this.dl().my=t;const e=this.diagram;e!==null&&e.rP(this),this.t(\"avoidableMargin\",i,t)}}canAvoid(){return this.avoidable&&!this.isLinkLabel}getAvoidableRect(t){return t.set(this.actualBounds),t.addMargin(this.avoidableMargin),t}findVisibleNode(){let t=this;for(;t!==null&&!t.isVisible();)t=t.containingGroup;return t}isVisible(){if(!super.isVisible())return!1;let t=!0,i=1;const e=this.diagram;if(e!==null){if(e.animationManager.xx(this))return!0;t=e.isTreePathToChildren,i=e.treeCollapsePolicy}if(i===1){const n=this.findTreeParentNode();if(n!==null&&!n.isTreeExpanded)return!1}else if(i===2){const n=t?this.findLinksInto():this.findLinksOutOf();let o=!1,r=!1;for(;n.next();){const l=n.value;if(l.isTreeLink){o=!0;const h=t?l.fromNode:l.toNode;if(h&&h.isTreeExpanded){r=!0;break}}}if(o&&!r)return!1}else if(i===3){const n=t?this.findLinksInto():this.findLinksOutOf();let o=!1,r=!1;for(;n.next();){const l=n.value;if(l.isTreeLink){o=!0;const h=t?l.fromNode:l.toNode;if(h&&!h.isTreeExpanded){r=!0;break}}}if(o&&r)return!1}const s=this.labeledLink;return s!==null?s.isVisible():!0}Ki(t){super.Ki(t);const i=this.linksConnected;for(;i.next();){const e=i.value;if(t&&this.containingGroup!==null){const s=e.getOtherNode(this);s!==null&&!s.isMemberOf(this.containingGroup)&&e.invalidateRoute()}e.Ki(t)}}get linksConnected(){return this.oi.iterator}findExternalTreeLinksConnected(){const t=new GSet,i=new GSet;return this.MT(this,t,i),i.iterator}MT(t,i,e){if(t===null||i.has(t))return;i.add(t);let s=!0;const n=this.diagram;n!==null&&(s=n.isTreePathToChildren),t.linksConnected.each(o=>{o.isTreeLink?(s?o.fromNode===t:o.toNode===t)&&this.MT(s?o.toNode:o.fromNode,i,e):e.add(o)})}findLinksConnected(t){if(t===void 0&&(t=null),t===null)return this.oi.iterator;Debug&&U.i(t,\"string\",Node,\"findLinksConnected:pid\");const i=new ListIterator(this.oi),e=this;return i.predicate=s=>s.fromNode===e&&s.fromPortId===t||s.toNode===e&&s.toPortId===t,i}findLinksOutOf(t){t===void 0&&(t=null),Debug&&t!==null&&U.i(t,\"string\",Node,\"findLinksOutOf:pid\");const i=new ListIterator(this.oi),e=this;return i.predicate=s=>s.fromNode!==e?!1:t===null?!0:s.fromPortId===t,i}findLinksInto(t){t===void 0&&(t=null),Debug&&t!==null&&U.i(t,\"string\",Node,\"findLinksInto:pid\");const i=new ListIterator(this.oi),e=this;return i.predicate=s=>s.toNode!==e?!1:t===null?!0:s.toPortId===t,i}findNodesConnected(t){t===void 0&&(t=null),Debug&&t!==null&&U.i(t,\"string\",Node,\"findNodesConnected:pid\");let i=null,e=null;const s=this.oi.iterator;for(;s.next();){const n=s.value;if(n.fromNode===this){if(t===null||n.fromPortId===t){const o=n.toNode;i!==null?i.add(o):e!==null&&e!==o?(i=new GSet,i.add(e),i.add(o)):e=o}}else if(n.toNode===this&&(t===null||n.toPortId===t)){const o=n.fromNode;i!==null?i.add(o):e!==null&&e!==o?(i=new GSet,i.add(e),i.add(o)):e=o}}return i!==null?i.iterator:e!==null?new SingletonIterator(e):EmptyIterator.instance}findNodesOutOf(t){t===void 0&&(t=null),Debug&&t!==null&&U.i(t,\"string\",Node,\"findNodesOutOf:pid\");let i=null,e=null;const s=this.oi.iterator;for(;s.next();){const n=s.value;if(n.fromNode===this&&(t===null||n.fromPortId===t)){const o=n.toNode;i!==null?i.add(o):e!==null&&e!==o?(i=new GSet,i.add(e),i.add(o)):e=o}}return i!==null?i.iterator:e!==null?new SingletonIterator(e):EmptyIterator.instance}findNodesInto(t){t===void 0&&(t=null),Debug&&t!==null&&U.i(t,\"string\",Node,\"findNodesInto:pid\");let i=null,e=null;const s=this.oi.iterator;for(;s.next();){const n=s.value;if(n.toNode===this&&(t===null||n.toPortId===t)){const o=n.fromNode;i!==null?i.add(o):e!==null&&e!==o?(i=new GSet,i.add(e),i.add(o)):e=o}}return i!==null?i.iterator:e!==null?new SingletonIterator(e):EmptyIterator.instance}findLinksBetween(t,i,e){i===void 0&&(i=null),e===void 0&&(e=null),Debug&&(U.e(t,Node,Node,\"findLinksBetween:othernode\"),i!==null&&U.i(i,\"string\",Node,\"findLinksBetween:pid\"),e!==null&&U.i(e,\"string\",Node,\"findLinksBetween:otherpid\"));const s=new ListIterator(this.oi),n=this;return s.predicate=o=>o.fromNode===n&&o.toNode===t&&(i===null||o.fromPortId===i)&&(e===null||o.toPortId===e)||o.fromNode===t&&o.toNode===n&&(e===null||o.fromPortId===e)&&(i===null||o.toPortId===i),s}findLinksTo(t,i,e){i===void 0&&(i=null),e===void 0&&(e=null),Debug&&(U.e(t,Node,Node,\"findLinksTo:othernode\"),i!==null&&U.i(i,\"string\",Node,\"findLinksTo:pid\"),e!==null&&U.i(e,\"string\",Node,\"findLinksTo:otherpid\"));const s=new ListIterator(this.oi),n=this;return s.predicate=o=>!(o.fromNode!==n||o.toNode!==t||i!==null&&o.fromPortId!==i||e!==null&&o.toPortId!==e),s}get linkConnected(){return this.Vt!==null?this.Vt.yy:null}set linkConnected(t){const i=this.linkConnected;i!==t&&(t!==null&&U.P(t,Node,\"linkConnected\"),this.dl().yy=t,this.t(\"linkConnected\",i,t))}get linkDisconnected(){return this.Vt!==null?this.Vt.wy:null}set linkDisconnected(t){const i=this.linkDisconnected;i!==t&&(t!==null&&U.P(t,Node,\"linkDisconnected\"),this.dl().wy=t,this.t(\"linkDisconnected\",i,t))}get linkValidation(){return this.Vt!==null?this.Vt.Tl:null}set linkValidation(t){const i=this.linkValidation;i!==t&&(t!==null&&U.P(t,Node,\"linkValidation\"),this.dl().Tl=t,this.t(\"linkValidation\",i,t))}Lb(t,i){this.Qi(i);const e=this.oi.has(t);if(e||this.oi.add(t),!e||t.fromNode===t.toNode){const s=this.linkConnected;if(s!==null){let n=!0;const o=this.diagram;o!==null&&(n=o.H,o.H=!0),s(this,t,i),o!==null&&(o.H=n)}}if(!e){if(!t.isTreeLink)return;const s=t.fromNode,n=t.toNode;if(s!==null&&n!==null&&s!==n){let o=!0;const r=this.diagram;r!==null&&(o=r.isTreePathToChildren);const l=o?n:s,h=o?s:n;if(l.Nh||(l.Nh=h),h.isTreeLeaf){if(r!==null&&r.undoManager.isUndoingRedoing)return;o?s===h&&(h.isTreeLeaf=!1):n===h&&(h.isTreeLeaf=!1)}}}}Tb(t,i){this.Qi(i);const e=this.oi.delete(t);let s=null;if(e||t.toNode===t.fromNode){const n=this.linkDisconnected;if(s=this.diagram,n!==null){let o=!0;s!==null&&(o=s.H,s.H=!0),n(this,t,i),s!==null&&(s.H=o)}}if(e){if(!t.isTreeLink)return;let n=!0;s!==null&&(n=s.isTreePathToChildren);const o=n?t.toNode:t.fromNode,r=n?t.fromNode:t.toNode;if(o!==null&&(o.Nh=!1),r!==null&&!r.isTreeLeaf)if(r.oi.count===0){if(r.Nh=null,s!==null&&s.undoManager.isUndoingRedoing)return;r.isTreeLeaf=!0}else r.d0()}}d0(){if(this.Nh=!1,this.oi.count===0)return;let t=!0;const i=this.diagram;if(i!==null&&i.undoManager.isUndoingRedoing)return;i!==null&&(t=i.isTreePathToChildren);const e=this.oi.iterator;for(;e.next();){const s=e.value;if(s.isTreeLink){if(t){if(s.fromNode===this){this.isTreeLeaf=!1;return}}else if(s.toNode===this){this.isTreeLeaf=!1;return}}}this.isTreeLeaf=!0}updateRelationshipsFromData(){const t=this.diagram;t!==null&&t.partManager.updateRelationshipsFromData(this)}zm(t){if(super.zm(t),!t){this.d0();const i=this.Ac;i!==null&&i.PT(this)}}Xm(t){if(super.Xm(t),!t){const i=this.Ac;i!==null&&i.NT(this)}}Jf(){if(this.oi.count>0){const t=this.diagram;if(t!==null){const i=t.commandHandler!==null?t.commandHandler.deletesConnectedLinks:!0,s=this.oi.copy().iterator;for(;s.next();){const n=s.value;i?t.remove(n):(n.fromNode===this&&(n.fromNode=null),n.toNode===this&&(n.toNode=null))}}}this.labeledLink=null,super.Jf()}get isLinkLabel(){return this.Ac!==null}get labeledLink(){return this.Ac}set labeledLink(t){const i=this.Ac;if(i!==t){Debug&&t!==null&&U.e(t,Link,Node,\"labeledLink\");const e=this.diagram,s=this.data;if(i!==null){if(i.NT(this),e!==null&&s!==null&&!e.undoManager.isUndoingRedoing){const n=i.data,o=e.model;if(n!==null&&o.Ya()){const r=o.getKeyForNodeData(s);r!==void 0&&o.removeLabelKeyForLinkData(n,r)}}this.containingGroup=null}if(this.Ac=t,t!==null){if(t.PT(this),e!==null&&s!==null&&!e.undoManager.isUndoingRedoing){const n=t.data,o=e.model;if(n!==null&&o.Ya()){const r=o.getKeyForNodeData(s);r!==void 0&&o.addLabelKeyForLinkData(n,r)}}this.containingGroup=t.containingGroup}this.hc(),this.t(\"labeledLink\",i,t)}}findVisiblePort(t){let i=t;for(;i!==null&&(!i.actualBounds.isReal()||!i.isVisibleObject());)i=i.panel;return i===null?this.port:i}findPort(t){if(Debug&&U.i(t,\"string\",Node,\"findPort:pid\"),this.he===null){if(t===\"\"&&this.yn===!1)return this;this.CT()}let i=this.he.get(t);return i!==null||t!==\"\"&&(i=this.he.get(\"\"),i!==null)?i:this}get port(){return this.findPort(\"\")}get ports(){return this.he===null&&this.CT(),this.he.iteratorValues}CT(){this.he===null?this.he=new GMap:this.he.clear(),this.walkVisualTreeFrom(this,(t,i)=>t.IL(i)),this.he.count===0&&this.he.set(\"\",this)}IL(t){const i=t.portId;i!==null&&this.he!==null&&this.he.set(i,t)}IP(t,i){const e=t.portId;if(e!==null){this.he!==null&&this.he.delete(e);const s=this.diagram;if(s!==null&&i){let n=null;const o=this.findLinksConnected(e);for(;o.next();){const r=o.value;n===null&&(n=U.lt()),n.push(r)}if(n!==null){for(let r=0;r<n.length;r++){const l=n[r];s.remove(l)}U.tt(n)}}}}isInTreeOf(t){if(t===null||t===this)return!1;let i=!0;const e=this.diagram;e!==null&&(i=e.isTreePathToChildren);let s=this;const n=t;let o;if(i)for(;s!==n;){o=null;const r=s.oi.iterator;for(;r.next();){const l=r.value;if(l.isTreeLink&&(o=l.fromNode,o!==s&&o!==this))break}if(o===this||o===null||o===s)return!1;s=o}else for(;s!==n;){o=null;const r=s.oi.iterator;for(;r.next();){const l=r.value;if(l.isTreeLink&&(o=l.toNode,o!==s&&o!==this))break}if(o===this||o===null||o===s)return!1;s=o}return!0}findTreeRoot(){let t=!0;const i=this.diagram;i!==null&&(t=i.isTreePathToChildren);let e=this,s;if(t)for(;;){s=null;const n=e.oi.iterator;for(;n.next();){const o=n.value;if(o.isTreeLink&&(s=o.fromNode,s!==e&&s!==this))break}if(s===this)return this;if(s===null||s===e)return e;e=s}else for(;;){s=null;const n=e.oi.iterator;for(;n.next();){const o=n.value;if(o.isTreeLink&&(s=o.toNode,s!==e&&s!==this))break}if(s===this)return this;if(s===null||s===e)return e;e=s}}findCommonTreeParent(t){if(t===null)return null;if(Debug&&U.e(t,Node,Node,\"findCommonTreeParent:other\"),this===t)return this;let i=this;for(;i!==null;)i.Cb(!0),i=i.findTreeParentNode();let e=null;for(i=t;i!==null;){if(i.xT()){e=i;break}i=i.findTreeParentNode()}for(i=this;i!==null;)i.Cb(!1),i=i.findTreeParentNode();return e}findTreeParentLink(){let t=!0;const i=this.diagram;i!==null&&(t=i.isTreePathToChildren);const e=this.oi.iterator;if(t)for(;e.next();){const s=e.value;if(s.isTreeLink&&s.fromNode!==this)return s}else for(;e.next();){const s=e.value;if(s.isTreeLink&&s.toNode!==this)return s}return null}findTreeParentNode(){const t=this.Nh;if(t===null)return null;if(t instanceof Node)return t;const i=this.diagram,e=i!==null?i.isTreePathToChildren:!0,s=this.oi.iterator;for(;s.next();){const n=s.value;if(!n.isTreeLink)continue;const o=e?n.fromNode:n.toNode;if(o!==this)return this.Nh=o,o}return this.Nh=null,null}findTreeParentChain(){function t(e,s){s.add(e);const n=e.findTreeParentLink();if(n!==null){s.add(n);const o=e.findTreeParentNode();if(o===null)return;t(o,s)}}const i=new GSet;return t(this,i),i}findTreeLevel(){return this.gO(this)}gO(t){let i=0,e=t.findTreeParentNode();for(;e!==null&&e!==t;)e=e.findTreeParentNode(),i++;return i}findTreeChildrenLinks(){let t=!0;const i=this.diagram;i!==null&&(t=i.isTreePathToChildren);const e=new ListIterator(this.oi),s=this;return t?e.predicate=n=>!(!n.isTreeLink||n.fromNode!==s):e.predicate=n=>!(!n.isTreeLink||n.toNode!==s),e}findTreeChildrenNodes(){let t=!0;const i=this.diagram;i!==null&&(t=i.isTreePathToChildren);let e=null,s=null;const n=this.oi.iterator;if(t)for(;n.next();){const o=n.value;if(o.isTreeLink&&o.fromNode===this){const r=o.toNode;e!==null?e.add(r):s!==null&&s!==r?(e=new List,e.add(s),e.add(r)):s=r}}else for(;n.next();){const o=n.value;if(o.isTreeLink&&o.toNode===this){const r=o.fromNode;e!==null?e.add(r):s!==null&&s!==r?(e=new List,e.add(s),e.add(r)):s=r}}return e!==null?e.iterator:s!==null?new SingletonIterator(s):EmptyIterator.instance}findTreeParts(t){t===void 0&&(t=1/0),U.i(t,\"number\",Node,\"findTreeParts:level\");const i=new GSet;return Part.ch(i,this,!1,t,!0),i}collapseTree(t){t===void 0&&(t=1),U.r(t,Node,\"collapseTree:level\"),t<1&&(t=1);const i=this.diagram;if(i===null||i.isCollapsingExpanding)return;i.isCollapsingExpanding=!0;const e=new GSet;e.add(this),this.AT(e,i.isTreePathToChildren,t,i,this,i.treeCollapsePolicy===1),i.isCollapsingExpanding=!1}AT(t,i,e,s,n,o){if(e>1){const r=i?this.findLinksOutOf():this.findLinksInto();for(;r.next();){const l=r.value;if(!l.isTreeLink)continue;const h=l.getOtherNode(this);h!==null&&h!==this&&!t.has(h)&&(t.add(h),h.AT(t,i,e-1,s,n,o))}}else this.LT(t,i,s,n,o)}LT(t,i,e,s,n){const o=s===this?!0:this.isTreeExpanded,r=i?this.findLinksOutOf():this.findLinksInto();for(;r.next();){const l=r.value;if(!l.isTreeLink)continue;const h=l.getOtherNode(this);if(h!==null&&h!==this){const f=t.has(h);if(f||t.add(h),o){const a=i?h.findNodesInto():h.findNodesOutOf(),c=this;a.all(u=>u===c||!u.isTreeExpanded)&&e.Ef(h,s),h.wh(),h.Ki(!1)}h.isTreeExpanded&&(h.wasTreeExpanded=h.isTreeExpanded,f||h.LT(t,i,e,s,n))}}this.isTreeExpanded=!1}expandTree(t){t===void 0&&(t=2),U.r(t,Node,\"expandTree:level\"),t<2&&(t=2);const i=this.diagram;if(i===null||i.isCollapsingExpanding)return;i.isCollapsingExpanding=!0;const e=new GSet;e.add(this),this.TT(e,i.isTreePathToChildren,t,i,this,i.treeCollapsePolicy===1),i.isCollapsingExpanding=!1}TT(t,i,e,s,n,o){const r=n===this?!1:this.isTreeExpanded,l=i?this.findLinksOutOf():this.findLinksInto();for(;l.next();){const h=l.value;if(!h.isTreeLink)continue;r||h.Le||h.invalidateRoute();const f=h.getOtherNode(this);if(f!==null&&f!==this&&!t.has(f)){if(t.add(f),!r){f.Ki(!0),f.wh();const a=i?f.findNodesInto():f.findNodesOutOf(),c=this;a.all(u=>u===c||!u.isTreeExpanded)&&s.Of(f,n)}(e>2||f.wasTreeExpanded)&&(f.wasTreeExpanded=!1,f.TT(t,i,e-1,s,n,o))}}this.isTreeExpanded=!0}get isTreeExpanded(){return(this.B&1)!==0}set isTreeExpanded(t){const i=(this.B&1)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",Node,\"isTreeExpanded\"),this.B=this.B^1;const e=this.diagram;this.t(\"isTreeExpanded\",i,t);const s=this.treeExpandedChanged;if(s!==null){let n=!0;e!==null&&(n=e.H,e.H=!0),s(this),e!==null&&(e.H=n)}if(e!==null&&e.undoManager.isUndoingRedoing){this.Ki(t);return}t?this.expandTree():this.collapseTree()}}get wasTreeExpanded(){return(this.B&2)!==0}set wasTreeExpanded(t){const i=(this.B&2)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Node,\"wasTreeExpanded\"),this.B=this.B^2,this.t(\"wasTreeExpanded\",i,t))}get treeExpandedChanged(){return this.Vt!==null?this.Vt.xy:null}set treeExpandedChanged(t){const i=this.treeExpandedChanged;i!==t&&(t!==null&&U.P(t,Node,\"treeExpandedChanged\"),this.dl().xy=t,this.t(\"treeExpandedChanged\",i,t))}get isTreeLeaf(){return(this.B&4)!==0}set isTreeLeaf(t){const i=(this.B&4)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Node,\"isTreeLeaf\"),this.B=this.B^4,this.t(\"isTreeLeaf\",i,t))}get isTreeRoot(){return this.findTreeParentLink()===null}}class NodeTemplateSettings{mi;yy;wy;Tl;xy;my;gy;by;ky;fh;Sy;constructor(){this.mi=!1,this.yy=null,this.wy=null,this.Tl=null,this.xy=null,this.my=Margin.AC,this.gy=1,this.by=null,this.ky=null,this.fh=null,this.Sy=null}copy(){const t=new NodeTemplateSettings;return t.yy=this.yy,t.wy=this.wy,t.Tl=this.Tl,t.xy=this.xy,t.my=this.my.N(),t.gy=this.gy,t.by=this.by,t.ky=this.ky,t.fh=this.fh,t.Sy=this.Sy,t}}var LinkAdjusting=(y=>(y[y.None=0]=\"None\",y[y.End=17]=\"End\",y[y.Scale=18]=\"Scale\",y[y.Stretch=19]=\"Stretch\",y))(LinkAdjusting||{}),Routing=(y=>(y[y.Normal=1]=\"Normal\",y[y.Orthogonal=2]=\"Orthogonal\",y[y.AvoidsNodes=6]=\"AvoidsNodes\",y[y.AvoidsNodesStraight=7]=\"AvoidsNodesStraight\",y))(Routing||{}),Curve=(y=>(y[y.None=0]=\"None\",y[y.Bezier=9]=\"Bezier\",y[y.JumpGap=10]=\"JumpGap\",y[y.JumpOver=11]=\"JumpOver\",y))(Curve||{});class Link extends Part{Dt;ho;ao;Fd;fo;co;Rd;Lc;Id;Od;Ed;Ka;Bd;$s;Mi;Re;Cr;Tc;$o;pN;yN;Db;wN;xN;Ua;Fb;ft;Zo;static Ga=null;static Ha=null;gc;bN;kN;constructor(t){super(Panel.Link),this.Dt=8,this.ho=null,this.ao=\"\",this.Fd=null,this.fo=null,this.co=\"\",this.Rd=null,this.Lc=0,this.Id=0,this.Od=0,this.Ed=NaN,this.Ka=1,this.Bd=.5,this.$s=null,this.Mi=new List().p(),this.Re=null,this.Cr=null,this.Tc=new Rect,this.ft=new Geometry,this.$o=null,this.Zo=null,this.pN=null,this.yN=null,this.bN=0,this.kN=0,this.Db=new Point,this.wN=null,this.xN=null,this.Ua=null,this.Fb=NaN,this.yt=null,this.gc=[],t&&Object.assign(this,t)}cloneProtected(t){super.cloneProtected(t),t.Dt=this.Dt&-113,t.ao=this.ao,t.Fd=this.Fd,t.co=this.co,t.Rd=this.Rd,t.Lc=this.Lc,t.Id=this.Id,t.Od=this.Od,t.Ed=this.Ed,t.Ka=this.Ka,t.Bd=this.Bd,this.yt!==null&&(t.yt=this.yt.copy())}Xo(t){super.Xo(t),this.ao=t.ao,this.co=t.co,t.Re=null,t.invalidateRoute(),t.Zo=this.Zo;const i=t.fromPort;i!==null&&t.fromNode.Qi(i);const e=t.toPort;e!==null&&t.toNode.Qi(e)}ai(t){t in Routing||t in Curve||t in LinkAdjusting?Link.SN(t)?this.routing=t:t===9||t===10||t===11?this.curve=t:t===17||t===18||t===19?this.adjusting=t:t===1||t===0||U.n(\"Unknown Link enum value for a Link property: \"+t):super.ai(t)}static Normal=1;static Orthogonal=2;static AvoidsNodes=6;static AvoidsNodesStraight=7;static None=0;static Bezier=9;static JumpGap=10;static JumpOver=11;static End=17;static Scale=18;static Stretch=19;static OrientAlong=21;static OrientPlus90=22;static OrientMinus90=23;static OrientOpposite=24;static OrientUpright=25;static OrientPlus90Upright=26;static OrientMinus90Upright=27;static OrientUpright45=28;static mO=8;static pO=16;static yO=14;static qa=8;Ge(){return this.yt===null&&(this.yt=new LinkSettings),this.yt}AI(t,i,e){const s=t.segmentIndex,n=t.segmentFraction;let o=t.alignmentFocus;const r=t.segmentOrientation,l=t.segmentOffset;let h=0,f=0,a=0,c=0;if(isNaN(s)){const C=this.ft,P=U.lt();C.getPointAndAngleAlongPath(n,P);const N=Point.K(P[0],P[1]);if(N.add(this.getPoint(0)),C.type===1)N.offset(-C.startX,-C.startY);else{const T=C.figures.first();N.offset(-T.startX,-T.startY)}c=P[2],r!==0&&(a=this.computeAngle(t,r,c),t.angle=a),h=N.x,f=N.y,Point.o(N),U.tt(P)}else if(s<-i||s>=i){const C=Point.a();this.YL(C),c=this.midAngle,r!==0&&(a=this.computeAngle(t,r,c),t.angle=a),h=C.x,f=C.y,Point.o(C)}else{let C,P,N=0;if(s>=0?(C=e.h[s],P=s<i-1?e.h[s+1]:C):(N=i+s,C=e.h[N],P=N>0?e.h[N-1]:C),C.equalsApprox(P)){let T,L;s>=0?(T=s>0?e.h[s-1]:C,L=s<i-2?e.h[s+2]:P):(T=N<i-1?e.h[N+1]:C,L=N>1?e.h[N-2]:P);const D=T.distanceSquaredPoint(C),F=P.distanceSquaredPoint(L);D>F+10?c=s>=0?T.directionPoint(C):C.directionPoint(T):F>D+10?c=s>=0?P.directionPoint(L):L.directionPoint(P):c=s>=0?T.directionPoint(L):L.directionPoint(T)}else c=s>=0?C.directionPoint(P):P.directionPoint(C);r!==0&&(a=this.computeAngle(t,r,c),t.angle=a),h=C.x+(P.x-C.x)*n,f=C.y+(P.y-C.y)*n}if(o.isNone()){t.location=new Point(h,f);return}else o.isNoSpot()&&(o=Spot.Center);const u=Transform.a();u.Vi(),u.ot(t.scale,t.scale),u.ms(t.angle,0,0);const d=t.naturalBounds,m=Rect.K(0,0,d.width,d.height),g=Point.a();g.setRectSpot(m,o),u.kt(g);let p=-g.x,w=-g.y;const x=d.width,k=d.height,b=Point.a();b.c(l);const S=isNaN(l.x),M=isNaN(l.y);if(S||M){const C=x/2+3,P=k/2+3,N=c>=45&&c<=135,T=c>=225&&c<=315;r===0&&(N||T)?(b.x=M?C:l.y,b.y=S?P:l.x,N?s>=0||isNaN(s)&&n<.5||S&&(b.y=-P):T&&((s>=0||isNaN(s)&&n<.5)&&S&&(b.y=-P),M&&(b.x=-C))):(S&&(s>=0||isNaN(s)&&n<.5?b.x=C:b.x=-C),M&&(b.y=-P),b.rotate(c))}else b.rotate(c);h+=b.x,f+=b.y,u.Yg(m),p+=m.x,w+=m.y;const A=Point.K(h+p,f+w);t.move(A),Point.o(A),Point.o(b),Point.o(g),Rect.o(m),Transform.o(u)}vr(){let t=this.fromNode;if(t!==null){const e=t.findVisibleNode();if(e!==null&&(t=e),t.ns()||t.hh())return!1}let i=this.toNode;if(i!==null){const e=i.findVisibleNode();if(e!==null&&(i=e),i.ns()||i.hh())return!1}return!0}FP(t,i,e){return!1}RP(){}Ce(){return!1}computeAngle(t,i,e){return Link.computeAngle(i,e)}static computeAngle(t,i){let e=0;switch(t){default:case 0:e=0;break;case 21:e=i;break;case 22:e=i+90;break;case 23:e=i-90;break;case 24:e=i+180;break;case 25:e=Geo.Hg(i),e>90&&e<270&&(e-=180);break;case 26:e=Geo.Hg(i+90),e>90&&e<270&&(e-=180);break;case 27:e=Geo.Hg(i-90),e>90&&e<270&&(e-=180);break;case 28:if(e=Geo.Hg(i),e>45&&e<135||e>225&&e<315)return 0;e>90&&e<270&&(e-=180);break}return Geo.Hg(e)}get fromNode(){return this.ho}set fromNode(t){const i=this.ho;if(i!==t){Debug&&t!==null&&U.e(t,Node,Link,\"fromNode\");const e=this.fromPort;i!==null&&(this.fo!==i&&i.Tb(this,e),this.My(),this.invalidateLayout(2)),this.ho=t,t!==null&&this.Ki(t.isVisible()),this.$o=null,this.invalidateRoute();const s=this.diagram;s!==null&&s.H&&s.partManager.setFromNodeForLink(this,t,i);const n=this.fromPort,o=this.fromPortChanged;if(o!==null){let r=!0;s!==null&&(r=s.H,s.H=!0),o(this,e,n),s!==null&&(s.H=r)}t!==null&&(this.fo!==t&&t.Lb(this,n),this.Py(),this.invalidateLayout(1)),this.t(\"fromNode\",i,t),this.Td()}}get fromPortId(){return this.ao}set fromPortId(t){const i=this.ao;if(i!==t){Debug&&U.i(t,\"string\",Link,\"fromPortId\");const e=this.fromPort;e!==null&&this.fromNode?.Qi(e),this.My(),this.ao=t;const s=this.fromPort;s!==null&&this.fromNode?.Qi(s);const n=this.diagram;if(n!==null){const o=this.data,r=n.model;o!==null&&r.Ya()&&r.setFromPortIdForLinkData(o,t)}if(e!==s){this.$o=null,this.invalidateRoute();const o=this.fromPortChanged;if(o!==null){let r=!0;n!==null&&(r=n.H,n.H=!0),o(this,e,s),n!==null&&(n.H=r)}}this.Py(),this.t(\"fromPortId\",i,t)}}get fromPort(){const t=this.ho;if(t===null)return null;const i=this.ao;return t.findPort(i)}get fromPortChanged(){return this.Fd}set fromPortChanged(t){const i=this.Fd;i!==t&&(t!==null&&U.P(t,Link,\"fromPortChanged\"),this.Fd=t,this.t(\"fromPortChanged\",i,t))}get toNode(){return this.fo}set toNode(t){const i=this.fo;if(i!==t){Debug&&t!==null&&U.e(t,Node,Link,\"toNode\");const e=this.toPort;i!==null&&(this.ho!==i&&i.Tb(this,e),this.My(),this.invalidateLayout(2)),this.fo=t,t!==null&&this.Ki(t.isVisible()),this.$o=null,this.invalidateRoute();const s=this.diagram;s!==null&&s.H&&s.partManager.setToNodeForLink(this,t,i);const n=this.toPort,o=this.toPortChanged;if(o!==null){let r=!0;s!==null&&(r=s.H,s.H=!0),o(this,e,n),s!==null&&(s.H=r)}t!==null&&(this.ho!==t&&t.Lb(this,n),this.Py(),this.invalidateLayout(1)),this.t(\"toNode\",i,t),this.Td()}}get toPortId(){return this.co}set toPortId(t){const i=this.co;if(i!==t){Debug&&U.i(t,\"string\",Link,\"toPortId\");const e=this.toPort;e!==null&&this.toNode?.Qi(e),this.My(),this.co=t;const s=this.toPort;s!==null&&this.toNode?.Qi(s);const n=this.diagram;if(n!==null){const o=this.data,r=n.model;o!==null&&r.Ya()&&r.setToPortIdForLinkData(o,t)}if(e!==s){this.$o=null,this.invalidateRoute();const o=this.toPortChanged;if(o!==null){let r=!0;n!==null&&(r=n.H,n.H=!0),o(this,e,s),n!==null&&(n.H=r)}}this.Py(),this.t(\"toPortId\",i,t)}}get toPort(){const t=this.fo;if(t===null)return null;const i=this.co;return t.findPort(i)}get toPortChanged(){return this.Rd}set toPortChanged(t){const i=this.Rd;i!==t&&(t!==null&&U.P(t,Link,\"toPortChanged\"),this.Rd=t,this.t(\"toPortChanged\",i,t))}get fromSpot(){return this.yt!==null?this.yt.ka:Spot.Default}set fromSpot(t){const i=this.fromSpot;if(!i.equals(t)){if(Debug&&U.e(t,Spot,Link,\"fromSpot\"),t=t.N(),this.Ge().ka=t,this.t(\"fromSpot\",i,t),i.isSide()||t.isSide()){const e=this.fromNode;e!==null&&e.Qi(this.fromPort)}this.invalidateRoute()}}get fromEndSegmentLength(){return this.yt!==null?this.yt.Ma:NaN}set fromEndSegmentLength(t){const i=this.fromEndSegmentLength;if(i!==t){if(Debug&&U.i(t,\"number\",Link,\"fromEndSegmentLength\"),t<0&&U.U(t,\">= 0\",Link,\"fromEndSegmentLength\"),this.Ge().Ma=t,this.t(\"fromEndSegmentLength\",i,t),this.computeSpot(!0,this.fromPort).isSide()){const e=this.fromNode;e!==null&&e.Qi(this.fromPort)}this.invalidateRoute()}}get fromShortLength(){return this.yt!==null?this.yt.Na:NaN}set fromShortLength(t){const i=this.fromShortLength;i!==t&&(Debug&&U.i(t,\"number\",Link,\"fromShortLength\"),this.Ge().Na=t,this.re(),this.t(\"fromShortLength\",i,t))}get toSpot(){return this.yt!==null?this.yt.Sa:Spot.Default}set toSpot(t){const i=this.toSpot;if(!i.equals(t)){if(Debug&&U.e(t,Spot,Link,\"toSpot\"),t=t.N(),this.Ge().Sa=t,this.t(\"toSpot\",i,t),i.isSide()||t.isSide()){const e=this.toNode;e!==null&&e.Qi(this.toPort)}this.invalidateRoute()}}get toEndSegmentLength(){return this.yt!==null?this.yt.Pa:NaN}set toEndSegmentLength(t){const i=this.toEndSegmentLength;if(i!==t){if(Debug&&U.i(t,\"number\",Link,\"toEndSegmentLength\"),t<0&&U.U(t,\">= 0\",Link,\"toEndSegmentLength\"),this.Ge().Pa=t,this.t(\"toEndSegmentLength\",i,t),this.computeSpot(!1,this.toPort).isSide()){const e=this.toNode;e!==null&&e.Qi(this.toPort)}this.invalidateRoute()}}get toShortLength(){return this.yt!==null?this.yt.Ca:NaN}set toShortLength(t){const i=this.toShortLength;i!==t&&(Debug&&U.i(t,\"number\",Link,\"toShortLength\"),this.Ge().Ca=t,this.re(),this.t(\"toShortLength\",i,t))}Td(){const t=this.fromNode,i=this.toNode;let e=null;if(t!==null?i!==null?e=t.findCommonContainingGroup(i):e=t.containingGroup:i!==null?e=i.containingGroup:e=null,this.wO(e),this.isLabeledLink){const s=this.labelNodes;for(;s.next();){const n=s.value;n.containingGroup=e}}}wO(t){const i=this.Ph;if(i!==t){i!==null&&i.aN(this),this.Ph=t,t!==null&&t.fN(this);const e=this.containingGroupChanged;if(e!==null){let s=!0;const n=this.diagram;n!==null&&(s=n.H,n.H=!0),e(this,i,t),n!==null&&(n.H=s)}this.Le&&(this.wN===i||this.xN===i)&&this.invalidateRoute()}}wh(){const t=this.containingGroup;t!==null&&this.fromNode!==t&&this.toNode!==t&&t.computesBoundsIncludingLinks&&super.wh()}getOtherNode(t){Debug&&U.e(t,Node,Link,\"getOtherNode:node\");const i=this.fromNode;return t===i?this.toNode:i}getOtherPort(t){Debug&&U.e(t,GraphObject,Link,\"getOtherPort:port\");const i=this.fromPort;return t===i?this.toPort:i}get isLabeledLink(){return this.$s===null?!1:this.$s.count>0}get labelNodes(){return this.$s===null?EmptyIterator.instance:this.$s.iterator}PT(t){this.$s===null&&(this.$s=new GSet),this.$s.add(t),this.u()}NT(t){this.$s!==null&&(this.$s.delete(t),this.u())}zm(t){if(super.zm(t),this.Wa()&&this.invalidateOtherJumpOvers(this.actualBounds),!t){const i=this.ho;let e=null;i!==null&&(e=this.fromPort,i.Lb(this,e));const s=this.fo;let n=null;s!==null&&(n=this.toPort,(s!==i||n!==e)&&s.Lb(this,n)),this.Py()}}Xm(t){if(super.Xm(t),this.Wa()&&this.invalidateOtherJumpOvers(this.actualBounds),!t){const i=this.ho;let e=null;i!==null&&(e=this.fromPort,i.Tb(this,e));const s=this.fo;let n=null;s!==null&&(n=this.toPort,(s!==i||n!==e)&&s.Tb(this,n)),this.My()}}Jf(){if(this.Le=!0,this.$s!==null){const i=this.diagram;if(i!==null){const s=this.$s.copy().iterator;for(;s.next();){const n=s.value;i.remove(n)}}}if(this.data!==null){const i=this.diagram;i!==null&&i.partManager.MN(this)}}updateRelationshipsFromData(){if(this.data===null)return;const i=this.diagram;i!==null&&i.partManager.updateRelationshipsFromData(this)}move(t,i){const e=i?this.location:this.position;let s=e.x;isNaN(s)&&(s=0);let n=e.y;isNaN(n)&&(n=0);const o=t.x-s,r=t.y-n;if(i===!0)super.move(t,!1);else{const h=Point.K(e.x+o,e.y+r);super.move(h,!1),Point.o(h)}this.wr(o,r);const l=this.labelNodes;for(;l.next();){const h=l.value,f=h.position;h.moveTo(f.x+o,f.y+r)}}get relinkableFrom(){return(this.Dt&1)!==0}set relinkableFrom(t){const i=(this.Dt&1)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Link,\"relinkableFrom\"),this.Dt=this.Dt^1,this.t(\"relinkableFrom\",i,t),this.invalidateAdornments())}get relinkableTo(){return(this.Dt&2)!==0}set relinkableTo(t){const i=(this.Dt&2)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Link,\"relinkableTo\"),this.Dt=this.Dt^2,this.t(\"relinkableTo\",i,t),this.invalidateAdornments())}canRelinkFrom(){if(!this.relinkableFrom)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowRelink)return!1;const i=t.diagram;return!(i!==null&&!i.allowRelink)}canRelinkTo(){if(!this.relinkableTo)return!1;const t=this.layer;if(t===null)return!0;if(!t.allowRelink)return!1;const i=t.diagram;return!(i!==null&&!i.allowRelink)}get resegmentable(){return(this.Dt&4)!==0}set resegmentable(t){const i=(this.Dt&4)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Link,\"resegmentable\"),this.Dt=this.Dt^4,this.t(\"resegmentable\",i,t),this.invalidateAdornments())}get isTreeLink(){return(this.Dt&8)!==0}set isTreeLink(t){const i=(this.Dt&8)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Link,\"isTreeLink\"),this.Dt=this.Dt^8,this.t(\"isTreeLink\",i,t),this.fromNode!==null&&this.fromNode.d0(),this.toNode!==null&&this.toNode.d0())}get path(){const t=this.findMainElement();return t instanceof Shape?t:null}get routeBounds(){return this.updateRoute(),this.xO(this.Tc)}xO(t){let i=1/0,e=1/0;const s=this.pointsCount;if(s===0)return t.s(NaN,NaN,0,0),t;if(s===1){const n=this.getPoint(0);i=Math.min(n.x,i),e=Math.min(n.y,e),t.s(n.x,n.y,0,0)}else if(s===2){const n=this.getPoint(0),o=this.getPoint(1);i=Math.min(n.x,o.x),e=Math.min(n.y,o.y),t.s(n.x,n.y,0,0),t.unionPoint(o)}else if(this.computeCurve()===9&&s>=3&&!this.isOrthogonal){let n=this.getPoint(0);if(i=n.x,e=n.y,t.s(i,e,0,0),s===3){const o=this.getPoint(1);i=Math.min(o.x,i),e=Math.min(o.y,e);const r=this.getPoint(2);i=Math.min(r.x,i),e=Math.min(r.y,e),Geo.cu(n.x,n.y,o.x,o.y,o.x,o.y,r.x,r.y,.5,t)}else for(let o=3;o<s;o+=3){const r=this.getPoint(o-2);o+3>=s&&(o=s-1);const l=this.getPoint(o-1),h=this.getPoint(o);Geo.cu(n.x,n.y,r.x,r.y,l.x,l.y,h.x,h.y,.5,t),i=Math.min(h.x,i),e=Math.min(h.y,e),n=h}}else{const n=this.getPoint(0),o=this.getPoint(1);i=Math.min(n.x,o.x),e=Math.min(n.y,o.y),t.s(n.x,n.y,0,0),t.unionPoint(o);for(let r=2;r<s;r++){const l=this.getPoint(r);i=Math.min(l.x,i),e=Math.min(l.y,e),t.unionPoint(l)}}return this.Db.s(i-t.x,e-t.y),t}get midPoint(){return this.updateRoute(),this.computeMidPoint(new Point)}YL(t){return this.updateRoute(),this.computeMidPoint(t)}computeMidPoint(t){const i=this.pointsCount;if(i===0)return t.c(Point.Hk),t;if(i===1)return t.c(this.getPoint(0)),t;if(i===2){const f=this.getPoint(0),a=this.getPoint(1);return t.s((f.x+a.x)/2,(f.y+a.y)/2),t}if(this.isOrthogonal&&(this.computeCorner()>=15||this.computeCurve()===9)){this.ft.getPointAlongPath(.5,t),t.add(this.getPoint(0));const f=this.ft.figures.first();return t.offset(-f.startX,-f.startY),t}if(this.computeCurve()===9){if(i===3){const c=this.getPoint(0),u=this.getPoint(1),d=this.getPoint(2);return Geo.IC(c.x,c.y,u.x,u.y,u.x,u.y,d.x,d.y,t),t}const f=(i-1)/3|0,a=(f/2|0)*3;if(f%2===1){const c=this.getPoint(a),u=this.getPoint(a+1),d=this.getPoint(a+2),m=this.getPoint(a+3);return Geo.IC(c.x,c.y,u.x,u.y,d.x,d.y,m.x,m.y,t),t}else return t.c(this.getPoint(a)),t}const e=this.flattenedLengths,s=this.flattenedTotalLength;let n=0,o=0,r=0;for(;n<s/2&&o<i&&(r=e[o],!(n+r>s/2));)n+=r,o++;const l=this.getPoint(o),h=this.getPoint(o+1);if(Math.abs(l.x-h.x)<1)l.y>h.y?t.s(l.x,l.y-(s/2-n)):t.s(l.x,l.y+(s/2-n));else if(Math.abs(l.y-h.y)<1)l.x>h.x?t.s(l.x-(s/2-n),l.y):t.s(l.x+(s/2-n),l.y);else{const f=(s/2-n)/r,a=f*(h.x-l.x),c=f*(h.y-l.y);t.s(l.x+a,l.y+c)}return t}get midAngle(){return this.updateRoute(),this.computeMidAngle()}computeMidAngle(){const t=this.pointsCount;if(t<2)return NaN;if(t===2){const h=this.getPoint(0),f=this.getPoint(1);return h.directionPoint(f)}if(this.isOrthogonal&&(this.computeCorner()>=15||this.computeCurve()===9))return this.ft.getAngleAlongPath(.5);if(this.computeCurve()===9&&t>=4){const h=(t-1)/3|0;let f=(h/2|0)*3;if(h%2===1){f=Math.floor(f);const a=this.getPoint(f),c=this.getPoint(f+1),u=this.getPoint(f+2),d=this.getPoint(f+3);return Geo.rF(a.x,a.y,c.x,c.y,u.x,u.y,d.x,d.y)}else if(f>0&&f+1<t){const a=this.getPoint(f-1),c=this.getPoint(f+1);return a.directionPoint(c)}}const i=this.flattenedLengths,e=this.flattenedTotalLength;let s=0,n=0,o=0;for(;s<e/2&&n<t&&(o=i[n],!(s+o>e/2));)s+=o,n++;const r=this.getPoint(n),l=this.getPoint(n+1);if(Math.abs(r.x-l.x)<1&&Math.abs(r.y-l.y)<1){if(n>0&&n+2<t){const h=this.getPoint(n-1),f=this.getPoint(n+2);return h.directionPoint(f)}}else{if(Math.abs(r.x-l.x)<1)return r.y>l.y?270:90;if(Math.abs(r.y-l.y)<1)return r.x>l.x?180:0}return r.directionPoint(l)}get flattenedLengths(){return this.Ua!==null?this.Ua:(this.Le||this.Rb(),this.bO())}get flattenedTotalLength(){let t=this.Fb;if(isNaN(t)){const i=this.flattenedLengths,e=i.length;t=0;for(let s=0;s<e;s++)t+=i[s];this.Fb=t}return t}bO(){this.Ua===null?this.Ua=[]:this.Ua.length=0;const t=this.Ua,i=this.pointsCount;for(let e=0;e<i-1;e++){let s=0;const n=this.getPoint(e),o=this.getPoint(e+1);Geo.G(n.x,o.x)?(s=o.y-n.y,s<0&&(s=-s),t.push(s)):Geo.G(n.y,o.y)?(s=o.x-n.x,s<0&&(s=-s),t.push(s)):(s=Math.sqrt(n.distanceSquaredPoint(o)),t.push(s))}return t}get points(){return this.Mi}set points(t){const i=this.Mi;if(i===t)return;let e=null;if(Array.isArray(t)){const n=t;let o=n.length%2===0;if(o){for(let r=0;r<n.length;r++)if(typeof n[r]!=\"number\"||isNaN(n[r])){o=!1;break}}if(o){e=new List;for(let r=0;r<n.length/2;r++){const l=new Point(n[r*2],n[r*2+1]).p();e.add(l)}}else{let r=!0;for(let l=0;l<n.length;l++){const h=n[l];if(!U.W(h)||typeof h.x!=\"number\"||isNaN(h.x)||typeof h.y!=\"number\"||isNaN(h.y)){r=!1;break}}if(r){e=new List;for(let l=0;l<n.length;l++){const h=n[l];e.add(new Point(h.x,h.y).p())}}else Debug&&U.n(\"Link.points array must contain only an even number of numbers or objects with x and y properties, not: \"+t)}}else if(t instanceof List){e=t.copy();const n=e.iterator;for(;n.next();)n.value.p()}else U.n(\"Link.points value is not an instance of List or Array: \"+t);if(e===null)return;e.p(),this.Mi=e,this.re(),this.Rb();const s=this.diagram;s!==null&&(!s.qh&&!s.undoManager.isUndoingRedoing&&s.Tx.add(this),s.animationManager.bi&&s.animationManager.WM(this,e)),this.t(\"points\",i,e)}get pointsCount(){return this.Mi.count}getPoint(t){return this.Mi.h[t]}setPoint(t,i){Debug&&(U.e(i,Point,Link,\"setPoint\"),i.isReal()||U.n(\"Link.setPoint called with a Point that does not have real numbers: \"+i.toString())),Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.setElt(t,i)}setPointAt(t,i,e){Debug&&(U.r(i,Link,\"setPointAt:x\"),U.r(e,Link,\"setPointAt:y\")),Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.setElt(t,new Point(i,e))}insertPoint(t,i){Debug&&(U.e(i,Point,Link,\"insertPoint\"),i.isReal()||U.n(\"Link.insertPoint called with a Point that does not have real numbers: \"+i.toString())),Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.insertAt(t,i)}insertPointAt(t,i,e){Debug&&(U.r(i,Link,\"insertPointAt:x\"),U.r(e,Link,\"insertPointAt:y\")),Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.insertAt(t,new Point(i,e))}addPoint(t){Debug&&(U.e(t,Point,Link,\"addPoint\"),t.isReal()||U.n(\"Link.addPoint called with a Point that does not have real numbers: \"+t.toString())),Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.add(t)}addPointAt(t,i){Debug&&(U.r(t,Link,\"insertPointAt:x\"),U.r(i,Link,\"insertPointAt:y\")),Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.add(new Point(t,i))}removePoint(t){Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.removeAt(t)}clearPoints(){Debug&&this.Re===null&&U.n(\"Call Link.startRoute before modifying the points of the route.\"),this.Mi.clear()}wr(t,i){if(t===0&&i===0)return;if(this.pointsCount===0){this.defaultFromPoint&&this.defaultFromPoint.offset(t,i),this.defaultToPoint&&this.defaultToPoint.offset(t,i);return}const e=this.Le,s=new List,n=this.Mi.iterator;for(;n.next();){const l=n.value;s.add(new Point(l.x+t,l.y+i).p())}s.p();const o=this.Mi;this.Mi=s;const r=this.diagram;isNaN(t)||isNaN(i)||r!==null&&r.animationManager.bi?this.u():(this.Js.s(this.Js.x+t,this.Js.y+i),this.gt.s(this.gt.x+t,this.gt.y+i),this.hc()),e?this.Rb():(this.defaultFromPoint&&(this.defaultFromPoint=this.getPoint(0)),this.defaultToPoint&&(this.defaultToPoint=this.getPoint(this.pointsCount-1))),r!==null&&r.animationManager.bi&&r.animationManager.WM(this,s),this.t(\"points\",o,s)}startRoute(){this.Re===null&&(this.Re=this.Mi,this.Mi=this.Mi.copy())}commitRoute(){if(this.Re===null)return;const t=this.Re,i=this.Mi;let e=1/0,s=1/0;const n=t.h,o=n.length;for(let c=0;c<o;c++){const u=n[c];e=Math.min(u.x,e),s=Math.min(u.y,s)}let r=1/0,l=1/0;const h=i.h,f=h.length;for(let c=0;c<f;c++){const u=h[c];r=Math.min(u.x,r),l=Math.min(u.y,l),u.p()}if(i.p(),f===o)for(let c=0;c<f;c++){const u=n[c],d=h[c];if(u.x-e!==d.x-r||u.y-s!==d.y-l){this.re();break}}else this.re();this.Re=null;const a=this.diagram;a!==null&&a.animationManager.bi&&a.animationManager.WM(this,i),this.Rb(),this.t(\"points\",t,i)}rollbackRoute(){this.Re!==null&&(this.Mi=this.Re,this.Re=null)}qF(){this.Cr!==null&&(this.points=this.Cr,this.Cr=null)}Rb(){if(this.Mi.count===0){this.Le=!1;return}this.Le=!0,this.Ua=null,this.Fb=NaN,this.defaultFromPoint=this.getPoint(0),this.defaultToPoint=this.getPoint(this.pointsCount-1),this.Ib(!1)}invalidateRoute(){if(this.suspendsRouting)return;const t=this.path;if(t===null)return;const i=this.diagram;if(i){if(i.Tx.has(this)||i.undoManager.isUndoingRedoing)return;const e=i.animationManager;if(e.isTicking&&!e.isAnimating)return;this.Cr!==null&&!e.isTicking&&(this.Cr=null)}this.Le=!1,this.u(),t.u()}get Le(){return(this.Dt&16)!==0}set Le(t){(this.Dt&16)!==0!==t&&(this.Dt=this.Dt^16)}get suspendsRouting(){return(this.Dt&32)!==0}set suspendsRouting(t){(this.Dt&32)!==0!==t&&(this.Dt=this.Dt^32)}get Ny(){return(this.Dt&64)!==0}set Ny(t){(this.Dt&64)!==0!==t&&(this.Dt=this.Dt^64)}get PN(){return(this.Dt&512)!==0}set PN(t){(this.Dt&512)!==0!==t&&(this.Dt=this.Dt^512)}get defaultFromPoint(){return this.pN}set defaultFromPoint(t){this.pN=t!==null?t.copy():null}get defaultToPoint(){return this.yN}set defaultToPoint(t){this.yN=t!==null?t.copy():null}updateRoute(){if(this.Le||this.Ny)return;let t=!0;try{this.Ny=!0,this.startRoute(),t=this.computePoints()}catch{this.Ny=!1,this.rollbackRoute()}finally{this.Ny=!1,t?this.commitRoute():this.rollbackRoute()}}computePoints(){const t=this.diagram;if(t===null)return!1;let i=this.fromNode,e=null;if(i===null?(Link.Ga||(Link.Ga=new Node,Link.Ga.desiredSize=Size.Gh,Link.Ga.ensureBounds()),this.defaultFromPoint&&(Link.Ga.location=this.defaultFromPoint,Link.Ga.ensureBounds(),i=Link.Ga,e=Link.Ga)):e=this.fromPort,e!==null&&!i.isVisible()){const m=i.findVisibleNode();m!==null&&m!==i?(i=m,e=m.port):i=m}if(this.wN=i,i===null||!i.location.isReal()||e===null||(e=i.findVisiblePort(e),e===null))return!1;let s=this.toNode,n=null;if(s===null?(Link.Ha||(Link.Ha=new Node,Link.Ha.desiredSize=Size.Gh,Link.Ha.ensureBounds()),this.defaultToPoint&&(Link.Ha.location=this.defaultToPoint,Link.Ha.ensureBounds(),s=Link.Ha,n=Link.Ha)):n=this.toPort,n!==null&&!s.isVisible()){const m=s.findVisibleNode();m!==null&&m!==s?(s=m,n=m.port):s=m}if(this.xN=s,s===null||!s.location.isReal()||n===null||(n=s.findVisiblePort(n),n===null))return!1;const o=this.pointsCount,r=this.computeSpot(!0,e),l=this.computeSpot(!1,n),h=this.Vd(r),f=this.Vd(l),a=e===n&&e!==null,c=this.isOrthogonal;let u=this.curve===9;a&&!c?(u=!0,this.$o=!0):this.$o=!1;const d=this.computeAdjusting()===0||a;if(!c&&!a&&h&&f){let m=!1;if(!d&&o>=3){let g=this.getLinkPoint(i,e,r,!0,!1,s,n),p=this.getLinkPoint(s,n,l,!1,!1,i,e);m=this.adjustPoints(0,g,o-1,p),m&&(g=this.getLinkPoint(i,e,r,!0,!1,s,n),p=this.getLinkPoint(s,n,l,!1,!1,i,e),this.adjustPoints(0,g,o-1,p))}m||(this.clearPoints(),u?this.kO(i,e,r,s,n,l):this.SO(i,e,r,s,n,l))}else{const m=this.isAvoiding;d&&(c&&m||a)&&this.clearPoints();const g=a?this.computeCurviness():0,p=this.getLinkPoint(i,e,r,!0,c,s,n);let w=0,x=0,k=0;if(c||!h||a){let N=this.computeEndSegmentLength(i,e,r,!0);if(k=this.getLinkDirection(i,e,p,r,!0,c,s,n),a&&(h||r.equals(l)||!c&&r.x+l.x===1&&r.y+l.y===1)&&(k-=c?90:30,g<0&&(k-=180)),k<0?k+=360:k>=360&&(k-=360),a&&(N+=Math.abs(g)*(c?1:2)),k===0?w=N:k===90?x=N:k===180?w=-N:k===270?x=-N:(w=N*Math.cos(k*Math.PI/180),x=N*Math.sin(k*Math.PI/180)),r.isNoSpot()&&a){const T=e.getDocumentPoint(Spot.Center,Point.a()),L=Point.K(T.x+w*1e3,T.y+x*1e3);this.getLinkPointFromPoint(i,e,T,L,!0,p),Point.o(T),Point.o(L)}}const b=this.getLinkPoint(s,n,l,!1,c,i,e);let S=0,M=0,A=0;if(c||!f||a){let N=this.computeEndSegmentLength(s,n,l,!1);if(A=this.getLinkDirection(s,n,b,l,!1,c,i,e),a&&(f||r.equals(l)||!c&&r.x+l.x===1&&r.y+l.y===1)&&(A+=c?0:30,g<0&&(A+=180)),A<0?A+=360:A>=360&&(A-=360),a&&(N+=Math.abs(g)*(c?1:2)),A===0?S=N:A===90?M=N:A===180?S=-N:A===270?M=-N:(S=N*Math.cos(A*Math.PI/180),M=N*Math.sin(A*Math.PI/180)),l.isNoSpot()&&a){const T=n.getDocumentPoint(Spot.Center,Point.a()),L=Point.K(T.x+S*1e3,T.y+M*1e3);this.getLinkPointFromPoint(s,n,T,L,!1,b),Point.o(T),Point.o(L)}}let C=p;(c||!h||a)&&(C=new Point(p.x+w,p.y+x));let P=b;(c||!f||a)&&(P=new Point(b.x+S,b.y+M)),!d&&!c&&h&&o>3&&this.adjustPoints(0,p,o-2,P)?this.setPoint(o-1,b):!d&&!c&&f&&o>3&&this.adjustPoints(1,C,o-1,b)?this.setPoint(0,p):!d&&(c?o>=6:o>4)&&this.adjustPoints(1,C,o-2,P)?(this.setPoint(0,p),this.setPoint(o-1,b)):(this.clearPoints(),this.addPoint(p),(c||!h||a)&&this.addPoint(C),c&&this.addOrthoPoints(C,k,P,A,i,s),(c||!f||a)&&this.addPoint(P),this.addPoint(b))}return t.addInvalidRoute(this),!0}NN(t,i){return Math.abs(i.x-t.x)>Math.abs(i.y-t.y)?(i.x>=t.x?i.x=t.x+9e9:i.x=t.x-9e9,i.y=t.y):(i.y>=t.y?i.y=t.y+9e9:i.y=t.y-9e9,i.x=t.x),i}getLinkPointFromPoint(t,i,e,s,n,o){if(o===void 0&&(o=new Point),t===null||i===null)return o.c(e),o;if(!t.isVisible()){const u=t.findVisibleNode();u!==null&&u!==t&&(t=u,i=t.port)}let r=0,l=0,h=0,f=0,a=null,c=i.panel;if(c!==null&&!c.mn()&&(c=c.panel),c===null)r=s.x,l=s.y,h=e.x,f=e.y;else{a=c.Us;const u=1/(a.m11*a.m22-a.m12*a.m21),d=a.m22*u,m=-a.m12*u,g=-a.m21*u,p=a.m11*u,w=u*(a.m21*a.dy-a.m22*a.dx),x=u*(a.m12*a.dx-a.m11*a.dy);r=s.x*d+s.y*g+w,l=s.x*m+s.y*p+x,h=e.x*d+e.y*g+w,f=e.x*m+e.y*p+x}return i.ec(r,l,h,f,o),a!==null&&o.F(a),o}MO(t,i){const e=t.Zu;return e!==null?e.DT(i):null}Ob(t){if(t===null)return null;let i=t.Zu;return i===null&&(i=new Knot(t.part,t),t.Zu=i),i.DT(this)}getLinkPoint(t,i,e,s,n,o,r,l){if(l===void 0&&(l=new Point),e.isSpot()&&!this.Vd(e))return i.getDocumentPoint(e,l),l;if(e.isSide()){const a=this.Ob(i);if(a!==null){const c=a.zd;if(l.c(c),n&&this.routing===7){const u=this.Ob(r);if(u!==null&&a.Dc<u.Dc){const d=Point.a(),m=Point.a(),g=new Rect(i.getDocumentPoint(Spot.TopLeft,d),i.getDocumentPoint(Spot.BottomRight,m)),p=this.computeSpot(!s,r),w=this.getLinkPoint(o,r,p,!s,n,t,i,m);(e.includesSide(Spot.LeftSide)||e.includesSide(Spot.RightSide))&&w.y>=g.y&&w.y<=g.y+g.height?l.y=w.y:(e.includesSide(Spot.TopSide)||e.includesSide(Spot.BottomSide))&&w.x>=g.x&&w.x<=g.x+g.width&&(l.x=w.x),Point.o(d),Point.o(m)}}return l}}const h=i.getDocumentPoint(this.Eb(e,s),Point.a());let f=null;if(this.pointsCount>(n?6:2))f=s?this.getPoint(1):this.getPoint(this.pointsCount-2),n&&(f=this.NN(h,f.copy()));else{const a=this.computeSpot(!s,r),c=Point.a();f=r.getDocumentPoint(this.Eb(a,!s),c),n&&(f=this.NN(h,f)),Point.o(c)}return this.getLinkPointFromPoint(t,i,h,f,s,l),Point.o(h),l}getLinkDirection(t,i,e,s,n,o,r,l){let h=this.PO(t,i,e,s,n,o,r,l);if(r&&s.isNoSpot()&&r.isMemberOf(t)&&(h+=180,h>=360&&(h-=360)),this.Vd(s)||i===null)return h;const f=i.getDocumentAngle();return f===0||(45<=f&&f<135?h+=90:135<=f&&f<225?h+=180:225<=f&&f<315&&(h+=270),h>=360&&(h-=360)),h}PO(t,i,e,s,n,o,r,l){if(s.isSpot())return s.x>s.y?s.x>1-s.y?0:s.x<1-s.y?270:315:s.x<s.y?s.x>1-s.y?90:s.x<1-s.y?180:135:s.x<.5?225:s.x>.5?45:0;if(s.isSide()){const c=this.Ob(i);if(c!==null)switch(c.xe){case 1:return 270;case 2:return 180;default:case 4:return 0;case 8:return 90}else return s.includesSide(Spot.TopSide)?270:s.includesSide(Spot.BottomSide)?90:s.includesSide(Spot.LeftSide)?180:0}if(i===null||l===null)return 0;const h=i.getDocumentPoint(Spot.Center,Point.a());let f=null;if(this.pointsCount>(o?6:2))f=n?this.getPoint(1):this.getPoint(this.pointsCount-2),o?f=this.NN(h,f.copy()):f=e;else{const c=Point.a();f=l.getDocumentPoint(Spot.Center,c),Point.o(c)}let a=0;return Math.abs(f.x-h.x)>Math.abs(f.y-h.y)?f.x>=h.x?a=0:a=180:f.y>=h.y?a=90:a=270,Point.o(h),a}computeEndSegmentLength(t,i,e,s){if(i!==null&&e.isSide()){const o=this.Ob(i);if(o!==null)return o.Bb}let n=NaN;return s?n=this.fromEndSegmentLength:n=this.toEndSegmentLength,i!==null&&isNaN(n)&&(s?n=i.fromEndSegmentLength:n=i.toEndSegmentLength),isNaN(n)&&(n=10),n}computeSpot(t,i){return i===void 0&&(i=null),t?this.NO(i||this.fromPort):this.CO(i||this.toPort)}NO(t){if(t===null)return Spot.Center;let i=this.fromSpot;return i.isDefault()&&(i=t.fromSpot),i===Spot.Default?Spot.None:i}CO(t){if(t===null)return Spot.Center;let i=this.toSpot;return i.isDefault()&&(i=t.toSpot),i===Spot.Default?Spot.None:i}Vd(t){return t===Spot.None||t.x===.5&&t.y===.5}Eb(t,i){return t.x===.5&&t.y===.5?t:Spot.Center}computeOtherPoint(t,i){if(this.computeAdjusting()!==0&&this.pointsCount>4)return this.computeMidPoint(new Point);{const e=this.MO(i,this);return e!==null?e.zd:i.getDocumentPoint(Spot.Center)}}computeShortLength(t){if(t){let i=this.fromShortLength;if(isNaN(i)){const e=this.fromPort;e!==null&&(i=e.fromShortLength)}return isNaN(i)?0:i}else{let i=this.toShortLength;if(isNaN(i)){const e=this.toPort;e!==null&&(i=e.toShortLength)}return isNaN(i)?0:i}}Em(t,i,e,s,n,o){if(this.pickable===!1)return!1;i===void 0&&(i=null),e===void 0&&(e=null);let r;if(o===void 0?(r=Transform.a(),r.Vi()):r=o,r.uf(this.F),this.containedInRect(t,r))return this.JP(i,e,n),o===void 0&&Transform.o(r),!0;if(this.intersectsRect(t,r)){let l=!1;if(!this.mc){const h=this.T.h,f=h.length;for(let a=f;a--;){const c=h[a];if(!c.visible&&c!==this.locationObject)continue;const u=c.actualBounds,d=this.naturalBounds;if(u.x>d.width||u.y>d.height||u.x+u.width<0||u.y+u.height<0)continue;const m=c,g=Transform.a();if(g.set(r),m instanceof Panel?l=m.Em(t,i,e,s,n,g):this.path===m?m instanceof Shape&&(l=m.JI(t,s,g)):l=m.PL(t,s,g),l){let p=m;i!==null&&(p=i(m)),p&&(e===null||e(p))&&n.add(p)}Transform.o(g)}}return o===void 0&&Transform.o(r),l||this.background!==null}return o===void 0&&Transform.o(r),!1}get isOrthogonal(){return(this.Ka&2)===2}static SN(t){return(t&2)===2}get isAvoiding(){return(this.Ka&4)===4}computeCurve(){if(this.$o===null){const t=this.fromPort,i=t!==null&&t===this.toPort,e=this.isOrthogonal;this.$o=i&&!e}return this.$o?9:this.curve}computeCorner(){if(this.curve===9)return 0;let t=this.corner;return(isNaN(t)||t<0)&&(t=10),t}findMidLabel(){const t=this.path,i=this.T.h,e=i.length;for(let n=0;n<e;n++){const o=i[n];if(!(o===t||o.isPanelMain)&&(o.segmentIndex===-1/0||isNaN(o.segmentIndex)))return o}const s=this.labelNodes;for(;s.next();){const n=s.value;if(n.segmentIndex===-1/0||isNaN(n.segmentIndex))return n}return null}computeSpacing(){if(!this.isVisible())return 0;let t=Link.yO;t=Math.max(t,this.computeThickness());const i=this.fromPort,e=this.toPort;if(i!==null&&e!==null){const s=this.findMidLabel();if(s!==null){const n=s.naturalBounds,o=s.margin,r=isNaN(n.width)?30:n.width*s.scale+o.left+o.right,l=isNaN(n.height)?14:n.height*s.scale+o.top+o.bottom,h=s.segmentOrientation;if(h===21||h===25||h===24)t=Math.max(t,l);else if(h===23||h===27||h===22||h===26)t=Math.max(t,r);else{const a=i.getDocumentPoint(Spot.Center).directionPoint(e.getDocumentPoint(Spot.Center))/180*Math.PI;t=Math.max(t,Math.abs(Math.sin(a)*r)+Math.abs(Math.cos(a)*l)+1)}this.curve===9&&(t*=1.333)}}return t}arrangeBundledLinks(t,i){if(i)for(let e=0;e<t.length;e++){const s=t[e];s.computeAdjusting()===0&&s.invalidateRoute()}}computeCurviness(){let t=this.curviness;if(isNaN(t)){t=Link.pO;const i=this.Zo;if(i!==null){const e=U.lt();let s=0;const n=i.Zs;for(let r=0;r<n.length;r++){const h=n[r].computeSpacing();e.push(h),s+=h}let o=-s/2;for(let r=0;r<n.length;r++){if(n[r]===this){t=o+e[r]/2;break}o+=e[r]}i.uy===this.fromNode&&(t=-t),U.tt(e)}}return t}computeThickness(){if(!this.isVisible())return 0;const t=this.path;return t!==null?Math.max(t.strokeWidth,1):1}hasCurviness(){return!isNaN(this.curviness)||this.Zo!==null}SO(t,i,e,s,n,o){const r=this.getLinkPoint(t,i,e,!0,!1,s,n),l=this.getLinkPoint(s,n,o,!1,!1,t,i);if(this.hasCurviness()){const h=l.x-r.x,f=l.y-r.y,a=this.computeCurviness(),c=a,u=r.x+h/2,d=r.y+f/2;let m=u,g=d;if(Geo.g(f,0))h>0?g-=c:g+=c;else{const p=-h/f;let w=Math.sqrt(c*c/(p*p+1));a<0&&(w=-w),m=(f<0?-1:1)*w+u,g=p*(m-u)+d}this.addPoint(r),this.addPointAt(m,g),this.addPoint(l)}else{this.addPoint(r),this.addPoint(l);const h=Rect.a();i.getDocumentBounds(h);const f=h.containsPoint(l);n.getDocumentBounds(h);const a=h.containsPoint(r);if(f||a){const c=i.getDocumentPoint(this.Eb(e,!0),new Point);this.setPoint(0,this.getLinkPointFromPoint(t,i,c,l,!0,c));const u=n.getDocumentPoint(this.Eb(o,!1),new Point);this.setPoint(1,this.getLinkPointFromPoint(s,n,u,r,!1,u))}Rect.o(h)}}kO(t,i,e,s,n,o){const r=this.getLinkPoint(t,i,e,!0,!1,s,n),l=this.getLinkPoint(s,n,o,!1,!1,t,i),h=l.x-r.x,f=l.y-r.y,a=this.computeCurviness();let c=0,u=0,d=r.x+h/3,m=r.y+f/3,g=d,p=m;Geo.g(f,0)?h>0?p-=a:p+=a:(c=-h/f,u=Math.sqrt(a*a/(c*c+1)),a<0&&(u=-u),g=(f<0?-1:1)*u+d,p=c*(g-d)+m),d=r.x+2*h/3,m=r.y+2*f/3;let w=d,x=m;Geo.g(f,0)?h>0?x-=a:x+=a:(w=(f<0?-1:1)*u+d,x=c*(w-d)+m),this.clearPoints(),this.addPoint(r),this.addPointAt(g,p),this.addPointAt(w,x),this.addPoint(l),this.setPoint(0,this.getLinkPoint(t,i,e,!0,!1,s,n)),this.setPoint(3,this.getLinkPoint(s,n,o,!1,!1,t,i))}adjustPoints(t,i,e,s){let n=this.computeAdjusting();if(this.isOrthogonal){if(n===18)return!1;n===19&&(n=17)}switch(n){case 18:return this.AO(t,i,e,s);case 19:return this.LO(t,i,e,s);case 17:return this.TO(t,i,e,s);default:return!1}}AO(t,i,e,s){const n=this.getPoint(t),o=this.getPoint(e);if(n.equalsApprox(i)&&o.equalsApprox(s))return!0;const r=n.x,l=n.y,h=o.x,f=o.y;let a=h-r,c=f-l;const u=Math.sqrt(a*a+c*c);if(Geo.G(u,0))return!0;let d=0;Geo.G(a,0)?c<0?d=-Math.PI/2:d=Math.PI/2:(d=Math.atan(c/Math.abs(a)),a<0&&(d=Math.PI-d));const m=i.x,g=i.y,p=s.x,w=s.y,x=p-m,k=w-g,b=Math.sqrt(x*x+k*k);let S=0;Geo.G(x,0)?k<0?S=-Math.PI/2:S=Math.PI/2:(S=Math.atan(k/Math.abs(x)),x<0&&(S=Math.PI-S));const M=b/u,A=S-d;this.setPoint(t,i);for(let C=t+1;C<e;C++){const P=this.getPoint(C);a=P.x-r,c=P.y-l;const N=Math.sqrt(a*a+c*c);if(Geo.G(N,0))continue;let T=0;Geo.G(a,0)?c<0?T=-Math.PI/2:T=Math.PI/2:(T=Math.atan(c/Math.abs(a)),a<0&&(T=Math.PI-T));const L=T+A,D=N*M,F=m+D*Math.cos(L),I=g+D*Math.sin(L);this.setPointAt(C,F,I)}return this.setPoint(e,s),!0}LO(t,i,e,s){const n=this.getPoint(t),o=this.getPoint(e);if(n.equalsApprox(i)&&o.equalsApprox(s))return!0;const r=n.x,l=n.y,h=o.x,f=o.y,a=(h-r)**2+(f-l)**2,c=i.x,u=i.y,d=s.x,m=s.y;let g=0,p=1;d-c!==0?(g=(m-u)/(d-c),p=Math.sqrt(1+1/(g*g))):g=9e9,this.setPoint(t,i);for(let w=t+1;w<e;w++){const x=this.getPoint(w),k=x.x,b=x.y;let S=.5;a!==0&&(S=((r-k)*(r-h)+(l-b)*(l-f))/a);const M=r+S*(h-r),A=l+S*(f-l);let C=Math.sqrt((k-M)**2+(b-A)**2);b<g*(k-M)+A&&(C=-C),g>0&&(C=-C);const P=c+S*(d-c),N=u+S*(m-u);if(g!==0){const T=P+C/p,L=N-(T-P)/g;this.setPointAt(w,T,L)}else this.setPointAt(w,P,N+C)}return this.setPoint(e,s),!0}TO(t,i,e,s){if(this.isOrthogonal){let n=this.getPoint(t),o=this.getPoint(t+1),r=this.getPoint(t+2),l=o.x,h=o.y;const f=l,a=h;Geo.g(n.y,o.y)?Geo.g(o.x,r.x)?h=i.y:Geo.g(o.y,r.y)&&(l=i.x):Geo.g(n.x,o.x)&&(Geo.g(o.y,r.y)?l=i.x:Geo.g(o.x,r.x)&&(h=i.y)),this.setPointAt(t+1,l,h),n=this.getPoint(e),o=this.getPoint(e-1),r=this.getPoint(e-2);let c=o.x,u=o.y;const d=c,m=u;if(Geo.g(n.y,o.y)?Geo.g(o.x,r.x)?u=s.y:Geo.g(o.y,r.y)&&(c=s.x):Geo.g(n.x,o.x)&&(Geo.g(o.y,r.y)?c=s.x:Geo.g(o.x,r.x)&&(u=s.y)),this.setPointAt(e-1,c,u),this._A())return this.setPointAt(t+1,f,a),this.setPointAt(e-1,d,m),!1}return this.setPoint(t,i),this.setPoint(e,s),!0}addOrthoPoints(t,i,e,s,n,o){i<0?i+=360:i>=360&&(i-=360),s<0?s+=360:s>=360&&(s-=360);const a=s;i>=315||i<45?i=0:45<=i&&i<135?i=90:135<=i&&i<225?i=180:i=270,s>=315||s<45?s=0:45<=s&&s<135?s=90:135<=s&&s<225?s=180:s=270;const c=t,u=e,d=n.actualBounds.copy(),m=o.actualBounds.copy();if(!d.isReal()||!m.isReal())return;d.inflate(Link.qa,Link.qa),m.inflate(Link.qa,Link.qa),d.unionPoint(t),m.unionPoint(e);const g=Point.a(),p=Point.a();i===0?u.x>c.x||s===270&&u.y<c.y&&m.right>c.x||s===90&&u.y>c.y&&m.right>c.x?(g.s(u.x,c.y),p.s(u.x,(c.y+u.y)/2),s===180?(g.x=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!1),p.x=g.x,p.y=u.y):s===270&&u.y<c.y||s===90&&u.y>c.y?(c.x<m.left?g.x=this.computeMidOrthoPosition(c.x,c.y,m.left,u.y,!1):c.x<m.right&&(s===270&&c.y<m.top||s===90&&c.y>m.bottom)?g.x=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!1):g.x=m.right,p.x=g.x,p.y=u.y):s===0&&c.x<m.left&&c.y>m.top&&c.y<m.bottom&&(g.x=c.x,c.y<u.y?g.y=Math.min(u.y,m.top):g.y=Math.max(u.y,m.bottom),p.y=g.y)):(g.s(c.x,u.y),p.s((c.x+u.x)/2,u.y),(s===180||s===90&&u.y<d.top||s===270&&u.y>d.bottom)&&(s===180&&(m.containsPoint(c)||d.containsPoint(u))?g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!0):u.y<c.y&&(s===180||s===90)?g.y=this.computeMidOrthoPosition(c.x,d.top,u.x,Math.max(u.y,m.bottom),!0):u.y>c.y&&(s===180||s===270)&&(g.y=this.computeMidOrthoPosition(c.x,d.bottom,u.x,Math.min(u.y,m.top),!0)),p.x=u.x,p.y=g.y),g.y>d.top&&g.y<d.bottom&&(u.x>=d.left&&u.x<=c.x||c.x<=m.right&&c.x>=u.x?(s===90||s===270)&&(g.s(Math.max((c.x+u.x)/2,c.x),c.y),p.s(g.x,u.y)):(s===270||(s===0||s===180)&&u.y<c.y?g.y=Math.min(u.y,s===0?d.top:Math.min(d.top,m.top)):g.y=Math.max(u.y,s===0?d.bottom:Math.max(d.bottom,m.bottom)),p.x=u.x,p.y=g.y))):i===180?u.x<c.x||s===270&&u.y<c.y&&m.left<c.x||s===90&&u.y>c.y&&m.left<c.x?(g.s(u.x,c.y),p.s(u.x,(c.y+u.y)/2),s===0?(g.x=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!1),p.x=g.x,p.y=u.y):s===270&&u.y<c.y||s===90&&u.y>c.y?(c.x>m.right?g.x=this.computeMidOrthoPosition(c.x,c.y,m.right,u.y,!1):c.x>m.left&&(s===270&&c.y<m.top||s===90&&c.y>m.bottom)?g.x=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!1):g.x=m.left,p.x=g.x,p.y=u.y):s===180&&c.x>m.right&&c.y>m.top&&c.y<m.bottom&&(g.x=c.x,c.y<u.y?g.y=Math.min(u.y,m.top):g.y=Math.max(u.y,m.bottom),p.y=g.y)):(g.s(c.x,u.y),p.s((c.x+u.x)/2,u.y),(s===0||s===90&&u.y<d.top||s===270&&u.y>d.bottom)&&(s===0&&(m.containsPoint(c)||d.containsPoint(u))?g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!0):u.y<c.y&&(s===0||s===90)?g.y=this.computeMidOrthoPosition(c.x,d.top,u.x,Math.max(u.y,m.bottom),!0):u.y>c.y&&(s===0||s===270)&&(g.y=this.computeMidOrthoPosition(c.x,d.bottom,u.x,Math.min(u.y,m.top),!0)),p.x=u.x,p.y=g.y),g.y>d.top&&g.y<d.bottom&&(u.x<=d.right&&u.x>=c.x||c.x>=m.left&&c.x<=u.x?(s===90||s===270)&&(g.s(Math.min((c.x+u.x)/2,c.x),c.y),p.s(g.x,u.y)):(s===270||(s===0||s===180)&&u.y<c.y?g.y=Math.min(u.y,s===180?d.top:Math.min(d.top,m.top)):g.y=Math.max(u.y,s===180?d.bottom:Math.max(d.bottom,m.bottom)),p.x=u.x,p.y=g.y))):i===90?u.y>c.y||s===180&&u.x<c.x&&m.bottom>c.y||s===0&&u.x>c.x&&m.bottom>c.y?(g.s(c.x,u.y),p.s((c.x+u.x)/2,u.y),s===270?(g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!0),p.x=u.x,p.y=g.y):s===180&&u.x<c.x||s===0&&u.x>c.x?(c.y<m.top?g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,m.top,!0):c.y<m.bottom&&(s===180&&c.x<m.left||s===0&&c.x>m.right)?g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!0):g.y=m.bottom,p.x=u.x,p.y=g.y):s===90&&c.y<m.top&&c.x>m.left&&c.x<m.right&&(c.x<u.x?g.x=Math.min(u.x,m.left):g.x=Math.max(u.x,m.right),g.y=c.y,p.x=g.x)):(g.s(u.x,c.y),p.s(u.x,(c.y+u.y)/2),(s===270||s===0&&u.x<d.left||s===180&&u.x>d.right)&&(s===270&&(m.containsPoint(c)||d.containsPoint(u))?g.x=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!1):u.x<c.x&&(s===270||s===0)?g.x=this.computeMidOrthoPosition(d.left,c.y,Math.max(u.x,m.right),u.y,!1):u.x>c.x&&(s===270||s===180)&&(g.x=this.computeMidOrthoPosition(d.right,c.y,Math.min(u.x,m.left),u.y,!1)),p.x=g.x,p.y=u.y),g.x>d.left&&g.x<d.right&&(u.y>=d.top&&u.y<=c.y||c.y<=m.bottom&&c.y>=u.y?(s===0||s===180)&&(g.s(c.x,Math.max((c.y+u.y)/2,c.y)),p.s(u.x,g.y)):(s===180||(s===90||s===270)&&u.x<c.x?g.x=Math.min(u.x,s===90?d.left:Math.min(d.left,m.left)):g.x=Math.max(u.x,s===90?d.right:Math.max(d.right,m.right)),p.x=g.x,p.y=u.y))):u.y<c.y||s===180&&u.x<c.x&&m.top<c.y||s===0&&u.x>c.x&&m.top<c.y?(g.s(c.x,u.y),p.s((c.x+u.x)/2,u.y),s===90?(g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!0),p.x=u.x,p.y=g.y):s===180&&u.x<c.x||s===0&&u.x>=c.x?(c.y>m.bottom?g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,m.bottom,!0):c.y>m.top&&(s===180&&c.x<m.left||s===0&&c.x>m.right)?g.y=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!0):g.y=m.top,p.x=u.x,p.y=g.y):s===270&&c.y>m.bottom&&c.x>m.left&&c.x<m.right&&(c.x<u.x?g.x=Math.min(u.x,m.left):g.x=Math.max(u.x,m.right),g.y=c.y,p.x=g.x)):(g.s(u.x,c.y),p.s(u.x,(c.y+u.y)/2),(s===90||s===0&&u.x<d.left||s===180&&u.x>d.right)&&(s===90&&(m.containsPoint(c)||d.containsPoint(u))?g.x=this.computeMidOrthoPosition(c.x,c.y,u.x,u.y,!1):u.x<c.x&&(s===90||s===0)?g.x=this.computeMidOrthoPosition(d.left,c.y,Math.max(u.x,m.right),u.y,!1):u.x>c.x&&(s===90||s===180)&&(g.x=this.computeMidOrthoPosition(d.right,c.y,Math.min(u.x,m.left),u.y,!1)),p.x=g.x,p.y=u.y),g.x>d.left&&g.x<d.right&&(u.y<=d.bottom&&u.y>=c.y||c.y>=m.top&&c.y<=u.y?(s===0||s===180)&&(g.s(c.x,Math.min((c.y+u.y)/2,c.y)),p.s(u.x,g.y)):(s===180||(s===90||s===270)&&u.x<c.x?g.x=Math.min(u.x,s===270?d.left:Math.min(d.left,m.left)):g.x=Math.max(u.x,s===270?d.right:Math.max(d.right,m.right)),p.x=g.x,p.y=u.y))),this.PN=s!==a,this.bN=i,this.kN=s,this.addPoint(g.copy()),this.addPoint(p.copy()),Point.o(g),Point.o(p)}computeMidOrthoPosition(t,i,e,s,n){let o=0;return this.hasCurviness()&&!this.computeSpot(!0,this.fromPort).isSide()&&!this.computeSpot(!1,this.toPort).isSide()&&(o=this.computeCurviness()),n?(i+s)/2+o:(t+e)/2+o}_A(){if(this.diagram===null||!this.isAvoiding||this.diagram.animationManager.isTicking)return!1;const t=this.points.h,i=t.length;if(i<4)return!1;const e=this.diagram.getPositions(!1,this.containingGroup,null);for(let s=1;s<i-2;s++){const n=t[s],o=t[s+1];if(!e.isUnoccupied(Math.min(n.x,o.x),Math.min(n.y,o.y),Math.abs(n.x-o.x),Math.abs(n.y-o.y)))return!0}return!1}findClosestSegment(t){Debug&&U.e(t,Point,Link,\"findClosestSegment:p\");const i=t.x,e=t.y;let s=this.getPoint(0),n=this.getPoint(1),o=Point.distanceLineSegmentSquared(i,e,s.x,s.y,n.x,n.y),r=0;for(let l=1;l<this.pointsCount-1;l++){s=this.getPoint(l+1);const h=Point.distanceLineSegmentSquared(i,e,n.x,n.y,s.x,s.y);n=s,h<o&&(r=l,o=h)}return r}re(){this.Ch=!1,this.u()}get Ch(){return(this.Dt&128)!==0}set Ch(t){(this.Dt&128)!==0!==t&&(this.Dt=this.Dt^128)}get geometry(){if(!this.Ch){if(this.updateRoute(),this.pointsCount<2)return this.Ch=!0,this.ft;this.ft=this.makeGeometry()}return this.ft}fd(t){if(!t){if(this.Le===!1)return;const n=this.findMainElement();if(this.Ch&&(n===null||n.geometry!==null))return}this.pointsCount<2?this.Ch=!0:this.ft=this.makeGeometry();const i=this.path;if(i===null)return;i.ft=this.ft;const e=this.T.h,s=e.length;for(let n=0;n<s;n++){const o=e[n];o!==i&&o.isPanelMain&&o instanceof Shape&&(o.ft=this.ft)}}DO(t){return this.Wa()&&t.ih.has(this)&&(this.Tc.width!==0||this.Tc.height!==0)&&(t.animationManager.isAnimating||t.currentTool!==t.toolManager)}makeGeometry(){const t=this.ft,i=this.pointsCount;let e=!1;const s=this.diagram;s!==null&&this.DO(s)&&(e=!0);let n=0,o=0,r=this.getPoint(0).copy();const l=r.copy(),h=this.Mi.h,f=this.computeCurve();if(f===9&&i>=3&&!Geo.G(this.smoothness,0))if(i===3){let a=this.getPoint(1);n=Math.min(r.x,a.x),o=Math.min(r.y,a.y),a=this.getPoint(2),n=Math.min(n,a.x),o=Math.min(o,a.y)}else if(this.isOrthogonal){for(let a=0;a<i;a++){const c=h[a];l.x=Math.min(c.x,l.x),l.y=Math.min(c.y,l.y)}n=l.x,o=l.y}else{for(let a=3;a<i;a+=3){a+3>=i&&(a=i-1);const c=this.getPoint(a);l.x=Math.min(c.x,l.x),l.y=Math.min(c.y,l.y)}n=l.x,o=l.y}else{for(let a=0;a<i;a++){const c=h[a];l.x=Math.min(c.x,l.x),l.y=Math.min(c.y,l.y)}n=l.x,o=l.y}if(n-=this.Db.x,o-=this.Db.y,r.x-=n,r.y-=o,i===2&&!this.Wa()){let a=this.getPoint(1).copy();return a.x-=n,a.y-=o,this.computeShortLength(!0)!==0&&(r=this.Fc(r,!0,l)),this.computeShortLength(!1)!==0&&(a=this.Fc(a,!1,l)),t.type=1,t.startX=r.x,t.startY=r.y,t.endX=a.x,t.endY=a.y,this.Ch=!0,t}else{t.type=4;const a=GeoStream.VC(t);if(this.computeShortLength(!0)!==0&&(r=this.Fc(r,!0,l)),a.gu(r.x,r.y,!1,!1),f===9&&i>=3&&!Geo.G(this.smoothness,0))if(i===3){const c=this.getPoint(1),u=c.x-n,d=c.y-o;let m=this.getPoint(2).copy();m.x-=n,m.y-=o,this.computeShortLength(!1)!==0&&(m=this.Fc(m,!1,l)),a.gr(u,d,u,d,m.x,m.y)}else if(this.isOrthogonal){const c=Point.K(n,o),u=Point.a();u.c(this.getPoint(1));const d=Point.K(n,o),m=Point.K(n,o);let g=this.getPoint(0),p=null;const w=this.smoothness/3;for(let S=1;S<this.pointsCount-1;S++){p=this.getPoint(S);const M=g,A=p,C=this.getPoint(this.CN(p,S,!1));Geo.G(M.x,A.x)&&Geo.G(A.x,C.x)||Geo.G(M.y,A.y)&&Geo.G(A.y,C.y)||(this.FO(M,A,C,w,d,m),(S===1||S===2&&Geo.G(g.x,this.getPoint(0).x)&&Geo.G(g.y,this.getPoint(0).y))&&(u.x=(g.x+p.x)*.5,u.y=(g.y+p.y)*.5),a.gr(u.x-n,u.y-o,d.x-n,d.y-o,p.x-n,p.y-o),c.set(d),u.set(m),g=p)}let x=g.x,k=g.y,b=this.getPoint(this.pointsCount-1);this.computeShortLength(!1)!==0&&(b=this.Fc(b.copy(),!1,Point.No)),x=.5*(x+b.x),k=.5*(k+b.y),a.gr(m.x-n,m.y-o,x-n,k-o,b.x-n,b.y-o),Point.o(c),Point.o(u),Point.o(d),Point.o(m)}else for(let c=3;c<i;c+=3){const u=this.getPoint(c-2);c+3>=i&&(c=i-1);const d=this.getPoint(c-1);let m=this.getPoint(c);c===i-1&&this.computeShortLength(!1)!==0&&(m=this.Fc(m.copy(),!1,Point.No)),a.gr(u.x-n,u.y-o,d.x-n,d.y-o,m.x-n,m.y-o)}else{const c=Point.a();c.c(this.getPoint(0));const u=Point.a();u.c(c);const d=this.computeCorner();let m=1,g=0;for(;m<i;){m=this.CN(c,m,m>1);let p=this.getPoint(m);if(m>=i-1){if(!c.equals(p))this.computeShortLength(!1)!==0&&(p=this.Fc(p.copy(),!1,Point.No)),this.Nn(a,-n,-o,c,p,e);else if(g===0)for(m=1;m<i;)u.c(c),p=this.getPoint(m++),this.Nn(a,-n,-o,c,p,e),c.c(p);break}g=this.CN(p,m+1,m<i-3);const w=this.getPoint(g);this.RO(a,-n,-o,c,p,w,c,u,d,e),u.c(p),m=g}Point.o(c)}return GeoStream.zC(a),this.Ch=!0,t}}Vb(t,i,e,s){let n=e-t;if(isNaN(n)||n===1/0||n===-1/0)return NaN;n<0&&(n=-n);let o=s-i;return isNaN(o)||o===1/0||o===-1/0?NaN:(o<0&&(o=-o),Geo.G(n,0)?o:Geo.G(o,0)?n:Math.sqrt(n*n+o*o))}FO(t,i,e,s,n,o){isNaN(s)&&(s=this.smoothness/3);const r=t.x,l=t.y,h=i.x,f=i.y,a=e.x,c=e.y,u=s*this.Vb(r,l,h,f),d=s*this.Vb(h,f,a,c);if(Geo.G(l,f)&&Geo.G(h,a)&&(h>r?c>f?(n.x=h-u,n.y=f-u,o.x=h+d,o.y=f+d):(n.x=h-u,n.y=f+u,o.x=h+d,o.y=f-d):c>f?(n.x=h+u,n.y=f-u,o.x=h-d,o.y=f+d):(n.x=h+u,n.y=f+u,o.x=h-d,o.y=f-d)),Geo.G(r,h)&&Geo.G(f,c)&&(f>l?a>h?(n.x=h-u,n.y=f-u,o.x=h+d,o.y=f+d):(n.x=h+u,n.y=f-u,o.x=h-d,o.y=f+d):a>h?(n.x=h-u,n.y=f+u,o.x=h+d,o.y=f-d):(n.x=h+u,n.y=f+u,o.x=h-d,o.y=f-d)),Geo.G(r,h)&&Geo.G(h,a)||Geo.G(l,f)&&Geo.G(f,c)){const m=.5*(r+a),g=.5*(l+c);n.x=m,n.y=g,o.x=m,o.y=g}}Fc(t,i,e){const s=this.pointsCount;if(s<2)return t;if(i){const n=this.getPoint(1),o=n.x-e.x,r=n.y-e.y,l=this.Vb(t.x,t.y,o,r);if(l===0)return t;const h=s===2?l*.5:l;let f=this.computeShortLength(!0);f>h&&(f=h);const a=f*(o-t.x)/l,c=f*(r-t.y)/l;t.x+=a,t.y+=c}else{const n=this.getPoint(s-2),o=n.x-e.x,r=n.y-e.y,l=this.Vb(t.x,t.y,o,r);if(l===0)return t;const h=s===2?l*.5:l;let f=this.computeShortLength(!1);f>h&&(f=h);const a=f*(t.x-o)/l,c=f*(t.y-r)/l;t.x-=a,t.y-=c}return t}CN(t,i,e){const s=this.pointsCount;let n=t;for(;Geo.G(t.x,n.x)&&Geo.G(t.y,n.y);){if(i>=s)return s-1;n=this.getPoint(i++)}if(!Geo.G(t.x,n.x)&&!Geo.G(t.y,n.y))return i-1;let o=n;for(;Geo.G(t.x,n.x)&&Geo.G(n.x,o.x)&&(!e||(t.y>=n.y?n.y>=o.y:n.y<=o.y))||Geo.G(t.y,n.y)&&Geo.G(n.y,o.y)&&(!e||(t.x>=n.x?n.x>=o.x:n.x<=o.x));){if(i>=s)return s-1;o=this.getPoint(i++)}return i-2}RO(t,i,e,s,n,o,r,l,h,f){if(Geo.g(s.y,n.y)&&Geo.g(n.x,o.x)){let a=Math.min(h,Math.abs(n.x-l.x)/2);const c=Math.min(a,Math.abs(o.y-n.y)/2);if(a=c,Geo.g(a,0)){this.Nn(t,i,e,s,n,f),r.c(n);return}let u=n.x;const d=n.y,m=u;let g=d;n.x>s.x?(u=n.x-a,o.y>n.y?g=n.y+c:g=n.y-c):(u=n.x+a,o.y>n.y?g=n.y+c:g=n.y-c);const p=Point.K(u,d);this.Nn(t,i,e,s,p,f),Point.o(p),t.Ow(n.x+i,n.y+e,m+i,g+e),r.s(m,g)}else if(Geo.g(s.x,n.x)&&Geo.g(n.y,o.y)){let a=Math.min(h,Math.abs(n.y-l.y)/2);const c=Math.min(a,Math.abs(o.x-n.x)/2);if(a=c,Geo.g(c,0)){this.Nn(t,i,e,s,n,f),r.c(n);return}const u=n.x;let d=n.y,m=u;const g=d;n.y>s.y?(d=n.y-a,o.x>n.x?m=n.x+c:m=n.x-c):(d=n.y+a,o.x>n.x?m=n.x+c:m=n.x-c);const p=Point.K(u,d);this.Nn(t,i,e,s,p,f),Point.o(p),t.Ow(n.x+i,n.y+e,m+i,g+e),r.s(m,g)}else this.Nn(t,i,e,s,n,f),r.c(n)}computeJumpLength(){return 10}Nn(t,i,e,s,n,o){if(o||!this.Wa())t.dr(n.x+i,n.y+e);else{const r=this.computeJumpLength(),l=r/2,h=[];let f=0;this.isVisible()&&(f=this.IO(s,n,h));let a=s.x,c=s.y;if(f>0){if(Geo.g(s.y,n.y))if(s.x<n.x){let u=0;for(;u<f;){const d=Math.max(s.x,Math.min(h[u++]-l,n.x-r));t.dr(d+i,n.y+e),a=d+i,c=n.y+e;let m=Math.min(d+r,n.x);for(;u<f;){const x=h[u];if(x<m+r)u++,m=Math.min(x+l,n.x);else break}const g=n.y-r+e,p=m+i,w=n.y+e;this.curve===10?t.gu(p,w,!1,!1):t.gr(a,g,p,g,p,w),a=p,c=w}}else{let u=f-1;for(;u>=0;){const d=Math.min(s.x,Math.max(h[u--]+l,n.x+r));t.dr(d+i,n.y+e),a=d+i,c=n.y+e;let m=Math.max(d-r,n.x);for(;u>=0;){const x=h[u];if(x>m-r)u--,m=Math.max(x-l,n.x);else break}const g=n.y-r+e,p=m+i,w=n.y+e;this.curve===10?t.gu(p,w,!1,!1):t.gr(a,g,p,g,p,w),a=p,c=w}}else if(Geo.g(s.x,n.x))if(s.y<n.y){let u=0;for(;u<f;){const d=Math.max(s.y,Math.min(h[u++]-l,n.y-r));t.dr(n.x+i,d+e),a=n.x+i,c=d+e;let m=Math.min(d+r,n.y);for(;u<f;){const x=h[u];if(x<m+r)u++,m=Math.min(x+l,n.y);else break}const g=n.x-r+i,p=n.x+i,w=m+e;this.curve===10?t.gu(p,w,!1,!1):t.gr(g,c,g,w,p,w),a=p,c=w}}else{let u=f-1;for(;u>=0;){const d=Math.min(s.y,Math.max(h[u--]+l,n.y+r));t.dr(n.x+i,d+e),a=n.x+i,c=d+e;let m=Math.max(d-r,n.y);for(;u>=0;){const x=h[u];if(x>m-r)u--,m=Math.max(x-l,n.y);else break}const g=n.x-r+i,p=n.x+i,w=m+e;this.curve===10?t.gu(p,w,!1,!1):t.gr(g,c,g,w,p,w),a=p,c=w}}}t.dr(n.x+i,n.y+e)}}IO(t,i,e){const s=this.diagram;if(s===null||t.equals(i))return 0;const n=s.layers;for(;n.next();){const o=n.value;if(o!==null&&o.visible){const r=o.t2(),l=r.length;for(let h=0;h<l;h++){const f=r[h];if(!(f instanceof Link))continue;if(f===this)return e.length>0&&e.sort((u,d)=>u-d),e.length;if(!f.isVisible()||!f.Wa())continue;const a=f.routeBounds;if(!a.isReal()||!this.routeBounds.intersectsRect(a)||this.usesSamePort(f))continue;const c=f.path;c!==null&&c.isVisibleObject()&&this.OO(t,i,e,f)}}}return e.length>0&&e.sort((o,r)=>o-r),e.length}OO(t,i,e,s){const n=Geo.g(t.y,i.y),o=s.pointsCount;let r=s.getPoint(0);const l=Point.a();for(let h=1;h<o;h++){const f=s.getPoint(h);if(h<o-1){const a=s.getPoint(h+1);if(r.y===f.y&&f.y===a.y){if(f.x>r.x&&a.x>=f.x||f.x<r.x&&a.x<=f.x)continue}else if(r.x===f.x&&f.x===a.x&&(f.y>r.y&&a.y>=f.y||f.y<r.y&&a.y<=f.y))continue}this.EO(t,i,r,f,l)&&(n?e.push(l.x):e.push(l.y)),r=f}Point.o(l)}EO(t,i,e,s,n){const o=t.x,r=t.y,l=i.x,h=i.y,f=e.x,a=e.y,c=s.x,u=s.y;if(Geo.g(o,l)){if(!Geo.g(r,h)&&Geo.g(a,u)&&Math.min(r,h)<a&&Math.max(r,h)>a&&Math.min(f,c)<o&&Math.max(f,c)>o&&!Geo.g(f,c))return n.x=o,n.y=a,!0}else if(Geo.g(r,h)&&Geo.g(f,c)&&Math.min(o,l)<f&&Math.max(o,l)>f&&Math.min(a,u)<r&&Math.max(a,u)>r&&!Geo.g(a,u))return n.x=f,n.y=r,!0;return n.x=0,n.y=0,!1}get firstPickIndex(){return this.pointsCount<=2?0:this.isOrthogonal||!this.Vd(this.computeSpot(!0))?1:0}get lastPickIndex(){const t=this.pointsCount;return t===0?0:t<=2?t-1:this.isOrthogonal||!this.Vd(this.computeSpot(!1))?t-2:t-1}Wa(){const t=this.curve;return t===11||t===10}Ib(t){if(t||this.Wa()){const i=this.diagram;i!==null&&!i.animationManager.isTicking&&!i.ih.has(this)&&(this.Tc.width!==0||this.Tc.height!==0)&&i.ih.set(this,this.Tc.copy())}}invalidateOtherJumpOvers(t){const i=this.layer;if(i===null||!i.visible||i.isTemporary)return;const e=i.diagram;if(e===null||e.animationManager.isTicking)return;let s=!1;const n=e.layers;for(;n.next();){const o=n.value;if(o.visible){if(o===i){s=!0;let r=!1;const l=o.t2(),h=l.length;for(let f=0;f<h;f++){const a=l[f];a instanceof Link&&(a===this?r=!0:r&&this.FT(a,t))}}else if(s){const r=o.t2(),l=r.length;for(let h=0;h<l;h++){const f=r[h];f instanceof Link&&this.FT(f,t)}}}}}FT(t,i){if(t===null||!t.Ch||!t.Le||!t.Wa())return;const e=t.routeBounds;e.isReal()&&(!this.routeBounds.intersectsRect(e)&&!i.intersectsRect(e)||this.usesSamePort(t)||t.re())}usesSamePort(t){const i=this.pointsCount,e=t.pointsCount;if(i>0&&e>0){const s=this.getPoint(0),n=t.getPoint(0);if(s.equalsApprox(n))return!0;const o=this.getPoint(i-1),r=t.getPoint(e-1);if(o.equalsApprox(r)||s.equalsApprox(r)||o.equalsApprox(n))return!0}else if(this.fromNode===t.fromNode||this.toNode===t.toNode||this.fromNode===t.toNode||this.toNode===t.fromNode)return!0;return!1}isVisible(){if(!super.isVisible())return!1;const t=this.containingGroup;let i=!0;const e=this.diagram;e!==null&&(i=e.isTreePathToChildren);const s=this.fromNode;if(s!==null){if(this.isTreeLink&&i&&!s.isTreeExpanded)return!1;if(s===t)return!0;let o=s;for(;o!==null;){if(o.labeledLink===this)return!0;o=o.containingGroup}const r=s.findVisibleNode();if(r===null||r===t)return!1}const n=this.toNode;if(n!==null){if(this.isTreeLink&&!i&&!n.isTreeExpanded)return!1;if(n===t)return!0;let o=n;for(;o!==null;){if(o.labeledLink===this)return!0;o=o.containingGroup}const r=n.findVisibleNode();if(r===null||r===t)return!1}return!0}Ki(t){if(super.Ki(t),t&&this.Ib(!1),this.Zo!==null&&this.Zo.Dd(),this.$s!==null){const e=this.$s.iterator;for(;e.next();)e.value.Ki(t)}}get adjusting(){return this.Lc}set adjusting(t){const i=this.Lc;i!==t&&(Debug&&t!==0&&t!==17&&t!==18&&t!==19&&U.n(\"Link.adjusting can only be set to None, End, Scale, or Stretch, not: \"+t),this.Lc=t,this.t(\"adjusting\",i,t))}computeAdjusting(){return this.isAvoiding&&this.diagram!==null&&this.diagram.animationManager.defaultAnimation.isAnimating?17:this.Lc}get corner(){return this.Id}set corner(t){const i=this.Id;i!==t&&(Debug&&U.i(t,\"number\",Link,\"corner\"),this.Id=t,this.re(),this.t(\"corner\",i,t))}get curve(){return this.Od}set curve(t){const i=this.Od;i!==t&&(Debug&&t!==0&&t!==9&&t!==10&&t!==11&&U.n(\"Link.curve can only be set to None, Bezier, JumpGap, or JumpOver, not: \"+t),this.Od=t,this.invalidateRoute(),this.re(),this.Ib(i===10||i===11||t===10||t===11),this.t(\"curve\",i,t))}get curviness(){return this.Ed}set curviness(t){const i=this.Ed;i!==t&&(Debug&&U.i(t,\"number\",Link,\"curviness\"),this.Ed=t,this.invalidateRoute(),this.re(),this.t(\"curviness\",i,t))}get routing(){return this.Ka}set routing(t){const i=this.Ka;i!==t&&(Debug&&t!==1&&t!==2&&t!==6&&t!==7&&U.n(\"Link.routing can only be set to Normal, Orthogonal, AvoidsNodes, not: \"+t),this.Ka=t,this.isAvoiding&&this.diagram!==null&&(this.diagram.qm=!0),this.$o=null,this.invalidateRoute(),this.Ib(Link.SN(i)||Link.SN(t)),this.t(\"routing\",i,t))}get smoothness(){return this.Bd}set smoothness(t){const i=this.Bd;i!==t&&(Debug&&U.i(t,\"number\",Link,\"smoothness\"),this.Bd=t,this.re(),this.t(\"smoothness\",i,t))}Py(){const t=this.ho;if(t===null)return;const i=this.fo;if(i===null||!isNaN(this.curviness))return;const e=this.ao,s=this.co;let n=null,o=null;const r=t.oi.h,l=r.length;for(let h=0;h<l;h++){const f=r[h];!(f.ho===t&&f.ao===e&&f.fo===i&&f.co===s)&&!(f.ho===i&&f.ao===s&&f.fo===t&&f.co===e)||(o===null?o=f:(n===null&&(n=[],n.push(o)),n.push(f)))}if(n!==null){let h=t.ST(i,e,s);h===null&&(h=new LinkBundle(t,e,i,s),t.bT(h),i.bT(h)),h.Zs=n;for(let f=0;f<n.length;f++){const a=n[f];a.Zo=h}h.Dd()}}My(){const t=this.Zo;if(t!==null){if(!isNaN(this.curviness))return;this.Zo=null;const i=t.Zs.indexOf(this);i>=0&&(t.Zs.splice(i,1),t.Dd())}}Fl(){return!0}get key(){const t=this.diagram;if(!(t===null||!t.model.Ya()))return t.model.getKeyForLinkData(this.data)}}class LinkBundle{Vo;Ys;uy;gN;Ab;mN;Zs;constructor(t,i,e,s){GSet.Ji(this),this.Vo=!1,this.Ys=!1,this.uy=t,this.gN=i,this.Ab=e,this.mN=s,this.Zs=[]}Dd(){if(!this.Vo){const t=this.Zs;if(t.length>0){const i=t[0].diagram;i!==null&&(i.T2.add(this),this.Ys=i.undoManager.isUndoingRedoing)}}this.Vo=!0}G2(){if(this.Vo){this.Vo=!1;const t=this.Zs;if(t.length>0){const i=t[0],e=i.diagram,s=e===null||e.qh&&!this.Ys;this.Ys=!1,i.arrangeBundledLinks(t,s),t.length===1&&(i.Zo=null,t.length=0)}t.length===0&&(this.uy.kT(this),this.Ab.kT(this))}}}class PositionArray{ae;fe;ja;va;yi;wi;Ht;Ah;Lh;wa;eP;Vo;Cy;Zf;sP;nP;constructor(t){GSet.Ji(this),this.wa=null,this.eP=null,this.Vo=!0,this.Cy=!1,this.ae=1,this.fe=1,this.ja=-1,this.va=-1,this.yi=t.width,this.wi=t.height,this.Ht=[],this.Ah=0,this.Lh=0,this.Zf=11,this.sP=this.Zf*2,this.nP=this.Zf*2}static Qs=0;static Ja=1;static Xd=999999;static AN=PositionArray.Xd+1;static LN=PositionArray.Xd+2;X1(t){if(t.width<=0||t.height<=0)return;const i=t.x,e=t.y,s=t.x+t.width,n=t.y+t.height;this.ae=Math.floor((i-this.yi)/this.yi)*this.yi,this.fe=Math.floor((e-this.wi)/this.wi)*this.wi,this.ja=Math.ceil((s+2*this.yi)/this.yi)*this.yi,this.va=Math.ceil((n+2*this.wi)/this.wi)*this.wi;const o=1+(Math.ceil((this.ja-this.ae)/this.yi)|0),r=1+(Math.ceil((this.va-this.fe)/this.wi)|0);if(this.Ht.length===0||this.Ah<o-1||this.Lh<r-1){const l=[];for(let h=0;h<=o;h++)l[h]=new Uint32Array(r);this.Ht=l,this.Ah=o-1,this.Lh=r-1}this.BO(PositionArray.AN)}get bounds(){return new Rect(this.ae,this.fe,this.ja-this.ae,this.va-this.fe)}get cellWidth(){return this.yi}set cellWidth(t){t>0&&t!==this.yi&&(this.yi=t,this.X1(this.bounds))}get cellHeight(){return this.wi}set cellHeight(t){t>0&&t!==this.wi&&(this.wi=t,this.X1(this.bounds))}Yd(t,i){return this.ae<=t&&t<=this.ja&&this.fe<=i&&i<=this.va}uo(t,i){if(!this.Yd(t,i))return PositionArray.AN;t-=this.ae,t/=this.yi,i-=this.fe,i/=this.wi;const e=t|0,s=i|0;return this.Ht[e][s]}WR(t,i,e,s){if(!this.Yd(t,i))return;const n=(t-this.ae)/this.yi|0,o=(i-this.fe)/this.wi|0,r=(t+e-this.ae)/this.yi|0,l=(i+s-this.fe)/this.wi|0,h=Math.min(r,this.Ah),f=Math.min(l,this.Lh);for(let a=n;a<=h;a++){const c=this.Ht[a];if(c.fill)c.fill(PositionArray.Qs,o,f+1);else for(let u=o;u<=f;u++)c[u]=PositionArray.Qs}}BO(t){for(let i=0;i<=this.Ah;i++){const e=this.Ht[i];if(e.fill)e.fill(t);else for(let s=0;s<=this.Lh;s++)e[s]=t}}cL(){for(let t=0;t<=this.Ah;t++){const i=this.Ht[t];for(let e=0;e<=this.Lh;e++)i[e]>=PositionArray.Ja&&(i[e]=PositionArray.AN)}}VO(t,i){return this.uo(t,i)===PositionArray.Qs}isUnoccupied(t,i,e,s){if(t>this.ja||t+e<this.ae||i>this.va||i+s<this.fe)return!0;let n=(t-this.ae)/this.yi|0,o=(i-this.fe)/this.wi|0,r=Math.max(0,e)/this.yi+1|0,l=Math.max(0,s)/this.wi+1|0;if(n<0&&(r+=n,n=0),o<0&&(l+=o,o=0),r<0||l<0)return!0;const h=Math.min(n+r-1,this.Ah)|0,f=Math.min(o+l-1,this.Lh)|0;for(let a=n;a<=h;a++){const c=this.Ht[a];for(let u=o;u<=f;u++)if(c[u]===PositionArray.Qs)return!1}return!0}maxAvoidsLinksSpaceH(t,i,e,s){if(t>this.ja||i<this.ae||e>this.va||e<this.fe)return 0;const n=(t-this.ae)/this.yi|0,o=(i-this.ae)/this.yi|0,r=(e-this.fe)/this.wi|0,l=s/this.wi+1|0;let h;for(h=0;h<l/2;h++){let f=!1;for(let a=n;a<=o;a++)if(this.Ht[a][r+h]===PositionArray.Qs||this.Ht[a][r-h]===PositionArray.Qs){f=!0;break}if(f)return Math.max(0,(2*h-1)*this.wi)}return s}maxAvoidsLinksSpaceV(t,i,e,s){if(t>this.va||i<this.fe||e>this.ja||e<this.ae)return 0;const n=(t-this.fe)/this.wi|0,o=(i-this.fe)/this.wi|0,r=(e-this.ae)/this.yi|0,l=s/this.yi+1|0;let h;for(h=0;h<l/2;h++){let f=!1;for(let a=n;a<=o;a++)if(this.Ht[r+h][a]===PositionArray.Qs||this.Ht[r-h][a]===PositionArray.Qs){f=!0;break}if(f)return Math.max(0,(2*h-1)*this.yi)}return s}zO(t,i,e,s,n,o,r,l){t=t|0,i=i|0;let h=this.Ht[t][i];if(h>=PositionArray.Ja&&h<PositionArray.Xd)for(s?i+=e:t+=e,h+=1;n<=t&&t<=o&&r<=i&&i<=l;){const f=this.Ht[t][i];if(h>=f)break;this.Ht[t][i]=h,h+=1,s?i+=e:t+=e}return s?i:t}go(t,i,e,s,n,o,r,l){if(t<n||t>o||i<r||i>l)return;const h=this.zO(t,i,e,s,n,o,r,l);if(s)if(e>0)for(let f=i+e;f<h;f+=e)this.go(t,f,1,!s,n,o,r,l),this.go(t,f,-1,!s,n,o,r,l);else for(let f=i+e;f>h;f+=e)this.go(t,f,1,!s,n,o,r,l),this.go(t,f,-1,!s,n,o,r,l);else if(e>0)for(let f=t+e;f<h;f+=e)this.go(f,i,1,!s,n,o,r,l),this.go(f,i,-1,!s,n,o,r,l);else for(let f=t+e;f>h;f+=e)this.go(f,i,1,!s,n,o,r,l),this.go(f,i,-1,!s,n,o,r,l)}zb(t,i,e,s,n,o,r,l,h,f){let a=t|0,c=i|0,u=PositionArray.Qs,d=PositionArray.Ja;for(this.Ht[a][c]=d;u===PositionArray.Qs&&a>r&&a<l&&c>h&&c<f;)d+=1,this.Ht[a][c]=d,o?c+=n:a+=n,u=this.Ht[a][c];return o?c:a}Xb(t,i,e,s,n,o,r,l,h,f){let a=e|0,c=s|0,u=PositionArray.Qs;const d=PositionArray.Xd;for(this.Ht[a][c]=d;u===PositionArray.Qs&&a>r&&a<l&&c>h&&c<f;)this.Ht[a][c]=d,o?c+=n:a+=n,u=this.Ht[a][c]}RT(t,i,e,s,n,o){this.Cy=!1;let r=t.x,l=t.y;if(!this.Yd(r,l))return;r-=this.ae,r/=this.yi,l-=this.fe,l/=this.wi;let h=e.x,f=e.y;if(!this.Yd(h,f))return;if(h-=this.ae,h/=this.yi,f-=this.fe,f/=this.wi,Math.abs(r-h)<=1&&Math.abs(l-f)<=1){this.Cy=!0;return}let a=n.x,c=n.y,u=n.x+n.width,d=n.y+n.height;a-=this.ae,a/=this.yi,c-=this.fe,c/=this.wi,u-=this.ae,u/=this.yi,d-=this.fe,d/=this.wi;const m=Math.max(0,Math.min(this.Ah,a|0)),g=Math.min(this.Ah,Math.max(0,u|0)),p=Math.max(0,Math.min(this.Lh,c|0)),w=Math.min(this.Lh,Math.max(0,d|0)),x=0,k=90,b=270,S=this.Ht,M=r|0,A=l|0,C=h|0,P=f|0,N=i===x||i===k?1:-1,T=i===k||i===b;S[M][A]===PositionArray.Qs?(this.zb(M,A,C,P,N,T,m,g,p,w),this.zb(M,A,C,P,1,!T,m,g,p,w),this.zb(M,A,C,P,-1,!T,m,g,p,w)):this.zb(M,A,C,P,N,T,M,A,M,A),S[C][P]===PositionArray.Qs?(this.Xb(M,A,C,P,s===x||s===k?1:-1,s===k||s===b,m,g,p,w),this.Xb(M,A,C,P,1,!(s===k||s===b),m,g,p,w),this.Xb(M,A,C,P,-1,!(s===k||s===b),m,g,p,w)):this.Xb(M,A,C,P,N,T,C,P,C,P);const L=U.lt();if(o&&this.IT(C,P,s,M,A,L)){(L[0]!==C||L[1]!==P)&&(L.unshift(P),L.unshift(C)),(L[L.length-2]!==M||L[L.length-1]!==A)&&(L.push(M),L.push(A));let D=PositionArray.Ja,F=L[L.length-2],I=L[L.length-1];S[F][I]=D++;for(let R=L.length-4;R>=0;R-=2){F=L[R+2],I=L[R+3];const O=L[R],Y=L[R+1];for(;O>F?F++:O<F?F--:Y>I?I++:Y<I&&I--,S[F][I]=D++,!(F===O&&I===Y););}}else this.go(M,A,1,!1,m,g,p,w),this.go(M,A,-1,!1,m,g,p,w),this.go(M,A,1,!0,m,g,p,w),this.go(M,A,-1,!0,m,g,p,w);U.tt(L)}IT(t,i,e,s,n,o){const a=this.Ht;let c=t,u=i;for(;;){if(c===s&&u===n)return!0;let d=c,m=u;if(e===0)if(d<s)d++;else break;else if(e===90)if(m<n)m++;else break;else if(e===180)if(d>s)d--;else break;else if(m>n)m--;else break;const g=a[d][m];if(g===0||g===PositionArray.LN)break;c=d,u=m}for(;;){let d=e,m=c,g=u;e===0?g<n?(d=90,g++):g>n&&(d=270,g--):e===90?m<s?(d=0,m++):m>s&&(d=180,m--):e===180?g<n?(d=90,g++):g>n&&(d=270,g--):m<s?(d=0,m++):m>s&&(d=180,m--);const p=a[m][g];if(d!==e&&p!==0&&p!==PositionArray.LN){if(o.push(c),o.push(u),this.IT(c,u,d,s,n,o))return!0;o.pop(),o.pop()}if(a[c][u]=PositionArray.LN,e===0){if(c===t)return!1;c--}else if(e===90){if(u===i)return!1;u--}else if(e===180){if(c===t)return!1;c++}else{if(u===i)return!1;u++}}}}class Knot{Te;gl;fs;Kd;constructor(t,i){GSet.Ji(this),this.Te=t,this.gl=i,this.fs=[],this.Kd=!1}toString(){const t=this.fs;let i=this.Te.toString()+\" \"+t.length.toString()+\":\";for(let e=0;e<t.length;e++){const s=t[e];s!==null&&(i+=`\n  `+s.toString())}return i}XO(t,i,e,s){const n=i.offsetY;switch(n){case 8:return 90;case 2:return 180;case 1:return 270;case 4:return 0}let o=e;switch(n){case 9:return o>180?270:90;case 6:return o>90&&o<=270?180:0}const r=Math.atan2(t.height,t.width)*180/Math.PI;switch(n){case 3:return o>r&&o<=180+r?180:270;case 5:return o>180-r&&o<=360-r?270:0;case 12:return o>r&&o<=180+r?90:0;case 10:return o>180-r&&o<=360-r?180:90;case 7:return o>90&&o<=180+r?180:o>180+r&&o<=360-r?270:0;case 13:return o>180&&o<=360-r?270:o>r&&o<=180?90:0;case 14:return o>r&&o<=180-r?90:o>180-r&&o<=270?180:0;case 11:return o>180-r&&o<=180+r?180:o>180+r?270:90}return s&&n!==15&&(o-=15,o<0&&(o+=360)),o>r&&o<180-r?90:o>=180-r&&o<=180+r?180:o>180+r&&o<360-r?270:0}Dd(){this.fs.length=0}DT(t){let i=this.fs;i.length===0&&(this.YO(),i=this.fs);for(let e=0;e<i.length;e++){const s=i[e];if(s!==null&&s.Je===t)return s}return null}YO(){if(!this.Kd){const t=this.Kd;this.Kd=!0;let i,e=null;const s=this.Te,n=s instanceof Group?s:null;if(n!==null&&!n.isSubGraphExpanded){if(!n.actualBounds.isReal())return this.Kd=t,this.fs;e=n,i=e.findExternalLinksConnected()}else s.isTreeExpanded?i=s.findLinksConnected(this.gl.portId):i=s.findExternalTreeLinksConnected();this.fs.length=0;let o=0;const r=this.gl.getDocumentPoint(Spot.TopLeft,Point.a()),l=this.gl.getDocumentPoint(Spot.BottomRight,Point.a()),h=Rect.K(r.x,r.y,0,0);h.unionPoint(l),Point.o(r),Point.o(l);const f=Point.K(h.x+h.width/2,h.y+h.height/2),a=this.gl.getDocumentAngle(),c=i.iterator;for(;c.next();){const g=c.value;if(!g.isVisible()||g.fromPort===g.toPort)continue;const p=g.fromPort===this.gl||g.fromNode!==null&&e!==null&&g.fromNode.isMemberOf(e),w=g.computeSpot(p,this.gl);if(!w.isSide())continue;let x;if(p?x=g.toPort:x=g.fromPort,x===null)continue;let k=x.part;if(k===null)continue;const b=k.findVisibleNode();b!==null&&b!==k&&(k=b,x=k.port);const S=g.computeOtherPoint(k,x);let M=f.directionPoint(S);M-=a,M<0?M+=360:M>=360&&(M-=360);const A=this.XO(h,w,M,g.isOrthogonal);let C=0;A===0?(C=4,M>180&&(M-=360)):A===90?(C=8,M>270&&(M-=360)):A===180?C=2:(C=1,M<90&&(M+=360));let P=this.fs[o];P===void 0?(P=new LinkInfo(g,M,C),this.fs[o]=P):(P.Je=g,P.jt=M,P.xe=C),P.Yb.set(S),o++}Point.o(f),this.KO();const u=this.fs.length;let d=-1,m=0;for(o=0;o<u;o++){const g=this.fs[o];g!==void 0&&(g.xe!==d&&(d=g.xe,m=0),g.Ud=m,m++)}for(d=-1,m=0,o=u-1;o>=0;o--){const g=this.fs[o];g!==void 0&&(g.xe!==d&&(d=g.xe,m=g.Ud+1),g.Dc=m)}this.UO(this.fs),this.GO(this.fs),this.Kd=t,Rect.o(h)}return this.fs}HO(t,i){return t===i?0:t===null?-1:i===null?1:t.xe<i.xe?-1:t.xe>i.xe?1:t.jt<i.jt?-1:t.jt>i.jt?1:0}KO(){this.fs.sort(Knot.prototype.HO)}UO(t){const i=this.gl,e=this.Te.portSpreading,s=Point.a(),n=Point.a(),o=Point.a(),r=Point.a();i.getDocumentPoint(Spot.TopLeft,s),i.getDocumentPoint(Spot.TopRight,n),i.getDocumentPoint(Spot.BottomRight,o),i.getDocumentPoint(Spot.BottomLeft,r);let l=0,h=0,f=0,a=0;if(e===2)for(let x=0;x<t.length;x++){const k=t[x];if(k===null)continue;const b=k.Je.computeThickness();switch(k.xe){case 8:f+=b;break;case 2:a+=b;break;case 1:l+=b;break;default:case 4:h+=b;break}}let c=0,u=0,d=1,m=n,g=o,p=0,w=0;for(let x=0;x<t.length;x++){const k=t[x];if(k===null)continue;if(c!==k.xe){switch(c=k.xe,c){case 8:m=o,g=r;break;case 2:m=r,g=s;break;case 1:m=s,g=n;break;default:case 4:m=n,g=o;break}switch(p=g.x-m.x,w=g.y-m.y,c){case 8:f>Math.abs(p)?(d=Math.abs(p)/f,f=Math.abs(p)):d=1;break;case 2:a>Math.abs(w)?(d=Math.abs(w)/a,a=Math.abs(w)):d=1;break;case 1:l>Math.abs(p)?(d=Math.abs(p)/l,l=Math.abs(p)):d=1;break;default:case 4:h>Math.abs(w)?(d=Math.abs(w)/h,h=Math.abs(w)):d=1;break}u=0}const b=k.zd;if(e===2){let S=k.Je.computeThickness();switch(S*=d,b.set(m),c){case 8:b.x=m.x+p/2+f/2-u-S/2;break;case 2:b.y=m.y+w/2+a/2-u-S/2;break;case 1:b.x=m.x+p/2-l/2+u+S/2;break;default:case 4:b.y=m.y+w/2-h/2+u+S/2;break}u+=S}else{let S=.5;e===1&&(S=(k.Ud+1)/(k.Dc+1)),b.x=m.x+p*S,b.y=m.y+w*S}}Point.o(s),Point.o(n),Point.o(o),Point.o(r)}GO(t){for(let i=0;i<t.length;i++){const e=t[i];e!==null&&(e.Bb=this.qO(e))}}qO(t){const i=t.Je,e=i.fromPort===this.gl,s=i.computeEndSegmentLength(this.Te,this.gl,Spot.None,e);let n=t.Ud;if(n<0)return s;const o=t.Dc;if(o<=1||!i.isOrthogonal)return s;const l=t.Yb,h=t.zd;(t.xe===2||t.xe===8)&&(n=o-1-n);const f=Link.mO,a=t.xe===2||t.xe===4;return(a?l.y<h.y:l.x<h.x)?s+n*f:(a?l.y===h.y:l.x===h.x)?s:s+(o-1-n)*f}}class LinkInfo{Je;jt;xe;Yb;Ud;Dc;zd;Bb;constructor(t,i,e){this.Je=t,this.jt=i,this.xe=e,this.Yb=new Point,this.Ud=0,this.Dc=0,this.zd=new Point,this.Bb=0}toString(){return this.Je.toString()+\" \"+this.jt.toString()+\" \"+this.xe.toString()+\":\"+this.Ud.toString()+\"/\"+this.Dc.toString()+\" \"+this.zd.toString()+\" \"+this.Bb.toString()+\" \"+this.Yb.toString()}}class LinkSettings{ka;Sa;Ma;Pa;Na;Ca;Y0;z0;K0;X0;constructor(){this.ka=Spot.Default,this.Sa=Spot.Default,this.Ma=NaN,this.Pa=NaN,this.Na=NaN,this.Ca=NaN,this.Y0=null,this.z0=null,this.K0=1/0,this.X0=1/0}copy(){const t=new LinkSettings;return t.ka=this.ka.N(),t.Sa=this.Sa.N(),t.Ma=this.Ma,t.Pa=this.Pa,t.Na=this.Na,t.Ca=this.Ca,t.Y0=this.Y0,t.z0=this.z0,t.K0=this.K0,t.X0=this.X0,t}}class LinkElementSettings{F0;R0;I0;D0;Mp;Pp;constructor(){this.F0=-1/0,this.R0=0,this.I0=Point.No,this.D0=0,this.Mp=\"None\",this.Pp=\"None\"}copy(){const t=new LinkElementSettings;return t.F0=this.F0,t.R0=this.R0,t.I0=this.I0.N(),t.D0=this.D0,t.Mp=this.Mp,t.Pp=this.Pp,t}}class Group extends Node{Gd;It;pa;g0;hi;oe;constructor(t,i){let e;t===void 0||t instanceof PanelLayout||typeof t==\"string\"?e=t:t&&(i=t),super(e),this.B=this.B|4608,this.Gd=new GSet,this.It=null,this.oe=new Layout,this.oe.group=this,this.pa=new GSet,this.g0=null,this.hi=null,i&&Object.assign(this,i)}cloneProtected(t){super.cloneProtected(t),this.B=this.B&-32769;const i=t.findInVisualTree(e=>e instanceof Placeholder);i instanceof Placeholder?t.It=i:t.It=null,this.oe!==null?(t.oe=this.oe.copy(),t.oe.group=t):(t.oe!==null&&(t.oe.group=null),t.oe=null),this.hi!==null&&(t.hi=this.hi.copy())}Xo(t){super.Xo(t);const i=t.findSubGraphParts(),e=t.memberParts;for(;e.next();){const s=e.value;if(s.u(),s.invalidateLayout(8),s.clearAdornments(),s instanceof Node)s.invalidateConnectedLinks(i);else if(s instanceof Link){const n=s.labelNodes;for(;n.next();)n.value.invalidateConnectedLinks(i)}}}tc(t,i,e,s,n,o,r){if(t===3&&i===\"elements\"){if(n instanceof Placeholder)this.It===null?this.It=n:this.It!==n&&U.n(\"Cannot insert a second Placeholder into the visual tree of a Group.\");else if(n instanceof Panel){const l=n.findInVisualTree(h=>h instanceof Placeholder);l instanceof Placeholder&&(this.It===null?this.It=l:this.It!==l&&U.n(\"Cannot insert a second Placeholder into the visual tree of a Group.\"))}}else t===4&&i===\"elements\"&&this.It!==null&&(s===this.It?this.It=null:s instanceof Panel&&this.It.isContainedBy(s)&&(this.It=null));super.tc(t,i,e,s,n,o,r)}sd(t,i){if(super.sd(t,i),this.isClipping&&this.type!==Panel.Spot&&this.isSubGraphExpanded){let e=this.resizeObject;e instanceof Panel&&(e=e.findMainElement()),this.hi===null&&(this.hi=new Rect),e.getDocumentBounds(this.hi),e instanceof Shape&&this.hi.inflate(-e.strokeWidth,-e.strokeWidth)}}yh(t,i,e,s){this.hasPlaceholder()&&(this.Jo=this.placeholder),super.yh(t,i,e,s)}ensureBounds(){this.isSubGraphExpanded&&this.memberParts.each(i=>{i.ensureBounds()}),super.ensureBounds()}vr(){if(!super.vr())return!1;const t=this.memberParts;for(;t.next();){const i=t.value;if(i instanceof Node){if(!i.isVisible())continue;if(i.ns())return!1}else if(i instanceof Link){if(!i.isVisible())continue;if(i.ns()&&i.fromNode!==this&&i.toNode!==this)return!1}}return!0}hasPlaceholder(){return this.It!==null&&this.It.isVisibleObject()&&this.isSubGraphExpanded}get placeholder(){return this.It}get computesBoundsAfterDrag(){return(this.B&2048)!==0}set computesBoundsAfterDrag(t){const i=(this.B&2048)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Group,\"computesBoundsAfterDrag\"),this.B=this.B^2048,this.t(\"computesBoundsAfterDrag\",i,t))}get computesBoundsIncludingLinks(){return(this.B&4096)!==0}set computesBoundsIncludingLinks(t){const i=(this.B&4096)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Group,\"computesBoundsIncludingLinks\"),this.B=this.B^4096,this.t(\"computesBoundsIncludingLinks\",i,t))}get computesBoundsIncludingLocation(){return(this.B&8192)!==0}set computesBoundsIncludingLocation(t){const i=(this.B&8192)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Group,\"computesBoundsIncludingLocation\"),this.B=this.B^8192,this.t(\"computesBoundsIncludingLocation\",i,t))}get handlesDragDropForMembers(){return(this.B&16384)!==0}set handlesDragDropForMembers(t){const i=(this.B&16384)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Group,\"handlesDragDropForMembers\"),this.B=this.B^16384,this.t(\"handlesDragDropForMembers\",i,t))}get avoidableMembers(){return(this.B&131072)!==0}set avoidableMembers(t){const i=(this.B&131072)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Group,\"avoidableMembers\"),this.B=this.B^131072,this.t(\"avoidableMembers\",i,t))}get memberParts(){return this.Gd.iterator}fN(t){if(this.Gd.add(t)){t instanceof Group&&this.pa.add(t);const e=this.memberAdded;if(e!==null){let s=!0;const n=this.diagram;n!==null&&(s=n.H,n.H=!0),e(this,t),n!==null&&(n.H=s)}(!this.isVisible()||!this.isSubGraphExpanded)&&t.Ki(!1)}if(t instanceof Link&&!this.computesBoundsIncludingLinks)return;let i=this.It;i===null&&(i=this),i.u()}aN(t){if(this.Gd.delete(t)){t instanceof Group&&this.pa.delete(t);const e=this.memberRemoved;if(e!==null){let s=!0;const n=this.diagram;n!==null&&(s=n.H,n.H=!0),e(this,t),n!==null&&(n.H=s)}(!this.isVisible()||!this.isSubGraphExpanded)&&t.Ki(!0)}if(t instanceof Link&&!this.computesBoundsIncludingLinks)return;let i=this.It;i===null&&(i=this),i.u()}Jf(){if(this.Gd.count>0){const t=this.diagram;if(t!==null){const e=this.Gd.copy().iterator;for(;e.next();){const s=e.value;t.remove(s)}}}super.Jf()}get layout(){return this.oe}set layout(t){const i=this.oe;if(i!==t){t!==null&&(U.e(t,Layout,Group,\"layout\"),t.diagram!==null&&t.diagram.layout===t&&U.n(\"A layout cannot be both the Diagram.layout and a Group.layout: \"+t)),i!==null&&(i.diagram=null,i.group=null),this.oe=t;const e=this.diagram;t!==null&&(t.diagram=e,t.group=this),e!==null&&(e.qr=!0),this.t(\"layout\",i,t),e!==null&&e.requestUpdate()}}get memberAdded(){return this.Vt!==null?this.Vt.by:null}set memberAdded(t){const i=this.memberAdded;i!==t&&(t!==null&&U.P(t,Group,\"memberAdded\"),this.dl().by=t,this.t(\"memberAdded\",i,t))}get memberRemoved(){return this.Vt!==null?this.Vt.ky:null}set memberRemoved(t){const i=this.memberRemoved;i!==t&&(t!==null&&U.P(t,Group,\"memberRemoved\"),this.dl().ky=t,this.t(\"memberRemoved\",i,t))}get memberValidation(){return this.Vt!==null?this.Vt.fh:null}set memberValidation(t){const i=this.memberValidation;i!==t&&(t!==null&&U.P(t,Group,\"memberValidation\"),this.dl().fh=t,this.t(\"memberValidation\",i,t))}canAddMembers(t){const i=this.diagram;if(i===null)return!1;const e=i.commandHandler,n=e.PP(t).iterator;for(;n.next();){const o=n.value;if(!e.isValidMember(this,o))return!1}return!0}addMembers(t,i){const e=this.diagram;if(e===null)return!1;const s=e.commandHandler,n=s.PP(t);let o=!0;const r=n.iterator;for(;r.next();){const l=r.value;!i||s.isValidMember(this,l)?l.containingGroup=this:o=!1}return o}get ungroupable(){return(this.B&256)!==0}set ungroupable(t){const i=(this.B&256)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Group,\"ungroupable\"),this.B=this.B^256,this.t(\"ungroupable\",i,t))}canUngroup(){if(!this.ungroupable)return!1;const t=this.layer;if(t===null||!t.allowUngroup)return!1;const i=t.diagram;return!(i!==null&&!i.allowUngroup)}invalidateConnectedLinks(t){const i=this.WO();if(super.invalidateConnectedLinks(t),i)return;this.WA(!0);const e=this.findExternalLinksConnected();for(;e.next();){const s=e.value;if(t!==void 0&&t.has(s))continue;const n=s.fromNode;if(n!==null&&n!==this&&n.isMemberOf(this)&&!n.isVisible())n.Qi(s.fromPort),n.Qi(s.toPort),s.invalidateRoute();else{const o=s.toNode;o!==null&&o!==this&&o.isMemberOf(this)&&!o.isVisible()&&(o.Qi(s.fromPort),o.Qi(s.toPort),s.invalidateRoute())}}}findExternalLinksConnected(){const t=this.diagram!==null&&this.diagram.E2;if(t&&this.g0!==null)return this.g0.iterator;const i=this.findSubGraphParts();i.add(this);const e=new GSet,s=i.iterator;for(;s.next();){const n=s.value;if(!(n instanceof Node))continue;const o=n.linksConnected;for(;o.next();){const r=o.value;i.has(r)||e.add(r)}}return t&&(this.g0=e),e.iterator}findExternalNodesConnected(){const t=this.findSubGraphParts();t.add(this);const i=new GSet,e=t.iterator;for(;e.next();){const s=e.value;if(!(s instanceof Node))continue;const n=s.linksConnected;for(;n.next();){const o=n.value,r=o.fromNode;r!==null&&(!t.has(r)||r===this)&&i.add(r);const l=o.toNode;l!==null&&(!t.has(l)||l===this)&&i.add(l)}}return i.iterator}OE(){function t(e,s){e!==null&&(s.add(e),t(e.containingGroup,s))}const i=new GSet;return t(this,i),i}findSubGraphParts(){const t=new GSet;return Part.ch(t,this,!0,0,!0),t.delete(this),t}Ki(t){super.Ki(t);const i=this.memberParts;for(;i.next();)i.value.Ki(t)}collapseSubGraph(){const t=this.diagram;if(t===null||t.isCollapsingExpanding)return;t.isCollapsingExpanding=!0;const i=this.findSubGraphParts();this.OT(i,t,this),t.isCollapsingExpanding=!1}OT(t,i,e){const s=this.memberParts;for(;s.next();){const n=s.value;if(n.Ki(!1),n instanceof Group&&n.isSubGraphExpanded&&(n.wasSubGraphExpanded=n.isSubGraphExpanded,n.OT(t,i,e)),n instanceof Node)n.invalidateConnectedLinks(t),i.Ef(n,e);else if(n instanceof Link){const o=n.labelNodes;for(;o.next();)o.value.invalidateConnectedLinks(t)}}this.isSubGraphExpanded=!1}expandSubGraph(){const t=this.diagram;if(t===null||t.isCollapsingExpanding)return;t.isCollapsingExpanding=!0;const i=this.findSubGraphParts();this.ET(i,t,this),t.isCollapsingExpanding=!1}ET(t,i,e){const s=this.memberParts;for(;s.next();){const n=s.value;if(n.Ki(!0),n instanceof Group&&n.wasSubGraphExpanded&&(n.wasSubGraphExpanded=!1,n.ET(t,i,e)),n instanceof Node)n.invalidateConnectedLinks(t);else if(n instanceof Link){const o=n.labelNodes;for(;o.next();)o.value.invalidateConnectedLinks(t)}}this.isSubGraphExpanded=!0}get isSubGraphExpanded(){return(this.B&512)!==0}set isSubGraphExpanded(t){const i=(this.B&512)!==0;if(i!==t){Debug&&U.i(t,\"boolean\",Group,\"isSubGraphExpanded\"),this.B=this.B^512;const e=this.diagram;this.t(\"isSubGraphExpanded\",i,t);const s=this.subGraphExpandedChanged;if(s!==null){let n=!0;e!==null&&(n=e.H,e.H=!0),s(this),e!==null&&(e.H=n)}if(e!==null&&e.undoManager.isUndoingRedoing){this.It!==null&&this.It.u(),this.memberParts.each(n=>n.updateAdornments());return}t?this.expandSubGraph():this.collapseSubGraph()}}get wasSubGraphExpanded(){return(this.B&1024)!==0}set wasSubGraphExpanded(t){const i=(this.B&1024)!==0;i!==t&&(Debug&&U.i(t,\"boolean\",Group,\"wasSubGraphExpanded\"),this.B=this.B^1024,this.t(\"wasSubGraphExpanded\",i,t))}get subGraphExpandedChanged(){return this.Vt!==null?this.Vt.Sy:null}set subGraphExpandedChanged(t){const i=this.subGraphExpandedChanged;i!==t&&(t!==null&&U.P(t,Group,\"subGraphExpandedChanged\"),this.dl().Sy=t,this.t(\"subGraphExpandedChanged\",i,t))}move(t,i){i===void 0&&(i=!1);const e=i?this.location:this.position,s=e.x,n=e.y,o=t.x,r=t.y;if((s===o||isNaN(s)&&isNaN(o))&&(n===r||isNaN(n)&&isNaN(r)))return;const l=o-(isNaN(s)?0:s),h=r-(isNaN(n)?0:n),f=Point.a();super.move(t,i);const a=new GSet,u=this.findSubGraphParts().iterator;for(;u.next();){const d=u.value;d instanceof Link&&(d.suspendsRouting&&a.add(d),!(!d.Le&&(d.fromNode===this||d.toNode===this))&&(d.suspendsRouting=!0))}for(u.reset();u.next();){const d=u.value;if(d.Fl()||d instanceof Node&&d.isLinkLabel)continue;const m=d.position,g=d.location;m.isReal()?(f.x=m.x+l,f.y=m.y+h,d.position=f):g.isReal()&&(f.x=g.x+l,f.y=g.y+h,d.location=f)}for(u.reset();u.next();){const d=u.value;if(!(d instanceof Link)||(d.suspendsRouting=a.has(d),!d.Le&&(d.fromNode===this||d.toNode===this)))continue;const m=d.position;f.x=m.x+l,f.y=m.y+h,f.isReal()?d.move(f):d.invalidateRoute()}Point.o(f)}WO(){return(this.B&65536)!==0}WA(t){(this.B&65536)!==0!==t&&(this.B=this.B^65536)}get ya(){return(this.B&32768)!==0}set ya(t){(this.B&32768)!==0!==t&&(this.B=this.B^32768)}}class Placeholder extends GraphObject{ei;Hd;constructor(t){super(),this.ei=Margin.Xg,this.Hd=new Rect(NaN,NaN,NaN,NaN),t&&Object.assign(this,t)}cloneProtected(t){super.cloneProtected(t),t.ei=this.ei.N(),t.Hd=this.Hd.copy()}ph(t){if(this.background===null)return!1;const i=this.naturalBounds;return Rect.contains(0,0,i.width,i.height,t.x,t.y)}ed(t,i,e,s){const n=this.part;if((n===null||!(n instanceof Group)&&!(n instanceof Adornment))&&U.n(\"Placeholder is not inside a Group or Adornment.\"),n instanceof Group){const o=this.computeBorder(this.Hd),r=this.minSize,l=isFinite(r.width)?Math.max(r.width,o.width):o.width,h=isFinite(r.height)?Math.max(r.height,o.height):o.height,f=this.qi;f.Vn(l||0,h||0),this._n(0,0,f.width,f.height);const a=n.memberParts;let c=!1;for(;a.next();)if(a.value.isVisible()){c=!0;break}const u=n.diagram;if(c&&u!==null&&!u.animationManager.HM(n)&&!isNaN(o.x)&&!isNaN(o.y)){const d=Point.a();d.setRectSpot(o,n.locationSpot),n.location=d,Point.o(d)}}else{const o=n,r=this.qi,l=this.ei,h=l.left+l.right,f=l.top+l.bottom,a=o.adornedObject,c=a.getDocumentAngle();o.angle=c;let u=0;a instanceof Shape&&(u=a.strokeWidth);const d=a.getDocumentScale(),m=a.naturalBounds,g=(m.width+u)*d,p=(m.height+u)*d;if(o.type!==Panel.Link){const w=o.category===\"Selection\"?Spot.TopLeft:o.locationSpot,x=a.getDocumentPoint(w,Point.a());o.location=x,Point.o(x)}if(!isNaN(g)&&!isNaN(p))r.Vn(g+h||0,p+f||0),this._n(-l.left,-l.top,r.width,r.height);else{const w=a.getDocumentPoint(Spot.TopLeft,Point.a()),x=Rect.K(w.x,w.y,0,0);x.unionPoint(a.getDocumentPoint(Spot.BottomRight,w)),x.unionPoint(a.getDocumentPoint(Spot.TopRight,w)),x.unionPoint(a.getDocumentPoint(Spot.BottomLeft,w)),r.Vn(x.width+h||0,x.height+f||0),this._n(-l.left,-l.top,r.width,r.height),Point.o(w),Rect.o(x)}}}yh(t,i,e,s){this.actualBounds.s(t,i,e,s)}computeBorder(t){const i=this.part,e=i.diagram,s=e===null||!e.animationManager.isAnimating;if(e!==null&&i instanceof Group&&!i.layer.isTemporary&&i.computesBoundsAfterDrag&&this.Hd.isReal()){const l=e.toolManager.findTool(\"Dragging\");if(l===e.currentTool){const h=l.computeBorder(i,this.Hd,t);if(h!==null)return h}}const n=Rect.a(),o=this.computeMemberBounds(n),r=this.ei;return i instanceof Group&&!i.isSubGraphExpanded?t.s(o.x-r.left,o.y-r.top,0,0):t.s(o.x-r.left,o.y-r.top,Math.max(o.width+r.left+r.right,0),Math.max(o.height+r.top+r.bottom,0)),Rect.o(n),s&&i instanceof Group&&i.computesBoundsIncludingLocation&&i.location.isReal()&&t.unionPoint(i.location),t}computeMemberBounds(t){if(!(this.part instanceof Group))return t.s(0,0,0,0),t;const i=this.part;let e=1/0,s=1/0,n=-1/0,o=-1/0;const r=i.memberParts;for(;r.next();){const l=r.value;if(!l.isVisible()||l instanceof Link&&(!i.computesBoundsIncludingLinks||l.Eo()||l.fromNode===i||l.toNode===i))continue;const h=l.actualBounds;h.left<e&&(e=h.left),h.top<s&&(s=h.top),h.right>n&&(n=h.right),h.bottom>o&&(o=h.bottom)}if(!isFinite(e)||!isFinite(s)){const l=i.location;t.s(l.x,l.y,0,0)}else t.s(e,s,n-e,o-s);return t}get padding(){return this.ei}set padding(t){typeof t==\"number\"?t=new Margin(t):U.e(t,Margin,Placeholder,\"padding\");const i=this.ei;i.equals(t)||(t=t.N(),this.ei=t,this.t(\"padding\",i,t),this.u())}}class Layout{C;wa;qd;Pr;Wd;jd;Ro;pl;vd;Jd;mo;constructor(t){GSet.Ji(this),this.C=null,this.wa=null,this.qd=!0,this.Pr=!0,this.Wd=!1,this.jd=new Point(0,0).p(),this.Ro=!0,this.pl=null,this.vd=null,this.Jd=!1,this.mo=null,t&&Object.assign(this,t)}cloneProtected(t){t.qd=this.qd,t.Pr=this.Pr,t.Wd=this.Wd,t.jd.c(this.jd),t.Ro=this.Ro,t.pl=this.pl,t.vd=this.vd,t.Jd=!0}copy(){const t=new this.constructor;return this.cloneProtected(t),t}ai(t){U.hr(this,t)}toString(){let t=U.Bn(this.constructor);return t+=\"(\",this.group!==null&&(t+=\" in \"+this.group),this.diagram!==null&&(t+=\" for \"+this.diagram),t+=\")\",t}get diagram(){return this.C}set diagram(t){Debug&&t!==null&&U.e(t,Diagram,Layout,\"diagram\"),this.C=t}get group(){return this.wa}set group(t){this.wa!==t&&(Debug&&t!==null&&U.e(t,Group,Layout,\"group\"),this.wa=t,t!==null&&(this.C=t.diagram))}get isOngoing(){return this.qd}set isOngoing(t){this.qd!==t&&(U.i(t,\"boolean\",Layout,\"isOngoing\"),this.qd=t)}get isInitial(){return this.Pr}set isInitial(t){U.i(t,\"boolean\",Layout,\"isInitial\"),this.Pr=t,t||(this.Jd=!0)}get isViewportSized(){return this.Wd}set isViewportSized(t){this.Wd!==t&&(U.i(t,\"boolean\",Layout,\"isViewportSized\"),this.Wd=t,t&&this.invalidateLayout())}get isRouting(){return this.Ro}set isRouting(t){this.Ro!==t&&(U.i(t,\"boolean\",Layout,\"isRouting\"),this.Ro=t)}get isRealtime(){return this.pl}set isRealtime(t){this.pl!==t&&(t!==null&&U.i(t,\"boolean\",Layout,\"isRealtime\"),this.pl=t)}get isValidLayout(){return this.Jd}set isValidLayout(t){if(this.Jd!==t&&(U.i(t,\"boolean\",Layout,\"isValidLayout\"),this.Jd=t,!t)){const i=this.diagram;i!==null&&(i.qr=!0)}}invalidateLayout(){if(this.isValidLayout){const t=this.diagram;if(t===null||t.undoManager.isUndoingRedoing)return;const i=t.animationManager;if(i.isTicking)return;i.defaultAnimation.isAnimating&&i.stopAnimation(),(this.isOngoing&&t.qh||this.isInitial&&!t.qh)&&(this.isValidLayout=!1,t.requestUpdate())}}get network(){return this.mo}set network(t){this.mo!==t&&(Debug&&t!==null&&U.e(t,LayoutNetwork,Layout,\"network\"),this.mo=t,t!==null&&(t.layout=this))}createNetwork(){return new LayoutNetwork(this)}makeNetwork(t){const i=this.createNetwork();return t instanceof Diagram?(i.addParts(t.nodes,!0),i.addParts(t.links,!0)):t instanceof Group?i.addParts(t.memberParts):i.addParts(t.iterator),i}updateParts(){this.isValidLayout=!0;let t=this.diagram;if(t===null&&this.network!==null){const i=this.network.vertexes.iterator;for(;i.next();){const s=i.value.node;if(s!==null&&(t=s.diagram,t!==null))break}}try{t!==null&&t.startTransaction(\"Layout\"),this.commitLayout()}finally{t!==null&&t.commitTransaction(\"Layout\")}}commitLayout(){if(this.network===null)return;const t=this.network.vertexes.iterator;for(;t.next();)t.value.commit();if(this.isRouting){const i=this.network.edges.iterator;for(;i.next();)i.value.commit()}}doLayout(t){Debug&&t===null&&U.n(\"Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts\");const i=new GSet;if(t instanceof Diagram?(this.Th(i,t.nodes,!0,this.ya,!0,!1,!0),this.Th(i,t.parts,!0,this.ya,!0,!1,!0)):t instanceof Group?this.Th(i,t.memberParts,!1,this.ya,!0,!1,!0):i.addAll(t.iterator),i.count>0){const s=this.diagram;s!==null&&s.startTransaction(\"Layout\"),this.doMinimalNoNetworkLayout(i),s!==null&&s.commitTransaction(\"Layout\")}this.isValidLayout=!0}doMinimalNoNetworkLayout(t){const i=t.count,e=Math.ceil(Math.sqrt(i));this.arrangementOrigin=this.initialOrigin(this.arrangementOrigin);const s=this.arrangementOrigin.x,n=this.arrangementOrigin.y;let o=s,r=n,l=0,h=0;const f=t.iterator;for(;f.next();){const a=f.value;a.ensureBounds();const c=a.measuredBounds,u=c.width,d=c.height;a.moveTo(o,r),a instanceof Group&&(a.ya=!1),o+=Math.max(u,50)+20,h=Math.max(h,Math.max(d,50)),l>=e-1?(l=0,o=s,r+=h+20,h=0):l++}}ya(t){return!!(!t.location.isReal()&&!t.position.isReal()||t instanceof Group&&t.ya)}Th(t,i,e,s,n,o,r){const l=i.iterator;for(;l.next();){const h=l.value;if(!(e&&!h.isTopLevel)&&!(s!==null&&!s(h))&&h.canLayout())if(n&&h instanceof Node){if(h.isLinkLabel)continue;h instanceof Group&&h.layout===null?this.Th(t,h.memberParts,!1,s,n,o,r):(h.ensureBounds(),t.add(h))}else o&&h instanceof Link?t.add(h):r&&h.Ce()&&!(h instanceof Node)&&(h.ensureBounds(),t.add(h))}}getLayoutBounds(t,i){const e=this.boundsComputation;return e!==null?(i||(i=new Rect),e(t,this,i)):!i&&t.margin.equalTo(0,0,0,0)?t.actualBounds:(i||(i=new Rect),i.set(t.actualBounds),i.addMargin(t.margin),i)}get boundsComputation(){return this.vd}set boundsComputation(t){this.vd!==t&&(t!==null&&U.P(t,Layout,\"boundsComputation\"),this.vd=t,this.invalidateLayout())}collectParts(t){const i=new GSet;return t instanceof Diagram?(this.Th(i,t.nodes,!0,null,!0,!0,!0),this.Th(i,t.links,!0,null,!0,!0,!0),this.Th(i,t.parts,!0,null,!0,!0,!0)):t instanceof Group?this.Th(i,t.memberParts,!1,null,!0,!0,!0):this.Th(i,t.iterator,!1,null,!0,!0,!0),i}get arrangementOrigin(){return this.jd}set arrangementOrigin(t){Debug&&U.e(t,Point,Layout,\"arrangementOrigin\"),this.jd.equals(t)||(this.jd.c(t),this.invalidateLayout())}initialOrigin(t){const i=this.group;if(i!==null)if(i.hasPlaceholder()){const e=i.placeholder,s=e.getDocumentPoint(Spot.TopLeft);(isNaN(s.x)||isNaN(s.y))&&s.set(t);const n=e.padding;return s.x+=n.left,s.y+=n.top,s}else{const e=i.position.copy();return(isNaN(e.x)||isNaN(e.y))&&e.set(t),e}return t}}class LayoutNetwork{oe;po;Cn;Ay;Ly;constructor(t){GSet.Ji(this),Debug&&!t&&U.n(\"LayoutNetwork constructor requires non-null Layout argument\"),this.oe=t,this.po=new GSet,this.Cn=new GSet,this.Ay=new GMap,this.Ly=new GMap}clear(){if(this.po){const t=this.po.iterator;for(;t.next();)t.value.clear()}if(this.Cn){const t=this.Cn.iterator;for(;t.next();)t.value.clear()}this.po=new GSet,this.Cn=new GSet,this.Ay=new GMap,this.Ly=new GMap}toString(t){t===void 0&&(t=0);let i=\"LayoutNetwork\"+(this.layout!==null?\"(\"+this.layout.toString()+\")\":\"\");if(t<=0)return i;if(i+=\" vertexes: \"+this.po.count+\" edges: \"+this.Cn.count,t>1){const e=this.po.iterator;for(;e.next();){const n=e.value;i+=`\n    `+n.toString(t-1)}const s=this.Cn.iterator;for(;s.next();){const n=s.value;i+=`\n    `+n.toString(t-1)}}return i}get layout(){return this.oe}set layout(t){t!==null&&(this.oe=t)}get vertexes(){return this.po}get edges(){return this.Cn}createVertex(){return new LayoutVertex(this)}createEdge(){return new LayoutEdge(this)}addParts(t,i,e){if(t===null)return;i===void 0&&(i=!1),U.i(i,\"boolean\",LayoutNetwork,\"addParts:toplevelonly\"),e===void 0&&(e=null),e===null&&(e=n=>{if(n instanceof Node)return!n.isLinkLabel;if(n instanceof Link){const o=n.fromNode;if(o===null||o.isLinkLabel)return!1;const r=n.toNode;return!(r===null||r.isLinkLabel)}return!1});const s=t.iterator;for(;s.next();){const n=s.value;if(n instanceof Node&&!(i&&!n.isTopLevel)&&n.canLayout()&&e(n))if(n instanceof Group&&n.layout===null)this.addParts(n.memberParts,!1);else{if(this.findVertex(n)!==null)continue;const o=this.createVertex();o.node=n,this.addVertex(o)}}for(s.reset();s.next();){const n=s.value;if(!(n instanceof Link)||i&&!n.isTopLevel||!n.canLayout()||!e(n)||this.findEdge(n)!==null)continue;const o=n.fromNode,r=n.toNode;if(o===null||r===null||o===r)continue;const l=this.findGroupVertex(o),h=this.findGroupVertex(r);this.linkVertexes(l,h,n)}}findGroupVertex(t){const i=t.findVisibleNode();if(i===null)return null;let e=this.findVertex(i);if(e!==null)return e;let s=i.containingGroup;for(;s!==null;){if(e=this.findVertex(s),e!==null)return e;s=s.containingGroup}return null}addVertex(t){Debug&&U.e(t,LayoutVertex,LayoutNetwork,\"addVertex:vertex\"),this.po.add(t);const i=t.node;i!==null&&this.Ay.set(i,t),t.network=this}addNode(t){Debug&&U.e(t,Node,LayoutNetwork,\"addNode:node\");let i=this.findVertex(t);return i===null&&(i=this.createVertex(),i.node=t,this.addVertex(i)),i}deleteVertex(t){if(Debug&&U.e(t,LayoutVertex,LayoutNetwork,\"deleteVertex:vertex\"),this.BT(t)){let i=t.Qo;for(let e=i.count-1;e>=0;e--){const s=i.elt(e);this.deleteEdge(s)}i=t._o;for(let e=i.count-1;e>=0;e--){const s=i.elt(e);this.deleteEdge(s)}}}BT(t){const i=this.po.delete(t);if(i){const e=t.node;e!==null&&this.Ay.delete(e)}return i}deleteNode(t){Debug&&U.e(t,Node,LayoutNetwork,\"deleteNode:node\");const i=this.findVertex(t);i!==null&&this.deleteVertex(i)}findVertex(t){return Debug&&U.e(t,Node,LayoutNetwork,\"findVertex:node\"),this.Ay.get(t)}addEdge(t){Debug&&U.e(t,LayoutEdge,LayoutNetwork,\"addEdge:edge\"),this.TN(t);const i=t.toVertex;i!==null&&i.addSourceEdge(t);const e=t.fromVertex;e!==null&&e.addDestinationEdge(t)}TN(t){this.Cn.add(t);const i=t.link;i!==null&&this.findEdge(i)===null&&this.Ly.set(i,t),t.network=this}addLink(t){Debug&&U.e(t,Link,LayoutNetwork,\"addLink:link\");const i=t.fromNode,e=t.toNode;let s=this.findEdge(t);return s===null?(s=this.createEdge(),s.link=t,i!==null&&(s.fromVertex=this.addNode(i)),e!==null&&(s.toVertex=this.addNode(e)),this.addEdge(s)):(i!==null?s.fromVertex=this.addNode(i):s.fromVertex=null,e!==null?s.toVertex=this.addNode(e):s.toVertex=null),s}deleteEdge(t){Debug&&U.e(t,LayoutEdge,LayoutNetwork,\"deleteEdge:edge\");const i=t.toVertex;i!==null&&i.deleteSourceEdge(t);const e=t.fromVertex;e!==null&&e.deleteDestinationEdge(t),this.DN(t)}DN(t){const i=this.Cn.delete(t);if(i){const e=t.link;e!==null&&this.Ly.delete(e)}return i}deleteLink(t){Debug&&U.e(t,Link,LayoutNetwork,\"deleteLink:link\");const i=this.findEdge(t);i!==null&&this.deleteEdge(i)}findEdge(t){return Debug&&U.e(t,Link,LayoutNetwork,\"findEdge:link\"),this.Ly.get(t)}linkVertexes(t,i,e){if(t===null||i===null)return null;if(Debug&&(U.e(t,LayoutVertex,LayoutNetwork,\"linkVertexes:fromVertex\"),U.e(i,LayoutVertex,LayoutNetwork,\"linkVertexes:toVertex\"),e!==null&&U.e(e,Link,LayoutNetwork,\"linkVertexes:link\")),t.network===this&&i.network===this){const s=this.createEdge();return s.link=e,s.fromVertex=t,s.toVertex=i,this.addEdge(s),s}return null}reverseEdge(t){Debug&&U.e(t,LayoutEdge,LayoutNetwork,\"reverseEdge:edge\");const i=t.fromVertex,e=t.toVertex;i===null||e===null||(i.deleteDestinationEdge(t),e.deleteSourceEdge(t),t.reverseEdge(),i.addSourceEdge(t),e.addDestinationEdge(t))}deleteSelfEdges(){const t=U.lt(),i=this.Cn.iterator;for(;i.next();){const s=i.value;s.fromVertex===s.toVertex&&t.push(s)}const e=t.length;for(let s=0;s<e;s++)this.deleteEdge(t[s]);U.tt(t)}deleteArtificialVertexes(){const t=U.lt(),i=this.po.iterator;for(;i.next();){const o=i.value;o.node===null&&o.data===null&&t.push(o)}let e=t.length;for(let o=0;o<e;o++)this.deleteVertex(t[o]);const s=U.lt(),n=this.Cn.iterator;for(;n.next();){const o=n.value;o.link===null&&o.data===null&&s.push(o)}e=s.length;for(let o=0;o<e;o++)this.deleteEdge(s[o]);U.tt(t),U.tt(s)}deleteUselessEdges(){const t=U.lt(),i=this.Cn.iterator;for(;i.next();){const s=i.value;(s.fromVertex===null||s.toVertex===null)&&t.push(s)}const e=t.length;for(let s=0;s<e;s++)this.deleteEdge(t[s]);U.tt(t)}isSingleton(t){return!(t.Qo.count>0||t._o.count>0)}splitIntoSubNetworks(t){t===void 0&&(t=!0),t&&(this.deleteArtificialVertexes(),this.deleteUselessEdges(),this.deleteSelfEdges());const i=new List;let e=!0;for(;e;){e=!1;const s=this.po.iterator;for(;s.next();){const n=s.value;if(this.isSingleton(n))continue;const o=this.layout.createNetwork();i.add(o),this.jO(o,n),e=!0;break}}return i.sort((s,n)=>s===null||n===null||s===n?0:n.vertexes.count-s.vertexes.count),i}jO(t,i){if(i===null)return;const e=new List;for(e.add(i);e.count>0;){const s=e.first();if(e.removeAt(0),!s||s.network===t)continue;this.BT(s),t.addVertex(s);let n=s.sourceEdges;for(;n.next();){const o=n.value;o.network!==t&&(this.DN(o),t.TN(o),o.fromVertex&&e.add(o.fromVertex))}for(n=s.destinationEdges;n.next();){const o=n.value;o.network!==t&&(this.DN(o),t.TN(o),o.toVertex&&e.add(o.toVertex))}}}findAllParts(){const t=new GSet,i=this.po.iterator;for(;i.next();){const s=i.value;s.node&&t.add(s.node)}const e=this.Cn.iterator;for(;e.next();){const s=e.value;s.link&&t.add(s.link)}return t}}class LayoutVertex{mo;ni;Te;Ie;$e;Qo;_o;constructor(t){GSet.Ji(this),Debug&&!t&&U.n(\"LayoutVertex constructor requires non-null LayoutNetwork argument\"),this.mo=t,this.Ie=new Rect(0,0,10,10).p(),this.$e=new Point(5,5).p(),this.ni=null,this.Te=null,this.Qo=new List,this._o=new List}clear(){this.ni=null,this.Te=null,this.Qo=new List,this._o=new List}toString(t){t===void 0&&(t=0);let i=\"LayoutVertex#\"+GSet.gs(this);if(t>0&&(i+=this.node!==null?\"(\"+this.node.toString()+\")\":\"\",t>1)){let e=\"\",s=!0,n=this.Qo.iterator;for(;n.next();){const r=n.value;s?s=!1:e+=\",\",e+=r.toString(0)}let o=\"\";for(s=!0,n=this._o.iterator;n.next();){const r=n.value;s?s=!1:o+=\",\",o+=r.toString(0)}i+=\" sources: \"+e+\" destinations: \"+o}return i}get yo(){return this.Qo.yC}get tr(){return this._o.yC}get data(){return this.ni}set data(t){if(this.ni=t,t!==null&&t.bounds){const i=t.bounds,e=i.x,s=i.y,n=i.width,o=i.height;this.$e.s(n/2,o/2),this.Ie.s(e,s,n,o)}}get node(){return this.Te}set node(t){if(this.Te!==t){if(Debug&&t!==null&&U.e(t,Node,LayoutVertex,\"node\"),this.Te=t,t===null)return;t.ensureBounds();const i=this.network.layout,e=Rect.a(),s=i.getLayoutBounds(t,e);let n=s.x,o=s.y;const r=s.width,l=s.height;if(isNaN(n)&&(n=0),isNaN(o)&&(o=0),this.Ie.s(n,o,r,l),Rect.o(e),!(t instanceof Group)){const h=t.locationObject.getDocumentPoint(Spot.Center);if(h.isReal()){this.$e.s(h.x-n,h.y-o);return}}this.$e.s(r/2,l/2)}}get bounds(){return this.Ie}set bounds(t){this.Ie.equals(t)||(Debug&&U.e(t,Rect,LayoutVertex,\"bounds\"),this.Ie.c(t))}get focus(){return this.$e}set focus(t){this.$e.equals(t)||(Debug&&U.e(t,Point,LayoutVertex,\"focus\"),this.$e.c(t))}get centerX(){return this.Ie.x+this.$e.x}set centerX(t){const i=this.Ie;i.x+this.$e.x!==t&&(Debug&&U.r(t,LayoutVertex,\"centerX\"),i.At(),i.x=t-this.$e.x,i.p())}get centerY(){return this.Ie.y+this.$e.y}set centerY(t){const i=this.Ie;i.y+this.$e.y!==t&&(Debug&&U.r(t,LayoutVertex,\"centerY\"),i.At(),i.y=t-this.$e.y,i.p())}get focusX(){return this.$e.x}set focusX(t){const i=this.$e;i.x!==t&&(i.At(),i.x=t,i.p())}get focusY(){return this.$e.y}set focusY(t){const i=this.$e;i.y!==t&&(i.At(),i.y=t,i.p())}get x(){return this.Ie.x}set x(t){const i=this.Ie;i.x!==t&&(i.At(),i.x=t,i.p())}get y(){return this.Ie.y}set y(t){const i=this.Ie;i.y!==t&&(i.At(),i.y=t,i.p())}get width(){return this.Ie.width}set width(t){const i=this.Ie;i.width!==t&&(i.At(),i.width=t,i.p())}get height(){return this.Ie.height}set height(t){const i=this.Ie;i.height!==t&&(i.At(),i.height=t,i.p())}commit(){const t=this.ni;if(t!==null){const e=this.bounds,s=t.bounds;U.W(s)?(s.x=e.x,s.y=e.y,s.width=e.width,s.height=e.height):t.bounds=e.copy();return}const i=this.node;if(i!==null){const e=this.bounds;if(!(i instanceof Group)){const s=Rect.a();i.ensureBounds();const n=this.network.layout.getLayoutBounds(i,s),o=i.locationObject.getDocumentPoint(Spot.Center);if(n.isReal()&&o.isReal()){i.moveTo(e.x+this.focusX-(o.x-n.x)+i.margin.left,e.y+this.focusY-(o.y-n.y+i.margin.top)),Rect.o(s);return}Rect.o(s)}i.moveTo(e.x+i.margin.left,e.y+i.margin.top)}}addSourceEdge(t){t!==null&&(Debug&&U.e(t,LayoutEdge,LayoutVertex,\"addSourceEdge:edge\"),this.Qo.has(t)||this.Qo.add(t))}deleteSourceEdge(t){t!==null&&(Debug&&U.e(t,LayoutEdge,LayoutVertex,\"deleteSourceEdge:edge\"),this.Qo.delete(t))}addDestinationEdge(t){t!==null&&(Debug&&U.e(t,LayoutEdge,LayoutVertex,\"addDestinationEdge:edge\"),this._o.has(t)||this._o.add(t))}deleteDestinationEdge(t){t!==null&&(Debug&&U.e(t,LayoutEdge,LayoutVertex,\"deleteDestinationEdge:edge\"),this._o.delete(t))}get network(){return this.mo}set network(t){Debug&&U.e(t,LayoutNetwork,LayoutVertex,\"network\"),this.mo=t}get sourceVertexes(){const t=new GSet,i=this.sourceEdges;for(;i.next();){const e=i.value;e.fromVertex&&t.add(e.fromVertex)}return t.iterator}get destinationVertexes(){const t=new GSet,i=this.destinationEdges;for(;i.next();){const e=i.value;e.toVertex&&t.add(e.toVertex)}return t.iterator}get vertexes(){const t=new GSet;let i=this.sourceEdges;for(;i.next();){const e=i.value;e.fromVertex&&t.add(e.fromVertex)}for(i=this.destinationEdges;i.next();){const e=i.value;e.toVertex&&t.add(e.toVertex)}return t.iterator}get sourceEdges(){return this.Qo.iterator}get destinationEdges(){return this._o.iterator}get edges(){const t=new List;let i=this.sourceEdges;for(;i.next();){const e=i.value;t.add(e)}for(i=this.destinationEdges;i.next();){const e=i.value;t.add(e)}return t.iterator}get edgesCount(){return this.Qo.count+this._o.count}static standardComparer(t,i){Debug&&U.e(t,LayoutVertex,LayoutVertex,\"standardComparer:m\"),Debug&&U.e(i,LayoutVertex,LayoutVertex,\"standardComparer:n\");const e=t.Te,s=i.Te;if(e)if(s){const n=e.text,o=s.text;return n<o?-1:n>o?1:0}else return 1;else return s!==null?-1:0}static smartComparer(t,i){if(Debug&&U.e(t,LayoutVertex,LayoutVertex,\"smartComparer:m\"),Debug&&U.e(i,LayoutVertex,LayoutVertex,\"smartComparer:n\"),t!==null)if(i!==null){const e=t.Te,s=i.Te;if(e!==null)if(s!==null){const n=e.text.toLocaleLowerCase(),o=s.text.toLocaleLowerCase(),r=n.split(/([+-]?[.]?\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)/),l=o.split(/([+-]?[.]?\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)/);let h=0;for(;h<r.length;h++)if(l[h]!==\"\"&&l[h]!==void 0){const f=parseFloat(r[h]),a=parseFloat(l[h]);if(isNaN(f))if(isNaN(a)){if(r[h].localeCompare(l[h])!==0)return r[h].localeCompare(l[h]);continue}else return 1;else{if(isNaN(a))return-1;if(f-a!==0)return f-a;continue}}else{if(r[h]===\"\")continue;return 1}return l[h]!==\"\"&&l[h]!==void 0?-1:0}else return 1;else return s!==null?-1:0}else return 1;else return i!==null?-1:0}}class LayoutEdge{mo;ni;Je;Ze;Qe;constructor(t){GSet.Ji(this),Debug&&!t&&U.n(\"LayoutEdge constructor requires non-null LayoutNetwork argument\"),this.mo=t,this.ni=null,this.Je=null,this.Ze=null,this.Qe=null}clear(){this.ni=null,this.Je=null,this.Ze=null,this.Qe=null}toString(t){t===void 0&&(t=0);let i=\"LayoutEdge#\"+GSet.gs(this);return t>0&&(i+=this.Je!==null?\"(\"+this.Je.toString()+\")\":\"\",t>1&&(i+=\" \"+(this.Ze?this.Ze.toString():\"null\")+\" --> \"+(this.Qe?this.Qe.toString():\"null\"))),i}reverseEdge(){const t=this.Ze;this.Ze=this.Qe,this.Qe=t}commit(){}getOtherVertex(t){return Debug&&U.e(t,LayoutVertex,LayoutEdge,\"getOtherVertex:v\"),this.Qe===t?this.Ze:this.Ze===t?this.Qe:null}get network(){return this.mo}set network(t){Debug&&U.e(t,LayoutNetwork,LayoutEdge,\"network\"),this.mo=t}get data(){return this.ni}set data(t){this.ni!==t&&(Debug&&t!==null&&U.Mo(t,LayoutEdge,\"data\"),this.ni=t)}get link(){return this.Je}set link(t){this.Je!==t&&(Debug&&t!==null&&U.e(t,Link,LayoutEdge,\"link\"),this.Je=t)}get fromVertex(){return this.Ze}set fromVertex(t){this.Ze!==t&&(Debug&&t!==null&&U.e(t,LayoutVertex,LayoutEdge,\"fromVertex\"),this.Ze=t)}get toVertex(){return this.Qe}set toVertex(t){this.Qe!==t&&(Debug&&t!==null&&U.e(t,LayoutVertex,LayoutEdge,\"toVertex\"),this.Qe=t)}}var GridAlignment=(y=>(y[y.Position=0]=\"Position\",y[y.Location=1]=\"Location\",y))(GridAlignment||{}),GridArrangement=(y=>(y[y.LeftToRight=10]=\"LeftToRight\",y[y.RightToLeft=11]=\"RightToLeft\",y))(GridArrangement||{}),GridSorting=(y=>(y[y.Forwards=20]=\"Forwards\",y[y.Reverse=21]=\"Reverse\",y[y.Ascending=22]=\"Ascending\",y[y.Descending=23]=\"Descending\",y))(GridSorting||{});class GridLayout extends Layout{$d;Zd;Lo;An;ui;Wi;be;ke;constructor(t){super(),this.isViewportSized=!0,this.$d=NaN,this.Zd=NaN,this.Lo=new Size(NaN,NaN).p(),this.An=new Size(10,10).p(),this.ui=1,this.Wi=10,this.be=22,this.ke=GridLayout.standardComparer,t&&Object.assign(this,t)}cloneProtected(t){super.cloneProtected(t),t.$d=this.$d,t.Zd=this.Zd,t.Lo.c(this.Lo),t.An.c(this.An),t.ui=this.ui,t.Wi=this.Wi,t.be=this.be,t.ke=this.ke}ai(t){t in GridSorting?this.sorting=t:t in GridArrangement?this.arrangement=t:t in GridAlignment?this.alignment=t:super.ai(t)}doLayout(t){Debug&&t===null&&U.n(\"Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts\"),this.arrangementOrigin=this.initialOrigin(this.arrangementOrigin);const i=this.collectParts(t),e=this.diagram,n=i.copy().iterator;for(;n.next();){const m=n.value;if(m.Fl()&&(m.fromNode!==null||m.toNode!==null)){i.delete(m);continue}if(m.ensureBounds(),m instanceof Group){const g=m.memberParts;for(;g.next();){const p=g.value;i.delete(p)}}}const o=i.toArray();if(o.length===0)return;switch(this.sorting){case 20:break;case 21:o.reverse();break;case 22:o.sort(this.comparer);break;case 23:o.sort(this.comparer),o.reverse();break}let r=this.wrappingColumn;isNaN(r)&&(r=0);let l=this.wrappingWidth;if(isNaN(l)&&e!==null){const m=e.viewportBounds,g=e.padding;l=Math.max(m.width-g.left-g.right,0)}else l=Math.max(this.wrappingWidth,0);r<=0&&l<=0&&(r=1);let h=this.spacing.width;isFinite(h)||(h=0);let f=this.spacing.height;isFinite(f)||(f=0),e!==null&&e.startTransaction(\"Layout\");const a=[];switch(this.alignment){case 0:this.vO(o,l,r,h,f,a);break;case 1:this.JO(o,l,r,h,f,a);break}let c=0,u=0,d=0;for(let m=0;m<a.length;m++){const g=a[m];c=Math.min(c,g.x),u=Math.min(u,g.y),d=Math.max(d,g.x+g.width)}this.arrangement===11?this.commitLayers(a,new Point(c+h/2-(d+c),u-f/2)):this.commitLayers(a,new Point(c-h/2,u-f/2)),e!==null&&e.commitTransaction(\"Layout\"),this.isValidLayout=!0}vO(t,i,e,s,n,o){const r=Rect.a();let l=Math.max(this.cellSize.width,1);if(!isFinite(l)){l=0;for(let p=0;p<t.length;p++){const w=t[p],x=this.getLayoutBounds(w,r);l=Math.max(l,x.width)}}l+=s,l=Math.max(l,1);let h=Math.max(this.cellSize.height,1);if(!isFinite(h)){h=0;for(let p=0;p<t.length;p++){const w=t[p],x=this.getLayoutBounds(w,r);h=Math.max(h,x.height)}}h+=n,h=Math.max(h,1);const f=this.arrangement,a=this.arrangementOrigin.x,c=this.arrangementOrigin.y;let u=a,d=c,m=0,g=0;for(let p=0;p<t.length;p++){const w=t[p],x=this.getLayoutBounds(w,r),k=Math.ceil((x.width+s)/l),b=Math.ceil((x.height+n)/h),S=k*l,M=b*h;let A=0;switch(f){case 11:A=Math.abs(u-x.width);break;default:A=u+x.width;break}(e>0&&m>e-1||i>0&&m>0&&A-a>i)&&(o.push(new Rect(0,d,i+s,g)),m=0,u=a,d+=g,g=0),g=Math.max(g,M);let C=0;switch(f){case 11:C=-x.width;break;default:C=0;break}switch(w.moveTo(u+C+w.margin.left,d+w.margin.top),f){case 11:u-=S;break;default:u+=S;break}m++}o.push(new Rect(0,d,i+s,g)),Rect.o(r)}JO(t,i,e,s,n,o){const r=Rect.a();let l=Math.max(this.cellSize.width,1),h=0,f=0,a=0;const c=Point.a();for(let C=0;C<t.length;C++){const P=t[C],N=this.getLayoutBounds(P,r),T=P.getRelativePoint(P.locationObject,P.locationSpot,c);h=Math.max(h,T.x),f=Math.max(f,N.width-T.x),a=Math.max(a,T.y)}const u=this.arrangement;switch(u){case 11:h+=s;break;default:f+=s;break}isFinite(l)?l=Math.max(l+s,1):l=Math.max(h+f,1);const d=this.arrangementOrigin.x,m=this.arrangementOrigin.y;let g=d,p=m,w=0;i>=h&&(i-=h);let x=0,k=0;const b=Math.max(this.cellSize.height,1);a=0;let S=0,M=!0;const A=Point.a();for(let C=0;C<t.length;C++){const P=t[C],N=this.getLayoutBounds(P,r),T=P.getRelativePoint(P.locationObject,P.locationSpot,c);if(w>0)switch(u){case 11:{let D=(g-d-(N.width-T.x))/l;Geo.G(Math.round(D),D)?D=Math.round(D):D=Math.floor(D),g=D*l+d;break}default:{let D=(g-d+T.x)/l;Geo.G(Math.round(D),D)?D=Math.round(D):D=Math.ceil(D),g=D*l+d;break}}else switch(u){case 11:x=g+T.x+N.width;break;default:x=g-T.x;break}let L=0;switch(u){case 11:L=-(g+T.x)+x;break;default:L=g+N.width-T.x-x;break}if(e>0&&w>e-1||i>0&&w>0&&L>i){o.push(new Rect(0,M?p-a:p,i+s,S+a+n));for(let D=0;D<w&&C!==w;D++){const F=t[C-w+D],I=F.getRelativePoint(F.locationObject,F.locationSpot,A);F.moveTo(F.position.x,F.position.y+a-I.y)}S+=n,M?p+=S:p+=S+a,a=0,S=0,w=0,g=d,M=!1}switch(g===d&&(u===11?k=Math.max(k,N.width-T.x):k=Math.min(k,-T.x)),a=Math.max(a,T.y),S=Math.max(S,N.height-T.y),isFinite(b)&&(S=Math.max(S,Math.max(N.height,b)-T.y)),M?P.moveTo(g-T.x,p-T.y):P.moveTo(g-T.x,p),u){case 11:g-=T.x+s;break;default:g+=N.width-T.x+s;break}w++}if(o.push(new Rect(0,p,i+s,(M?S:S+a)+n)),t.length!==w)for(let C=0;C<w;C++){const P=t[t.length-w+C],N=P.getRelativePoint(P.locationObject,P.locationSpot,c);P.moveTo(P.position.x,P.position.y+a-N.y)}if(Point.o(c),Point.o(A),u===11)for(let C=0;C<o.length;C++){const P=o[C];P.width+=k,P.x-=k}else for(let C=0;C<o.length;C++){const P=o[C];P.x>k&&(P.width+=P.x-k,P.x=k)}Rect.o(r)}commitLayers(t,i){}get wrappingWidth(){return this.$d}set wrappingWidth(t){this.$d!==t&&(U.i(t,\"number\",GridLayout,\"wrappingWidth\"),(t>0||isNaN(t))&&(this.$d=t,this.isViewportSized=isNaN(t),this.invalidateLayout()))}get wrappingColumn(){return this.Zd}set wrappingColumn(t){this.Zd!==t&&(U.i(t,\"number\",GridLayout,\"wrappingColumn\"),(t>0||isNaN(t))&&(this.Zd=t,this.invalidateLayout()))}get cellSize(){return this.Lo}set cellSize(t){U.e(t,Size,GridLayout,\"cellSize\"),this.Lo.equals(t)||(this.Lo.c(t),this.invalidateLayout())}get spacing(){return this.An}set spacing(t){U.e(t,Size,GridLayout,\"spacing\"),this.An.equals(t)||(this.An.c(t),this.invalidateLayout())}get alignment(){return this.ui}set alignment(t){this.ui!==t&&(U.j(t,GridAlignment,\"GridAlignment\"),(t===1||t===0)&&(this.ui=t,this.invalidateLayout()))}get arrangement(){return this.Wi}set arrangement(t){this.Wi!==t&&(U.j(t,GridArrangement,\"GridArrangement\"),(t===10||t===11)&&(this.Wi=t,this.invalidateLayout()))}get sorting(){return this.be}set sorting(t){this.be!==t&&(U.j(t,GridSorting,\"GridSorting\"),(t===20||t===21||t===22||t===23)&&(this.be=t,this.invalidateLayout()))}get comparer(){return this.ke}set comparer(t){this.ke!==t&&(U.P(t,GridLayout,\"comparer\"),this.ke=t,this.invalidateLayout())}static standardComparer(t,i){Debug&&U.e(t,Part,GridLayout,\"standardComparer:a\"),Debug&&U.e(i,Part,GridLayout,\"standardComparer:b\");const e=t.text,s=i.text;return e<s?-1:e>s?1:0}static smartComparer(t,i){if(Debug&&U.e(t,Part,GridLayout,\"standardComparer:a\"),Debug&&U.e(i,Part,GridLayout,\"standardComparer:b\"),t!==null)if(i!==null){const e=t.text.toLocaleLowerCase(),s=i.text.toLocaleLowerCase(),n=e.split(/([+-]?[.]?\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)/),o=s.split(/([+-]?[.]?\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)/);let r=0;for(;r<n.length;r++)if(o[r]!==\"\"&&o[r]!==void 0){const l=parseFloat(n[r]),h=parseFloat(o[r]);if(isNaN(l))if(isNaN(h)){if(n[r].localeCompare(o[r])!==0)return n[r].localeCompare(o[r]);continue}else return 1;else{if(isNaN(h))return-1;if(l-h!==0)return l-h;continue}}else{if(n[r]===\"\")continue;return 1}return o[r]!==\"\"&&o[r]!==void 0?-1:0}else return 1;else return i!==null?-1:0}static Position=0;static Location=1;static LeftToRight=10;static RightToLeft=11;static Forward=20;static Reverse=21;static Ascending=22;static Descending=23}class PartManager{Qd;Zs;Ft;wo;_d;tg;C;FN;constructor(){this.Qd=new GSet,this.Zs=new GSet,this.Ft=new GSet,this.wo=new GMap,this._d=new GMap,this.tg=new GMap,this.C=null,this.FN=!1}clear(){this.Qd.clear(),this.Zs.clear(),this.Ft.clear(),this.wo.clear(),this._d.clear(),this.tg.clear()}Do(t){Debug&&t!==null&&U.e(t,Diagram,PartManager,\"setDiagram\"),this.C=t}ia(t){if(t instanceof Node){if(this.Qd.add(t),t instanceof Group){const e=t.containingGroup;e===null?this.diagram.Wr.add(t):e.pa.add(t);const s=t.layout;s!==null&&(s.diagram=this.diagram)}}else t instanceof Link?(this.Zs.add(t),t.isAvoiding&&(this.diagram.qm=!0)):t instanceof Adornment||this.Ft.add(t);const i=t.data;i!==null&&(t instanceof Adornment||(t instanceof Link?this.VT(i,t):this.wo.set(i,t)))}ne(t){if(t.clearAdornments(),t instanceof Node){if(this.Qd.delete(t),t instanceof Group){const e=t.containingGroup;e===null?this.diagram.Wr.delete(t):e.pa.delete(t);const s=t.layout;s!==null&&(s.diagram=null)}}else t instanceof Link?this.Zs.delete(t):t instanceof Adornment||this.Ft.delete(t);const i=t.data;i!==null&&(t instanceof Adornment||(t instanceof Link?this.zT(i,t):this.wo.delete(i)))}VT(t,i){this._d.set(t,i)}zT(t,i){this._d.delete(t)}rebuildParts(){const t=this.diagram;if(t===null)return;const i=t.nodeTemplateMap.iterator;for(;i.next();){const u=i.value,d=i.key;(!u.Ce()||u instanceof Group)&&U.n(`Invalid node template in Diagram.nodeTemplateMap: template for \"${d}\" must be a Node or a simple Part, not a Group or Link: ${u}`)}const e=t.groupTemplateMap.iterator;for(;e.next();){const u=e.value,d=e.key;u instanceof Group||U.n(`Invalid group template in Diagram.groupTemplateMap: template for \"${d}\" must be a Group, not a normal Node or Link: ${u}`)}const s=t.linkTemplateMap.iterator;for(;s.next();){const u=s.value,d=s.key;u instanceof Link||U.n(`Invalid link template in Diagram.linkTemplateMap: template for \"${d}\" must be a Link, not a normal Node or simple Part: ${u}`)}const n=U.lt(),o=t.selection.iterator;for(;o.next();){const d=o.value.data;d&&n.push(d)}const r=U.lt(),l=t.highlighteds.iterator;for(;l.next();){const d=l.value.data;d&&r.push(d)}const h=U.lt(),f=this.nodes.iterator;for(;f.next();){const u=f.value;u.data!==null&&(h.push(u.data),h.push(u.location))}const a=this.links.iterator;for(;a.next();){const u=a.value;u.data!==null&&(h.push(u.data),h.push(u.location))}const c=this.parts.iterator;for(;c.next();){const u=c.value;u.data!==null&&(h.push(u.data),h.push(u.location))}this.XT(),this.Z2();for(let u=0;u<n.length;u++){const d=this.findPartForData(n[u]);d!==null&&(d.isSelected=!0)}for(let u=0;u<r.length;u++){const d=this.findPartForData(r[u]);d!==null&&(d.isHighlighted=!0)}for(let u=0;u<h.length;u+=2){const d=this.findPartForData(h[u]);d!==null&&(d.location=h[u+1])}U.tt(n),U.tt(r),U.tt(h)}Z2(){const t=this.diagram.model;this.Ty(t.nodeDataArray)}Ty(t,i){const e=this.diagram.model;t.forEach(s=>{e.containsNodeData(s)&&this.YT(s,!1)}),t.forEach(s=>{e.containsNodeData(s)&&this.Kb(s)}),i!==!1&&this.diagram.z1(!1)}YT(t,i){if(t==null||this.diagram.undoManager.isUndoingRedoing||this.wo.has(t))return null;i===void 0&&(i=!0);const e=this.$O(t);return e!==null&&i&&this.Kb(t),e}$O(t){if(t==null||this.diagram.undoManager.isUndoingRedoing||this.wo.has(t))return null;const i=this.ZO(t),e=this.findTemplateForNodeData(t,i);if(e!==null){e.Kt();const s=e.copy();if(s!==null){const n=this.diagram.me;return this.diagram.me=!0,s.Wo=i,s.ni=t,this.addsToTemporaryLayer&&(s.fl=\"Tool\"),this.diagram.add(s),s.ni=null,s.data=t,this.diagram.me=n,s}}return null}insertLink(t,i,e,s){return null}Kb(t){}ZO(t){return this.diagram.model.getCategoryForNodeData(t)}static KT=!1;static UT=!1;findTemplateForNodeData(t,i){const e=this.diagram,s=e.model,n=s.xa()&&s.isGroupForData(t);let o=null;return n?(o=e.groupTemplateMap.get(i),o===null&&(o=e.groupTemplateMap.get(\"\"),o===null&&(PartManager.UT||(PartManager.UT=!0,U.nt('No Group template found for category \"'+i+'\"'),U.nt(\"  Using default group template\")),o=e.L2))):(o=e.nodeTemplateMap.get(i),o===null&&(o=e.nodeTemplateMap.get(\"\"),o===null&&(PartManager.KT||(PartManager.KT=!0,U.nt('No Node template found for category \"'+i+'\"'),U.nt(\"  Using default node template\")),o=e.N2))),o}getLinkCategoryForData(t){return\"\"}setLinkCategoryForData(t,i){}setFromNodeForLink(t,i,e){}setToNodeForLink(t,i,e){}static GT=!1;findLinkTemplateForCategory(t){const i=this.diagram;let e=i.linkTemplateMap.get(t);return e===null&&(e=i.linkTemplateMap.get(\"\"),e===null&&(PartManager.GT||(PartManager.GT=!0,U.nt('No Link template found for category \"'+t+'\"'),U.nt(\"  Using default link template\")),e=i.C2)),e}YI(t,i,e){t instanceof Link?(i!==null&&this.zT(i,t),e!==null&&this.VT(e,t)):t instanceof Part&&(i!==null&&this.wo.delete(i),e!==null&&this.wo.set(e,t))}XT(){const t=this.diagram.model;this.RN(t.nodeDataArray)}RN(t){t.forEach(i=>{this.Ub(i)})}Ub(t){const i=this.findPartForData(t);i!==null&&(this.diagram.v2(i,!1),this.IN(i))}IN(t){}MN(t){}findPartForKey(t){if(t==null)return null;const e=this.diagram.model.findNodeDataForKey(t);return e!==null?this.wo.get(e):null}findNodeForKey(t){if(t==null)return null;const e=this.diagram.model.findNodeDataForKey(t);if(e===null)return null;const s=this.wo.get(e);return s instanceof Node?s:null}findLinkForKey(t){return null}findPartForData(t){if(t===null)return null;let i=this.wo.get(t);return i!==null||(i=this._d.get(t)),i}findNodeForData(t){if(t===null)return null;const i=this.wo.get(t);return i instanceof Node?i:null}findLinkForData(t,i){return t===null?null:this._d.get(t)}findNodesByExample(...t){const i=new GSet,e=this.Qd.iterator;for(;e.next();){const s=e.value,n=s.data;if(n!==null)for(let o=0;o<arguments.length;o++){const r=arguments[o];if(U.W(r)&&this.ON(n,r)){i.add(s);break}}}return i.iterator}findLinksByExample(...t){const i=new GSet,e=this.Zs.iterator;for(;e.next();){const s=e.value,n=s.data;if(n!==null)for(let o=0;o<arguments.length;o++){const r=arguments[o];if(U.W(r)&&this.ON(n,r)){i.add(s);break}}}return i.iterator}ON(t,i){for(const e in i){const s=t[e],n=i[e];if(Array.isArray(n)){if(!Array.isArray(s))return!1;const o=s,r=n;if(o.length<r.length)return!1;for(let l=0;l<o.length;l++){const h=o[l],f=r[l];if(f!==void 0&&!this.HT(h,f))return!1}}else if(!this.HT(s,n))return!1}return!0}HT(t,i){if(U.rt(i)){if(!i(t))return!1}else if(i instanceof RegExp){if(!t||!i.test(t.toString()))return!1}else if(U.W(t)&&U.W(i)){if(!this.ON(t,i))return!1}else if(t!==i)return!1;return!0}doModelDataChanged(t){if(t.model===this.diagram.model&&this.diagram.H){this.diagram.H=!1;try{const i=t.change;t.modelChange===\"\"&&t.object!==null&&i===2&&this.Dy(t.object,t.propertyName)}finally{this.diagram.H=!0}}}doModelChanged(t){const i=this.diagram;if(!i||t.model!==i.model)return;const e=t.change;if(i.UR(t),!!i.H){i.H=!1;try{const s=t.modelChange;if(s!==\"\")if(e===2){if(s===\"nodeCategory\"){const n=t.object;if(n!==null){const o=this.findPartForData(n),r=t.newValue;o!==null&&typeof r==\"string\"&&(o.category=r)}}else if(s===\"nodeDataArray\"){const n=t.oldValue;this.RN(n);const o=t.newValue;this.Ty(o)}i.isModified=!0}else if(e===3){const n=t.newValue;s===\"nodeDataArray\"&&U.W(n)&&this.YT(n),i.isModified=!0}else if(e===4){const n=t.oldValue;s===\"nodeDataArray\"&&U.W(n)&&this.Ub(n),i.isModified=!0}else e===1&&(s===\"SourceChanged\"?t.object!==null?this.Dy(t.object,t.propertyName):(this.updateAllRelationshipsFromData(),this.updateAllTargetBindings()):s===\"ModelDisplaced\"&&this.rebuildParts());else if(e===2){const n=t.propertyName,o=t.object,r=i.model;o===r?(n===\"nodeKeyProperty\"||n===\"nodeCategoryProperty\")&&(i.undoManager.isUndoingRedoing||this.rebuildParts()):o!==null&&this.Dy(o,n),i.isModified=!0}else(e===3||e===4)&&(this.QO(t,i.model),i.isModified=!0)}finally{i.H=!0}}}updateAllTargetBindings(t){t===void 0&&(t=\"\");let i=this.parts.iterator;for(;i.next();)i.value.updateTargetBindings(t);for(i=this.nodes.iterator;i.next();)i.value.updateTargetBindings(t);for(i=this.links.iterator;i.next();)i.value.updateTargetBindings(t)}updateAllThemeBindings(){let t=this.parts.iterator;for(;t.next();)t.value.Bo();for(t=this.nodes.iterator;t.next();)t.value.Bo();for(t=this.links.iterator;t.next();)t.value.Bo()}updateAllRelationshipsFromData(){const t=this.diagram.model,i=new GSet,e=t.nodeDataArray;for(let o=0;o<e.length;o++){const r=e[o];i.add(r)}const s=[];this.nodes.each(o=>{o.data!==null&&!i.has(o.data)&&s.push(o.data)}),this.parts.each(o=>{o.data!==null&&!i.has(o.data)&&s.push(o.data)}),s.forEach(o=>t.qT(o,!1));for(let o=0;o<e.length;o++){const r=e[o];this.findPartForData(r)===null&&t.WT(r,!1)}this.jT();let n=this.parts.iterator;for(;n.next();)n.value.updateRelationshipsFromData();for(n=this.nodes.iterator;n.next();)n.value.updateRelationshipsFromData();for(n=this.links.iterator;n.next();)n.value.updateRelationshipsFromData()}jT(){}updateRelationshipsFromData(t){}Dy(t,i){if(typeof i==\"string\"){const e=this.findPartForData(t);if(e!==null)e.updateTargetBindings(i);else{const s=this._O(t);if(s!==null&&s.length>0){for(let o=0;o<s.length;o++)s[o].updateTargetBindings(i);const n=s[0].part;if(n!==null){const o=n.adornments;for(;o.next();)o.value.updateTargetBindings(i)}U.tt(s)}}t===this.diagram.model.modelData&&this.updateAllTargetBindings(i)}}_O(t){let i=null;const e=this.tg.iterator;for(;e.next();){const s=e.value;for(let n=0;n<s.length;n++){const r=s[n].findItemPanelForData(t);r!==null&&(i===null&&(i=U.lt()),i.push(r))}if(i!==null)break}return i}EN(t){return this.tg.get(t)}QO(t,i){const e=t.object;if(!Array.isArray(e))return;const s=t.change===3,n=s?t.newParam:t.oldParam,o=s?t.newValue:t.oldValue,r=this.EN(e);if(Array.isArray(r))for(let l=0;l<r.length;l++){const h=r[l];s?h.gb(o,n,!0):h.UI(n)}}W2(t,i){i!==null&&t.Jr(s=>i.vA(s));const e=t.Mh;if(Array.isArray(e)){const s=this.EN(e);if(s===null)this.tg.set(e,[t]);else{for(let n=0;n<s.length;n++)if(s[n]===t)return;s.push(t)}}}j2(t,i){t.Jr(s=>i.HR(s));const e=t.Mh;if(Array.isArray(e)){const s=this.EN(e);if(s!==null){for(let n=0;n<s.length;n++)if(s[n]===t){s.splice(n,1),s.length===0&&this.tg.delete(e);return}}}}copyParts(t,i,e){e===void 0&&(e=!1);const s=new GMap;if(Array.isArray(t))for(let o=0;o<t.length;o++)this.Gb(t[o],i,s,e);else{const o=t.iterator;for(;o.next();)this.Gb(o.value,i,s,e)}if(i!==null){const o=i.model,r=i.c0().dragsLink,l=new GSet,h=new GMap,f=s.iterator;for(;f.next();){const a=f.value;if(a instanceof Link)!r&&(a.fromNode===null||a.toNode===null)&&l.add(a);else if(a instanceof Node&&a.data!==null){if(o.Sm()){const c=a,u=f.key,d=u.findTreeParentNode();if(d!==null){const m=s.get(d);if(m!==null){o.setParentKeyForNodeData(c.data,o.getKeyForNodeData(m.data));const g=i.findLinkForData(c.data),p=u.findTreeParentLink();p!==null&&g!==null&&h.set(p,g)}}}else if(o.B1()){const c=a,u=f.key,d=o.isRelatedKeysPathTo?u.findNodesOutOf():u.findNodesInto();for(;d.next();){const m=d.value,g=s.get(m);if(g!==null){o.addRelatedKeyForNodeData(c.data,g.key);const p=i.partManager.findLinkForData(c.data,g.key),w=this.findLinkForData(u.data,m.key);w!==null&&p!==null&&h.set(w,p)}else o.removeRelatedKeyForNodeData(c.data,m.key)}}}}if(l.count>0&&i.removeParts(l,!1),h.count>0){const a=h.iterator;for(;a.next();){const c=a.key,u=a.value;s.set(c,u)}}}if(i!==null&&this.diagram!==null){const o=i.model,r=o.afterCopyFunction;if(r!==null){const l=new GMap;s.each(f=>{f.key.data!==null&&l.set(f.key.data,f.value.data)});const h=this.diagram.model;r(l,o,h)}}const n=s.iterator;for(;n.next();)n.value.updateTargetBindings();return s}Gb(t,i,e,s){if(t===null||s&&!t.canCopy())return null;if(e.has(t))return e.get(t);const n=this.BN(t,i);if(!(n instanceof Part))return null;if(n.isSelected=!1,n.isHighlighted=!1,e.set(t,n),t instanceof Node){const o=t.linksConnected;for(;o.next();){const r=o.value;if(r.fromNode===t){const l=e.get(r);l!==null&&(l.fromNode=n)}if(r.toNode===t){const l=e.get(r);l!==null&&(l.toNode=n)}}if(t instanceof Group&&n instanceof Group){const r=t.memberParts;for(;r.next();){const l=r.value,h=this.Gb(l,i,e,s);h instanceof Link||h!==null&&(h.containingGroup=n)}}}else if(t instanceof Link&&n instanceof Link){const o=t.fromNode;if(o!==null){const h=e.get(o);h!==null&&(n.fromNode=h)}const r=t.toNode;if(r!==null){const h=e.get(r);h!==null&&(n.toNode=h)}const l=t.labelNodes;for(;l.next();){const h=l.value,f=this.Gb(h,i,e,s);f!==null&&f instanceof Node&&(f.labeledLink=n)}}return n}BN(t,i){let e=null;const s=t.data;if(s!==null&&i!==null){const n=i.model;if(!(t instanceof Link)){const o=n.copyNodeData(s);U.W(o)&&(n.addNodeData(o),e=i.findPartForData(o))}}else if(t.Kt(),e=t.copy(),e!==null){const n=this.diagram;if(i!==null)i.add(e);else if(s!==null&&n!==null&&n.commandHandler!==null&&n.commandHandler.copiesClipboardData){const o=n.model;let r=null;e instanceof Link||(r=o.copyNodeData(s)),U.W(r)&&(e.data=r)}}return e}get nodes(){return this.Qd}get links(){return this.Zs}get parts(){return this.Ft}get diagram(){return this.C}get addsToTemporaryLayer(){return this.FN}set addsToTemporaryLayer(t){this.FN=t}}class GraphLinksPartManager extends PartManager{Z2(){const t=this.diagram.model;this.Ty(t.nodeDataArray),this.vT(t.linkDataArray)}Ty(t){super.Ty(t,!1);const i=this.links.iterator;for(;i.next();)i.value.Td();this.diagram.z1(!1)}vT(t){t.forEach(i=>{this.JT(i)}),this.diagram.z1(!1)}JT(t){if(t==null||this.diagram.undoManager.isUndoingRedoing||this.findLinkForData(t))return null;const i=this.getLinkCategoryForData(t),e=this.findLinkTemplateForCategory(i);if(e!==null){e.Kt();const s=e.copy();if(s!==null){const n=this.diagram.me;this.diagram.me=!0,s.Wo=i,s.ni=t;const o=this.diagram.model,r=o.Hb(t,!0);r!==\"\"&&(s.fromPortId=r);const l=o.Oe(t,!0);if(l!==void 0){const c=this.findNodeForKey(l);c instanceof Node&&(s.fromNode=c)}const h=o.Hb(t,!1);h!==\"\"&&(s.toPortId=h);const f=o.Oe(t,!1);if(f!==void 0){const c=this.findNodeForKey(f);c instanceof Node&&(s.toNode=c)}const a=o.getLabelKeysForLinkData(t);return Array.isArray(a)&&a.forEach(c=>{const u=this.findNodeForKey(c);u!==null&&(u.labeledLink=s)}),this.addsToTemporaryLayer&&(s.fl=\"Tool\"),this.diagram.add(s),s.ni=null,s.data=t,this.diagram.me=n,s}}return null}XT(){const t=this.diagram.model;this.$T(t.linkDataArray),this.RN(t.nodeDataArray)}$T(t){t.forEach(i=>{this.Ub(i)})}getLinkCategoryForData(t){return this.diagram.model.getCategoryForLinkData(t)}setLinkCategoryForData(t,i){return this.diagram.model.setCategoryForLinkData(t,i)}setFromNodeForLink(t,i){const e=this.diagram.model,s=i!==null?i.data:null;e.setFromKeyForLinkData(t.data,e.getKeyForNodeData(s))}setToNodeForLink(t,i){const e=this.diagram.model,s=i!==null?i.data:null;e.setToKeyForLinkData(t.data,e.getKeyForNodeData(s))}MN(t){this.diagram.model.removeLinkData(t.data)}findPartForKey(t){const i=super.findPartForKey(t);if(i===null){const s=this.diagram.model.findLinkDataForKey(t);if(s!==null)return this.findLinkForData(s)}return i}findLinkForKey(t){if(t==null)return null;const e=this.diagram.model.findLinkDataForKey(t);return e!==null?this.findLinkForData(e):null}doModelChanged(t){if(super.doModelChanged(t),!this.diagram)return;const i=this.diagram;if(t.model!==i.model)return;const e=t.change;if(i.H){i.H=!1;try{const s=t.modelChange;if(s!==\"\"){if(e===2){if(s===\"linkFromKey\"){const n=t.object,o=this.findLinkForData(n);if(o!==null){const r=t.newValue,l=this.findNodeForKey(r);o.fromNode=l}}else if(s===\"linkToKey\"){const n=t.object,o=this.findLinkForData(n);if(o!==null){const r=t.newValue,l=this.findNodeForKey(r);o.toNode=l}}else if(s===\"linkFromPortId\"){const n=t.object,o=this.findLinkForData(n);if(o!==null){const r=t.newValue;typeof r==\"string\"&&(o.fromPortId=r)}}else if(s===\"linkToPortId\"){const n=t.object,o=this.findLinkForData(n);if(o!==null){const r=t.newValue;typeof r==\"string\"&&(o.toPortId=r)}}else if(s===\"nodeGroupKey\"){const n=t.object,o=this.findPartForData(n);if(o!==null){const r=t.newValue;if(r!==void 0){const l=this.findNodeForKey(r);l instanceof Group?o.containingGroup=l:o.containingGroup=null}else o.containingGroup=null}}else if(s===\"linkLabelKeys\"){const n=t.object,o=this.findLinkForData(n);if(o!==null){const r=t.oldValue,l=t.newValue;Array.isArray(r)&&r.forEach(h=>{if(l.indexOf(h)>=0)return;const f=this.findNodeForKey(h);f!==null&&(f.labeledLink=null)}),Array.isArray(l)&&l.forEach(h=>{const f=this.findNodeForKey(h);f!==null&&(f.labeledLink=o)})}}else if(s===\"linkCategory\"){const n=t.object,o=this.findLinkForData(n),r=t.newValue;o!==null&&typeof r==\"string\"&&(o.category=r)}else if(s===\"linkDataArray\"){const n=t.oldValue;this.$T(n);const o=t.newValue;this.vT(o)}i.isModified=!0}else if(e===3){const n=t.newValue;if(s===\"linkDataArray\"&&U.W(n))this.JT(n);else if(s===\"linkLabelKeys\"&&t.model.isKeyType(n)){const o=t.object,r=this.findLinkForData(o),l=this.findNodeForKey(n);r!==null&&l!==null&&(l.labeledLink=r)}i.isModified=!0}else if(e===4){const n=t.oldValue;if(s===\"linkDataArray\"&&U.W(n))this.Ub(n);else if(s===\"linkLabelKeys\"&&t.model.isKeyType(n)){const o=this.findNodeForKey(n);o!==null&&(o.labeledLink=null)}i.isModified=!0}}else if(e===2){const n=t.propertyName,o=t.object,r=i.model;o===r&&(n===\"linkFromKeyProperty\"||n===\"linkToKeyProperty\"||n===\"linkFromPortIdProperty\"||n===\"linkToPortIdProperty\"||n===\"linkLabelKeysProperty\"||n===\"nodeIsGroupProperty\"||n===\"nodeGroupKeyProperty\"||n===\"linkCategoryProperty\")&&(i.undoManager.isUndoingRedoing||this.rebuildParts()),i.isModified=!0}}finally{i.H=!0}}}jT(){const t=this.diagram.model,i=new GSet,e=t.linkDataArray;e.forEach(n=>{i.add(n)});const s=[];this.links.each(n=>{n.data!==null&&!i.has(n.data)&&s.push(n.data)}),s.forEach(n=>{t.ZT(n,!1)}),e.forEach(n=>{this.findLinkForData(n)===null&&t.QT(n,!1)})}updateRelationshipsFromData(t){const i=t.data;if(i===null)return;const e=t.diagram;if(e===null)return;const s=e.model;if(t instanceof Link){let n=s.Oe(i,!0),o=e.findNodeForKey(n);t.fromNode=o,n=s.Oe(i,!1),o=e.findNodeForKey(n),t.toNode=o;const r=s.getLabelKeysForLinkData(i);if(r.length>0||t.labelNodes.count>0){if(r.length===1&&t.labelNodes.count===1){const c=r[0],u=t.labelNodes.first();if(s.getKeyForNodeData(u.data)===c)return}const l=new GSet().addAll(r),h=new GSet;t.labelNodes.each(c=>{if(c.data!==null){const u=s.getKeyForNodeData(c.data);u!==void 0&&h.add(u)}});const f=h.copy();f.removeAll(l);const a=l.copy();if(a.removeAll(h),f.count>0||a.count>0){const c=t;f.each(u=>{const d=e.findNodeForKey(u);d!==null&&d.labeledLink===c&&(d.labeledLink=null)}),a.each(u=>{const d=e.findNodeForKey(u);d!==null&&d.labeledLink!==c&&(d.labeledLink=c)})}}}else if(!(t instanceof Adornment)){const n=s.getGroupKeyForNodeData(i),o=e.findPartForKey(n);(o===null||o instanceof Group)&&(t.containingGroup=o)}}Kb(t){const i=this.diagram.model,e=i.getKeyForNodeData(t);if(e!==void 0){const s=i.Fy(e),n=this.findPartForData(t);if(s!==null&&n!==null){const r=s.iterator;for(;r.next();){const l=r.value;if(i.containsNodeData(l)){if(n instanceof Group&&i.getGroupKeyForNodeData(l)===e){const h=this.findPartForData(l);h!==null&&(h.containingGroup=n)}}else{const h=this.findLinkForData(l);if(h!==null&&n instanceof Node){i.Oe(l,!0)===e&&(h.fromNode=n),i.Oe(l,!1)===e&&(h.toNode=n);const f=i.getLabelKeysForLinkData(l);Array.isArray(f)&&f.some(a=>a===e?(n.labeledLink=h,!0):!1)}}}i._s(e)}const o=i.getGroupKeyForNodeData(t);if(o!==void 0){const r=this.findNodeForKey(o);r instanceof Group&&(n.containingGroup=r)}}}IN(t){const i=this.diagram.model;if(t instanceof Node){const e=i.getKeyForNodeData(t.data);if(e!==void 0){const s=t.linksConnected;for(;s.next();){const n=s.value;i.tn(e,n.data)}if(t.isLinkLabel){const n=t.labeledLink;n!==null&&i.tn(e,n.data)}if(t instanceof Group){const n=t.memberParts;for(;n.next();){const r=n.value.data;i.containsNodeData(r)&&i.tn(e,r)}}}}}BN(t,i){let e=super.BN(t,i);if(t instanceof Link){const s=t.data;if(s!==null&&i!==null){const n=i.model,o=n.copyLinkData(s);U.W(o)&&(n.addLinkData(o),e=i.findLinkForData(o))}else if(e!==null){const n=this.diagram;if(s!==null&&n!==null&&n.commandHandler!==null&&n.commandHandler.copiesClipboardData){const r=n.model.copyLinkData(s);U.W(r)&&(e.data=r)}}}return e}insertLink(t,i,e,s){const n=this.diagram,o=n.model,r=n.toolManager.findTool(\"Linking\");let l=\"\";t!==null&&(i===null&&(i=t),l=i.portId,l===null&&(l=\"\"));let h=\"\";e!==null&&(s===null&&(s=e),h=s.portId,h===null&&(h=\"\"));const f=r.archetypeLinkData;if(f instanceof Link){f.Kt();const a=f.copy();if(a!==null){a.fromNode=t,a.fromPortId=l,a.toNode=e,a.toPortId=h,n.add(a);const c=r.archetypeLabelNodeData;if(c instanceof Node){c.Kt();const u=c.copy();u!==null&&(u.labeledLink=a,n.add(u))}return a}}else if(f!==null){const a=o.copyLinkData(f);if(U.W(a)){t!==null&&o.ig(a,o.getKeyForNodeData(t.data),!0),o.eg(a,l,!0),e!==null&&o.ig(a,o.getKeyForNodeData(e.data),!1),o.eg(a,h,!1),o.addLinkData(a);const c=r.archetypeLabelNodeData;if(c!==null&&!(c instanceof Node)){const d=o.copyNodeData(c);if(U.W(d)){o.addNodeData(d);const m=o.getKeyForNodeData(d);m!==void 0&&o.addLabelKeyForLinkData(a,m)}}return n.findLinkForData(a)}}return null}}class TreePartManager extends PartManager{Dh=null;qb(t,i){if(t===null||i===null||i.findTreeParentLink()!==null)return null;const e=this.diagram.toolManager.findTool(\"Linking\");let s=t,n=i;if(this.diagram.isTreePathToChildren){if(e!==null&&e.Pu(s,n,null,!0))return null}else if(s=i,n=t,e!==null&&e.Pu(s,n,null,!0))return null;const o=this.getLinkCategoryForData(i.data),r=this.findLinkTemplateForCategory(o);if(r!==null){r.Kt();const l=r.copy();if(l!==null){const h=this.diagram.me;return this.diagram.me=!0,l.Wo=o,l.ni=i.data,l.fromNode=s,l.toNode=n,this.diagram.add(l),l.ni=null,l.data=i.data,this.diagram.me=h,l}}return null}getLinkCategoryForData(t){return this.diagram.model.getParentLinkCategoryForNodeData(t)}setLinkCategoryForData(t,i){this.diagram.model.setParentLinkCategoryForNodeData(t,i)}setFromNodeForLink(t,i,e){const s=this.diagram.model;e===void 0&&(e=null);const n=i!==null?i.data:null;if(this.diagram.isTreePathToChildren)s.setParentKeyForNodeData(t.data,s.getKeyForNodeData(n));else{const o=this.Dh;this.Dh=t,e!==null&&s.setParentKeyForNodeData(e.data,void 0);const r=t.toNode!==null?t.toNode.data:null;s.setParentKeyForNodeData(n,s.getKeyForNodeData(r)),this.Dh=o}}setToNodeForLink(t,i,e){const s=this.diagram.model;e===void 0&&(e=null);const n=i!==null?i.data:null;if(this.diagram.isTreePathToChildren){const o=this.Dh;this.Dh=t,e!==null&&s.setParentKeyForNodeData(e.data,void 0);const r=t.fromNode!==null?t.fromNode.data:null;s.setParentKeyForNodeData(n,s.getKeyForNodeData(r)),this.Dh=o}else s.setParentKeyForNodeData(t.data,s.getKeyForNodeData(n))}MN(t){this.diagram.model.setParentKeyForNodeData(t.data,void 0)}findLinkForKey(t){if(t==null)return null;const e=this.diagram.model.findNodeDataForKey(t);return e!==null?this.findLinkForData(e):null}doModelChanged(t){if(super.doModelChanged(t),!this.diagram)return;const i=this.diagram;if(t.model!==i.model)return;const e=t.change;if(i.H){i.H=!1;try{const s=t.modelChange;if(s!==\"\"){if(e===2){if(s===\"nodeParentKey\"){const n=t.object,o=t.newValue,r=this.findNodeForKey(o),l=this.findNodeForData(n);if(this.Dh!==null)r!==null&&(this.Dh.data=n,this.Dh.category=this.getLinkCategoryForData(n));else if(l!==null){const h=l.findTreeParentLink();h!==null?r===null?i.remove(h):i.isTreePathToChildren?h.fromNode=r:h.toNode=r:this.qb(r,l)}}else if(s===\"parentLinkCategory\"){const n=t.object,o=this.findNodeForData(n),r=t.newValue;if(o!==null&&typeof r==\"string\"){const l=o.findTreeParentLink();l!==null&&(l.category=r)}}i.isModified=!0}}else if(e===2){const n=t.propertyName,o=t.object,r=i.model;o===r&&n===\"nodeParentKeyProperty\"&&(i.undoManager.isUndoingRedoing||this.rebuildParts()),i.isModified=!0}}finally{i.H=!0}}}updateRelationshipsFromData(t){const i=t.data;if(i===null)return;const e=t.diagram;if(e===null)return;const s=e.model;if(t instanceof Node){const n=s.getParentKeyForNodeData(i),o=e.findNodeForKey(n),r=t.findTreeParentNode();if(o!==r){const l=t.findTreeParentLink();o!==null?l!==null?e.isTreePathToChildren?l.fromNode=o:l.toNode=o:this.qb(o,t):l!==null&&e.v2(l,!1)}}}Dy(t,i){if(super.Dy(t,i),typeof i==\"string\"&&this.findPartForData(t)!==null){const s=this.findLinkForData(t);s!==null&&s.updateTargetBindings(i)}}Kb(t){const i=this.diagram.model,e=i.getKeyForNodeData(t);if(e!==void 0){const s=i.Fy(e),n=this.findPartForData(t);if(s!==null&&n!==null){const r=s.iterator;for(;r.next();){const l=r.value;if(i.containsNodeData(l)&&n instanceof Node&&i.getParentKeyForNodeData(l)===e){const h=this.findNodeForData(l);this.qb(n,h)}}i._s(e)}const o=i.getParentKeyForNodeData(t);if(o!==void 0&&n instanceof Node){const r=this.findNodeForKey(o);this.qb(r,n)}}}IN(t){const i=this.diagram.model;if(t instanceof Node){const e=i.getKeyForNodeData(t.data),s=this.findLinkForData(t.data);if(s!==null){s.isSelected=!1,s.isHighlighted=!1;const r=s.layer;if(r!==null){const l=r.ne(-1,s,!1);l>=0&&this.diagram.raiseChangedEvent(4,\"parts\",r,s,null,l,null);const h=s.layerChanged;h!==null&&h(s,r,null)}}const n=this.diagram.isTreePathToChildren,o=t.linksConnected;for(;o.next();){const r=o.value,h=(n?r.toNode:r.fromNode).data;i.containsNodeData(h)&&i.tn(e,h)}}}insertLink(t,i,e,s){const n=this.diagram.model;let o=t,r=e;if(this.diagram.isTreePathToChildren||(o=e,r=t),o!==null&&r!==null){const l=o.data,h=r.data;return n.setParentKeyForNodeData(h,n.getKeyForNodeData(l)),r.findTreeParentLink()}return null}}var BindingMode=(y=>(y[y.OneWay=1]=\"OneWay\",y[y.TwoWay=2]=\"TwoWay\",y))(BindingMode||{});class Binding{l;VN;$a;Rc;Fh;Ic;Oc;Ec;Wb;Ne;pd;yc;constructor(t,i,e,s){GSet.Ji(this),t===void 0?t=\"\":U.i(t,\"string\",Binding,\"constructor:targetprop\"),i===void 0?i=t:U.i(i,\"string\",Binding,\"constructor:sourceprop\"),e===void 0?e=null:e!==null&&U.P(e,Binding,\"constructor:conv\"),this.VN=-1,this.Ne=null,this.$a=t,this.pd=0,this.yc=0,this.Rc=null,this.Fh=i,this.Ic=e,s===void 0?(this.Oc=1,this.Ec=null):(this.Oc=2,this.Ec=s),this.Wb=new GSet,this.l=2}copy(){const t=new this.constructor;return this.cloneProtected(t),t}cloneProtected(t){t.$a=this.$a,t.pd=this.pd,t.yc=this.yc,t.Rc=this.Rc,t.Fh=this.Fh,t.Ic=this.Ic,t.Oc=this.Oc,t.Ec=this.Ec,t.l=this.l&-2}static OneWay=1;static TwoWay=2;static parseEnum(t,i){return U.P(t,Binding,\"parseEnum:ctor\"),e=>{let s=parseInt(e);return isNaN(s)&&(s=U.Uh(t,e),s===null)?i:s}}ai(t){t in BindingMode?this.mode=t:U.hr(this,t)}static toString(t){return U.toString(t)}toString(){return\"Binding(\"+this.targetProperty+\":\"+this.sourceProperty+(this.targetId!==-1?\" \"+this.targetId:\"\")+\" \"+BindingMode[this.mode]+\")\"}p(){return this.l=this.l|1,this}get targetId(){return this.VN}set targetId(t){this.f&&U.D(this),this.VN=t}get targetProperty(){return this.$a}set targetProperty(t){this.f&&U.D(this),U.i(t,\"string\",Binding,\"targetProperty\"),this.$a=t}get sourceProperty(){return this.Fh}set sourceProperty(t){this.f&&U.D(this),U.i(t,\"string\",Binding,\"sourceProperty\"),this.Fh=t}get f(){return(this.l&1)!==0}get isToData(){return(this.l&2)!==0}get isToObject(){return(this.l&4)!==0}get isToModel(){return(this.l&8)!==0}get isToTheme(){return(this.l&16)!==0}get zN(){return this.isToTheme&&!(this.isToData||this.isToObject||this.isToModel)}td(){return!1}get sourceName(){return this.Rc}set sourceName(t){this.f&&U.D(this),t!==null&&U.i(t,\"string\",Binding,\"sourceName\"),this.Rc=t,t!==null?this.l=this.l&-3|4:this.l=this.l|2}get converter(){return this.Ic}set converter(t){this.f&&U.D(this),t!==null&&U.P(t,Binding,\"converter\"),this.Ic=t}get backConverter(){return this.Ec}set backConverter(t){this.f&&U.D(this),t!==null&&U.P(t,Binding,\"backConverter\"),this.Ec=t}get mode(){return this.Oc}set mode(t){this.f&&U.D(this),this.isToTheme&&t===2&&U.n(\"Theme Bindings cannot be TwoWay.\"),U.j(t,BindingMode,\"BindingMode\"),this.Oc=t}makeTwoWay(t){return this.isToTheme&&U.n(\"Theme Bindings cannot be TwoWay.\"),this.mode=2,t&&(U.P(t,Binding,\"makeTwoWay\"),this.backConverter=t),this}ofObject(t){return this.f&&U.D(this),t===void 0&&(t=\"\"),Debug&&U.i(t,\"string\",Binding,\"ofObject:srcname\"),this.sourceName=t,this}ofModel(){return this.f&&U.D(this),this.l=this.l&-3&-5|8,this.Rc=null,this}ML(t,i){const e=this.sourceName;let s=null;return e===null||e===\"\"?s=t:e===\"/\"?s=i.part:e===\".\"?s=i:e===\"..\"?s=i.panel:s=t.findObject(e),s}check(t){const i=this.$a,e=this.Fh,s=this.Ic;(this.td()&&s===null&&this.Rh===null&&i===\"\"||s===null&&i===\"\")&&U.nt(\"Binding error: target property is the empty string: \"+this.toString()),this.td()&&this.zN&&e===\"\"&&s===null&&this.Rh===null&&U.nt(\"Binding error: theme bindings require a source property when not using a converter: \"+this.toString()),t&&typeof i==\"string\"&&(!U.rt([\"setAttribute\"])&&i.length>0&&i[0]!==\"_\"&&!U.bw(t,i)?U.nt(\"Binding error: undefined target property: \"+i+\" on \"+t.toString()):i===\"name\"&&t instanceof GraphObject&&U.nt(\"Binding error: cannot modify GraphObject.name on \"+t.toString()))}updateTarget(t,i,e,s){const n=this.Fh;if(e!==void 0&&n!==\"\"&&n!==e)return;const o=this.$a,r=this.Ic;let l=i;if(n!==\"\"&&!this.zN&&(s?l=s.St(i,n):l=Model.St(i,n)),l===void 0)return;const h=t.diagram?.themeManager;if(r===null){if(o!==\"\"){if(this.td()&&(l=this._T(h,l,t,o),l===void 0))return;s?s.et(t,o,l):(i instanceof GraphObject||i instanceof RowColumnDefinition)&&Model.et(t,o,l)}}else try{if(o!==\"\"){let f=r(l,t);if(Debug&&f===void 0&&U.nt('Binding warning: conversion function returned undefined when setting target property \"'+o+'\" on '+t.toString()+\", function is: \"+r),this.td()&&(f=this._T(h,f,t,o),f===void 0))return;s?s.et(t,o,f):(i instanceof GraphObject||i instanceof RowColumnDefinition)&&Model.et(t,o,f)}else r(l,t)}catch(f){Debug&&U.nt(\"Binding error: \"+f.toString()+' setting target property \"'+o+'\" on '+t.toString()+\" with conversion function: \"+r)}}updateSource(t,i,e,s){if(this.Oc!==2)return;const n=this.$a;if(e!==void 0&&n!==e)return;const o=this.Fh,r=this.Ec,l=s!==null?s.diagram:null,h=l!==null?l.model:null;let f=t;if(n!==\"\"&&(h?f=h.St(t,n):f=Model.St(t,n)),f!==void 0&&!this.Wb.has(t))try{if(this.Wb.add(t),r===null){if(o!==\"\")h!==null?(Debug&&h.nodeKeyProperty===o&&h.containsNodeData(i)&&U.nt(\"Binding error: cannot have TwoWay Binding on node data key property: \"+this.toString()),h.setDataProperty(i,o,f)):(i instanceof GraphObject||i instanceof RowColumnDefinition)&&(i[o]=f);else if(h!==null&&s!==null&&s.itemIndex>=0&&s.panel!==null&&Array.isArray(s.panel.itemArray)){const a=s.itemIndex,c=s.panel.itemArray;h.removeArrayItem(c,a),h.insertArrayItem(c,a,f)}}else try{if(o!==\"\"){const a=r(f,i,h);h!==null?(Debug&&(h.nodeKeyProperty===o&&h.containsNodeData(i)&&U.nt(\"Binding error: cannot have TwoWay Binding on node data key property: \"+this.toString()),a===void 0&&U.nt(`Binding warning: conversion function returned undefined when setting source property \"${o}\" on ${i.toString()}, function is: ${r}`)),h.setDataProperty(i,o,a)):(i instanceof GraphObject||i instanceof RowColumnDefinition)&&(i[o]=a)}else{const a=r(f,i,h);if(a!==void 0&&h!==null&&s!==null&&s.itemIndex>=0&&s.panel!==null&&Array.isArray(s.panel.itemArray)){const c=s.itemIndex,u=s.panel.itemArray;h.removeArrayItem(u,c),h.insertArrayItem(u,c,a)}}}catch(a){Debug&&U.nt(\"Binding error: \"+a.toString()+' setting source property \"'+o+'\" on '+i.toString()+\" with conversion function: \"+r)}}finally{this.Wb.delete(t)}}}class ThemeBinding extends Binding{Ry;Rh;Za;constructor(t,i,e,s,n){super(t,i,s),e==null&&(e=\"\"),n===void 0&&(n=null),this.Ry=e,this.Rh=n,this.Za=null,this.l=16}cloneProtected(t){super.cloneProtected(t),t.Ry=this.Ry,t.Rh=this.Rh,t.Za=this.Za}td(){return!0}get themeSource(){return this.Ry}set themeSource(t){this.f&&U.D(this),t!==null&&U.i(t,\"string\",ThemeBinding,\"themeSource\"),this.Ry=t,this.Za=null,t!==null?this.l=this.l|16:this.l=this.l&-17}get themeConverter(){return this.Rh}set themeConverter(t){this.f&&U.D(this),t!==null&&U.P(t,ThemeBinding,\"themeConverter\"),this.Rh=t}ofData(){return this.f&&U.D(this),this.l=this.l|2,this.Rc=null,this}_T(t,i,e,s){if(!t||(this.zN&&(i=this.Fh),!i&&i!==0))return;let n=this.themeSource;this.Za!==null?n=this.Za:typeof n==\"string\"&&n.includes(\".\")&&(this.Za=n.split(\".\"),n=this.Za);let o=t.findValue(i,n,s);return o===void 0&&U.nt(`Theme warning: ${i} could not be found when setting target property ${s}.`),U.rt(this.Rh)&&(o=this.Rh(o,e)),o}}class Model{Lt;sg;Oo;XN;Se;xi;Ih;Bc;Vc;ng;og;rg;lg;Iy;Qa;ir;Oy;Io;jb;constructor(t,i){if(GSet.Ji(this),this.Lt=\"\",this.sg=\"\",this.Oo=!1,this.XN={},this.Se=[],this.xi=new GMap,this.Ih=\"key\",this.Bc=null,this.Vc=null,this.ng=!1,this.og=!1,this.rg=!1,this.lg=null,this.Iy=100,this.Qa=\"category\",this.ir=new GMap,this.Oy=[],this.Io=!1,this.jb=null,this.undoManager=new UndoManager,t!==void 0&&(Array.isArray(t)?this.nodeDataArray=t:i=t),i){Object.assign(this,i);const e=i.Changed;e&&(delete this.Changed,this.addChangedListener(e))}}cloneProtected(t){t.Lt=this.Lt,t.sg=this.sg,t.Oo=this.Oo,t.Ih=this.Ih,t.Bc=this.Bc,t.Vc=this.Vc,t.ng=this.ng,t.og=this.og,t.rg=this.rg,t.lg=this.lg,t.Iy=this.Iy,t.Qa=this.Qa}copy(){const t=new this.constructor;return this.cloneProtected(t),t}clear(){this.Se=[],this.xi.clear(),this.ir.clear(),this.undoManager.clear()}toString(t){if(t===void 0&&(t=0),t>1)return this.toJson();{let i=(this.name!==\"\"?this.name:\"\")+\" Model\";if(t>0){i+=`\n node data:`;const e=this.nodeDataArray,s=e.length;for(let n=0;n<s;n++){const o=e[n];i+=\" \"+this.getKeyForNodeData(o)+\":\"+U.toString(o)}}return i}}toIncrementalData(t){U.e(t,ChangedEvent,Model,\"toIncrementalData:e\"),t.change!==1&&U.n(\"Model.toIncrementalData argument is not a Transaction ChangedEvent:\"+t.toString());const i=t.object;if(!t.isTransactionFinished||!(i instanceof Transaction))return null;const e=this.tD(i);return this.YN(i,t.propertyName===\"FinishedUndo\",e)}YN(t,i,e){const s=this;let n=!1;const o=new GSet,r=new GSet,l=new GSet;t.changes.each(u=>{if(u.model===s){if(u.modelChange===\"nodeDataArray\")u.change===3?o.add(u.newValue):u.change===4&&l.add(u.oldValue);else if(s.containsNodeData(u.object))r.add(u.object);else if(u.change===2&&(s.modelData===u.object||u.propertyName===\"modelData\"))n=!0;else if(u.object!==null)if(e.has(u.object))e.get(u.object).each(m=>{s.containsNodeData(m)&&r.add(m)});else{if(u.object instanceof Model||s.Ya()&&s.containsLinkData(u.object))return;s.iD(u.object).each(m=>{r.add(m)})}}});const h=new GSet;o.each(u=>{h.add(s.getKeyForNodeData(u)),i||r.add(u)});const f=new GSet;l.each(u=>{f.add(s.getKeyForNodeData(u)),i&&r.add(u)});const a=s.cloneDeep(r.toArray());let c=null;return n&&(c===null&&(c={}),c.modelData=this.cloneDeep(this.modelData)),h.count>0&&(c===null&&(c={}),i?c.removedNodeKeys=h.toArray():c.insertedNodeKeys=h.toArray()),a.length>0&&(c===null&&(c={}),c.modifiedNodeData=a),f.count>0&&(c===null&&(c={}),i?c.insertedNodeKeys=f.toArray():c.removedNodeKeys=f.toArray()),c}cloneDeep(t){return this.hg(t,!0)}hg(t,i,e,s){if(!U.W(t))return t;e||(e=new GMap);const n=e.get(t);if(n)return n;let o;if(Array.isArray(t)){o=[],e.set(t,o);for(let r=0;r<t.length;r++){const l=t[r];o.push(this.hg(l,!1,e,s))}}else if(t instanceof Point||t instanceof Size||t instanceof Rect||t instanceof Margin||t instanceof Spot)o=t.copy(),e.set(t,o);else{if(t instanceof Brush||t instanceof Geometry)return t;if(t instanceof List)o=new List().addAll(this.hg(t.toArray(),!1,e,s)),e.set(t,o);else if(t instanceof GSet)o=new GSet().addAll(this.hg(t.toArray(),!1,e,s)),e.set(t,o);else if(t instanceof GMap)o=new GMap().addAll(this.hg(t.toArray(),!1,e,s)),e.set(t,o);else if(t instanceof Date)o=new Date(t),e.set(t,o);else if(t instanceof RegExp)o=new RegExp(t),e.set(t,o),o.lastIndex=t.lastIndex;else if(Model.KN(null,\"\",t))o=t;else if(U.rt(t.copy))o=t.copy(),e.set(t,o);else{o={},e.set(t,o);for(const r in t){if(r===\"__gohashid\")continue;const l=t[r];o[r]=this.hg(l,!1,e,s)}}}return o}Ee(t){return JSON.stringify(t).replace(/[\\u007F-\\uFFFF]/g,e=>{const s=\"0000\"+e.charCodeAt(0).toString(16);return\"\\\\u\"+s.substring(s.length-4)})}ag(){let t=\"\";return this.name!==\"\"&&(t+=`,\n  \"name\": `+this.Ee(this.name)),this.dataFormat!==\"\"&&(t+=`,\n  \"dataFormat\": `+this.Ee(this.dataFormat)),this.isReadOnly&&(t+=`,\n  \"isReadOnly\": `+this.isReadOnly),this.nodeKeyProperty!==\"key\"&&typeof this.nodeKeyProperty==\"string\"&&(t+=`,\n  \"nodeKeyProperty\": `+this.Ee(this.nodeKeyProperty)),this.copiesArrays&&(t+=`,\n  \"copiesArrays\": true`),this.copiesArrayObjects&&(t+=`,\n  \"copiesArrayObjects\": true`),this.copiesKey&&(t+=`,\n  \"copiesKey\": true`),this.pointsDigits!==100&&(t+=`,\n  \"pointsDigits\": `+this.pointsDigits.toString()),this.nodeCategoryProperty!==\"category\"&&typeof this.nodeCategoryProperty==\"string\"&&(t+=`,\n  \"nodeCategoryProperty\": `+this.Ee(this.nodeCategoryProperty)),t}Ey(t){t.name&&(this.name=t.name),t.dataFormat&&(this.dataFormat=t.dataFormat),t.isReadOnly&&(this.isReadOnly=!0),t.nodeKeyProperty&&(this.nodeKeyProperty=t.nodeKeyProperty),t.copiesArrays&&(this.copiesArrays=!0),t.copiesArrayObjects&&(this.copiesArrayObjects=!0),t.copiesKey!==void 0&&(this.copiesKey=t.copiesKey),t.pointsDigits!==void 0&&(this.pointsDigits=parseInt(t.pointsDigits)),t.nodeCategoryProperty&&(this.nodeCategoryProperty=t.nodeCategoryProperty)}eD(){const t=this.modelData;return`,\n  \"modelData\": `+this.sD(t)}nD(t){const i=t.modelData;U.W(i)&&(this.replaceJsonObjects(i),this.modelData=i)}UN(){const t=this.modelData;let i=!1;for(const s in t)if(!this.vb(t,s,t[s])){i=!0;break}let e=\"\";return i&&(e=this.eD()),e+`,\n  \"nodeDataArray\": `+this.Oh(this.nodeDataArray,!0)}GN(t){this.nD(t);const i=t.nodeDataArray;Array.isArray(i)&&(this.replaceJsonObjects(i),this.nodeDataArray=i)}HN(t,i,e){if(t===i)return!0;if(typeof t!=typeof i||U.rt(t)||U.rt(i))return!1;if(Array.isArray(t)&&Array.isArray(i)){if(e.get(t)===i)return!0;if(e.set(t,i),t.length!==i.length)return!1;for(let s=0;s<t.length;s++)if(!this.HN(t[s],i[s],e))return!1;return!0}else if(U.W(t)&&U.W(i)){if(e.get(t)===i)return!0;e.set(t,i);for(const s in t){const n=t[s];if(this.vb(t,s,n))continue;const o=i[s];if(o===void 0||!this.HN(n,o,e))return!1}for(const s in i){const n=i[s];if(this.vb(i,s,n))continue;const o=t[s];if(o===void 0||!this.HN(o,n,e))return!1}return!0}return!1}static oD=`,\n  \"insertedNodeKeys\": `;static t3=`,\n  \"modifiedNodeData\": `;static rD=`,\n  \"removedNodeKeys\": `;tD(t){let i=new GMap;const e=(s,n)=>{const o=n.part;if(!o)return;const r=o.data;if(s===r)return;let l=i.get(s);l===null?(l=new GSet,l.add(r),i.set(s,l)):l.add(r)};return t.changes.each(s=>{if(s.diagram!==null){const n=s.change;if(n===2){const o=s.object.panel;if(o){const r=o.data;r&&e(r,o)}}else if(n===3||n===4){const o=s.object,r=o.itemArray;r&&e(r,o)}}}),i}iD(t){const i=new GSet;for(let e=0;e<this.nodeDataArray.length;e++){const s=this.nodeDataArray[e];this.Jb(t,s,s,i)}return i}Jb(t,i,e,s){if(Array.isArray(i))for(let n=0;n<i.length;n++){const o=i[n];if(o===t)return s.add(e),!0;if(this.Jb(t,o,e,s))return!0}else if(U.W(i)&&Object.getPrototypeOf(i)===Object.prototype)for(const n in i){const o=i[n];if(o===t)return s.add(e),!0;if(this.Jb(t,o,e,s))return!0}return!1}qN(t,i,e){const s=this;let n=!1;const o=new GSet,r=new GSet,l=new GSet;t.changes.each(c=>{if(c.model===s){if(c.modelChange===\"nodeDataArray\")c.change===3?o.add(c.newValue):c.change===4&&l.add(c.oldValue);else if(s.containsNodeData(c.object))r.add(c.object);else if(c.change===2&&(s.modelData===c.object||c.propertyName===\"modelData\"))n=!0;else if(c.object!==null)if(e.has(c.object))e.get(c.object).each(d=>{s.containsNodeData(d)&&r.add(d)});else{if(c.object instanceof Model||s.Ya()&&s.containsLinkData(c.object))return;s.iD(c.object).each(d=>{r.add(d)})}}});const h=new GSet;o.each(c=>{h.add(s.getKeyForNodeData(c)),i||r.add(c)});const f=new GSet;l.each(c=>{f.add(s.getKeyForNodeData(c)),i&&r.add(c)});let a=\"\";return n&&(a+=this.eD()),h.count>0&&(a+=(i?Model.rD:Model.oD)+this.Oh(h.toArray(),!0)),r.count>0&&(a+=Model.t3+this.Oh(r.toArray(),!0)),f.count>0&&(a+=(i?Model.oD:Model.rD)+this.Oh(f.toArray(),!0)),a}By(t){(t.name!==void 0&&t.name!==this.name||t.dataFormat!==void 0&&t.dataFormat!==this.dataFormat||t.isReadOnly!==void 0&&t.isReadOnly!==this.isReadOnly||t.nodeKeyProperty!==void 0&&t.nodeKeyProperty!==this.nodeKeyProperty||t.copiesArrays!==void 0&&t.copiesArrays!==this.copiesArrays||t.copiesArrayObjects!==void 0&&t.copiesArrayObjects!==this.copiesArrayObjects||t.copiesKey!==void 0&&t.copiesKey!==this.copiesKey||t.nodeCategoryProperty!==void 0&&t.nodeCategoryProperty!==this.nodeCategoryProperty)&&U.n(\"applyIncrementalJson cannot change Model properties\"),this.nD(t);const i=t.insertedNodeKeys,e=t.modifiedNodeData,s=new GMap;if(Array.isArray(e))for(let o=0;o<e.length;o++){const r=e[o],l=this.getKeyForNodeData(r);l!=null&&s.set(l,r)}if(Array.isArray(i)){const o=i.length;for(let r=0;r<o;r++){const l=i[r];let h=this.findNodeDataForKey(l);if(h===null){const f=s.get(l);h=f||this.copyNodeData({}),this.setKeyForNodeData(h,l),this.addNodeData(h)}}}if(Array.isArray(e)){const o=e.length;for(let r=0;r<o;r++){const l=e[r],h=this.getKeyForNodeData(l),f=this.findNodeDataForKey(h);if(f!==null){for(const a in l)a===\"__gohashid\"||a===this.nodeKeyProperty||(this.km()||this.B1())&&a===this.nodeIsGroupProperty||this.setDataProperty(f,a,l[a]);this.fg(l,f)}}}const n=t.removedNodeKeys;if(Array.isArray(n)){const o=n.length;for(let r=0;r<o;r++){const l=n[r],h=this.findNodeDataForKey(l);h!==null&&this.removeNodeData(h)}}}toIncrementalJson(t,i){U.e(t,ChangedEvent,Model,\"toIncrementalJson:e\"),t.change!==1&&U.n(\"Model.toIncrementalJson argument is not a Transaction ChangedEvent:\"+t.toString());const e=t.object;if(!t.isTransactionFinished||!(e instanceof Transaction))return'{ \"incremental\": 0 }';i===void 0&&(i=U.Bn(this));const s=this.tD(e),n=this.qN(e,t.propertyName===\"FinishedUndo\",s);return'{ \"class\": '+this.Ee(i)+', \"incremental\": 1'+this.ag()+n+\"}\"}toIncrementalJSON(t,i){return this.toIncrementalJson(t,i)}toJson(t){return t===void 0&&(t=U.Bn(this)),'{ \"class\": '+this.Ee(t)+this.ag()+this.UN()+\"}\"}toJSON(t){return this.toJson(t)}applyIncrementalJson(t){let i=null;if(typeof t==\"string\")try{i=root.JSON.parse(t)}catch(s){Debug&&U.nt(\"JSON.parse error: \"+s.toString())}else U.W(t)?i=t:U.n(\"Unable to modify a Model from: \"+t);const e=i.incremental;typeof e!=\"number\"&&U.n(\"Unable to apply non-incremental changes to Model: \"+t),e!==0&&(this.startTransaction(\"applyIncrementalJson\"),this.By(i),this.commitTransaction(\"applyIncrementalJson\"))}applyIncrementalJSON(t){return this.applyIncrementalJson(t)}static fromJson(t,i){i===void 0&&(i=null),i!==null&&U.e(i,Model,Model,\"fromJson:model\");let e=null;if(typeof t==\"string\")try{e=root.JSON.parse(t)}catch(s){Debug&&U.nt(\"JSON.parse error: \"+s.toString())}else U.W(t)?e=t:U.n(\"Unable to construct a Model from: \"+t);if(i===null){const s=Model.i3(e);s===null||s instanceof Model?i=s:U.n(\"Unable to construct a Model of declared class: \"+e.class)}return i===null&&(i=Model.lD()),i.Ey(e),i.GN(e),i}static fromJSON(t,i){return this.fromJson(t,i)}static lD(){return Debug&&U.n(\"Unable to construct a Model. Provided JSON requires GraphLinksModel, which is not loaded.\"),new Model}static i3(t){let i=null,e=t.class;if(typeof e==\"string\")try{let s=null;e.indexOf(\"go.\")===0?s=Model.WN(e.substring(3)):(s=Model.WN(e),s===null&&(s=root[e])),U.rt(s)&&(i=new s)}catch{}return i}replaceJsonObjects(t){if(Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++){const s=t[e];U.W(s)&&this.hD(t,e,this.replaceJsonObjects(s))}}else if(U.W(t)){for(const i in t){const e=t[i];if(U.W(e)){const s=this.replaceJsonObjects(e);if(t[i]=s,i===\"points\"&&Array.isArray(s)){let n=s.length%2===0;for(let o=0;o<s.length;o++)if(typeof s[o]!=\"number\"){n=!1;break}if(n){const o=new List;for(let r=0;r<s.length/2;r++)o.add(new Point(s[r*2],s[r*2+1]));o.p(),t[i]=o}}}}return this.e3(t)}return t}writeJsonValue(t){return t===void 0?\"undefined\":t===null?\"null\":t===!0?\"true\":t===!1?\"false\":typeof t==\"string\"?this.Ee(t):typeof t==\"number\"?t===1/0?\"9e9999\":t===-1/0?\"-9e9999\":isNaN(t)?'{\"class\":\"NaN\"}':t.toString():t instanceof Boolean?this.writeJsonValue(t.valueOf()):t instanceof String?this.writeJsonValue(t.valueOf()):t instanceof Number?this.writeJsonValue(t.valueOf()):t instanceof Date?'{\"class\":\"Date\", \"value\":\"'+t.toJSON()+'\"}':Array.isArray(t)?this.Oh(t):U.W(t)?this.sD(t):U.rt(t)?\"null\":'\"'+t.toString()+'\"'}Oh(t,i){i===void 0&&(i=!1);const e=t.length;if(e<=0)return\"[]\";const s=new StringBuilder;s.add(\"[\"),i&&e>1&&s.add(`\n`);for(let n=0;n<e;n++){const o=t[n];o!==void 0&&(n>0&&(s.add(\",\"),i&&s.add(`\n`)),s.add(this.writeJsonValue(o)))}return i&&e>1&&s.add(`\n`),s.add(\"]\"),s.toString()}vb(t,i,e){return!!(e===void 0||i===\"__gohashid\"||i[0]===\"_\"||U.rt(e))}ji(t){return isNaN(t)?\"NaN\":t===1/0?\"9e9999\":t===-1/0?\"-9e9999\":t}sD(t){const i=t;if(i instanceof Point)t={class:\"go.Point\",x:this.ji(i.x),y:this.ji(i.y)};else if(i instanceof Size)t={class:\"go.Size\",width:this.ji(i.width),height:this.ji(i.height)};else if(i instanceof Rect)t={class:\"go.Rect\",x:this.ji(i.x),y:this.ji(i.y),width:this.ji(i.width),height:this.ji(i.height)};else if(i instanceof Margin)t={class:\"go.Margin\",top:this.ji(i.top),right:this.ji(i.right),bottom:this.ji(i.bottom),left:this.ji(i.left)};else if(i instanceof Spot)i.isSpot()?t={class:\"go.Spot\",x:this.ji(i.x),y:this.ji(i.y),offsetX:this.ji(i.offsetX),offsetY:this.ji(i.offsetY)}:t={class:\"go.Spot\",enum:i.toString()};else if(i instanceof Brush){if(t={class:\"go.Brush\",type:BrushType[i.type]},i.type===1?t.color=i.color:(i.type===2||i.type===3)&&(t.start=i.start,t.end=i.end,i.type===3&&(i.startRadius!==0&&(t.startRadius=this.ji(i.startRadius)),isNaN(i.endRadius)||(t.endRadius=this.ji(i.endRadius)))),i.colorStops!==null){const n={},o=i.colorStops.iterator;for(;o.next();){const r=o.key,l=o.value;n[r]=l}t.colorStops=n}}else if(i instanceof Geometry)t={class:\"go.Geometry\",type:GeometryType[i.type]},i.startX!==0&&(t.startX=this.ji(i.startX)),i.startY!==0&&(t.startY=this.ji(i.startY)),i.endX!==0&&(t.endX=this.ji(i.endX)),i.endY!==0&&(t.endY=this.ji(i.endY)),i.spot1.equals(Spot.TopLeft)||(t.spot1=i.spot1),i.spot2.equals(Spot.BottomRight)||(t.spot2=i.spot2),i.type===4&&(t.path=Geometry.stringify(i));else if(Model.KN(null,\"\",i))return\"{}\";let e=\"{\",s=!0;for(const n in t){const o=this.St(t,n);if(!this.vb(t,n,o))if(s?s=!1:e+=\",\",e+=this.Ee(n)+\":\",n===\"points\"&&o instanceof List){const r=o;let l=\"[\";const h=r.iterator;for(;h.next();){const f=h.value;l.length>1&&(l+=\",\"),l+=this.aD(f.x),l+=\",\",l+=this.aD(f.y)}l+=\"]\",e+=l}else e+=this.writeJsonValue(o)}return e+=\"}\",e}aD(t){if(t===1/0)return\"9e9999\";if(t===-1/0)return\"-9e9999\";if(isNaN(t))return\"0\";const i=this.pointsDigits;return i>16?t.toString():t.toFixed(i)}get pointsDigits(){return this.Iy}set pointsDigits(t){t<0?t=0:t>100&&(t=100),this.Iy=t}vi(t){return typeof t==\"number\"?t:t===\"NaN\"?NaN:t===\"9e9999\"?1/0:t===\"-9e9999\"?-1/0:parseFloat(t)}e3(t){if(!U.W(t))return t;let i=t.class||\"\";if(typeof i!=\"string\"||i===\"\")return t;if(i===\"NaN\")return NaN;if(i===\"Date\")return new Date(t.value);if(i.indexOf(\"go.\")!==0)return t;i=i.substring(3);let e=t;if(i===\"Point\")e=new Point(this.vi(t.x),this.vi(t.y));else if(i===\"Size\")e=new Size(this.vi(t.width),this.vi(t.height));else if(i===\"Rect\")e=new Rect(this.vi(t.x),this.vi(t.y),this.vi(t.width),this.vi(t.height));else if(i===\"Margin\")e=new Margin(this.vi(t.top),this.vi(t.right),this.vi(t.bottom),this.vi(t.left));else if(i===\"Spot\")typeof t.enum==\"string\"?e=Spot.parse(t.enum):e=new Spot(this.vi(t.x),this.vi(t.y),this.vi(t.offsetX),this.vi(t.offsetY));else if(i===\"Brush\"){const s=new Brush;s.type=U.Uh(BrushType,t.type)??1,typeof t.color==\"string\"&&(s.color=t.color),t.start instanceof Spot&&(s.start=t.start),t.end instanceof Spot&&(s.end=t.end),typeof t.startRadius==\"number\"&&(s.startRadius=this.vi(t.startRadius)),typeof t.endRadius==\"number\"&&(s.endRadius=this.vi(t.endRadius));const n=t.colorStops;if(U.W(n))for(const o in n){const r=parseFloat(o);s.addColorStop(r,n[o])}e=s}else if(i===\"Geometry\"){let s=null;typeof t.path==\"string\"?s=Geometry.parse(t.path):s=new Geometry,s.type=U.Uh(GeometryType,t.type)??1,typeof t.startX==\"number\"&&(s.startX=this.vi(t.startX)),typeof t.startY==\"number\"&&(s.startY=this.vi(t.startY)),typeof t.endX==\"number\"&&(s.endX=this.vi(t.endX)),typeof t.endY==\"number\"&&(s.endY=this.vi(t.endY)),t.spot1 instanceof Spot&&(s.spot1=t.spot1),t.spot2 instanceof Spot&&(s.spot2=t.spot2),e=s}else if(i===\"EnumValue\"){let s=t.classType;s.indexOf(\"go.\")===0&&(s=s.substring(3));const n=Model.WN(s);U.rt(n)&&(e=U.Uh(n,t.name))}return e}get name(){return this.Lt}set name(t){const i=this.Lt;i!==t&&(U.i(t,\"string\",Model,\"name\"),this.Lt=t,this.t(\"name\",i,t))}get dataFormat(){return this.sg}set dataFormat(t){const i=this.sg;i!==t&&(U.i(t,\"string\",Model,\"dataFormat\"),this.sg=t,this.t(\"dataFormat\",i,t))}get isReadOnly(){return this.Oo}set isReadOnly(t){const i=this.Oo;i!==t&&(U.i(t,\"boolean\",Model,\"isReadOnly\"),this.Oo=t,this.t(\"isReadOnly\",i,t))}get modelData(){return this.XN}set modelData(t){const i=this.modelData;i!==t&&(U.Mo(t,Model,\"modelData\"),this.containsNodeData(t)&&U.n(\"Model.modelData Object must not be used by the rest of the model: \"+t),this.XN=t,this.t(\"modelData\",i,t),this.updateTargetBindings(t))}addChangedListener(t){return U.P(t,Model,\"addChangedListener:listener\"),this.Oy.push(t),this}removeChangedListener(t){U.P(t,Model,\"removeChangedListener:listener\");const i=this.Oy.indexOf(t);i>=0&&this.Oy.splice(i,1)}$2(t){this.skipsUndoManager||this.undoManager.handleChanged(t),this.fD(t)}fD(t){this.Oy.forEach(i=>i(t))}bF(t){this.fD(t)}raiseChangedEvent(t,i,e,s,n,o,r){this.zt(\"\",t,i,e,s,n,o,r)}raiseChanged(t,i,e,s,n){this.zt(\"\",2,t,this,i,e,s,n)}t(t,i,e,s,n){this.zt(\"\",2,t,this,i,e,s,n)}raiseDataChanged(t,i,e,s,n,o){this.zt(\"\",2,i,t,e,s,n,o)}zt(t,i,e,s,n,o,r,l){r===void 0&&(r=null),l===void 0&&(l=null);const h=new ChangedEvent;h.model=this,h.change=i,h.modelChange=t,h.propertyName=e,h.object=s,h.oldValue=n,h.oldParam=r,h.newValue=o,h.newParam=l,this.$2(h)}get undoManager(){return this.jb}set undoManager(t){const i=this.jb;i!==t&&(U.e(t,UndoManager,Model,\"undoManager\"),i!==null&&i.removeModel(this),this.jb=t,t!==null&&t.addModel(this))}get skipsUndoManager(){return this.Io}set skipsUndoManager(t){U.i(t,\"boolean\",Model,\"skipsUndoManager\"),this.Io=t}changeState(t,i){if(t!==null&&t.model===this)if(t.change===2){const e=t.object,s=t.propertyName,n=t.getValue(i);if(s===this.nodeKeyProperty&&this.containsNodeData(e)){const o=t.getValue(!i);o!==void 0&&this.xi.delete(o),n!==void 0&&this.xi.set(n,e)}this.et(e,s,n)}else if(t.change===3){const e=t.newParam;if(t.modelChange===\"nodeDataArray\"){const s=t.newValue;if(U.W(s)&&typeof e==\"number\"){const n=this.getKeyForNodeData(s);i?(this.Se[e]===s&&this.xo(this.Se,e),n!==void 0&&this.xi.delete(n)):(this.Se[e]!==s&&this.er(this.Se,e,s),n!==void 0&&this.xi.set(n,s))}}else if(t.modelChange===\"\"){let s=t.object;if(s&&!Array.isArray(s)&&t.propertyName&&(s=this.St(s,t.propertyName)),Array.isArray(s)&&typeof e==\"number\"){const n=t.newValue;i?this.xo(s,e):this.er(s,e,n)}}else U.n(\"unknown ChangeType.Insert modelChange: \"+t.toString())}else if(t.change===4){const e=t.oldParam;if(t.modelChange===\"nodeDataArray\"){const s=t.oldValue;if(U.W(s)&&typeof e==\"number\"){const n=this.getKeyForNodeData(s);i?(this.Se[e]!==s&&this.er(this.Se,e,s),n!==void 0&&this.xi.set(n,s)):(this.Se[e]===s&&this.xo(this.Se,e),n!==void 0&&this.xi.delete(n))}}else if(t.modelChange===\"\"){let s=t.object;if(s&&!Array.isArray(s)&&t.propertyName&&(s=this.St(s,t.propertyName)),Array.isArray(s)&&typeof e==\"number\"){const n=t.oldValue;i?this.er(s,e,n):this.xo(s,e)}}else U.n(\"unknown ChangeType.Remove modelChange: \"+t.toString())}else t.change===1||U.n(\"unknown ChangedEvent: \"+t.toString())}startTransaction(t){return this.undoManager.startTransaction(t)}commitTransaction(t){return this.undoManager.commitTransaction(t)}rollbackTransaction(){return this.undoManager.rollbackTransaction()}commit(t,i){let e=i;e===void 0&&(e=\"\");const s=this.skipsUndoManager;e===null&&(this.skipsUndoManager=!0,e=\"\"),this.undoManager.startTransaction(e);let n=!1;try{t(this),n=!0}finally{n?this.undoManager.commitTransaction(e):this.undoManager.rollbackTransaction(),this.skipsUndoManager=s}}updateTargetBindings(t,i){i===void 0&&(i=\"\"),this.zt(\"SourceChanged\",1,i,t,null,null)}get nodeKeyProperty(){return this.Ih}set nodeKeyProperty(t){const i=this.Ih;i!==t&&(this.Ln(t,Model,\"nodeKeyProperty\"),t===\"\"&&U.n(\"Model.nodeKeyProperty may not be the empty string\"),this.xi.count>0&&U.n(\"Cannot set Model.nodeKeyProperty when there is existing node data\"),this.Ih=t,this.t(\"nodeKeyProperty\",i,t))}Ln(t,i,e){typeof t!=\"string\"&&!U.rt(t)&&U.Pi(t,\"string or function\",i,e)}getKeyForNodeData(t){if(t===null)return;const i=this.Ih;if(i===\"\")return;const e=this.St(t,i);if(e!==void 0){if(this.isKeyType(e))return e;U.n(\"Key value for node data \"+t+\" is not a number or a string: \"+e)}}setKeyForNodeData(t,i){if((i==null||!this.isKeyType(i))&&U.Pi(i,\"number or string\",Model,\"setKeyForNodeData:key\"),t===null)return;const e=this.Ih;if(e===\"\")return;if(!this.containsNodeData(t)){this.et(t,e,i);return}const s=this.St(t,e);if(s!==i){if(this.findNodeDataForKey(i)!==null)return;this.et(t,e,i),s!==void 0&&this.xi.delete(s),this.xi.set(i,t),this.zt(\"nodeKey\",2,e,t,s,i),typeof e==\"string\"&&this.updateTargetBindings(t,e),this.Vy(s,i)}}get makeUniqueKeyFunction(){return this.Bc}set makeUniqueKeyFunction(t){const i=this.Bc;i!==t&&(t!==null&&U.P(t,Model,\"makeUniqueKeyFunction\"),this.Bc=t,this.t(\"makeUniqueKeyFunction\",i,t))}isKeyType(t){return typeof t==\"number\"||typeof t==\"string\"}containsNodeData(t){if(t===null)return!1;const i=this.getKeyForNodeData(t);return i===void 0?!1:this.xi.get(i)===t}findNodeDataForKey(t){return t===null&&U.n(\"Model.findNodeDataForKey:key must not be null\"),t===void 0||!this.isKeyType(t)?null:this.xi.get(t)}get nodeDataArray(){return this.Se}set nodeDataArray(t){const i=this.Se;if(i!==t){this.zy(t,Model,\"nodeDataArray\"),this.xi.clear(),this.jN();const e=t.length;for(let o=0;o<e;o++){const r=t[o];U.W(r)||U.n(\"Model.nodeDataArray must only contain Objects, not: \"+r),r===this.modelData&&U.n(\"nodeDataArray Objects must not be the shared Model.modelData\")}this.Se=t;const s=new List;for(let o=0;o<e;o++){const r=t[o],l=this.getKeyForNodeData(r);l===void 0||this.xi.get(l)!==null?s.add(r):this.xi.set(l,r)}const n=s.iterator;for(;n.next();){const o=n.value;this.makeNodeDataKeyUnique(o);const r=this.getKeyForNodeData(o);r!==void 0&&this.xi.set(r,o)}this.zt(\"nodeDataArray\",2,\"nodeDataArray\",this,i,t);for(let o=0;o<e;o++){const r=t[o];this.cg(r),this.ug(r)}}}$b(t){return t===void 0?!1:this.xi.has(t)}makeNodeDataKeyUnique(t){if(t===null)return;const i=this.Ih;if(i===\"\")return;let e=this.getKeyForNodeData(t);if(e!==void 0&&!this.$b(e))return;const s=this.Bc;if(s!==null&&(e=s(this,t),e!=null&&!this.$b(e))){this.et(t,i,e);return}if(typeof e==\"string\"){let n=2;for(;this.$b(e+n);)n++;this.et(t,i,e+n)}else if(e===void 0||typeof e==\"number\"){let n=-this.xi.count-1;for(;this.$b(n);)n--;this.et(t,i,n)}else Debug&&U.n(\"Model.getKeyForNodeData returned something other than a string or a number: \"+e)}addNodeData(t){t!==null&&(t===this.modelData&&U.n(\"Model.addNodeData cannot add the shared Model.modelData Object\"),this.containsNodeData(t)||this.WT(t,!0))}WT(t,i){let e=this.getKeyForNodeData(t);if(e===void 0)this.makeNodeDataKeyUnique(t),e=this.getKeyForNodeData(t);else{if(this.xi.get(e)===t)return;this.makeNodeDataKeyUnique(t),e=this.getKeyForNodeData(t)}e===void 0&&U.n(\"Model.makeNodeDataKeyUnique failed on \"+t+\".  Data not added to Model.\"),this.xi.set(e,t);let s=null;i&&(s=this.Se.length,this.er(this.Se,s,t)),this.zt(\"nodeDataArray\",3,\"nodeDataArray\",this,null,t,null,s),this.cg(t),this.ug(t)}addNodeDataCollection(t){if(Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++)this.addNodeData(t[e])}else{const i=t.iterator;for(;i.next();){const e=i.value;this.addNodeData(e)}}}removeNodeData(t){t!==null&&this.qT(t,!0)}qT(t,i){const e=this.getKeyForNodeData(t);e!==void 0&&this.xi.delete(e);let s=null;if(i){if(s=this.Se.indexOf(t),s<0)return;this.xo(this.Se,s)}this.zt(\"nodeDataArray\",4,\"nodeDataArray\",this,t,null,s,null),this.Xy(t)}removeNodeDataCollection(t){if(Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++)this.removeNodeData(t[e])}else{const i=t.iterator;for(;i.next();){const e=i.value;this.removeNodeData(e)}}}mergeNodeDataArray(t){if(t===this.nodeDataArray||!Array.isArray(t))return;const i=new GSet;i.addAll(this.xi.iteratorKeys);const e=new GSet,s=t.length;for(let o=0;o<s;o++){const r=t[o],l=this.getKeyForNodeData(r);if(l!==void 0){e.add(l);const h=this.findNodeDataForKey(l);if(h===r)continue;if(h!==null)this.assignAllDataProperties(h,r),this.fg(r,h);else{const f=this.cloneDeep(r);this.setKeyForNodeData(f,l),this.addNodeData(f)}}else{const h=this.cloneDeep(r);this.addNodeData(h),e.add(this.getKeyForNodeData(h))}}const n=i.iterator;for(;n.next();){const o=n.value;if(!e.has(o)){const r=this.findNodeDataForKey(o);r&&this.removeNodeData(r)}}}Vy(t,i){if(i===void 0)return;const e=this.Fy(t);e instanceof GSet&&this.ir.set(i,e)}jN(){}cg(t){}ug(t){}Xy(t){}tn(t,i){if(t===void 0)return;let e=this.ir.get(t);e===null&&(e=new GSet,this.ir.set(t,e)),e.add(i)}_s(t,i){if(t===void 0)return;const e=this.ir.get(t);e instanceof GSet&&(i==null?this.ir.delete(t):(e.delete(i),e.count===0&&this.ir.delete(t)))}Fy(t){if(t===void 0)return null;const i=this.ir.get(t);return i instanceof GSet?i:null}EE(t){t===void 0?this.ir.clear():this.ir.delete(t)}get copyNodeDataFunction(){return this.Vc}set copyNodeDataFunction(t){const i=this.Vc;i!==t&&(t!==null&&U.P(t,Model,\"copyNodeDataFunction\"),this.Vc=t,this.t(\"copyNodeDataFunction\",i,t))}get copiesArrays(){return this.ng}set copiesArrays(t){const i=this.ng;i!==t&&(t!==null&&U.i(t,\"boolean\",Model,\"copiesArrays\"),this.ng=t,this.t(\"copiesArrays\",i,t))}get copiesArrayObjects(){return this.og}set copiesArrayObjects(t){const i=this.og;i!==t&&(t!==null&&U.i(t,\"boolean\",Model,\"copiesArrayObjects\"),this.og=t,this.t(\"copiesArrayObjects\",i,t))}get copiesKey(){return this.rg}set copiesKey(t){const i=this.rg;i!==t&&(t!==null&&U.i(t,\"boolean\",Model,\"copiesKey\"),this.rg=t,this.t(\"copiesKey\",i,t))}copyNodeData(t){if(t===null)return null;let i=null;const e=this.Vc;return e!==null?i=e(t,this):i=this.Zb(t,!0),U.W(i),i}Zb(t,i){if(U.W(t))if(Array.isArray(t))if(this.copiesArrays){const e=t,s=[];for(let n=0;n<e.length;n++){const o=e[n],r=this.Zb(o,this.copiesArrayObjects);s.push(r)}return s}else return t;else{if(t instanceof Point||t instanceof Size||t instanceof Rect||t instanceof Margin||t instanceof Spot)return t.copy();if(i){const e=t,s=e.constructor,n=s?new s:{},o=!this.copiesKey&&typeof this.nodeKeyProperty==\"string\"?this.nodeKeyProperty:null;for(const r in e){if(r===\"__gohashid\"){n.__gohashid=void 0;continue}if(r===o){n[o]=void 0;continue}const l=this.St(e,r);if(!U.W(l))n[r]=l;else if(Model.KN(e,r,l))this.et(n,r,l);else{const h=this.Zb(l,!1);this.et(n,r,h)}}return n}else return t}else return t}get afterCopyFunction(){return this.lg}set afterCopyFunction(t){const i=this.lg;i!==t&&(t!==null&&U.P(t,Model,\"afterCopyFunction\"),this.lg=t,this.t(\"afterCopyFunction\",i,t))}static KN(t,i,e){const s=U.Bn(e);return e instanceof Model||e instanceof UndoManager||e instanceof Transaction||e instanceof ChangedEvent||e instanceof GraphObject||e instanceof RowColumnDefinition||e instanceof Diagram||e instanceof EventTarget||s===\"Layer\"||s===\"RowColumnDefinition\"||s.indexOf(\"Animation\")>=0||s.indexOf(\"Tool\")>=0||s.indexOf(\"CommandHandler\")>=0||s.indexOf(\"Layout\")>=0?(Debug&&i[0]!==\"_\"&&(t&&i&&U.nt('Warning: found GraphObject or Diagram or HTML DOM reference when copying model data on property \"'+i+'\" of data object: '+t.toString()),U.nt(`  \nModel data should not have any references to a Diagram or any part of a diagram, such as: `+e.toString())),!0):!1}static cD=!1;setDataProperty(t,i,e){if(Debug&&(U.Mo(t,Model,\"setDataProperty:data\"),U.i(i,\"string\",Model,\"setDataProperty:propname\"),i===\"\"&&U.n(\"Model.setDataProperty: property name must not be an empty string when setting \"+t+\" to \"+e)),this.containsNodeData(t)){if(i===this.nodeKeyProperty){this.setKeyForNodeData(t,e);return}else if(i===this.nodeCategoryProperty){this.setCategoryForNodeData(t,e);return}}else!Model.cD&&t instanceof GraphObject&&(Model.cD=!0,U.nt('Model.setDataProperty is modifying a GraphObject, \"'+t.toString()+'\"'),U.nt(\"  Is that really your intent?\"));const s=this.St(t,i);s!==e&&(this.et(t,i,e),this.raiseDataChanged(t,i,s,e))}set(t,i,e){this.setDataProperty(t,i,e)}assignAllDataProperties(t,i){if(!i)return;const e=this.containsNodeData(t);for(const s in i)s!==\"__gohashid\"&&(e&&s===this.nodeKeyProperty||this.setDataProperty(t,s,i[s]))}addArrayItem(t,i){this.insertArrayItem(t,-1,i)}insertArrayItem(t,i,e){Debug&&(this.zy(t,Model,\"insertArrayItem:arr\"),U.r(i,Model,\"insertArrayItem:idx\"),t===this.Se&&U.n(\"Model.insertArrayItem or Model.addArrayItem should not be called on the Model.nodeDataArray\")),i<0&&(i=t.length),t=this.er(t,i,e),this.zt(\"\",3,\"\",t,null,e,null,i)}removeArrayItem(t,i){i===void 0&&(i=-1),Debug&&(this.zy(t,Model,\"removeArrayItem:arr\"),U.r(i,Model,\"removeArrayItem:idx\")),t===this.Se&&U.n(\"Model.removeArrayItem should not be called on the Model.nodeDataArray\"),i===-1&&(i=t.length-1);const e=t[i];t=this.xo(t,i),this.zt(\"\",4,\"\",t,e,null,i,null)}get nodeCategoryProperty(){return this.Qa}set nodeCategoryProperty(t){const i=this.Qa;i!==t&&(this.Ln(t,Model,\"nodeCategoryProperty\"),this.Qa=t,this.t(\"nodeCategoryProperty\",i,t))}getCategoryForNodeData(t){if(t===null)return\"\";const i=this.Qa;if(i===\"\")return\"\";const e=this.St(t,i);if(e===void 0)return\"\";if(typeof e==\"string\")return e;U.n(\"getCategoryForNodeData found a non-string category for \"+t+\": \"+e)}setCategoryForNodeData(t,i){if(U.i(i,\"string\",Model,\"setCategoryForNodeData:cat\"),t===null)return;const e=this.Qa;if(e===\"\")return;if(!this.containsNodeData(t)){this.et(t,e,i);return}let s=this.St(t,e);s===void 0&&(s=\"\"),s!==i&&(this.et(t,e,i),this.zt(\"nodeCategory\",2,e,t,s,i))}fg(t,i){this.setCategoryForNodeData(i,this.getCategoryForNodeData(t))}get type(){return\"Model\"}Sm(){return!1}km(){return!1}B1(){return!1}Ya(){return!1}$w(){return!1}xa(){return!1}static z2(){return new Model}St(t,i){return Model.St(t,i)}static St(t,i){if(!t||!i)return null;let e;try{U.rt(i)?e=i(t):U.rt(t.getAttribute)?(e=t.getAttribute(i),e===null&&(e=void 0)):e=t[i]}catch(s){Debug&&U.nt(\"property get error: \"+s.toString())}return e}et(t,i,e){Model.et(t,i,e)}static et(t,i,e){if(!(!t||!i)){try{U.rt(i)?i(t,e):U.rt(t.setAttribute)?t.setAttribute(i,e):t[i]=e}catch(s){Debug&&U.nt(\"property set error: \"+s.toString())}return t}}zy(t,i,e){Array.isArray(t)||U.Pi(t,\"Array\",i,e)}hD(t,i,e){return t[i]=e,t}er(t,i,e){return i>=t.length?t.push(e):t.splice(i,0,e),t}xo(t,i){return i>=t.length?t.pop():t.splice(i,1),t}static WN(t){return Model.vN[t]?Model.vN[t]:root.go!==void 0&&root.go[t]?root.go[t]:null}static yl(t,i){Model.vN[i]=t}static vN={}}Model.fromJSON=Model.fromJson=Model.fromJson,Model.yl(Brush,\"Brush\"),Model.yl(Geometry,\"Geometry\"),Model.yl(Margin,\"Margin\"),Model.yl(Point,\"Point\"),Model.yl(Rect,\"Rect\"),Model.yl(Size,\"Size\"),Model.yl(Spot,\"Spot\"),Model.yl(Model,\"Model\");class GraphLinksModel extends Model{As;sr;Ei;Eh;zc;Xc;Rl;bo;ko;_a;tf;ef;en;Yc;Tn;dg;constructor(t,i,e){if(super(),this.As=[],this.sr=new GSet,this.Ei=new GMap,this.Eh=\"\",this.zc=null,this.Xc=null,this.Rl=null,this.bo=\"from\",this.ko=\"to\",this._a=\"\",this.tf=\"\",this.ef=\"category\",this.en=\"\",this.Yc=\"isGroup\",this.Tn=\"group\",this.dg=!1,i!==void 0&&(this.linkDataArray=i),t!==void 0&&(Array.isArray(t)?this.nodeDataArray=t:e=t),e){Object.assign(this,e);const s=e.Changed;s&&(delete this.Changed,this.addChangedListener(s))}}cloneProtected(t){super.cloneProtected(t),t.Eh=this.Eh,t.zc=this.zc,t.Xc=this.Xc,t.bo=this.bo,t.ko=this.ko,t._a=this._a,t.tf=this.tf,t.ef=this.ef,t.en=this.en,t.Yc=this.Yc,t.Tn=this.Tn,t.dg=this.dg}clear(){this.As=[],this.Ei.clear(),this.sr.clear(),super.clear()}toString(t){if(t===void 0&&(t=0),t>=2)return this.toJson();{let i=(this.name!==\"\"?this.name:\"\")+\" GraphLinksModel\";if(t>0){i+=`\n node data:`;let e=this.nodeDataArray,s=e.length,n=0;for(n=0;n<s;n++){const o=e[n];i+=\" \"+this.getKeyForNodeData(o)+\":\"+Binding.toString(o)}for(i+=`\n link data:`,e=this.linkDataArray,s=e.length,n=0;n<s;n++){const o=e[n];i+=\" \"+this.Oe(o,!0)+\"-->\"+this.Oe(o,!1)}}return i}}YN(t,i,e){if(this.linkKeyProperty===\"\"){const c=this.skipsUndoManager;this.skipsUndoManager=!0,this.linkKeyProperty=\"key\",this.skipsUndoManager=c}let s=super.YN(t,i,e);const n=this,o=new GSet,r=new GSet,l=new GSet;t.changes.each(c=>{if(c.model===n){if(c.modelChange===\"linkDataArray\")c.change===3?o.add(c.newValue):c.change===4&&l.add(c.oldValue);else if(n.containsLinkData(c.object))r.add(c.object);else if(c.object!==null)if(c.object!==null&&e.has(c.object))e.get(c.object).each(d=>{n.containsLinkData(d)&&r.add(d)});else{if(c.object instanceof Model||n.containsNodeData(c.object))return;n.uD(c.object).each(d=>r.add(d))}}});const h=new GSet;o.each(c=>{h.add(n.getKeyForLinkData(c)),i||r.add(c)});const f=new GSet;l.each(c=>{f.add(n.getKeyForLinkData(c)),i&&r.add(c)});const a=n.cloneDeep(r.toArray());return h.count>0&&(s===null&&(s={}),i?s.removedLinkKeys=h.toArray():s.insertedLinkKeys=h.toArray()),a.length>0&&(s===null&&(s={}),s.modifiedLinkData=a),f.count>0&&(s===null&&(s={}),i?s.insertedLinkKeys=f.toArray():s.removedLinkKeys=f.toArray()),s}ag(){const t=super.ag();let i=\"\";return this.linkCategoryProperty!==\"category\"&&typeof this.linkCategoryProperty==\"string\"&&(i+=`,\n  \"linkCategoryProperty\": `+this.Ee(this.linkCategoryProperty)),this.linkKeyProperty!==\"\"&&typeof this.linkKeyProperty==\"string\"&&(i+=`,\n  \"linkKeyProperty\": `+this.Ee(this.linkKeyProperty)),this.linkFromKeyProperty!==\"from\"&&typeof this.linkFromKeyProperty==\"string\"&&(i+=`,\n  \"linkFromKeyProperty\": `+this.Ee(this.linkFromKeyProperty)),this.linkToKeyProperty!==\"to\"&&typeof this.linkToKeyProperty==\"string\"&&(i+=`,\n  \"linkToKeyProperty\": `+this.Ee(this.linkToKeyProperty)),this.linkFromPortIdProperty!==\"\"&&typeof this.linkFromPortIdProperty==\"string\"&&(i+=`,\n  \"linkFromPortIdProperty\": `+this.Ee(this.linkFromPortIdProperty)),this.linkToPortIdProperty!==\"\"&&typeof this.linkToPortIdProperty==\"string\"&&(i+=`,\n  \"linkToPortIdProperty\": `+this.Ee(this.linkToPortIdProperty)),this.linkLabelKeysProperty!==\"\"&&typeof this.linkLabelKeysProperty==\"string\"&&(i+=`,\n  \"linkLabelKeysProperty\": `+this.Ee(this.linkLabelKeysProperty)),this.nodeIsGroupProperty!==\"isGroup\"&&typeof this.nodeIsGroupProperty==\"string\"&&(i+=`,\n  \"nodeIsGroupProperty\": `+this.Ee(this.nodeIsGroupProperty)),this.nodeGroupKeyProperty!==\"group\"&&typeof this.nodeGroupKeyProperty==\"string\"&&(i+=`,\n  \"nodeGroupKeyProperty\": `+this.Ee(this.nodeGroupKeyProperty)),t+i}Ey(t){super.Ey(t),t.linkKeyProperty&&(this.linkKeyProperty=t.linkKeyProperty),t.linkFromKeyProperty&&(this.linkFromKeyProperty=t.linkFromKeyProperty),t.linkToKeyProperty&&(this.linkToKeyProperty=t.linkToKeyProperty),t.linkFromPortIdProperty&&(this.linkFromPortIdProperty=t.linkFromPortIdProperty),t.linkToPortIdProperty&&(this.linkToPortIdProperty=t.linkToPortIdProperty),t.linkCategoryProperty&&(this.linkCategoryProperty=t.linkCategoryProperty),t.linkLabelKeysProperty&&(this.linkLabelKeysProperty=t.linkLabelKeysProperty),t.nodeIsGroupProperty&&(this.nodeIsGroupProperty=t.nodeIsGroupProperty),t.nodeGroupKeyProperty&&(this.nodeGroupKeyProperty=t.nodeGroupKeyProperty)}UN(){const t=super.UN(),i=`,\n  \"linkDataArray\": `+this.Oh(this.linkDataArray,!0);return t+i}GN(t){super.GN(t);const i=t.linkDataArray;Array.isArray(i)&&(this.replaceJsonObjects(i),this.linkDataArray=i)}dD=`,\n  \"insertedLinkKeys\": `;s3=`,\n  \"modifiedLinkData\": `;gD=`,\n  \"removedLinkKeys\": `;uD(t){const i=new GSet;for(let e=0;e<this.linkDataArray.length;e++){const s=this.linkDataArray[e];this.Jb(t,s,s,i)}return i}qN(t,i,e){if(this.linkKeyProperty===\"\"){const c=this.skipsUndoManager;this.skipsUndoManager=!0,this.linkKeyProperty=\"key\",this.skipsUndoManager=c}const s=super.qN(t,i,e),n=this,o=new GSet,r=new GSet,l=new GSet;t.changes.each(c=>{if(c.model===n){if(c.modelChange===\"linkDataArray\")c.change===3?o.add(c.newValue):c.change===4&&l.add(c.oldValue);else if(n.containsLinkData(c.object))r.add(c.object);else if(c.object!==null)if(c.object!==null&&e.has(c.object))e.get(c.object).each(d=>{n.containsLinkData(d)&&r.add(d)});else{if(c.object instanceof Model||n.containsNodeData(c.object))return;n.uD(c.object).each(d=>r.add(d))}}});const h=new GSet;o.each(c=>{h.add(n.getKeyForLinkData(c)),i||r.add(c)});const f=new GSet;l.each(c=>{f.add(n.getKeyForLinkData(c)),i&&r.add(c)});let a=s;return h.count>0&&(a+=(i?this.gD:this.dD)+this.Oh(h.toArray(),!0)),r.count>0&&(a+=this.s3+this.Oh(r.toArray(),!0)),f.count>0&&(a+=(i?this.dD:this.gD)+this.Oh(f.toArray(),!0)),a}By(t){(t.linkCategoryProperty!==void 0&&t.linkCategoryProperty!==this.linkCategoryProperty||t.linkKeyProperty!==void 0&&t.linkKeyProperty!==this.linkKeyProperty||t.linkFromKeyProperty!==void 0&&t.linkFromKeyProperty!==this.linkFromKeyProperty||t.linkToKeyProperty!==void 0&&t.linkToKeyProperty!==this.linkToKeyProperty||t.linkFromPortIdProperty!==void 0&&t.linkFromPortIdProperty!==this.linkFromPortIdProperty||t.linkToPortIdProperty!==void 0&&t.linkToPortIdProperty!==this.linkToPortIdProperty||t.linkLabelKeysProperty!==void 0&&t.linkLabelKeysProperty!==this.linkLabelKeysProperty||t.nodeIsGroupProperty!==void 0&&t.nodeIsGroupProperty!==this.nodeIsGroupProperty||t.nodeGroupKeyProperty!==void 0&&t.nodeGroupKeyProperty!==this.nodeGroupKeyProperty)&&U.n(\"applyIncrementalJson cannot change Model properties\"),super.By(t);const i=t.insertedLinkKeys;if(Array.isArray(i)){const n=i.length;for(let o=0;o<n;o++){const r=i[o];let l=this.findLinkDataForKey(r);l===null&&(l=this.copyLinkData({}),this.setKeyForLinkData(l,r),this.addLinkData(l))}}const e=t.modifiedLinkData;if(Array.isArray(e)){const n=e.length;for(let o=0;o<n;o++){const r=e[o],l=this.getKeyForLinkData(r),h=this.findLinkDataForKey(l);if(h!==null){for(const f in r)f===\"__gohashid\"||f===this.linkKeyProperty||this.setDataProperty(h,f,r[f]);this.mD(r,h)}}}const s=t.removedLinkKeys;if(Array.isArray(s)){const n=s.length;for(let o=0;o<n;o++){const r=s[o],l=this.findLinkDataForKey(r);l!==null&&this.removeLinkData(l)}}}changeState(t,i){if(!(t===null||t.model!==this)){if(t.change===2){const e=t.object,s=t.propertyName;if(s===this.linkKeyProperty&&this.containsLinkData(e)){const n=t.getValue(i),o=t.getValue(!i);o!==void 0&&this.Ei.delete(o),n!==void 0&&this.Ei.set(n,e),this.et(e,s,n);return}}else if(t.change===3){let e=t.newParam;if(t.modelChange===\"linkDataArray\"){const s=t.newValue;if(U.W(s)&&typeof e==\"number\"){const n=this.getKeyForLinkData(s);i?(this.sr.delete(s),this.As[e]===s&&this.xo(this.linkDataArray,e),n!==void 0&&this.Ei.delete(n)):(this.sr.add(s),this.As[e]!==s&&this.er(this.As,e,s),n!==void 0&&this.Ei.set(n,s))}return}else if(t.modelChange===\"linkLabelKeys\"){const s=t.object,n=this.getLabelKeysForLinkData(s);Array.isArray(n)&&typeof e==\"number\"&&(i?(e=n.indexOf(t.newValue),e>=0&&this.xo(n,e)):n.indexOf(t.newValue)<0&&this.er(n,e,t.newValue));return}}else if(t.change===4){let e=t.oldParam;if(t.modelChange===\"linkDataArray\"){const s=t.oldValue;if(U.W(s)&&typeof e==\"number\"){const n=this.getKeyForLinkData(s);i?(this.sr.add(s),this.As[e]!==s&&this.er(this.As,e,s),n!==void 0&&this.Ei.set(n,s)):(this.sr.delete(s),this.As[e]===s&&this.xo(this.linkDataArray,e),n!==void 0&&this.Ei.delete(n))}return}else if(t.modelChange===\"linkLabelKeys\"){const s=t.object,n=this.getLabelKeysForLinkData(s);Array.isArray(n)&&typeof e==\"number\"&&(i?n.indexOf(t.oldValue)<0&&this.er(n,e,t.oldValue):(e=n.indexOf(t.oldValue),e>=0&&this.xo(n,e)));return}}super.changeState(t,i)}}get archetypeNodeData(){return this.Rl}set archetypeNodeData(t){const i=this.Rl;i!==t&&(t!==null&&U.Mo(t,GraphLinksModel,\"archetypeNodeData\"),this.Rl=t,this.t(\"archetypeNodeData\",i,t))}JN(t){if(t===void 0)return;const i=this.Rl;if(i!==null){let e=this.findNodeDataForKey(t);e===null&&(e=this.copyNodeData(i),this.et(e,this.nodeKeyProperty,t),this.addNodeData(e))}return t}get linkFromKeyProperty(){return this.bo}set linkFromKeyProperty(t){const i=this.bo;i!==t&&(this.Ln(t,GraphLinksModel,\"linkFromKeyProperty\"),this.bo=t,this.t(\"linkFromKeyProperty\",i,t))}getFromKeyForLinkData(t){return this.Oe(t,!0)}setFromKeyForLinkData(t,i){this.ig(t,i,!0)}get linkToKeyProperty(){return this.ko}set linkToKeyProperty(t){const i=this.ko;i!==t&&(this.Ln(t,GraphLinksModel,\"linkToKeyProperty\"),this.ko=t,this.t(\"linkToKeyProperty\",i,t))}getToKeyForLinkData(t){return this.Oe(t,!1)}setToKeyForLinkData(t,i){this.ig(t,i,!1)}Oe(t,i){if(t===null)return;const e=i?this.bo:this.ko;if(e===\"\")return;const s=this.St(t,e);if(s!==void 0){if(this.isKeyType(s))return s;U.n((i?\"FromKey\":\"ToKey\")+\" value for link data \"+t+\" is not a number or a string: \"+s)}}ig(t,i,e){if(i===null&&(i=void 0),i!==void 0&&!this.isKeyType(i)&&U.Pi(i,\"number or string\",GraphLinksModel,e?\"setFromKeyForLinkData:key\":\"setToKeyForLinkData:key\"),t===null)return;const s=e?this.bo:this.ko;if(s===\"\")return;if(i=this.JN(i),!this.containsLinkData(t)){this.et(t,s,i);return}const n=this.St(t,s);n!==i&&(this._s(n,t),this.et(t,s,i),this.findNodeDataForKey(i)===null&&this.tn(i,t),this.zt(e?\"linkFromKey\":\"linkToKey\",2,s,t,n,i),typeof s==\"string\"&&this.updateTargetBindings(t,s))}get linkFromPortIdProperty(){return this._a}set linkFromPortIdProperty(t){const i=this._a;i!==t&&(this.Ln(t,GraphLinksModel,\"linkFromPortIdProperty\"),Debug&&(t===this.linkFromKeyProperty||t===this.linkToKeyProperty)&&U.n(\"linkFromPortIdProperty name must not be the same as the GraphLinksModel.linkFromKeyProperty or linkToKeyProperty: \"+t),this._a=t,this.t(\"linkFromPortIdProperty\",i,t))}getFromPortIdForLinkData(t){return this.Hb(t,!0)}setFromPortIdForLinkData(t,i){this.eg(t,i,!0)}get linkToPortIdProperty(){return this.tf}set linkToPortIdProperty(t){const i=this.tf;i!==t&&(this.Ln(t,GraphLinksModel,\"linkToPortIdProperty\"),Debug&&(t===this.linkFromKeyProperty||t===this.linkToKeyProperty)&&U.n(\"linkFromPortIdProperty name must not be the same as the GraphLinksModel.linkFromKeyProperty or linkToKeyProperty: \"+t),this.tf=t,this.t(\"linkToPortIdProperty\",i,t))}getToPortIdForLinkData(t){return this.Hb(t,!1)}setToPortIdForLinkData(t,i){this.eg(t,i,!1)}Hb(t,i){if(t===null)return\"\";const e=i?this._a:this.tf;if(e===\"\")return\"\";const s=this.St(t,e);return s===void 0?\"\":s}eg(t,i,e){if(U.i(i,\"string\",GraphLinksModel,e?\"setFromPortIdForLinkData:portname\":\"setToPortIdForLinkData:portname\"),t===null)return;const s=e?this._a:this.tf;if(s===\"\")return;if(!this.containsLinkData(t)){this.et(t,s,i);return}let n=this.St(t,s);n===void 0&&(n=\"\"),n!==i&&(this.et(t,s,i),this.zt(e?\"linkFromPortId\":\"linkToPortId\",2,s,t,n,i),typeof s==\"string\"&&this.updateTargetBindings(t,s))}get linkLabelKeysProperty(){return this.en}set linkLabelKeysProperty(t){const i=this.en;i!==t&&(this.Ln(t,GraphLinksModel,\"linkLabelKeysProperty\"),this.en=t,this.t(\"linkLabelKeysProperty\",i,t))}getLabelKeysForLinkData(t){if(t===null)return GraphLinksModel.EmptyArray;const i=this.en;if(i===\"\")return GraphLinksModel.EmptyArray;const e=this.St(t,i);return e===void 0?GraphLinksModel.EmptyArray:e}setLabelKeysForLinkData(t,i){if(this.zy(i,GraphLinksModel,\"setLabelKeysForLinkData:arr\"),t===null)return;const e=this.en;if(e===\"\")return;if(!this.containsLinkData(t)){this.et(t,e,i);return}let s=this.St(t,e);if(s===void 0&&(s=GraphLinksModel.EmptyArray),s!==i){if(Array.isArray(s)){const o=s.length;for(let r=0;r<o;r++){const l=s[r];this._s(l,t)}}this.et(t,e,i);const n=i.length;for(let o=0;o<n;o++){const r=i[o];this.findNodeDataForKey(r)===null&&this.tn(r,t)}this.zt(\"linkLabelKeys\",2,e,t,s,i),typeof e==\"string\"&&this.updateTargetBindings(t,e)}}addLabelKeyForLinkData(t,i){if(i==null||(this.isKeyType(i)||U.Pi(i,\"number or string\",GraphLinksModel,\"addLabelKeyForLinkData:key\"),t===null))return;const e=this.en;if(e===\"\")return;const s=this.St(t,e);if(s===void 0){const n=[];n.push(i),this.setLabelKeysForLinkData(t,n)}else if(Array.isArray(s)){let n=s.indexOf(i);if(n>=0)return;n=s.length,s.push(i),this.containsLinkData(t)&&(this.findNodeDataForKey(i)===null&&this.tn(i,t),this.zt(\"linkLabelKeys\",3,e,t,null,i,null,n))}else U.n(e+\" property is not an Array; cannot addLabelKeyForLinkData: \"+t)}removeLabelKeyForLinkData(t,i){if(i==null||(this.isKeyType(i)||U.Pi(i,\"number or string\",GraphLinksModel,\"removeLabelKeyForLinkData:key\"),t===null))return;const e=this.en;if(e===\"\")return;const s=this.St(t,e);if(Array.isArray(s)){const n=s.indexOf(i);if(n<0)return;this.xo(s,n),this.containsLinkData(t)&&(this._s(i,t),this.zt(\"linkLabelKeys\",4,e,t,i,null,n,null))}else s!==void 0&&U.n(e+\" property is not an Array; cannot removeLabelKeyforLinkData: \"+t)}get linkDataArray(){return this.As}set linkDataArray(t){const i=this.As;if(i!==t){this.zy(t,GraphLinksModel,\"linkDataArray\"),this.Ei.clear();const e=t.length;for(let n=0;n<e;n++){const o=t[n];U.W(o)||U.n(\"GraphLinksModel.linkDataArray must only contain Objects, not: \"+o)}if(this.As=t,this.linkKeyProperty!==\"\"){const n=new List;for(let r=0;r<e;r++){const l=t[r],h=this.getKeyForLinkData(l);h===void 0||this.Ei.get(h)!==null?n.add(l):this.Ei.set(h,l)}const o=n.iterator;for(;o.next();){const r=o.value;this.makeLinkDataKeyUnique(r);const l=this.getKeyForLinkData(r);l!==void 0&&this.Ei.set(l,r)}}const s=new GSet;for(let n=0;n<e;n++){const o=t[n];s.add(o)}this.sr=s,this.zt(\"linkDataArray\",2,\"linkDataArray\",this,i,t);for(let n=0;n<e;n++){const o=t[n];this.$N(o)}}}get linkKeyProperty(){return this.Eh}set linkKeyProperty(t){const i=this.Eh;if(i!==t){this.Ln(t,GraphLinksModel,\"linkKeyProperty\"),this.Eh=t,this.Ei.clear();const e=this.linkDataArray.length;for(let s=0;s<e;s++){const n=this.linkDataArray[s];let o=this.getKeyForLinkData(n);o===void 0&&(this.makeLinkDataKeyUnique(n),o=this.getKeyForLinkData(n)),o!==void 0&&this.Ei.set(o,n)}this.t(\"linkKeyProperty\",i,t)}}getKeyForLinkData(t){if(t===null)return;const i=this.Eh;if(i===\"\")return;const e=this.St(t,i);if(e!==void 0){if(this.isKeyType(e))return e;U.n(\"Key value for link data \"+t+\" is not a number or a string: \"+e)}}setKeyForLinkData(t,i){if((i==null||!this.isKeyType(i))&&U.Pi(i,\"number or string\",GraphLinksModel,\"setKeyForLinkData:key\"),t===null)return;const e=this.Eh;if(e===\"\")return;if(!this.containsLinkData(t)){this.et(t,e,i);return}const s=this.St(t,e);if(s!==i){if(this.findLinkDataForKey(i)!==null)return;this.et(t,e,i),s!==void 0&&this.Ei.delete(s),this.Ei.set(i,t),this.zt(\"linkKey\",2,e,t,s,i),typeof e==\"string\"&&this.updateTargetBindings(t,e)}}get makeUniqueLinkKeyFunction(){return this.zc}set makeUniqueLinkKeyFunction(t){const i=this.zc;i!==t&&(t!==null&&U.P(t,GraphLinksModel,\"makeUniqueLinkKeyFunction\"),this.zc=t,this.t(\"makeUniqueLinkKeyFunction\",i,t))}findLinkDataForKey(t){return t===null&&U.n(\"GraphLinksModel.findLinkDataForKey:key must not be null\"),t===void 0||!this.isKeyType(t)?null:this.Ei.get(t)}Qb(t){return t===void 0?!1:this.Ei.has(t)}makeLinkDataKeyUnique(t){if(t===null)return;const i=this.Eh;if(i===\"\")return;let e=this.getKeyForLinkData(t);if(e!==void 0&&!this.Qb(e))return;const s=this.zc;if(s!==null&&(e=s(this,t),e!=null&&!this.Qb(e))){this.et(t,i,e);return}if(typeof e==\"string\"){let n=2;for(;this.Qb(e+n);)n++;this.et(t,i,e+n)}else if(e===void 0||typeof e==\"number\"){let n=-this.Ei.count-1;for(;this.Qb(n);)n--;this.et(t,i,n)}else Debug&&U.n(\"GraphLinksModel.getKeyForLinkData returned something other than a string or a number: \"+e)}containsLinkData(t){return t===null?!1:this.sr.has(t)}addLinkData(t){t!==null&&(this.containsLinkData(t)||this.QT(t,!0))}QT(t,i){if(this.linkKeyProperty!==\"\"){let s=this.getKeyForLinkData(t);if(s===void 0)this.makeLinkDataKeyUnique(t),s=this.getKeyForLinkData(t);else{if(this.Ei.get(s)===t)return;this.makeLinkDataKeyUnique(t),s=this.getKeyForLinkData(t)}s===void 0&&U.n(\"GraphLinksModel.makeLinkDataKeyUnique failed on \"+t+\". Data not added to model.\"),this.Ei.set(s,t)}this.sr.add(t);let e=null;i&&(e=this.As.length,this.er(this.As,e,t)),this.zt(\"linkDataArray\",3,\"linkDataArray\",this,null,t,null,e),this.$N(t)}addLinkDataCollection(t){if(Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++)this.addLinkData(t[e])}else{const i=t.iterator;for(;i.next();){const e=i.value;this.addLinkData(e)}}}removeLinkData(t){t!==null&&this.ZT(t,!0)}ZT(t,i){this.sr.delete(t);const e=this.getKeyForLinkData(t);e!==void 0&&this.Ei.delete(e);let s=null;if(i){if(s=this.As.indexOf(t),s<0)return;this.xo(this.As,s)}this.zt(\"linkDataArray\",4,\"linkDataArray\",this,t,null,s,null),this.o3(t)}removeLinkDataCollection(t){if(Array.isArray(t)){const i=t.length;for(let e=0;e<i;e++)this.removeLinkData(t[e])}else{const i=t.iterator;for(;i.next();){const e=i.value;this.removeLinkData(e)}}}mergeLinkDataArray(t){if(this.linkKeyProperty===\"\"&&U.n(\"GraphLinksModel.linkKeyProperty must not be an empty string for .mergeLinkDataArray() to succeed.\"),t===this.linkDataArray||!Array.isArray(t))return;const i=new GSet;i.addAll(this.Ei.iteratorKeys);const e=new GSet,s=t.length;for(let o=0;o<s;o++){const r=t[o],l=this.getKeyForLinkData(r);if(l!==void 0){e.add(l);const h=this.findLinkDataForKey(l);if(h===r)continue;if(h!==null)this.assignAllDataProperties(h,r),this.mD(r,h);else{const f=this.cloneDeep(r);this.setKeyForLinkData(f,l),this.addLinkData(f)}}else{const h=this.cloneDeep(r);this.addLinkData(h),e.add(this.getKeyForLinkData(h))}}const n=i.iterator;for(;n.next();){const o=n.value;if(!e.has(o)){const r=this.findLinkDataForKey(o);r&&this.removeLinkData(r)}}}$N(t){let i=this.Oe(t,!0);i=this.JN(i),this.findNodeDataForKey(i)===null&&this.tn(i,t),i=this.Oe(t,!1),i=this.JN(i),this.findNodeDataForKey(i)===null&&this.tn(i,t);const e=this.getLabelKeysForLinkData(t);if(Array.isArray(e)){const s=e.length;for(let n=0;n<s;n++)i=e[n],this.findNodeDataForKey(i)===null&&this.tn(i,t)}}o3(t){let i=this.Oe(t,!0);this._s(i,t),i=this.Oe(t,!1),this._s(i,t);const e=this.getLabelKeysForLinkData(t);if(Array.isArray(e)){const s=e.length;for(let n=0;n<s;n++)i=e[n],this._s(i,t)}}get copyLinkDataFunction(){return this.Xc}set copyLinkDataFunction(t){const i=this.Xc;i!==t&&(t!==null&&U.P(t,GraphLinksModel,\"copyLinkDataFunction\"),this.Xc=t,this.t(\"copyLinkDataFunction\",i,t))}copyLinkData(t){if(t===null)return null;let i=null;const e=this.Xc;return e!==null?i=e(t,this):i=this.Zb(t,!0),U.W(i)&&(this.bo!==\"\"&&this.et(i,this.bo,void 0),this.ko!==\"\"&&this.et(i,this.ko,void 0),this.en!==\"\"&&this.et(i,this.en,[])),i}get nodeIsGroupProperty(){return this.Yc}set nodeIsGroupProperty(t){const i=this.Yc;i!==t&&(this.Ln(t,GraphLinksModel,\"nodeIsGroupProperty\"),this.Yc=t,this.t(\"nodeIsGroupProperty\",i,t))}isGroupForNodeData(t){if(t===null)return!1;const i=this.Yc;return i===\"\"?!1:!!this.St(t,i)}isGroupForData(t){return this.isGroupForNodeData(t)}get nodeGroupKeyProperty(){return this.Tn}set nodeGroupKeyProperty(t){const i=this.Tn;i!==t&&(this.Ln(t,GraphLinksModel,\"nodeGroupKeyProperty\"),this.Tn=t,this.t(\"nodeGroupKeyProperty\",i,t))}get copiesGroupKeyOfNodeData(){return this.dg}set copiesGroupKeyOfNodeData(t){this.dg!==t&&(U.i(t,\"boolean\",GraphLinksModel,\"copiesGroupKeyOfNodeData\"),this.dg=t)}getGroupKeyForNodeData(t){if(t===null)return;const i=this.Tn;if(i===\"\")return;const e=this.St(t,i);if(e!==void 0){if(this.isKeyType(e))return e;U.n(\"GroupKey value for node data \"+t+\" is not a number or a string: \"+e)}}getGroupForData(t){return this.getGroupKeyForNodeData(t)}setGroupKeyForNodeData(t,i){if(i===null&&(i=void 0),i!==void 0&&!this.isKeyType(i)&&U.Pi(i,\"number or string\",GraphLinksModel,\"setGroupKeyForNodeData:key\"),t===null)return;const e=this.Tn;if(e===\"\")return;if(!this.containsNodeData(t)){this.et(t,e,i);return}const s=this.St(t,e);s!==i&&(this._s(s,t),this.et(t,e,i),this.findNodeDataForKey(i)===null&&this.tn(i,t),this.zt(\"nodeGroupKey\",2,e,t,s,i),typeof e==\"string\"&&this.updateTargetBindings(t,e))}setGroupForData(t,i){this.setGroupKeyForNodeData(t,i)}copyNodeData(t){if(t===null)return null;const i=super.copyNodeData(t);return!this.copiesGroupKeyOfNodeData&&this.Tn!==\"\"&&this.St(i,this.Tn)!==void 0&&this.et(i,this.Tn,void 0),i}setDataProperty(t,i,e){if(Debug&&(U.Mo(t,GraphLinksModel,\"setDataProperty:data\"),U.i(i,\"string\",GraphLinksModel,\"setDataProperty:propname\"),i===\"\"&&U.n(\"GraphLinksModel.setDataProperty: property name must not be an empty string when setting \"+t+\" to \"+e)),this.containsNodeData(t))if(i===this.nodeKeyProperty){this.setKeyForNodeData(t,e);return}else if(i===this.nodeCategoryProperty){this.setCategoryForNodeData(t,e);return}else if(i===this.nodeGroupKeyProperty){this.setGroupKeyForNodeData(t,e);return}else Debug&&i===this.nodeIsGroupProperty&&U.n(\"GraphLinksModel.setDataProperty: property name must not be the nodeIsGroupProperty: \"+i);else if(this.containsLinkData(t)){if(i===this.linkFromKeyProperty){this.ig(t,e,!0);return}else if(i===this.linkToKeyProperty){this.ig(t,e,!1);return}else if(i===this.linkFromPortIdProperty){this.eg(t,e,!0);return}else if(i===this.linkToPortIdProperty){this.eg(t,e,!1);return}else if(i===this.linkKeyProperty){this.setKeyForLinkData(t,e);return}else if(i===this.linkCategoryProperty){this.setCategoryForLinkData(t,e);return}else if(i===this.linkLabelKeysProperty){this.setLabelKeysForLinkData(t,e);return}}const s=this.St(t,i);s!==e&&(this.et(t,i,e),this.raiseDataChanged(t,i,s,e))}assignAllDataProperties(t,i){if(!i)return;const e=this.containsNodeData(t),s=this.containsLinkData(t);for(const n in i)if(n!==\"__gohashid\"&&!(e&&n===this.nodeKeyProperty)){{if(e&&n===this.nodeIsGroupProperty&&this.St(t,n)===i[n])continue;if(s&&n===this.linkKeyProperty)continue}this.setDataProperty(t,n,i[n])}}Vy(t,i){super.Vy(t,i);const e=this.xi.iterator;for(;e.next();){const n=e.value;this.ZN(n,t,i)}const s=this.sr.iterator;for(;s.next();){const n=s.value;this.r3(n,t,i)}}ZN(t,i,e){if(this.getGroupKeyForNodeData(t)===i){const n=this.Tn;this.et(t,n,e),this.zt(\"nodeGroupKey\",2,n,t,i,e),typeof n==\"string\"&&this.updateTargetBindings(t,n)}}r3(t,i,e){if(this.Oe(t,!0)===i){const r=this.bo;this.et(t,r,e),this.zt(\"linkFromKey\",2,r,t,i,e),typeof r==\"string\"&&this.updateTargetBindings(t,r)}if(this.Oe(t,!1)===i){const r=this.ko;this.et(t,r,e),this.zt(\"linkToKey\",2,r,t,i,e),typeof r==\"string\"&&this.updateTargetBindings(t,r)}const o=this.getLabelKeysForLinkData(t);if(Array.isArray(o)){const r=o.length,l=this.en;for(let h=0;h<r;h++)o[h]===i&&(this.hD(o,h,e),this.zt(\"linkLabelKeys\",3,l,t,i,e,h,h))}}jN(){super.jN();const t=this.linkDataArray,i=t.length;for(let e=0;e<i;e++){const s=t[e];this.$N(s)}}cg(t){super.cg(t);const i=this.getKeyForNodeData(t),e=this.Fy(i);if(e!==null){const s=U.lt(),n=e.iterator;for(;n.next();){const o=n.value;if(this.containsNodeData(o)){if(this.getGroupKeyForNodeData(o)===i){const l=this.Tn;this.zt(\"nodeGroupKey\",2,l,o,i,i),typeof l==\"string\"&&this.updateTargetBindings(o,l),s.push(o)}}else{if(this.Oe(o,!0)===i){const f=this.bo;this.zt(\"linkFromKey\",2,f,o,i,i),typeof f==\"string\"&&this.updateTargetBindings(o,f),s.push(o)}if(this.Oe(o,!1)===i){const f=this.ko;this.zt(\"linkToKey\",2,f,o,i,i),typeof f==\"string\"&&this.updateTargetBindings(o,f),s.push(o)}const h=this.getLabelKeysForLinkData(o);if(Array.isArray(h)){const f=h.length,a=this.en;for(let c=0;c<f;c++)h[c]===i&&(this.zt(\"linkLabelKeys\",3,a,o,i,i,c,c),s.push(o))}}}for(let o=0;o<s.length;o++)this._s(i,s[o]);U.tt(s)}}ug(t){super.ug(t);const i=this.getGroupKeyForNodeData(t);this.findNodeDataForKey(i)===null&&this.tn(i,t)}Xy(t){super.Xy(t);const i=this.getGroupKeyForNodeData(t);this._s(i,t)}get linkCategoryProperty(){return this.ef}set linkCategoryProperty(t){const i=this.ef;i!==t&&(this.Ln(t,GraphLinksModel,\"linkCategoryProperty\"),this.ef=t,this.t(\"linkCategoryProperty\",i,t))}getCategoryForLinkData(t){if(t===null)return\"\";const i=this.ef;if(i===\"\")return\"\";const e=this.St(t,i);if(e===void 0)return\"\";if(typeof e==\"string\")return e;U.n(\"getCategoryForLinkData found a non-string category for \"+t+\": \"+e)}getLinkCategoryForData(t){return this.getCategoryForLinkData(t)}setCategoryForLinkData(t,i){if(U.i(i,\"string\",GraphLinksModel,\"setCategoryForLinkData:cat\"),t===null)return;const e=this.ef;if(e===\"\")return;if(!this.containsLinkData(t)){this.et(t,e,i);return}let s=this.St(t,e);s===void 0&&(s=\"\"),s!==i&&(this.et(t,e,i),this.zt(\"linkCategory\",2,e,t,s,i),typeof e==\"string\"&&this.updateTargetBindings(t,e))}setLinkCategoryForData(t,i){this.setCategoryForLinkData(t,i)}fg(t,i){super.fg(t,i),this.setGroupKeyForNodeData(i,this.getGroupKeyForNodeData(t))}mD(t,i){this.setCategoryForLinkData(i,this.getCategoryForLinkData(t)),this.setFromKeyForLinkData(i,this.getFromKeyForLinkData(t)),this.setToKeyForLinkData(i,this.getToKeyForLinkData(t)),this.setLabelKeysForLinkData(i,this.getLabelKeysForLinkData(t)),this.setFromPortIdForLinkData(i,this.getFromPortIdForLinkData(t)),this.setToPortIdForLinkData(i,this.getToPortIdForLinkData(t))}get type(){return\"GraphLinksModel\"}km(){return!0}Ya(){return!0}$w(){return!0}xa(){return!0}static EmptyArray=Object.freeze([])}Model.yl(GraphLinksModel,\"GraphLinksModel\"),Model.lD=()=>new GraphLinksModel,Model.z2=()=>new GraphLinksModel;class TreeModel extends Model{Dn;gg;sf;constructor(t,i){if(super(),this.Dn=\"parent\",this.gg=!1,this.sf=\"parentLinkCategory\",t!==void 0&&(Array.isArray(t)?this.nodeDataArray=t:i=t),i){Object.assign(this,i);const e=i.Changed;e&&(delete this.Changed,this.addChangedListener(e))}}cloneProtected(t){super.cloneProtected(t),t.Dn=this.Dn,t.gg=this.gg,t.sf=this.sf}toString(t){if(t===void 0&&(t=0),t>=2)return this.toJson();{let i=(this.name!==\"\"?this.name:\"\")+\" TreeModel\";if(t>0){i+=`\n node data:`;const e=this.nodeDataArray,s=e.length;for(let n=0;n<s;n++){const o=e[n];i+=\" \"+this.getKeyForNodeData(o)+\":\"+Binding.toString(o)}}return i}}ag(){const t=super.ag();let i=\"\";return this.nodeParentKeyProperty!==\"parent\"&&typeof this.nodeParentKeyProperty==\"string\"&&(i+=`,\n  \"nodeParentKeyProperty\": `+this.Ee(this.nodeParentKeyProperty)),t+i}Ey(t){super.Ey(t),t.nodeParentKeyProperty&&(this.nodeParentKeyProperty=t.nodeParentKeyProperty)}By(t){t.nodeParentKeyProperty!==void 0&&t.nodeParentKeyProperty!==this.nodeParentKeyProperty&&U.n(\"applyIncrementalJson cannot change Model properties\"),super.By(t)}maybeEnsureLinkReference(t){return t}get nodeParentKeyProperty(){return this.Dn}set nodeParentKeyProperty(t){const i=this.Dn;i!==t&&(this.Ln(t,TreeModel,\"nodeParentKeyProperty\"),this.Dn=t,this.t(\"nodeParentKeyProperty\",i,t))}get copiesParentKeyOfNodeData(){return this.gg}set copiesParentKeyOfNodeData(t){this.gg!==t&&(U.i(t,\"boolean\",TreeModel,\"copiesParentKeyOfNodeData\"),this.gg=t)}getParentKeyForNodeData(t){if(t===null)return;const i=this.Dn;if(i===\"\")return;const e=this.St(t,i);if(e!==void 0){if(this.isKeyType(e))return e;U.n(\"ParentKey value for node data \"+t+\" is not a number or a string: \"+e)}}setParentKeyForNodeData(t,i){if(i===null&&(i=void 0),i!==void 0&&!this.isKeyType(i)&&U.Pi(i,\"number or string\",TreeModel,\"setParentKeyForNodeData:key\"),t===null)return;const e=this.Dn;if(e===\"\")return;if(i=this.maybeEnsureLinkReference(i),!this.containsNodeData(t)){this.et(t,e,i);return}const s=this.St(t,e);s!==i&&(this._s(s,t),this.et(t,e,i),this.findNodeDataForKey(i)===null&&this.tn(i,t),this.zt(\"nodeParentKey\",2,e,t,s,i),typeof e==\"string\"&&this.updateTargetBindings(t,e))}get parentLinkCategoryProperty(){return this.sf}set parentLinkCategoryProperty(t){const i=this.sf;i!==t&&(this.Ln(t,TreeModel,\"parentLinkCategoryProperty\"),this.sf=t,this.t(\"parentLinkCategoryProperty\",i,t))}get linkCategoryProperty(){return this.parentLinkCategoryProperty}set linkCategoryProperty(t){this.parentLinkCategoryProperty=t}getParentLinkCategoryForNodeData(t){if(t===null)return\"\";const i=this.sf;if(i===\"\")return\"\";const e=this.St(t,i);if(e===void 0)return\"\";if(typeof e==\"string\")return e;U.n(\"getParentLinkCategoryForNodeData found a non-string category for \"+t+\": \"+e)}getLinkCategoryForData(t){return this.getParentLinkCategoryForNodeData(t)}setParentLinkCategoryForNodeData(t,i){if(U.i(i,\"string\",TreeModel,\"setParentLinkCategoryForNodeData:cat\"),t===null)return;const e=this.sf;if(e===\"\")return;if(!this.containsNodeData(t)){this.et(t,e,i);return}let s=this.St(t,e);s===void 0&&(s=\"\"),s!==i&&(this.et(t,e,i),this.zt(\"parentLinkCategory\",2,e,t,s,i),typeof e==\"string\"&&this.updateTargetBindings(t,e))}setLinkCategoryForData(t,i){this.setParentLinkCategoryForNodeData(t,i)}copyNodeData(t){if(t===null)return null;const i=super.copyNodeData(t);return!this.copiesParentKeyOfNodeData&&this.Dn!==\"\"&&this.St(i,this.Dn)!==void 0&&this.et(i,this.Dn,void 0),i}setDataProperty(t,i,e){if(Debug&&(U.Mo(t,TreeModel,\"setDataProperty:data\"),U.i(i,\"string\",TreeModel,\"setDataProperty:propname\"),i===\"\"&&U.n(\"TreeModel.setDataProperty: property name must not be an empty string when setting \"+t+\" to \"+e)),this.containsNodeData(t)){if(i===this.nodeKeyProperty){this.setKeyForNodeData(t,e);return}else if(i===this.nodeCategoryProperty){this.setCategoryForNodeData(t,e);return}else if(i===this.nodeParentKeyProperty){this.setParentKeyForNodeData(t,e);return}else if(i===this.parentLinkCategoryProperty){this.setParentLinkCategoryForNodeData(t,e);return}}const s=this.St(t,i);s!==e&&(this.et(t,i,e),this.raiseDataChanged(t,i,s,e))}Vy(t,i){super.Vy(t,i);const e=this.xi.iterator;for(;e.next();){const s=e.value;this.ZN(s,t,i)}}ZN(t,i,e){if(this.getParentKeyForNodeData(t)===i){const n=this.Dn;this.et(t,n,e),this.zt(\"nodeParentKey\",2,n,t,i,e),typeof n==\"string\"&&this.updateTargetBindings(t,n)}}cg(t){super.cg(t);const i=this.getKeyForNodeData(t),e=this.Fy(i);if(e!==null){const s=U.lt(),n=e.iterator;for(;n.next();){const o=n.value;if(this.containsNodeData(o)&&this.getParentKeyForNodeData(o)===i){const l=this.Dn;this.zt(\"nodeParentKey\",2,l,o,i,i),typeof l==\"string\"&&this.updateTargetBindings(o,l),s.push(o)}}for(let o=0;o<s.length;o++)this._s(i,s[o]);U.tt(s)}}ug(t){super.ug(t);let i=this.getParentKeyForNodeData(t);i=this.maybeEnsureLinkReference(i),this.findNodeDataForKey(i)===null&&this.tn(i,t)}Xy(t){super.Xy(t);const i=this.getParentKeyForNodeData(t);this._s(i,t)}fg(t,i){super.fg(t,i),this.setParentLinkCategoryForNodeData(i,this.getParentLinkCategoryForNodeData(t)),this.setParentKeyForNodeData(i,this.getParentKeyForNodeData(t))}get type(){return\"TreeModel\"}Sm(){return!0}$w(){return!0}}Model.yl(TreeModel,\"TreeModel\");var CircularArrangement=(y=>(y[y.ConstantSpacing=0]=\"ConstantSpacing\",y[y.ConstantDistance=1]=\"ConstantDistance\",y[y.ConstantAngle=2]=\"ConstantAngle\",y[y.Packed=3]=\"Packed\",y))(CircularArrangement||{}),CircularDirection=(y=>(y[y.Clockwise=10]=\"Clockwise\",y[y.Counterclockwise=11]=\"Counterclockwise\",y[y.BidirectionalLeft=12]=\"BidirectionalLeft\",y[y.BidirectionalRight=13]=\"BidirectionalRight\",y))(CircularDirection||{}),CircularSorting=(y=>(y[y.Forwards=20]=\"Forwards\",y[y.Reverse=21]=\"Reverse\",y[y.Ascending=22]=\"Ascending\",y[y.Descending=23]=\"Descending\",y[y.Optimized=24]=\"Optimized\",y))(CircularSorting||{}),CircularNodeDiameterFormula=(y=>(y[y.Pythagorean=30]=\"Pythagorean\",y[y.Circular=31]=\"Circular\",y))(CircularNodeDiameterFormula||{});class CircularLayout extends Layout{ce;Kc;_b;mg;tk;Bh;QN;_N;tC;Ls;Yy;Ky;nf;Uy;pD;pg;yg;wg;Uc;Wi;S;be;ke;An;xg;constructor(t){super(),this.ce=0,this.Kc=0,this._b=0,this.mg=360,this.tk=0,this.Bh=0,this.QN=new Point,this._N=30,this.tC=0,this.Ls=0,this.Yy=0,this.Ky=new VertexArrangement,this.nf=0,this.Uy=0,this.pD=600,this.pg=NaN,this.yg=1,this.wg=0,this.Uc=360,this.Wi=0,this.S=10,this.be=24,this.ke=LayoutVertex.standardComparer,this.An=6,this.xg=30,t&&Object.assign(this,t)}cloneProtected(t){super.cloneProtected(t),t.pg=this.pg,t.yg=this.yg,t.wg=this.wg,t.Uc=this.Uc,t.Wi=this.Wi,t.S=this.S,t.be=this.be,t.ke=this.ke,t.An=this.An,t.xg=this.xg}ai(t){t in CircularSorting?this.sorting=t:t in CircularDirection?this.direction=t:t in CircularArrangement?this.arrangement=t:t in CircularNodeDiameterFormula?this.nodeDiameterFormula=t:super.ai(t)}createNetwork(){return new CircularNetwork(this)}l3(t,i,e){t=this.h3(t);let s=this.tk,n=this._N,o=this.ce,r=this.Kc,l=this._b,h=this.mg,f=this.Bh,a=this.tC,c=this.Ls,u=this.Yy;if(s=this.arrangement,n=this.nodeDiameterFormula,o=this.radius,(!isFinite(o)||o<=0)&&(o=NaN),r=this.aspectRatio,(!isFinite(r)||r<=0)&&(r=1),l=this.startAngle,isFinite(l)||(l=0),h=this.sweepAngle,(!isFinite(h)||h>360||h<1)&&(h=360),f=this.spacing,isFinite(f)||(f=NaN),s===3&&n===31?s=0:s===3&&n!==31&&(n=31,s=this.arrangement),(this.direction===12||this.direction===13)&&this.sorting!==24){for(let g=0;!(g>=t.length||(i.add(t.elt(g)),g+1>=t.length));g+=2)e.add(t.elt(g+1));this.direction===12?(this.arrangement===3&&i.reverse(),t=new List,t.addAll(i),t.addAll(e)):(this.arrangement===3&&e.reverse(),t=new List,t.addAll(e),t.addAll(i))}const d=t.length;a=0;let m=0;for(let g=0;g<t.length;g++){const p=l+h*m*(this.direction===10?1:-1)/d;let w=t.elt(g).diameter;isNaN(w)&&(w=t.elt(g).Vh(p)),h<360&&(g===0||g===t.length-1)&&(w/=2),a+=w,m++}if(isNaN(o)||s===3){if(isNaN(f)&&(f=6),s!==0&&s!==3){let g=-1/0;for(let p=0;p<d;p++){const w=t.elt(p),x=t.elt(p===d-1?0:p+1);isNaN(w.diameter)&&w.Vh(0),isNaN(x.diameter)&&x.Vh(0),g=Math.max(g,(w.diameter+x.diameter)/2)}if(u=g+f,s===2){const p=2*Math.PI/d,w=(g+f)/p;r>1?(o=w,c=o*r):(c=w,o=c)}else o=this.ik(u*(h>=360?d:d-1),r,l*Math.PI/180,h*Math.PI/180)}else o=this.ik(a+(h>=360?d:d-1)*(s!==3?f:f*1.6),r,l*Math.PI/180,h*Math.PI/180);c=o*r}else{c=o*r;const g=this.iC(o,c,l*Math.PI/180,h*Math.PI/180);if(isNaN(f))s===0&&(f=(g-a)/(h>=360?d:d-1));else if(s===0){const p=(g-a)/(h>=360?d:d-1);p<f?(o=this.ik(a+f*(h>=360?d:d-1),r,l*Math.PI/180,h*Math.PI/180),c=o*r):f=p}else{let p=-1/0;for(let k=0;k<d;k++){const b=t.elt(k),S=t.elt(k===d-1?0:k+1);isNaN(b.diameter)&&b.Vh(0),isNaN(S.diameter)&&S.Vh(0),p=Math.max(p,(b.diameter+S.diameter)/2)}const w=p+f,x=this.ik(w*(h>=360?d:d-1),r,l*Math.PI/180,h*Math.PI/180);x>o?(o=x,c=o*r,u=w):u=g/(h>=360?d:d-1)}}return this.tk=s,this._N=n,this.ce=o,this.Kc=r,this._b=l,this.mg=h,this.Bh=f,this.tC=a,this.Ls=c,this.Yy=u,t}doLayout(t){Debug&&t===null&&U.n(\"Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts\"),this.network===null&&(this.network=this.makeNetwork(t)),this.arrangementOrigin=this.initialOrigin(this.arrangementOrigin);const i=this.network.vertexes;if(i.count<=1){if(i.count===1){const u=i.first();u.centerX=0,u.centerY=0}this.updateParts(),this.network=null,this.isValidLayout=!0;return}let e=new List;e.addAll(i.iterator);const s=new List,n=new List;e=this.l3(e,s,n);const o=this.tk,r=this.ce,l=this._b,h=this.mg,f=this.Bh,a=this.Ls,c=this.Yy;if((this.direction===12||this.direction===13)&&o===3)this.yD(e,h,l-h/2,10);else if(this.direction===12||this.direction===13){let u=0;switch(o){case 1:u=this.ek(r,a,l,c)*180/Math.PI;break;case 0:{let d=0,m=0;const g=s.first();g!==null&&(d=g.Vh(Math.PI/2));const p=n.first();p!==null&&(m=p.Vh(Math.PI/2)),u=this.ek(r,a,l,f+(d+m)/2)*180/Math.PI;break}case 2:u=h/e.length;break}if(this.direction===12){switch(o){case 1:this.Gy(s,h/2,l,11);break;case 0:this.Hy(s,h/2,l,11);break;case 2:this.qy(s,h/2,l,11);break}switch(o){case 1:this.Gy(n,h/2,l+u,10);break;case 0:this.Hy(n,h/2,l+u,10);break;case 2:this.qy(n,h/2,l+u,10);break}}else{switch(o){case 1:this.Gy(n,h/2,l,11);break;case 0:this.Hy(n,h/2,l,11);break;case 2:this.qy(n,h/2,l,11);break}switch(o){case 1:this.Gy(s,h/2,l+u,10);break;case 0:this.Hy(s,h/2,l+u,10);break;case 2:this.qy(s,h/2,l+u,10);break}}}else switch(o){case 1:this.Gy(e,h,l,this.direction);break;case 0:this.Hy(e,h,l,this.direction);break;case 2:this.qy(e,h,l,this.direction);break;case 3:this.yD(e,h,l,this.direction);break}this.updateParts(),this.network=null,this.isValidLayout=!0}qy(t,i,e,s){const n=this.mg,o=this.ce,r=this.Ls,l=e*Math.PI/180,h=i*Math.PI/180,f=t.length;for(let a=0;a<f;a++){const c=l+(s===10?a*h/(n>=360?f:f-1):-(a*h)/f),u=t.elt(a),d=o*Math.tan(c)/r,m=Math.sqrt((o*o+r*r*d*d)/(1+d*d));u.centerX=m*Math.cos(c),u.centerY=m*Math.sin(c),u.actualAngle=c*180/Math.PI}}Hy(t,i,e,s){const n=this.ce,o=this.Ls,r=this.Bh;let l=e*Math.PI/180;const h=t.length;for(let f=0;f<h;f++){const a=t.elt(f),c=t.elt(f===h-1?0:f+1),u=n*Math.cos(l),d=o*Math.sin(l);a.centerX=u,a.centerY=d,a.actualAngle=l*180/Math.PI,isNaN(a.diameter)&&a.Vh(0),isNaN(c.diameter)&&c.Vh(0);const m=(a.diameter+c.diameter)/2,g=this.ek(n,o,s===10?l:-l,m+r);l+=s===10?g:-g}}Gy(t,i,e,s){const n=this.ce,o=this.Ls,r=this.Yy;let l=e*Math.PI/180;const h=t.length;for(let f=0;f<h;f++){const a=t.elt(f);a.centerX=n*Math.cos(l),a.centerY=o*Math.sin(l),a.actualAngle=l*180/Math.PI;const c=this.ek(n,o,s===10?l:-l,r);l+=s===10?c:-c}}yD(t,i,e,s){let n=this.Uy;const o=this.mg;if(this.nf=0,this.Ky=new VertexArrangement,i<360){for(n=e+(s===10?o:-o);n<0;)n+=360;n%=360,n>180&&(n-=360),n*=Math.PI/180,this.Uy=n,this.wD(t,i,e,s)}else this.xD(t,i,e,s);this.Ky.commit(t)}xD(t,i,e,s){const n=this.ce,o=this.Ls,r=this.Bh,l=this.Kc;let h=n*Math.cos(e*Math.PI/180),f=o*Math.sin(e*Math.PI/180);const a=t.toArray();if(a.length===3){a[0].centerX=n,a[0].centerY=0,a[1].centerX=a[0].centerX-a[0].width/2-a[1].width/2-r,a[1].y=a[0].y,a[2].centerX=(a[0].centerX+a[1].centerX)/2,a[2].y=a[0].y-a[2].height-r;return}else if(a.length===4){a[0].centerX=n,a[0].centerY=0,a[2].centerX=-a[0].centerX,a[2].centerY=a[0].centerY,a[1].centerX=0,a[1].y=Math.min(a[0].y,a[2].y)-a[1].height-r,a[3].centerX=0,a[3].y=Math.max(a[0].y+a[0].height+r,a[2].y+a[2].height+r);return}const c=Point.a();for(let b=0;b<a.length&&(a[b].centerX=h,a[b].centerY=f,!(b>=a.length-1));b++)this.bD(h,f,a,b,s,c)||this.kD(h,f,a,b,s,c),h=c.x,f=c.y;if(Point.o(c),this.nf++,this.nf>23)return;const u=a[0].centerX,d=a[0].centerY,m=a[a.length-1].centerX,g=a[a.length-1].centerY;let p=Math.abs(u-m)-((a[0].width+a[a.length-1].width)/2+r);const w=Math.abs(d-g)-((a[0].height+a[a.length-1].height)/2+r);let x=0;if(Math.abs(w)<1){const b=Math.abs(u-m),S=(a[0].width+a[a.length-1].width)/2;b<S&&(x=0),p=b-S}else w>0?x=w:Math.abs(p)<1?x=0:x=p;let k=!1;Math.abs(m)>Math.abs(g)?k=m>0!=d>g:k=g>0!=u<m,k=s===10?k:!k,k&&(x=-Math.abs(x),x=Math.min(x,-a[a.length-1].width),x=Math.min(x,-a[a.length-1].height)),this.Ky.a3(x,a),Math.abs(x)>1&&(this.nf<8?this.ce-=x/(2*Math.PI):a.length<5&&x>10?this.ce/=2:this.ce-=x>0?1.7:-2.3,this.Ls=this.ce*l,this.xD(t,i,e,s))}wD(t,i,e,s){const n=this.ce,o=this.Ls,r=this.Kc;let l=n*Math.cos(e*Math.PI/180),h=o*Math.sin(e*Math.PI/180);const f=Point.a(),a=t.toArray();for(let m=0;m<a.length&&(a[m].centerX=l,a[m].centerY=h,!(m>=a.length-1));m++)this.bD(l,h,a,m,s,f)||this.kD(l,h,a,m,s,f),l=f.x,h=f.y;if(Point.o(f),this.nf++,this.nf>23)return;const c=Math.atan2(h,l);let u=s===10?this.Uy-c:c-this.Uy;u=Math.abs(u)<Math.abs(u-2*Math.PI)?u:u-2*Math.PI;const d=u*(n+o)/2;this.Ky.f3(d,a),Math.abs(d)>1&&(this.nf<8?this.ce-=d/(2*Math.PI):this.ce-=d>0?1.7:-2.3,this.Ls=this.ce*r,this.wD(t,i,e,s))}bD(t,i,e,s,n,o){const r=this.Bh,l=this.ce,h=this.Ls;let f=0,a=0;const c=(e[s].width+e[s+1].width)/2+r;let u=!1;if(i>=0!=(n===10)){if(f=t+c,f>l){if(f=t-c,f<-l)return o.x=f,o.y=a,!1;u=!0}}else if(f=t-c,f<-l){if(f=t+c,f>l)return o.x=f,o.y=a,!1;u=!0}return a=Math.sqrt(1-Math.min(1,f*f/(l*l)))*h,i<0!==u&&(a=-a),Math.abs(i-a)>(e[s].height+e[s+1].height)/2?(o.x=f,o.y=a,!1):(o.x=f,o.y=a,!0)}kD(t,i,e,s,n,o){const r=this.Bh,l=this.ce,h=this.Ls;let f=0,a=0;const c=(e[s].height+e[s+1].height)/2+r;let u=!1;if(t>=0!=(n===10)){if(a=i-c,a<-h){if(a=i+c,a>h)return o.x=f,o.y=a,!1;u=!0}}else if(a=i+c,a>h){if(a=i-c,a<-h)return o.x=f,o.y=a,!1;u=!0}return f=Math.sqrt(1-Math.min(1,a*a/(h*h)))*l,t<0!==u&&(f=-f),Math.abs(t-f)>(e[s].width+e[s+1].width)/2?(o.x=f,o.y=a,!1):(o.x=f,o.y=a,!0)}commitLayout(){this.commitNodes(),this.isRouting&&this.commitLinks()}commitNodes(){const t=this.group!==null&&this.group.hasPlaceholder(),i=t?this.group.location.copy():null;let e=this.actualCenter;t?e=new Point(0,0):(e.x=this.arrangementOrigin.x+this.ce,e.y=this.arrangementOrigin.y+this.Ls);const s=this.network.vertexes.iterator;for(;s.next();){const n=s.value;n.x+=e.x,n.y+=e.y,n.commit()}if(t){this.group.ensureBounds();const n=this.group.position.copy(),o=this.group.location.copy(),r=i.subtract(o.subtract(n));this.group.move(r),this.QN=r.subtract(n)}}commitLinks(){const t=this.network.edges.iterator;for(;t.next();)t.value.commit()}iC(t,i,e,s){const n=this.pD;if(Math.abs(this.Kc-1)<.001)return e!==void 0&&s!==void 0?s*t:2*Math.PI*t;const o=t>i?Math.sqrt(t*t-i*i)/t:Math.sqrt(i*i-t*t)/i;let r=0,l=0;e!==void 0&&s!==void 0?l=s/(n+1):l=Math.PI/(2*(n+1));let h=0;for(let f=0;f<=n;f++){e!==void 0&&s!==void 0?h=e+f*s/n:h=f*Math.PI/(2*n);const a=Math.sin(h);r+=Math.sqrt(1-o*o*a*a)*l}return e!==void 0&&s!==void 0?(t>i?t:i)*r:4*(t>i?t:i)*r}ik(t,i,e,s){let n=0;return e!==void 0&&s!==void 0?n=this.iC(1,i,e,s):n=this.iC(1,i),t/n}ek(t,i,e,s){if(Math.abs(this.Kc-1)<.001)return s/t;const n=t>i?Math.sqrt(t*t-i*i)/t:Math.sqrt(i*i-t*t)/i;let o=0;const r=2*Math.PI/(this.network.vertexes.count*700);t>i&&(e+=Math.PI/2);for(let l=0;;l++){const h=e+l*r,f=Math.sin(h);if(o+=(t>i?t:i)*Math.sqrt(1-n*n*f*f)*r,o>=s)return l*r}}h3(t){switch(this.sorting){case 20:break;case 21:t.reverse();break;case 22:t.sort(this.comparer);break;case 23:t.sort(this.comparer),t.reverse();break;case 24:return this.c3(this.u3(t));default:U.n(\"Invalid sorting type.\")}return t}u3(t){const i=[];for(let s=0;s<t.length;s++)i.push(0);const e=new List;for(let s=0;s<t.length;s++){let n=-1,o=-1;if(s===0)for(let a=0;a<t.length;a++){const u=t.elt(a).edgesCount;u>n&&(n=u,o=a)}else for(let a=0;a<t.length;a++){const c=i[a];c>n&&(n=c,o=a)}e.add(t.elt(o)),i[o]=-1;const r=t.elt(o);let l=0;const h=r.sourceEdges;for(;h.next();){const c=h.value.fromVertex;l=t.indexOf(c),!(l<0)&&i[l]>=0&&i[l]++}const f=r.destinationEdges;for(;f.next();){const c=f.value.toVertex;l=t.indexOf(c),!(l<0)&&i[l]>=0&&i[l]++}}return e}c3(t){const i=[];for(let c=0;c<t.length;c++){const u=t.elt(c);i[c]=[];let d=0;const m=u.destinationEdges;for(;m.next();){const p=m.value.toVertex;d=t.indexOf(p),d!==c&&i[c].indexOf(d)<0&&i[c].push(d)}const g=u.sourceEdges;for(;g.next();){const p=g.value.fromVertex;d=t.indexOf(p),d!==c&&i[c].indexOf(d)<0&&i[c].push(d)}}const e=[];for(let c=0;c<i.length;c++)e[c]=0;const s=[],n=[],o=[],r=[],l=new List;let h=0;for(let c=0;c<i.length;c++){const u=i[c].length;if(u===1){r.push(c);continue}if(u===0){l.add(t.elt(c));continue}if(h===0){s.push(c),h++;continue}let d=1/0,m=1/0,g=-1;const p=[];for(let w=0;w<s.length;w++)i[s[w]].indexOf(s[w===s.length-1?0:w+1])<0&&p.push(w===s.length-1?0:w+1);if(p.length===0)for(let w=0;w<s.length;w++)p.push(w);for(let w=0;w<p.length;w++){const x=p[w],k=this.d3(i[c],n,o,e,x,s);let b=0;for(let S=0;S<i[c].length;S++){const M=i[c][S],A=s.indexOf(M);if(A>=0){const C=Math.abs(x-(A>=x?A+1:A));b+=C<s.length+1-C?C:s.length+1-C}}for(let S=0;S<n.length;S++){let M=e[n[S]],A=e[o[S]];if(M>=x&&M++,A>=x&&A++,M>A){const C=A;A=M,M=C}A-M<(s.length+2)/2==(M<x&&x<=A)&&b++}(k<d||k===d&&b<m)&&(d=k,m=b,g=x)}s.splice(g,0,c);for(let w=0;w<s.length;w++)e[s[w]]=w;for(let w=0;w<i[c].length;w++){const x=i[c][w];s.indexOf(x)>=0&&(n.push(c),o.push(x))}h++}let f=!1;const a=s.length;for(;;){f=!0;for(let c=0;c<r.length;c++){const u=r[c],d=i[u][0],m=s.indexOf(d);if(m>=0){let g=0;for(let p=0;p<i[d].length;p++){const w=i[d][p],x=s.indexOf(w);if(x<0||x===m)continue;const k=x>m?x-m:m-x,b=a-k;g+=x<m!=k>b?1:-1}s.splice(g<0?m:m+1,0,u),r.splice(c,1),c--}else f=!1}if(f)break;s.push(r[0]),r.splice(0,1)}for(let c=0;c<s.length;c++){const u=s[c];l.add(t.elt(u))}return l}d3(t,i,e,s,n,o){let r=0;for(let l=0;l<i.length;l++){const h=i[l],f=e[l],a=s[h],c=s[f];let u=0,d=0;if(a<c?(u=a,d=c):(u=c,d=a),u<n&&n<=d)for(let m=0;m<t.length;m++){const g=t[m];o.indexOf(g)<0||u<s[g]&&s[g]<d||u===s[g]||d===s[g]||r++}else for(let m=0;m<t.length;m++){const g=t[m];o.indexOf(g)<0||!(u<s[g]&&s[g]<d)||u===s[g]||d===s[g]||r++}}return r}get radius(){return this.pg}set radius(t){this.pg!==t&&(U.i(t,\"number\",CircularLayout,\"radius\"),(t>0||isNaN(t))&&(this.pg=t,this.invalidateLayout()))}get aspectRatio(){return this.yg}set aspectRatio(t){this.yg!==t&&(U.i(t,\"number\",CircularLayout,\"aspectRatio\"),t>0&&(this.yg=t,this.invalidateLayout()))}get startAngle(){return this.wg}set startAngle(t){this.wg!==t&&(U.i(t,\"number\",CircularLayout,\"startAngle\"),this.wg=t,this.invalidateLayout())}get sweepAngle(){return this.Uc}set sweepAngle(t){this.Uc!==t&&(U.i(t,\"number\",CircularLayout,\"sweepAngle\"),t>0&&t<=360?this.Uc=t:this.Uc=360,this.invalidateLayout())}get arrangement(){return this.Wi}set arrangement(t){this.Wi!==t&&(U.j(t,CircularArrangement,\"CircularArrangement\"),(t===3||t===0||t===1||t===2)&&(this.Wi=t,this.invalidateLayout()))}get direction(){return this.S}set direction(t){this.S!==t&&(U.j(t,CircularDirection,\"CircularDirection\"),(t===10||t===11||t===12||t===13)&&(this.S=t,this.invalidateLayout()))}get sorting(){return this.be}set sorting(t){this.be!==t&&(U.j(t,CircularSorting,\"CircularSorting\"),this.be=t,this.invalidateLayout())}get comparer(){return this.ke}set comparer(t){this.ke!==t&&(U.P(t,CircularLayout,\"comparer\"),this.ke=t,this.invalidateLayout())}get spacing(){return this.An}set spacing(t){this.An!==t&&(U.i(t,\"number\",CircularLayout,\"spacing\"),this.An=t,this.invalidateLayout())}get nodeDiameterFormula(){return this.xg}set nodeDiameterFormula(t){this.xg!==t&&(U.j(t,CircularNodeDiameterFormula,\"CircularNodeDiameterFormula\"),(t===30||t===31)&&(this.xg=t,this.invalidateLayout()))}get actualXRadius(){return this.ce}get actualYRadius(){return this.Ls}get actualSpacing(){return this.Bh}get actualCenter(){return this.QN}static ConstantSpacing=0;static ConstantDistance=1;static ConstantAngle=2;static Packed=3;static Clockwise=10;static Counterclockwise=11;static BidirectionalLeft=12;static BidirectionalRight=13;static Forwards=20;static Reverse=21;static Ascending=22;static Descending=23;static Optimized=24;static Pythagorean=30;static Circular=31}class VertexArrangement{Gc;of;Hc;constructor(){this.Gc=-1/0,this.of=null,this.Hc=null}a3(t,i){if(t>0&&this.Gc<0||Math.abs(t)<Math.abs(this.Gc)&&!(t<0&&this.Gc>0)){this.Gc=t,this.of=[],this.Hc=[];for(let e=0;e<i.length;e++)this.of[e]=i[e].bounds.x,this.Hc[e]=i[e].bounds.y}}f3(t,i){if(Math.abs(t)<Math.abs(this.Gc)){this.Gc=t,this.of=[],this.Hc=[];for(let e=0;e<i.length;e++)this.of[e]=i[e].bounds.x,this.Hc[e]=i[e].bounds.y}}commit(t){if(!(this.of===null||this.Hc===null))for(let i=0;i<this.of.length;i++){const e=t.elt(i);e.x=this.of[i],e.y=this.Hc[i]}}}class CircularNetwork extends LayoutNetwork{constructor(t){super(t)}createVertex(){return new CircularVertex(this)}createEdge(){return new CircularEdge(this)}}class CircularVertex extends LayoutVertex{So;sk;constructor(t){super(t),this.So=NaN,this.sk=NaN}Vh(t){const i=this.network;if(i===null)return NaN;const e=i.layout;if(e===null)return NaN;if(e.arrangement===3){if(e.nodeDiameterFormula===31)return this.So=Math.max(this.width,this.height),this.So;{const s=Math.abs(Math.sin(t)),n=Math.abs(Math.cos(t));return s===0?this.width:n===0?this.height:(this.So=Math.min(this.height/s,this.width/n),this.So)}}else return e.nodeDiameterFormula===31?(this.So=Math.max(this.width,this.height),this.So):(this.So=Math.sqrt(this.width*this.width+this.height*this.height),this.So)}get diameter(){return this.So}set diameter(t){this.So!==t&&(U.i(t,\"number\",CircularVertex,\"diameter\"),this.So=t)}get actualAngle(){return this.sk}set actualAngle(t){this.sk!==t&&(U.i(t,\"number\",CircularVertex,\"actualAngle\"),this.sk=t)}}class CircularEdge extends LayoutEdge{constructor(t){super(t)}}class ForceDirectedLayout extends Layout{Wy;zh;Ts;bg;Fn;Be;kg;Sg;Mg;qc;Pg;Ng;Wc;jc;vc;Jc;Cg;Ag;$c;rf;constructor(t){super(),this.Wy=0,this.zh=0,this.Ts=new Size(100,100).p(),this.bg=!1,this.Fn=!0,this.Be=!1,this.kg=100,this.Sg=300,this.Mg=1,this.qc=1e3,this.Pg=10,this.Ng=Math,this.Wc=.05,this.jc=50,this.vc=150,this.Jc=0,this.Cg=10,this.Ag=5,this.$c=NaN,this.rf=10,t&&Object.assign(this,t)}cloneProtected(t){super.cloneProtected(t),t.Ts.c(this.Ts),t.bg=this.bg,t.Fn=this.Fn,t.Be=this.Be,t.kg=this.kg,t.Sg=this.Sg,t.Mg=this.Mg,t.qc=this.qc,t.Pg=this.Pg,t.Ng=this.Ng,t.Wc=this.Wc,t.jc=this.jc,t.vc=this.vc,t.Jc=this.Jc,t.Cg=this.Cg,t.Ag=this.Ag,t.$c=this.$c,t.rf=this.rf}createNetwork(){return new ForceDirectedNetwork(this)}doLayout(t){Debug&&t===null&&U.n(\"Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts\"),this.network=this.makeNetwork(t);let i=this.network.vertexes.iterator;const e=this.maxIterations;if(this.network.vertexes.count>0){for(this.network.deleteSelfEdges(),i=this.network.vertexes.iterator;i.next();){const o=i.value;o.charge=this.electricalCharge(o),o.mass=this.gravitationalMass(o)}const s=this.network.edges.iterator;for(;s.next();){const o=s.value;o.stiffness=this.springStiffness(o),o.length=this.springLength(o)}if(this.eC(),this.zh=0,this.needsPrelayout()){const o=this.network,r=o.splitIntoSubNetworks(!1);let l=r.iterator;for(;l.next();){const h=l.value;this.doConnectedSubnetLayout(h)}for(l=r.iterator,this.g3(l,o),l=r.iterator;l.next();){const h=l.value,f=h.vertexes.iterator;for(;f.next();){const c=f.value;o.addVertex(c)}const a=h.edges.iterator;for(;a.next();){const c=a.value;o.addEdge(c)}}}else this.SD(this.network,this.maxIterations);this.updateParts()}this.maxIterations=e,this.isValidLayout=!0}needsPrelayout(){if(this.network===null||this.network.vertexes.count<3)return!1;let t=0,i=0;const e=this.network.vertexes.first().bounds,s=this.network.vertexes.iterator;for(;s.next();){const n=s.value,o=n.bounds;if(isNaN(n.x)||isNaN(n.y)||o.intersectsRect(e)&&(t++,t>2))return!0;if(i>10)return!1;i++}return!1}doConnectedSubnetLayout(t){let i=t.vertexes.iterator;for(;i.next();){const l=i.value;l.hierarchicalVertexes.add(l)}let e=t,s=this.$c;if(isNaN(s)&&(s=t.edges.count/t.vertexes.count),s<t.vertexes.count)for(;e.vertexes.count>Math.max(100,Math.sqrt(s*t.vertexes.count));)e=this.coarsenNetwork(e);let n=0;i=e.vertexes.iterator;let o=this.randomNumberGenerator;for(o===null&&(this.randomNumberGenerator=o=new RandomNumberGenerator(0));i.next();){i.value.idInCluster=n++;const l=10*(o.random()-.5),h=10*(o.random()-.5);this.isFixed(i.value)||(i.value.x=l,i.value.y=h);const f=i.value.hierarchicalVertexes.iterator;for(;f.next();)this.isFixed(f.value)||(f.value.x=l,f.value.y=h)}const r=this.computePairwiseDistances(e);this.m3(e,r,this.maxPrelayoutIterations,t.vertexes.count),this.SD(t,this.maxIterations)}computePairwiseDistances(t){const i=t.vertexes.count,e=new Array(i);for(let r=0;r<i;r++)e[r]=new Array(i).fill(-1),e[r][r]=0;const s=t.vertexes.iterator;let n=new Map,o=[];for(;s.next();){const r=s.value;for(o=[r],n=new Map,n.set(r.idInCluster,0);o.length>0;){const l=o.shift(),h=l.vertexes.iterator;for(;h.next();){const f=h.value;n.has(f.idInCluster)||(n.set(f.idInCluster,n.get(l.idInCluster)+1),o.push(f))}}for(let l=0;l<i;l++){const h=Math.min(e[r.idInCluster][l],e[l][r.idInCluster]),f=n.get(l);(h<0||f<h)&&(e[r.idInCluster][l]=f,e[l][r.idInCluster]=f)}}return e}coarsenNetwork(t){const i=this.createNetwork(),e=new Map;let s=0,n=t.vertexes.iterator;for(;n.next();)n.value.idInCluster=s++;for(n=t.vertexes.iterator;n.next();){const r=n.value;if(e.has(r.idInCluster))continue;let l=Number.MAX_SAFE_INTEGER,h=null;const f=r.vertexes.iterator;for(;f.next();){const c=f.value;e.has(c.idInCluster)||c.hierarchicalVertexes.length<l&&(l=c.hierarchicalVertexes.length,h=c)}const a=i.createVertex();a.hierarchicalVertexes.addAll(r.hierarchicalVertexes),h!=null&&a.hierarchicalVertexes.addAll(h.hierarchicalVertexes),e.set(r.idInCluster,a),h!=null&&e.set(h.idInCluster,a),i.addVertex(a)}const o=t.edges.iterator;for(;o.next();){const r=o.value,l=e.get(r.fromVertex.idInCluster),h=e.get(r.toVertex.idInCluster);if(l===h)continue;const f=i.createEdge();f.fromVertex=l||null,f.toVertex=h||null,i.addEdge(f)}return i}Ew(t,i){let e=!0;const s=t.vertexes.iterator;for(;s.next();){const n=s.value;e?(e=!1,i.set(n.bounds)):i.unionRect(n.bounds)}return i}g3(t,i){Debug&&U.e(i,ForceDirectedNetwork,ForceDirectedLayout,\"arrangeConnectedGraphs:singletons\");const e=this.arrangementSpacing,s=t.count;let n=!0,o=0,r=0;const l=U.lt();for(let c=0;c<s+i.vertexes.count+2;c++)l[c]=null;let h=0;t.reset();const f=Rect.a();let a;for(;t.next();){const c=t.value;if(this.Ew(c,f),n)n=!1,o=f.x+f.width/2,r=f.y+f.height/2,l[0]=new Point(f.x+f.width+e.width,f.y),l[1]=new Point(f.x,f.y+f.height+e.height),h=2;else{const u=this.MD(l,h,o,r,f.width,f.height,e),d=l[u],m=new Point(d.x+f.width+e.width,d.y),g=new Point(d.x,d.y+f.height+e.height);u+1<h&&l.splice(u+1,0,null),l[u]=m,l[u+1]=g,h++;const p=d.x-f.x,w=d.y-f.y;for(a=c.vertexes.iterator;a.next();){const x=a.value;this.isFixed(x)||(x.centerX+=p,x.centerY+=w)}}}for(Rect.o(f),a=i.vertexes.iterator;a.next();){const c=a.value,u=c.bounds;if(h<2){o=u.x+u.width/2,r=u.y+u.height/2,l[0]=new Point(u.x+u.width+e.width,u.y),l[1]=new Point(u.x,u.y+u.height+e.height),h=2;continue}const d=this.MD(l,h,o,r,u.width,u.height,e),m=l[d],g=new Point(m.x+u.width+e.width,m.y),p=new Point(m.x,m.y+u.height+e.height);d+1<h&&l.splice(d+1,0,null),l[d]=g,l[d+1]=p,h++,this.isFixed(c)||(c.centerX=m.x+c.width/2,c.centerY=m.y+c.height/2)}U.tt(l)}MD(t,i,e,s,n,o,r){let l=9e19,h=-1;t:for(let f=0;f<i;f++){const a=t[f],c=a.x-e,u=a.y-s,d=c*c+u*u;if(d<l){for(let m=f-1;m>=0;m--)if(t[m].y>a.y&&t[m].x-a.x<n+r.width)continue t;for(let m=f+1;m<i;m++)if(t[m].x>a.x&&t[m].y-a.y<o+r.height)continue t;h=f,l=d}}return h}eC(){if(!this.comments)return;const t=this.network.vertexes.iterator;for(;t.next();){const i=t.value;this.addComments(i)}}addComments(t){const i=t.node;if(i!==null){const e=i.findNodesConnected();for(;e.next();){const s=e.value;if(s.category!==\"Comment\"||!s.isVisible())continue;let n=this.network.findVertex(s);n===null&&(n=this.network.addNode(s)),n.charge=this.defaultCommentElectricalCharge;let o=null;const r=n.destinationEdges;for(;r.next();){const l=r.value;if(l.toVertex===t){o=l;break}}if(o===null){const l=n.sourceEdges;for(;l.next();){const h=l.value;if(h.fromVertex===t){o=h;break}}}o===null&&(o=this.network.linkVertexes(t,n,null)),o.length=this.defaultCommentSpringLength}}}PD(t,i){const e=t.bounds,s=e.x,n=e.y,o=e.width,r=e.height,l=i.bounds,h=l.x,f=l.y,a=l.width,c=l.height;if(s+o<h)if(n>f+c){const u=s+o-h,d=n-f-c;return Geo.Dw(u*u+d*d)}else if(n+r<f){const u=s+o-h,d=n+r-f;return Geo.Dw(u*u+d*d)}else return h-(s+o);else if(s>h+a)if(n>f+c){const u=s-h-a,d=n-f-c;return Geo.Dw(u*u+d*d)}else if(n+r<f){const u=s-h-a,d=n+r-f;return Geo.Dw(u*u+d*d)}else return s-(h+a);else return n>f+c?n-(f+c):n+r<f?f-(n+r):.1}SD(t,i){Debug&&U.r(i,ForceDirectedLayout,\"performIterations:num\");const e=this.zh+i;for(;this.zh<e&&(this.zh++,!!this.p3(t)););}p3(t){const i=t.vertexes.toArray();if(i.length<=0)return!1;const e=i[0];e.forceX=0,e.forceY=0;let s=e.centerX,n=s,o=e.centerY,r=o;for(let m=1;m<i.length;m++){const g=i[m];g.forceX=0,g.forceY=0;const p=g.centerX,w=g.centerY;s=Math.min(s,p),n=Math.max(n,p),o=Math.min(o,w),r=Math.max(r,w)}const l=n-s>r-o;l?i.sort((m,g)=>m===null||g===null||m===g?0:m.centerX-g.centerX):i.sort((m,g)=>m===null||g===null||m===g?0:m.centerY-g.centerY);const h=this.qc;let f=0,a=0,c=0;for(let m=0;m<i.length;m++){const g=i[m],p=g.bounds,w=g.focus,x=p.x+w.x,k=p.y+w.y;a=g.charge*this.electricalFieldX(x,k),c=g.charge*this.electricalFieldY(x,k),a+=g.mass*this.gravitationalFieldX(x,k),c+=g.mass*this.gravitationalFieldY(x,k),g.forceX+=a,g.forceY+=c;for(let b=m+1;b<i.length;b++){const S=i[b];if(!this.shouldInteract(g,S)||b===m)continue;const M=S.bounds,A=S.focus,C=M.x+A.x,P=M.y+A.y;if(x-C>h||C-x>h){if(l)break;continue}if(k-P>h||P-k>h){if(!l)break;continue}const N=this.PD(g,S),T=2*g.charge,L=2*S.charge;if(N>1)f=T*L/(N*N),a=f*(x-C)/N,c=f*(k-P)/N;else{let D=this.randomNumberGenerator;D===null&&(this.randomNumberGenerator=D=new RandomNumberGenerator(0));const F=D.random(),I=D.random();if(x>C)a=Math.abs(S.bounds.right-g.bounds.x),a=T*L*(1+a)*F;else if(x<C)a=Math.abs(S.bounds.x-g.bounds.right),a=-(T*L)*(1+a)*F;else{const R=Math.max(S.width,g.width);a=T*L*((1+R)*F-R/2)}if(k>P)c=Math.abs(S.bounds.bottom-g.bounds.y),c=T*L*(1+c)*I;else if(x<C)c=Math.abs(S.bounds.y-g.bounds.bottom),c=-(T*L)*(1+c)*I;else{const R=Math.max(S.height,g.height);c=T*L*((1+R)*I-R/2)}}g.forceX+=a,g.forceY+=c,S.forceX-=a,S.forceY-=c}}const u=t.edges.iterator;for(;u.next();){const m=u.value,g=m.fromVertex,p=m.toVertex,w=g.bounds,x=g.focus,k=w.x+x.x,b=w.y+x.y,S=p.bounds,M=p.focus,A=S.x+M.x,C=S.y+M.y,P=this.PD(g,p);P>1&&(f=.1*m.stiffness*(P-m.length),a=f*.5*(g.width+p.height)*(k-A)/P,c=f*.5*(g.width+p.height)*(b-C)/P),g.forceX-=a,g.forceY-=c,p.forceX+=a,p.forceY+=c}let d=0;for(let m=0;m<i.length;m++){const g=i[m];this.isFixed(g)?this.moveFixedVertex(g):d=Math.max(d,this.moveVertex(g)||0)}return d>this.epsilonDistance*this.epsilonDistance}m3(t,i,e,s){Debug&&U.r(e,ForceDirectedLayout,\"performIterations:num\");const n=this.zh+e,o=Math.sqrt(s);this.Wy=this.rf*t.vertexes.count;const r=t.vertexes.toArray();let l=0,h=0,f=0;for(;this.zh<n;){this.zh++,h=l,l=0;for(let a=0;a<r.length;a++){r[a].forceX=0,r[a].forceY=0;for(let u=0;u<r.length;u++){if(a===u)continue;const d=Math.sqrt((r[a].centerX-r[u].centerX)**2+(r[a].centerY-r[u].centerY)**2),m=i[r[a].idInCluster][r[u].idInCluster],g=(d-this.rf*o*m)/d;r[a].forceX+=g*(r[u].x-r[a].x),r[a].forceY+=g*(r[u].y-r[a].y)}const c=Math.sqrt(r[a].forceX*r[a].forceX+r[a].forceY*r[a].forceY);if(c>0){r[a].forceX=this.Wy*r[a].forceX/c,r[a].forceY=this.Wy*r[a].forceY/c,this.isFixed(r[a])||(r[a].x+=r[a].forceX,r[a].y+=r[a].forceY);const u=r[a].hierarchicalVertexes.iterator;for(;u.next();){const d=u.value;this.isFixed(d)||(d.centerX+=r[a].forceX,d.centerY+=r[a].forceY)}}l+=c*c}if(l>=h){if(f++,f>=5)break}else f=0;this.Wy*=.95}}moveVertex(t){let i=t.forceX,e=t.forceY;const s=this.moveLimit;return i<-s?i=-s:i>s&&(i=s),e<-s?e=-s:e>s&&(e=s),t.centerX+=i,t.centerY+=e,i*i+e*e}shouldInteract(t,i){return!0}moveFixedVertex(t){}commitLayout(){this.jy(),this.commitNodes(),this.isRouting&&this.commitLinks()}jy(){if(!this.setsPortSpots)return;const t=this.network.edges.iterator;for(;t.next();){const e=t.value.link;e!==null&&(e.fromSpot=Spot.Default,e.toSpot=Spot.Default)}}commitNodes(){let t=0,i=0;if(this.arrangesToOrigin){const n=Rect.a();this.Ew(this.network,n);const o=this.arrangementOrigin;t=o.x-n.x,i=o.y-n.y,Rect.o(n)}const e=Rect.a(),s=this.network.vertexes.iterator;for(;s.next();){const n=s.value;(t!==0||i!==0)&&(e.c(n.bounds),e.x+=t,e.y+=i,n.bounds=e),n.commit()}Rect.o(e)}commitLinks(){const t=this.network.edges.iterator;for(;t.next();)t.value.commit()}springStiffness(t){const i=t.stiffness;return isNaN(i)?this.Wc:i}springLength(t){const i=t.length;return isNaN(i)?this.jc:i}electricalCharge(t){const i=t.charge;return isNaN(i)?this.vc:i}electricalFieldX(t,i){return 0}electricalFieldY(t,i){return 0}gravitationalMass(t){const i=t.mass;return isNaN(i)?this.Jc:i}gravitationalFieldX(t,i){return 0}gravitationalFieldY(t,i){return 0}isFixed(t){return t.isFixed}get currentIteration(){return this.zh}get arrangementSpacing(){return this.Ts}set arrangementSpacing(t){U.e(t,Size,ForceDirectedLayout,\"arrangementSpacing\"),this.Ts.equals(t)||(this.Ts.c(t),this.invalidateLayout())}get arrangesToOrigin(){return this.bg}set arrangesToOrigin(t){this.bg!==t&&(U.i(t,\"boolean\",ForceDirectedLayout,\"arrangesToOrigin\"),this.bg=t,this.invalidateLayout())}get setsPortSpots(){return this.Fn}set setsPortSpots(t){this.Fn!==t&&(U.i(t,\"boolean\",ForceDirectedLayout,\"setsPortSpots\"),this.Fn=t,this.invalidateLayout())}get comments(){return this.Be}set comments(t){this.Be!==t&&(U.i(t,\"boolean\",ForceDirectedLayout,\"comments\"),this.Be=t,this.invalidateLayout())}get maxPrelayoutIterations(){return this.kg}set maxPrelayoutIterations(t){this.kg!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"maxPrelayoutIterations\"),t>=0&&(this.kg=t,this.invalidateLayout()))}get maxIterations(){return this.Sg}set maxIterations(t){this.Sg!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"maxIterations\"),t>=0&&(this.Sg=t,this.invalidateLayout()))}get epsilonDistance(){return this.Mg}set epsilonDistance(t){this.Mg!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"epsilonDistance\"),t>0&&(this.Mg=t,this.invalidateLayout()))}get infinityDistance(){return this.qc}set infinityDistance(t){this.qc!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"infinityDistance\"),t>1&&(this.qc=t,this.invalidateLayout()))}get moveLimit(){return this.Pg}set moveLimit(t){this.Pg!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"moveLimit\"),this.Pg=t,this.invalidateLayout())}get randomNumberGenerator(){return this.Ng}set randomNumberGenerator(t){this.Ng!==t&&(t!==null&&!U.rt(t.random)&&U.n('ForceDirectedLayout.randomNumberGenerator must have a \"random()\" function on it: '+t),this.Ng=t)}get defaultSpringStiffness(){return this.Wc}set defaultSpringStiffness(t){this.Wc!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"defaultSpringStiffness\"),this.Wc=t,this.invalidateLayout())}get defaultSpringLength(){return this.jc}set defaultSpringLength(t){this.jc!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"defaultSpringLength\"),this.jc=t,this.invalidateLayout())}get defaultElectricalCharge(){return this.vc}set defaultElectricalCharge(t){this.vc!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"defaultElectricalCharge\"),this.vc=t,this.invalidateLayout())}get defaultGravitationalMass(){return this.Jc}set defaultGravitationalMass(t){this.Jc!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"defaultGravitationalMass\"),this.Jc=t,this.invalidateLayout())}get defaultCommentSpringLength(){return this.Cg}set defaultCommentSpringLength(t){this.Cg!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"defaultCommentSpringLength\"),this.Cg=t,this.invalidateLayout())}get defaultCommentElectricalCharge(){return this.Ag}set defaultCommentElectricalCharge(t){this.Ag!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"defaultCommentElectricalCharge\"),this.Ag=t,this.invalidateLayout())}get prelayoutQuality(){return this.$c}set prelayoutQuality(t){this.$c!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"prelayoutQuality\"),this.$c=t,this.invalidateLayout())}get prelayoutSpread(){return this.rf}set prelayoutSpread(t){this.rf!==t&&(U.i(t,\"number\",ForceDirectedLayout,\"prelayoutSpread\"),this.rf=t,this.invalidateLayout())}}class ForceDirectedNetwork extends LayoutNetwork{constructor(t){super(t)}createVertex(){return new ForceDirectedVertex(this)}createEdge(){return new ForceDirectedEdge(this)}}class ForceDirectedVertex extends LayoutVertex{nk;ok;rk;lk;hk;hierarchicalVertexes;idInCluster;constructor(t){super(t),this.nk=!1,this.ok=NaN,this.rk=NaN,this.lk=0,this.hk=0,this.hierarchicalVertexes=new List,this.idInCluster=-1}get isFixed(){return this.nk}set isFixed(t){this.nk!==t&&(U.i(t,\"boolean\",ForceDirectedVertex,\"isFixed\"),this.nk=t)}get charge(){return this.ok}set charge(t){this.ok!==t&&(U.i(t,\"number\",ForceDirectedVertex,\"charge\"),this.ok=t)}get mass(){return this.rk}set mass(t){this.rk!==t&&(U.i(t,\"number\",ForceDirectedVertex,\"mass\"),this.rk=t)}get forceX(){return this.lk}set forceX(t){this.lk!==t&&(U.i(t,\"number\",ForceDirectedVertex,\"forceX\"),this.lk=t)}get forceY(){return this.hk}set forceY(t){this.hk!==t&&(U.i(t,\"number\",ForceDirectedVertex,\"forceY\"),this.hk=t)}}class ForceDirectedEdge extends LayoutEdge{ak;fk;constructor(t){super(t),this.ak=NaN,this.fk=NaN}get stiffness(){return this.ak}set stiffness(t){this.ak!==t&&(U.i(t,\"number\",ForceDirectedEdge,\"stiffness\"),this.ak=t)}get length(){return this.fk}set length(t){this.fk!==t&&(U.i(t,\"number\",ForceDirectedEdge,\"length\"),this.fk=t)}}class RandomNumberGenerator{I;R;Q;M;A;seed;constructor(t){t===void 0&&(t=42),this.seed=t,this.A=48271,this.M=2147483647,this.Q=this.M/this.A,this.R=this.M%this.A,this.I=1/this.M,this.random()}random(){const t=this.seed/this.Q,i=this.seed%this.Q,e=this.A*i-this.R*t;return e>0?this.seed=e:this.seed=e+this.M,this.seed*this.I}}var LayeredDigraphCycleRemove=(y=>(y[y.DepthFirst=0]=\"DepthFirst\",y[y.Greedy=1]=\"Greedy\",y[y.FromLayers=2]=\"FromLayers\",y))(LayeredDigraphCycleRemove||{}),LayeredDigraphLayering=(y=>(y[y.OptimalLinkLength=10]=\"OptimalLinkLength\",y[y.LongestPathSink=11]=\"LongestPathSink\",y[y.LongestPathSource=12]=\"LongestPathSource\",y))(LayeredDigraphLayering||{}),LayeredDigraphInit=(y=>(y[y.DepthFirstOut=20]=\"DepthFirstOut\",y[y.DepthFirstIn=21]=\"DepthFirstIn\",y[y.Naive=22]=\"Naive\",y))(LayeredDigraphInit||{}),LayeredDigraphAggressive=(y=>(y[y.None=30]=\"None\",y[y.Less=31]=\"Less\",y[y.More=32]=\"More\",y))(LayeredDigraphAggressive||{}),LayeredDigraphPack=(y=>(y[y.None=0]=\"None\",y[y.Expand=1]=\"Expand\",y[y.Straighten=2]=\"Straighten\",y[y.Median=4]=\"Median\",y[y.MaybeExpand=8]=\"MaybeExpand\",y[y.All=15]=\"All\",y))(LayeredDigraphPack||{}),LayeredDigraphAlign=(y=>(y[y.None=0]=\"None\",y[y.UpperLeft=1]=\"UpperLeft\",y[y.UpperRight=2]=\"UpperRight\",y[y.LowerLeft=4]=\"LowerLeft\",y[y.LowerRight=8]=\"LowerRight\",y[y.All=15]=\"All\",y))(LayeredDigraphAlign||{});class LayeredDigraphLayout extends Layout{Ds;_i;S;Zc;Qc;_c;lf;tu;nr;iu;Fn;Ct;vy;qt;Lg;Fs;gi;sn;Rs;Is;Yt;Tg;hf;Dg;nn;eu;or;Rn;In;sC;constructor(t){super(),this.Ds=25,this._i=25,this.S=0,this.Zc=0,this.Qc=10,this._c=20,this.lf=4,this.tu=31,this.nr=15,this.iu=10,this.Fn=!0,this.Ct=-1,this.vy=-1,this.qt=-1,this.Lg=0,this.Fs=0,this.gi=null,this.sn=null,this.Rs=null,this.Is=null,this.Yt=null,this.Tg=0,this.hf=null,this.Dg=null,this.nn=0,this.eu=null,this.or=new Point,this.Rn=[],this.Rn.length=100,this.In=15,this.sC=0,t&&Object.assign(this,t)}cloneProtected(t){super.cloneProtected(t),t.Ds=this.Ds,t._i=this._i,t.S=this.S,t.Zc=this.Zc,t.Qc=this.Qc,t._c=this._c,t.lf=this.lf,t.tu=this.tu,t.nr=this.nr,t.iu=this.iu,t.Fn=this.Fn,t.In=this.In}ai(t){t in LayeredDigraphAggressive?this.aggressiveOption=t:t in LayeredDigraphCycleRemove?this.cycleRemoveOption=t:t in LayeredDigraphInit?this.initializeOption=t:t in LayeredDigraphLayering?this.layeringOption=t:super.ai(t)}createNetwork(){return new LayeredDigraphNetwork(this)}doLayout(t){Debug&&t===null&&U.n(\"Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts\"),this.network===null&&(this.network=this.makeNetwork(t)),this.arrangementOrigin=this.initialOrigin(this.arrangementOrigin),this.y3(),this.network.vertexes.count>0&&(this.network.deleteSelfEdges(),this.cycleRemoveOption!==2&&this.removeCycles(),this.w3(),this.cycleRemoveOption===2&&this.removeCycles(),this.x3(),this.b3(),this.k3(),this.reduceCrossings(),this.straightenAndPack(),this.updateParts()),this.network=null,this.isValidLayout=!0}linkMinLength(t){return 1}linkLengthWeight(t){return 1}linkStraightenWeight(t){const i=t.fromVertex.node||t.fromVertex.data,e=t.toVertex.node||t.toVertex.data;return i===null&&e===null?8:i===null||e===null?4:1}nodeMinLayerSpace(t,i){return t.node===null&&t.data===null?0:this.S===90||this.S===270?i?t.focus.y+10:t.bounds.height-t.focus.y+10:i?t.focus.x+10:t.bounds.width-t.focus.x+10}nodeMinColumnSpace(t,i){if(t.node===null&&t.data===null)return 0;const e=i?t.ck:t.uk;if(e!==null)return e;const s=this.S;return s===90||s===270?i?t.ck=t.focus.x/this._i+1|0:t.uk=(t.bounds.width-t.focus.x)/this._i+1|0:i?t.ck=t.focus.y/this._i+1|0:t.uk=(t.bounds.height-t.focus.y)/this._i+1|0}te(){this.hf===null&&(this.hf=[]);let t=0;const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value;this.hf[t]=e.layer,t++,this.hf[t]=e.column,t++,this.hf[t]=e.index,t++}return this.hf}_e(t){let i=0;const e=this.network.vertexes.iterator;for(;e.next();){const s=e.value;s.layer=t[i],i++,s.column=t[i],i++,s.index=t[i],i++}}ND(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"crossingMatrix:unfixedLayer\"),U.r(i,LayeredDigraphLayout,\"crossingMatrix:direction\"));const e=this.Xh(t),s=this.gi[t];(this.Dg===null||this.Dg.length<s*s)&&(this.Dg=[]);const n=this.Dg;for(let o=0;o<s;o++){let r=0;const l=e[o],h=l.near;let f=0;h!==null&&h!==l&&h.layer===l.layer&&(r+=Math.max(0,Math.abs(h.index-l.index)-1));let a,c=0,u,d=0,m=0,g=0,p,w=0,x,k=0,b=0,S=0,M;if(i>=0){for(a=e[o].yo,c=0;c<a.length;c++)if(u=a[c],u.valid&&u.fromVertex.layer!==t)for(d=u.fromVertex.index,m=u.portToPos,g=u.portFromPos,w=c+1;w<a.length;w++)x=a[w],x.valid&&x.fromVertex.layer!==t&&(k=x.fromVertex.index,b=x.portToPos,S=x.portFromPos,m<b&&(d>k||d===k&&g>S)&&r++,b<m&&(k>d||k===d&&S>g)&&r++)}if(i<=0){for(a=e[o].tr,c=0;c<a.length;c++)if(u=a[c],u.valid&&u.toVertex.layer!==t)for(d=u.toVertex.index,m=u.portToPos,g=u.portFromPos,w=c+1;w<a.length;w++)x=a[w],x.valid&&x.toVertex.layer!==t&&(k=x.toVertex.index,b=x.portToPos,S=x.portFromPos,g<S&&(d>k||d===k&&m>b)&&r++,S<g&&(k>d||k===d&&b>m)&&r++)}for(n[o*s+o]=r,f=o+1;f<s;f++){let A=0,C=0;if(i>=0){for(p=e[o].yo,M=e[f].yo,c=0;c<p.length;c++)if(u=p[c],u.valid&&u.fromVertex.layer!==t)for(d=u.fromVertex.index,m=u.portToPos,g=u.portFromPos,w=0;w<M.length;w++)x=M[w],x.valid&&x.fromVertex.layer!==t&&(k=x.fromVertex.index,b=x.portToPos,S=x.portFromPos,(d<k||d===k&&g<S)&&C++,(k<d||k===d&&S<g)&&A++)}if(i<=0){for(p=e[o].tr,M=e[f].tr,c=0;c<p.length;c++)if(u=p[c],u.valid&&u.toVertex.layer!==t)for(d=u.toVertex.index,m=u.portToPos,g=u.portFromPos,w=0;w<M.length;w++)x=M[w],x.valid&&x.toVertex.layer!==t&&(k=x.toVertex.index,b=x.portToPos,S=x.portFromPos,(d<k||d===k&&m<b)&&C++,(k<d||k===d&&b<m)&&A++)}n[o*s+f]=A,n[f*s+o]=C}}return this.Yh(t,e),n}countCrossings(){let t=0;for(let i=0;i<=this.Ct;i++){const e=this.ND(i,1),s=this.gi[i];for(let n=0;n<s;n++)for(let o=n;o<s;o++)t+=e[n*s+o]}return t}S3(t,i,e){const s=this.Xh(t),n=this.gi[t];let o=0;for(let r=0;r<n;r++){let l=null;i<=0&&(l=s[r].yo);let h=null;i>=0&&(h=s[r].tr);let f,a=0,c=0;if(l!==null)for(let u=0;u<l.length;u++)f=l[u],f.valid&&f.fromVertex.layer!==t&&(a=f.fromVertex.column+f.portFromColOffset,c=f.toVertex.column+f.portToColOffset,e?o+=Math.abs(a-c)*this.linkStraightenWeight(f):o+=Math.abs(a-c));if(h!==null)for(let u=0;u<h.length;u++)f=h[u],f.valid&&f.toVertex.layer!==t&&(a=f.fromVertex.column+f.portFromColOffset,c=f.toVertex.column+f.portToColOffset,e?o+=(Math.abs(a-c)+1)*this.linkStraightenWeight(f):o+=Math.abs(a-c))}return this.Yh(t,s),o}dk(t){let i=0;for(let e=0;e<=this.Ct;e++)i+=this.S3(e,1,t);return i}Jy(){let t=1/0;this.qt=-1;const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value;t=Math.min(t,e.column-this.nodeMinColumnSpace(e,!0)),this.qt=Math.max(this.qt,e.column+this.nodeMinColumnSpace(e,!1))}for(i.reset();i.next();){const e=i.value;e.column-=t}this.qt-=t}$y(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"barycenters:unfixedLayer\"),U.r(i,LayeredDigraphLayout,\"barycenters:direction\"));const e=this.Xh(t),s=this.gi[t],n=[];for(let o=0;o<s;o++){const r=e[o];let l=null;i<=0&&(l=r.yo);let h=null;i>=0&&(h=r.tr);let f=0,a=0;const c=r.near;c!==null&&c.layer===r.layer&&(f+=c.column-1,a++);let u;if(l!==null)for(let d=0;d<l.length;d++){u=l[d];const m=u.fromVertex;u.valid&&!u.rev&&m.layer!==t&&(f+=m.column,a++)}if(h!==null)for(let d=0;d<h.length;d++){u=h[d];const m=u.toVertex;u.valid&&!u.rev&&m.layer!==t&&(f+=m.column,a++)}a===0?n[o]=-1:n[o]=f/a}return this.Yh(t,e),n}CD(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"medians:unfixedLayer\"),U.r(i,LayeredDigraphLayout,\"medians:direction\"));const e=this.Xh(t),s=this.gi[t],n=[];for(let o=0;o<s;o++){const r=e[o];let l=null;i<=0&&(l=r.yo);let h=null;i>=0&&(h=r.tr);let f=0;const a=[],c=r.near;c!==null&&c.layer===r.layer&&(a[f]=c.column-1,f++);let u;if(l!==null)for(let d=0;d<l.length;d++){u=l[d];const m=u.fromVertex;u.valid&&!u.rev&&m.layer!==t&&(a[f]=m.column+u.portFromColOffset,f++)}if(h!==null)for(let d=0;d<h.length;d++){u=h[d];const m=u.toVertex;u.valid&&!u.rev&&m.layer!==t&&(a[f]=m.column+u.portToColOffset,f++)}if(f===0)n[o]=-1;else{a.sort((m,g)=>m-g);const d=f>>1;f&1?n[o]=a[d]:n[o]=a[d-1]+a[d]>>1}}return this.Yh(t,e),n}Zy(t,i,e,s,n){if(t.component===e){t.component=i;let o=0,r=0;if(s){const l=t.destinationEdges;for(;l.next();){const h=l.value,f=h.toVertex;o=t.layer-f.layer,r=this.linkMinLength(h),o===r&&this.Zy(f,i,e,s,n)}}if(n){const l=t.sourceEdges;for(;l.next();){const h=l.value,f=h.fromVertex;o=f.layer-t.layer,r=this.linkMinLength(h),o===r&&this.Zy(f,i,e,s,n)}}}}nC(t,i,e,s,n){if(t.component===e){if(t.component=i,s){const o=t.destinationEdges;for(;o.next();){const l=o.value.toVertex;this.nC(l,i,e,s,n)}}if(n){const o=t.sourceEdges;for(;o.next();){const l=o.value.fromVertex;this.nC(l,i,e,s,n)}}}}removeCycles(){const t=this.network.edges.iterator;for(;t.next();){const i=t.value;i.rev=!1}switch(this.Zc){default:case 1:this.M3();break;case 0:this.P3();break;case 2:this.N3();break}}N3(){const t=this.network,i=t.vertexes.iterator;let e=1/0;for(;i.next();){const s=i.value;e=Math.min(e,s.layer)}if(e<1/0){if(e<0)for(i.reset();i.next();){const r=i.value;r.layer-=e}const s=[];for(i.reset();i.next();){const r=i.value,l=s[r.layer];l===void 0?s[r.layer]=[r]:l.push(r)}let n=0;for(let r=0;r<s.length;r++){const l=s[r];if(!l||l.length===0)n++;else if(r>0)for(let h=0;h<l.length;h++){const f=l[h];f.layer-=n}}const o=t.edges.iterator;for(;o.next();){const r=o.value,l=r.fromVertex,h=r.toVertex;l.layer<h.layer&&(t.reverseEdge(r),r.rev=!0)}}}M3(){const t=this.network;let i=0,e=t.vertexes.count-1;const s=[];s.length=e+1;const n=t.vertexes.iterator;for(;n.next();){const r=n.value;r.ie=!0}for(;this.C3(t)!==null;){let r;for(r=this.AD(t);r!==null;)s[e]=r,e--,r.ie=!1,r=this.AD(t);for(r=this.LD(t);r!==null;)s[i]=r,i++,r.ie=!1,r=this.LD(t);r=this.A3(t),r!==null&&(s[i]=r,i++,r.ie=!1)}for(let r=0;r<t.vertexes.count;r++)s[r].index=r;const o=t.edges.iterator;for(;o.next();){const r=o.value,l=r.fromVertex,h=r.toVertex;l.index>h.index&&(t.reverseEdge(r),r.rev=!0)}}C3(t){const i=t.vertexes.iterator;for(;i.next();){const e=i.value;if(e.ie)return e}return null}AD(t){const i=t.vertexes.iterator;for(;i.next();){const e=i.value;if(e.ie){let s=!0;const n=e.destinationEdges;for(;n.next();)if(n.value.toVertex.ie){s=!1;break}if(s)return e}}return null}LD(t){const i=t.vertexes.iterator;for(;i.next();){const e=i.value;if(e.ie){let s=!0;const n=e.sourceEdges;for(;n.next();)if(n.value.fromVertex.ie){s=!1;break}if(s)return e}}return null}A3(t){let i=null,e=0;const s=this.network.vertexes.iterator;for(;s.next();){const n=s.value;if(n.ie){let o=0;const r=n.destinationEdges;for(;r.next();)r.value.toVertex.ie&&o++;let l=0;const h=n.sourceEdges;for(;h.next();)h.value.fromVertex.ie&&l++;(i===null||e<o-l)&&(i=n,e=o-l)}}return i}P3(){const t=this.network.vertexes.iterator;for(;t.next();){const e=t.value;e.su=-1,e.Wn=-1}const i=this.network.edges.iterator;for(;i.next();){const e=i.value;e.forest=!1}for(this.Tg=0,t.reset();t.next();){const e=t.value;e.sourceEdges.count===0&&this.oC(e)}for(t.reset();t.next();){const e=t.value;e.su===-1&&this.oC(e)}for(i.reset();i.next();){const e=i.value;if(!e.forest){const s=e.fromVertex,n=s.su,o=s.Wn,r=e.toVertex,l=r.su,h=r.Wn;l<n&&o<h&&(this.network.reverseEdge(e),e.rev=!0)}}}oC(t){t.su=this.Tg,this.Tg++;const i=t.destinationEdges;for(;i.next();){const e=i.value,s=e.toVertex;s.su===-1&&(e.forest=!0,this.oC(s))}t.Wn=this.Tg,this.Tg++}w3(){const t=this.network.vertexes.iterator;for(;t.next();){const i=t.value;i.layer=-1}for(this.Ct=-1,this.assignLayers(),t.reset();t.next();){const i=t.value;this.Ct=Math.max(this.Ct,i.layer)}}assignLayers(){switch(this.Qc){case 11:this.TD();break;case 12:this.L3();break;default:case 10:this.T3();break}}TD(){const t=this.network.vertexes.iterator;for(;t.next();){const i=t.value,e=this.DD(i);this.Ct=Math.max(e,this.Ct)}}DD(t){let i=0;if(t.layer===-1){const e=t.destinationEdges;for(;e.next();){const s=e.value,n=s.toVertex,o=this.linkMinLength(s);i=Math.max(i,this.DD(n)+o)}t.layer=i}else i=t.layer;return i}L3(){let t=0;const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value;t=this.FD(e),this.Ct=Math.max(t,this.Ct)}for(i.reset();i.next();){const e=i.value;e.layer=this.Ct-e.layer}}FD(t){let i=0;if(t.layer===-1){const e=t.sourceEdges;for(;e.next();){const s=e.value,n=s.fromVertex,o=this.linkMinLength(s);i=Math.max(i,this.FD(n)+o)}t.layer=i}else i=t.layer;return i}T3(){this.TD();const t=this.network.vertexes.iterator;for(;t.next();){const e=t.value;e.ie=!1}for(t.reset();t.next();){const e=t.value;e.sourceEdges.count===0&&this.RD(e)}let i=1/0;for(t.reset();t.next();){const e=t.value;i=Math.min(i,e.layer)}for(this.Ct=-1,t.reset();t.next();){const e=t.value;e.layer-=i,this.Ct=Math.max(this.Ct,e.layer)}}RD(t){if(!t.ie){t.ie=!0;const i=t.destinationEdges;for(;i.next();){const s=i.value.toVertex;this.RD(s)}this.D3(t),this.F3(t)}}D3(t){const i=this.network.vertexes.iterator;for(;i.next();){const r=i.value;r.component=-1}const e=0,s=1,n=t.yo;let o=n.length;for(let r=0;r<o;r++){const l=n[r],h=l.fromVertex,f=l.toVertex,a=this.linkMinLength(l);h.layer-f.layer>a&&this.Zy(h,e,-1,!0,!1)}for(this.Zy(t,s,-1,!0,!0);t.component!==e;){let r=0,l=1/0,h=0,f=null;const a=this.network.vertexes.iterator;for(;a.next();){const c=a.value;if(c.component===s){let u=0,d=!1;const m=c.yo;o=m.length;for(let p=0;p<o;p++){const w=m[p],x=w.fromVertex;if(u+=this.linkLengthWeight(w),x.component!==s){r+=this.linkLengthWeight(w);const k=x.layer-c.layer,b=this.linkMinLength(w);l=Math.min(l,k-b)}}const g=c.tr;o=g.length;for(let p=0;p<o;p++){const w=g[p],x=w.toVertex;u-=this.linkLengthWeight(w),x.component!==s?r-=this.linkLengthWeight(w):d=!0}(f===null||u<h)&&!d&&(f=c,h=u)}}if(r>0){for(i.reset();i.next();){const c=i.value;c.component===s&&(c.layer+=l)}t.component=e}else f.component=e}}F3(t){const i=this.network.vertexes.iterator;for(;i.next();){const n=i.value;n.component=-1}const e=0,s=1;for(this.Zy(t,s,-1,!0,!1);t.component!==e;){let n=0,o=1/0,r=0,l=null;const h=this.network.vertexes.iterator;for(;h.next();){const f=h.value;if(f.component===s){let a=0,c=!1;const u=f.yo;let d=u.length;for(let g=0;g<d;g++){const p=u[g],w=p.fromVertex;a+=this.linkLengthWeight(p),w.component!==s?n+=this.linkLengthWeight(p):c=!0}const m=f.tr;d=m.length;for(let g=0;g<d;g++){const p=m[g],w=p.toVertex;if(a-=this.linkLengthWeight(p),w.component!==s){n-=this.linkLengthWeight(p);const x=f.layer-w.layer,k=this.linkMinLength(p);o=Math.min(o,x-k)}}(l===null||a>r)&&!c&&(l=f,r=a)}}if(n<0){for(i.reset();i.next();){const f=i.value;f.component===s&&(f.layer-=o)}t.component=e}else l.component=e}}x3(){const t=this.network,i=[],e=t.edges.iterator;for(;e.next();){const s=e.value;s.valid=!1,i.push(s)}for(let s=0;s<i.length;s++){const n=i[s];let o=n.fromVertex;const r=n.toVertex;if(n.valid||(o.node===null&&o.data===null||r.node===null&&r.data===null)&&o.layer===r.layer)continue;let l=0,h=0,f=0,a=0;if(n.link!==null){const S=n.link;if(S===null)continue;const M=o.node,A=r.node;if(M===null||A===null)continue;let C=S.fromNode,P=S.toNode,N=S.fromPort;for(;N!==null&&!N.isVisibleObject();)N=N.panel;let T=S.toPort;for(;T!==null&&!T.isVisibleObject();)T=T.panel;if(n.rev){const Y=C,K=N;C=P,N=T,P=Y,T=K}const L=o.focus,D=r.focus,F=n.rev?r.bounds:o.bounds,I=Point.a();M!==C?F.isReal()&&C.isVisible()?C.actualBounds.isReal()?(C.getRelativePoint(N,Spot.Center,I),I.x+=C.actualBounds.x-F.x,I.y+=C.actualBounds.y-F.y):(C.getRelativePoint(N,Spot.Center,I),I.isReal()||I.c(L)):I.c(L):F.isReal()?(C.getRelativePoint(N,Spot.Center,I),I.isReal()||I.c(L)):I.c(L);const R=n.rev?o.bounds:r.bounds,O=Point.a();A!==P?R.isReal()&&P.isVisible()?P.actualBounds.isReal()?(P.getRelativePoint(T,Spot.Center,O),O.x+=P.actualBounds.x-R.x,O.y+=P.actualBounds.y-R.y):(P.getRelativePoint(T,Spot.Center,O),O.isReal()||O.c(D)):O.c(D):R.isReal()?(P.getRelativePoint(T,Spot.Center,O),O.isReal()||O.c(D)):O.c(D),this.S===90||this.S===270?(l=Math.round((I.x-L.x)/this._i),f=I.x,h=Math.round((O.x-D.x)/this._i),a=O.x):(l=Math.round((I.y-L.y)/this._i),f=I.y,h=Math.round((O.y-D.y)/this._i),a=O.y),Point.o(I),Point.o(O),n.portFromColOffset=l,n.portFromPos=f,n.portToColOffset=h,n.portToPos=a}else n.portFromColOffset=0,n.portFromPos=0,n.portToColOffset=0,n.portToPos=0;let c=o.layer;const u=r.layer,d=this.R3(n),m=d===1||d===3,g=d===2||d===3;let p,w,x=null,k;g&&(x=this.I3(o,r),k=1,w=t.createVertex(),w.node=null,w.gk=1,w.layer=c,w.near=o,t.addVertex(w),p=t.linkVertexes(o,w,n.link),p.valid=!1,p.rev=n.rev,p.portFromColOffset=l,p.portToColOffset=0,p.portFromPos=f,p.portToPos=0,o=w);let b=1;if(m&&b--,c-u>b&&c>0){for(n.valid=!1,w=t.createVertex(),w.node=null,w.gk=2,w.layer=c-1,x&&k<x.length&&w.layer===x[k].layer&&(w.near=x[k++]),t.addVertex(w),p=t.linkVertexes(o,w,n.link),p.valid=!0,p.rev=n.rev,p.portFromColOffset=g?0:l,p.portToColOffset=0,p.portFromPos=g?0:f,p.portToPos=0,o=w,c--;c-u>b&&c>0;)w=t.createVertex(),w.node=null,w.gk=3,w.layer=c-1,x&&k<x.length&&w.layer===x[k].layer&&(w.near=x[k++]),t.addVertex(w),p=t.linkVertexes(o,w,n.link),p.valid=!0,p.rev=n.rev,p.portFromColOffset=0,p.portToColOffset=0,p.portFromPos=0,p.portToPos=0,o=w,c--;p=t.linkVertexes(w,r,n.link),p.valid=!m,m&&(w.near=r),p.rev=n.rev,p.portFromColOffset=0,p.portToColOffset=h,p.portFromPos=0,p.portToPos=a}else n.valid=!0}}R3(t){let i=0;const e=t.link;if(e!==null){const s=e.fromPort,n=e.toPort;if(s!==null&&n!==null){const o=e.fromNode,r=e.toNode;if(o!==null&&r!==null){const l=this.mk(!0),h=this.mk(!1),f=this.setsPortSpots?l:e.computeSpot(!0,s),a=this.setsPortSpots?h:e.computeSpot(!1,n),c=e.isOrthogonal;if(f.isSide()&&f.includesSide(h)&&a.isSide()&&a.includesSide(l))return 0;const u=e.getLinkPoint(o,s,f,!0,c,r,n,Point.a()),d=e.getLinkDirection(o,s,u,f,!0,c,r,n);Point.o(u),(!f.isNone()&&d===this.ID(t,!0)||this.setsPortSpots&&o!==null&&o.ports.count===1&&t.rev)&&(i+=1);const m=e.getLinkPoint(r,n,a,!1,c,o,s,Point.a()),g=e.getLinkDirection(r,n,m,a,!1,c,o,s);Point.o(m),(!a.isNone()&&g===this.ID(t,!1)||this.setsPortSpots&&r!==null&&r.ports.count===1&&t.rev)&&(i+=2)}}}return i}ID(t,i){return this.S===90?i&&!t.rev||!i&&t.rev?270:90:this.S===180?i&&!t.rev||!i&&t.rev?0:180:this.S===270?i&&!t.rev||!i&&t.rev?90:270:i&&!t.rev||!i&&t.rev?180:0}I3(t,i){const e=[];return e.push(i),this.OD(t,e)?e.reverse():[]}OD(t,i){const e=i[i.length-1].sourceEdges.iterator;for(;e.next();){const s=e.value;if(s.rev||!s.valid)continue;const n=s.fromVertex;if(i.push(n),n===t||this.OD(t,i))return!0;i.pop()}return!1}b3(){const t=this.gi=[];for(let e=0;e<=this.Ct;e++)t[e]=0;const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value;e.index=-1}this.initializeIndices(),this.vy=-1,this.Lg=0,this.Fs=0;for(let e=0;e<=this.Ct;e++)t[e]>t[this.Fs]&&(this.vy=t[e]-1,this.Fs=e),t[e]<t[this.Lg]&&(this.Lg=e);this.eu=[];for(let e=0;e<t.length;e++)this.eu[e]=[];for(i.reset();i.next();){const e=i.value,s=e.layer,n=this.eu[s];n[e.index]=e}}initializeIndices(){switch(this._c){default:case 22:this.O3();break;case 20:this.E3();break;case 21:this.B3();break}}O3(){let t=null;const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value;if(e.near&&(t===null&&(t=new Map),e.layer===e.near.layer)){const s=t.get(e.near)||[];s.push(e),t.set(e.near,s)}}for(i.reset();i.next();){const e=i.value;if(e.near)continue;const s=e.layer;if(e.index=this.gi[s],this.gi[s]++,!t)continue;const n=t.get(e);Array.isArray(n)&&n.forEach(o=>{o.index=this.gi[s],this.gi[s]++})}}E3(){let t=null;const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value;if(e.near&&(t===null&&(t=new Map),e.layer===e.near.layer)){const s=t.get(e.near)||[];s.push(e),t.set(e.near,s)}}for(let e=this.Ct;e>=0;e--)for(i.reset();i.next();){const s=i.value;s.layer===e&&s.index===-1&&this.ED(s,t)}}ED(t,i){if(t.near)return;const e=t.layer;if(t.index=this.gi[e],this.gi[e]++,i){const o=i.get(t);Array.isArray(o)&&o.forEach(r=>{r.index=this.gi[e],this.gi[e]++})}const s=t.tr;let n=!0;for(;n;){n=!1;for(let o=0;o<s.length-1;o++){const r=s[o],l=s[o+1];r.portFromColOffset>l.portFromColOffset&&(n=!0,s[o]=l,s[o+1]=r)}}for(let o=0;o<s.length;o++){const r=s[o];if(r.valid){const l=r.toVertex;l.index===-1&&this.ED(l,i)}}}B3(){let t=null;const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value;if(e.near&&(t===null&&(t=new Map),e.layer===e.near.layer)){const s=t.get(e.near)||[];s.push(e),t.set(e.near,s)}}for(let e=0;e<=this.Ct;e++)for(i.reset();i.next();){const s=i.value;s.layer===e&&s.index===-1&&this.BD(s,t)}}BD(t,i){if(t.near)return;const e=t.layer;if(t.index=this.gi[e],this.gi[e]++,i){const h=i.get(t);Array.isArray(h)&&h.forEach(f=>{f.index=this.gi[e],this.gi[e]++})}const s=t.yo;let n=!0,o=0;for(;n;)for(n=!1,o=0;o<s.length-1;o++){const h=s[o],f=s[o+1];h.portToColOffset>f.portToColOffset&&(n=!0,s[o]=f,s[o+1]=h)}let r,l;for(o=0;o<s.length;o++)l=s[o],l.valid&&(r=l.fromVertex,r.index===-1&&this.BD(r,i))}k3(){this.qt=-1;for(let t=0;t<=this.Ct;t++){const i=this.Xh(t);let e=0;const s=this.gi[t];for(let n=0;n<s;n++){const o=i[n];e+=this.nodeMinColumnSpace(o,!0),o.column=e,e+=1,e+=this.nodeMinColumnSpace(o,!1)}this.qt=Math.max(this.qt,e-1),this.Yh(t,i)}}reduceCrossings(){let t=this.countCrossings(),i=this.te(),e=0,s=0,n=0;for(e=0;e<this.lf;e++){for(s=0;s<=this.Ct;s++)this.pk(s,1),this.cs(s,1,!1,1);for(n=this.countCrossings(),n<t&&(t=n,i=this.te()),s=this.Ct;s>=0;s--)this.pk(s,-1),this.cs(s,-1,!1,-1);n=this.countCrossings(),n<t&&(t=n,i=this.te())}for(this._e(i),e=0;e<this.lf;e++){for(s=0;s<=this.Ct;s++)this.pk(s,0),this.cs(s,0,!1,0);for(n=this.countCrossings(),n<t&&(t=n,i=this.te()),s=this.Ct;s>=0;s--)this.pk(s,0),this.cs(s,0,!1,0);n=this.countCrossings(),n<t&&(t=n,i=this.te())}this._e(i);let o=!1,r=0,l=0,h=0,f=0;switch(this.tu){case 30:break;case 32:for(h=t+1;(f=this.countCrossings())<h;)for(h=f,r=this.Ct;r>=0;r--)for(l=0;l<=r;l++){for(o=!0;o;)for(o=!1,s=r;s>=l;s--)o=this.cs(s,-1,!1,-1)||o;for(n=this.countCrossings(),n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=r;s>=l;s--)o=this.cs(s,1,!1,1)||o;for(n=this.countCrossings(),n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=l;s<=r;s++)o=this.cs(s,1,!1,1)||o;for(n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=l;s<=r;s++)o=this.cs(s,-1,!1,-1)||o;for(n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=r;s>=l;s--)o=this.cs(s,0,!1,0)||o;for(n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=l;s<=r;s++)o=this.cs(s,0,!1,0)||o;n>=t?this._e(i):(t=n,i=this.te())}break;default:case 31:for(r=this.Ct,l=0,h=t+1;(f=this.countCrossings())<h;){for(h=f,o=!0;o;)for(o=!1,s=r;s>=l;s--)o=this.cs(s,-1,!1,-1)||o;for(n=this.countCrossings(),n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=r;s>=l;s--)o=this.cs(s,1,!1,1)||o;for(n=this.countCrossings(),n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=l;s<=r;s++)o=this.cs(s,1,!1,1)||o;for(n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=l;s<=r;s++)o=this.cs(s,-1,!1,-1)||o;for(n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=r;s>=l;s--)o=this.cs(s,0,!1,0)||o;for(n>=t?this._e(i):(t=n,i=this.te()),o=!0;o;)for(o=!1,s=l;s<=r;s++)o=this.cs(s,0,!1,0)||o;n>=t?this._e(i):(t=n,i=this.te())}break}this._e(i)}pk(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"medianBarycenterCrossingReduction:unfixedLayer\"),U.r(i,LayeredDigraphLayout,\"medianBarycenterCrossingReduction:direction\"));let e=0,s=!1;const n=this.Xh(t),o=this.gi[t],r=this.CD(t,i),l=this.$y(t,i);for(e=0;e<o;e++)l[e]===-1&&(l[e]=n[e].column),r[e]===-1&&(r[e]=n[e].column);let h=!0,f;for(;h;)for(h=!1,e=0;e<o-1;e++)if(r[e+1]<r[e]||r[e+1]===r[e]&&l[e+1]<l[e]){s=!0,h=!0;const c=r[e];r[e]=r[e+1],r[e+1]=c;const u=l[e];l[e]=l[e+1],l[e+1]=u,f=n[e],n[e]=n[e+1],n[e+1]=f}let a=0;for(e=0;e<o;e++)f=n[e],f.index=e,a+=this.nodeMinColumnSpace(f,!0),f.column=a,a+=1,a+=this.nodeMinColumnSpace(f,!1);return this.Yh(t,n),s}cs(t,i,e,s){const n=this.Xh(t),o=this.gi[t],r=this.ND(t,i);let l=0,h;if(!e||s>0)for(h=[],l=0;l<o;l++)h[l]=-1;else h=this.$y(t,-1);let f;if(!e||s<0)for(f=[],l=0;l<o;l++)f[l]=-1;else f=this.$y(t,1);let a=!1,c=!0;for(;c;)for(c=!1,l=0;l<o-1;l++){const u=r[n[l].index*o+n[l+1].index],d=r[n[l+1].index*o+n[l].index];let m=0,g=0;const p=n[l].column,w=n[l+1].column,x=this.nodeMinColumnSpace(n[l],!0),k=this.nodeMinColumnSpace(n[l],!1),b=this.nodeMinColumnSpace(n[l+1],!0),S=this.nodeMinColumnSpace(n[l+1],!1),M=p-x+b,A=w-k+S;let C=0,P=0,N=0,T=0,L=0,D=0,F=0,I,R=0,O,Y=0;const K=n[l].sourceEdges.iterator;if(e&&s<=0)for(;K.next();){const v=K.value;I=v.fromVertex,v.valid&&I.layer!==t&&(N=this.linkStraightenWeight(v),T=v.portFromColOffset,L=v.portToColOffset,D=I.column,C+=(Math.abs(p+L-(D+T))+1)*N,P+=(Math.abs(A+L-(D+T))+1)*N)}for(K.reset();K.next();){const v=K.value;if(I=v.fromVertex,v.valid&&I.layer===t){for(R=0;R<n.length&&n[R]!==I;)R++;R<l&&(m+=2*(l-R),g+=2*(l+1-R)),R===l+1&&(m+=1),R>l+1&&(m+=4*(R-l),g+=4*(R-(l+1)))}}const B=n[l].destinationEdges.iterator;if(e&&s>=0)for(;B.next();){const v=B.value;O=v.toVertex,v.valid&&O.layer!==t&&(N=this.linkStraightenWeight(v),T=v.portFromColOffset,L=v.portToColOffset,F=O.column,C+=(Math.abs(p+T-(F+L))+1)*N,P+=(Math.abs(A+T-(F+L))+1)*N)}for(B.reset();B.next();){const v=B.value;if(O=v.toVertex,v.valid&&O.layer===t){for(Y=0;Y<n.length&&n[Y]!==O;)Y++;Y===l+1&&(g+=1)}}const z=n[l+1].sourceEdges.iterator;if(e&&s<=0)for(;z.next();){const v=z.value;I=v.fromVertex,v.valid&&I.layer!==t&&(N=this.linkStraightenWeight(v),T=v.portFromColOffset,L=v.portToColOffset,D=I.column,C+=(Math.abs(w+L-(D+T))+1)*N,P+=(Math.abs(M+L-(D+T))+1)*N)}for(z.reset();z.next();){const v=z.value;if(I=v.fromVertex,v.valid&&I.layer===t){for(R=0;R<n.length&&n[R]!==I;)R++;R<l&&(m+=2*(l+1-R),g+=2*(l-R)),R===l&&(g+=1),R>l+1&&(m+=4*(R-(l+1)),g+=4*(R-l))}}const V=n[l+1].destinationEdges.iterator;if(e&&s>=0)for(;V.next();){const v=V.value;O=v.toVertex,v.valid&&O.layer!==t&&(N=this.linkStraightenWeight(v),T=v.portFromColOffset,L=v.portToColOffset,F=O.column,C+=(Math.abs(w+T-(F+L))+1)*N,P+=(Math.abs(M+T-(F+L))+1)*N)}for(V.reset();V.next();){const v=V.value;if(O=v.toVertex,v.valid&&O.layer===t){for(Y=0;Y<n.length&&n[Y]!==O;)Y++;Y===l&&(m+=1)}}let H=0,W=0;const j=h[n[l].index],$=f[n[l].index],X=h[n[l+1].index],J=f[n[l+1].index];if(j!==-1&&(H+=Math.abs(j-p),W+=Math.abs(j-A)),$!==-1&&(H+=Math.abs($-p),W+=Math.abs($-A)),X!==-1&&(H+=Math.abs(X-w),W+=Math.abs(X-M)),J!==-1&&(H+=Math.abs(J-w),W+=Math.abs(J-M)),g<m-.5||g===m&&d<u-.5||g===m&&d===u&&P<C-.5||g===m&&d===u&&P===C&&W<H-.5){a=!0,c=!0,n[l].column=A,n[l+1].column=M;const v=n[l];n[l]=n[l+1],n[l+1]=v}}for(l=0;l<o;l++)n[l].index=l;return this.Yh(t,n),a}straightenAndPack(){if(this.In!==0){this.V3();return}let t=0,i=!1,e=(this.nr&1)!==0;const s=(this.nr&8)!==0;if(this.network.edges.count>1e3&&s&&(e=!1),e){const n=[];let o=0;for(o=0;o<=this.Ct;o++)n[o]=0;let r=0;const l=this.network.vertexes.iterator;for(;l.next();){const f=l.value;t=f.layer,r=f.column;const a=this.nodeMinColumnSpace(f,!1);n[t]=Math.max(n[t],r+a)}const h=8;for(l.reset();l.next();){const f=l.value;t=f.layer,r=f.column,f.column=((this.qt-n[t])*h>>1)+r*h}this.qt*=h}if(this.nr&2){i=!0;let n=0;for(;i&&n<this.iu;){for(i=!1,t=this.Fs+1;t<=this.Ct;t++)i=this.Fg(t,1)||i;for(t=this.Fs-1;t>=0;t--)i=this.Fg(t,-1)||i;i=this.Fg(this.Fs,0)||i,n++}}if(this.nr&4){for(t=this.Fs+1;t<=this.Ct;t++)this.rC(t,1);for(t=this.Fs-1;t>=0;t--)this.rC(t,-1);this.rC(this.Fs,0)}if(e&&(this.VD(-1),this.VD(1)),this.nr&2){i=!0;let n=0;for(;i&&n<this.iu;){for(i=!1,i=this.Fg(this.Fs,0)||i,t=this.Fs+1;t<=this.Ct;t++)i=this.Fg(t,0)||i;for(t=this.Fs-1;t>=0;t--)i=this.Fg(t,0)||i;n++}}}Fg(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"bendStraighten:unfixedLayer\"),U.r(i,LayeredDigraphLayout,\"bendStraighten:direction\"));let e=!1;for(;this.z3(t,i);)e=!0;return e}z3(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"shiftbendStraighten:unfixedLayer\"),U.r(i,LayeredDigraphLayout,\"shiftbendStraighten:direction\"));let e=0;const s=this.Xh(t),n=this.gi[t],o=this.$y(t,-1);if(i>0)for(e=0;e<n;e++)o[e]=-1;const r=this.$y(t,1);if(i<0)for(e=0;e<n;e++)r[e]=-1;let l=!1,h=!0;for(;h;)for(h=!1,e=0;e<n;e++){const f=s[e].column,a=this.nodeMinColumnSpace(s[e],!0),c=this.nodeMinColumnSpace(s[e],!1);let u=0;e-1<0||f-s[e-1].column-1>a+this.nodeMinColumnSpace(s[e-1],!1)?u=f-1:u=f;let d=0;e+1>=n||s[e+1].column-f-1>c+this.nodeMinColumnSpace(s[e+1],!0)?d=f+1:d=f;let m=0,g=0,p=0,w=0,x=0,k=0;if(i<=0){const P=s[e].sourceEdges.iterator;for(;P.next();){const N=P.value,T=N.fromVertex;if(N.valid&&T.layer!==t){w=this.linkStraightenWeight(N),x=N.portFromColOffset,k=N.portToColOffset;const L=T.column;m+=(Math.abs(f+k-(L+x))+1)*w,g+=(Math.abs(u+k-(L+x))+1)*w,p+=(Math.abs(d+k-(L+x))+1)*w}}}if(i>=0){const P=s[e].destinationEdges.iterator;for(;P.next();){const N=P.value,T=N.toVertex;if(N.valid&&T.layer!==t){w=this.linkStraightenWeight(N),x=N.portFromColOffset,k=N.portToColOffset;const L=T.column;m+=(Math.abs(f+x-(L+k))+1)*w,g+=(Math.abs(u+x-(L+k))+1)*w,p+=(Math.abs(d+x-(L+k))+1)*w}}}let b=0,S=0,M=0;const A=o[s[e].index],C=r[s[e].index];A!==-1&&(b+=Math.abs(A-f),S+=Math.abs(A-u),M+=Math.abs(A-d)),C!==-1&&(b+=Math.abs(C-f),S+=Math.abs(C-u),M+=Math.abs(C-d)),g<m||g===m&&S<b?(l=!0,h=!0,s[e].column=u):(p<m||p===m&&M<b)&&(l=!0,h=!0,s[e].column=d)}return this.Yh(t,s),this.Jy(),l}rC(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"medianStraighten:unfixedLayer\"),U.r(i,LayeredDigraphLayout,\"medianStraighten:direction\"));let e=0;const s=this.Xh(t),n=this.gi[t],o=this.CD(t,i),r=[];for(e=0;e<n;e++)r[e]=o[e];let l=!1,h=!0;for(;h;)for(h=!1,e=0;e<n;e++){const f=s[e].column,a=this.nodeMinColumnSpace(s[e],!0),c=this.nodeMinColumnSpace(s[e],!1);let u=0,d=0,m=0,g=0,p=0;r[e]===-1?e===0&&e===n-1?u=f:e===0?(d=s[e+1].column,d-f===c+this.nodeMinColumnSpace(s[e+1],!0)?u=f-1:u=f):e===n-1?(m=s[e-1].column,f-m===a+this.nodeMinColumnSpace(s[e-1],!1)?u=f+1:u=f):(m=s[e-1].column,p=m+this.nodeMinColumnSpace(s[e-1],!1)+a+1,d=s[e+1].column,g=d-this.nodeMinColumnSpace(s[e+1],!0)-c-1,u=(p+g)/2|0):e===0&&e===n-1?u=r[e]:e===0?(d=s[e+1].column,g=d-this.nodeMinColumnSpace(s[e+1],!0)-c-1,u=Math.min(r[e],g)):e===n-1?(m=s[e-1].column,p=m+this.nodeMinColumnSpace(s[e-1],!1)+a+1,u=Math.max(r[e],p)):(m=s[e-1].column,p=m+this.nodeMinColumnSpace(s[e-1],!1)+a+1,d=s[e+1].column,g=d-this.nodeMinColumnSpace(s[e+1],!0)-c-1,p<r[e]&&r[e]<g?u=r[e]:p>=r[e]?u=p:g<=r[e]&&(u=g)),u!==f&&(l=!0,h=!0,s[e].column=u)}return this.Yh(t,s),this.Jy(),l}X3(){for(let t=0;t<=this.qt;t++)for(;this.Y3(t,1););this.Jy()}Y3(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"packAux:column\"),U.r(i,LayeredDigraphLayout,\"packAux:direction\"));let e=!0;const s=this.network.vertexes.iterator;for(;s.next();){const o=s.value,r=this.nodeMinColumnSpace(o,!0),l=this.nodeMinColumnSpace(o,!1);if(o.column-r<=t&&o.column+l>=t){e=!1;break}}let n=!1;if(e){if(i>0)for(s.reset();s.next();){const o=s.value;o.column>t&&(o.column-=1,n=!0)}if(i<0)for(s.reset();s.next();){const o=s.value;o.column<t&&(o.column+=1,n=!0)}}return n}K3(){this.X3();for(let t=0;t<this.qt;t++)for(;this.U3(t,1););this.Jy()}U3(t,i){Debug&&(U.r(t,LayeredDigraphLayout,\"tightPackAux:column\"),U.r(i,LayeredDigraphLayout,\"tightPackAux:direction\"));let e=t;i>0&&(e=t+1),i<0&&(e=t-1);let s=0;const n=[],o=[];for(s=0;s<=this.Ct;s++)n[s]=!1,o[s]=!1;const r=this.network.vertexes.iterator;for(;r.next();){const f=r.value,a=f.column-this.nodeMinColumnSpace(f,!0),c=f.column+this.nodeMinColumnSpace(f,!1);a<=t&&c>=t&&(n[f.layer]=!0),a<=e&&c>=e&&(o[f.layer]=!0)}let l=!0,h=!1;for(s=0;s<=this.Ct;s++)l=l&&!(n[s]&&o[s]);if(l){if(i>0)for(r.reset();r.next();){const f=r.value;f.column>t&&(f.column-=1,h=!0)}if(i<0)for(r.reset();r.next();){const f=r.value;f.column<t&&(f.column+=1,h=!0)}}return h}VD(t){Debug&&U.r(t,LayeredDigraphLayout,\"componentPack:direction\"),this.K3();let i=0,e,s=0,n=0,o=0;if(t>0)for(i=0;i<=this.qt;i++)for(e=this.te(),s=this.dk(!0),n=s+1;s<n;)n=s,this.zD(i,1),o=this.dk(!0),o>s?this._e(e):o<s&&(s=o,e=this.te());if(t<0)for(i=this.qt;i>=0;i--)for(e=this.te(),s=this.dk(!0),n=s+1;s<n;)n=s,this.zD(i,-1),o=this.dk(!0),o>s?this._e(e):o<s&&(s=o,e=this.te());this.Jy()}zD(t,i){this.nn=0;const e=this.network.vertexes.iterator;for(;e.next();){const a=e.value;a.component=-1}if(i>0)for(e.reset();e.next();){const a=e.value;a.column-this.nodeMinColumnSpace(a,!0)<=t&&(a.component=this.nn)}if(i<0)for(e.reset();e.next();){const a=e.value;a.column+this.nodeMinColumnSpace(a,!1)>=t&&(a.component=this.nn)}for(this.nn++,e.reset();e.next();){const a=e.value;a.component===-1&&(this.nC(a,this.nn,-1,!0,!0),this.nn++)}let s=0;const n=[];for(s=0;s<this.nn*this.nn;s++)n[s]=!1;const o=[];for(s=0;s<(this.Ct+1)*(this.qt+1);s++)o[s]=-1;for(e.reset();e.next();){const a=e.value,c=a.layer,u=Math.max(0,a.column-this.nodeMinColumnSpace(a,!0)),d=Math.min(this.qt,a.column+this.nodeMinColumnSpace(a,!1));for(let m=u;m<=d;m++)o[c*(this.qt+1)+m]=a.component}for(let a=0;a<=this.Ct;a++){if(i>0)for(let c=0;c<this.qt;c++)o[a*(this.qt+1)+c]!==-1&&o[a*(this.qt+1)+c+1]!==-1&&o[a*(this.qt+1)+c]!==o[a*(this.qt+1)+c+1]&&(n[o[a*(this.qt+1)+c]*this.nn+o[a*(this.qt+1)+c+1]]=!0);if(i<0)for(let c=this.qt;c>0;c--)o[a*(this.qt+1)+c]!==-1&&o[a*(this.qt+1)+c-1]!==-1&&o[a*(this.qt+1)+c]!==o[a*(this.qt+1)+c-1]&&(n[o[a*(this.qt+1)+c]*this.nn+o[a*(this.qt+1)+c-1]]=!0)}const r=[];for(s=0;s<this.nn;s++)r[s]=!0;const l=[];l.push(0);let h=0;for(;l.length!==0;)if(h=l[l.length-1],l.pop(),r[h])for(r[h]=!1,s=0;s<this.nn;s++)n[h*this.nn+s]&&l.splice(0,0,s);let f=!1;if(i>0)for(e.reset();e.next();){const a=e.value;r[a.component]&&(a.column-=1,f=!0)}if(i<0)for(e.reset();e.next();){const a=e.value;r[a.component]&&(a.column+=1,f=!0)}return f}V3(){const t=U.lt(),i=this.eu.length;for(let u=0;u<=i;u++)t[u]=[];const e=this.network.vertexes.iterator;for(;e.next();){const u=e.value,d=i-u.layer,m=t[d];m[u.index]=u}const s=new GSet;this.G3(t,s);let n=null,o=null,r=null,l=null;const h=(this.In&1)!==0,f=(this.In&2)!==0,a=(this.In&4)!==0,c=(this.In&8)!==0;h&&(this.rl(t,s,!0),n=this.yk(t,!0,!1)),t.reverse(),a&&(this.rl(t,s,!1),r=this.yk(t,!1,!1));for(const u of t)u.reverse();c&&(this.rl(t,s,!1),l=this.yk(t,!1,!0)),t.reverse(),f&&(this.rl(t,s,!0),o=this.yk(t,!0,!0)),U.tt(t),this.H3(n,o,r,l),this.network.vertexes.each(u=>{const d=u,m=U.lt();h&&m.push(n.get(d)),f&&m.push(o.get(d)),a&&m.push(r.get(d)),c&&m.push(l.get(d)),m.sort((k,b)=>k-b);const g=m.length,p=Math.floor((g-1)/2),w=Math.ceil((g-1)/2),x=(m[p]+m[w])/2;U.tt(m),d.ue=x})}G3(t,i){const e=t.length;for(let s=1;s<e-1;s++){let n=0,o=0;const r=t[s],l=t[s+1];for(let h=0;o<l.length;h++){const f=l[h],a=this.q3(f);if(h===l.length-1||a){let c=r.length-1;for(a&&(c=f.getProperSourceVertexes()[0].index);o<=h;){const d=l[o].getProperSourceEdges();for(const m of d){const p=m.fromVertex.index;(p<n||p>c)&&i.add(m)}o++}n=c}}}}q3(t){if(t.node===null){const i=t.getProperSourceVertexes();if(i.length>0)return i[0].node===null}return!1}rl(t,i,e){this.W3(t);for(const s of t){let n=-1;for(const o of s){const r=e?o.getProperSourceVertexes():o.getProperDestinationVertexes(),l=r.length;if(l>0){r.sort((f,a)=>f.Kh-a.Kh);const h=(l-1)/2;for(let f=Math.floor(h),a=Math.ceil(h);f<=a;f++)if(o.On===o){const c=r[f];let u;e?u=c.getDestinationEdge(o):u=o.getDestinationEdge(c),!i.has(u)&&n<c.Kh&&(c.On=o,o.af=c.af,o.On=c.af,n=c.Kh)}}}}}W3(t){for(let i=0;i<t.length;i++){const e=t[i];for(let s=0;s<e.length;s++){const n=e[s];n.af=n,n.On=n,n.XD=i,n.Kh=s}}}yk(t,i,e){const s=this.S===90||this.S===270;for(const o of t)for(const r of o)r.ts=r,r.nu=1/0,r.ue=NaN,r.En=0;this.j3(t,i,e);for(const o of t)for(const r of o)r.af===r&&this.YD(r,t);for(let o=0;o<t.length;o++){if(t[o].length<=0)continue;const r=t[o][0];if(r.ts===r){r.ts.nu===1/0&&(r.ts.nu=0);let l=o,h=0,f;do{for(f=t[l][h];f.On!==f.af;)if(f=f.On,l++,f.Kh>0){const a=this.KD(f,t),c=s?a.width:a.height,u=f.ts.nu+f.ue+f.En-(a.ue+a.En+c+this.columnSpacing);a.ts.nu=Math.min(a.ts.nu,u)}h=f.Kh+1}while(l<t.length&&h<t[l].length&&f.ts===t[l][h].ts)}}const n=new GMap;for(const o of t)for(const r of o){r.ue=r.ue+r.ts.nu+r.En;const l=s?r.width:r.height;n.set(r,e?-r.ue-l:r.ue)}return n}j3(t,i,e){const s=this.S===90||this.S===270;for(const n of t)for(const o of n)if(o.af===o){let r=0,l=o;for(;l.On!==o;){const h=l.On,f=s?l.width:l.height,a=s?h.width:h.height;let c,u,d,m;i?(d=l.getDestinationEdge(h),c=d.portFromPos,u=d.portToPos,d.link!==null&&(l.node&&l.node!==d.link.fromNode&&(c=s?l.focusX:l.focusY),h.node&&h.node!==d.link.toNode&&(u=s?h.focusX:h.focusY)),e?m=l.En+(f-c)-(a-u):m=l.En+c-u):(d=h.getDestinationEdge(l),c=d.portToPos,u=d.portFromPos,d.link!==null&&(l.node&&l.node!==d.link.toNode&&(c=s?l.focusX:l.focusY),h.node&&h.node!==d.link.fromNode&&(u=s?h.focusX:h.focusY)),e?m=l.En+(f-c)-(a-u):m=l.En+c-u),h.En=m,r=Math.min(r,m),l=l.On}l=o;do l.En=l.En-r,l=l.On;while(l!==o)}}YD(t,i){if(!isNaN(t.ue))return;t.ue=0;let e=t;do{if(e.Kh>0){const s=this.KD(e,i),n=s.af;this.YD(n,i),t.ts===t&&(t.ts=n.ts);const o=this.S===90||this.S===270?s.width:s.height;if(t.ts===n.ts){const r=n.ue+s.En+o-e.En+this.columnSpacing;t.ue=Math.max(t.ue,r)}}e=e.On}while(e!==t);for(;e.On!==t;)e=e.On,e.ue=t.ue,e.ts=t.ts}KD(t,i){const e=t.XD,s=t.Kh;return s<1&&U.n(\"Could not determine previous vertex in layer\"),i[e][s-1]}H3(...t){let i=-1;const e=U.lt(),s=U.lt();let n=1/0;for(let o=0;o<4;o++){if(!t[o])continue;const r=this.v3(t[o],e,s,o);r<n&&(i=o,n=r)}for(let o=0;o<4;o++){const r=t[o];if(!r)continue;const l=o===0||o===2?e[i]-e[o]:s[i]-s[o];l!==0&&r.each(h=>{r.set(h.key,h.value+l)})}U.tt(e),U.tt(s)}v3(t,i,e,s){if(!t||t.count===0)return i[s]=0,e[s]=0,1/0;let n=1/0,o=-1/0;return t.each(r=>{const l=r.key,h=r.value,f=this.S===90||this.S===270?l.width:l.height;h<n&&(n=h),h+f>o&&(o=h+f)}),i[s]=n,e[s]=o,o-n}commitLayout(){this.jy(),this.commitNodes(),this.lC(),this.isRouting&&this.commitLinks()}jy(){if(!this.setsPortSpots)return;const t=this.mk(!0),i=this.mk(!1),e=this.network.edges.iterator;for(;e.next();){const n=e.value.link;n!==null&&(n.fromSpot=t,n.toSpot=i)}}mk(t){return this.S===270?t?Spot.MiddleTop:Spot.MiddleBottom:this.S===90?t?Spot.MiddleBottom:Spot.MiddleTop:this.S===180?t?Spot.MiddleLeft:Spot.MiddleRight:t?Spot.MiddleRight:Spot.MiddleLeft}commitNodes(){this.sn=[],this.Rs=[],this.Is=[],this.Yt=[];for(let d=0;d<=this.Ct;d++)this.sn[d]=0,this.Rs[d]=0,this.Is[d]=0,this.Yt[d]=0;const t=this.network.vertexes.iterator;for(;t.next();){const d=t.value,m=d.layer;this.sn[m]=Math.max(this.sn[m],this.nodeMinLayerSpace(d,!0)),this.Rs[m]=Math.max(this.Rs[m],this.nodeMinLayerSpace(d,!1))}let i=0;const e=this.Ds;for(let d=0;d<=this.Ct;d++){let m=e;this.sn[d]+this.Rs[d]<=0&&(m=0),d>0&&(i+=m/2),this.S===90||this.S===0?(i+=this.Rs[d],this.Is[d]=i,i+=this.sn[d]):(i+=this.sn[d],this.Is[d]=i,i+=this.Rs[d]),d<this.Ct&&(i+=m/2),this.Yt[d]=i}const s=i,n=this.arrangementOrigin;for(let d=0;d<=this.Ct;d++)this.S===270?this.Is[d]=n.y+this.Is[d]:this.S===90?(this.Is[d]=n.y+s-this.Is[d],this.Yt[d]=s-this.Yt[d]):this.S===180?this.Is[d]=n.x+this.Is[d]:(this.Is[d]=n.x+s-this.Is[d],this.Yt[d]=s-this.Yt[d]);const o=this.In!==0;t.reset();const r=this.S===270||this.S===90;let l=1/0,h=1/0,f=1/0,a=-1/0;for(;t.next();){const d=t.value,m=d.layer,g=d.column|0;let p=0,w=0;r?(p=n.x+this._i*g,w=this.Is[m]):(p=this.Is[m],w=n.y+this._i*g),d.centerX=p,d.centerY=w,o&&isFinite(d.ue)&&(r?d.node?d.x=n.x+d.ue:d.centerX=n.x+d.ue:d.node?d.y=n.y+d.ue:d.centerY=n.y+d.ue),l=Math.min(d.x,l),h=Math.min(d.y,h),r?(f=l,a=Math.max(a,d.bounds.right)):(f=h,a=Math.max(a,d.bounds.bottom))}this.sC=a-f;const c=n.x-l,u=n.y-h;for(this.or=new Point(o&&r?0:c,o&&!r?0:u),t.reset();t.next();){const d=t.value;d.x+=c,d.y+=u,d.commit()}}lC(){let t=0;const i=this.Ds;for(let n=0;n<=this.Ct;n++)t+=this.sn[n],t+=this.Rs[n];t+=this.Ct*i;const e=[],s=this.In!==0?this.sC:this._i*this.qt;for(let n=this.maxLayer;n>=0;n--)this.S===270?n===0?e.push(new Rect(0,0,s,Math.abs(this.Yt[0]))):e.push(new Rect(0,this.Yt[n-1],s,Math.abs(this.Yt[n-1]-this.Yt[n]))):this.S===90?n===0?e.push(new Rect(0,this.Yt[0],s,Math.abs(this.Yt[0]-t))):e.push(new Rect(0,this.Yt[n],s,Math.abs(this.Yt[n-1]-this.Yt[n]))):this.S===180?n===0?e.push(new Rect(0,0,Math.abs(this.Yt[0]),s)):e.push(new Rect(this.Yt[n-1],0,Math.abs(this.Yt[n-1]-this.Yt[n]),s)):n===0?e.push(new Rect(this.Yt[0],0,Math.abs(this.Yt[0]-t),s)):e.push(new Rect(this.Yt[n],0,Math.abs(this.Yt[n-1]-this.Yt[n]),s));this.commitLayers(e,this.or)}commitLayers(t,i){}commitLinks(){const t=this.network.edges.iterator;let i;for(;t.next();)i=t.value.link,i!==null&&(i.startRoute(),i.clearPoints(),i.commitRoute());for(t.reset();t.next();)i=t.value.link,i!==null&&i.updateRoute();for(t.reset();t.next();){const e=t.value;if(i=e.link,i===null||i.pointsCount===0)continue;i.startRoute();const s=i;let n=s.fromNode,o=s.toNode,r=s.fromPort,l=s.toPort;if(n!==null){const N=n.findVisibleNode();N!==null&&N!==n&&(n=N,r=N.port)}if(o!==null){const N=o.findVisibleNode();N!==null&&N!==o&&(o=N,l=N.port)}const h=i.computeSpot(!0,r),f=i.computeSpot(!1,l);let a=e.fromVertex,c=e.toVertex;if(e.valid){if(i.curve===9&&i.pointsCount===4)if(a.column===c.column&&this.alignOption===0){const N=i.getLinkPoint(n,r,h,!0,!1,o,l),T=i.getLinkPoint(o,l,f,!1,!1,n,r);N.isReal()||N.set(n.actualBounds.center),T.isReal()||T.set(o.actualBounds.center),i.clearPoints(),i.addPointAt(N.x,N.y),i.addPointAt((2*N.x+T.x)/3,(2*N.y+T.y)/3),i.addPointAt((N.x+2*T.x)/3,(N.y+2*T.y)/3),i.addPointAt(T.x,T.y)}else{let N=!1,T=!1;if(r!==null&&h===Spot.None&&(N=!0),l!==null&&f===Spot.None&&(T=!0),N||T){let L=null;N&&(L=i.getLinkPointFromPoint(n,r,r.getDocumentPoint(Spot.Center),i.getPoint(3),!0),L.isReal()||L.set(n.actualBounds.center),i.setPointAt(0,L.x,L.y));let D=null;if(T&&(D=i.getLinkPointFromPoint(o,l,l.getDocumentPoint(Spot.Center),i.getPoint(0),!1),D.isReal()||D.set(o.actualBounds.center),i.setPointAt(3,D.x,D.y)),L){const F=i.getPoint(2);i.setPointAt(1,(L.x*2+F.x)/3,(L.y*2+F.y)/3)}if(D){const F=i.getPoint(1);i.setPointAt(2,(D.x*2+F.x)/3,(D.y*2+F.y)/3)}}}i.commitRoute();continue}if(a.layer===c.layer){i.commitRoute();continue}let u=!1,d=!1;const m=this.Ds;let g=0,p=i.firstPickIndex+1;if(i.isOrthogonal)d=!0,g=i.pointsCount,g>4&&i.points.removeRange(2,g-3);else if(i.curve===9)u=!0,g=i.pointsCount,g>4&&i.points.removeRange(2,g-3),g===4&&(p=2);else{g=i.pointsCount;const N=h===Spot.None,T=f===Spot.None;g>2&&N&&T?i.points.removeRange(1,g-2):g>3&&N&&!T?i.points.removeRange(1,g-3):g>3&&!N&&T?i.points.removeRange(2,g-2):g>4&&!N&&!T&&i.points.removeRange(2,g-3)}let w,x,k=0,b=0,S=0,M=0,A=0,C=0,P=0;if(e.rev){let N=0;for(;c!==null&&a!==c;){w=null,x=null;const T=c.sourceEdges.iterator;for(;T.next();){const L=T.value;if(L.link===e.link&&(w=L.fromVertex,x=L.toVertex,w.node===null))break}if(w===null)break;if(w!==a)if(k=i.getPoint(p-1).x,b=i.getPoint(p-1).y,S=w.centerX,M=w.centerY,d)this.S===180||this.S===0?p===i.firstPickIndex+1?(i.insertPointAt(p++,k,b),i.insertPointAt(p++,k,M)):(x!==null?x.centerY:b)!==M&&(A=this.Yt[w.layer-1]+this.or.x,i.insertPointAt(p++,A,b),i.insertPointAt(p++,A,M)):p===i.firstPickIndex+1?(i.insertPointAt(p++,k,b),i.insertPointAt(p++,S,b)):(x!==null?x.centerX:k)!==S&&(A=this.Yt[w.layer-1]+this.or.y,i.insertPointAt(p++,k,A),i.insertPointAt(p++,S,A));else if(p===i.firstPickIndex+1)if(C=Math.max(10,this.sn[c.layer]),P=Math.max(10,this.Rs[c.layer]),u)this.S===180?S<=c.bounds.x?(N=c.bounds.x,i.insertPointAt(p++,N-C,M),i.insertPointAt(p++,N,M),i.insertPointAt(p++,N+P,M)):(i.insertPointAt(p++,S-C,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S+P,M)):this.S===90?M>=c.bounds.bottom?(N=c.bounds.y+c.bounds.height,i.insertPointAt(p++,S,N+P),i.insertPointAt(p++,S,N),i.insertPointAt(p++,S,N-C)):(i.insertPointAt(p++,S,M+P),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M-C)):this.S===270?M<=c.bounds.y?(N=c.bounds.y,i.insertPointAt(p++,S,N-C),i.insertPointAt(p++,S,N),i.insertPointAt(p++,S,N+P)):(i.insertPointAt(p++,S,M-C),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M+P)):this.S===0&&(S>=c.bounds.right?(N=c.bounds.x+c.bounds.width,i.insertPointAt(p++,N+P,M),i.insertPointAt(p++,N,M),i.insertPointAt(p++,N-C,M)):(i.insertPointAt(p++,S+P,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S-C,M)));else{i.insertPointAt(p++,k,b);let L=0;this.S===180||this.S===0?((this.S===180?S>=c.bounds.right:S<=c.bounds.x)&&(L=(this.S===0?-C:P)/2),i.insertPointAt(p++,k+L,M)):((this.S===270?M>=c.bounds.bottom:M<=c.bounds.y)&&(L=(this.S===90?-C:P)/2),i.insertPointAt(p++,S,b+L)),i.insertPointAt(p++,S,M)}else C=Math.max(10,this.sn[w.layer]),P=Math.max(10,this.Rs[w.layer]),u?this.S===180?(i.insertPointAt(p++,S-C-m,M),i.insertPointAt(p++,Math.min(S-C+m/2,S),M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,Math.max(S+P-m/2,S),M),i.insertPointAt(p++,S+P+m,M)):this.S===90?(i.insertPointAt(p++,S,M+P+m),i.insertPointAt(p++,S,Math.max(M+P-m/2,M)),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,Math.min(M-C+m/2,M)),i.insertPointAt(p++,S,M-C-m)):this.S===270?(i.insertPointAt(p++,S,M-C-m),i.insertPointAt(p++,S,Math.min(M-C+m/2,M)),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,Math.max(M+P-m/2,M)),i.insertPointAt(p++,S,M+P+m)):(i.insertPointAt(p++,S+P+m,M),i.insertPointAt(p++,Math.max(S+P-m/2,S),M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,Math.min(S-C+m/2,S),M),i.insertPointAt(p++,S-C-m,M)):(this.S===180||this.S===90||this.S,i.insertPointAt(p++,S,M));c=w}if(l===null||h!==Spot.None||d)if(k=i.getPoint(p-1).x,b=i.getPoint(p-1).y,S=i.getPoint(p).x,M=i.getPoint(p).y,d){const T=this.Rs[a.layer];let L=0;this.S===180||this.S===0?(L=b,L>=a.bounds.y&&L<=a.bounds.bottom&&(this.S===180?S>=a.bounds.x:S<=a.bounds.right)&&(N=a.centerX+(this.S===180?-T:T),L<a.bounds.y+a.bounds.height/2?L=a.bounds.y-this._i/2:L=a.bounds.bottom+this._i/2,i.insertPointAt(p++,N,b),i.insertPointAt(p++,N,L)),i.insertPointAt(p++,S,L),i.insertPointAt(p++,S,M)):(L=k,L>=a.bounds.x&&L<=a.bounds.right&&(this.S===270?M>=a.bounds.y:M<=a.bounds.bottom)&&(N=a.centerY+(this.S===270?-T:T),L<a.bounds.x+a.bounds.width/2?L=a.bounds.x-this._i/2:L=a.bounds.right+this._i/2,i.insertPointAt(p++,k,N),i.insertPointAt(p++,L,N)),i.insertPointAt(p++,L,M),i.insertPointAt(p++,S,M))}else if(u)C=Math.max(10,this.sn[a.layer]),P=Math.max(10,this.Rs[a.layer]),this.S===180&&S>=a.bounds.x?(N=a.bounds.x+a.bounds.width,i.setPointAt(p-2,N,b),i.setPointAt(p-1,N+P,b)):this.S===90&&M<=a.bounds.bottom?(N=a.bounds.y,i.setPointAt(p-2,k,N),i.setPointAt(p-1,k,N-C)):this.S===270&&M>=a.bounds.y?(N=a.bounds.y+a.bounds.height,i.setPointAt(p-2,k,N),i.setPointAt(p-1,k,N+P)):this.S===0&&S<=a.bounds.right&&(N=a.bounds.x,i.setPointAt(p-2,N,b),i.setPointAt(p-1,N-C,b));else{C=Math.max(10,this.sn[a.layer]),P=Math.max(10,this.Rs[a.layer]);let T=0;this.S===180||this.S===0?((this.S===180?S<=a.bounds.x:S>=a.bounds.right)&&(T=(this.S===0?P:-C)/2),i.insertPointAt(p++,S+T,b)):((this.S===270?M<=a.bounds.y:M>=a.bounds.bottom)&&(T=(this.S===90?P:-C)/2),i.insertPointAt(p++,k,M+T)),i.insertPointAt(p++,S,M)}}else{for(;a!==null&&a!==c;){w=null,x=null;const N=a.destinationEdges.iterator;for(;N.next();){const T=N.value;if(T.link===e.link&&(w=T.toVertex,x=T.fromVertex,x.node!==null&&(x=null),w.node===null))break}if(w===null)break;w!==c&&(k=i.getPoint(p-1).x,b=i.getPoint(p-1).y,S=w.centerX,M=w.centerY,d?this.S===180||this.S===0?(x!==null?x.centerY:b)!==M&&(A=this.Yt[w.layer]+this.or.x,p===i.firstPickIndex+1&&(this.S===0?A=Math.max(A,k):A=Math.min(A,k)),i.insertPointAt(p++,A,b),i.insertPointAt(p++,A,M)):(x!==null?x.centerX:k)!==S&&(A=this.Yt[w.layer]+this.or.y,p===i.firstPickIndex+1&&(this.S===90?A=Math.max(A,b):A=Math.min(A,b)),i.insertPointAt(p++,k,A),i.insertPointAt(p++,S,A)):(C=Math.max(10,this.sn[w.layer]),P=Math.max(10,this.Rs[w.layer]),u?this.S===180?(i.insertPointAt(p++,S+P+m,M),i.insertPointAt(p++,Math.max(S+P-m/2,S),M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,Math.min(S-C+m/2,S),M),i.insertPointAt(p++,S-C-m,M)):this.S===90?(i.insertPointAt(p++,S,M-C-m),i.insertPointAt(p++,S,Math.min(M-C+m/2,M)),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,Math.max(M+P-m/2,M)),i.insertPointAt(p++,S,M+P+m)):this.S===270?(i.insertPointAt(p++,S,M+P+m),i.insertPointAt(p++,S,Math.max(M+P-m/2,M)),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,Math.min(M-C+m/2,M)),i.insertPointAt(p++,S,M-C-m)):(i.insertPointAt(p++,S-C-m,M),i.insertPointAt(p++,Math.min(S-C+m/2,S),M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,S,M),i.insertPointAt(p++,Math.max(S+P-m/2,S),M),i.insertPointAt(p++,S+P+m,M)):this.S===180?(i.insertPointAt(p++,S+P,M),i.insertPointAt(p++,S-C,M)):this.S===90?(i.insertPointAt(p++,S,M-C),i.insertPointAt(p++,S,M+P)):this.S===270?(i.insertPointAt(p++,S,M+P),i.insertPointAt(p++,S,M-C)):(i.insertPointAt(p++,S-C,M),i.insertPointAt(p++,S+P,M)))),a=w}d&&(k=i.getPoint(p-1).x,b=i.getPoint(p-1).y,S=i.getPoint(p).x,M=i.getPoint(p).y,this.S===180||this.S===0?b!==M&&(this.S===0?A=Math.min(Math.max((S+k)/2,this.Yt[c.layer]+this.or.x),S):A=Math.max(Math.min((S+k)/2,this.Yt[c.layer]+this.or.x),S),i.insertPointAt(p++,A,b),i.insertPointAt(p++,A,M)):k!==S&&(this.S===90?A=Math.min(Math.max((M+b)/2,this.Yt[c.layer]+this.or.y),M):A=Math.max(Math.min((M+b)/2,this.Yt[c.layer]+this.or.y),M),i.insertPointAt(p++,k,A),i.insertPointAt(p++,S,A)))}if(s!==null&&u&&i.pointsCount>=4){if(r!==null){const N=h===Spot.None?i.getLinkPointFromPoint(n,r,r.getDocumentPoint(Spot.Center),i.getPoint(3),!0):i.getPoint(0);if(h===Spot.None){const T=i.getPoint(2),L=i.getPoint(3);this.direction===90||this.direction===270?(i.setPointAt(1,(N.x+T.x)/2,T.y),i.setPointAt(2,L.x,(T.y+L.y)/2)):(i.setPointAt(1,T.x,(N.y+T.y)/2),i.setPointAt(2,(T.x+L.x)/2,L.y))}N.isReal()||N.set(n.actualBounds.center),i.setPointAt(0,N.x,N.y)}if(l!==null){const N=f===Spot.None?i.getLinkPointFromPoint(o,l,l.getDocumentPoint(Spot.Center),i.getPoint(i.pointsCount-4),!1):i.getPoint(i.pointsCount-1);if(f===Spot.None){const T=i.getPoint(i.pointsCount-3),L=i.getPoint(i.pointsCount-4);this.direction===90||this.direction===270?(i.setPointAt(i.pointsCount-2,(N.x+T.x)/2,T.y),i.setPointAt(i.pointsCount-2,L.x,(T.y+L.y)/2)):(i.setPointAt(i.pointsCount-2,T.x,(N.y+T.y)/2),i.setPointAt(i.pointsCount-3,(T.x+L.x)/2,L.y))}N.isReal()||N.set(o.actualBounds.center),i.setPointAt(i.pointsCount-1,N.x,N.y)}}i.commitRoute(),e.commit()}}y3(){this.vy=-1,this.Lg=0,this.Fs=0,this.hf=null,this.Dg=null,this.eu=null;for(let t=0;t<this.Rn.length;t++)this.Rn[t]=null}Xh(t){let i;const e=this.gi[t];if(e>=this.Rn.length){const n=[];for(let o=0;o<this.Rn.length;o++)n[o]=this.Rn[o];this.Rn=n}this.Rn[e]===void 0||this.Rn[e]===null?i=[]:(i=this.Rn[e],this.Rn[e]=null);const s=this.eu[t];for(let n=0;n<s.length;n++){const o=s[n];i[o.index]=o}return i}Yh(t,i){this.Rn[this.gi[t]]=i}get layerSpacing(){return this.Ds}set layerSpacing(t){this.Ds!==t&&(U.i(t,\"number\",LayeredDigraphLayout,\"layerSpacing\"),t>=0&&(this.Ds=t,this.invalidateLayout()))}get columnSpacing(){return this._i}set columnSpacing(t){this._i!==t&&(U.i(t,\"number\",LayeredDigraphLayout,\"columnSpacing\"),t>0&&(this._i=t,this.invalidateLayout()))}get direction(){return this.S}set direction(t){this.S!==t&&(U.i(t,\"number\",LayeredDigraphLayout,\"direction\"),t===0||t===90||t===180||t===270?(this.S=t,this.invalidateLayout()):U.n(\"LayeredDigraphLayout.direction must be 0, 90, 180, or 270\"))}get cycleRemoveOption(){return this.Zc}set cycleRemoveOption(t){this.Zc!==t&&(U.j(t,LayeredDigraphCycleRemove,\"LayeredDigraphCycleRemove\"),(t===1||t===0||t===2)&&(this.Zc=t,this.invalidateLayout()))}get layeringOption(){return this.Qc}set layeringOption(t){this.Qc!==t&&(U.j(t,LayeredDigraphLayering,\"LayeredDigraphLayering\"),(t===10||t===11||t===12)&&(this.Qc=t,this.invalidateLayout()))}get initializeOption(){return this._c}set initializeOption(t){this._c!==t&&(U.j(t,LayeredDigraphInit,\"LayeredDigraphInit\"),(t===20||t===21||t===22)&&(this._c=t,this.invalidateLayout()))}get iterations(){return this.lf}set iterations(t){this.lf!==t&&(U.r(t,LayeredDigraphNetwork,\"iterations\"),t>=0&&(this.lf=t,this.invalidateLayout()))}get aggressiveOption(){return this.tu}set aggressiveOption(t){this.tu!==t&&(U.j(t,LayeredDigraphAggressive,\"LayeredDigraphAggressive\"),(t===30||t===31||t===32)&&(this.tu=t,this.invalidateLayout()))}get packOption(){return this.nr}set packOption(t){this.nr!==t&&(U.i(t,\"number\",LayeredDigraphLayout,\"packOption\"),t>=0&&t<8&&(this.nr=t,this.invalidateLayout()))}get packIterations(){return this.iu}set packIterations(t){this.iu=t}get alignOption(){return this.In}set alignOption(t){this.In!==t&&(U.i(t,\"number\",LayeredDigraphLayout,\"align\"),t>=0&&t<16&&(this.In=t,this.invalidateLayout()))}get setsPortSpots(){return this.Fn}set setsPortSpots(t){this.Fn!==t&&(U.i(t,\"boolean\",LayeredDigraphLayout,\"setsPortSpots\"),this.Fn=t,this.invalidateLayout())}get maxLayer(){return this.Ct}get maxIndex(){return this.vy}get maxColumn(){return this.qt}get minIndexLayer(){return this.Lg}get maxIndexLayer(){return this.Fs}static CycleDepthFirst=0;static CycleGreedy=1;static CycleFromLayers=2;static LayerOptimalLinkLength=10;static LayerLongestPathSink=11;static LayerLongestPathSource=12;static InitDepthFirstOut=20;static InitDepthFirstIn=21;static InitNaive=22;static AggressiveNone=30;static AggressiveLess=31;static AggressiveMore=32;static PackNone=0;static PackExpand=1;static PackStraighten=2;static PackMedian=4;static PackAll=15;static AlignNone=0;static AlignUpperLeft=1;static AlignUpperRight=2;static AlignLowerLeft=4;static AlignLowerRight=8;static AlignAll=15}class SegInfo{vo;J3;C1;$3;Z3;Ot;Je;Q3;constructor(){this.vo=0,this.J3=0,this.C1=0,this.$3=0,this.Z3=0,this.Ot=0,this.Je=null,this.Q3=0}}class LayeredDigraphNetwork extends LayoutNetwork{constructor(t){super(t)}createVertex(){return new LayeredDigraphVertex(this)}createEdge(){return new LayeredDigraphEdge(this)}}class LayeredDigraphVertex extends LayoutVertex{vo;Qr;Ot;wk;xk;ie;su;Wn;gk;ck;uk;af;On;XD;Kh;ts;nu;ue;En;Qy=null;_y=null;tw=null;iw=null;constructor(t){super(t),this.vo=-1,this.Qr=-1,this.Ot=-1,this.wk=NaN,this.xk=null,this.ie=!1,this.su=NaN,this.Wn=NaN,this.gk=0,this.ck=null,this.uk=null}static UD(t,i){return t.index-i.index}getProperSourceEdges(){if(!this.tw){const t=[];for(const i of this.yo){const e=i;e.valid&&t.push(e)}this.tw=t}return this.tw}getProperDestinationEdges(){if(!this.iw){const t=[];for(const i of this.tr){const e=i;e.valid&&t.push(e)}this.iw=t}return this.iw}getDestinationEdge(t){const i=this.getProperDestinationEdges();for(const e of i)if(e.toVertex===t)return e;U.n(\"Unable to find destination edge to given vertex\")}getProperSourceVertexes(){if(!this.Qy){const t=[];for(const i of this.yo){const e=i;!e.valid||e.fromVertex.layer<=e.toVertex.layer||t.push(e.fromVertex)}t.sort(LayeredDigraphVertex.UD),this.Qy=t}return this.Qy}getProperDestinationVertexes(){if(!this._y){const t=[];for(const i of this.tr){const e=i;!e.valid||e.fromVertex.layer<=e.toVertex.layer||t.push(e.toVertex)}t.sort(LayeredDigraphVertex.UD),this._y=t}return this._y}addSourceEdge(t){super.addSourceEdge(t),this.Qy=null,this.tw=null}deleteSourceEdge(t){super.deleteSourceEdge(t),this.Qy=null,this.tw=null}addDestinationEdge(t){super.addDestinationEdge(t),this._y=null,this.iw=null}deleteDestinationEdge(t){super.deleteDestinationEdge(t),this._y=null,this.iw=null}get layer(){return this.vo}set layer(t){this.vo!==t&&(U.i(t,\"number\",LayeredDigraphVertex,\"layer\"),this.vo=t)}get column(){return this.Qr}set column(t){this.Qr!==t&&(U.i(t,\"number\",LayeredDigraphVertex,\"column\"),this.Qr=t)}get index(){return this.Ot}set index(t){this.Ot!==t&&(U.i(t,\"number\",LayeredDigraphVertex,\"index\"),this.Ot=t)}get component(){return this.wk}set component(t){this.wk!==t&&(U.i(t,\"number\",LayeredDigraphVertex,\"component\"),this.wk=t)}get near(){return this.xk}set near(t){this.xk!==t&&(Debug&&t!==null&&U.e(t,LayeredDigraphVertex,LayeredDigraphVertex,\"near\"),this.xk=t)}}class LayeredDigraphEdge extends LayoutEdge{ie;bk;kk;Sk;Mk;Pk;Nk;constructor(t){super(t),this.ie=!1,this.bk=!1,this.kk=!1,this.Sk=NaN,this.Mk=NaN,this.Pk=0,this.Nk=0}get fromVertex(){return this.Ze}set fromVertex(t){this.Ze!==t&&(Debug&&t!==null&&U.e(t,LayeredDigraphVertex,LayeredDigraphEdge,\"fromVertex\"),this.Ze=t)}get toVertex(){return this.Qe}set toVertex(t){this.Qe!==t&&(Debug&&t!==null&&U.e(t,LayeredDigraphVertex,LayeredDigraphEdge,\"toVertex\"),this.Qe=t)}get valid(){return this.ie}set valid(t){this.ie!==t&&(U.i(t,\"boolean\",LayeredDigraphEdge,\"valid\"),this.ie=t)}get rev(){return this.bk}set rev(t){this.bk!==t&&(U.i(t,\"boolean\",LayeredDigraphEdge,\"rev\"),this.bk=t)}get forest(){return this.kk}set forest(t){this.kk!==t&&(U.i(t,\"boolean\",LayeredDigraphEdge,\"forest\"),this.kk=t)}get portFromPos(){return this.Sk}set portFromPos(t){this.Sk!==t&&(U.i(t,\"number\",LayeredDigraphEdge,\"portFromPos\"),this.Sk=t)}get portToPos(){return this.Mk}set portToPos(t){this.Mk!==t&&(U.i(t,\"number\",LayeredDigraphEdge,\"portToPos\"),this.Mk=t)}get portFromColOffset(){return this.Pk}set portFromColOffset(t){this.Pk!==t&&(U.i(t,\"number\",LayeredDigraphEdge,\"portFromColOffset\"),this.Pk=t)}get portToColOffset(){return this.Nk}set portToColOffset(t){this.Nk!==t&&(U.i(t,\"number\",LayeredDigraphEdge,\"portToColOffset\"),this.Nk=t)}}var TreePath=(y=>(y[y.Default=0]=\"Default\",y[y.Destination=1]=\"Destination\",y[y.Source=2]=\"Source\",y))(TreePath||{}),TreeSorting=(y=>(y[y.Forwards=10]=\"Forwards\",y[y.Reverse=11]=\"Reverse\",y[y.Ascending=12]=\"Ascending\",y[y.Descending=13]=\"Descending\",y))(TreeSorting||{}),TreeAlignment=(y=>(y[y.CenterSubtrees=20]=\"CenterSubtrees\",y[y.CenterChildren=21]=\"CenterChildren\",y[y.Start=22]=\"Start\",y[y.End=23]=\"End\",y[y.Bus=24]=\"Bus\",y[y.BusBranching=25]=\"BusBranching\",y[y.TopLeftBus=26]=\"TopLeftBus\",y[y.BottomRightBus=27]=\"BottomRightBus\",y[y.Custom=28]=\"Custom\",y))(TreeAlignment||{}),TreeCompaction=(y=>(y[y.None=30]=\"None\",y[y.Block=31]=\"Block\",y))(TreeCompaction||{}),TreeStyle=(y=>(y[y.Layered=40]=\"Layered\",y[y.LastParents=41]=\"LastParents\",y[y.Alternating=42]=\"Alternating\",y[y.RootOnly=43]=\"RootOnly\",y))(TreeStyle||{}),TreeArrangement=(y=>(y[y.Vertical=50]=\"Vertical\",y[y.Horizontal=51]=\"Horizontal\",y[y.FixedRoots=52]=\"FixedRoots\",y))(TreeArrangement||{}),TreeLayerStyle=(y=>(y[y.Individual=60]=\"Individual\",y[y.Siblings=61]=\"Siblings\",y[y.Uniform=62]=\"Uniform\",y))(TreeLayerStyle||{});class TreeLayout extends Layout{Bi;Ri;ou;Rg;hC;Be;Wi;Ts;X;Y;Ck;us;constructor(t){super(),this.Bi=new GSet,this.Ri=0,this.us=1,this.ou=40,this.Rg=60,this.hC=[],this.Be=!0,this.Wi=50,this.Ts=new Size(10,10).p();const i=new TreeNetwork(this);this.X=new TreeVertex(i),this.Y=new TreeVertex(i),this.Ck=[],t&&Object.assign(this,t)}cloneProtected(t){super.cloneProtected(t),t.Ri=this.Ri,t.ou=this.ou,t.Rg=this.Rg,t.Be=this.Be,t.Wi=this.Wi,t.Ts.c(this.Ts),t.X.copyInheritedPropertiesFrom(this.X),t.Y.copyInheritedPropertiesFrom(this.Y)}ai(t){t in TreeAlignment?this.alignment=t:t in TreeArrangement?this.arrangement=t:t in TreeCompaction?this.compaction=t:t in TreePath?this.path=t:t in TreeSorting?this.sorting=t:t in TreeStyle?this.treeStyle=t:super.ai(t)}createNetwork(){return new TreeNetwork(this)}makeNetwork(t){const i=this.createNetwork(),e=s=>{if(s instanceof Node)return!s.isLinkLabel&&s.category!==\"Comment\";if(s instanceof Link){const n=s.fromNode;if(n===null||n.isLinkLabel||n.category===\"Comment\")return!1;const o=s.toNode;return!(o===null||o.isLinkLabel||o.category===\"Comment\")}return!1};return t instanceof Diagram?(i.addParts(t.nodes,!0,e),i.addParts(t.links,!0,e)):t instanceof Group?i.addParts(t.memberParts,!1,e):i.addParts(t.iterator,!1,e),i}doLayout(t){Debug&&t===null&&U.n(\"Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts\"),this.network===null&&(this.network=this.makeNetwork(t)),this.arrangement!==52&&(this.arrangementOrigin=this.initialOrigin(this.arrangementOrigin));let i=this.diagram;i===null&&t instanceof Diagram&&(i=t),this.path===0&&i!==null?this.us=i.isTreePathToChildren?1:2:this.us=this.path===0?1:this.path,this.network.vertexes.count>0&&(this._3(),this.tE(),this.iE(),this.eE(),this.eC(),this.sE(),this.arrangeTrees(),this.updateParts()),this.network=null,this.Bi=new GSet,this.isValidLayout=!0}_3(){this.network.deleteSelfEdges();const t=this.network.vertexes.iterator;for(;t.next();){const n=t.value;n.initialized=!1,n.level=0,n.parent=null,n.children=[]}if(this.Bi.count>0){const n=new GSet,o=this.Bi.iterator;for(;o.next();){const r=o.value;if(r instanceof Node){const l=this.network.findVertex(r);l!==null&&n.add(l)}else r instanceof TreeVertex&&n.add(r)}this.Bi=n}this.Bi.count===0&&this.findRoots();const i=this.Bi.copy().iterator;for(;i.next();){const n=i.value;n.initialized||(n.initialized=!0,this.aC(n))}let e=this.network.vertexes,s=null;for(;s=this.nE(e),s.count>0;){const n=this.GD(s);n!==null&&this.Bi.add(n),n.initialized=!0,this.aC(n),e=s}}nE(t){const i=new GSet,e=t.iterator;for(;e.next();){const s=e.value;s.initialized||i.add(s)}return i}findRoots(){const t=this.network.vertexes,i=t.iterator;for(;i.next();){const e=i.value;switch(this.us){case 1:e.sourceEdges.count===0&&this.Bi.add(e);break;case 2:e.destinationEdges.count===0&&this.Bi.add(e);break;default:U.n(\"Unhandled path value \"+this.us.toString())}}if(this.Bi.count===0){const e=this.GD(t);e!==null&&this.Bi.add(e)}}GD(t){let i=999999,e=null;const s=t.iterator;for(;s.next();){const n=s.value;switch(this.us){case 1:n.sourceEdges.count<i&&(i=n.sourceEdges.count,e=n);break;case 2:n.destinationEdges.count<i&&(i=n.destinationEdges.count,e=n);break;default:U.n(\"Unhandled path value \"+this.us.toString())}}return e}aC(t){if(t===null)return;switch(Debug&&U.e(t,TreeVertex,TreeLayout,\"walkTree:v\"),this.us){case 1:if(t.destinationEdges.count>0){const s=new List,n=t.destinationVertexes;for(;n.next();){const o=n.value;this.HD(t,o)&&s.add(o)}s.count>0&&(t.children=s.toArray())}break;case 2:if(t.sourceEdges.count>0){const s=new List,n=t.sourceVertexes;for(;n.next();){const o=n.value;this.HD(t,o)&&s.add(o)}s.count>0&&(t.children=s.toArray())}break;default:U.n(\"Unhandled path value\"+this.us.toString())}const i=t.children,e=i.length;for(let s=0;s<e;s++){const n=i[s];n.initialized=!0,n.level=t.level+1,n.parent=t,this.Bi.delete(n)}for(let s=0;s<e;s++){const n=i[s];this.aC(n)}}HD(t,i){return Debug&&U.e(t,TreeVertex,TreeLayout,\"walkOK:v\"),Debug&&U.e(i,TreeVertex,TreeLayout,\"walkOK:c\"),i.initialized?this.oE(i,t)||i.level>t.level?!1:(this.rE(i.parent,i),!0):!0}oE(t,i){if(i===null)return!1;Debug&&U.e(t,TreeVertex,TreeLayout,\"isAncestor:a\"),Debug&&U.e(i,TreeVertex,TreeLayout,\"isAncestor:b\");let e=i.parent;for(;e!==null&&e!==t;)e=e.parent;return e===t}rE(t,i){if(t===null||i===null)return;Debug&&U.e(t,TreeVertex,TreeLayout,\"removeChild:p\"),Debug&&U.e(i,TreeVertex,TreeLayout,\"removeChild:c\");const e=t.children;let s=0;for(let n=0;n<e.length;n++)e[n]===i&&s++;if(s>0){const n=new Array(e.length-s);let o=0;for(let r=0;r<e.length;r++)e[r]!==i&&(n[o++]=e[r]);t.children=n}}tE(){const t=this.Bi.iterator;for(;t.next();){const i=t.value;i instanceof TreeVertex&&this.qD(i)}}qD(t){if(t===null)return;Debug&&U.e(t,TreeVertex,TreeLayout,\"initializeTree:v\"),this.initializeTreeVertexValues(t),t.alignment===25&&this.sortTreeVertexChildren(t);let i=0,e=t.childrenCount,s=0;const n=t.children,o=n.length;for(let r=0;r<o;r++){const l=n[r];this.qD(l),i+=l.descendantCount+1,e=Math.max(e,l.maxChildrenCount),s=Math.max(s,l.maxGenerationCount)}t.descendantCount=i,t.maxChildrenCount=e,t.maxGenerationCount=e>0?s+1:0}lE(t){switch(Debug&&U.e(t,TreeVertex,TreeLayout,\"mom:v\"),this.ou){default:case 40:return t.parent!==null?t.parent:this.X;case 43:return t.parent===null?this.X:t.parent.parent===null?this.Y:t.parent;case 42:return t.parent!==null?t.parent.parent!==null?t.parent.parent:this.Y:this.X;case 41:{let i=!0;if(t.childrenCount===0)i=!1;else{const e=t.children,s=e.length;for(let n=0;n<s;n++)if(e[n].childrenCount>0){i=!1;break}}return i&&t.parent!==null?this.Y:t.parent!==null?t.parent:this.X}}}initializeTreeVertexValues(t){Debug&&U.e(t,TreeVertex,TreeLayout,\"initializeTreeVertexValues:v\");const i=this.lE(t);if(t.copyInheritedPropertiesFrom(i),t.parent!==null&&t.parent.alignment===25){let e=t.angle;const s=t.parent.children;let n=0;for(;n<s.length&&t!==s[n];)n++;n%2===0?n!==s.length-1&&(e===90?e=180:e===180?e=270:e===270?e=180:e=270):e===90?e=0:e===180?e=90:e===270?e=0:e=90,t.angle=e}t.initialized=!0}iE(){const t=this.Bi.iterator;for(;t.next();){const i=t.value;i instanceof TreeVertex&&this.WD(i)}}WD(t){if(t===null)return;Debug&&U.e(t,TreeVertex,TreeLayout,\"assignTree:v\"),this.assignTreeVertexValues(t);const i=t.children,e=i.length;for(let s=0;s<e;s++){const n=i[s];this.WD(n)}}assignTreeVertexValues(t){}eE(){const t=this.Bi.iterator;for(;t.next();){const i=t.value;i instanceof TreeVertex&&this.jD(i)}}jD(t){if(t===null)return;Debug&&U.e(t,TreeVertex,TreeLayout,\"sortTree:v\"),t.alignment!==25&&this.sortTreeVertexChildren(t);const i=t.children,e=i.length;for(let s=0;s<e;s++){const n=i[s];this.jD(n)}}sortTreeVertexChildren(t){switch(Debug&&U.e(t,TreeVertex,TreeLayout,\"sortTreeVertexChildren:v\"),t.sorting){default:case 10:break;case 11:t.children.reverse();break;case 12:t.children.sort(t.comparer);break;case 13:t.children.sort(t.comparer),t.children.reverse();break}}eC(){if(!this.comments)return;const t=this.network.vertexes.iterator;for(;t.next();){const i=t.value;this.addComments(i)}}addComments(t){Debug&&U.e(t,TreeVertex,TreeLayout,\"addComments:v\");const i=t.angle,e=t.parent;let s=0,n=21,o=!1;e!==null&&(s=e.angle,n=e.alignment,o=this.isBusAlignment(n));const r=i===90||i===270,l=s===90||s===270,h=t.childrenCount===0;let f=0,a=0,c=0;const u=t.commentSpacing;if(t.node!==null){const d=t.node.findNodesConnected();for(;d.next();){const m=d.value;if(m.category!==\"Comment\"||!m.canLayout())continue;t.comments===null&&(t.comments=[]),t.comments.push(m),m.ensureBounds();const g=m.measuredBounds;r&&!h||!o&&!l&&h||o&&l&&h?(f=Math.max(f,g.width),a+=g.height+Math.abs(c)):(f+=g.width+Math.abs(c),a=Math.max(a,g.height)),c=u}}if(t.comments!==null){r&&!h||!o&&!l&&h||o&&l&&h?(f+=Math.abs(t.commentMargin),a=Math.max(0,a-t.height)):(a+=Math.abs(t.commentMargin),f=Math.max(0,f-t.width));const d=Rect.K(0,0,t.bounds.width+f,t.bounds.height+a);t.bounds=d,Rect.o(d)}}isBusAlignment(t){return t===24||t===25||t===26||t===27}ew(t){return t===24||t===25}fC(t){Debug&&U.e(t,TreeVertex,TreeLayout,\"isLeftSideBus:v\");const i=t.parent;if(i!==null){const e=i.alignment;if(this.isBusAlignment(e))if(this.ew(e)){const s=i.children;let n=0;for(;n<s.length&&t!==s[n];)n++;return n%2===0}else return e===26}return!1}layoutComments(t){if(Debug&&U.e(t,TreeVertex,TreeLayout,\"layoutComments:v\"),t.comments!==null){const e=t.node.measuredBounds,s=t.parent,n=t.angle;let o=0,r=21,l=!1;s!==null&&(o=s.angle,r=s.alignment,l=this.isBusAlignment(r));const h=n===90||n===270,f=o===90||o===270,a=t.childrenCount===0,c=this.fC(t);let u=0;const d=t.comments,m=d.length,g=Point.a();for(let w=0;w<m;w++){const x=d[w],k=x.measuredBounds;if(h&&!a||!l&&!f&&a||l&&f&&a){if(o>135&&!l||f&&c)if(t.commentMargin>=0){g.s(t.bounds.x-t.commentMargin-k.width,t.bounds.y+u),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleLeft,S.toSpot=Spot.MiddleRight}}else{g.s(t.bounds.x+t.focus.x*2-t.commentMargin,t.bounds.y+u),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleRight,S.toSpot=Spot.MiddleLeft}}else if(t.commentMargin>=0){g.s(t.bounds.x+t.focus.x*2+t.commentMargin,t.bounds.y+u),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleRight,S.toSpot=Spot.MiddleLeft}}else{g.s(t.bounds.x+t.commentMargin-k.width,t.bounds.y+u),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleLeft,S.toSpot=Spot.MiddleRight}}t.commentSpacing>=0?u+=k.height+t.commentSpacing:u+=t.commentSpacing-k.height}else{if(o>135&&!l||!f&&c)if(t.commentMargin>=0){g.s(t.bounds.x+u,t.bounds.y-t.commentMargin-k.height),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleTop,S.toSpot=Spot.MiddleBottom}}else{g.s(t.bounds.x+u,t.bounds.y+t.focus.y*2-t.commentMargin),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleBottom,S.toSpot=Spot.MiddleTop}}else if(t.commentMargin>=0){g.s(t.bounds.x+u,t.bounds.y+t.focus.y*2+t.commentMargin),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleBottom,S.toSpot=Spot.MiddleTop}}else{g.s(t.bounds.x+u,t.bounds.y+t.commentMargin-k.height),x.move(g);const b=x.findLinksInto();for(;b.next();){const S=b.value;S.fromSpot=Spot.MiddleTop,S.toSpot=Spot.MiddleBottom}}t.commentSpacing>=0?u+=k.width+t.commentSpacing:u+=t.commentSpacing-k.width}}Point.o(g);const p=u-t.commentSpacing-(h?e.height:e.width);if(this.us===1){const w=t.destinationEdges;for(;w.next();){const k=w.value.link;k!==null&&!k.isAvoiding&&(k.fromEndSegmentLength=p>0?p:NaN)}}else{const w=t.sourceEdges;for(;w.next();){const k=w.value.link;k!==null&&!k.isAvoiding&&(k.toEndSegmentLength=p>0?p:NaN)}}}}sE(){if(this.layerStyle===62){const i=[];let e=this.network.vertexes.iterator;for(;e.next();){const s=e.value;let n=s.parent;n===null&&(n=s);const o=n.angle===0||n.angle===180;let r=i[s.level];r===void 0&&(r=0),i[s.level]=Math.max(r,o?s.width:s.height)}for(let s=0;s<i.length;s++)i[s]===void 0&&(i[s]=0);for(this.hC=i,e=this.network.vertexes.iterator;e.next();){const s=e.value;let n=s.parent;n===null&&(n=s),n.angle===0||n.angle===180?(n.angle===180&&(s.focusX+=i[s.level]-s.width),s.width=i[s.level]):(n.angle===270&&(s.focusY+=i[s.level]-s.height),s.height=i[s.level])}}else if(this.layerStyle===61){const i=this.network.vertexes.iterator;for(;i.next();){const e=i.value,s=e.angle===0||e.angle===180;let n=-1;for(let o=0;o<e.children.length;o++){const r=e.children[o];n=Math.max(n,s?r.width:r.height)}if(n>=0)for(let o=0;o<e.children.length;o++){const r=e.children[o];s?(e.angle===180&&(r.focusX+=n-r.width),r.width=n):(e.angle===270&&(r.focusY+=n-r.height),r.height=n)}}}const t=this.Bi.iterator;for(;t.next();){const i=t.value;i instanceof TreeVertex&&this.layoutTree(i)}}layoutTree(t){if(t===null)return;Debug&&U.e(t,TreeVertex,TreeLayout,\"layoutTree:v\");const i=t.children,e=i.length;for(let s=0;s<e;s++){const n=i[s];this.layoutTree(n)}switch(t.compaction){case 30:this.vD(t);break;default:case 31:t.alignment===25?this.vD(t):this.hE(t);break}}vD(t){if(Debug&&U.e(t,TreeVertex,TreeLayout,\"layoutTreeNone:v\"),t.childrenCount===0){let I=!1,R=0,O=21;t.parent!==null&&(R=t.parent.angle,O=t.parent.alignment,I=this.isBusAlignment(O));const Y=this.fC(t);t.V.s(0,0),t.xt.s(t.width,t.height),t.parent!==null&&t.comments!==null&&((R===180||R===270)&&!I||Y)?R===180&&!I||(R===90||R===270)&&Y?t.ut.s(t.width-t.focus.x*2,0):t.ut.s(0,t.height-t.focus.y*2):t.ut.s(0,0);return}const i=this.orthoAngle(t),e=i===90||i===270;let s=0;const n=t.children,o=n.length;for(let I=0;I<o;I++){const R=n[I];s=Math.max(s,e?R.xt.width:R.xt.height)}const r=t.alignment,l=r===22,h=r===23,f=this.isBusAlignment(r),a=Math.max(0,t.breadthLimit),c=this.computeLayerSpacing(t),u=t.nodeSpacing,d=this.computeNodeIndent(t),m=l||h?0:d/2,g=t.rowSpacing;let p=0;(l||h)&&(p=Math.max(0,t.rowIndent));const w=t.width,x=t.height;let k=0,b=0,S=0,M=0,A=0,C=0,P=0,N=0,T=0,L=0;if(f&&!this.ew(r)&&i>135&&n.reverse(),this.ew(r))if(o>1)for(let I=0;I<o;I++){const R=n[I],O=R.xt;I%2===0&&I!==o-1?T=Math.max(T,(e?O.width:O.height)+this.computeBusNodeSpacing(R)-u):I%2!==0&&(L=Math.max(L,(e?O.width:O.height)+this.computeBusNodeSpacing(R)-u))}else o===1&&(T=e?n[0].xt.width:n[0].xt.height);if(f)switch(r){case 24:case 25:let I;i<135?I=this.JD(t,n,T,L,k,b):I=this.$D(t,n,T,L,k,b),T=I.x,k=I.width,b=I.height;break;case 26:for(let R=0;R<o;R++){const O=n[R],Y=O.xt,K=P===0?0:g;e?(O.V.s(s-Y.width,A+K),k=Math.max(k,Y.width),b=Math.max(b,A+K+Y.height),A+=K+Y.height):(O.V.s(M+K,s-Y.height),k=Math.max(k,M+K+Y.width),b=Math.max(b,Y.height),M+=K+Y.width),P++}break;case 27:for(let R=0;R<o;R++){const O=n[R],Y=O.xt,K=P===0?0:g;e?(O.V.s(u/2+t.focus.x,A+K),k=Math.max(k,Y.width),b=Math.max(b,A+K+Y.height),A+=K+Y.height):(O.V.s(M+K,u/2+t.focus.y),k=Math.max(k,M+K+Y.width),b=Math.max(b,Y.height),M+=K+Y.width),P++}break}else for(let I=0;I<o;I++){const R=n[I],O=R.xt;if(e){a>0&&P>0&&M+u+O.width>a&&(M<s&&this.ff(t,r,s-M,0,N,I-1),C++,P=0,N=I,S=b,M=0,A=i>135?-b-g:b+g);const Y=P===0?m:u;this.Ak(R,0,A),R.V.s(M+Y,A),k=Math.max(k,M+Y+O.width),b=Math.max(b,S+(C===0?0:g)+O.height),M+=Y+O.width}else{a>0&&P>0&&A+u+O.height>a&&(A<s&&this.ff(t,r,0,s-A,N,I-1),C++,P=0,N=I,S=k,A=0,M=i>135?-k-g:k+g);const Y=P===0?m:u;this.Ak(R,M,0),R.V.s(M,A+Y),b=Math.max(b,A+Y+O.height),k=Math.max(k,S+(C===0?0:g)+O.width),A+=Y+O.height}P++}C>0&&(e?(b+=Math.max(0,c),M<k&&this.ff(t,r,k-M,0,N,o-1),p>0&&(h||this.ru(t,p,0,0,o-1),k+=p)):(k+=Math.max(0,c),A<b&&this.ff(t,r,0,b-A,N,o-1),p>0&&(h||this.ru(t,0,p,0,o-1),b+=p)));let D=0,F=0;switch(r){case 20:e?D+=k/2-t.focus.x-d/2:F+=b/2-t.focus.y-d/2;break;default:case 21:if(C>0)e?D+=k/2-t.focus.x-d/2:F+=b/2-t.focus.y-d/2;else{const R=o;if(e){const O=n[0].V.x+n[0].ut.x,Y=n[R-1].V.x+n[R-1].ut.x+n[R-1].focus.x*2;D+=O+(Y-O)/2-t.focus.x-d/2}else{const O=n[0].V.y+n[0].ut.y,Y=n[R-1].V.y+n[R-1].ut.y+n[R-1].focus.y*2;F+=O+(Y-O)/2-t.focus.y-d/2}}break;case 22:e?(D-=d,k+=d):(F-=d,b+=d);break;case 23:e?(D+=k-t.width+d,k+=d):(F+=b-t.height+d,b+=d);break;case 24:case 25:e?o>1?D+=T+u/2-t.focus.x:D+=n[0].focus.x-t.focus.x+n[0].ut.x:o>1?F+=T+u/2-t.focus.y:F+=n[0].focus.y-t.focus.y+n[0].ut.y;break;case 26:e?D+=k+u/2-t.focus.x:F+=b+u/2-t.focus.y;break;case 27:break;case 28:const I=this.customAlignment(t,D,F,k,b);D=I[0],F=I[1],k=I[2],b=I[3];break}for(let I=0;I<o;I++){const R=n[I];e?R.V.s(R.V.x+R.ut.x-D,R.V.y+(i>135?(f?-b:-R.xt.height)+R.ut.y-c:x+c+R.ut.y)):R.V.s(R.V.x+(i>135?(f?-k:-R.xt.width)+R.ut.x-c:w+c+R.ut.x),R.V.y+R.ut.y-F)}e?(k=this.cC(t,k,D),D<0&&(D=0),i>135&&(F+=b+c),b=Math.max(Math.max(b,x),b+x+c)):(i>135&&(D+=k+c),k=Math.max(Math.max(k,w),k+w+c),b=this.uC(t,b,F),F<0&&(F=0)),t.ut.s(D,F),t.xt.s(k,b)}customAlignment(t,i,e,s,n){return[i,e,s,n]}JD(t,i,e,s,n,o){Debug&&U.e(t,TreeVertex,TreeLayout,\"layoutBusChildrenPosDir:v\");const r=i.length;if(r===0)return new Rect(e,0,n,o);if(r===1){const p=i[0];return n=p.xt.width,o=p.xt.height,new Rect(e,0,n,o)}const l=t.nodeSpacing,h=t.rowSpacing,a=this.orthoAngle(t)===90;let c=0,u=0,d=0;for(let p=0;p<r;p++){if(p%2!==0||r>1&&p===r-1)continue;const w=i[p],x=w.xt,k=c===0?0:h;if(a){const b=this.computeBusNodeSpacing(w)-l;w.V.s(e-(x.width+b),d+k),n=Math.max(n,x.width+b),o=Math.max(o,d+k+x.height),d+=k+x.height}else{const b=this.computeBusNodeSpacing(w)-l;w.V.s(u+k,e-(x.height+b)),o=Math.max(o,x.height+b),n=Math.max(n,u+k+x.width),u+=k+x.width}c++}c=0;const m=u,g=d;a?(u=e+l,d=0):(u=0,d=e+l);for(let p=0;p<r;p++){if(p%2===0)continue;const w=i[p],x=w.xt,k=c===0?0:h;if(a){const b=this.computeBusNodeSpacing(w)-l;w.V.s(u+b,d+k),n=Math.max(n,u+x.width+b),o=Math.max(o,d+k+x.height),d+=k+x.height}else{const b=this.computeBusNodeSpacing(w)-l;w.V.s(u+k,d+b),n=Math.max(n,u+k+x.width),o=Math.max(o,d+x.height+b),u+=k+x.width}c++}if(r>1&&r%2===1){const p=i[r-1],w=p.xt,x=this.computeBusLastRowSpacing(p,a?Math.max(Math.abs(g),Math.abs(d)):Math.max(Math.abs(m),Math.abs(u)));if(a){p.V.s(e+l/2-p.focus.x-p.ut.x,o+x);const k=e+l/2-p.focus.x-p.ut.x;n=Math.max(n,k+w.width),k<0&&(n-=k),o=Math.max(o,Math.max(g,d)+x+w.height),p.V.x<0&&(e=this.Lk(t,p.V.x,!1,e,l))}else{p.V.s(n+x,e+l/2-p.focus.y-p.ut.y),n=Math.max(n,Math.max(m,u)+x+w.width);const k=e+l/2-p.focus.y-p.ut.y;o=Math.max(o,k+w.height),k<0&&(o-=k),p.V.y<0&&(e=this.Lk(t,p.V.y,!0,e,l))}}return new Rect(e,0,n,o)}$D(t,i,e,s,n,o){Debug&&U.e(t,TreeVertex,TreeLayout,\"layoutBusChildrenNegDir:v\");const r=i.length;if(r===0)return new Rect(e,0,n,o);if(r===1){const p=i[0];return n=p.xt.width,o=p.xt.height,new Rect(e,0,n,o)}const l=t.nodeSpacing,h=t.rowSpacing,a=this.orthoAngle(t)===270;let c=0,u=0,d=0;for(let p=0;p<r;p++){if(p%2!==0||r>1&&p===r-1)continue;const w=i[p],x=w.xt,k=c===0?0:h;if(a){const b=this.computeBusNodeSpacing(w)-l;d-=k+x.height,w.V.s(e-(x.width+b),d),n=Math.max(n,x.width+b),o=Math.max(o,Math.abs(d))}else{const b=this.computeBusNodeSpacing(w)-l;u-=k+x.width,w.V.s(u,e-(x.height+b)),o=Math.max(o,x.height+b),n=Math.max(n,Math.abs(u))}c++}c=0;const m=u,g=d;a?(u=e+l,d=0):(u=0,d=e+l);for(let p=0;p<r;p++){if(p%2===0)continue;const w=i[p],x=w.xt,k=c===0?0:h;if(a){const b=this.computeBusNodeSpacing(w)-l;d-=k+x.height,w.V.s(u+b,d),n=Math.max(n,u+x.width+b),o=Math.max(o,Math.abs(d))}else{const b=this.computeBusNodeSpacing(w)-l;u-=k+x.width,w.V.s(u,d+b),o=Math.max(o,d+x.height+b),n=Math.max(n,Math.abs(u))}c++}if(r>1&&r%2===1){const p=i[r-1],w=p.xt,x=this.computeBusLastRowSpacing(p,a?Math.max(Math.abs(g),Math.abs(d)):Math.max(Math.abs(m),Math.abs(u)));if(a){p.V.s(e+l/2-p.focus.x-p.ut.x,-o-w.height-x);const k=e+l/2-p.focus.x-p.ut.x;n=Math.max(n,k+w.width),k<0&&(n-=k),o=Math.max(o,Math.abs(Math.min(g,d))+x+w.height),p.V.x<0&&(e=this.Lk(t,p.V.x,!1,e,l))}else{p.V.s(-n-w.width-x,e+l/2-p.focus.y-p.ut.y),n=Math.max(n,Math.abs(Math.min(m,u))+x+w.width);const k=e+l/2-p.focus.y-p.ut.y;o=Math.max(o,k+w.height),k<0&&(o-=k),p.V.y<0&&(e=this.Lk(t,p.V.y,!0,e,l))}}for(let p=0;p<r;p++){const w=i[p];a?w.V.s(w.V.x,w.V.y+o):w.V.s(w.V.x+n,w.V.y)}return new Rect(e,0,n,o)}computeBusNodeSpacing(t){return Debug&&U.e(t,TreeVertex,TreeLayout,\"fixRelativePostions:child\"),t.parent===null?0:t.parent.nodeSpacing}computeBusLastRowSpacing(t,i){return Debug&&U.e(t,TreeVertex,TreeLayout,\"fixRelativePostions:lastchild\"),t.parent===null?0:t.parent.rowSpacing}Lk(t,i,e,s,n){Debug&&U.e(t,TreeVertex,TreeLayout,\"fixRelativePostions:v\");const o=t.children,r=o.length;for(let h=0;h<r;h++)e?o[h].V.s(o[h].V.x,o[h].V.y-i):o[h].V.s(o[h].V.x-i,o[h].V.y);const l=o[r-1];return Math.max(s,e?l.ut.y+l.focus.y-n/2:l.ut.x+l.focus.x-n/2)}cC(t,i,e){switch(Debug&&U.e(t,TreeVertex,TreeLayout,\"calculateSubwidth:v\"),t.alignment){case 21:case 20:let s=i;return e+t.width>s&&(s=e+t.width),e<0&&(s-=e),s;case 22:return t.width>i?t.width:i;case 23:return t.focus.x*2>i?t.width:i+t.width-t.focus.x*2;case 24:case 25:const n=Math.min(0,e),o=Math.max(i,e+t.width);return Math.max(t.width,o-n);case 26:return t.width-t.focus.x+t.nodeSpacing/2+i;case 27:return Math.max(t.width,t.focus.x+t.nodeSpacing/2+i);default:return i}}uC(t,i,e){switch(Debug&&U.e(t,TreeVertex,TreeLayout,\"calculateSubheight:v\"),t.alignment){case 21:case 20:let s=i;return e+t.height>s&&(s=e+t.height),e<0&&(s-=e),s;case 22:return t.height>i?t.height:i;case 23:return t.focus.y*2>i?t.height:i+t.height-t.focus.y*2;case 24:case 25:const n=Math.min(0,e),o=Math.max(i,e+t.height);return Math.max(t.height,o-n);case 26:return t.height-t.focus.y+t.nodeSpacing/2+i;case 27:return Math.max(t.height,t.focus.y+t.nodeSpacing/2+i);default:return i}}dC(t,i,e){switch(Debug&&U.j(t,TreeAlignment,\"TreeAlignment\"),t){case 20:i/=2,e/=2;break;case 21:i/=2,e/=2;break;case 22:i=0,e=0;break;case 23:break;default:U.n(\"Unhandled alignment value \"+t.toString())}return new Point(i,e)}ff(t,i,e,s,n,o){Debug&&U.e(t,TreeVertex,TreeLayout,\"shiftRelPosAlign:v\"),Debug&&U.j(i,TreeAlignment,\"TreeAlignment\");const r=this.dC(i,e,s);this.ru(t,r.x,r.y,n,o)}ru(t,i,e,s,n){if(Debug&&U.e(t,TreeVertex,TreeLayout,\"shiftRelPos:v\"),i===0&&e===0)return;const o=t.children;for(let r=s;r<=n;r++){const h=o[r].V;h.x+=i,h.y+=e}}Ak(t,i,e){Debug&&(U.e(t,TreeVertex,TreeLayout,\"recordMidPoints:v\"),U.i(i,\"number\",TreeLayout,\"recordMidPoints:x\"),U.i(e,\"number\",TreeLayout,\"recordMidPoints:y\"));const s=t.parent;switch(this.us){case 1:{const n=t.sourceEdges;for(;n.next();){const o=n.value;o.fromVertex===s&&o.relativePoint.s(i,e)}break}case 2:{const n=t.destinationEdges;for(;n.next();){const o=n.value;o.toVertex===s&&o.relativePoint.s(i,e)}break}default:U.n(\"Unhandled path value \"+this.us.toString())}}hE(t){if(Debug&&U.e(t,TreeVertex,TreeLayout,\"layoutTreeBlock:v\"),t.childrenCount===0){const V=t.parent;let H=!1,W=0,j=21;V!==null&&(W=V.angle,j=V.alignment,H=this.isBusAlignment(j));const $=this.fC(t);t.V.s(0,0),t.xt.s(t.width,t.height),t.parent!==null&&t.comments!==null&&((W===180||W===270)&&!H||$)?W===180&&!H||(W===90||W===270)&&$?t.ut.s(t.width-t.focus.x*2,0):t.ut.s(0,t.height-t.focus.y*2):t.ut.s(0,0),t.Ig=null,t.Og=null;return}const i=this.orthoAngle(t),e=i===90||i===270;let s=0;const n=t.children,o=n.length;for(let V=0;V<o;V++){const H=n[V];s=Math.max(s,e?H.xt.width:H.xt.height)}const r=t.alignment,l=r===22,h=r===23,f=this.isBusAlignment(r),a=Math.max(0,t.breadthLimit),c=this.computeLayerSpacing(t),u=t.nodeSpacing,d=this.computeNodeIndent(t),m=t.rowSpacing;let g=0;(l||h)&&(g=Math.max(0,t.rowIndent));const p=t.width,w=t.height;let x=0,k=0,b=0,S=null,M=null,A=0,C=0,P=0,N=0,T=0,L=0,D=0,F=0,I=0;if(f&&!this.ew(r)&&i>135&&n.reverse(),this.ew(r))if(o>1)for(let V=0;V<o;V++)V%2===0&&V!==o-1?F=Math.max(F,e?n[V].xt.width:n[V].xt.height):V%2!==0&&(I=Math.max(I,e?n[V].xt.width:n[V].xt.height));else o===1&&(F=e?n[0].xt.width:n[0].xt.height);if(f){switch(r){case 24:let V;i<135?V=this.JD(t,n,F,I,x,k):V=this.$D(t,n,F,I,x,k),F=V.x,x=V.width,k=V.height;break;case 26:for(let H=0;H<o;H++){const W=n[H],j=W.xt,$=L===0?0:m;e?(W.V.s(s-j.width,N+$),x=Math.max(x,j.width),k=Math.max(k,N+$+j.height),N+=$+j.height):(W.V.s(P+$,s-j.height),x=Math.max(x,P+$+j.width),k=Math.max(k,j.height),P+=$+j.width),L++}break;case 27:for(let H=0;H<o;H++){const W=n[H],j=W.xt,$=L===0?0:m;e?(W.V.s(u/2+t.focus.x,N+$),x=Math.max(x,j.width),k=Math.max(k,N+$+j.height),N+=$+j.height):(W.V.s(P+$,u/2+t.focus.y),x=Math.max(x,P+$+j.width),k=Math.max(k,j.height),P+=$+j.width),L++}break}S=this.de(2),M=this.de(2),e?(S[0].s(0,0),S[1].s(0,k),M[0].s(x,0),M[1].s(x,k)):(S[0].s(0,0),S[1].s(x,0),M[0].s(0,k),M[1].s(x,k))}else for(let V=0;V<o;V++){const H=n[V],W=H.xt;if(e){a>0&&L>0&&P+u+W.width>a&&(P<s&&this.ff(t,r,s-P,0,D,V-1),T++,L=0,D=V,b=k,P=0,N=i>135?-k-m:k+m),this.Ak(H,0,N);let j=0;if(L===0)S=H.Ig,M=H.Og,A=W.width,C=W.height,(S===null||M===null||i!==this.orthoAngle(H))&&(S=this.de(2),M=this.de(2),S[0].s(0,0),S[1].s(0,C),M[0].s(A,0),M[1].s(A,C));else{const $=U.lt(),X=this.ZD(t,H,S,M,A,C,$);j=X.x,S=$[0],M=$[1],A=X.width,C=X.height,U.tt($),P<W.width&&j<0&&(this.ru(t,-j,0,D,V-1),this.Tk(S,-j,0),this.Tk(M,-j,0),j=0)}H.V.s(j,N),x=Math.max(x,A),k=Math.max(k,b+(T===0?0:m)+W.height),P=A}else{a>0&&L>0&&N+u+W.height>a&&(N<s&&this.ff(t,r,0,s-N,D,V-1),T++,L=0,D=V,b=x,N=0,P=i>135?-x-m:x+m),this.Ak(H,P,0);let j=0;if(L===0)S=H.Ig,M=H.Og,A=W.width,C=W.height,(S===null||M===null||i!==this.orthoAngle(H))&&(S=this.de(2),M=this.de(2),S[0].s(0,0),S[1].s(A,0),M[0].s(0,C),M[1].s(A,C));else{const $=U.lt(),X=this.ZD(t,H,S,M,A,C,$);j=X.x,S=$[0],M=$[1],A=X.width,C=X.height,U.tt($),N<W.height&&j<0&&(this.ru(t,0,-j,D,V-1),this.Tk(S,0,-j),this.Tk(M,0,-j),j=0)}H.V.s(P,j),k=Math.max(k,C),x=Math.max(x,b+(T===0?0:m)+W.width),N=C}L++}T>0&&(e?(k+=Math.max(0,c),P<x&&this.ff(t,r,x-P,0,D,o-1),g>0&&(h||this.ru(t,g,0,0,o-1),x+=g)):(x+=Math.max(0,c),N<k&&this.ff(t,r,0,k-N,D,o-1),g>0&&(h||this.ru(t,0,g,0,o-1),k+=g)));let R=0,O=0;switch(r){case 20:e?R+=x/2-t.focus.x-d/2:O+=k/2-t.focus.y-d/2;break;default:case 21:if(T>0)e?R+=x/2-t.focus.x-d/2:O+=k/2-t.focus.y-d/2;else{const H=o;if(e){const W=n[0].V.x+n[0].ut.x,j=n[H-1].V.x+n[H-1].ut.x+n[H-1].focus.x*2;R+=W+(j-W)/2-t.focus.x-d/2}else{const W=n[0].V.y+n[0].ut.y,j=n[H-1].V.y+n[H-1].ut.y+n[H-1].focus.y*2;O+=W+(j-W)/2-t.focus.y-d/2}}break;case 22:e?(R-=d,x+=d):(O-=d,k+=d);break;case 23:e?(R+=x-t.width+d,x+=d):(O+=k-t.height+d,k+=d);break;case 24:e?o>1?R+=F+u/2-t.focus.x:R+=n[0].focus.x-t.focus.x+n[0].ut.x:o>1?O+=F+u/2-t.focus.y:O+=n[0].focus.y-t.focus.y+n[0].ut.y;break;case 26:e?R+=x+u/2-t.focus.x:O+=k+u/2-t.focus.y;break;case 27:break;case 28:const V=this.customAlignment(t,R,O,x,k);R=V[0],O=V[1],x=V[2],k=V[3];break}for(let V=0;V<o;V++){const H=n[V];e?H.V.s(H.V.x+H.ut.x-R,H.V.y+(i>135?(f?-k:-H.xt.height)+H.ut.y-c:w+c+H.ut.y)):H.V.s(H.V.x+(i>135?(f?-x:-H.xt.width)+H.ut.x-c:p+c+H.ut.x),H.V.y+H.ut.y-O)}let Y=0,K=0;if(f)e?(x=this.cC(t,x,R),R<0&&(R=0),i>135&&(O+=k+c),k+=w+c,r===27&&(Y+=u/2+t.focus.x),K+=w+c):(i>135&&(R+=x+c),x+=p+c,k=this.uC(t,k,O),O<0&&(O=0),r===27&&(K+=u/2+t.focus.y),Y+=p+c);else if(e){if(t.comments===null){if(p>x){const V=this.dC(r,p-x,0);Y=V.x,K=V.y,x=p,R=0}}else x=this.cC(t,x,R);R<0&&(Y-=R,R=0),i>135&&(O+=k+c),k=Math.max(Math.max(k,w),k+w+c),K+=w+c}else{if(i>135&&(R+=x+c),x=Math.max(Math.max(x,p),x+p+c),t.comments===null){if(w>k){const V=this.dC(r,0,w-k);Y=V.x,K=V.y,k=w,O=0}}else k=this.uC(t,k,O);O<0&&(K-=O,O=0),Y+=p+c}let B,z;if(T>0)B=this.de(4),z=this.de(4),e?(B[2].s(0,w+c),B[3].s(B[2].x,k),z[2].s(x,B[2].y),z[3].s(z[2].x,B[3].y)):(B[2].s(p+c,0),B[3].s(x,B[2].y),z[2].s(B[2].x,k),z[3].s(B[3].x,z[2].y));else{B=this.de(S.length+2),z=this.de(M.length+2);for(let V=0;V<S.length;V++){const H=S[V];B[V+2].s(H.x+Y,H.y+K)}for(let V=0;V<M.length;V++){const H=M[V];z[V+2].s(H.x+Y,H.y+K)}}e?(B[0].s(R,0),B[1].s(B[0].x,w),B[2].y<B[1].y&&(B[2].x>B[0].x?B[2].c(B[1]):B[1].c(B[2])),B[3].y<B[2].y&&(B[3].x>B[0].x?B[3].c(B[2]):B[2].c(B[3])),z[0].s(R+p,0),z[1].s(z[0].x,w),z[2].y<z[1].y&&(z[2].x<z[0].x?z[2].c(z[1]):z[1].c(z[2])),z[3].y<z[2].y&&(z[3].x<z[0].x?z[3].c(z[2]):z[2].c(z[3])),B[2].y-=c/2,z[2].y-=c/2):(B[0].s(0,O),B[1].s(p,B[0].y),B[2].x<B[1].x&&(B[2].y>B[0].y?B[2].c(B[1]):B[1].c(B[2])),B[3].x<B[2].x&&(B[3].y>B[0].y?B[3].c(B[2]):B[2].c(B[3])),z[0].s(0,O+w),z[1].s(p,z[0].y),z[2].x<z[1].x&&(z[2].y<z[0].y?z[2].c(z[1]):z[1].c(z[2])),z[3].x<z[2].x&&(z[3].y<z[0].y?z[3].c(z[2]):z[2].c(z[3])),B[2].x-=c/2,z[2].x-=c/2),this.on(S),this.on(M),t.Ig=B,t.Og=z,t.ut.s(R,O),t.xt.s(x,k)}Tk(t,i,e){for(let s=0;s<t.length;s++){const n=t[s];n.x+=i,n.y+=e}}ZD(t,i,e,s,n,o,r){Debug&&U.e(t,TreeVertex,TreeLayout,\"mergeFringes:parent\"),Debug&&U.e(i,TreeVertex,TreeLayout,\"mergeFringes:child\");const l=this.orthoAngle(t),h=l===90||l===270,f=t.nodeSpacing,a=e,c=s,u=n,d=o;let m=i.Ig,g=i.Og;const p=i.xt,w=h?Math.max(d,p.height):Math.max(u,p.width);if((m===null||l!==this.orthoAngle(i))&&(m=this.de(2),g=this.de(2),h?(m[0].s(0,0),m[1].s(0,p.height),g[0].s(p.width,0),g[1].s(g[0].x,m[1].y)):(m[0].s(0,0),m[1].s(p.width,0),g[0].s(0,p.height),g[1].s(m[1].x,g[0].y))),h){const x=u;let k=x-this.aE(c,m,x);return k+=f,e=this.fE(a,m,k),s=this.cE(c,g,k),n=Math.max(0,k)+p.width,o=w,this.on(a),this.on(m),this.on(c),this.on(g),r[0]=e,r[1]=s,new Rect(k,0,n,o)}else{const x=d;let k=x-this.uE(c,m,x);return k+=f,e=this.dE(a,m,k),s=this.gE(c,g,k),n=w,o=Math.max(0,k)+p.height,this.on(a),this.on(m),this.on(c),this.on(g),r[0]=e,r[1]=s,new Rect(k,0,n,o)}}dE(t,i,e){if(t===null||t.length<2||i===null||i.length<2)return null;const s=this.de(t.length+i.length);let n=0,o=0,r=0;for(;o<i.length&&i[o].x<t[0].x;){const f=i[o++];s[r++].s(f.x,f.y+e)}for(;n<t.length;){const f=t[n++];s[r++].s(f.x,f.y)}const l=t[t.length-1].x;for(;o<i.length&&i[o].x<=l;)o++;for(;o<i.length&&i[o].x>l;){const f=i[o++];s[r++].s(f.x,f.y+e)}const h=this.de(r);for(n=0;n<r;n++)h[n].c(s[n]);return this.on(s),h}fE(t,i,e){if(t===null||t.length<2||i===null||i.length<2)return null;const s=this.de(t.length+i.length);let n=0,o=0,r=0;for(;o<i.length&&i[o].y<t[0].y;){const f=i[o++];s[r++].s(f.x+e,f.y)}for(;n<t.length;){const f=t[n++];s[r++].s(f.x,f.y)}const l=t[t.length-1].y;for(;o<i.length&&i[o].y<=l;)o++;for(;o<i.length&&i[o].y>l;){const f=i[o++];s[r++].s(f.x+e,f.y)}const h=this.de(r);for(n=0;n<r;n++)h[n].c(s[n]);return this.on(s),h}gE(t,i,e){if(t===null||t.length<2||i===null||i.length<2)return null;const s=this.de(t.length+i.length);let n=0,o=0,r=0;for(;n<t.length&&t[n].x<i[0].x;){const f=t[n++];s[r++].s(f.x,f.y)}for(;o<i.length;){const f=i[o++];s[r++].s(f.x,f.y+e)}const l=i[i.length-1].x;for(;n<t.length&&t[n].x<=l;)n++;for(;n<t.length&&t[n].x>l;){const f=t[n++];s[r++].s(f.x,f.y)}const h=this.de(r);for(n=0;n<r;n++)h[n].c(s[n]);return this.on(s),h}cE(t,i,e){if(t===null||t.length<2||i===null||i.length<2)return null;const s=this.de(t.length+i.length);let n=0,o=0,r=0;for(;n<t.length&&t[n].y<i[0].y;){const f=t[n++];s[r++].s(f.x,f.y)}for(;o<i.length;){const f=i[o++];s[r++].s(f.x+e,f.y)}const l=i[i.length-1].y;for(;n<t.length&&t[n].y<=l;)n++;for(;n<t.length&&t[n].y>l;){const f=t[n++];s[r++].s(f.x,f.y)}const h=this.de(r);for(n=0;n<r;n++)h[n].c(s[n]);return this.on(s),h}uE(t,i,e){let s=9999999;if(t===null||t.length<2||i===null||i.length<2)return s;let n=0,o=0;for(;n<t.length&&o<i.length;){const r=t[n],l=i[o],h=l.x;let f=l.y;f+=e;let a=r;n+1<t.length&&(a=t[n+1]);let c=l,u=c.x,d=c.y;o+1<i.length&&(c=i[o+1],u=c.x,d=c.y,d+=e);let m=s;r.x===h?m=f-r.y:r.x>h&&r.x<u?m=f+(r.x-h)/(u-h)*(d-f)-r.y:h>r.x&&h<a.x&&(m=f-(r.y+(h-r.x)/(a.x-r.x)*(a.y-r.y))),m<s&&(s=m),a.x<=r.x?n++:u<=h?o++:(a.x<=u&&n++,u<=a.x&&o++)}return s}aE(t,i,e){let s=9999999;if(t===null||t.length<2||i===null||i.length<2)return s;let n=0,o=0;for(;n<t.length&&o<i.length;){const r=t[n],l=i[o];let h=l.x;const f=l.y;h+=e;let a=r;n+1<t.length&&(a=t[n+1]);let c=l,u=c.x,d=c.y;o+1<i.length&&(c=i[o+1],u=c.x,d=c.y,u+=e);let m=s;r.y===f?m=h-r.x:r.y>f&&r.y<d?m=h+(r.y-f)/(d-f)*(u-h)-r.x:f>r.y&&f<a.y&&(m=h-(r.x+(f-r.y)/(a.y-r.y)*(a.x-r.x))),m<s&&(s=m),a.y<=r.y?n++:d<=f?o++:(a.y<=d&&n++,d<=a.y&&o++)}return s}de(t){const i=this.Ck[t];if(i!==void 0){const s=i.pop();if(s!==void 0)return s}const e=[];for(let s=0;s<t;s++)e[s]=new Point;return e}on(t){if(!t)return;const i=t.length;let e=this.Ck[i];e===void 0&&(e=[],this.Ck[i]=e),e.push(t)}arrangeTrees(){if(this.Wi===52){const t=this.Bi.iterator;for(;t.next();){const i=t.value;if(!(i instanceof TreeVertex))continue;const e=i.node;if(e===null)continue;const s=e.position;let n=s.x,o=s.y;isFinite(n)||(n=0),isFinite(o)||(o=0),this.gC(i,n,o)}}else{const t=[],i=this.Bi.iterator;for(;i.next();){const o=i.value;o instanceof TreeVertex&&t.push(o)}switch(this.sorting){default:case 10:break;case 11:t.reverse();break;case 12:t.sort(this.comparer);break;case 13:t.sort(this.comparer),t.reverse();break}const e=this.arrangementOrigin;let s=e.x,n=e.y;for(let o=0;o<t.length;o++){const r=t[o];switch(this.gC(r,s+r.ut.x,n+r.ut.y),this.Wi){case 50:n+=r.xt.height+this.Ts.height;break;default:case 51:s+=r.xt.width+this.Ts.width;break}}}}gC(t,i,e){if(t===null)return;Debug&&U.e(t,TreeVertex,TreeLayout,\"assignAbsolutePositions:v\"),t.x=i,t.y=e;const s=t.children,n=s.length;for(let o=0;o<n;o++){const r=s[o];this.gC(r,i+r.V.x,e+r.V.y)}}commitLayout(){this.jy(),this.commitNodes(),this.lC(),this.isRouting&&this.commitLinks()}commitNodes(){const t=this.network.vertexes.iterator;for(;t.next();)t.value.commit();for(t.reset();t.next();){const i=t.value;this.layoutComments(i)}}lC(){if(this.layerStyle!==62)return;const t=this.hC,i=[];let e=null;const s=this.network.vertexes.iterator;for(;s.next();){const h=s.value;e===null?e=h.bounds.copy():e.unionRect(h.bounds);let f=i[h.level];f===void 0?f=this.computeLayerSpacing(h):f=Math.max(f,this.computeLayerSpacing(h)),i[h.level]=f}for(let h=0;h<i.length;h++)i[h]===void 0&&(i[h]=0);let n;this.angle===90||this.angle===270?(e.inflate(this.nodeSpacing/2,this.layerSpacing),n=new Point(-this.nodeSpacing/2,-this.layerSpacing/2)):(e.inflate(this.layerSpacing,this.nodeSpacing/2),n=new Point(-this.layerSpacing/2,-this.nodeSpacing/2));const o=[],r=this.angle===90||this.angle===270?e.width:e.height;let l=0;if(this.angle===180||this.angle===270)for(let h=0;h<t.length;h++)l+=t[h]+i[h];for(let h=0;h<t.length;h++){const f=t[h]+i[h];this.angle===270?(l-=f,o.push(new Rect(0,l,r,f))):this.angle===90?(o.push(new Rect(0,l,r,f)),l+=f):this.angle===180?(l-=f,o.push(new Rect(l,0,f,r))):(o.push(new Rect(l,0,f,r)),l+=f)}this.commitLayers(o,n)}commitLayers(t,i){}commitLinks(){const t=this.network.edges.iterator;for(;t.next();)t.value.commit()}jy(){const t=this.Bi.iterator;for(;t.next();){const i=t.value;i instanceof TreeVertex&&this.QD(i)}}QD(t){if(t===null)return;Debug&&U.e(t,TreeVertex,TreeLayout,\"setPortSpotsTree:v\"),this.setPortSpots(t);const i=t.children,e=i.length;for(let s=0;s<e;s++){const n=i[s];this.QD(n)}}setPortSpots(t){Debug&&U.e(t,TreeVertex,TreeLayout,\"setPortSpots:v\");const i=t.alignment;if(this.isBusAlignment(i))this.mE(t,i);else{const e=this.orthoAngle(t);if(this.us===1){const s=t.destinationEdges;for(;s.next();){const o=s.value.link;if(o!==null){if(t.setsPortSpot)if(t.portSpot.isDefault())switch(e){case 0:o.fromSpot=Spot.MiddleRight;break;case 90:o.fromSpot=Spot.MiddleBottom;break;case 180:o.fromSpot=Spot.MiddleLeft;break;default:o.fromSpot=Spot.MiddleTop;break}else o.fromSpot=t.portSpot;if(t.setsChildPortSpot)if(t.childPortSpot.isDefault())switch(e){case 0:o.toSpot=Spot.MiddleLeft;break;case 90:o.toSpot=Spot.MiddleTop;break;case 180:o.toSpot=Spot.MiddleRight;break;default:o.toSpot=Spot.MiddleBottom;break}else o.toSpot=t.childPortSpot}}}else{const s=t.sourceEdges;for(;s.next();){const o=s.value.link;if(o!==null){if(t.setsPortSpot)if(t.portSpot.isDefault())switch(e){case 0:o.toSpot=Spot.MiddleRight;break;case 90:o.toSpot=Spot.MiddleBottom;break;case 180:o.toSpot=Spot.MiddleLeft;break;default:o.toSpot=Spot.MiddleTop;break}else o.toSpot=t.portSpot;if(t.setsChildPortSpot)if(t.childPortSpot.isDefault())switch(e){case 0:o.fromSpot=Spot.MiddleLeft;break;case 90:o.fromSpot=Spot.MiddleTop;break;case 180:o.fromSpot=Spot.MiddleRight;break;default:o.fromSpot=Spot.MiddleBottom;break}else o.fromSpot=t.childPortSpot}}}}}mE(t,i){Debug&&U.e(t,TreeVertex,TreeLayout,\"setPortSpotsBus:v\"),Debug&&U.j(i,TreeAlignment,\"TreeAlignment\");const e=this.us===1,s=this.orthoAngle(t);let n;switch(s){case 0:n=Spot.MiddleRight;break;case 90:n=Spot.MiddleBottom;break;case 180:n=Spot.MiddleLeft;break;default:n=Spot.MiddleTop;break}const o=t.children,r=o.length;switch(i){case 24:case 25:{for(let l=0;l<r;l++){const h=o[l],f=(e?h.sourceEdges:h.destinationEdges).first();if(f===null)continue;const a=f.link;if(a!==null){let c=s===90||s===270?Spot.MiddleLeft:Spot.MiddleTop;if(r===1||l===r-1&&r%2===1)switch(s){case 0:c=Spot.MiddleLeft;break;case 90:c=Spot.MiddleTop;break;case 180:c=Spot.MiddleRight;break;default:c=Spot.MiddleBottom;break}else l%2===0&&(c=s===90||s===270?Spot.MiddleRight:Spot.MiddleBottom);e?(t.setsPortSpot&&(a.fromSpot=n),t.setsChildPortSpot&&(a.toSpot=c)):(t.setsPortSpot&&(a.fromSpot=c),t.setsChildPortSpot&&(a.toSpot=n))}}break}case 26:{const l=s===90||s===270?Spot.MiddleRight:Spot.MiddleBottom,h=e?t.destinationEdges:t.sourceEdges;for(;h.next();){const a=h.value.link;a!==null&&(e?(t.setsPortSpot&&(a.fromSpot=n),t.setsChildPortSpot&&(a.toSpot=l)):(t.setsPortSpot&&(a.fromSpot=l),t.setsChildPortSpot&&(a.toSpot=n)))}break}case 27:{const l=s===90||s===270?Spot.MiddleLeft:Spot.MiddleTop,h=e?t.destinationEdges:t.sourceEdges;for(;h.next();){const a=h.value.link;a!==null&&(e?(t.setsPortSpot&&(a.fromSpot=n),t.setsChildPortSpot&&(a.toSpot=l)):(t.setsPortSpot&&(a.fromSpot=l),t.setsChildPortSpot&&(a.toSpot=n)))}break}}}orthoAngle(t){const i=t.angle;return i<=45?0:i<=135?90:i<=225?180:i<=315?270:0}computeLayerSpacing(t){Debug&&U.e(t,TreeVertex,TreeLayout,\"computeLayerSpacing:v\");const i=this.orthoAngle(t),e=i===90||i===270;let s=t.layerSpacing;if(t.layerSpacingParentOverlap>0){const n=Math.min(1,t.layerSpacingParentOverlap);s-=e?t.height*n:t.width*n}return s<(e?-t.height:-t.width)&&(s=e?-t.height:-t.width),s}computeNodeIndent(t){Debug&&U.e(t,TreeVertex,TreeLayout,\"computeNodeIndent:v\");const i=this.orthoAngle(t),e=i===90||i===270;let s=t.nodeIndent;if(t.nodeIndentPastParent>0){const n=Math.min(1,t.nodeIndentPastParent);s+=e?t.width*n:t.height*n}return s=Math.max(0,s),s}get roots(){return this.Bi}set roots(t){this.Bi!==t&&(U.e(t,GSet,TreeLayout,\"roots\"),this.Bi=t,this.invalidateLayout())}get path(){return this.Ri}set path(t){this.Ri!==t&&(U.j(t,TreePath,\"TreePath\"),this.Ri=t,this.invalidateLayout())}get treeStyle(){return this.ou}set treeStyle(t){this.ou!==t&&(U.j(t,TreeStyle,\"TreeStyle\"),(t===40||t===42||t===41||t===43)&&(this.ou=t,this.invalidateLayout()))}get layerStyle(){return this.Rg}set layerStyle(t){this.Rg!==t&&(U.j(t,TreeLayerStyle,\"TreeLayerStyle\"),(t===60||t===61||t===62)&&(this.Rg=t,this.invalidateLayout()))}get comments(){return this.Be}set comments(t){this.Be!==t&&(U.i(t,\"boolean\",TreeLayout,\"comments\"),this.Be=t,this.invalidateLayout())}get arrangement(){return this.Wi}set arrangement(t){this.Wi!==t&&(U.j(t,TreeArrangement,\"TreeArrangement\"),(t===50||t===51||t===52)&&(this.Wi=t,this.invalidateLayout()))}get arrangementSpacing(){return this.Ts}set arrangementSpacing(t){U.e(t,Size,TreeLayout,\"arrangementSpacing\"),this.Ts.equals(t)||(this.Ts.c(t),this.invalidateLayout())}get rootDefaults(){return this.X}set rootDefaults(t){this.X!==t&&(U.e(t,TreeVertex,TreeLayout,\"rootDefaults\"),this.X=t,this.invalidateLayout())}get alternateDefaults(){return this.Y}set alternateDefaults(t){this.Y!==t&&(U.e(t,TreeVertex,TreeLayout,\"alternateDefaults\"),this.Y=t,this.invalidateLayout())}get sorting(){return this.X.sorting}set sorting(t){this.X.sorting!==t&&(U.j(t,TreeSorting,\"TreeSorting\"),this.X.sorting=t,this.invalidateLayout())}get comparer(){return this.X.comparer}set comparer(t){this.X.comparer!==t&&(U.P(t,TreeLayout,\"comparer\"),this.X.comparer=t,this.invalidateLayout())}get angle(){return this.X.angle}set angle(t){this.X.angle!==t&&(U.i(t,\"number\",TreeLayout,\"angle\"),t===0||t===90||t===180||t===270?(this.X.angle=t,this.invalidateLayout()):U.n(\"TreeLayout.angle must be 0, 90, 180, or 270\"))}get alignment(){return this.X.alignment}set alignment(t){this.X.alignment!==t&&(U.j(t,TreeAlignment,\"TreeAlignment\"),this.X.alignment=t,this.invalidateLayout())}get nodeIndent(){return this.X.nodeIndent}set nodeIndent(t){this.X.nodeIndent!==t&&(U.i(t,\"number\",TreeLayout,\"nodeIndent\"),t>=0&&(this.X.nodeIndent=t,this.invalidateLayout()))}get nodeIndentPastParent(){return this.X.nodeIndentPastParent}set nodeIndentPastParent(t){this.X.nodeIndentPastParent!==t&&(U.i(t,\"number\",TreeLayout,\"nodeIndentPastParent\"),t>=0&&t<=1&&(this.X.nodeIndentPastParent=t,this.invalidateLayout()))}get nodeSpacing(){return this.X.nodeSpacing}set nodeSpacing(t){this.X.nodeSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"nodeSpacing\"),this.X.nodeSpacing=t,this.invalidateLayout())}get layerSpacing(){return this.X.layerSpacing}set layerSpacing(t){this.X.layerSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"layerSpacing\"),this.X.layerSpacing=t,this.invalidateLayout())}get layerSpacingParentOverlap(){return this.X.layerSpacingParentOverlap}set layerSpacingParentOverlap(t){this.X.layerSpacingParentOverlap!==t&&(U.i(t,\"number\",TreeLayout,\"layerSpacingParentOverlap\"),t>=0&&t<=1&&(this.X.layerSpacingParentOverlap=t,this.invalidateLayout()))}get compaction(){return this.X.compaction}set compaction(t){this.X.compaction!==t&&(U.j(t,TreeCompaction,\"TreeCompaction\"),(t===30||t===31)&&(this.X.compaction=t,this.invalidateLayout()))}get breadthLimit(){return this.X.breadthLimit}set breadthLimit(t){this.X.breadthLimit!==t&&(U.i(t,\"number\",TreeLayout,\"breadthLimit\"),t>=0&&(this.X.breadthLimit=t,this.invalidateLayout()))}get rowSpacing(){return this.X.rowSpacing}set rowSpacing(t){this.X.rowSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"rowSpacing\"),this.X.rowSpacing=t,this.invalidateLayout())}get rowIndent(){return this.X.rowIndent}set rowIndent(t){this.X.rowIndent!==t&&(U.i(t,\"number\",TreeLayout,\"rowIndent\"),t>=0&&(this.X.rowIndent=t,this.invalidateLayout()))}get commentSpacing(){return this.X.commentSpacing}set commentSpacing(t){this.X.commentSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"commentSpacing\"),this.X.commentSpacing=t,this.invalidateLayout())}get commentMargin(){return this.X.commentMargin}set commentMargin(t){this.X.commentMargin!==t&&(U.i(t,\"number\",TreeLayout,\"commentMargin\"),this.X.commentMargin=t,this.invalidateLayout())}get setsPortSpot(){return this.X.setsPortSpot}set setsPortSpot(t){this.X.setsPortSpot!==t&&(U.i(t,\"boolean\",TreeLayout,\"setsPortSpot\"),this.X.setsPortSpot=t,this.invalidateLayout())}get portSpot(){return this.X.portSpot}set portSpot(t){U.e(t,Spot,TreeLayout,\"portSpot\"),this.X.portSpot.equals(t)||(this.X.portSpot=t,this.invalidateLayout())}get setsChildPortSpot(){return this.X.setsChildPortSpot}set setsChildPortSpot(t){this.X.setsChildPortSpot!==t&&(U.i(t,\"boolean\",TreeLayout,\"setsChildPortSpot\"),this.X.setsChildPortSpot=t,this.invalidateLayout())}get childPortSpot(){return this.X.childPortSpot}set childPortSpot(t){U.e(t,Spot,TreeLayout,\"childPortSpot\"),this.X.childPortSpot.equals(t)||(this.X.childPortSpot=t,this.invalidateLayout())}get alternateSorting(){return this.Y.sorting}set alternateSorting(t){this.Y.sorting!==t&&(U.j(t,TreeSorting,\"TreeSorting\"),this.Y.sorting=t,this.invalidateLayout())}get alternateComparer(){return this.Y.comparer}set alternateComparer(t){this.Y.comparer!==t&&(U.P(t,TreeLayout,\"alternateComparer\"),this.Y.comparer=t,this.invalidateLayout())}get alternateAngle(){return this.Y.angle}set alternateAngle(t){this.Y.angle!==t&&(U.i(t,\"number\",TreeLayout,\"alternateAngle\"),(t===0||t===90||t===180||t===270)&&(this.Y.angle=t,this.invalidateLayout()))}get alternateAlignment(){return this.Y.alignment}set alternateAlignment(t){this.Y.alignment!==t&&(U.j(t,TreeAlignment,\"TreeAlignment\"),this.Y.alignment=t,this.invalidateLayout())}get alternateNodeIndent(){return this.Y.nodeIndent}set alternateNodeIndent(t){this.Y.nodeIndent!==t&&(U.i(t,\"number\",TreeLayout,\"alternateNodeIndent\"),t>=0&&(this.Y.nodeIndent=t,this.invalidateLayout()))}get alternateNodeIndentPastParent(){return this.Y.nodeIndentPastParent}set alternateNodeIndentPastParent(t){this.Y.nodeIndentPastParent!==t&&(U.i(t,\"number\",TreeLayout,\"alternateNodeIndentPastParent\"),t>=0&&t<=1&&(this.Y.nodeIndentPastParent=t,this.invalidateLayout()))}get alternateNodeSpacing(){return this.Y.nodeSpacing}set alternateNodeSpacing(t){this.Y.nodeSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"alternateNodeSpacing\"),this.Y.nodeSpacing=t,this.invalidateLayout())}get alternateLayerSpacing(){return this.Y.layerSpacing}set alternateLayerSpacing(t){this.Y.layerSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"alternateLayerSpacing\"),this.Y.layerSpacing=t,this.invalidateLayout())}get alternateLayerSpacingParentOverlap(){return this.Y.layerSpacingParentOverlap}set alternateLayerSpacingParentOverlap(t){this.Y.layerSpacingParentOverlap!==t&&(U.i(t,\"number\",TreeLayout,\"alternateLayerSpacingParentOverlap\"),t>=0&&t<=1&&(this.Y.layerSpacingParentOverlap=t,this.invalidateLayout()))}get alternateCompaction(){return this.Y.compaction}set alternateCompaction(t){this.Y.compaction!==t&&(U.j(t,TreeCompaction,\"TreeCompaction\"),(t===30||t===31)&&(this.Y.compaction=t,this.invalidateLayout()))}get alternateBreadthLimit(){return this.Y.breadthLimit}set alternateBreadthLimit(t){this.Y.breadthLimit!==t&&(U.i(t,\"number\",TreeLayout,\"alternateBreadthLimit\"),t>=0&&(this.Y.breadthLimit=t,this.invalidateLayout()))}get alternateRowSpacing(){return this.Y.rowSpacing}set alternateRowSpacing(t){this.Y.rowSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"alternateRowSpacing\"),this.Y.rowSpacing=t,this.invalidateLayout())}get alternateRowIndent(){return this.Y.rowIndent}set alternateRowIndent(t){this.Y.rowIndent!==t&&(U.i(t,\"number\",TreeLayout,\"alternateRowIndent\"),t>=0&&(this.Y.rowIndent=t,this.invalidateLayout()))}get alternateCommentSpacing(){return this.Y.commentSpacing}set alternateCommentSpacing(t){this.Y.commentSpacing!==t&&(U.i(t,\"number\",TreeLayout,\"alternateCommentSpacing\"),this.Y.commentSpacing=t,this.invalidateLayout())}get alternateCommentMargin(){return this.Y.commentMargin}set alternateCommentMargin(t){this.Y.commentMargin!==t&&(U.i(t,\"number\",TreeLayout,\"alternateCommentMargin\"),this.Y.commentMargin=t,this.invalidateLayout())}get alternateSetsPortSpot(){return this.Y.setsPortSpot}set alternateSetsPortSpot(t){this.Y.setsPortSpot!==t&&(U.i(t,\"boolean\",TreeLayout,\"alternateSetsPortSpot\"),this.Y.setsPortSpot=t,this.invalidateLayout())}get alternatePortSpot(){return this.Y.portSpot}set alternatePortSpot(t){U.e(t,Spot,TreeLayout,\"alternatePortSpot\"),this.Y.portSpot.equals(t)||(this.Y.portSpot=t,this.invalidateLayout())}get alternateSetsChildPortSpot(){return this.Y.setsChildPortSpot}set alternateSetsChildPortSpot(t){this.Y.setsChildPortSpot!==t&&(U.i(t,\"boolean\",TreeLayout,\"alternateSetsChildPortSpot\"),this.Y.setsChildPortSpot=t,this.invalidateLayout())}get alternateChildPortSpot(){return this.Y.childPortSpot}set alternateChildPortSpot(t){U.e(t,Spot,TreeLayout,\"alternateChildPortSpot\"),this.Y.childPortSpot.equals(t)||(this.Y.childPortSpot=t,this.invalidateLayout())}static PathDefault=0;static PathDestination=1;static PathSource=2;static SortingForwards=10;static SortingReverse=11;static SortingAscending=12;static SortingDescending=13;static AlignmentCenterSubtrees=20;static AlignmentCenterChildren=21;static AlignmentStart=22;static AlignmentEnd=23;static AlignmentBus=24;static AlignmentBusBranching=25;static AlignmentTopLeftBus=26;static AlignmentBottomRightBus=27;static CompactionNone=30;static CompactionBlock=31;static StyleLayered=40;static StyleLastParents=41;static StyleAlternating=42;static StyleRootOnly=43;static ArrangementVertical=50;static ArrangementHorizontal=51;static ArrangementFixedRoots=52;static LayerIndividual=60;static LayerSiblings=61;static LayerUniform=62}class TreeNetwork extends LayoutNetwork{constructor(t){super(t)}createVertex(){return new TreeVertex(this)}createEdge(){return new TreeEdge(this)}}class TreeVertex extends LayoutVertex{V;xt;ut;Dk;Fk;Rk;Ik;Ok;Ek;Bk;Be;Ig;Og;be;ke;jt;ui;nw;ow;lw;Ds;hw;aw;fw;cw;uw;dw;gw;mw;pw;yw;ww;constructor(t){super(t),this.Dk=!1,this.Fk=null,this.Rk=[],this.Ik=0,this.Ok=0,this.Ek=0,this.Bk=0,this.Be=null,this.V=new Point(0,0),this.xt=new Size(0,0),this.ut=new Point(0,0),this.Ig=null,this.Og=null,this.be=10,this.ke=LayoutVertex.standardComparer,this.jt=0,this.ui=21,this.nw=0,this.ow=0,this.lw=20,this.Ds=50,this.hw=0,this.aw=31,this.fw=0,this.cw=25,this.uw=10,this.dw=10,this.gw=20,this.mw=!0,this.pw=Spot.Default,this.yw=!0,this.ww=Spot.Default}copyInheritedPropertiesFrom(t){t!==null&&(this.be=t.sorting,this.ke=t.comparer,this.jt=t.angle,this.ui=t.alignment,this.nw=t.nodeIndent,this.ow=t.nodeIndentPastParent,this.lw=t.nodeSpacing,this.Ds=t.layerSpacing,this.hw=t.layerSpacingParentOverlap,this.aw=t.compaction,this.fw=t.breadthLimit,this.cw=t.rowSpacing,this.uw=t.rowIndent,this.dw=t.commentSpacing,this.gw=t.commentMargin,this.mw=t.setsPortSpot,this.pw=t.portSpot,this.yw=t.setsChildPortSpot,this.ww=t.childPortSpot)}get initialized(){return this.Dk}set initialized(t){this.Dk!==t&&(U.i(t,\"boolean\",TreeVertex,\"initialized\"),this.Dk=t)}get parent(){return this.Fk}set parent(t){this.Fk!==t&&(Debug&&t!==null&&U.e(t,TreeVertex,TreeVertex,\"parent\"),this.Fk=t)}get children(){return this.Rk}set children(t){if(this.Rk!==t){if(t!==null&&!Array.isArray(t)&&U.Pi(t,\"Array\",TreeVertex,\"children:value\"),t!==null){const i=t.length;for(let e=0;e<i;e++){const s=t[e];Debug&&U.e(s,TreeVertex,TreeVertex,\"children\")}}this.Rk=t}}get level(){return this.Ik}set level(t){this.Ik!==t&&(U.i(t,\"number\",TreeVertex,\"level\"),this.Ik=t)}get descendantCount(){return this.Ok}set descendantCount(t){this.Ok!==t&&(U.i(t,\"number\",TreeVertex,\"descendantCount\"),this.Ok=t)}get maxChildrenCount(){return this.Ek}set maxChildrenCount(t){this.Ek!==t&&(U.i(t,\"number\",TreeVertex,\"maxChildrenCount\"),this.Ek=t)}get maxGenerationCount(){return this.Bk}set maxGenerationCount(t){this.Bk!==t&&(U.i(t,\"number\",TreeVertex,\"maxGenerationCount\"),this.Bk=t)}get comments(){return this.Be}set comments(t){if(this.Be!==t){if(t!==null&&!Array.isArray(t)&&U.Pi(t,\"Array\",TreeVertex,\"comments:value\"),t!==null){const i=t.length;for(let e=0;e<i;e++){const s=t[e];Debug&&U.e(s,Node,TreeVertex,\"comments\")}}this.Be=t}}get sorting(){return this.be}set sorting(t){this.be!==t&&(U.j(t,TreeSorting,\"TreeSorting\"),this.be=t)}get comparer(){return this.ke}set comparer(t){this.ke!==t&&(U.P(t,TreeVertex,\"comparer\"),this.ke=t)}get angle(){return this.jt}set angle(t){this.jt!==t&&(U.i(t,\"number\",TreeVertex,\"angle\"),this.jt=t)}get alignment(){return this.ui}set alignment(t){this.ui!==t&&(U.j(t,TreeAlignment,\"TreeAlignment\"),this.ui=t)}get nodeIndent(){return this.nw}set nodeIndent(t){this.nw!==t&&(U.i(t,\"number\",TreeVertex,\"nodeIndent\"),this.nw=t)}get nodeIndentPastParent(){return this.ow}set nodeIndentPastParent(t){this.ow!==t&&(U.i(t,\"number\",TreeVertex,\"nodeIndentPastParent\"),this.ow=t)}get nodeSpacing(){return this.lw}set nodeSpacing(t){this.lw!==t&&(U.i(t,\"number\",TreeVertex,\"nodeSpacing\"),this.lw=t)}get layerSpacing(){return this.Ds}set layerSpacing(t){this.Ds!==t&&(U.i(t,\"number\",TreeVertex,\"layerSpacing\"),this.Ds=t)}get layerSpacingParentOverlap(){return this.hw}set layerSpacingParentOverlap(t){this.hw!==t&&(U.i(t,\"number\",TreeVertex,\"layerSpacingParentOverlap\"),this.hw=t)}get compaction(){return this.aw}set compaction(t){this.aw!==t&&(U.j(t,TreeCompaction,\"TreeCompaction\"),this.aw=t)}get breadthLimit(){return this.fw}set breadthLimit(t){this.fw!==t&&(U.i(t,\"number\",TreeVertex,\"breadthLimit\"),this.fw=t)}get rowSpacing(){return this.cw}set rowSpacing(t){this.cw!==t&&(U.i(t,\"number\",TreeVertex,\"rowSpacing\"),this.cw=t)}get rowIndent(){return this.uw}set rowIndent(t){this.uw!==t&&(U.i(t,\"number\",TreeVertex,\"rowIndent\"),this.uw=t)}get commentSpacing(){return this.dw}set commentSpacing(t){this.dw!==t&&(U.i(t,\"number\",TreeVertex,\"commentSpacing\"),this.dw=t)}get commentMargin(){return this.gw}set commentMargin(t){this.gw!==t&&(U.i(t,\"number\",TreeVertex,\"commentMargin\"),this.gw=t)}get setsPortSpot(){return this.mw}set setsPortSpot(t){this.mw!==t&&(U.i(t,\"boolean\",TreeVertex,\"setsPortSpot\"),this.mw=t)}get portSpot(){return this.pw}set portSpot(t){U.e(t,Spot,TreeVertex,\"portSpot\"),this.pw.equals(t)||(this.pw=t)}get setsChildPortSpot(){return this.yw}set setsChildPortSpot(t){this.yw!==t&&(U.i(t,\"boolean\",TreeVertex,\"setsChildPortSpot\"),this.yw=t)}get childPortSpot(){return this.ww}set childPortSpot(t){U.e(t,Spot,TreeVertex,\"childPortSpot\"),this.ww.equals(t)||(this.ww=t)}get childrenCount(){return this.children.length}get relativePosition(){return this.V}set relativePosition(t){this.V.set(t)}get subtreeSize(){return this.xt}set subtreeSize(t){this.xt.set(t)}get subtreeOffset(){return this.ut}set subtreeOffset(t){this.ut.set(t)}}class TreeEdge extends LayoutEdge{Vk;constructor(t){super(t),this.Vk=new Point(0,0)}commit(){const t=this.link;if(t===null||t.isAvoiding)return;const i=this.network.layout;let e=null,s=null;switch(i.us){case 1:e=this.fromVertex,s=this.toVertex;break;case 2:e=this.toVertex,s=this.fromVertex;break;default:U.n(\"Unhandled path value \"+i.us.toString())}if(e===null||s===null)return;const n=this.Vk;if(n.x===0&&n.y===0){this.pE(e,s);return}const o=e.bounds,r=i.orthoAngle(e),l=i.computeLayerSpacing(e),h=e.rowSpacing;t.updateRoute();const f=t.curve===9,a=t.isOrthogonal;let c=0,u,d;if(t.startRoute(),a||f){for(c=2;t.pointsCount>4;)t.removePoint(2);u=t.getPoint(1),d=t.getPoint(2)}else{for(c=1;t.pointsCount>3;)t.removePoint(1);u=t.getPoint(0),d=t.getPoint(t.pointsCount-1)}const m=t.getPoint(t.pointsCount-1);let g=0;r===0?(e.alignment===23?(g=o.bottom+n.y,n.y===0&&u.y>m.y+e.rowIndent&&(g=Math.min(g,Math.max(u.y,g-i.computeNodeIndent(e))))):e.alignment===22?(g=o.top+n.y,n.y===0&&u.y<m.y-e.rowIndent&&(g=Math.max(g,Math.min(u.y,g+i.computeNodeIndent(e))))):g=o.y+o.height/2+n.y,f?(t.insertPointAt(c,u.x,g),c++,t.insertPointAt(c,o.right+l,g),c++,t.insertPointAt(c,o.right+l+(n.x-h)/3,g),c++,t.insertPointAt(c,o.right+l+(n.x-h)*2/3,g),c++,t.insertPointAt(c,o.right+l+(n.x-h),g),c++,t.insertPointAt(c,d.x,g),c++):(a&&(t.insertPointAt(c,o.right+l/2,u.y),c++),t.insertPointAt(c,o.right+l/2,g),c++,t.insertPointAt(c,o.right+l+n.x-(a?h/2:h),g),c++,a&&(t.insertPointAt(c,t.getPoint(c-1).x,d.y),c++))):r===90?(e.alignment===23?(g=o.right+n.x,n.x===0&&u.x>m.x+e.rowIndent&&(g=Math.min(g,Math.max(u.x,g-i.computeNodeIndent(e))))):e.alignment===22?(g=o.left+n.x,n.x===0&&u.x<m.x-e.rowIndent&&(g=Math.max(g,Math.min(u.x,g+i.computeNodeIndent(e))))):g=o.x+o.width/2+n.x,f?(t.insertPointAt(c,g,u.y),c++,t.insertPointAt(c,g,o.bottom+l),c++,t.insertPointAt(c,g,o.bottom+l+(n.y-h)/3),c++,t.insertPointAt(c,g,o.bottom+l+(n.y-h)*2/3),c++,t.insertPointAt(c,g,o.bottom+l+(n.y-h)),c++,t.insertPointAt(c,g,d.y),c++):(a&&(t.insertPointAt(c,u.x,o.bottom+l/2),c++),t.insertPointAt(c,g,o.bottom+l/2),c++,t.insertPointAt(c,g,o.bottom+l+n.y-(a?h/2:h)),c++,a&&(t.insertPointAt(c,d.x,t.getPoint(c-1).y),c++))):r===180?(e.alignment===23?(g=o.bottom+n.y,n.y===0&&u.y>m.y+e.rowIndent&&(g=Math.min(g,Math.max(u.y,g-i.computeNodeIndent(e))))):e.alignment===22?(g=o.top+n.y,n.y===0&&u.y<m.y-e.rowIndent&&(g=Math.max(g,Math.min(u.y,g+i.computeNodeIndent(e))))):g=o.y+o.height/2+n.y,f?(t.insertPointAt(c,u.x,g),c++,t.insertPointAt(c,o.left-l,g),c++,t.insertPointAt(c,o.left-l+(n.x+h)/3,g),c++,t.insertPointAt(c,o.left-l+(n.x+h)*2/3,g),c++,t.insertPointAt(c,o.left-l+(n.x+h),g),c++,t.insertPointAt(c,d.x,g),c++):(a&&(t.insertPointAt(c,o.left-l/2,u.y),c++),t.insertPointAt(c,o.left-l/2,g),c++,t.insertPointAt(c,o.left-l+n.x+(a?h/2:h),g),c++,a&&(t.insertPointAt(c,t.getPoint(c-1).x,d.y),c++))):r===270?(e.alignment===23?(g=o.right+n.x,n.x===0&&u.x>m.x+e.rowIndent&&(g=Math.min(g,Math.max(u.x,g-i.computeNodeIndent(e))))):e.alignment===22?(g=o.left+n.x,n.x===0&&u.x<m.x-e.rowIndent&&(g=Math.max(g,Math.min(u.x,g+i.computeNodeIndent(e))))):g=o.x+o.width/2+n.x,f?(t.insertPointAt(c,g,u.y),c++,t.insertPointAt(c,g,o.top-l),c++,t.insertPointAt(c,g,o.top-l+(n.y+h)/3),c++,t.insertPointAt(c,g,o.top-l+(n.y+h)*2/3),c++,t.insertPointAt(c,g,o.top-l+(n.y+h)),c++,t.insertPointAt(c,g,d.y),c++):(a&&(t.insertPointAt(c,u.x,o.top-l/2),c++),t.insertPointAt(c,g,o.top-l/2),c++,t.insertPointAt(c,g,o.top-l+n.y+(a?h/2:h)),c++,a&&(t.insertPointAt(c,d.x,t.getPoint(c-1).y),c++))):U.n(\"Invalid angle \"+r),t.commitRoute()}pE(t,i){Debug&&U.e(t,TreeVertex,TreeEdge,\"adjustRouteForAngleChange:parent\"),Debug&&U.e(i,TreeVertex,TreeEdge,\"adjustRouteForAngleChange:child\");const e=this.link;if(e===null)return;const s=this.network.layout,n=s.orthoAngle(t),o=s.orthoAngle(i);if(n===o)return;const r=s.computeLayerSpacing(t),l=t.bounds,h=i.bounds;if(n===0&&h.left-l.right<r+1||n===90&&h.top-l.bottom<r+1||n===180&&l.left-h.right<r+1||n===270&&l.top-h.bottom<r+1)return;e.updateRoute();const f=e.curve===9,a=e.isOrthogonal,c=this.fromVertex,u=s.isBusAlignment(c.alignment);if(e.startRoute(),n===0){const d=l.right+r/2;if(f){if(e.pointsCount===4){const m=e.getPoint(3).y;e.setPointAt(1,d-20,e.getPoint(1).y),e.insertPointAt(2,d-20,m),e.insertPointAt(3,d,m),e.insertPointAt(4,d+20,m),e.setPointAt(5,e.getPoint(5).x,m)}}else a?u?e.setPointAt(3,e.getPoint(2).x,e.getPoint(4).y):e.pointsCount===6&&(e.setPointAt(2,d,e.getPoint(2).y),e.setPointAt(3,d,e.getPoint(3).y)):e.pointsCount===4?e.insertPointAt(2,d,e.getPoint(2).y):e.pointsCount===3?e.setPointAt(1,d,e.getPoint(2).y):e.pointsCount===2&&e.insertPointAt(1,d,e.getPoint(1).y)}else if(n===90){const d=l.bottom+r/2;if(f){if(e.pointsCount===4){const m=e.getPoint(3).x;e.setPointAt(1,e.getPoint(1).x,d-20),e.insertPointAt(2,m,d-20),e.insertPointAt(3,m,d),e.insertPointAt(4,m,d+20),e.setPointAt(5,m,e.getPoint(5).y)}}else a?u?e.setPointAt(3,e.getPoint(2).x,e.getPoint(4).y):e.pointsCount===6&&(e.setPointAt(2,e.getPoint(2).x,d),e.setPointAt(3,e.getPoint(3).x,d)):e.pointsCount===4?e.insertPointAt(2,e.getPoint(2).x,d):e.pointsCount===3?e.setPointAt(1,e.getPoint(2).x,d):e.pointsCount===2&&e.insertPointAt(1,e.getPoint(1).x,d)}else if(n===180){const d=l.left-r/2;if(f){if(e.pointsCount===4){const m=e.getPoint(3).y;e.setPointAt(1,d+20,e.getPoint(1).y),e.insertPointAt(2,d+20,m),e.insertPointAt(3,d,m),e.insertPointAt(4,d-20,m),e.setPointAt(5,e.getPoint(5).x,m)}}else a?u?e.setPointAt(3,e.getPoint(2).x,e.getPoint(4).y):e.pointsCount===6&&(e.setPointAt(2,d,e.getPoint(2).y),e.setPointAt(3,d,e.getPoint(3).y)):e.pointsCount===4?e.insertPointAt(2,d,e.getPoint(2).y):e.pointsCount===3?e.setPointAt(1,d,e.getPoint(2).y):e.pointsCount===2&&e.insertPointAt(1,d,e.getPoint(1).y)}else if(n===270){const d=l.top-r/2;if(f){if(e.pointsCount===4){const m=e.getPoint(3).x;e.setPointAt(1,e.getPoint(1).x,d+20),e.insertPointAt(2,m,d+20),e.insertPointAt(3,m,d),e.insertPointAt(4,m,d-20),e.setPointAt(5,m,e.getPoint(5).y)}}else a?u?e.setPointAt(3,e.getPoint(2).x,e.getPoint(4).y):e.pointsCount===6&&(e.setPointAt(2,e.getPoint(2).x,d),e.setPointAt(3,e.getPoint(3).x,d)):e.pointsCount===4?e.insertPointAt(2,e.getPoint(2).x,d):e.pointsCount===3?e.setPointAt(1,e.getPoint(2).x,d):e.pointsCount===2&&e.insertPointAt(1,e.getPoint(1).x,d)}e.commitRoute()}get fromVertex(){return this.Ze}set fromVertex(t){this.Ze!==t&&(Debug&&t!==null&&U.e(t,TreeVertex,TreeEdge,\"fromVertex\"),this.Ze=t)}get toVertex(){return this.Qe}set toVertex(t){this.Qe!==t&&(Debug&&t!==null&&U.e(t,TreeVertex,TreeEdge,\"toVertex\"),this.Qe=t)}get relativePoint(){return this.Vk}set relativePoint(t){this.Vk.set(t)}}class Themes{constructor(){}static Light={colors:{text:\"#0a0a0a\",comment:\"#ca8a04\",link:\"#0a0a0a\",group:\"#a3a3a344\",outline:\"#a3a3a3\",selection:\"#0ea5e9\",div:\"#fff\",gridMinor:\"#e5e5e5\",gridMajor:\"#a3a3a3\",overviewBox:\"#c026d3\",tempLink:\"#2563eb\",tempPort:\"#c026d3\",adornmentFill:\"#0ea5e9\",adornmentStroke:\"#1e40af\",dragSelect:\"#c026d3\"},fonts:{normal:\"10pt sans-serif\",bold:\"bold 12pt sans-serif\"},numbers:{group:1,selection:3},margins:{group:new Margin(5)},arrowheads:{toArrow:\"Standard\"}};static Dark={colors:{text:\"#f5f5f5\",comment:\"#facc15\",link:\"#f5f5f5\",group:\"#a3a3a388\",outline:\"#a3a3a3\",selection:\"#38bdf8\",div:\"#171717\",gridMinor:\"#262626\",gridMajor:\"#404040\",overviewBox:\"#e879f9\",tempLink:\"#60a5fa\",tempPort:\"#e879f9\",adornmentFill:\"#38bdf8\",adornmentStroke:\"#2563eb\",dragSelect:\"#e879f9\"},fonts:{normal:\"10pt sans-serif\",bold:\"bold 12pt sans-serif\"},numbers:{group:1,selection:3},margins:{group:new Margin(5)},arrowheads:{toArrow:\"Standard\"}}}class ThemeManager{os=new Set;lu=new GMap;zk=\"light\";Xk=\"light\";Yk=!1;Eg=\"light\";_D=t=>{const i=t.matches?\"dark\":\"light\";i!==this.Eg&&(this.Eg=i,this.Xk===\"system\"&&this.xw())};constructor(t){t&&Object.assign(this,t),t?.themeMap||(this.lu.set(\"light\",{colors:{...Themes.Light.colors},fonts:{...Themes.Light.fonts},numbers:{...Themes.Light.numbers},margins:{...Themes.Light.margins},arrowheads:{...Themes.Light.arrowheads}}),this.lu.set(\"dark\",{colors:{...Themes.Dark.colors},fonts:{...Themes.Dark.fonts},numbers:{...Themes.Dark.numbers},margins:{...Themes.Dark.margins},arrowheads:{...Themes.Dark.arrowheads}})),root.matchMedia&&(this.Eg=root.matchMedia(\"(prefers-color-scheme: dark)\").matches?\"dark\":\"light\")}get themeMap(){return this.lu}set themeMap(t){this.lu!==t&&(this.lu=t,this.xw())}get defaultTheme(){return this.zk}set defaultTheme(t){this.zk!==t&&(U.i(t,\"string\",ThemeManager,\"defaultTheme\"),this.zk=t,this.xw())}get currentTheme(){return this.Xk}set currentTheme(t){this.Xk!==t&&(U.i(t,\"string\",ThemeManager,\"currentTheme\"),this.Xk=t,this.xw())}get changesDivBackground(){return this.Yk}set changesDivBackground(t){if(this.Yk!==t&&(this.Yk=t,t))for(const e of this.os)e.setDivBackground(this.findValue(\"div\",\"\",\"fill\")),e.O(\"ThemeChanged\",this)}get preferredColorScheme(){return this.Eg}addDiagram(t){return this.os.add(t),this.mC(t),this}removeDiagram(t){return this.os.delete(t),this.mC(t),this}mR(){this.os.size===0&&root.matchMedia&&root.matchMedia(\"(prefers-color-scheme: dark)\")?.addEventListener(\"change\",this._D)}pR(){this.os.size===0&&root.matchMedia&&root.matchMedia(\"(prefers-color-scheme: dark)\")?.removeEventListener(\"change\",this._D)}set(t,i){t===\"\"&&(t=this.zk),t===\"system\"&&(t=this.Eg);let e=this.lu.get(t);return e?e=this.tF(e,i):e=i,this.lu.set(t,e),this.xw(),this}findValue(t,i,e){return this.getValue(this.findTheme(this.currentTheme),t,i,e)||this.getValue(this.findTheme(this.defaultTheme),t,i,e)}getValue(t,i,e,s){if(!t)return;e==null&&(e=\"\");let n=t;const o=l=>{if(n===void 0||l===\"\")return;if(typeof l==\"number\"||!(Array.isArray(l)||l.includes(\".\")))return n[l];const h=Array.isArray(l)?l:l.split(\".\");for(let f=0;f<h.length;f++){const a=h[f];if(a!==\"\"&&(n=n[a],n===void 0))return}return n},r=()=>{if(!(e!==\"\"&&(n=o(e),n===void 0)))return Array.isArray(n)&&typeof i==\"number\"?n=n[i%n.length]:n=o(i),n};if(n=r(),n===void 0&&typeof s==\"string\"&&s.length>0){let l=t.targetPropertyMap?.get(s);if(l?n=t[l]:(l=ThemeManager.yE.get(s),n=l?t[l]:t.colors),n=r(),n!==void 0)return n}return n}findTheme(t){return this.themeMap.get(t===\"system\"?this.Eg:t)}mC(t){const i=t.skipsUndoManager;t.skipsUndoManager=!0,t.updateAllThemeBindings(),this.Yk&&t.setDivBackground(this.findValue(\"div\",\"\",\"fill\")),t.skipsUndoManager=i,t.O(\"ThemeChanged\",this)}xw(){for(const t of this.os)this.mC(t)}tF(t,i){for(const e in i)if(U.bw(i,e))try{i[e].constructor===Object?t[e]=this.tF(t[e]??{},i[e]):t[e]=i[e]}catch{delete t[e]}return t}static yE=new Map([[\"background\",\"colors\"],[\"defaultColumnSeparatorStroke\",\"colors\"],[\"defaultRowSeparatorStroke\",\"colors\"],[\"shadowColor\",\"colors\"],[\"fill\",\"colors\"],[\"stroke\",\"colors\"],[\"font\",\"fonts\"],[\"angle\",\"numbers\"],[\"fromEndSegmentLength\",\"numbers\"],[\"fromShortLength\",\"numbers\"],[\"height\",\"numbers\"],[\"opacity\",\"numbers\"],[\"scale\",\"numbers\"],[\"toEndSegmentLength\",\"numbers\"],[\"toShortLength\",\"numbers\"],[\"width\",\"numbers\"],[\"defaultColumnSeparatorStrokeWidth\",\"numbers\"],[\"defaultRowSeparatorStrokeWidth\",\"numbers\"],[\"shadowBlur\",\"numbers\"],[\"corner\",\"numbers\"],[\"curviness\",\"numbers\"],[\"smoothness\",\"numbers\"],[\"parameter1\",\"numbers\"],[\"parameter2\",\"numbers\"],[\"strokeWidth\",\"numbers\"],[\"strokeDashOffset\",\"numbers\"],[\"maxLines\",\"numbers\"],[\"spacingAbove\",\"numbers\"],[\"spacingBelow\",\"numbers\"],[\"position\",\"points\"],[\"shadowOffset\",\"points\"],[\"desiredSize\",\"sizes\"],[\"maxSize\",\"sizes\"],[\"minSize\",\"sizes\"],[\"margin\",\"margins\"],[\"defaultSeparatorPadding\",\"margins\"],[\"padding\",\"margins\"],[\"alignment\",\"spots\"],[\"alignmentFocus\",\"spots\"],[\"fromSpot\",\"spots\"],[\"toSpot\",\"spots\"],[\"defaultAlignment\",\"spots\"],[\"spot1\",\"spots\"],[\"spot2\",\"spots\"],[\"verticalAlignment\",\"spots\"],[\"imageAlignment\",\"spots\"],[\"fromArrow\",\"arrowheads\"],[\"toArrow\",\"arrowheads\"]])}class Router{Lt;C;Xi;pl;constructor(){this.C=Diagram.wm(),this.Lt=\"\",this.Xi=!0,this.pl=!0}get name(){return this.Lt}set name(t){this.Lt=t}get isEnabled(){return this.Xi}set isEnabled(t){this.Xi=t}get isRealtime(){return this.pl}set isRealtime(t){this.pl=t}get diagram(){return this.C}set diagram(t){this.C!==t&&(this.C=t,t.Nl=!0,t.requestUpdate())}invalidateRouter(){this.C!==null&&(this.C.Nl=!0,this.C.requestUpdate())}canRoute(t){if(!this.isEnabled)return!1;const i=this.diagram;return!(i&&(!this.isRealtime&&i.ku||i.animationManager.isTicking))}routeLinks(t,i){}toString(){return this.name!==\"\"?this.name+\" Router\":U.Bn(this.constructor)}}class AvoidsNodesRouter extends Router{constructor(t){super(),this.name=\"AvoidsNodes\",t&&Object.assign(this,t)}canRoute(t){return(t instanceof Diagram?t.qm:t.diagram.qm)?super.canRoute(t):!1}routeLinks(t,i){const e=i instanceof Diagram?null:i,s=t.iterator,n=this.diagram.getPositions(!0,e,null);for(;s.next();){const o=s.value;if(!o.isAvoiding||o.containingGroup!==e||o.toNode===null||o.fromNode===null||o.pointsCount<4)continue;o.startRoute();const r=o.pointsCount,l=o.getPoint(1),h=o.getPoint(r-2),f=o.fromNode.actualBounds.copy();f.inflate(Link.qa,Link.qa),f.unionPoint(o.getPoint(0));const a=o.toNode.actualBounds.copy();a.inflate(Link.qa,Link.qa),a.unionPoint(o.getPoint(r-1)),this.wE(o,f,a,n)&&this.xE(o,l,o.bN,h,o.kN,f,a,n),o.commitRoute()}}wE(t,i,e,s){const n=t.diagram,o=t.pointsCount;if(n===null||t.fromNode===t.toNode||t.layer.isTemporary||i.containsPoint(t.getPoint(o-1))&&!t.toNode.isMemberOf(t.fromNode)||e.containsPoint(t.getPoint(0))&&!t.fromNode.isMemberOf(t.toNode)||!t.isOrthogonal)return!1;if(t.segmentIndex===17)return!0;const r=t.getPoint(1),l=t.getPoint(o-2),h=t.getPoint(2);if(!s.isUnoccupied(Math.min(r.x,h.x),Math.min(r.y,h.y),Math.abs(r.x-h.x),Math.abs(r.y-h.y)))return!0;for(let a=2;a<o-3;a++){const c=t.getPoint(a),u=t.getPoint(a+1);if(!s.isUnoccupied(Math.min(c.x,u.x),Math.min(c.y,u.y),Math.abs(c.x-u.x),Math.abs(c.y-u.y)))return!0}const f=t.getPoint(o-3);return!s.isUnoccupied(Math.min(f.x,l.x),Math.min(f.y,l.y),Math.abs(f.x-l.x),Math.abs(f.y-l.y))}xE(t,i,e,s,n,o,r,l){const h=t.diagram,f=i,a=s;let c=null,u=null;if(h.isVirtualized){const g=l.bounds.copy(),p=t.getPoint(2),w=t.getPoint(t.pointsCount-3);g.inflate(-l.cellWidth,-l.cellHeight);const x=Point.a();l.Yd(i.x,i.y)||(Geo.bl(g.x,g.y,g.x+g.width,g.y+g.height,i.x,i.y,p.x,p.y,x)?(c=i=x.copy(),e=x.directionPoint(p)):Geo.bl(g.x,g.y,g.x+g.width,g.y+g.height,p.x,p.y,w.x,w.y,x)?(c=i=x.copy(),e=x.directionPoint(w)):Geo.bl(g.x,g.y,g.x+g.width,g.y+g.height,w.x,w.y,s.x,s.y,x)&&(c=i=x.copy(),e=x.directionPoint(s))),l.Yd(s.x,s.y)||(Geo.bl(g.x,g.y,g.x+g.width,g.y+g.height,s.x,s.y,w.x,w.y,x)?(u=s=x.copy(),n=w.directionPoint(x)):Geo.bl(g.x,g.y,g.x+g.width,g.y+g.height,w.x,w.y,p.x,p.y,x)?(u=s=x.copy(),n=p.directionPoint(x)):Geo.bl(g.x,g.y,g.x+g.width,g.y+g.height,p.x,p.y,i.x,i.y,x)&&(u=s=x.copy(),n=i.directionPoint(x))),Point.o(x)}const d=o.copy().unionRect(r);d.inflate(l.cellWidth*l.Zf,l.cellHeight*l.Zf),l.RT(i,e,s,n,d,!0);let m=l.uo(s.x,s.y);if(!l.Cy&&m>=PositionArray.Xd&&(l.cL(),d.inflate(l.cellWidth*l.sP,l.cellHeight*l.nP),l.RT(i,e,s,n,d,!1),m=l.uo(s.x,s.y)),!l.Cy&&m<PositionArray.Xd&&!l.VO(s.x,s.y)){t.points.removeRange(2,t.pointsCount-3),this.pC(t,l,s.x,s.y,n,!0);const g=0,p=90,w=180,x=270,k=t.getPoint(2);if(t.pointsCount<4)e===g||e===w?(k.x=i.x,k.y=s.y):(k.x=s.x,k.y=i.y),t.setPointAt(2,k.x,k.y),t.insertPointAt(3,k.x,k.y);else{const b=t.getPoint(3);if(e===g||e===w)if(Geo.g(k.x,b.x)){const S=e===g?Math.max(k.x,i.x):Math.min(k.x,i.x);t.setPointAt(2,S,i.y),t.setPointAt(3,S,b.y)}else Geo.g(k.y,b.y)?(Math.abs(i.y-k.y)<=l.cellHeight/2&&(t.setPointAt(2,k.x,i.y),t.setPointAt(3,b.x,i.y)),t.insertPointAt(2,k.x,i.y)):t.setPointAt(2,i.x,k.y);else if(e===p||e===x)if(Geo.g(k.y,b.y)){const S=e===p?Math.max(k.y,i.y):Math.min(k.y,i.y);t.setPointAt(2,i.x,S),t.setPointAt(3,b.x,S)}else Geo.g(k.x,b.x)?(Math.abs(i.x-k.x)<=l.cellWidth/2&&(t.setPointAt(2,i.x,k.y),t.setPointAt(3,i.x,b.y)),t.insertPointAt(2,i.x,k.y)):t.setPointAt(2,k.x,i.y)}if(c!==null){const b=t.getPoint(1),S=t.getPoint(2);b.x!==S.x&&b.y!==S.y?e===g||e===w?t.insertPointAt(2,b.x,S.y):t.insertPointAt(2,S.x,b.y):e===g||e===w?t.insertPointAt(2,f.x,c.y):t.insertPointAt(2,c.x,f.y)}u!==null&&(n===g||n===w?t.insertPointAt(t.pointsCount-2,a.x,u.y):t.insertPointAt(t.pointsCount-2,u.x,a.y))}}pC(t,i,e,s,n,o){const a=i.cellWidth,c=i.cellHeight;let u=i.uo(e,s),d=e,m=s,g=d,p=m;for(n===0?g+=a:n===90?p+=c:n===180?g-=a:p-=c,t.PN&&u>PositionArray.Ja&&i.uo(g,p)!==u-1&&(i.uo(d-a,m)===u-1?(n=180,g=d-a,p=m):i.uo(d+a,m)===u-1?(n=0,g=d+a,p=m):i.uo(d,m-c)===u-1?(n=270,g=d,p=m-c):i.uo(d,m+c)===u-1&&(n=90,g=d,p=m+c));u>PositionArray.Ja&&i.uo(g,p)===u-1;)d=g,m=p,n===0?g+=a:n===90?p+=c:n===180?g-=a:p-=c,u-=1;if(o?u>PositionArray.Ja&&(n===180||n===0?d=Math.floor(d/a)*a+a/2:(n===90||n===270)&&(m=Math.floor(m/c)*c+c/2)):(d=Math.floor(d/a)*a+a/2,m=Math.floor(m/c)*c+c/2),u>PositionArray.Ja){let w=n,x=d,k=m;if(n===0?(w=90,k+=c):n===90?(w=180,x-=a):n===180?(w=270,k-=c):n===270&&(w=0,x+=a),i.uo(x,k)===u-1)this.pC(t,i,x,k,w,!1);else{let S=d,M=m;n===0?(w=270,M-=c):n===90?(w=0,S+=a):n===180?(w=90,M+=c):n===270&&(w=180,S-=a),i.uo(S,M)===u-1&&this.pC(t,i,S,M,w,!1)}}t.insertPointAt(t.pointsCount-2,d,m)}}ToolManager.prototype.initializeStandardTools=function(){this.ti(\"Action\",new ActionTool,this.mouseDownTools),this.ti(\"Relinking\",new RelinkingTool,this.mouseDownTools),this.ti(\"LinkReshaping\",new LinkReshapingTool,this.mouseDownTools),this.ti(\"Rotating\",new RotatingTool,this.mouseDownTools),this.ti(\"Resizing\",new ResizingTool,this.mouseDownTools),this.ti(\"Linking\",new LinkingTool,this.mouseMoveTools),this.ti(\"Dragging\",new DraggingTool,this.mouseMoveTools),this.ti(\"DragSelecting\",new DragSelectingTool,this.mouseMoveTools),this.ti(\"Panning\",new PanningTool,this.mouseMoveTools),this.ti(\"ContextMenu\",new ContextMenuTool,this.mouseUpTools),this.ti(\"TextEditing\",new TextEditingTool,this.mouseUpTools),this.ti(\"ClickCreating\",new ClickCreatingTool,this.mouseUpTools),this.ti(\"ClickSelecting\",new ClickSelectingTool,this.mouseUpTools)},Diagram.V2(\"GraphLinksModel\",GraphLinksPartManager),Diagram.V2(\"TreeModel\",TreePartManager);const oldGo=root.go,go={get version(){return Diagram.version},Group,List,Set:GSet,Map:GMap,Point,Size,Rect,Margin,Spot,Geometry,PathFigure,PathSegment,InputEvent,DiagramEvent,ChangedEvent,Model,GraphLinksModel,TreeModel,Binding,ThemeBinding,Transaction,UndoManager,CommandHandler,Tool,DraggingTool,DraggingInfo,DraggingOptions,LinkingBaseTool,LinkingTool,RelinkingTool,LinkReshapingTool,ResizingTool,RotatingTool,ClickSelectingTool,ActionTool,ClickCreatingTool,HTMLInfo,ContextMenuTool,DragSelectingTool,PanningTool,TextEditingTool,ToolManager,Animation,AnimationManager,AnimationTrigger,Layer,Diagram,Palette,Overview,Brush,GraphObject,Panel,RowColumnDefinition,Shape,TextBlock,Picture,Part,Adornment,Node,Link,Placeholder,Layout,LayoutNetwork,LayoutVertex,LayoutEdge,GridLayout,PanelLayout,CircularLayout,CircularNetwork,CircularVertex,CircularEdge,ForceDirectedLayout,ForceDirectedNetwork,ForceDirectedVertex,ForceDirectedEdge,LayeredDigraphLayout,LayeredDigraphNetwork,LayeredDigraphVertex,LayeredDigraphEdge,TreeLayout,TreeNetwork,TreeVertex,TreeEdge,Themes,ThemeManager,Router,AnimationStyle,AutoScale,CycleMode,Flip,TextFormat,ImageStretch,LayoutConditions,LinkAdjusting,Curve,Routing,Orientation,TextOverflow,PortSpreading,ScrollMode,CollapsePolicy,Sizing,TriggerStart,Stretch,ViewboxStretch,Wrap,BrushType,ColorSpace,GeometryStretch,GeometryType,SegmentType,BindingMode,ChangeType,CircularArrangement,CircularDirection,CircularNodeDiameterFormula,CircularSorting,GridAlignment,GridArrangement,GridSorting,LayeredDigraphAggressive,LayeredDigraphAlign,LayeredDigraphCycleRemove,LayeredDigraphInit,LayeredDigraphLayering,LayeredDigraphPack,TreeAlignment,TreeArrangement,TreeCompaction,TreeLayerStyle,TreePath,TreeSorting,TreeStyle,GestureMode,LinkingDirection,ReshapingBehavior,TextEditingAccept,TextEditingStarting,TextEditingState,WheelMode};for(const y in go){const t=go[y];U.rt(t)&&t!==TextFormat&&(t.className=y)}U.W(oldGo)&&oldGo.version&&U.nt(\"WARNING: a `go` object on the root object is already defined.  \"+(\"Debug\"in oldGo?\"debug \":\"\")+\"version: \"+oldGo.version+\", replaced with version: \"+go.version),Diagram.prototype.go=go,root.go=go,go.Debug=Debug,Debug.attachReadonlyWarnings(go);\n})();\n\n\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((typeof global !== \"undefined\") ? global.go : self.go);\n  const go = (typeof global !== \"undefined\") ? global.go : self.go;\n  const Group = go.Group;\n  const List = go.List;\n  const GSet = go.Set;\n  \n  const GMap = go.Map;\n  \n  const Point = go.Point;\n  const Size = go.Size;\n  const Rect = go.Rect;\n  const Margin = go.Margin;\n  const Spot = go.Spot;\n  const Geometry = go.Geometry;\n  const PathFigure = go.PathFigure;\n  const PathSegment = go.PathSegment;\n  const InputEvent = go.InputEvent;\n  const DiagramEvent = go.DiagramEvent;\n  const ChangedEvent = go.ChangedEvent;\n  const Model = go.Model;\n  const GraphLinksModel = go.GraphLinksModel;\n  const TreeModel = go.TreeModel;\n  const Binding = go.Binding;\n  const ThemeBinding = go.ThemeBinding;\n  const Transaction = go.Transaction;\n  const UndoManager = go.UndoManager;\n  const CommandHandler = go.CommandHandler;\n  const Tool = go.Tool;\n  const DraggingTool = go.DraggingTool;\n  const DraggingInfo = go.DraggingInfo;\n  const DraggingOptions = go.DraggingOptions;\n  const LinkingBaseTool = go.LinkingBaseTool;\n  const LinkingTool = go.LinkingTool;\n  const RelinkingTool = go.RelinkingTool;\n  const LinkReshapingTool = go.LinkReshapingTool;\n  const ResizingTool = go.ResizingTool;\n  const RotatingTool = go.RotatingTool;\n  const ClickSelectingTool = go.ClickSelectingTool;\n  const ActionTool = go.ActionTool;\n  const ClickCreatingTool = go.ClickCreatingTool;\n  const HTMLInfo = go.HTMLInfo;\n  const ContextMenuTool = go.ContextMenuTool;\n  const DragSelectingTool = go.DragSelectingTool;\n  const PanningTool = go.PanningTool;\n  const TextEditingTool = go.TextEditingTool;\n  const ToolManager = go.ToolManager;\n  const Animation = go.Animation;\n  const AnimationManager = go.AnimationManager;\n  const AnimationTrigger = go.AnimationTrigger;\n  const Layer = go.Layer;\n  const Diagram = go.Diagram;\n  const Palette = go.Palette;\n  const Overview = go.Overview;\n  const Brush = go.Brush;\n  const GraphObject = go.GraphObject;\n  const Panel = go.Panel;\n  const RowColumnDefinition = go.RowColumnDefinition;\n  const Shape = go.Shape;\n  const TextBlock = go.TextBlock;\n  const Picture = go.Picture;\n  const Part = go.Part;\n  const Adornment = go.Adornment;\n  const Node = go.Node;\n  const Link = go.Link;\n  const Placeholder = go.Placeholder;\n  const Layout = go.Layout;\n  const LayoutNetwork = go.LayoutNetwork;\n  const LayoutVertex = go.LayoutVertex;\n  const LayoutEdge = go.LayoutEdge;\n  const GridLayout = go.GridLayout;\n  const PanelLayout = go.PanelLayout;\n  const CircularLayout = go.CircularLayout;\n  const CircularNetwork = go.CircularNetwork;\n  const CircularVertex = go.CircularVertex;\n  const CircularEdge = go.CircularEdge;\n  const ForceDirectedLayout = go.ForceDirectedLayout;\n  const ForceDirectedNetwork = go.ForceDirectedNetwork;\n  const ForceDirectedVertex = go.ForceDirectedVertex;\n  const ForceDirectedEdge = go.ForceDirectedEdge;\n  const LayeredDigraphLayout = go.LayeredDigraphLayout;\n  const LayeredDigraphNetwork = go.LayeredDigraphNetwork;\n  const LayeredDigraphVertex = go.LayeredDigraphVertex;\n  const LayeredDigraphEdge = go.LayeredDigraphEdge;\n  const TreeLayout = go.TreeLayout;\n  const TreeNetwork = go.TreeNetwork;\n  const TreeVertex = go.TreeVertex;\n  const TreeEdge = go.TreeEdge;\n  const Themes = go.Themes;\n  const ThemeManager = go.ThemeManager;\n  const Router = go.Router;\n  const version = go.version;\n\n  const AnimationStyle = go.AnimationStyle;\n  const AutoScale = go.AutoScale;\n  const Curve = go.Curve;\n  const CycleMode = go.CycleMode;\n  const Flip = go.Flip;\n  const ImageStretch = go.ImageStretch;\n  const LayoutConditions = go.LayoutConditions;\n  const LinkAdjusting = go.LinkAdjusting;\n  const Orientation = go.Orientation;\n  const PortSpreading = go.PortSpreading;\n  const Routing = go.Routing;\n  const ScrollMode = go.ScrollMode;\n  const CollapsePolicy = go.CollapsePolicy;\n  const Sizing = go.Sizing;\n  const TriggerStart = go.TriggerStart;\n  const Stretch = go.Stretch;\n  const TextFormat = go.TextFormat;\n  const TextOverflow = go.TextOverflow;\n  const ViewboxStretch = go.ViewboxStretch;\n  const Wrap = go.Wrap;\n  const BrushType = go.BrushType;\n  const ColorSpace = go.ColorSpace;\n  const GeometryStretch = go.GeometryStretch;\n  const GeometryType = go.GeometryType;\n  const SegmentType = go.SegmentType;\n  const BindingMode = go.BindingMode;\n  const ChangeType = go.ChangeType;\n  const CircularArrangement = go.CircularArrangement;\n  const CircularDirection = go.CircularDirection;\n  const CircularNodeDiameterFormula = go.CircularNodeDiameterFormula;\n  const CircularSorting = go.CircularSorting;\n  const GridAlignment = go.GridAlignment;\n  const GridArrangement = go.GridArrangement;\n  const GridSorting = go.GridSorting;\n  const LayeredDigraphAggressive = go.LayeredDigraphAggressive;\n  const LayeredDigraphAlign = go.LayeredDigraphAlign;\n  const LayeredDigraphCycleRemove = go.LayeredDigraphCycleRemove;\n  const LayeredDigraphInit = go.LayeredDigraphInit;\n  const LayeredDigraphLayering = go.LayeredDigraphLayering;\n  const LayeredDigraphPack = go.LayeredDigraphPack;\n  const TreeAlignment = go.TreeAlignment;\n  const TreeArrangement = go.TreeArrangement;\n  const TreeCompaction = go.TreeCompaction;\n  const TreeLayerStyle = go.TreeLayerStyle;\n  const TreePath = go.TreePath;\n  const TreeSorting = go.TreeSorting;\n  const TreeStyle = go.TreeStyle;\n  const GestureMode = go.GestureMode;\n  const LinkingDirection = go.LinkingDirection;\n  const ReshapingBehavior = go.ReshapingBehavior;\n  const TextEditingAccept = go.TextEditingAccept;\n  const TextEditingStarting = go.TextEditingStarting;\n  const TextEditingState = go.TextEditingState;\n  const WheelMode = go.WheelMode;\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZ29qcy9yZWxlYXNlL2dvLWRlYnVnLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwrSkFBK0osa0tBQWtLLGFBQWEsZ0xBQWdMLGtDQUFrQyw0QkFBNEIsZ2pCQUFnakIsb0NBQW9DLGtCQUFrQiw2QkFBNkIsYUFBYSxpQ0FBaUMsZ0RBQWdELFlBQVksV0FBVyxLQUFLLDBEQUEwRCx3RUFBd0UsZ0JBQWdCLDZEQUE2RCxNQUFNLFFBQVEscUlBQXFJLGlCQUFpQixTQUFTLGtCQUFrQix5QkFBeUIsNEJBQTRCLHFCQUFxQix5QkFBeUIsZUFBZSw0QkFBNEIsYUFBYSxxQkFBcUIsYUFBYSxzQ0FBc0MsWUFBWSxtQkFBbUIsY0FBYyw2RUFBNkUseUNBQXlDLGtCQUFrQixzQkFBc0IsY0FBYyxvQ0FBb0Msa0JBQWtCLGlCQUFpQixjQUFjLG9DQUFvQyxnQkFBZ0IscUNBQXFDLGNBQWMsMEZBQTBGLGlCQUFpQixpQ0FBaUMsY0FBYywyQ0FBMkMsZ0JBQWdCLHNCQUFzQixnQkFBZ0IsZUFBZSxHQUFHLHVDQUF1QyxFQUFFLEdBQUcsbUJBQW1CLHFEQUFxRCxjQUFjLG9FQUFvRSxrQkFBa0IsY0FBYywrREFBK0QsYUFBYTtBQUMzNEY7QUFDQSxzRkFBc0YsZUFBZSxzRUFBc0UsYUFBYSxrQ0FBa0MsWUFBWSxvQ0FBb0MsYUFBYSw0QkFBNEIsYUFBYSxZQUFZLG1CQUFtQix1QkFBdUIsYUFBYSx3QkFBd0IsNEJBQTRCLGFBQWEsMkRBQTJELGFBQWEsaUdBQWlHLGVBQWUsMkRBQTJELG1CQUFtQixRQUFRLCtRQUEr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LEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxFQUFFLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsZUFBZSxtQkFBbUIsVUFBVSxlQUFlLEdB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O0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTOztBQUVULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNULEVBQVM7QUFDVCxFQUFTO0FBQ1QsRUFBUztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhcGgtdmlzdWFsaXplci8uL25vZGVfbW9kdWxlcy9nb2pzL3JlbGVhc2UvZ28tZGVidWcubWpzPzQ5ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEdvSlMgdjMuMC4yNiBKYXZhU2NyaXB0IExpYnJhcnkgZm9yIEhUTUwgRGlhZ3JhbXMsIGh0dHBzOi8vZ29qcy5uZXRcbiAqIEdvSlMgYW5kIE5vcnRod29vZHMgU29mdHdhcmUgYXJlIHJlZ2lzdGVyZWQgdHJhZGVtYXJrcyBvZiBOb3J0aHdvb2RzIFNvZnR3YXJlIENvcnBvcmF0aW9uLCBodHRwczovL253b29kcy5jb20uXG4gKiBDb3B5cmlnaHQgMTk5OC0yMDI1IGJ5IE5vcnRod29vZHMgU29mdHdhcmUgQ29ycG9yYXRpb24uICBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVEhJUyBTT0ZUV0FSRSBJUyBMSUNFTlNFRC4gIFRIRSBMSUNFTlNFIEFHUkVFTUVOVCBJUyBBVDogaHR0cHM6Ly9nb2pzLm5ldC8zLjAuMjYvbGljZW5zZS5odG1sLlxuICogRE8gTk9UIE1PRElGWSBUSElTIEZJTEUuICBETyBOT1QgRElTVFJJQlVURSBBIE1PRElGSUVEIENPUFkgT0YgVEhFIENPTlRFTlRTIE9GIFRISVMgRklMRS5cbiAqL1xuKGZ1bmN0aW9uKCkge2NvbnN0IHJvb3Q9dHlwZW9mIGdsb2JhbFRoaXM9PVwib2JqZWN0XCImJmdsb2JhbFRoaXN8fHR5cGVvZiBnbG9iYWw9PVwib2JqZWN0XCImJmdsb2JhbC5nbG9iYWw9PT1nbG9iYWwmJmdsb2JhbHx8dHlwZW9mIHNlbGY9PVwib2JqZWN0XCImJnNlbGYuc2VsZj09PXNlbGYmJnNlbGZ8fHt9O3Jvb3QucmVxdWVzdEFuaW1hdGlvbkZyYW1lPT09dm9pZCAwJiYocm9vdC5zZXRJbW1lZGlhdGU9PT12b2lkIDA/cm9vdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU9eT0+cm9vdC5zZXRUaW1lb3V0KHksMCk6cm9vdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU9cm9vdC5zZXRJbW1lZGlhdGUpO2NvbnN0IERlYnVnPXtib3VuZHNJbmZvRW5hYmxlZDohMSxkcmF3TG9jYXRpb25zRW5hYmxlZDohMSxkcmF3Q2xpcEVuYWJsZWQ6ITEsZHJhd0xpbmtwb2ludHNFbmFibGVkOiExLG5vZGVJbnNwZWN0b3I6ITEsaGFuZGxlTWVzc2FnZXM6ITEsZHJhd0ZyYW1lczohMSxkZWZhdWx0RGlhZ3JhbTpudWxsLHRyYWNlOmZ1bmN0aW9uKHkpe3Jvb3QuY29uc29sZSYmcm9vdC5jb25zb2xlLmxvZyh5KX0sZHJhd0RpYWdyYW1Cb3VuZHMoeSx0LGksZSl7eS5zdHJva2VTdHlsZT1cInJlZFwiLHkuZmlsbFN0eWxlPVwicmVkXCIseS5mb250PVwiOHB4IHNhbnMtc2VyaWZcIix5LmJlZ2luUGF0aCgpLHkubW92ZVRvKC0xMCwwKSx5LmxpbmVUbygxMCwwKSx5Lm1vdmVUbygwLC0xMCkseS5saW5lVG8oMCwxMCkseS5zdHJva2UoKSx5LnNldFRyYW5zZm9ybSgxLDAsMCwxLDAsMCkseS5zY2FsZShpLGkpLHkudHJhbnNmb3JtKHQubTExLHQubTEyLHQubTIxLHQubTIyLHQuZHgsdC5keSkseS5saW5lV2lkdGg9Mix5LmJlZ2luUGF0aCgpLHkubW92ZVRvKGUubGVmdCxlLnRvcCsyMCkseS5saW5lVG8oZS5sZWZ0LGUudG9wKSx5LmxpbmVUbyhlLmxlZnQrMjAsZS50b3ApLHkubW92ZVRvKGUucmlnaHQsZS5ib3R0b20tMjApLHkubGluZVRvKGUucmlnaHQsZS5ib3R0b20pLHkubGluZVRvKGUucmlnaHQtMjAsZS5ib3R0b20pLHkuc3Ryb2tlKCkseS5maWxsVGV4dChcIkRCOiBcIitNYXRoLnJvdW5kKGUueCkrXCIsIFwiK01hdGgucm91bmQoZS55KStcIiwgXCIrTWF0aC5yb3VuZChlLndpZHRoKStcIiwgXCIrTWF0aC5yb3VuZChlLmhlaWdodCksZS5sZWZ0LGUudG9wLTUpfSxhdHRhY2hSZWFkb25seVdhcm5pbmdzOmZ1bmN0aW9uKHkpe2Zvcihjb25zdCB0IGluIHkpe2lmKHQ9PT1cImxpY2Vuc2VLZXlcIiljb250aW51ZTtjb25zdCBpPXlbdF07aWYoaS5wcm90b3R5cGU9PT12b2lkIDApY29udGludWU7Y29uc3QgZT1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhpLnByb3RvdHlwZSk7Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspe2NvbnN0IG49T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLnByb3RvdHlwZSxlW3NdKTtuLmdldCE9PXZvaWQgMCYmbi5zZXQ9PT12b2lkIDAmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLnByb3RvdHlwZSxlW3NdLHtzZXQ6ZnVuY3Rpb24obyl7dGhyb3cgbmV3IEVycm9yKFwiUHJvcGVydHkgXCIrZVtzXStcIiBvZiBcIit0K1wiIGlzIHJlYWQtb25seS5cIil9fSl9fX19O2NsYXNzIFV7c3RhdGljIHJyPXJvb3QubmF2aWdhdG9yIT09dm9pZCAwJiZyb290Lm5hdmlnYXRvci5wbGF0Zm9ybSE9PXZvaWQgMCYmcm9vdC5uYXZpZ2F0b3IucGxhdGZvcm0ubWF0Y2goLyhpUGhvbmV8aVBvZHxpUGFkfE1hYykvaSkhPT1udWxsO3N0YXRpYyBLayh0LGksZSl7bGV0IHM9LTE7cmV0dXJuIGZ1bmN0aW9uKCl7Y29uc3Qgbj10aGlzLG89YXJndW1lbnRzO3MhPT0tMSYmVS5CZyhzKSxzPVUubHIoKCk9PntzPS0xLGV8fHQuYXBwbHkobixvKX0saSksZSYmIXMmJnQuYXBwbHkobixvKX19c3RhdGljIGxyKHQsaSl7cmV0dXJuIHJvb3Quc2V0VGltZW91dCh0LGkpfXN0YXRpYyBCZyh0KXtyb290LmNsZWFyVGltZW91dCh0KX1zdGF0aWMgZHModCl7cmV0dXJuIHJvb3QuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KX1zdGF0aWMgbih0KXt0aHJvdyBuZXcgRXJyb3IodCl9c3RhdGljIEQodCxpKXtsZXQgZT1cIlRoZSBvYmplY3QgaXMgZnJvemVuLCBzbyBpdHMgcHJvcGVydGllcyBjYW5ub3QgYmUgc2V0OiBcIit0LnRvU3RyaW5nKCk7aSE9PXZvaWQgMCYmKGUrPVwiICB0byB2YWx1ZTogXCIraSksVS5uKGUpfXN0YXRpYyBlKHQsaSxlLHMpe2lmKCEodCBpbnN0YW5jZW9mIGkpKXtsZXQgbj1VLmNmKGUpO3MhPT12b2lkIDAmJihuKz1cIi5cIitzKSxVLlBpKHQsaSxuKX19c3RhdGljIGkodCxpLGUscyl7aWYodHlwZW9mIHQhPT1pKXtsZXQgbj1VLmNmKGUpO3MhPT12b2lkIDAmJihuKz1cIi5cIitzKSxVLlBpKHQsaSxuKX19c3RhdGljIHIodCxpLGUpe2lmKHR5cGVvZiB0IT1cIm51bWJlclwifHwhaXNGaW5pdGUodCkpe2xldCBzPVUuY2YoaSk7ZSE9PXZvaWQgMCYmKHMrPVwiLlwiK2UpLFUubihzK1wiIG11c3QgYmUgYSByZWFsIG51bWJlciB0eXBlLCBhbmQgbm90IE5hTiBvciBJbmZpbml0eTogXCIrdCl9fXN0YXRpYyBNbyh0LGksZSl7aWYodD09PW51bGx8fHR5cGVvZiB0IT1cIm9iamVjdFwiKXtsZXQgcz1VLmNmKGkpO2UhPT12b2lkIDAmJihzKz1cIi5cIitlKSxVLlBpKHQsXCJvYmplY3RcIixzKX19c3RhdGljIFAodCxpLGUpe1UuaSh0LFwiZnVuY3Rpb25cIixpLGUpfXN0YXRpYyBqKHQsaSxlKXt0IGluIGl8fFUubihgJHt0fSBpcyBub3QgYSB2YWxpZCB2YWx1ZSBpbiBlbnVtZXJhdGlvbjogJHtlfWApfXN0YXRpYyBQaSh0LGksZSxzKXtjb25zdCBuPVwiIHZhbHVlIGlzIG5vdCBhbiBpbnN0YW5jZSBvZiBcIitVLmNmKGkpK1wiOiBcIjtsZXQgbz1VLmNmKGUpO3MhPT12b2lkIDAmJihvKz1cIi5cIitzKSx0eXBlb2YgdD09XCJzdHJpbmdcIiYmKHQ9J1wiJyt0KydcIicpLFUubihvK24rdCl9c3RhdGljIFUodCxpLGUscyl7bGV0IG49VS5jZihlKTtzIT09dm9pZCAwJiYobis9XCIuXCIrcyksVS5uKG4rXCIgaXMgbm90IGluIHRoZSByYW5nZSBcIitpK1wiOiBcIit0KX1zdGF0aWMgVmUodCl7VS5uKFwiQ29sbGVjdGlvbiB3YXMgbW9kaWZpZWQgZHVyaW5nIGl0ZXJhdGlvbjogXCIrdC50b1N0cmluZygpK2BcbiAgUGVyaGFwcyB5b3Ugc2hvdWxkIGl0ZXJhdGUgb3ZlciBhIGNvcHkgb2YgdGhlIGNvbGxlY3Rpb24sXG4gIG9yIHlvdSBjb3VsZCBjb2xsZWN0IGl0ZW1zIHRvIGJlIHJlbW92ZWQgZnJvbSB0aGUgY29sbGVjdGlvbiBhZnRlciB0aGUgaXRlcmF0aW9uLmApfXN0YXRpYyBocih0LGkpe1UubihcIk5vIHByb3BlcnR5IHRvIHNldCBmb3IgdGhpcyBlbnVtIHZhbHVlOiBcIitpK1wiIG9uIFwiK3QudG9TdHJpbmcoKSl9c3RhdGljIG50KHQpe3Jvb3QuY29uc29sZSYmcm9vdC5jb25zb2xlLmxvZyh0KX1zdGF0aWMgVyh0KXtyZXR1cm4gdCE9PW51bGwmJnR5cGVvZiB0PT1cIm9iamVjdFwifXN0YXRpYyBydCh0KXtyZXR1cm4gdHlwZW9mIHQ9PVwiZnVuY3Rpb25cIn1zdGF0aWMgVWs9W107c3RhdGljIGx0KCl7Y29uc3QgdD1VLlVrLnBvcCgpO3JldHVybiB0PT09dm9pZCAwP1tdOnR9c3RhdGljIHR0KHQpe3QubGVuZ3RoPTAsVS5Vay5wdXNoKHQpfXN0YXRpYyBiRT1PYmplY3QuZnJlZXplKFtdKTtzdGF0aWMgY2YodCl7cmV0dXJuIHQ9PT1udWxsP1wiKlwiOnR5cGVvZiB0PT1cInN0cmluZ1wiP3Q6VS5ydCh0KT90Lm5hbWU6XCJcIn1zdGF0aWMgQm4odCl7cmV0dXJuIFUucnQodCk/dC5jbGFzc05hbWU/dC5jbGFzc05hbWU6dC5uYW1lOlUuVyh0KSYmdC5jb25zdHJ1Y3Rvcj9VLkJuKHQuY29uc3RydWN0b3IpOnR5cGVvZiB0fXN0YXRpYyBVaCh0LGkpe3JldHVybiBpPT1udWxsfHxpPT09XCJcIj9udWxsOlUuVyh0KSYmaSBpbiB0fHx0W2ldP3RbaV06bnVsbH1zdGF0aWMgdG9TdHJpbmcodCl7bGV0IGk9dDtyZXR1cm4gVS5XKHQpJiYodC50ZXh0P2k9dC50ZXh0OnQubmFtZT9pPXQubmFtZTp0LmtleSE9PXZvaWQgMD9pPXQua2V5OnQuaWQhPT12b2lkIDA/aT10LmlkOnQuY29uc3RydWN0b3I9PT1PYmplY3QmJih0LlRleHQ/aT10LlRleHQ6dC5OYW1lP2k9dC5OYW1lOnQuS2V5IT09dm9pZCAwP2k9dC5LZXk6dC5JZCE9PXZvaWQgMD9pPXQuSWQ6dC5JRCE9PXZvaWQgMCYmKGk9dC5JRCkpKSxpPT09dm9pZCAwP1widW5kZWZpbmVkXCI6aT09PW51bGw/XCJudWxsXCI6aS50b1N0cmluZygpfXN0YXRpYyBidyh0LGkpe2lmKHQuaGFzT3duUHJvcGVydHkoaSkpcmV0dXJuITA7bGV0IGU9T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpO2Zvcig7ZSYmZSE9PUZ1bmN0aW9uOyl7aWYoZS5oYXNPd25Qcm9wZXJ0eShpKSlyZXR1cm4hMDtjb25zdCBzPWUua0U7aWYocyYmc1tpXSlyZXR1cm4hMDtlPU9iamVjdC5nZXRQcm90b3R5cGVPZihlKX1yZXR1cm4hMX1zdGF0aWMgaUYodCl7Y29uc3QgaT1bXTtsZXQgZT0wO2ZvcihlPTA7ZTwyNTY7ZSsrKWlbZV09ZTtsZXQgcz0wLG49MDtmb3IoZT0wO2U8MjU2O2UrKylzPShzK2lbZV0rMTE5KSUyNTYsbj1pW2VdLGlbZV09aVtzXSxpW3NdPW47ZT0wLHM9MDtsZXQgbz1cIlwiO2ZvcihsZXQgcj0wO3I8dC5sZW5ndGg7cisrKWU9KGUrMSklMjU2LHM9KHMraVtlXSklMjU2LG49aVtlXSxpW2VdPWlbc10saVtzXT1uLG8rPVN0cmluZy5mcm9tQ2hhckNvZGUodC5jaGFyQ29kZUF0KHIpXmlbKGlbZV0raVtzXSklMjU2XSk7cmV0dXJuIG99c3RhdGljIGVGKHQpe2NvbnN0IGk9XCIwMTIzNDU2Nzg5YWJjZGVmXCIsZT1bXTtmb3IobGV0IHI9MDtyPDI1NjtyKyspZVtpLmNoYXJBdChyPj40KStpLmNoYXJBdChyJjE1KV09U3RyaW5nLmZyb21DaGFyQ29kZShyKTt0Lmxlbmd0aCUyJiYodD1cIjBcIit0KTtjb25zdCBzPVtdO2xldCBuPTA7Zm9yKGxldCByPTA7cjx0Lmxlbmd0aDtyKz0yKXNbbisrXT1lW3Quc3Vic3RyaW5nKHIscisyKV07Y29uc3Qgbz1zLmpvaW4oXCJcIik7cmV0dXJuIG89PT1cIlwiP1wiMFwiOm99c3RhdGljIE9zKHQpe3JldHVybiBVLmlGKFUuZUYodCkpfXN0YXRpYyBjb2xvcjE9XCJAQ09MT1IxXCI7c3RhdGljIGNvbG9yMj1cIkBDT0xPUjJcIjtzdGF0aWMga3c9XCIzMmFiNWZmM2IyNmY0MmRjMGVkOTBmMjE0MTI5MTNiNVwifVUudmZvPVwiMjllNjQ2ZmRiMTYwXCI7Y2xhc3MgU3RyaW5nQnVpbGRlcntHaztjb25zdHJ1Y3Rvcigpe3RoaXMuR2s9W119dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5Hay5qb2luKFwiXCIpfWFkZCh0KXt0IT09XCJcIiYmdGhpcy5Hay5wdXNoKHQpfX1jbGFzcyBQcm9wZXJ0eUNvbGxlY3Rpb257fWNsYXNzIEVtcHR5SXRlcmF0b3J7dztjb25zdHJ1Y3Rvcigpe3RoaXMudz1bXX1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzLncudmFsdWVzKCl9a2V5O3ZhbHVlO2dldCBpdGVyYXRvcigpe3JldHVybiB0aGlzfXJlc2V0KCl7fW5leHQoKXtyZXR1cm4hMX1oYXNOZXh0KCl7cmV0dXJuITF9Zmlyc3QoKXtyZXR1cm4gbnVsbH1hbnkoKXtyZXR1cm4hMX1hbGwoKXtyZXR1cm4hMH1lYWNoKCl7cmV0dXJuIHRoaXN9bWFwKHQpe3JldHVybiB0aGlzfWZpbHRlcigpe3JldHVybiB0aGlzfWdldCBjb3VudCgpe3JldHVybiAwfXdsKCl7fXRvU3RyaW5nKCl7cmV0dXJuXCJFbXB0eUl0ZXJhdG9yXCJ9c3RhdGljIGluc3RhbmNlPW5ldyBFbXB0eUl0ZXJhdG9yfWNsYXNzIFNpbmdsZXRvbkl0ZXJhdG9ye2NvbnN0cnVjdG9yKHQpe3RoaXMua2V5PS0xLHRoaXMudmFsdWU9dH1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVyblt0aGlzLnZhbHVlXS52YWx1ZXMoKX1rZXk7dmFsdWU7Z2V0IGl0ZXJhdG9yKCl7cmV0dXJuIHRoaXN9cmVzZXQoKXt0aGlzLmtleT0tMX1uZXh0KCl7cmV0dXJuIHRoaXMua2V5PT09LTE/KHRoaXMua2V5PTAsITApOiExfWhhc05leHQoKXtyZXR1cm4gdGhpcy5uZXh0KCl9Zmlyc3QoKXtyZXR1cm4gdGhpcy5rZXk9MCx0aGlzLnZhbHVlfWFueSh0KXtyZXR1cm4gdGhpcy5rZXk9LTEsdCh0aGlzLnZhbHVlKX1hbGwodCl7cmV0dXJuIHRoaXMua2V5PS0xLHQodGhpcy52YWx1ZSl9ZWFjaCh0KXtyZXR1cm4gdGhpcy5rZXk9LTEsdCh0aGlzLnZhbHVlKSx0aGlzfW1hcCh0KXtyZXR1cm4gbmV3IFNpbmdsZXRvbkl0ZXJhdG9yKHQodGhpcy52YWx1ZSkpfWZpbHRlcih0KXtyZXR1cm4gdCh0aGlzLnZhbHVlKT9uZXcgU2luZ2xldG9uSXRlcmF0b3IodGhpcy52YWx1ZSk6RW1wdHlJdGVyYXRvci5pbnN0YW5jZX1nZXQgY291bnQoKXtyZXR1cm4gMX13bCgpe3RoaXMudmFsdWU9bnVsbH10b1N0cmluZygpe3JldHVyblwiU2luZ2xldG9uSXRlcmF0b3IoXCIrdGhpcy52YWx1ZStcIilcIn19Y2xhc3MgTGlzdEl0ZXJhdG9ye1F0O0VzO3Z0O090O2NvbnN0cnVjdG9yKHQpe3RoaXMuUXQ9dCx0aGlzLkVzPW51bGwsdC5hcj1udWxsLHRoaXMudnQ9dC5hdCx0aGlzLk90PS0xfVtTeW1ib2wuaXRlcmF0b3JdKCl7cmV0dXJuIHRoaXMuRXM9PT1udWxsP3RoaXMuUXQuaC52YWx1ZXMoKTp0aGlzLlF0LmguZmlsdGVyKHRoaXMuRXMpLnZhbHVlcygpfWtleTt2YWx1ZTtnZXQgaXRlcmF0b3IoKXtyZXR1cm4gdGhpc31nZXQgcHJlZGljYXRlKCl7cmV0dXJuIHRoaXMuRXN9c2V0IHByZWRpY2F0ZSh0KXt0aGlzLkVzPXR9cmVzZXQoKXtjb25zdCB0PXRoaXMuUXQ7dC5hcj1udWxsLHRoaXMudnQ9dC5hdCx0aGlzLk90PS0xfW5leHQoKXtjb25zdCB0PXRoaXMuUXQ7aWYodC5hdCE9PXRoaXMudnQpe2lmKHRoaXMua2V5PDApcmV0dXJuITE7VS5WZSh0KX1jb25zdCBpPXQuaCxlPWkubGVuZ3RoO2xldCBzPSsrdGhpcy5PdDtjb25zdCBuPXRoaXMuRXM7aWYobiE9PW51bGwpZm9yKDtzPGU7KXtjb25zdCBvPWlbc107aWYobihvKSlyZXR1cm4gdGhpcy5PdD1zLHRoaXMua2V5PXMsdGhpcy52YWx1ZT1vLCEwO3MrK31lbHNle2lmKHM8ZSlyZXR1cm4gdGhpcy5rZXk9cyx0aGlzLnZhbHVlPWlbc10sITA7dGhpcy53bCgpfXJldHVybiExfWhhc05leHQoKXtyZXR1cm4gdGhpcy5uZXh0KCl9Zmlyc3QoKXtjb25zdCB0PXRoaXMuUXQ7dGhpcy52dD10LmF0LHRoaXMuT3Q9MDtjb25zdCBpPXQuaCxlPWkubGVuZ3RoLHM9dGhpcy5FcztpZihzIT09bnVsbCl7bGV0IG49MDtmb3IoO248ZTspe2NvbnN0IG89aVtuXTtpZihzKG8pKXJldHVybiB0aGlzLk90PW4sdGhpcy5rZXk9bix0aGlzLnZhbHVlPW8sbztuKyt9cmV0dXJuIG51bGx9ZWxzZSBpZihlPjApe2NvbnN0IG49aVswXTtyZXR1cm4gdGhpcy5rZXk9MCx0aGlzLnZhbHVlPW4sbn1lbHNlIHJldHVybiBudWxsfWFueSh0KXtjb25zdCBpPXRoaXMuUXQ7aS5hcj1udWxsO2NvbnN0IGU9aS5hdDt0aGlzLk90PS0xO2NvbnN0IHM9aS5oLG49cy5sZW5ndGgsbz10aGlzLkVzO2ZvcihsZXQgcj0wO3I8bjtyKyspe2NvbnN0IGw9c1tyXTtpZighKG8hPT1udWxsJiYhbyhsKSkpe2lmKHQobCkpcmV0dXJuITA7aS5hdCE9PWUmJlUuVmUoaSl9fXJldHVybiExfWFsbCh0KXtjb25zdCBpPXRoaXMuUXQ7aS5hcj1udWxsO2NvbnN0IGU9aS5hdDt0aGlzLk90PS0xO2NvbnN0IHM9aS5oLG49cy5sZW5ndGgsbz10aGlzLkVzO2ZvcihsZXQgcj0wO3I8bjtyKyspe2NvbnN0IGw9c1tyXTtpZighKG8hPT1udWxsJiYhbyhsKSkpe2lmKCF0KGwpKXJldHVybiExO2kuYXQhPT1lJiZVLlZlKGkpfX1yZXR1cm4hMH1lYWNoKHQpe2NvbnN0IGk9dGhpcy5RdDtpLmFyPW51bGw7Y29uc3QgZT1pLmF0O3RoaXMuT3Q9LTE7Y29uc3Qgcz1pLmgsbj1zLmxlbmd0aCxvPXRoaXMuRXM7Zm9yKGxldCByPTA7cjxuO3IrKyl7Y29uc3QgbD1zW3JdO28hPT1udWxsJiYhbyhsKXx8KHQobCksaS5hdCE9PWUmJlUuVmUoaSkpfXJldHVybiB0aGlzfW1hcCh0KXtjb25zdCBpPXRoaXMuUXQ7aS5hcj1udWxsO2NvbnN0IGU9aS5hdDt0aGlzLk90PS0xO2NvbnN0IHM9W10sbj1pLmgsbz1uLmxlbmd0aCxyPXRoaXMuRXM7Zm9yKGxldCBoPTA7aDxvO2grKyl7Y29uc3QgZj1uW2hdO3IhPT1udWxsJiYhcihmKXx8KHMucHVzaCh0KGYpKSxpLmF0IT09ZSYmVS5WZShpKSl9Y29uc3QgbD1uZXcgTGlzdDtyZXR1cm4gbC5oPXMsbC56ZSgpLGwuaXRlcmF0b3J9ZmlsdGVyKHQpe2NvbnN0IGk9dGhpcy5RdDtpLmFyPW51bGw7Y29uc3QgZT1pLmF0O3RoaXMuT3Q9LTE7Y29uc3Qgcz1bXSxuPWkuaCxvPW4ubGVuZ3RoLHI9dGhpcy5Fcztmb3IobGV0IGg9MDtoPG87aCsrKXtjb25zdCBmPW5baF07ciE9PW51bGwmJiFyKGYpfHwodChmKSYmcy5wdXNoKGYpLGkuYXQhPT1lJiZVLlZlKGkpKX1jb25zdCBsPW5ldyBMaXN0O3JldHVybiBsLmg9cyxsLnplKCksbC5pdGVyYXRvcn1nZXQgY291bnQoKXtjb25zdCB0PXRoaXMuRXM7aWYodCE9PW51bGwpe2xldCBpPTA7Y29uc3QgZT10aGlzLlF0Lmgscz1lLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKXQoZVtuXSkmJmkrKztyZXR1cm4gaX1lbHNlIHJldHVybiB0aGlzLlF0LmgubGVuZ3RofXdsKCl7dGhpcy5rZXk9LTEsdGhpcy52YWx1ZT1udWxsLHRoaXMudnQ9LTEsdGhpcy5Fcz1udWxsLHRoaXMuUXQuYXI9dGhpc310b1N0cmluZygpe3JldHVyblwiTGlzdEl0ZXJhdG9yQFwiK3RoaXMuT3QrXCIvXCIrdGhpcy5RdC5jb3VudH19Y2xhc3MgTGlzdEl0ZXJhdG9yQmFja3dhcmRze1F0O3Z0O090O2NvbnN0cnVjdG9yKHQpe3RoaXMuUXQ9dCx0LmZyPW51bGwsdGhpcy52dD10LmF0LHRoaXMuT3Q9dC5oLmxlbmd0aH1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzLlF0LmgucmV2ZXJzZSgpLnZhbHVlcygpfWtleTt2YWx1ZTtnZXQgaXRlcmF0b3IoKXtyZXR1cm4gdGhpc31yZXNldCgpe2NvbnN0IHQ9dGhpcy5RdDt0LmZyPW51bGwsdGhpcy52dD10LmF0LHRoaXMuT3Q9dC5oLmxlbmd0aH1uZXh0KCl7Y29uc3QgdD10aGlzLlF0O2lmKHQuYXQhPT10aGlzLnZ0KXtpZih0aGlzLmtleTwwKXJldHVybiExO1UuVmUodCl9Y29uc3QgaT0tLXRoaXMuT3Q7cmV0dXJuIGk+PTA/KHRoaXMua2V5PWksdGhpcy52YWx1ZT10LmhbaV0sITApOih0aGlzLndsKCksITEpfWhhc05leHQoKXtyZXR1cm4gdGhpcy5uZXh0KCl9Zmlyc3QoKXtjb25zdCB0PXRoaXMuUXQ7dGhpcy52dD10LmF0O2NvbnN0IGk9dC5oLGU9aS5sZW5ndGgtMTtpZih0aGlzLk90PWUsZT49MCl7Y29uc3Qgcz1pW2VdO3JldHVybiB0aGlzLmtleT1lLHRoaXMudmFsdWU9cyxzfWVsc2UgcmV0dXJuIG51bGx9YW55KHQpe2NvbnN0IGk9dGhpcy5RdDtpLmZyPW51bGw7Y29uc3QgZT1pLmF0LHM9aS5oLG49cy5sZW5ndGg7dGhpcy5PdD1uO2ZvcihsZXQgbz1uLTE7bz49MDtvLS0pe2NvbnN0IHI9c1tvXTtpZih0KHIpKXJldHVybiEwO2kuYXQhPT1lJiZVLlZlKGkpfXJldHVybiExfWFsbCh0KXtjb25zdCBpPXRoaXMuUXQ7aS5mcj1udWxsO2NvbnN0IGU9aS5hdCxzPWkuaCxuPXMubGVuZ3RoO3RoaXMuT3Q9bjtmb3IobGV0IG89bi0xO28+PTA7by0tKXtjb25zdCByPXNbb107aWYoIXQocikpcmV0dXJuITE7aS5hdCE9PWUmJlUuVmUoaSl9cmV0dXJuITB9ZWFjaCh0KXtjb25zdCBpPXRoaXMuUXQ7aS5mcj1udWxsO2NvbnN0IGU9aS5hdCxzPWkuaCxuPXMubGVuZ3RoO3RoaXMuT3Q9bjtmb3IobGV0IG89bi0xO28+PTA7by0tKXtjb25zdCByPXNbb107dChyKSxpLmF0IT09ZSYmVS5WZShpKX1yZXR1cm4gdGhpc31tYXAodCl7Y29uc3QgaT10aGlzLlF0O2kuZnI9bnVsbDtjb25zdCBlPWkuYXQscz1bXSxuPWkuaCxvPW4ubGVuZ3RoO3RoaXMuT3Q9bztmb3IobGV0IGw9by0xO2w+PTA7bC0tKXtjb25zdCBoPW5bbF07cy5wdXNoKHQoaCkpLGkuYXQhPT1lJiZVLlZlKGkpfWNvbnN0IHI9bmV3IExpc3Q7cmV0dXJuIHIuaD1zLHIuemUoKSxyLml0ZXJhdG9yfWZpbHRlcih0KXtjb25zdCBpPXRoaXMuUXQ7aS5mcj1udWxsO2NvbnN0IGU9aS5hdCxzPVtdLG49aS5oLG89bi5sZW5ndGg7dGhpcy5PdD1vO2ZvcihsZXQgbD1vLTE7bD49MDtsLS0pe2NvbnN0IGg9bltsXTt0KGgpJiZzLnB1c2goaCksaS5hdCE9PWUmJlUuVmUoaSl9Y29uc3Qgcj1uZXcgTGlzdDtyZXR1cm4gci5oPXMsci56ZSgpLHIuaXRlcmF0b3J9Z2V0IGNvdW50KCl7cmV0dXJuIHRoaXMuUXQuaC5sZW5ndGh9d2woKXt0aGlzLmtleT0tMSx0aGlzLnZhbHVlPW51bGwsdGhpcy52dD0tMSx0aGlzLlF0LmZyPXRoaXN9dG9TdHJpbmcoKXtyZXR1cm5cIkxpc3RJdGVyYXRvckJhY2t3YXJkcyhcIit0aGlzLk90K1wiL1wiK3RoaXMuUXQuY291bnQrXCIpXCJ9fWNsYXNzIExpc3R7ZjtoO2F0O2FyO2ZyO2NvbnN0cnVjdG9yKHQpe0dTZXQuSmkodGhpcyksdGhpcy5mPSExLHRoaXMuaD1bXSx0aGlzLmF0PTAsdGhpcy5hcj1udWxsLHRoaXMuZnI9bnVsbCx0IT09dm9pZCAwJiZ0aGlzLmFkZEFsbCh0KX1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzLmgudmFsdWVzKCl9emUoKXtsZXQgdD10aGlzLmF0O3QrKyx0Pjk5OTk5OTk5OSYmKHQ9MCksdGhpcy5hdD10fXAoKXtyZXR1cm4gdGhpcy5mPSEwLHRoaXN9QXQoKXtyZXR1cm4gdGhpcy5mPSExLHRoaXN9dG9TdHJpbmcoKXtyZXR1cm5cIkxpc3QoKSNcIitHU2V0LmdzKHRoaXMpfWFkZCh0KXtyZXR1cm4gdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLmgucHVzaCh0KSx0aGlzLnplKCksdGhpc31wdXNoKHQpe3RoaXMuYWRkKHQpfWFkZEFsbCh0KXtpZih0PT09bnVsbClyZXR1cm4gdGhpczt0aGlzLmYmJlUuRCh0aGlzKTtjb25zdCBpPXRoaXMuaDtpZihBcnJheS5pc0FycmF5KHQpKXtjb25zdCBlPXQubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspe2NvbnN0IG49dFtzXTtpLnB1c2gobil9fWVsc2V7Y29uc3QgZT10Lml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBzPWUudmFsdWU7aS5wdXNoKHMpfX1yZXR1cm4gdGhpcy56ZSgpLHRoaXN9Y2xlYXIoKXt0aGlzLmYmJlUuRCh0aGlzKSx0aGlzLmgubGVuZ3RoPTAsdGhpcy56ZSgpfWNvbnRhaW5zKHQpe3JldHVybiB0aGlzLmhhcyh0KX1oYXModCl7cmV0dXJuIHQ9PT1udWxsPyExOnRoaXMuaC5pbmRleE9mKHQpIT09LTF9aW5kZXhPZih0KXtyZXR1cm4gdD09PW51bGw/LTE6dGhpcy5oLmluZGV4T2YodCl9ZWx0KHQpe0RlYnVnJiZVLnIodCxMaXN0LFwiZWx0OmlcIik7Y29uc3QgaT10aGlzLmg7cmV0dXJuKHQ8MHx8dD49aS5sZW5ndGgpJiZVLlUodCxcIjAgPD0gaSA8IGxlbmd0aFwiLExpc3QsXCJlbHQ6aVwiKSxpW3RdfWdldCh0KXtyZXR1cm4gdGhpcy5lbHQodCl9c2V0RWx0KHQsaSl7RGVidWcmJlUucih0LExpc3QsXCJzZXRFbHQ6aVwiKTtjb25zdCBlPXRoaXMuaDsodDwwfHx0Pj1lLmxlbmd0aCkmJlUuVSh0LFwiMCA8PSBpIDwgbGVuZ3RoXCIsTGlzdCxcInNldEVsdDppXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCksZVt0XT1pfXNldCh0LGkpe3RoaXMuc2V0RWx0KHQsaSl9Zmlyc3QoKXtjb25zdCB0PXRoaXMuaDtyZXR1cm4gdC5sZW5ndGg9PT0wP251bGw6dFswXX1sYXN0KCl7Y29uc3QgdD10aGlzLmgsaT10Lmxlbmd0aDtyZXR1cm4gaT4wP3RbaS0xXTpudWxsfXBvcCgpe3RoaXMuZiYmVS5EKHRoaXMpO2NvbnN0IHQ9dGhpcy5oO3JldHVybiB0Lmxlbmd0aD4wP3QucG9wKCk6bnVsbH1hbnkodCl7Y29uc3QgaT10aGlzLmgsZT10aGlzLmF0LHM9aS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl7aWYodChpW25dKSlyZXR1cm4hMDt0aGlzLmF0IT09ZSYmVS5WZSh0aGlzKX1yZXR1cm4hMX1hbGwodCl7Y29uc3QgaT10aGlzLmgsZT10aGlzLmF0LHM9aS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl7aWYoIXQoaVtuXSkpcmV0dXJuITE7dGhpcy5hdCE9PWUmJlUuVmUodGhpcyl9cmV0dXJuITB9ZWFjaCh0KXtjb25zdCBpPXRoaXMuaCxlPXRoaXMuYXQscz1pLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKXQoaVtuXSksdGhpcy5hdCE9PWUmJlUuVmUodGhpcyk7cmV0dXJuIHRoaXN9bWFwKHQpe2NvbnN0IGk9bmV3IExpc3QsZT1bXSxzPXRoaXMuaCxuPXRoaXMuYXQsbz1zLmxlbmd0aDtmb3IobGV0IHI9MDtyPG87cisrKWUucHVzaCh0KHNbcl0pKSx0aGlzLmF0IT09biYmVS5WZSh0aGlzKTtyZXR1cm4gaS5oPWUsaS56ZSgpLGl9ZmlsdGVyKHQpe2NvbnN0IGk9bmV3IExpc3QsZT1bXSxzPXRoaXMuaCxuPXRoaXMuYXQsbz1zLmxlbmd0aDtmb3IobGV0IHI9MDtyPG87cisrKXtjb25zdCBsPXNbcl07dChsKSYmZS5wdXNoKGwpLHRoaXMuYXQhPT1uJiZVLlZlKHRoaXMpfXJldHVybiBpLmg9ZSxpLnplKCksaX1pbnNlcnRBdCh0LGkpe0RlYnVnJiZVLnIodCxMaXN0LFwiaW5zZXJ0QXQ6aVwiKSx0PDAmJlUuVSh0LFwiPj0gMFwiLExpc3QsXCJpbnNlcnRBdDppXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCk7Y29uc3QgZT10aGlzLmg7dD49ZS5sZW5ndGg/ZS5wdXNoKGkpOmUuc3BsaWNlKHQsMCxpKSx0aGlzLnplKCl9cmVtb3ZlKHQpe3JldHVybiB0aGlzLmRlbGV0ZSh0KX1kZWxldGUodCl7aWYodD09PW51bGwpcmV0dXJuITE7dGhpcy5mJiZVLkQodGhpcyx0KTtjb25zdCBpPXRoaXMuaCxlPWkuaW5kZXhPZih0KTtyZXR1cm4gZT09PS0xPyExOihlPT09aS5sZW5ndGgtMT9pLnBvcCgpOmkuc3BsaWNlKGUsMSksdGhpcy56ZSgpLCEwKX1yZW1vdmVBdCh0KXtEZWJ1ZyYmVS5yKHQsTGlzdCxcInJlbW92ZUF0OmlcIik7Y29uc3QgaT10aGlzLmg7KHQ8MHx8dD49aS5sZW5ndGgpJiZVLlUodCxcIjAgPD0gaSA8IGxlbmd0aFwiLExpc3QsXCJyZW1vdmVBdDppXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCksdD09PWkubGVuZ3RoLTE/aS5wb3AoKTppLnNwbGljZSh0LDEpLHRoaXMuemUoKX1yZW1vdmVSYW5nZSh0LGkpe0RlYnVnJiYoVS5yKHQsTGlzdCxcInJlbW92ZVJhbmdlOmZyb21cIiksVS5yKGksTGlzdCxcInJlbW92ZVJhbmdlOnRvXCIpKTtjb25zdCBlPXRoaXMuaCxzPWUubGVuZ3RoO2lmKHQ8MCl0PTA7ZWxzZSBpZih0Pj1zKXJldHVybiB0aGlzO2lmKGk8MClyZXR1cm4gdGhpcztpZihpPj1zJiYoaT1zLTEpLHQ+aSlyZXR1cm4gdGhpczt0aGlzLmYmJlUuRCh0aGlzKTtsZXQgbj10LG89aSsxO2Zvcig7bzxzOyllW24rK109ZVtvKytdO3JldHVybiBlLmxlbmd0aD1zLShpLXQrMSksdGhpcy56ZSgpLHRoaXN9Y29weSgpe2NvbnN0IHQ9bmV3IExpc3QsaT10aGlzLmg7cmV0dXJuIGkubGVuZ3RoPjAmJih0Lmg9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoaSkpLHR9dG9BcnJheSgpe2NvbnN0IHQ9dGhpcy5oLGk9dGhpcy5jb3VudCxlPW5ldyBBcnJheShpKTtmb3IobGV0IHM9MDtzPGk7cysrKWVbc109dFtzXTtyZXR1cm4gZX1nZXQgeUMoKXtyZXR1cm4gdGhpcy5ofXRvU2V0KCl7Y29uc3QgdD1uZXcgR1NldCxpPXRoaXMuaCxlPXRoaXMuY291bnQ7Zm9yKGxldCBzPTA7czxlO3MrKyl0LmFkZChpW3NdKTtyZXR1cm4gdH1zb3J0KHQpe3JldHVybiBEZWJ1ZyYmVS5QKHQsTGlzdCxcInNvcnQ6c29ydGZ1bmNcIiksdGhpcy5mJiZVLkQodGhpcyksdGhpcy5oLnNvcnQodCksdGhpcy56ZSgpLHRoaXN9c29ydFJhbmdlKHQsaSxlKXtjb25zdCBzPXRoaXMuaCxuPXMubGVuZ3RoO2k9PT12b2lkIDAmJihpPTApLGU9PT12b2lkIDAmJihlPW4pLERlYnVnJiYoVS5QKHQsTGlzdCxcInNvcnRSYW5nZTpzb3J0ZnVuY1wiKSxVLnIoaSxMaXN0LFwic29ydFJhbmdlOmZyb21cIiksVS5yKGUsTGlzdCxcInNvcnRSYW5nZTp0b1wiKSksdGhpcy5mJiZVLkQodGhpcyk7Y29uc3Qgbz1lLWk7aWYobzw9MSlyZXR1cm4gdGhpcztpZigoaTwwfHxpPj1uLTEpJiZVLlUoaSxcIjAgPD0gZnJvbSA8IGxlbmd0aFwiLExpc3QsXCJzb3J0UmFuZ2U6ZnJvbVwiKSxvPT09Mil7Y29uc3Qgcj1zW2ldLGw9c1tpKzFdO3JldHVybiB0KHIsbCk+MCYmKHNbaV09bCxzW2krMV09cix0aGlzLnplKCkpLHRoaXN9aWYoaT09PTApaWYoZT49bilzLnNvcnQodCk7ZWxzZXtjb25zdCByPXMuc2xpY2UoMCxlKTtyLnNvcnQodCk7Zm9yKGxldCBsPTA7bDxlO2wrKylzW2xdPXJbbF19ZWxzZSBpZihlPj1uKXtjb25zdCByPXMuc2xpY2UoaSk7ci5zb3J0KHQpO2ZvcihsZXQgbD1pO2w8bjtsKyspc1tsXT1yW2wtaV19ZWxzZXtjb25zdCByPXMuc2xpY2UoaSxlKTtyLnNvcnQodCk7Zm9yKGxldCBsPWk7bDxlO2wrKylzW2xdPXJbbC1pXX1yZXR1cm4gdGhpcy56ZSgpLHRoaXN9cmV2ZXJzZSgpe3JldHVybiB0aGlzLmYmJlUuRCh0aGlzKSx0aGlzLmgucmV2ZXJzZSgpLHRoaXMuemUoKSx0aGlzfWdldCBjb3VudCgpe3JldHVybiB0aGlzLmgubGVuZ3RofWdldCBzaXplKCl7cmV0dXJuIHRoaXMuaC5sZW5ndGh9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLmgubGVuZ3RofWdldCBpdGVyYXRvcigpe2lmKHRoaXMuaC5sZW5ndGg8PTApcmV0dXJuIEVtcHR5SXRlcmF0b3IuaW5zdGFuY2U7Y29uc3QgdD10aGlzLmFyO3JldHVybiB0IT09bnVsbD8odC5yZXNldCgpLHQpOm5ldyBMaXN0SXRlcmF0b3IodGhpcyl9Z2V0IGl0ZXJhdG9yQmFja3dhcmRzKCl7aWYodGhpcy5oLmxlbmd0aDw9MClyZXR1cm4gRW1wdHlJdGVyYXRvci5pbnN0YW5jZTtjb25zdCB0PXRoaXMuZnI7cmV0dXJuIHQhPT1udWxsPyh0LnJlc2V0KCksdCk6bmV3IExpc3RJdGVyYXRvckJhY2t3YXJkcyh0aGlzKX19Y2xhc3MgU2V0SXRlcmF0b3J7UG87cmk7Y29uc3RydWN0b3IodCl7dGhpcy5Qbz10LHRoaXMucmk9dC53LnZhbHVlcygpfVtTeW1ib2wuaXRlcmF0b3JdKCl7cmV0dXJuIHRoaXMuUG8udy52YWx1ZXMoKX1rZXk7dmFsdWU7Z2V0IGl0ZXJhdG9yKCl7cmV0dXJuIHRoaXN9cmVzZXQoKXtjb25zdCB0PXRoaXMuUG87dGhpcy5yaT10LncudmFsdWVzKCl9bmV4dCgpe2NvbnN0IHQ9dGhpcy5yaS5uZXh0KCk7cmV0dXJuIHRoaXMudmFsdWU9dC52YWx1ZSx0aGlzLmtleT10LnZhbHVlLCF0LmRvbmV9aGFzTmV4dCgpe3JldHVybiB0aGlzLm5leHQoKX1maXJzdCgpe3JldHVybiB0aGlzLlBvLncuc2l6ZT09PTA/bnVsbDoodGhpcy5yaT10aGlzLlBvLncudmFsdWVzKCksdGhpcy5yaS5uZXh0KCkudmFsdWUpfWFueSh0KXtyZXR1cm4gdGhpcy5Qby5hbnkodCl9YWxsKHQpe3JldHVybiB0aGlzLlBvLmFsbCh0KX1lYWNoKHQpe3JldHVybiB0aGlzLlBvLmVhY2godCksdGhpc31tYXAodCl7Y29uc3QgaT1uZXcgTGlzdDtyZXR1cm4gdGhpcy5Qby53LmZvckVhY2goZT0+aS5hZGQodChlKSkpLGkuaXRlcmF0b3J9ZmlsdGVyKHQpe2NvbnN0IGk9bmV3IExpc3Q7cmV0dXJuIHRoaXMuUG8udy5mb3JFYWNoKGU9Pnt0KGUpJiZpLmFkZChlKX0pLGkuaXRlcmF0b3J9Z2V0IGNvdW50KCl7cmV0dXJuIHRoaXMuUG8uY291bnR9d2woKXt0aGlzLmtleT1udWxsLHRoaXMudmFsdWU9bnVsbCx0aGlzLnJpPW51bGx9dG9TdHJpbmcoKXtyZXR1cm5cIlNldEl0ZXJhdG9yXCJ9fWNsYXNzIEdTZXR7Zjt3O2NvbnN0cnVjdG9yKHQpe3RoaXMuZj0hMSx0aGlzLnc9bmV3IFNldCx0IT09dm9pZCAwJiZ0aGlzLmFkZEFsbCh0KX1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzLncudmFsdWVzKCl9dmFsdWVzKCl7cmV0dXJuIHRoaXMudy52YWx1ZXMoKX1wKCl7cmV0dXJuIHRoaXMuZj0hMCx0aGlzfUF0KCl7cmV0dXJuIHRoaXMuZj0hMSx0aGlzfXRvU3RyaW5nKCl7cmV0dXJuXCJTZXQoKSNcIitHU2V0LmdzKHRoaXMpfWFkZCh0KXtyZXR1cm4gdD09PW51bGw/dGhpczoodGhpcy53LmFkZCh0KSx0aGlzKX1hZGRBbGwodCl7aWYodD09PW51bGwpcmV0dXJuIHRoaXM7aWYoQXJyYXkuaXNBcnJheSh0KSl7Y29uc3QgaT10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCBzPXRbZV07cyE9PW51bGwmJnRoaXMudy5hZGQocyl9fWVsc2V7Y29uc3QgaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7ZSE9PW51bGwmJnRoaXMudy5hZGQoZSl9fXJldHVybiB0aGlzfWhhcyh0KXtyZXR1cm4gdGhpcy53Lmhhcyh0KX1jb250YWlucyh0KXtyZXR1cm4gdGhpcy5oYXModCl9Y29udGFpbnNBbGwodCl7aWYodD09PW51bGwpcmV0dXJuITA7Y29uc3QgaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KWlmKCF0aGlzLmhhcyhpLnZhbHVlKSlyZXR1cm4hMTtyZXR1cm4hMH1jb250YWluc0FueSh0KXtpZih0PT09bnVsbClyZXR1cm4hMDtjb25zdCBpPXQuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspaWYodGhpcy5oYXMoaS52YWx1ZSkpcmV0dXJuITA7cmV0dXJuITF9Zmlyc3QoKXtyZXR1cm4gdGhpcy53LnNpemU9PT0wP251bGw6dGhpcy53LnZhbHVlcygpLm5leHQoKS52YWx1ZX1hbnkodCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy53KWlmKHQoaSkpcmV0dXJuITA7cmV0dXJuITF9YWxsKHQpe2Zvcihjb25zdCBpIG9mIHRoaXMudylpZighdChpKSlyZXR1cm4hMTtyZXR1cm4hMH1lYWNoKHQpe2Zvcihjb25zdCBpIG9mIHRoaXMudyl0KGkpO3JldHVybiB0aGlzfW1hcCh0KXtjb25zdCBpPW5ldyBHU2V0O2Zvcihjb25zdCBlIG9mIHRoaXMudylpLmFkZCh0KGUpKTtyZXR1cm4gaX1maWx0ZXIodCl7Y29uc3QgaT1uZXcgR1NldDtmb3IoY29uc3QgZSBvZiB0aGlzLncpdChlKSYmaS5hZGQoZSk7cmV0dXJuIGl9ZGVsZXRlKHQpe3JldHVybiB0aGlzLmYmJlUuRCh0aGlzKSx0aGlzLncuZGVsZXRlKHQpfXJlbW92ZSh0KXtyZXR1cm4gdGhpcy5kZWxldGUodCl9cmVtb3ZlQWxsKHQpe2lmKHQ9PT1udWxsKXJldHVybiB0aGlzO2lmKHRoaXMuZiYmVS5EKHRoaXMpLEFycmF5LmlzQXJyYXkodCkpe2NvbnN0IGk9dC5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl0aGlzLmRlbGV0ZSh0W2VdKX1lbHNle2NvbnN0IGk9dC5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl0aGlzLmRlbGV0ZShpLnZhbHVlKX1yZXR1cm4gdGhpc31yZXRhaW5BbGwodCl7aWYodD09PW51bGwpcmV0dXJuIHRoaXM7aWYodGhpcy5jb3VudD09PTApcmV0dXJuIHRoaXM7dGhpcy5mJiZVLkQodGhpcyk7Y29uc3QgaT1uZXcgR1NldDtpLmFkZEFsbCh0KTtjb25zdCBlPVtdLHM9dGhpcy5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2kuaGFzKG4pfHxlLnB1c2gobil9cmV0dXJuIHRoaXMucmVtb3ZlQWxsKGUpLHRoaXN9Y2xlYXIoKXt0aGlzLmYmJlUuRCh0aGlzKSx0aGlzLncuY2xlYXIoKX1jb3B5KCl7Y29uc3QgdD1uZXcgR1NldDtyZXR1cm4gdGhpcy53LmZvckVhY2goaT0+dC5hZGQoaSkpLHR9dG9BcnJheSgpe3JldHVybiBBcnJheS5mcm9tKHRoaXMudyl9dG9MaXN0KCl7Y29uc3QgdD1uZXcgTGlzdDtyZXR1cm4gdGhpcy53LmZvckVhY2goaT0+dC5hZGQoaSkpLHR9Z2V0IGNvdW50KCl7cmV0dXJuIHRoaXMudy5zaXplfWdldCBzaXplKCl7cmV0dXJuIHRoaXMudy5zaXplfWdldCBpdGVyYXRvcigpe3JldHVybiB0aGlzLncuc2l6ZTw9MD9FbXB0eUl0ZXJhdG9yLmluc3RhbmNlOm5ldyBTZXRJdGVyYXRvcih0aGlzKX1lbnRyaWVzKCl7cmV0dXJuIHRoaXMudy5lbnRyaWVzKCl9a2V5cygpe3JldHVybiB0aGlzLncua2V5cygpfWZvckVhY2godCxpKXtyZXR1cm4gdGhpcy53LmZvckVhY2godCxpKX1zdGF0aWMgU3c9MTtzdGF0aWMgSmkodCl7dC5fX2dvaGFzaGlkPUdTZXQuU3crK31zdGF0aWMgZ3ModCl7cmV0dXJuIHQuX19nb2hhc2hpZH19Y2xhc3MgTWFwS2V5U2V0SXRlcmF0b3J7WjtyaTtjb25zdHJ1Y3Rvcih0KXt0aGlzLlo9dCx0aGlzLnJpPXQudy5rZXlzKCl9W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpcy5aLncua2V5cygpfWtleTt2YWx1ZTtnZXQgaXRlcmF0b3IoKXtyZXR1cm4gdGhpc31yZXNldCgpe2NvbnN0IHQ9dGhpcy5aO3RoaXMucmk9dC53LmtleXMoKX1uZXh0KCl7Y29uc3QgdD10aGlzLnJpLm5leHQoKTtyZXR1cm4gdGhpcy52YWx1ZT10LnZhbHVlLHRoaXMua2V5PXQudmFsdWUsIXQuZG9uZX1oYXNOZXh0KCl7cmV0dXJuIHRoaXMubmV4dCgpfWZpcnN0KCl7cmV0dXJuIHRoaXMuWi53LnNpemU9PT0wP251bGw6KHRoaXMucmk9dGhpcy5aLncua2V5cygpLHRoaXMucmkubmV4dCgpLnZhbHVlKX1hbnkodCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5aLncpaWYodChpWzBdKSlyZXR1cm4hMDtyZXR1cm4hMX1hbGwodCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5aLncpaWYoIXQoaVswXSkpcmV0dXJuITE7cmV0dXJuITB9ZWFjaCh0KXtmb3IoY29uc3QgaSBvZiB0aGlzLloudyl0KGlbMF0pO3JldHVybiB0aGlzfW1hcCh0KXtjb25zdCBpPXRoaXMuWixlPW5ldyBMaXN0O2Zvcihjb25zdCBzIG9mIGkudyllLmFkZCh0KHNbMF0pKTtyZXR1cm4gZS5pdGVyYXRvcn1maWx0ZXIodCl7Y29uc3QgaT10aGlzLlosZT1uZXcgTGlzdDtmb3IoY29uc3QgcyBvZiBpLncpe2NvbnN0IG49c1swXTt0KG4pJiZlLmFkZChuKX1yZXR1cm4gZS5pdGVyYXRvcn1nZXQgY291bnQoKXtyZXR1cm4gdGhpcy5aLnNpemV9d2woKXt0aGlzLmtleT1udWxsLHRoaXMudmFsdWU9bnVsbCx0aGlzLnJpPW51bGx9dG9TdHJpbmcoKXtyZXR1cm5cIk1hcEtleVNldEl0ZXJhdG9yXCJ9fWNsYXNzIE1hcEtleVNldCBleHRlbmRzIEdTZXR7Wjtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLEdTZXQuSmkodGhpcyksdGhpcy5mPSEwLHRoaXMuWj10fVtTeW1ib2wuaXRlcmF0b3JdKCl7cmV0dXJuIHRoaXMudy5rZXlzKCl9dmFsdWVzKCl7cmV0dXJuIHRoaXMudy5rZXlzKCl9cCgpe3JldHVybiB0aGlzfUF0KCl7cmV0dXJuIHRoaXN9dG9TdHJpbmcoKXtyZXR1cm5cIk1hcEtleVNldChcIit0aGlzLloudG9TdHJpbmcoKStcIilcIn1hZGQodCl7VS5uKFwiVGhpcyBTZXQgaXMgcmVhZC1vbmx5OiBcIit0aGlzLnRvU3RyaW5nKCkpfWhhcyh0KXtyZXR1cm4gdGhpcy5aLmhhcyh0KX1jb250YWlucyh0KXtyZXR1cm4gdGhpcy5oYXModCl9ZGVsZXRlKHQpe1UubihcIlRoaXMgU2V0IGlzIHJlYWQtb25seTogXCIrdGhpcy50b1N0cmluZygpKX1yZW1vdmUodCl7cmV0dXJuIHRoaXMuZGVsZXRlKHQpfWNsZWFyKCl7VS5uKFwiVGhpcyBTZXQgaXMgcmVhZC1vbmx5OiBcIit0aGlzLnRvU3RyaW5nKCkpfWZpcnN0KCl7cmV0dXJuIHRoaXMuWi53LnNpemU9PT0wP251bGw6dGhpcy5aLncua2V5cygpLm5leHQoKS52YWx1ZX1hbnkodCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5aLncpaWYodChpWzBdKSlyZXR1cm4hMDtyZXR1cm4hMX1hbGwodCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5aLncpaWYoIXQoaVswXSkpcmV0dXJuITE7cmV0dXJuITB9ZWFjaCh0KXtmb3IoY29uc3QgaSBvZiB0aGlzLloudyl0KGlbMF0pO3JldHVybiB0aGlzfW1hcCh0KXtjb25zdCBpPW5ldyBHU2V0O2Zvcihjb25zdCBlIG9mIHRoaXMuWi53KWkuYWRkKHQoZVswXSkpO3JldHVybiBpfWZpbHRlcih0KXtjb25zdCBpPW5ldyBHU2V0O2Zvcihjb25zdCBlIG9mIHRoaXMuWi53KXtjb25zdCBzPWVbMF07dChzKSYmaS5hZGQocyl9cmV0dXJuIGl9Y29weSgpe3JldHVybiBuZXcgTWFwS2V5U2V0KHRoaXMuWil9dG9TZXQoKXtjb25zdCB0PW5ldyBHU2V0LGk9dGhpcy5aLnc7Zm9yKGNvbnN0IGUgb2YgaSl0LmFkZChlWzBdKTtyZXR1cm4gdH10b0FycmF5KCl7Y29uc3QgdD10aGlzLloudyxpPW5ldyBBcnJheSh0LnNpemUpO2xldCBlPTA7Zm9yKGNvbnN0IHMgb2YgdClpW2VdPXNbMF0sZSsrO3JldHVybiBpfXRvTGlzdCgpe2NvbnN0IHQ9bmV3IExpc3QsaT10aGlzLloudztmb3IoY29uc3QgZSBvZiBpKXQuYWRkKGVbMF0pO3JldHVybiB0fWdldCBjb3VudCgpe3JldHVybiB0aGlzLlouc2l6ZX1nZXQgc2l6ZSgpe3JldHVybiB0aGlzLlouc2l6ZX1nZXQgaXRlcmF0b3IoKXtyZXR1cm4gdGhpcy5aLnNpemU8PTA/RW1wdHlJdGVyYXRvci5pbnN0YW5jZTpuZXcgTWFwS2V5U2V0SXRlcmF0b3IodGhpcy5aKX19Y2xhc3MgTWFwVmFsdWVTZXRJdGVyYXRvcntaO3JpO2NvbnN0cnVjdG9yKHQpe3RoaXMuWj10LHRoaXMucmk9dC53LnZhbHVlcygpfVtTeW1ib2wuaXRlcmF0b3JdKCl7cmV0dXJuIHRoaXMuWi53LnZhbHVlcygpfWtleTt2YWx1ZTtnZXQgaXRlcmF0b3IoKXtyZXR1cm4gdGhpc31yZXNldCgpe2NvbnN0IHQ9dGhpcy5aO3RoaXMucmk9dC53LnZhbHVlcygpfW5leHQoKXtjb25zdCB0PXRoaXMucmkubmV4dCgpO3JldHVybiB0aGlzLnZhbHVlPXQudmFsdWUsdGhpcy5rZXk9dC52YWx1ZSwhdC5kb25lfWhhc05leHQoKXtyZXR1cm4gdGhpcy5uZXh0KCl9Zmlyc3QoKXtyZXR1cm4gdGhpcy5aLncuc2l6ZT09PTA/bnVsbDoodGhpcy5yaT10aGlzLloudy52YWx1ZXMoKSx0aGlzLnJpLm5leHQoKS52YWx1ZSl9YW55KHQpe2Zvcihjb25zdCBpIG9mIHRoaXMuWi53KWlmKHQoaVsxXSkpcmV0dXJuITA7cmV0dXJuITF9YWxsKHQpe2Zvcihjb25zdCBpIG9mIHRoaXMuWi53KWlmKCF0KGlbMV0pKXJldHVybiExO3JldHVybiEwfWVhY2godCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5aLncpdChpWzFdKTtyZXR1cm4gdGhpc31tYXAodCl7Y29uc3QgaT10aGlzLlosZT1uZXcgTGlzdDtmb3IoY29uc3QgcyBvZiBpLncpZS5hZGQodChzWzFdKSk7cmV0dXJuIGUuaXRlcmF0b3J9ZmlsdGVyKHQpe2NvbnN0IGk9dGhpcy5aLGU9bmV3IExpc3Q7Zm9yKGNvbnN0IHMgb2YgaS53KXtjb25zdCBuPXNbMV07dChuKSYmZS5hZGQobil9cmV0dXJuIGUuaXRlcmF0b3J9Z2V0IGNvdW50KCl7cmV0dXJuIHRoaXMuWi5zaXplfXdsKCl7dGhpcy5rZXk9bnVsbCx0aGlzLnZhbHVlPW51bGwsdGhpcy5yaT1udWxsfXRvU3RyaW5nKCl7cmV0dXJuXCJNYXBWYWx1ZVNldEl0ZXJhdG9yXCJ9fWNsYXNzIEtleVZhbHVlUGFpcntjb25zdHJ1Y3Rvcih0LGkpe3RoaXMua2V5PXQsdGhpcy52YWx1ZT1pfXRvU3RyaW5nKCl7cmV0dXJuXCJ7XCIrdGhpcy5rZXkrXCI6XCIrdGhpcy52YWx1ZStcIn1cIn1rZXk7dmFsdWV9Y2xhc3MgTWFwSXRlcmF0b3J7WjtyaTtjb25zdHJ1Y3Rvcih0KXt0aGlzLlo9dCx0aGlzLnJpPXQudy5lbnRyaWVzKCl9W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpcy5aLncuZW50cmllcygpfWtleTt2YWx1ZTtnZXQgaXRlcmF0b3IoKXtyZXR1cm4gdGhpc31yZXNldCgpe2NvbnN0IHQ9dGhpcy5aO3RoaXMucmk9dC53LmVudHJpZXMoKX1uZXh0KCl7Y29uc3QgdD10aGlzLnJpLm5leHQoKTtyZXR1cm4gdC5kb25lPyh0aGlzLmtleT1udWxsLHRoaXMudmFsdWU9bnVsbCwhMSk6KHRoaXMua2V5PXQudmFsdWVbMF0sdGhpcy52YWx1ZT10LnZhbHVlWzFdLCEwKX1oYXNOZXh0KCl7cmV0dXJuIHRoaXMubmV4dCgpfWZpcnN0KCl7aWYodGhpcy5aLncuc2l6ZT09PTApcmV0dXJuIG51bGw7dGhpcy5yaT10aGlzLloudy5lbnRyaWVzKCk7Y29uc3QgdD10aGlzLnJpLm5leHQoKS52YWx1ZTtyZXR1cm4gdGhpcy5rZXk9dFswXSx0aGlzLnZhbHVlPXRbMV0sbmV3IEtleVZhbHVlUGFpcih0WzBdLHRbMV0pfWFueSh0KXtyZXR1cm4gdGhpcy5aLmFueSh0KX1hbGwodCl7cmV0dXJuIHRoaXMuWi5hbGwodCl9ZWFjaCh0KXtyZXR1cm4gdGhpcy5aLmVhY2godCksdGhpc31tYXAodCl7Y29uc3QgaT1uZXcgTGlzdDtsZXQgZT1udWxsO3JldHVybiB0aGlzLloudy5mb3JFYWNoKChzLG4pPT57ZT09PW51bGw/ZT1uZXcgS2V5VmFsdWVQYWlyKG4scyk6KGUua2V5PW4sZS52YWx1ZT1zKSxpLmFkZCh0KGUpKX0pLGkuaXRlcmF0b3J9ZmlsdGVyKHQpe2NvbnN0IGk9bmV3IExpc3Q7bGV0IGU9bnVsbDtyZXR1cm4gdGhpcy5aLncuZm9yRWFjaCgocyxuKT0+e2U9PT1udWxsP2U9bmV3IEtleVZhbHVlUGFpcihuLHMpOihlLmtleT1uLGUudmFsdWU9cyksdChlKSYmKGkuYWRkKGUpLGU9bnVsbCl9KSxpLml0ZXJhdG9yfWdldCBjb3VudCgpe3JldHVybiB0aGlzLlouc2l6ZX13bCgpe3RoaXMua2V5PW51bGwsdGhpcy52YWx1ZT1udWxsLHRoaXMucmk9bnVsbH10b1N0cmluZygpe3JldHVyblwiTWFwSXRlcmF0b3JcIn19Y2xhc3MgR01hcHtmO3c7Y29uc3RydWN0b3IodCl7R1NldC5KaSh0aGlzKSx0aGlzLmY9ITEsdGhpcy53PW5ldyBNYXAsdCE9PXZvaWQgMCYmdGhpcy5hZGRBbGwodCl9W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gdGhpcy53LmVudHJpZXMoKX1lbnRyaWVzKCl7cmV0dXJuIHRoaXMudy5lbnRyaWVzKCl9cCgpe3JldHVybiB0aGlzLmY9ITAsdGhpc31BdCgpe3JldHVybiB0aGlzLmY9ITEsdGhpc310b1N0cmluZygpe3JldHVyblwiTWFwKCkjXCIrR1NldC5ncyh0aGlzKX1zZXQodCxpKXtyZXR1cm4gdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLncuc2V0KHQsaSksdGhpc31hZGQodCxpKXtyZXR1cm4gdGhpcy5zZXQodCxpKX1hZGRBbGwodCl7aWYodD09PW51bGwpcmV0dXJuIHRoaXM7aWYodGhpcy5mJiZVLkQodGhpcyksQXJyYXkuaXNBcnJheSh0KSl7Y29uc3QgaT10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCBzPXRbZV07dGhpcy5zZXQocy5rZXkscy52YWx1ZSl9fWVsc2UgaWYodCBpbnN0YW5jZW9mIEdNYXApe2NvbnN0IGk9dC5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl0aGlzLnNldChpLmtleSxpLnZhbHVlKX1lbHNle2NvbnN0IGk9dC5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO3RoaXMuc2V0KGUua2V5LGUudmFsdWUpfX1yZXR1cm4gdGhpc31maXJzdCgpe2lmKHRoaXMudy5zaXplPT09MClyZXR1cm4gbnVsbDtjb25zdCB0PXRoaXMudy5lbnRyaWVzKCkubmV4dCgpLnZhbHVlO3JldHVybiBuZXcgS2V5VmFsdWVQYWlyKHRbMF0sdFsxXSl9YW55KHQpe2xldCBpPW51bGw7Zm9yKGNvbnN0W2Usc11vZiB0aGlzLncpaWYoaT09PW51bGw/aT1uZXcgS2V5VmFsdWVQYWlyKGUscyk6KGkua2V5PWUsaS52YWx1ZT1zKSx0KGkpKXJldHVybiEwO3JldHVybiExfWFsbCh0KXtsZXQgaT1udWxsO2Zvcihjb25zdFtlLHNdb2YgdGhpcy53KWlmKGk9PT1udWxsP2k9bmV3IEtleVZhbHVlUGFpcihlLHMpOihpLmtleT1lLGkudmFsdWU9cyksIXQoaSkpcmV0dXJuITE7cmV0dXJuITB9ZWFjaCh0KXtsZXQgaT1udWxsO2Zvcihjb25zdFtlLHNdb2YgdGhpcy53KWk9PT1udWxsP2k9bmV3IEtleVZhbHVlUGFpcihlLHMpOihpLmtleT1lLGkudmFsdWU9cyksdChpKTtyZXR1cm4gdGhpc31tYXAodCl7Y29uc3QgaT1uZXcgR01hcDtsZXQgZT1udWxsO2Zvcihjb25zdFtzLG5db2YgdGhpcy53KWU9PT1udWxsP2U9bmV3IEtleVZhbHVlUGFpcihzLG4pOihlLmtleT1zLGUudmFsdWU9biksaS5zZXQocyx0KGUpKTtyZXR1cm4gaX1maWx0ZXIodCl7Y29uc3QgaT1uZXcgR01hcDtsZXQgZT1udWxsO2Zvcihjb25zdFtzLG5db2YgdGhpcy53KWU9PT1udWxsP2U9bmV3IEtleVZhbHVlUGFpcihzLG4pOihlLmtleT1zLGUudmFsdWU9biksdChlKSYmaS5zZXQocyxuKTtyZXR1cm4gaX1oYXModCl7cmV0dXJuIHRoaXMudy5oYXModCl9Y29udGFpbnModCl7cmV0dXJuIHRoaXMuaGFzKHQpfWdldCh0KXtjb25zdCBpPXRoaXMudy5nZXQodCk7cmV0dXJuIGk9PT12b2lkIDA/bnVsbDppfWdldFZhbHVlKHQpe3JldHVybiB0aGlzLmdldCh0KX1kZWxldGUodCl7cmV0dXJuIHQ9PT1udWxsPyExOih0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMudy5kZWxldGUodCkpfXJlbW92ZSh0KXtyZXR1cm4gdGhpcy5kZWxldGUodCl9Y2xlYXIoKXt0aGlzLmYmJlUuRCh0aGlzKSx0aGlzLncuY2xlYXIoKX1jb3B5KCl7Y29uc3QgdD1uZXcgR01hcDtyZXR1cm4gdC53PW5ldyBNYXAodGhpcy53KSx0fXRvQXJyYXkoKXtjb25zdCB0PXRoaXMudyxpPW5ldyBBcnJheSh0LnNpemUpO2xldCBlPTA7Zm9yKGNvbnN0IHMgb2YgdClpW2VdPW5ldyBLZXlWYWx1ZVBhaXIoc1swXSxzWzFdKSxlKys7cmV0dXJuIGl9dG9LZXlTZXQoKXtyZXR1cm4gbmV3IE1hcEtleVNldCh0aGlzKX1nZXQgY291bnQoKXtyZXR1cm4gdGhpcy53LnNpemV9Z2V0IHNpemUoKXtyZXR1cm4gdGhpcy53LnNpemV9Z2V0IGl0ZXJhdG9yKCl7cmV0dXJuIHRoaXMudy5zaXplPD0wP0VtcHR5SXRlcmF0b3IuaW5zdGFuY2U6bmV3IE1hcEl0ZXJhdG9yKHRoaXMpfWdldCBpdGVyYXRvcktleXMoKXtyZXR1cm4gdGhpcy5jb3VudDw9MD9FbXB0eUl0ZXJhdG9yLmluc3RhbmNlOm5ldyBNYXBLZXlTZXRJdGVyYXRvcih0aGlzKX1rZXlzKCl7cmV0dXJuIHRoaXMudy5rZXlzKCl9Z2V0IGl0ZXJhdG9yVmFsdWVzKCl7cmV0dXJuIHRoaXMuY291bnQ8PTA/RW1wdHlJdGVyYXRvci5pbnN0YW5jZTpuZXcgTWFwVmFsdWVTZXRJdGVyYXRvcih0aGlzKX12YWx1ZXMoKXtyZXR1cm4gdGhpcy53LnZhbHVlcygpfWZvckVhY2godCxpKXtyZXR1cm4gdGhpcy53LmZvckVhY2godCxpKX19Y2xhc3MgUG9pbnR7cHg7cHk7Zjtjb25zdHJ1Y3Rvcih0LGkpe3Q9PT12b2lkIDA/KHRoaXMucHg9MCx0aGlzLnB5PTApOnR5cGVvZiB0PT1cIm51bWJlclwiJiZ0eXBlb2YgaT09XCJudW1iZXJcIj8odGhpcy5weD10LHRoaXMucHk9aSk6VS5uKFwiSW52YWxpZCBhcmd1bWVudHMgdG8gUG9pbnQgY29uc3RydWN0b3I6IFwiK3QrXCIsIFwiK2kpLHRoaXMuZj0hMX1jKHQpe3JldHVybiB0aGlzLnB4PXQucHgsdGhpcy5weT10LnB5LHRoaXN9cyh0LGkpe3JldHVybiB0aGlzLnB4PXQsdGhpcy5weT1pLHRoaXN9c2V0VG8odCxpKXtyZXR1cm4gRGVidWcmJihVLmkodCxcIm51bWJlclwiLFBvaW50LFwic2V0VG86eFwiKSxVLmkoaSxcIm51bWJlclwiLFBvaW50LFwic2V0VG86eVwiKSx0aGlzLl8oKSksdGhpcy5weD10LHRoaXMucHk9aSx0aGlzfXNldCh0KXtyZXR1cm4gRGVidWcmJihVLmUodCxQb2ludCxQb2ludCxcInNldDpwXCIpLHRoaXMuXygpKSx0aGlzLnB4PXQucHgsdGhpcy5weT10LnB5LHRoaXN9Y29weSgpe2NvbnN0IHQ9bmV3IFBvaW50O3JldHVybiB0LnB4PXRoaXMucHgsdC5weT10aGlzLnB5LHR9aXQoKXtyZXR1cm4gdGhpcy5mPSEwLE9iamVjdC5mcmVlemUodGhpcyksdGhpc31OKCl7cmV0dXJuIHRoaXMuZnx8T2JqZWN0LmlzRnJvemVuKHRoaXMpP3RoaXM6dGhpcy5jb3B5KCkucCgpfXAoKXtyZXR1cm4gdGhpcy5mfHwodGhpcy5mPSEwKSx0aGlzfUF0KCl7cmV0dXJuIHRoaXMuZiYmKE9iamVjdC5pc0Zyb3plbih0aGlzKSYmVS5uKFwiY2Fubm90IHRoYXcgY29uc3RhbnQ6IFwiK3RoaXMpLHRoaXMuZj0hMSksdGhpc31fKHQpe2lmKERlYnVnJiZ0aGlzLmYpe2xldCBpPVwiVGhlIFBvaW50IGlzIGZyb3plbiwgc28gaXRzIHByb3BlcnRpZXMgY2Fubm90IGJlIHNldDogXCIrdGhpcy50b1N0cmluZygpO3QhPT12b2lkIDAmJihpKz1cIiAgdG8gdmFsdWU6IFwiK3QpLFUubihpKX19c3RhdGljIHBhcnNlKHQpe2lmKHR5cGVvZiB0PT1cInN0cmluZ1wiKXtjb25zdCBpPXQuc3BsaXQoXCIgXCIpO2xldCBlPTAscz0wO2Zvcig7aVtlXT09PVwiXCI7KWUrKztsZXQgbj1pW2UrK107biYmKHM9cGFyc2VGbG9hdChuKSk7bGV0IG89MDtmb3IoO2lbZV09PT1cIlwiOyllKys7cmV0dXJuIG49aVtlKytdLG4mJihvPXBhcnNlRmxvYXQobikpLG5ldyBQb2ludChzLG8pfWVsc2UgcmV0dXJuIG5ldyBQb2ludH1zdGF0aWMgc3RyaW5naWZ5KHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsUG9pbnQpLHQueC50b1N0cmluZygpK1wiIFwiK3QueS50b1N0cmluZygpfXN0YXRpYyBzdHJpbmdpZnlGaXhlZCh0KXtyZXR1cm4gVS5pKHQsXCJudW1iZXJcIixQb2ludCxcInN0cmluZ2lmeUZpeGVkOmRpZ2l0c1wiKSxpPT5pLngudG9GaXhlZCh0KStcIiBcIitpLnkudG9GaXhlZCh0KX10b1N0cmluZygpe3JldHVyblwiUG9pbnQoXCIrdGhpcy54K1wiLFwiK3RoaXMueStcIilcIn1lcXVhbHModCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBQb2ludD90aGlzLnB4PT09dC54JiZ0aGlzLnB5PT09dC55OiExfWVxdWFsVG8odCxpKXtyZXR1cm4gdGhpcy5weD09PXQmJnRoaXMucHk9PT1pfWVxdWFsc0FwcHJveCh0KXtyZXR1cm4gR2VvLmcodGhpcy5weCx0LngpJiZHZW8uZyh0aGlzLnB5LHQueSl9YWRkKHQpe3JldHVybiBEZWJ1ZyYmKFUuZSh0LFBvaW50LFBvaW50LFwiYWRkOnBcIiksdGhpcy5fKCkpLHRoaXMucHgrPXQueCx0aGlzLnB5Kz10LnksdGhpc31zdWJ0cmFjdCh0KXtyZXR1cm4gRGVidWcmJihVLmUodCxQb2ludCxQb2ludCxcInN1YnRyYWN0OnBcIiksdGhpcy5fKCkpLHRoaXMucHgtPXQueCx0aGlzLnB5LT10LnksdGhpc31vZmZzZXQodCxpKXtyZXR1cm4gRGVidWcmJihVLnIodCxQb2ludCxcIm9mZnNldDpkeFwiKSxVLnIoaSxQb2ludCxcIm9mZnNldDpkeVwiKSx0aGlzLl8oKSksdGhpcy5weCs9dCx0aGlzLnB5Kz1pLHRoaXN9cm90YXRlKHQpe2lmKERlYnVnJiYoVS5yKHQsUG9pbnQsXCJyb3RhdGU6YW5nbGVcIiksdGhpcy5fKCkpLHQ9PT0wKXJldHVybiB0aGlzO2NvbnN0IGk9dGhpcy5weCxlPXRoaXMucHk7aWYoaT09PTAmJmU9PT0wKXJldHVybiB0aGlzO2xldCBzPTAsbj0wO2lmKHQ+PTM2MD90LT0zNjA6dDwwJiYodCs9MzYwKSx0PT09OTApcz0wLG49MTtlbHNlIGlmKHQ9PT0xODApcz0tMSxuPTA7ZWxzZSBpZih0PT09MjcwKXM9MCxuPS0xO2Vsc2V7Y29uc3Qgbz10Kk1hdGguUEkvMTgwO3M9TWF0aC5jb3Mobyksbj1NYXRoLnNpbihvKX1yZXR1cm4gdGhpcy5weD1zKmktbiplLHRoaXMucHk9bippK3MqZSx0aGlzfXNjYWxlKHQsaSl7cmV0dXJuIERlYnVnJiYoVS5yKHQsUG9pbnQsXCJzY2FsZTpzeFwiKSxVLnIoaSxQb2ludCxcInNjYWxlOnN5XCIpLHRoaXMuXygpKSx0aGlzLnB4Kj10LHRoaXMucHkqPWksdGhpc31kaXN0YW5jZVNxdWFyZWRQb2ludCh0KXtEZWJ1ZyYmVS5lKHQsUG9pbnQsUG9pbnQsXCJkaXN0YW5jZVNxdWFyZWRQb2ludDpwXCIpO2NvbnN0IGk9dC54LXRoaXMucHgsZT10LnktdGhpcy5weTtyZXR1cm4gaSppK2UqZX1kaXN0YW5jZVNxdWFyZWQodCxpKXtEZWJ1ZyYmKFUucih0LFBvaW50LFwiZGlzdGFuY2VTcXVhcmVkOnB4XCIpLFUucihpLFBvaW50LFwiZGlzdGFuY2VTcXVhcmVkOnB5XCIpKTtjb25zdCBlPXQtdGhpcy5weCxzPWktdGhpcy5weTtyZXR1cm4gZSplK3Mqc31ub3JtYWxpemUoKXtEZWJ1ZyYmdGhpcy5fKCk7Y29uc3QgdD10aGlzLnB4LGk9dGhpcy5weSxlPU1hdGguc3FydCh0KnQraSppKTtyZXR1cm4gZT4wJiYodGhpcy5weD10L2UsdGhpcy5weT1pL2UpLHRoaXN9ZGlyZWN0aW9uUG9pbnQodCl7cmV0dXJuIERlYnVnJiZVLmUodCxQb2ludCxQb2ludCxcImRpcmVjdGlvblBvaW50OnBcIiksdGhpcy53Qyh0LngtdGhpcy5weCx0LnktdGhpcy5weSl9ZGlyZWN0aW9uKHQsaSl7cmV0dXJuIERlYnVnJiYoVS5yKHQsUG9pbnQsXCJkaXJlY3Rpb246cHhcIiksVS5yKGksUG9pbnQsXCJkaXJlY3Rpb246cHlcIikpLHRoaXMud0ModC10aGlzLnB4LGktdGhpcy5weSl9d0ModCxpKXtpZih0PT09MClyZXR1cm4gaT4wPzkwOmk8MD8yNzA6MDtpZihpPT09MClyZXR1cm4gdD4wPzA6MTgwO3tpZihpc05hTih0KXx8aXNOYU4oaSkpcmV0dXJuIDA7bGV0IGU9TWF0aC5hdGFuKE1hdGguYWJzKGkvdCkpKjE4MC9NYXRoLlBJO3JldHVybiB0PDA/aTwwP2UrPTE4MDplPTE4MC1lOmk8MCYmKGU9MzYwLWUpLGV9fXN0YXRpYyBjb21wYXJlV2l0aExpbmVTZWdtZW50KHQsaSxlLHMsbixvKXtyZXR1cm4gRGVidWcmJihVLnIodCxQb2ludCxcImNvbXBhcmVXaXRoTGluZVNlZ21lbnQ6YTF4XCIpLFUucihpLFBvaW50LFwiY29tcGFyZVdpdGhMaW5lU2VnbWVudDphMXlcIiksVS5yKGUsUG9pbnQsXCJjb21wYXJlV2l0aExpbmVTZWdtZW50OmEyeFwiKSxVLnIocyxQb2ludCxcImNvbXBhcmVXaXRoTGluZVNlZ21lbnQ6YTJ5XCIpLFUucihuLFBvaW50LFwiY29tcGFyZVdpdGhMaW5lU2VnbWVudDpiMXhcIiksVS5yKG8sUG9pbnQsXCJjb21wYXJlV2l0aExpbmVTZWdtZW50OmIxeVwiKSksR2VvLmh1KHQsaSxlLHMsbixvKX1jb21wYXJlV2l0aExpbmVTZWdtZW50UG9pbnQodCxpKXtyZXR1cm4gRGVidWcmJihVLmUodCxQb2ludCxQb2ludCxcImNvbXBhcmVXaXRoTGluZVNlZ21lbnRQb2ludDpwXCIpLFUuZShpLFBvaW50LFBvaW50LFwiY29tcGFyZVdpdGhMaW5lU2VnbWVudFBvaW50OnFcIikpLEdlby5odSh0LngsdC55LGkueCxpLnksdGhpcy54LHRoaXMueSl9c3RhdGljIGludGVyc2VjdGluZ0xpbmVTZWdtZW50cyh0LGksZSxzLG4sbyxyLGwpe3JldHVybiBEZWJ1ZyYmKFUucih0LFBvaW50LFwiaW50ZXJzZWN0aW5nTGluZVNlZ21lbnRzOmExeFwiKSxVLnIoaSxQb2ludCxcImludGVyc2VjdGluZ0xpbmVTZWdtZW50czphMXlcIiksVS5yKGUsUG9pbnQsXCJpbnRlcnNlY3RpbmdMaW5lU2VnbWVudHM6YTJ4XCIpLFUucihzLFBvaW50LFwiaW50ZXJzZWN0aW5nTGluZVNlZ21lbnRzOmEyeVwiKSxVLnIobixQb2ludCxcImludGVyc2VjdGluZ0xpbmVTZWdtZW50czpiMXhcIiksVS5yKG8sUG9pbnQsXCJpbnRlcnNlY3RpbmdMaW5lU2VnbWVudHM6YjF5XCIpLFUucihyLFBvaW50LFwiaW50ZXJzZWN0aW5nTGluZVNlZ21lbnRzOmIyeFwiKSxVLnIobCxQb2ludCxcImludGVyc2VjdGluZ0xpbmVTZWdtZW50czpiMnlcIikpLEdlby5hdSh0LGksZSxzLG4sbyxyLGwpfXByb2plY3RPbnRvTGluZVNlZ21lbnQodCxpLGUscyl7cmV0dXJuIERlYnVnJiYoVS5yKHQsUG9pbnQsXCJwcm9qZWN0T250b0xpbmVTZWdtZW50OnB4XCIpLFUucihpLFBvaW50LFwicHJvamVjdE9udG9MaW5lU2VnbWVudDpweVwiKSxVLnIoZSxQb2ludCxcInByb2plY3RPbnRvTGluZVNlZ21lbnQ6cXhcIiksVS5yKHMsUG9pbnQsXCJwcm9qZWN0T250b0xpbmVTZWdtZW50OnF5XCIpKSxHZW8ueGwodCxpLGUscyx0aGlzLnB4LHRoaXMucHksdGhpcyksdGhpc31wcm9qZWN0T250b0xpbmVTZWdtZW50UG9pbnQodCxpKXtyZXR1cm4gRGVidWcmJihVLmUodCxQb2ludCxQb2ludCxcInByb2plY3RPbnRvTGluZVNlZ21lbnRQb2ludDpwXCIpLFUuZShpLFBvaW50LFBvaW50LFwicHJvamVjdE9udG9MaW5lU2VnbWVudFBvaW50OnFcIikpLEdlby54bCh0LngsdC55LGkueCxpLnksdGhpcy5weCx0aGlzLnB5LHRoaXMpLHRoaXN9c25hcFRvR3JpZCh0LGksZSxzKXtyZXR1cm4gRGVidWcmJihVLnIodCxQb2ludCxcInNuYXBUb0dyaWQ6b3JpZ2lueFwiKSxVLnIoaSxQb2ludCxcInNuYXBUb0dyaWQ6b3JpZ2lueVwiKSxVLnIoZSxQb2ludCxcInNuYXBUb0dyaWQ6Y2VsbHdpZHRoXCIpLFUucihzLFBvaW50LFwic25hcFRvR3JpZDpjZWxsaGVpZ2h0XCIpKSxHZW8uVmcodGhpcy5weCx0aGlzLnB5LHQsaSxlLHMsdGhpcyksdGhpc31zbmFwVG9HcmlkUG9pbnQodCxpKXtyZXR1cm4gRGVidWcmJihVLmUodCxQb2ludCxQb2ludCxcInNuYXBUb0dyaWRQb2ludDpwXCIpLFUuZShpLFNpemUsUG9pbnQsXCJzbmFwVG9HcmlkUG9pbnQ6cVwiKSksR2VvLlZnKHRoaXMucHgsdGhpcy5weSx0LngsdC55LGkud2lkdGgsaS5oZWlnaHQsdGhpcyksdGhpc31zZXRSZWN0U3BvdCh0LGkpe3JldHVybiBEZWJ1ZyYmKFUuZSh0LFJlY3QsUG9pbnQsXCJzZXRSZWN0U3BvdDpyXCIpLFUuZShpLFNwb3QsUG9pbnQsXCJzZXRSZWN0U3BvdDpzcG90XCIpLHRoaXMuXygpKSx0aGlzLnB4PXQueCtpLngqdC53aWR0aCtpLm9mZnNldFgsdGhpcy5weT10LnkraS55KnQuaGVpZ2h0K2kub2Zmc2V0WSx0aGlzfXNldFNwb3QodCxpLGUscyxuKXtyZXR1cm4gRGVidWcmJihVLnIodCxQb2ludCxcInNldFNwb3Q6eFwiKSxVLnIoaSxQb2ludCxcInNldFNwb3Q6eVwiKSxVLnIoZSxQb2ludCxcInNldFNwb3Q6d1wiKSxVLnIocyxQb2ludCxcInNldFNwb3Q6aFwiKSwoZTwwfHxzPDApJiZVLm4oXCJQb2ludC5zZXRTcG90OldpZHRoIGFuZCBoZWlnaHQgY2Fubm90IGJlIG5lZ2F0aXZlXCIpLFUuZShuLFNwb3QsUG9pbnQsXCJzZXRTcG90OnNwb3RcIiksdGhpcy5fKCkpLHRoaXMucHg9dCtuLngqZStuLm9mZnNldFgsdGhpcy5weT1pK24ueSpzK24ub2Zmc2V0WSx0aGlzfUYodCl7cmV0dXJuIHQua3QodGhpcyksdGhpc31YZSh0KXtyZXR1cm4gdC5pcyh0aGlzKSx0aGlzfXN0YXRpYyBkaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZCh0LGksZSxzLG4sbyl7RGVidWcmJihVLnIodCxQb2ludCxcImRpc3RhbmNlTGluZVNlZ21lbnRTcXVhcmVkOnB4XCIpLFUucihpLFBvaW50LFwiZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQ6cHlcIiksVS5yKGUsUG9pbnQsXCJkaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZDpheFwiKSxVLnIocyxQb2ludCxcImRpc3RhbmNlTGluZVNlZ21lbnRTcXVhcmVkOmF5XCIpLFUucihuLFBvaW50LFwiZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQ6YnhcIiksVS5yKG8sUG9pbnQsXCJkaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZDpieVwiKSk7bGV0IHI9bi1lLGw9by1zO2NvbnN0IGg9cipyK2wqbCxmPWUtdCxhPXMtaSxjPS1mKnItYSpsO2lmKGM8PTB8fGM+PWgpcmV0dXJuIHI9bi10LGw9by1pLE1hdGgubWluKGYqZithKmEscipyK2wqbCk7e2NvbnN0IHU9ciphLWwqZjtyZXR1cm4gdSp1L2h9fXN0YXRpYyBkaXN0YW5jZVNxdWFyZWQodCxpLGUscyl7RGVidWcmJihVLnIodCxQb2ludCxcImRpc3RhbmNlU3F1YXJlZDpweFwiKSxVLnIoaSxQb2ludCxcImRpc3RhbmNlU3F1YXJlZDpweVwiKSxVLnIoZSxQb2ludCxcImRpc3RhbmNlU3F1YXJlZDpxeFwiKSxVLnIocyxQb2ludCxcImRpc3RhbmNlU3F1YXJlZDpxeVwiKSk7Y29uc3Qgbj1lLXQsbz1zLWk7cmV0dXJuIG4qbitvKm99c3RhdGljIGRpcmVjdGlvbih0LGksZSxzKXtEZWJ1ZyYmKFUucih0LFBvaW50LFwiZGlyZWN0aW9uOnB4XCIpLFUucihpLFBvaW50LFwiZGlyZWN0aW9uOnB5XCIpLFUucihlLFBvaW50LFwiZGlyZWN0aW9uOnF4XCIpLFUucihzLFBvaW50LFwiZGlyZWN0aW9uOnF5XCIpKTtjb25zdCBuPWUtdCxvPXMtaTtpZihuPT09MClyZXR1cm4gbz4wPzkwOm88MD8yNzA6MDtpZihvPT09MClyZXR1cm4gbj4wPzA6MTgwO3tpZihpc05hTihuKXx8aXNOYU4obykpcmV0dXJuIDA7bGV0IHI9TWF0aC5hdGFuKE1hdGguYWJzKG8vbikpKjE4MC9NYXRoLlBJO3JldHVybiBuPDA/bzwwP3IrPTE4MDpyPTE4MC1yOm88MCYmKHI9MzYwLXIpLHJ9fWdldCB4KCl7cmV0dXJuIHRoaXMucHh9c2V0IHgodCl7RGVidWcmJihVLmkodCxcIm51bWJlclwiLFBvaW50LFwieFwiKSx0aGlzLl8odCkpLHRoaXMucHg9dH1nZXQgeSgpe3JldHVybiB0aGlzLnB5fXNldCB5KHQpe0RlYnVnJiYoVS5pKHQsXCJudW1iZXJcIixQb2ludCxcInlcIiksdGhpcy5fKHQpKSx0aGlzLnB5PXR9aXNSZWFsKCl7cmV0dXJuIGlzRmluaXRlKHRoaXMueCkmJmlzRmluaXRlKHRoaXMueSl9c3RhdGljIE5vPW5ldyBQb2ludCgwLDApLml0KCk7c3RhdGljIHhDPW5ldyBQb2ludCgtMS8wLC0xLzApLml0KCk7c3RhdGljIGJDPW5ldyBQb2ludCgxLzAsMS8wKS5pdCgpO3N0YXRpYyBrQz1uZXcgUG9pbnQoNiw2KS5pdCgpO3N0YXRpYyBIaz1uZXcgUG9pbnQoTmFOLE5hTikuaXQoKTtzdGF0aWMgcWs9W107c3RhdGljIGEoKXtjb25zdCB0PVBvaW50LnFrLnBvcCgpO3JldHVybiB0PT09dm9pZCAwP25ldyBQb2ludDp0fXN0YXRpYyBLKHQsaSl7Y29uc3QgZT1Qb2ludC5xay5wb3AoKTtyZXR1cm4gZT09PXZvaWQgMD9uZXcgUG9pbnQodCxpKTooZS54PXQsZS55PWksZSl9c3RhdGljIG8odCl7UG9pbnQucWsucHVzaCh0KX19Y2xhc3MgU2l6ZXtzdztzaDtmO2NvbnN0cnVjdG9yKHQsaSl7dD09PXZvaWQgMD8odGhpcy5zdz0wLHRoaXMuc2g9MCk6dHlwZW9mIHQ9PVwibnVtYmVyXCImJih0Pj0wfHxpc05hTih0KSkmJnR5cGVvZiBpPT1cIm51bWJlclwiJiYoaT49MHx8aXNOYU4oaSkpPyh0aGlzLnN3PXQsdGhpcy5zaD1pKTpVLm4oXCJJbnZhbGlkIGFyZ3VtZW50cyB0byBTaXplIGNvbnN0cnVjdG9yOiBcIit0K1wiLCBcIitpKSx0aGlzLmY9ITF9Yyh0KXtyZXR1cm4gdGhpcy5zdz10LnN3LHRoaXMuc2g9dC5zaCx0aGlzfXModCxpKXtyZXR1cm4gdGhpcy5zdz10LHRoaXMuc2g9aSx0aGlzfXNldFRvKHQsaSl7cmV0dXJuIERlYnVnJiYoVS5pKHQsXCJudW1iZXJcIixTaXplLFwic2V0VG86d1wiKSxVLmkoaSxcIm51bWJlclwiLFNpemUsXCJzZXRUbzpoXCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsU2l6ZSxcInNldFRvOndcIiksaTwwJiZVLlUoaSxcIj49IDBcIixTaXplLFwic2V0VG86aFwiKSx0aGlzLl8oKSksdGhpcy5zdz10LHRoaXMuc2g9aSx0aGlzfXNldCh0KXtyZXR1cm4gRGVidWcmJihVLmUodCxTaXplLFNpemUsXCJzZXQ6c1wiKSx0aGlzLl8oKSksdGhpcy5zdz10LnN3LHRoaXMuc2g9dC5zaCx0aGlzfWNvcHkoKXtjb25zdCB0PW5ldyBTaXplO3JldHVybiB0LnN3PXRoaXMuc3csdC5zaD10aGlzLnNoLHR9aXQoKXtyZXR1cm4gdGhpcy5mPSEwLE9iamVjdC5mcmVlemUodGhpcyksdGhpc31OKCl7cmV0dXJuIHRoaXMuZnx8T2JqZWN0LmlzRnJvemVuKHRoaXMpP3RoaXM6dGhpcy5jb3B5KCkucCgpfXAoKXtyZXR1cm4gdGhpcy5mfHwodGhpcy5mPSEwKSx0aGlzfUF0KCl7cmV0dXJuIHRoaXMuZiYmKE9iamVjdC5pc0Zyb3plbih0aGlzKSYmVS5uKFwiY2Fubm90IHRoYXcgY29uc3RhbnQ6IFwiK3RoaXMpLHRoaXMuZj0hMSksdGhpc31fKHQpe2lmKERlYnVnJiZ0aGlzLmYpe2xldCBpPVwiVGhlIFNpemUgaXMgZnJvemVuLCBzbyBpdHMgcHJvcGVydGllcyBjYW5ub3QgYmUgc2V0OiBcIit0aGlzLnRvU3RyaW5nKCk7dCE9PXZvaWQgMCYmKGkrPVwiICB0byB2YWx1ZTogXCIrdCksVS5uKGkpfX1zdGF0aWMgcGFyc2UodCl7aWYodHlwZW9mIHQ9PVwic3RyaW5nXCIpe2NvbnN0IGk9dC5zcGxpdChcIiBcIik7bGV0IGU9MCxzPTA7Zm9yKDtpW2VdPT09XCJcIjspZSsrO2xldCBuPWlbZSsrXTtuJiYocz1wYXJzZUZsb2F0KG4pKTtsZXQgbz0wO2Zvcig7aVtlXT09PVwiXCI7KWUrKztyZXR1cm4gbj1pW2UrK10sbiYmKG89cGFyc2VGbG9hdChuKSksbmV3IFNpemUocyxvKX1lbHNlIHJldHVybiBuZXcgU2l6ZX1zdGF0aWMgc3RyaW5naWZ5KHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsU2l6ZSksdC53aWR0aC50b1N0cmluZygpK1wiIFwiK3QuaGVpZ2h0LnRvU3RyaW5nKCl9c3RhdGljIHN0cmluZ2lmeUZpeGVkKHQpe3JldHVybiBVLmkodCxcIm51bWJlclwiLFNpemUsXCJzdHJpbmdpZnlGaXhlZDpkaWdpdHNcIiksaT0+aS53aWR0aC50b0ZpeGVkKHQpK1wiIFwiK2kuaGVpZ2h0LnRvRml4ZWQodCl9dG9TdHJpbmcoKXtyZXR1cm5cIlNpemUoXCIrdGhpcy53aWR0aCtcIixcIit0aGlzLmhlaWdodCtcIilcIn1lcXVhbHModCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBTaXplP3RoaXMuc3c9PT10LndpZHRoJiZ0aGlzLnNoPT09dC5oZWlnaHQ6ITF9ZXF1YWxUbyh0LGkpe3JldHVybiB0aGlzLnN3PT09dCYmdGhpcy5zaD09PWl9ZXF1YWxzQXBwcm94KHQpe3JldHVybiBHZW8uZyh0aGlzLnN3LHQud2lkdGgpJiZHZW8uZyh0aGlzLnNoLHQuaGVpZ2h0KX1pbmZsYXRlKHQsaSl7RGVidWcmJihVLnIodCxTaXplLFwiaW5mbGF0ZTp3XCIpLFUucihpLFNpemUsXCJpbmZsYXRlOmhcIikpO2NvbnN0IGU9dGhpcy53aWR0aCt0O3RoaXMuc3c9ZT49MD9lOjA7Y29uc3Qgcz10aGlzLmhlaWdodCtpO3JldHVybiB0aGlzLnNoPXM+PTA/czowLHRoaXN9Z2V0IHdpZHRoKCl7cmV0dXJuIHRoaXMuc3d9c2V0IHdpZHRoKHQpe0RlYnVnJiYoVS5pKHQsXCJudW1iZXJcIixTaXplLFwid2lkdGhcIiksdGhpcy5fKHQpKSx0PDAmJlUuVSh0LFwiPj0gMFwiLFNpemUsXCJ3aWR0aFwiKSx0aGlzLnN3PXR9Z2V0IGhlaWdodCgpe3JldHVybiB0aGlzLnNofXNldCBoZWlnaHQodCl7RGVidWcmJihVLmkodCxcIm51bWJlclwiLFNpemUsXCJoZWlnaHRcIiksdGhpcy5fKHQpKSx0PDAmJlUuVSh0LFwiPj0gMFwiLFNpemUsXCJoZWlnaHRcIiksdGhpcy5zaD10fWlzUmVhbCgpe3JldHVybiBpc0Zpbml0ZSh0aGlzLndpZHRoKSYmaXNGaW5pdGUodGhpcy5oZWlnaHQpfXN0YXRpYyBHaD1uZXcgU2l6ZSgwLDApLml0KCk7c3RhdGljIFdrPW5ldyBTaXplKDEsMSkuaXQoKTtzdGF0aWMgU0M9bmV3IFNpemUoNiw2KS5pdCgpO3N0YXRpYyBmdT1uZXcgU2l6ZSg4LDgpLml0KCk7c3RhdGljIE1DPW5ldyBTaXplKDEwLDEwKS5pdCgpO3N0YXRpYyBNdz1uZXcgU2l6ZSgxLzAsMS8wKS5pdCgpO3N0YXRpYyBQdz1uZXcgU2l6ZShOYU4sTmFOKS5pdCgpO3N0YXRpYyBQQz1bXTtzdGF0aWMgYSgpe2NvbnN0IHQ9U2l6ZS5QQy5wb3AoKTtyZXR1cm4gdD09PXZvaWQgMD9uZXcgU2l6ZTp0fXN0YXRpYyBvKHQpe1NpemUuUEMucHVzaCh0KX19Y2xhc3MgUmVjdHtyeDtyeTtydztyaDtmO2NvbnN0cnVjdG9yKHQsaSxlLHMpe2lmKHQ9PT12b2lkIDApdGhpcy5yeD0wLHRoaXMucnk9MCx0aGlzLnJ3PTAsdGhpcy5yaD0wO2Vsc2UgaWYodHlwZW9mIHQ9PVwibnVtYmVyXCImJnR5cGVvZiBpPT1cIm51bWJlclwiJiZ0eXBlb2YgZT09XCJudW1iZXJcIiYmKGU+PTB8fGlzTmFOKGUpKSYmdHlwZW9mIHM9PVwibnVtYmVyXCImJihzPj0wfHxpc05hTihzKSkpdGhpcy5yeD10LHRoaXMucnk9aSx0aGlzLnJ3PWUsdGhpcy5yaD1zO2Vsc2UgaWYodCBpbnN0YW5jZW9mIFBvaW50KXtjb25zdCBuPXQueCxvPXQueTtpZihpIGluc3RhbmNlb2YgUG9pbnQpe2NvbnN0IHI9aS54LGw9aS55O3RoaXMucng9TWF0aC5taW4obixyKSx0aGlzLnJ5PU1hdGgubWluKG8sbCksdGhpcy5ydz1NYXRoLmFicyhuLXIpLHRoaXMucmg9TWF0aC5hYnMoby1sKX1lbHNlIGkgaW5zdGFuY2VvZiBTaXplPyh0aGlzLnJ4PW4sdGhpcy5yeT1vLHRoaXMucnc9aS53aWR0aCx0aGlzLnJoPWkuaGVpZ2h0KTpVLm4oXCJJbmNvcnJlY3Qgc2Vjb25kIGFyZ3VtZW50IHN1cHBsaWVkIHRvIFJlY3QgY29uc3RydWN0b3IgXCIraSl9ZWxzZSBVLm4oXCJJbnZhbGlkIGFyZ3VtZW50cyB0byBSZWN0IGNvbnN0cnVjdG9yOiBcIit0K1wiLCBcIitpK1wiLCBcIitlK1wiLCBcIitzKTt0aGlzLmY9ITF9Yyh0KXtyZXR1cm4gdGhpcy5yeD10LnJ4LHRoaXMucnk9dC5yeSx0aGlzLnJ3PXQucncsdGhpcy5yaD10LnJoLHRoaXN9cyh0LGksZSxzKXtyZXR1cm4gdGhpcy5yeD10LHRoaXMucnk9aSx0aGlzLnJ3PWUsdGhpcy5yaD1zLHRoaXN9Vm4odCxpKXtyZXR1cm4gdGhpcy5ydz10LHRoaXMucmg9aSx0aGlzfXNldFRvKHQsaSxlLHMpe3JldHVybiBEZWJ1ZyYmKFUuaSh0LFwibnVtYmVyXCIsUmVjdCxcInNldFRvOnhcIiksVS5pKGksXCJudW1iZXJcIixSZWN0LFwic2V0VG86eVwiKSxVLmkoZSxcIm51bWJlclwiLFJlY3QsXCJzZXRUbzp3XCIpLFUuaShzLFwibnVtYmVyXCIsUmVjdCxcInNldFRvOmhcIiksZTwwJiZVLlUoZSxcIj49IDBcIixSZWN0LFwic2V0VG86d1wiKSxzPDAmJlUuVShzLFwiPj0gMFwiLFJlY3QsXCJzZXRUbzpoXCIpLHRoaXMuXygpKSx0aGlzLnJ4PXQsdGhpcy5yeT1pLHRoaXMucnc9ZSx0aGlzLnJoPXMsdGhpc31zZXQodCl7cmV0dXJuIERlYnVnJiYoVS5lKHQsUmVjdCxSZWN0LFwic2V0OnJcIiksdGhpcy5fKCkpLHRoaXMucng9dC5yeCx0aGlzLnJ5PXQucnksdGhpcy5ydz10LnJ3LHRoaXMucmg9dC5yaCx0aGlzfXNldFBvaW50KHQpe3JldHVybiBEZWJ1ZyYmKFUuZSh0LFBvaW50LFJlY3QsXCJzZXRQb2ludDpwXCIpLHRoaXMuXygpKSx0aGlzLnJ4PXQueCx0aGlzLnJ5PXQueSx0aGlzfXNldFNpemUodCl7cmV0dXJuIERlYnVnJiYoVS5lKHQsU2l6ZSxSZWN0LFwic2V0U2l6ZTpzXCIpLHRoaXMuXygpKSx0aGlzLnJ3PXQud2lkdGgsdGhpcy5yaD10LmhlaWdodCx0aGlzfWNvcHkoKXtjb25zdCB0PW5ldyBSZWN0O3JldHVybiB0LnJ4PXRoaXMucngsdC5yeT10aGlzLnJ5LHQucnc9dGhpcy5ydyx0LnJoPXRoaXMucmgsdH1pdCgpe3JldHVybiB0aGlzLmY9ITAsT2JqZWN0LmZyZWV6ZSh0aGlzKSx0aGlzfU4oKXtyZXR1cm4gdGhpcy5mfHxPYmplY3QuaXNGcm96ZW4odGhpcyk/dGhpczp0aGlzLmNvcHkoKS5wKCl9cCgpe3JldHVybiB0aGlzLmZ8fCh0aGlzLmY9ITApLHRoaXN9QXQoKXtyZXR1cm4gdGhpcy5mJiYoT2JqZWN0LmlzRnJvemVuKHRoaXMpJiZVLm4oXCJjYW5ub3QgdGhhdyBjb25zdGFudDogXCIrdGhpcyksdGhpcy5mPSExKSx0aGlzfV8odCl7aWYoRGVidWcmJnRoaXMuZil7bGV0IGk9XCJUaGUgUmVjdCBpcyBmcm96ZW4sIHNvIGl0cyBwcm9wZXJ0aWVzIGNhbm5vdCBiZSBzZXQ6IFwiK3RoaXMudG9TdHJpbmcoKTt0IT09dm9pZCAwJiYoaSs9XCIgIHRvIHZhbHVlOiBcIit0KSxVLm4oaSl9fXN0YXRpYyBwYXJzZSh0KXtpZih0eXBlb2YgdD09XCJzdHJpbmdcIil7Y29uc3QgaT10LnNwbGl0KFwiIFwiKTtsZXQgZT0wLHM9MDtmb3IoO2lbZV09PT1cIlwiOyllKys7bGV0IG49aVtlKytdO24mJihzPXBhcnNlRmxvYXQobikpO2xldCBvPTA7Zm9yKDtpW2VdPT09XCJcIjspZSsrO249aVtlKytdLG4mJihvPXBhcnNlRmxvYXQobikpO2xldCByPTA7Zm9yKDtpW2VdPT09XCJcIjspZSsrO249aVtlKytdLG4mJihyPXBhcnNlRmxvYXQobikpO2xldCBsPTA7Zm9yKDtpW2VdPT09XCJcIjspZSsrO3JldHVybiBuPWlbZSsrXSxuJiYobD1wYXJzZUZsb2F0KG4pKSxuZXcgUmVjdChzLG8scixsKX1lbHNlIHJldHVybiBuZXcgUmVjdH1zdGF0aWMgc3RyaW5naWZ5KHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsUmVjdCksdC54LnRvU3RyaW5nKCkrXCIgXCIrdC55LnRvU3RyaW5nKCkrXCIgXCIrdC53aWR0aC50b1N0cmluZygpK1wiIFwiK3QuaGVpZ2h0LnRvU3RyaW5nKCl9c3RhdGljIHN0cmluZ2lmeUZpeGVkKHQpe3JldHVybiBVLmkodCxcIm51bWJlclwiLFJlY3QsXCJzdHJpbmdpZnlGaXhlZDpkaWdpdHNcIiksaT0+aS54LnRvRml4ZWQodCkrXCIgXCIraS55LnRvRml4ZWQodCkrXCIgXCIraS53aWR0aC50b0ZpeGVkKHQpK1wiIFwiK2kuaGVpZ2h0LnRvRml4ZWQodCl9dG9TdHJpbmcoKXtyZXR1cm5cIlJlY3QoXCIrdGhpcy54K1wiLFwiK3RoaXMueStcIixcIit0aGlzLndpZHRoK1wiLFwiK3RoaXMuaGVpZ2h0K1wiKVwifWVxdWFscyh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFJlY3Q/dGhpcy5yeD09PXQueCYmdGhpcy5yeT09PXQueSYmdGhpcy5ydz09PXQud2lkdGgmJnRoaXMucmg9PT10LmhlaWdodDohMX1lcXVhbFRvKHQsaSxlLHMpe3JldHVybiB0aGlzLnJ4PT09dCYmdGhpcy5yeT09PWkmJnRoaXMucnc9PT1lJiZ0aGlzLnJoPT09c31lcXVhbHNBcHByb3godCl7cmV0dXJuIEdlby5nKHRoaXMucngsdC54KSYmR2VvLmcodGhpcy5yeSx0LnkpJiZHZW8uZyh0aGlzLnJ3LHQud2lkdGgpJiZHZW8uZyh0aGlzLnJoLHQuaGVpZ2h0KX1lcXVhbHNBcHByb3hUbyh0LGksZSxzKXtyZXR1cm4gR2VvLmcodGhpcy5yeCx0KSYmR2VvLmcodGhpcy5yeSxpKSYmR2VvLmcodGhpcy5ydyxlKSYmR2VvLmcodGhpcy5yaCxzKX1lcXVhbHNBcHByb3hDbG9zZSh0KXtyZXR1cm4gR2VvLkcodGhpcy5yeCx0LngpJiZHZW8uRyh0aGlzLnJ5LHQueSkmJkdlby5HKHRoaXMucncsdC53aWR0aCkmJkdlby5HKHRoaXMucmgsdC5oZWlnaHQpfWNvbnRhaW5zUG9pbnQodCl7cmV0dXJuIERlYnVnJiZVLmUodCxQb2ludCxSZWN0LFwiY29udGFpbnNQb2ludDpwXCIpLHRoaXMucng8PXQueCYmdGhpcy5yeCt0aGlzLnJ3Pj10LngmJnRoaXMucnk8PXQueSYmdGhpcy5yeSt0aGlzLnJoPj10Lnl9Y29udGFpbnNSZWN0KHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsUmVjdCxSZWN0LFwiY29udGFpbnNSZWN0OnJcIiksdGhpcy5yeDw9dC54JiZ0LngrdC53aWR0aDw9dGhpcy5yeCt0aGlzLnJ3JiZ0aGlzLnJ5PD10LnkmJnQueSt0LmhlaWdodDw9dGhpcy5yeSt0aGlzLnJofWNvbnRhaW5zKHQsaSxlLHMpe3JldHVybiBEZWJ1Zz8oVS5yKHQsUmVjdCxcImNvbnRhaW5zOnhcIiksVS5yKGksUmVjdCxcImNvbnRhaW5zOnlcIiksZT09PXZvaWQgMD9lPTA6VS5yKGUsUmVjdCxcImNvbnRhaW5zOndcIikscz09PXZvaWQgMD9zPTA6VS5yKHMsUmVjdCxcImNvbnRhaW5zOmhcIiksKGU8MHx8czwwKSYmVS5uKFwiUmVjdC5jb250YWluczpXaWR0aCBhbmQgaGVpZ2h0IGNhbm5vdCBiZSBuZWdhdGl2ZVwiKSk6KGU9PT12b2lkIDAmJihlPTApLHM9PT12b2lkIDAmJihzPTApKSx0aGlzLnJ4PD10JiZ0K2U8PXRoaXMucngrdGhpcy5ydyYmdGhpcy5yeTw9aSYmaStzPD10aGlzLnJ5K3RoaXMucmh9b2Zmc2V0KHQsaSl7cmV0dXJuIERlYnVnJiYoVS5yKHQsUmVjdCxcIm9mZnNldDpkeFwiKSxVLnIoaSxSZWN0LFwib2Zmc2V0OmR5XCIpLHRoaXMuXygpKSx0aGlzLnJ4Kz10LHRoaXMucnkrPWksdGhpc31pbmZsYXRlKHQsaSl7cmV0dXJuIERlYnVnJiYoVS5yKHQsUmVjdCxcImluZmxhdGU6d1wiKSxVLnIoaSxSZWN0LFwiaW5mbGF0ZTpoXCIpKSx0aGlzLk53KGksdCxpLHQpfWFkZE1hcmdpbih0KXtyZXR1cm4gRGVidWcmJlUuZSh0LE1hcmdpbixSZWN0LFwiYWRkTWFyZ2luOm1cIiksdGhpcy5Odyh0LnRvcCx0LnJpZ2h0LHQuYm90dG9tLHQubGVmdCl9c3VidHJhY3RNYXJnaW4odCl7cmV0dXJuIERlYnVnJiZVLmUodCxNYXJnaW4sUmVjdCxcInN1YnRyYWN0TWFyZ2luOm1cIiksdGhpcy5OdygtdC50b3AsLXQucmlnaHQsLXQuYm90dG9tLC10LmxlZnQpfWdyb3codCxpLGUscyl7cmV0dXJuIERlYnVnJiYoVS5yKHQsUmVjdCxcImdyb3c6dFwiKSxVLnIoaSxSZWN0LFwiZ3JvdzpyXCIpLFUucihlLFJlY3QsXCJncm93OmJcIiksVS5yKHMsUmVjdCxcImdyb3c6bFwiKSksdGhpcy5Odyh0LGksZSxzKX1Odyh0LGksZSxzKXtEZWJ1ZyYmdGhpcy5fKCk7Y29uc3Qgbj10aGlzLnJ3O2krczw9LW4/KHRoaXMucngrPW4vMix0aGlzLnJ3PTApOih0aGlzLnJ4LT1zLHRoaXMucncrPWkrcyk7Y29uc3Qgbz10aGlzLnJoO3JldHVybiB0K2U8PS1vPyh0aGlzLnJ5Kz1vLzIsdGhpcy5yaD0wKToodGhpcy5yeS09dCx0aGlzLnJoKz10K2UpLHRoaXN9aW50ZXJzZWN0UmVjdCh0KXtyZXR1cm4gRGVidWcmJlUuZSh0LFJlY3QsUmVjdCxcImludGVyc2VjdFJlY3Q6clwiKSx0aGlzLk5DKHQueCx0LnksdC53aWR0aCx0LmhlaWdodCl9aW50ZXJzZWN0KHQsaSxlLHMpe3JldHVybiBEZWJ1ZyYmKFUucih0LFJlY3QsXCJpbnRlcnNlY3Q6eFwiKSxVLnIoaSxSZWN0LFwiaW50ZXJzZWN0OnlcIiksVS5yKGUsUmVjdCxcImludGVyc2VjdDp3XCIpLFUucihzLFJlY3QsXCJpbnRlcnNlY3Q6aFwiKSwoZTwwfHxzPDApJiZVLm4oXCJSZWN0LmludGVyc2VjdDpXaWR0aCBhbmQgaGVpZ2h0IGNhbm5vdCBiZSBuZWdhdGl2ZVwiKSksdGhpcy5OQyh0LGksZSxzKX1OQyh0LGksZSxzKXtEZWJ1ZyYmdGhpcy5fKCk7Y29uc3Qgbj1NYXRoLm1heCh0aGlzLnJ4LHQpLG89TWF0aC5tYXgodGhpcy5yeSxpKSxyPU1hdGgubWluKHRoaXMucngrdGhpcy5ydyx0K2UpLGw9TWF0aC5taW4odGhpcy5yeSt0aGlzLnJoLGkrcyk7cmV0dXJuIHRoaXMucng9bix0aGlzLnJ5PW8sdGhpcy5ydz1NYXRoLm1heCgwLHItbiksdGhpcy5yaD1NYXRoLm1heCgwLGwtbyksdGhpc31pbnRlcnNlY3RzUmVjdCh0KXtyZXR1cm4gRGVidWcmJlUuZSh0LFJlY3QsUmVjdCxcImludGVyc2VjdHNSZWN0OnJcIiksdGhpcy5pbnRlcnNlY3RzKHQueCx0LnksdC53aWR0aCx0LmhlaWdodCl9aW50ZXJzZWN0cyh0LGksZSxzKXtEZWJ1ZyYmKFUucih0LFJlY3QsXCJpbnRlcnNlY3RzOnhcIiksVS5yKGksUmVjdCxcImludGVyc2VjdHM6eVwiKSxVLnIodCxSZWN0LFwiaW50ZXJzZWN0czp3XCIpLFUucihpLFJlY3QsXCJpbnRlcnNlY3RzOmhcIiksKGU8MHx8czwwKSYmVS5uKFwiUmVjdC5pbnRlcnNlY3RzOldpZHRoIGFuZCBoZWlnaHQgY2Fubm90IGJlIG5lZ2F0aXZlXCIpKTtsZXQgbj10aGlzLnJ3O2NvbnN0IG89dGhpcy5yeDtpZihuIT09MS8wJiZlIT09MS8wJiYobis9byxlKz10LGlzTmFOKGUpfHxpc05hTihuKXx8bz5lfHx0Pm4pKXJldHVybiExO2xldCByPXRoaXMucmg7Y29uc3QgbD10aGlzLnJ5O3JldHVybiEociE9PTEvMCYmcyE9PTEvMCYmKHIrPWwscys9aSxpc05hTihzKXx8aXNOYU4ocil8fGw+c3x8aT5yKSl9aW50ZXJzZWN0c1JlY3RQbHVzKHQsaSl7bGV0IGU9dGhpcy5ydyxzPXQud2lkdGgraStpO2NvbnN0IG49dGhpcy5yeCxvPXQueC1pO2lmKGUrPW4scys9byxuPnN8fG8+ZSlyZXR1cm4hMTtsZXQgcj10aGlzLnJoLGw9dC5oZWlnaHQraStpO2NvbnN0IGg9dGhpcy5yeSxmPXQueS1pO3JldHVybiByKz1oLGwrPWYsIShoPmx8fGY+cil9dW5pb25Qb2ludCh0KXtyZXR1cm4gRGVidWcmJlUuZSh0LFBvaW50LFJlY3QsXCJ1bmlvblBvaW50OnBcIiksdGhpcy51bmlvbk5vQ2hlY2sodC54LHQueSwwLDApfXVuaW9uUmVjdCh0KXtyZXR1cm4gRGVidWcmJlUuZSh0LFJlY3QsUmVjdCxcInVuaW9uUmVjdDpyXCIpLHRoaXMudW5pb25Ob0NoZWNrKHQucngsdC5yeSx0LnJ3LHQucmgpfXVuaW9uKHQsaSxlLHMpe3JldHVybiBEZWJ1Zz8oVS5yKHQsUmVjdCxcInVuaW9uOnhcIiksVS5yKGksUmVjdCxcInVuaW9uOnlcIiksZT09PXZvaWQgMD9lPTA6VS5yKGUsUmVjdCxcInVuaW9uOndcIikscz09PXZvaWQgMD9zPTA6VS5yKHMsUmVjdCxcInVuaW9uOmhcIiksKGU8MHx8czwwKSYmVS5uKFwiUmVjdC51bmlvbjpXaWR0aCBhbmQgaGVpZ2h0IGNhbm5vdCBiZSBuZWdhdGl2ZVwiKSx0aGlzLl8oKSk6KGU9PT12b2lkIDAmJihlPTApLHM9PT12b2lkIDAmJihzPTApKSx0aGlzLnVuaW9uTm9DaGVjayh0LGksZSxzKX11bmlvbk5vQ2hlY2sodCxpLGUscyl7Y29uc3Qgbj1NYXRoLm1pbih0aGlzLnJ4LHQpLG89TWF0aC5taW4odGhpcy5yeSxpKSxyPU1hdGgubWF4KHRoaXMucngrdGhpcy5ydyx0K2UpLGw9TWF0aC5tYXgodGhpcy5yeSt0aGlzLnJoLGkrcyk7cmV0dXJuIHRoaXMucng9bix0aGlzLnJ5PW8sdGhpcy5ydz1yLW4sdGhpcy5yaD1sLW8sdGhpc31zZXRTcG90KHQsaSxlKXtyZXR1cm4gRGVidWcmJihVLnIodCxSZWN0LFwic2V0U3BvdDp4XCIpLFUucihpLFJlY3QsXCJzZXRTcG90OnlcIiksVS5lKGUsU3BvdCxSZWN0LFwic2V0U3BvdDpzcG90XCIpLHRoaXMuXygpKSx0aGlzLnJ4PXQtZS5vZmZzZXRYLWUueCp0aGlzLnJ3LHRoaXMucnk9aS1lLm9mZnNldFktZS55KnRoaXMucmgsdGhpc31zdGF0aWMgY29udGFpbnModCxpLGUscyxuLG8scixsKXtyZXR1cm4gRGVidWc/KFUucih0LFJlY3QsXCJjb250YWluczpyeFwiKSxVLnIoaSxSZWN0LFwiY29udGFpbnM6cnlcIiksVS5yKGUsUmVjdCxcImNvbnRhaW5zOnJ3XCIpLFUucihzLFJlY3QsXCJjb250YWluczpyaFwiKSxVLnIobixSZWN0LFwiY29udGFpbnM6eFwiKSxVLnIobyxSZWN0LFwiY29udGFpbnM6eVwiKSxyPT09dm9pZCAwP3I9MDpVLnIocixSZWN0LFwiY29udGFpbnM6d1wiKSxsPT09dm9pZCAwP2w9MDpVLnIobCxSZWN0LFwiY29udGFpbnM6aFwiKSwoZTwwfHxzPDB8fHI8MHx8bDwwKSYmVS5uKFwiUmVjdC5jb250YWluczpXaWR0aCBhbmQgaGVpZ2h0IGNhbm5vdCBiZSBuZWdhdGl2ZVwiKSk6KHI9PT12b2lkIDAmJihyPTApLGw9PT12b2lkIDAmJihsPTApKSx0PD1uJiZuK3I8PXQrZSYmaTw9byYmbytsPD1pK3N9c3RhdGljIGludGVyc2VjdHModCxpLGUscyxuLG8scixsKXtEZWJ1ZyYmKFUucih0LFJlY3QsXCJpbnRlcnNlY3RzOnJ4XCIpLFUucihpLFJlY3QsXCJpbnRlcnNlY3RzOnJ5XCIpLFUucihlLFJlY3QsXCJpbnRlcnNlY3RzOnJ3XCIpLFUucihzLFJlY3QsXCJpbnRlcnNlY3RzOnJoXCIpLFUucihuLFJlY3QsXCJpbnRlcnNlY3RzOnhcIiksVS5yKG8sUmVjdCxcImludGVyc2VjdHM6eVwiKSxVLnIocixSZWN0LFwiaW50ZXJzZWN0czp3XCIpLFUucihsLFJlY3QsXCJpbnRlcnNlY3RzOmhcIiksKGU8MHx8czwwfHxyPDB8fGw8MCkmJlUubihcIlJlY3QuaW50ZXJzZWN0czpXaWR0aCBhbmQgaGVpZ2h0IGNhbm5vdCBiZSBuZWdhdGl2ZVwiKSk7bGV0IGg9ZSxmPXI7Y29uc3QgYT10LGM9bjtpZihoKz1hLGYrPWMsYT5mfHxjPmgpcmV0dXJuITE7bGV0IHU9cyxkPWw7Y29uc3QgbT1pLGc9bztyZXR1cm4gdSs9bSxkKz1nLCEobT5kfHxnPnUpfXN0YXRpYyBpbnRlcnNlY3RzTGluZVNlZ21lbnQodCxpLGUscyxuLG8scixsKXtyZXR1cm4gRGVidWcmJihVLnIodCxSZWN0LFwiaW50ZXJzZWN0c0xpbmVTZWdtZW50OnhcIiksVS5yKGksUmVjdCxcImludGVyc2VjdHNMaW5lU2VnbWVudDp5XCIpLFUucihlLFJlY3QsXCJpbnRlcnNlY3RzTGluZVNlZ21lbnQ6d1wiKSxVLnIocyxSZWN0LFwiaW50ZXJzZWN0c0xpbmVTZWdtZW50OmhcIiksVS5yKG4sUmVjdCxcImludGVyc2VjdHNMaW5lU2VnbWVudDpwMXhcIiksVS5yKG8sUmVjdCxcImludGVyc2VjdHNMaW5lU2VnbWVudDpwMXlcIiksVS5yKHIsUmVjdCxcImludGVyc2VjdHNMaW5lU2VnbWVudDpwMnhcIiksVS5yKGwsUmVjdCxcImludGVyc2VjdHNMaW5lU2VnbWVudDpwMnlcIiksKGU8MHx8czwwKSYmVS5uKFwiUmVjdC5pbnRlcnNlY3RzTGluZVNlZ21lbnQ6IHdpZHRoIGFuZCBoZWlnaHQgY2Fubm90IGJlIG5lZ2F0aXZlXCIpKSxHZW8uQ0ModCxpLGUscyxuLG8scixsKX1nZXQgeCgpe3JldHVybiB0aGlzLnJ4fXNldCB4KHQpe0RlYnVnJiYoVS5pKHQsXCJudW1iZXJcIixSZWN0LFwieFwiKSx0aGlzLl8odCkpLHRoaXMucng9dH1nZXQgeSgpe3JldHVybiB0aGlzLnJ5fXNldCB5KHQpe0RlYnVnJiYoVS5pKHQsXCJudW1iZXJcIixSZWN0LFwieVwiKSx0aGlzLl8odCkpLHRoaXMucnk9dH1nZXQgd2lkdGgoKXtyZXR1cm4gdGhpcy5yd31zZXQgd2lkdGgodCl7RGVidWcmJihVLmkodCxcIm51bWJlclwiLFJlY3QsXCJ3aWR0aFwiKSx0aGlzLl8odCkpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsUmVjdCxcIndpZHRoXCIpLHRoaXMucnc9dH1nZXQgaGVpZ2h0KCl7cmV0dXJuIHRoaXMucmh9c2V0IGhlaWdodCh0KXtEZWJ1ZyYmKFUuaSh0LFwibnVtYmVyXCIsUmVjdCxcImhlaWdodFwiKSx0aGlzLl8odCkpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsUmVjdCxcImhlaWdodFwiKSx0aGlzLnJoPXR9Z2V0IGxlZnQoKXtyZXR1cm4gdGhpcy5yeH1zZXQgbGVmdCh0KXtEZWJ1ZyYmKFUuaSh0LFwibnVtYmVyXCIsUmVjdCxcImxlZnRcIiksdGhpcy5fKHQpKSx0aGlzLnJ4PXR9Z2V0IHRvcCgpe3JldHVybiB0aGlzLnJ5fXNldCB0b3AodCl7RGVidWcmJihVLmkodCxcIm51bWJlclwiLFJlY3QsXCJ0b3BcIiksdGhpcy5fKHQpKSx0aGlzLnJ5PXR9Z2V0IHJpZ2h0KCl7cmV0dXJuIHRoaXMucngrdGhpcy5yd31zZXQgcmlnaHQodCl7RGVidWcmJihVLnIodCxSZWN0LFwicmlnaHRcIiksdGhpcy5fKHQpKSx0aGlzLnJ4Kz10LSh0aGlzLnJ4K3RoaXMucncpfWdldCBib3R0b20oKXtyZXR1cm4gdGhpcy5yeSt0aGlzLnJofXNldCBib3R0b20odCl7RGVidWcmJihVLnIodCxSZWN0LFwidG9wXCIpLHRoaXMuXyh0KSksdGhpcy5yeSs9dC0odGhpcy5yeSt0aGlzLnJoKX1nZXQgcG9zaXRpb24oKXtyZXR1cm4gbmV3IFBvaW50KHRoaXMucngsdGhpcy5yeSl9c2V0IHBvc2l0aW9uKHQpe0RlYnVnJiYoVS5lKHQsUG9pbnQsUmVjdCxcInBvc2l0aW9uXCIpLHRoaXMuXyh0KSksdGhpcy5yeD10LngsdGhpcy5yeT10Lnl9Z2V0IHNpemUoKXtyZXR1cm4gbmV3IFNpemUodGhpcy5ydyx0aGlzLnJoKX1zZXQgc2l6ZSh0KXtEZWJ1ZyYmKFUuZSh0LFNpemUsUmVjdCxcInNpemVcIiksdGhpcy5fKHQpKSx0aGlzLnJ3PXQud2lkdGgsdGhpcy5yaD10LmhlaWdodH1nZXQgY2VudGVyKCl7cmV0dXJuIG5ldyBQb2ludCh0aGlzLnJ4K3RoaXMucncvMix0aGlzLnJ5K3RoaXMucmgvMil9c2V0IGNlbnRlcih0KXtEZWJ1ZyYmKFUuZSh0LFBvaW50LFJlY3QsXCJjZW50ZXJcIiksdGhpcy5fKHQpKSx0aGlzLnJ4PXQueC10aGlzLnJ3LzIsdGhpcy5yeT10LnktdGhpcy5yaC8yfWdldCBjZW50ZXJYKCl7cmV0dXJuIHRoaXMucngrdGhpcy5ydy8yfXNldCBjZW50ZXJYKHQpe0RlYnVnJiYoVS5yKHQsUmVjdCxcImNlbnRlclhcIiksdGhpcy5fKHQpKSx0aGlzLnJ4PXQtdGhpcy5ydy8yfWdldCBjZW50ZXJZKCl7cmV0dXJuIHRoaXMucnkrdGhpcy5yaC8yfXNldCBjZW50ZXJZKHQpe0RlYnVnJiYoVS5yKHQsUmVjdCxcImNlbnRlcllcIiksdGhpcy5fKHQpKSx0aGlzLnJ5PXQtdGhpcy5yaC8yfWlzUmVhbCgpe3JldHVybiBpc0Zpbml0ZSh0aGlzLngpJiZpc0Zpbml0ZSh0aGlzLnkpJiZpc0Zpbml0ZSh0aGlzLndpZHRoKSYmaXNGaW5pdGUodGhpcy5oZWlnaHQpfWlzRW1wdHkoKXtyZXR1cm4gdGhpcy53aWR0aD09PTAmJnRoaXMuaGVpZ2h0PT09MH1zdGF0aWMgemc9bmV3IFJlY3QoMCwwLDAsMCkuaXQoKTtzdGF0aWMgc0Y9bmV3IFJlY3QoTmFOLE5hTixOYU4sTmFOKS5pdCgpO3N0YXRpYyBqaz1bXTtzdGF0aWMgYSgpe2NvbnN0IHQ9UmVjdC5qay5wb3AoKTtyZXR1cm4gdD09PXZvaWQgMD9uZXcgUmVjdDp0fXN0YXRpYyBLKHQsaSxlLHMpe2NvbnN0IG49UmVjdC5qay5wb3AoKTtyZXR1cm4gbj09PXZvaWQgMD9uZXcgUmVjdCh0LGksZSxzKTpuLnModCxpLGUscyl9c3RhdGljIG8odCl7UmVjdC5qay5wdXNoKHQpfX1jbGFzcyBNYXJnaW57bXQ7bXI7bWI7bWw7Zjtjb25zdHJ1Y3Rvcih0LGksZSxzKXt0PT09dm9pZCAwPyh0aGlzLm10PTAsdGhpcy5tcj0wLHRoaXMubWI9MCx0aGlzLm1sPTApOmk9PT12b2lkIDA/KGk9dCxlPXQscz10LHRoaXMubXQ9dCx0aGlzLm1yPWksdGhpcy5tYj1lLHRoaXMubWw9cyk6ZT09PXZvaWQgMD8oZT10LHM9aSx0aGlzLm10PXQsdGhpcy5tcj1pLHRoaXMubWI9ZSx0aGlzLm1sPXMpOnMhPT12b2lkIDA/KHRoaXMubXQ9dCx0aGlzLm1yPWksdGhpcy5tYj1lLHRoaXMubWw9cyk6VS5uKFwiSW52YWxpZCBhcmd1bWVudHMgdG8gTWFyZ2luIGNvbnN0cnVjdG9yOiBcIit0K1wiLCBcIitpK1wiLCBcIitlK1wiLCBcIitzKSx0aGlzLmY9ITF9Yyh0KXtyZXR1cm4gdGhpcy5tdD10Lm10LHRoaXMubXI9dC5tcix0aGlzLm1iPXQubWIsdGhpcy5tbD10Lm1sLHRoaXN9c2V0VG8odCxpLGUscyl7cmV0dXJuIERlYnVnJiYoVS5pKHQsXCJudW1iZXJcIixNYXJnaW4sXCJzZXRUbzp0XCIpLFUuaShpLFwibnVtYmVyXCIsTWFyZ2luLFwic2V0VG86clwiKSxVLmkoZSxcIm51bWJlclwiLE1hcmdpbixcInNldFRvOmJcIiksVS5pKHMsXCJudW1iZXJcIixNYXJnaW4sXCJzZXRUbzpsXCIpLHRoaXMuXygpKSx0aGlzLm10PXQsdGhpcy5tcj1pLHRoaXMubWI9ZSx0aGlzLm1sPXMsdGhpc31zZXQodCl7cmV0dXJuIERlYnVnJiYoVS5lKHQsTWFyZ2luLE1hcmdpbixcImFzc2lnbjptXCIpLHRoaXMuXygpKSx0aGlzLm10PXQubXQsdGhpcy5tcj10Lm1yLHRoaXMubWI9dC5tYix0aGlzLm1sPXQubWwsdGhpc31jb3B5KCl7Y29uc3QgdD1uZXcgTWFyZ2luO3JldHVybiB0Lm10PXRoaXMubXQsdC5tcj10aGlzLm1yLHQubWI9dGhpcy5tYix0Lm1sPXRoaXMubWwsdH1pdCgpe3JldHVybiB0aGlzLmY9ITAsT2JqZWN0LmZyZWV6ZSh0aGlzKSx0aGlzfU4oKXtyZXR1cm4gdGhpcy5mfHxPYmplY3QuaXNGcm96ZW4odGhpcyk/dGhpczp0aGlzLmNvcHkoKS5wKCl9cCgpe3JldHVybiB0aGlzLmZ8fCh0aGlzLmY9ITApLHRoaXN9QXQoKXtyZXR1cm4gdGhpcy5mJiYoT2JqZWN0LmlzRnJvemVuKHRoaXMpJiZVLm4oXCJjYW5ub3QgdGhhdyBjb25zdGFudDogXCIrdGhpcyksdGhpcy5mPSExKSx0aGlzfV8odCl7aWYoRGVidWcmJnRoaXMuZil7bGV0IGk9XCJUaGUgTWFyZ2luIGlzIGZyb3plbiwgc28gaXRzIHByb3BlcnRpZXMgY2Fubm90IGJlIHNldDogXCIrdGhpcy50b1N0cmluZygpO3QhPT12b2lkIDAmJihpKz1cIiAgdG8gdmFsdWU6IFwiK3QpLFUubihpKX19c3RhdGljIHBhcnNlKHQpe2lmKHR5cGVvZiB0PT1cInN0cmluZ1wiKXtjb25zdCBpPXQuc3BsaXQoXCIgXCIpO2xldCBlPTAscz1OYU47Zm9yKDtpW2VdPT09XCJcIjspZSsrO2xldCBuPWlbZSsrXTtpZihuJiYocz1wYXJzZUZsb2F0KG4pKSxpc05hTihzKSlyZXR1cm4gbmV3IE1hcmdpbjtsZXQgbz1OYU47Zm9yKDtpW2VdPT09XCJcIjspZSsrO2lmKG49aVtlKytdLG4mJihvPXBhcnNlRmxvYXQobikpLGlzTmFOKG8pKXJldHVybiBuZXcgTWFyZ2luKHMpO2xldCByPU5hTjtmb3IoO2lbZV09PT1cIlwiOyllKys7aWYobj1pW2UrK10sbiYmKHI9cGFyc2VGbG9hdChuKSksaXNOYU4ocikpcmV0dXJuIG5ldyBNYXJnaW4ocyxvKTtsZXQgbD1OYU47Zm9yKDtpW2VdPT09XCJcIjspZSsrO3JldHVybiBuPWlbZSsrXSxuJiYobD1wYXJzZUZsb2F0KG4pKSxpc05hTihsKT9uZXcgTWFyZ2luKHMsbyk6bmV3IE1hcmdpbihzLG8scixsKX1lbHNlIHJldHVybiBuZXcgTWFyZ2lufXN0YXRpYyBzdHJpbmdpZnkodCl7cmV0dXJuIERlYnVnJiZVLmUodCxNYXJnaW4pLHQudG9wLnRvU3RyaW5nKCkrXCIgXCIrdC5yaWdodC50b1N0cmluZygpK1wiIFwiK3QuYm90dG9tLnRvU3RyaW5nKCkrXCIgXCIrdC5sZWZ0LnRvU3RyaW5nKCl9c3RhdGljIHN0cmluZ2lmeUZpeGVkKHQpe3JldHVybiBVLmkodCxcIm51bWJlclwiLE1hcmdpbixcInN0cmluZ2lmeUZpeGVkOmRpZ2l0c1wiKSxpPT5pLnRvcC50b0ZpeGVkKHQpK1wiIFwiK2kucmlnaHQudG9GaXhlZCh0KStcIiBcIitpLmJvdHRvbS50b0ZpeGVkKHQpK1wiIFwiK2kubGVmdC50b0ZpeGVkKHQpfXRvU3RyaW5nKCl7cmV0dXJuXCJNYXJnaW4oXCIrdGhpcy50b3ArXCIsXCIrdGhpcy5yaWdodCtcIixcIit0aGlzLmJvdHRvbStcIixcIit0aGlzLmxlZnQrXCIpXCJ9ZXF1YWxzKHQpe3JldHVybiB0IGluc3RhbmNlb2YgTWFyZ2luP3RoaXMubXQ9PT10LnRvcCYmdGhpcy5tcj09PXQucmlnaHQmJnRoaXMubWI9PT10LmJvdHRvbSYmdGhpcy5tbD09PXQubGVmdDohMX1lcXVhbFRvKHQsaSxlLHMpe3JldHVybiB0aGlzLm10PT09dCYmdGhpcy5tcj09PWkmJnRoaXMubWI9PT1lJiZ0aGlzLm1sPT09c31lcXVhbHNBcHByb3godCl7cmV0dXJuIEdlby5nKHRoaXMubXQsdC50b3ApJiZHZW8uZyh0aGlzLm1yLHQucmlnaHQpJiZHZW8uZyh0aGlzLm1iLHQuYm90dG9tKSYmR2VvLmcodGhpcy5tbCx0LmxlZnQpfWdldCB0b3AoKXtyZXR1cm4gdGhpcy5tdH1zZXQgdG9wKHQpe0RlYnVnJiYoVS5yKHQsTWFyZ2luLFwidG9wXCIpLHRoaXMuXyh0KSksdGhpcy5tdD10fWdldCByaWdodCgpe3JldHVybiB0aGlzLm1yfXNldCByaWdodCh0KXtEZWJ1ZyYmKFUucih0LE1hcmdpbixcInJpZ2h0XCIpLHRoaXMuXyh0KSksdGhpcy5tcj10fWdldCBib3R0b20oKXtyZXR1cm4gdGhpcy5tYn1zZXQgYm90dG9tKHQpe0RlYnVnJiYoVS5yKHQsTWFyZ2luLFwiYm90dG9tXCIpLHRoaXMuXyh0KSksdGhpcy5tYj10fWdldCBsZWZ0KCl7cmV0dXJuIHRoaXMubWx9c2V0IGxlZnQodCl7RGVidWcmJihVLnIodCxNYXJnaW4sXCJsZWZ0XCIpLHRoaXMuXyh0KSksdGhpcy5tbD10fWlzUmVhbCgpe3JldHVybiBpc0Zpbml0ZSh0aGlzLnRvcCkmJmlzRmluaXRlKHRoaXMucmlnaHQpJiZpc0Zpbml0ZSh0aGlzLmJvdHRvbSkmJmlzRmluaXRlKHRoaXMubGVmdCl9c3RhdGljIFhnPW5ldyBNYXJnaW4oMCwwLDAsMCkuaXQoKTtzdGF0aWMgQUM9bmV3IE1hcmdpbigyLDIsMiwyKS5pdCgpO3N0YXRpYyBMQz1bXTtzdGF0aWMgYSgpe2NvbnN0IHQ9TWFyZ2luLkxDLnBvcCgpO3JldHVybiB0PT09dm9pZCAwP25ldyBNYXJnaW46dH1zdGF0aWMgbyh0KXtNYXJnaW4uTEMucHVzaCh0KX19Y2xhc3MgU3BvdHtzeDtzeTtveDtveTtmO2NvbnN0cnVjdG9yKHQsaSxlLHMpe3Q9PT12b2lkIDA/KHRoaXMuc3g9MCx0aGlzLnN5PTAsdGhpcy5veD0wLHRoaXMub3k9MCk6KGk9PT12b2lkIDAmJihpPTApLGU9PT12b2lkIDAmJihlPTApLHM9PT12b2lkIDAmJihzPTApLHRoaXMuc3g9dCx0aGlzLnN5PWksdGhpcy5veD1lLHRoaXMub3k9cyksdGhpcy5mPSExfWModCl7cmV0dXJuIHRoaXMuc3g9dC5zeCx0aGlzLnN5PXQuc3ksdGhpcy5veD10Lm94LHRoaXMub3k9dC5veSx0aGlzfXNldFRvKHQsaSxlLHMpe3JldHVybiBEZWJ1ZyYmKHRoaXMuQ3codCxcInNldFRvOnhcIiksdGhpcy5DdyhpLFwic2V0VG86eVwiKSx0aGlzLkF3KGUsXCJzZXRUbzpvZmZ4XCIpLHRoaXMuQXcocyxcInNldFRvOm9mZnlcIiksdGhpcy5fKCkpLHRoaXMuc3g9dCx0aGlzLnN5PWksdGhpcy5veD1lLHRoaXMub3k9cyx0aGlzfXNldCh0KXtyZXR1cm4gRGVidWcmJihVLmUodCxTcG90LFNwb3QsXCJzZXQ6c1wiKSx0aGlzLl8oKSksdGhpcy5zeD10LnN4LHRoaXMuc3k9dC5zeSx0aGlzLm94PXQub3gsdGhpcy5veT10Lm95LHRoaXN9Y29weSgpe2NvbnN0IHQ9bmV3IFNwb3Q7cmV0dXJuIHQuc3g9dGhpcy5zeCx0LnN5PXRoaXMuc3ksdC5veD10aGlzLm94LHQub3k9dGhpcy5veSx0fWl0KCl7cmV0dXJuIHRoaXMuZj0hMCxPYmplY3QuZnJlZXplKHRoaXMpLHRoaXN9Tigpe3JldHVybiB0aGlzLmZ8fE9iamVjdC5pc0Zyb3plbih0aGlzKT90aGlzOnRoaXMuY29weSgpLnAoKX1wKCl7cmV0dXJuIHRoaXMuZnx8KHRoaXMuZj0hMCksdGhpc31BdCgpe3JldHVybiB0aGlzLmYmJihPYmplY3QuaXNGcm96ZW4odGhpcykmJlUubihcImNhbm5vdCB0aGF3IGNvbnN0YW50OiBcIit0aGlzKSx0aGlzLmY9ITEpLHRoaXN9Xyh0KXtpZihEZWJ1ZyYmdGhpcy5mKXtsZXQgaT1cIlRoZSBTcG90IGlzIGZyb3plbiwgc28gaXRzIHByb3BlcnRpZXMgY2Fubm90IGJlIHNldDogXCIrdGhpcy50b1N0cmluZygpO3QhPT12b2lkIDAmJihpKz1cIiAgdG8gdmFsdWU6IFwiK3QpLFUubihpKX19WWUodCl7cmV0dXJuIHRoaXMuc3g9TmFOLHRoaXMuc3k9TmFOLHRoaXMub3g9dCx0aGlzfUN3KHQsaSl7KGlzTmFOKHQpfHx0PjF8fHQ8MCkmJlUuVSh0LFwiMCA8PSBcIitpK1wiIDw9IDFcIixTcG90LGkpfUF3KHQsaSl7KGlzTmFOKHQpfHx0PT09MS8wfHx0PT09LTEvMCkmJlUuVSh0LFwicmVhbCBudW1iZXIsIG5vdCBOYU4gb3IgSW5maW5pdHlcIixTcG90LGkpfXN0YXRpYyBwYXJzZSh0KXtpZih0eXBlb2YgdD09XCJzdHJpbmdcIil7aWYodD10LnRyaW0oKSx0PT09XCJOb25lXCIpcmV0dXJuIFNwb3QuTm9uZTtpZih0PT09XCJUb3BMZWZ0XCIpcmV0dXJuIFNwb3QuVG9wTGVmdDtpZih0PT09XCJUb3BcInx8dD09PVwiVG9wQ2VudGVyXCJ8fHQ9PT1cIk1pZGRsZVRvcFwiKXJldHVybiBTcG90LlRvcENlbnRlcjtpZih0PT09XCJUb3BSaWdodFwiKXJldHVybiBTcG90LlRvcFJpZ2h0O2lmKHQ9PT1cIkxlZnRcInx8dD09PVwiTGVmdENlbnRlclwifHx0PT09XCJNaWRkbGVMZWZ0XCIpcmV0dXJuIFNwb3QuTGVmdENlbnRlcjtpZih0PT09XCJDZW50ZXJcIilyZXR1cm4gU3BvdC5DZW50ZXI7aWYodD09PVwiUmlnaHRcInx8dD09PVwiUmlnaHRDZW50ZXJcInx8dD09PVwiTWlkZGxlUmlnaHRcIilyZXR1cm4gU3BvdC5SaWdodENlbnRlcjtpZih0PT09XCJCb3R0b21MZWZ0XCIpcmV0dXJuIFNwb3QuQm90dG9tTGVmdDtpZih0PT09XCJCb3R0b21cInx8dD09PVwiQm90dG9tQ2VudGVyXCJ8fHQ9PT1cIk1pZGRsZUJvdHRvbVwiKXJldHVybiBTcG90LkJvdHRvbUNlbnRlcjtpZih0PT09XCJCb3R0b21SaWdodFwiKXJldHVybiBTcG90LkJvdHRvbVJpZ2h0O2lmKHQ9PT1cIlRvcFNpZGVcIilyZXR1cm4gU3BvdC5Ub3BTaWRlO2lmKHQ9PT1cIkxlZnRTaWRlXCIpcmV0dXJuIFNwb3QuTGVmdFNpZGU7aWYodD09PVwiUmlnaHRTaWRlXCIpcmV0dXJuIFNwb3QuUmlnaHRTaWRlO2lmKHQ9PT1cIkJvdHRvbVNpZGVcIilyZXR1cm4gU3BvdC5Cb3R0b21TaWRlO2lmKHQ9PT1cIlRvcEJvdHRvbVNpZGVzXCIpcmV0dXJuIFNwb3QuVG9wQm90dG9tU2lkZXM7aWYodD09PVwiTGVmdFJpZ2h0U2lkZXNcIilyZXR1cm4gU3BvdC5MZWZ0UmlnaHRTaWRlcztpZih0PT09XCJUb3BMZWZ0U2lkZXNcIilyZXR1cm4gU3BvdC5Ub3BMZWZ0U2lkZXM7aWYodD09PVwiVG9wUmlnaHRTaWRlc1wiKXJldHVybiBTcG90LlRvcFJpZ2h0U2lkZXM7aWYodD09PVwiQm90dG9tTGVmdFNpZGVzXCIpcmV0dXJuIFNwb3QuQm90dG9tTGVmdFNpZGVzO2lmKHQ9PT1cIkJvdHRvbVJpZ2h0U2lkZXNcIilyZXR1cm4gU3BvdC5Cb3R0b21SaWdodFNpZGVzO2lmKHQ9PT1cIk5vdFRvcFNpZGVcIilyZXR1cm4gU3BvdC5Ob3RUb3BTaWRlO2lmKHQ9PT1cIk5vdExlZnRTaWRlXCIpcmV0dXJuIFNwb3QuTm90TGVmdFNpZGU7aWYodD09PVwiTm90UmlnaHRTaWRlXCIpcmV0dXJuIFNwb3QuTm90UmlnaHRTaWRlO2lmKHQ9PT1cIk5vdEJvdHRvbVNpZGVcIilyZXR1cm4gU3BvdC5Ob3RCb3R0b21TaWRlO2lmKHQ9PT1cIkFsbFNpZGVzXCIpcmV0dXJuIFNwb3QuQWxsU2lkZXM7aWYodD09PVwiRGVmYXVsdFwiKXJldHVybiBTcG90LkRlZmF1bHQ7Y29uc3QgaT10LnNwbGl0KFwiIFwiKTtsZXQgZT0wLHM9MDtmb3IoO2lbZV09PT1cIlwiOyllKys7bGV0IG49aVtlKytdO24hPT12b2lkIDAmJm4ubGVuZ3RoPjAmJihzPXBhcnNlRmxvYXQobikpO2xldCBvPTA7Zm9yKDtpW2VdPT09XCJcIjspZSsrO249aVtlKytdLG4hPT12b2lkIDAmJm4ubGVuZ3RoPjAmJihvPXBhcnNlRmxvYXQobikpO2xldCByPTA7Zm9yKDtpW2VdPT09XCJcIjspZSsrO249aVtlKytdLG4hPT12b2lkIDAmJm4ubGVuZ3RoPjAmJihyPXBhcnNlRmxvYXQobikpO2xldCBsPTA7Zm9yKDtpW2VdPT09XCJcIjspZSsrO3JldHVybiBuPWlbZSsrXSxuIT09dm9pZCAwJiZuLmxlbmd0aD4wJiYobD1wYXJzZUZsb2F0KG4pKSxuZXcgU3BvdChzLG8scixsKX1lbHNlIHJldHVybiBuZXcgU3BvdH1zdGF0aWMgc3RyaW5naWZ5KHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsU3BvdCksdC5pc1Nwb3QoKT90LngudG9TdHJpbmcoKStcIiBcIit0LnkudG9TdHJpbmcoKStcIiBcIit0Lm9mZnNldFgudG9TdHJpbmcoKStcIiBcIit0Lm9mZnNldFkudG9TdHJpbmcoKTp0LnRvU3RyaW5nKCl9c3RhdGljIHN0cmluZ2lmeUZpeGVkKHQpe3JldHVybiBVLmkodCxcIm51bWJlclwiLFNwb3QsXCJzdHJpbmdpZnlGaXhlZDpkaWdpdHNcIiksaT0+aS54LnRvRml4ZWQodCkrXCIgXCIraS55LnRvRml4ZWQodCkrXCIgXCIraS5vZmZzZXRYLnRvRml4ZWQodCkrXCIgXCIraS5vZmZzZXRZLnRvRml4ZWQodCl9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5pc1Nwb3QoKT90aGlzLm94PT09MCYmdGhpcy5veT09PTA/XCJTcG90KFwiK3RoaXMueCtcIixcIit0aGlzLnkrXCIpXCI6XCJTcG90KFwiK3RoaXMueCtcIixcIit0aGlzLnkrXCIsXCIrdGhpcy5vZmZzZXRYK1wiLFwiK3RoaXMub2Zmc2V0WStcIilcIjp0aGlzLmVxdWFscyhTcG90Lk5vbmUpP1wiTm9uZVwiOnRoaXMuZXF1YWxzKFNwb3QuVG9wTGVmdCk/XCJUb3BMZWZ0XCI6dGhpcy5lcXVhbHMoU3BvdC5Ub3BDZW50ZXIpP1wiVG9wXCI6dGhpcy5lcXVhbHMoU3BvdC5Ub3BSaWdodCk/XCJUb3BSaWdodFwiOnRoaXMuZXF1YWxzKFNwb3QuTGVmdENlbnRlcik/XCJMZWZ0XCI6dGhpcy5lcXVhbHMoU3BvdC5DZW50ZXIpP1wiQ2VudGVyXCI6dGhpcy5lcXVhbHMoU3BvdC5SaWdodENlbnRlcik/XCJSaWdodFwiOnRoaXMuZXF1YWxzKFNwb3QuQm90dG9tTGVmdCk/XCJCb3R0b21MZWZ0XCI6dGhpcy5lcXVhbHMoU3BvdC5Cb3R0b21DZW50ZXIpP1wiQm90dG9tXCI6dGhpcy5lcXVhbHMoU3BvdC5Cb3R0b21SaWdodCk/XCJCb3R0b21SaWdodFwiOnRoaXMuZXF1YWxzKFNwb3QuVG9wU2lkZSk/XCJUb3BTaWRlXCI6dGhpcy5lcXVhbHMoU3BvdC5MZWZ0U2lkZSk/XCJMZWZ0U2lkZVwiOnRoaXMuZXF1YWxzKFNwb3QuUmlnaHRTaWRlKT9cIlJpZ2h0U2lkZVwiOnRoaXMuZXF1YWxzKFNwb3QuQm90dG9tU2lkZSk/XCJCb3R0b21TaWRlXCI6dGhpcy5lcXVhbHMoU3BvdC5Ub3BCb3R0b21TaWRlcyk/XCJUb3BCb3R0b21TaWRlc1wiOnRoaXMuZXF1YWxzKFNwb3QuTGVmdFJpZ2h0U2lkZXMpP1wiTGVmdFJpZ2h0U2lkZXNcIjp0aGlzLmVxdWFscyhTcG90LlRvcExlZnRTaWRlcyk/XCJUb3BMZWZ0U2lkZXNcIjp0aGlzLmVxdWFscyhTcG90LlRvcFJpZ2h0U2lkZXMpP1wiVG9wUmlnaHRTaWRlc1wiOnRoaXMuZXF1YWxzKFNwb3QuQm90dG9tTGVmdFNpZGVzKT9cIkJvdHRvbUxlZnRTaWRlc1wiOnRoaXMuZXF1YWxzKFNwb3QuQm90dG9tUmlnaHRTaWRlcyk/XCJCb3R0b21SaWdodFNpZGVzXCI6dGhpcy5lcXVhbHMoU3BvdC5Ob3RUb3BTaWRlKT9cIk5vdFRvcFNpZGVcIjp0aGlzLmVxdWFscyhTcG90Lk5vdExlZnRTaWRlKT9cIk5vdExlZnRTaWRlXCI6dGhpcy5lcXVhbHMoU3BvdC5Ob3RSaWdodFNpZGUpP1wiTm90UmlnaHRTaWRlXCI6dGhpcy5lcXVhbHMoU3BvdC5Ob3RCb3R0b21TaWRlKT9cIk5vdEJvdHRvbVNpZGVcIjp0aGlzLmVxdWFscyhTcG90LkFsbFNpZGVzKT9cIkFsbFNpZGVzXCI6dGhpcy5lcXVhbHMoU3BvdC5EZWZhdWx0KT9cIkRlZmF1bHRcIjpcIk5vbmVcIn1lcXVhbHModCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBTcG90Pyh0aGlzLnN4PT09dC54fHxpc05hTih0aGlzLnN4KSYmaXNOYU4odC54KSkmJih0aGlzLnN5PT09dC55fHxpc05hTih0aGlzLnN5KSYmaXNOYU4odC55KSkmJnRoaXMub3g9PT10Lm9mZnNldFgmJnRoaXMub3k9PT10Lm9mZnNldFk6ITF9b3Bwb3NpdGUoKXtyZXR1cm4gbmV3IFNwb3QoLjUtKHRoaXMuc3gtLjUpLC41LSh0aGlzLnN5LS41KSwtdGhpcy5veCwtdGhpcy5veSl9aW5jbHVkZXNTaWRlKHQpe2lmKCF0aGlzLmlzU2lkZSgpKXJldHVybiExO2lmKCF0LmlzU2lkZSgpKWlmKHQuZXF1YWxzKFNwb3QuTGVmdCkpdD1TcG90LkxlZnRTaWRlO2Vsc2UgaWYodC5lcXVhbHMoU3BvdC5SaWdodCkpdD1TcG90LlJpZ2h0U2lkZTtlbHNlIGlmKHQuZXF1YWxzKFNwb3QuVG9wKSl0PVNwb3QuVG9wU2lkZTtlbHNlIGlmKHQuZXF1YWxzKFNwb3QuQm90dG9tKSl0PVNwb3QuQm90dG9tU2lkZTtlbHNlIHJldHVybiExO2NvbnN0IGk9dGhpcy5veSxlPXQub2Zmc2V0WTtyZXR1cm4oaSZlKT09PWV9Z2V0IHgoKXtyZXR1cm4gdGhpcy5zeH1zZXQgeCh0KXtEZWJ1ZyYmKHRoaXMuQ3codCxcInhcIiksdGhpcy5fKHQpKSx0aGlzLnN4PXR9Z2V0IHkoKXtyZXR1cm4gdGhpcy5zeX1zZXQgeSh0KXtEZWJ1ZyYmKHRoaXMuQ3codCxcInlcIiksdGhpcy5fKHQpKSx0aGlzLnN5PXR9Z2V0IG9mZnNldFgoKXtyZXR1cm4gdGhpcy5veH1zZXQgb2Zmc2V0WCh0KXtEZWJ1ZyYmKHRoaXMuQXcodCxcIm9mZnNldFhcIiksdGhpcy5fKHQpKSx0aGlzLm94PXR9Z2V0IG9mZnNldFkoKXtyZXR1cm4gdGhpcy5veX1zZXQgb2Zmc2V0WSh0KXtEZWJ1ZyYmKHRoaXMuQXcodCxcIm9mZnNldFlcIiksdGhpcy5fKHQpKSx0aGlzLm95PXR9aXNTcG90KCl7cmV0dXJuIWlzTmFOKHRoaXMueCkmJiFpc05hTih0aGlzLnkpfWlzTm9TcG90KCl7cmV0dXJuIGlzTmFOKHRoaXMueCl8fGlzTmFOKHRoaXMueSl9aXNTaWRlKCl7cmV0dXJuIGlzTmFOKHRoaXMueCkmJmlzTmFOKHRoaXMueSkmJnRoaXMub2Zmc2V0WD09PTEmJnRoaXMub2Zmc2V0WSE9PTB9aXNOb25lKCl7cmV0dXJuIGlzTmFOKHRoaXMueCkmJmlzTmFOKHRoaXMueSkmJnRoaXMub2Zmc2V0WD09PTAmJnRoaXMub2Zmc2V0WT09PTB9aXNEZWZhdWx0KCl7cmV0dXJuIGlzTmFOKHRoaXMueCkmJmlzTmFOKHRoaXMueSkmJnRoaXMub2Zmc2V0WD09PS0xJiZ0aGlzLm9mZnNldFk9PT0wfXN0YXRpYyBOb25lPW5ldyBTcG90KDAsMCwwLDApLlllKDApLml0KCk7c3RhdGljIERlZmF1bHQ9bmV3IFNwb3QoMCwwLC0xLDApLlllKC0xKS5pdCgpO3N0YXRpYyBUb3BMZWZ0PW5ldyBTcG90KDAsMCwwLDApLml0KCk7c3RhdGljIFRvcENlbnRlcj1uZXcgU3BvdCguNSwwLDAsMCkuaXQoKTtzdGF0aWMgVG9wUmlnaHQ9bmV3IFNwb3QoMSwwLDAsMCkuaXQoKTtzdGF0aWMgTGVmdENlbnRlcj1uZXcgU3BvdCgwLC41LDAsMCkuaXQoKTtzdGF0aWMgQ2VudGVyPW5ldyBTcG90KC41LC41LDAsMCkuaXQoKTtzdGF0aWMgUmlnaHRDZW50ZXI9bmV3IFNwb3QoMSwuNSwwLDApLml0KCk7c3RhdGljIEJvdHRvbUxlZnQ9bmV3IFNwb3QoMCwxLDAsMCkuaXQoKTtzdGF0aWMgQm90dG9tQ2VudGVyPW5ldyBTcG90KC41LDEsMCwwKS5pdCgpO3N0YXRpYyBCb3R0b21SaWdodD1uZXcgU3BvdCgxLDEsMCwwKS5pdCgpO3N0YXRpYyBNaWRkbGVUb3A9U3BvdC5Ub3BDZW50ZXI7c3RhdGljIE1pZGRsZUxlZnQ9U3BvdC5MZWZ0Q2VudGVyO3N0YXRpYyBNaWRkbGVSaWdodD1TcG90LlJpZ2h0Q2VudGVyO3N0YXRpYyBNaWRkbGVCb3R0b209U3BvdC5Cb3R0b21DZW50ZXI7c3RhdGljIFRvcD1TcG90LlRvcENlbnRlcjtzdGF0aWMgTGVmdD1TcG90LkxlZnRDZW50ZXI7c3RhdGljIFJpZ2h0PVNwb3QuUmlnaHRDZW50ZXI7c3RhdGljIEJvdHRvbT1TcG90LkJvdHRvbUNlbnRlcjtzdGF0aWMgVG9wU2lkZT1uZXcgU3BvdCgwLDAsMSwxKS5ZZSgxKS5pdCgpO3N0YXRpYyBMZWZ0U2lkZT1uZXcgU3BvdCgwLDAsMSwyKS5ZZSgxKS5pdCgpO3N0YXRpYyBSaWdodFNpZGU9bmV3IFNwb3QoMCwwLDEsNCkuWWUoMSkuaXQoKTtzdGF0aWMgQm90dG9tU2lkZT1uZXcgU3BvdCgwLDAsMSw4KS5ZZSgxKS5pdCgpO3N0YXRpYyBUb3BCb3R0b21TaWRlcz1uZXcgU3BvdCgwLDAsMSw5KS5ZZSgxKS5pdCgpO3N0YXRpYyBMZWZ0UmlnaHRTaWRlcz1uZXcgU3BvdCgwLDAsMSw2KS5ZZSgxKS5pdCgpO3N0YXRpYyBUb3BMZWZ0U2lkZXM9bmV3IFNwb3QoMCwwLDEsMykuWWUoMSkuaXQoKTtzdGF0aWMgVG9wUmlnaHRTaWRlcz1uZXcgU3BvdCgwLDAsMSw1KS5ZZSgxKS5pdCgpO3N0YXRpYyBCb3R0b21MZWZ0U2lkZXM9bmV3IFNwb3QoMCwwLDEsMTApLlllKDEpLml0KCk7c3RhdGljIEJvdHRvbVJpZ2h0U2lkZXM9bmV3IFNwb3QoMCwwLDEsMTIpLlllKDEpLml0KCk7c3RhdGljIE5vdFRvcFNpZGU9bmV3IFNwb3QoMCwwLDEsMTQpLlllKDEpLml0KCk7c3RhdGljIE5vdExlZnRTaWRlPW5ldyBTcG90KDAsMCwxLDEzKS5ZZSgxKS5pdCgpO3N0YXRpYyBOb3RSaWdodFNpZGU9bmV3IFNwb3QoMCwwLDEsMTEpLlllKDEpLml0KCk7c3RhdGljIE5vdEJvdHRvbVNpZGU9bmV3IFNwb3QoMCwwLDEsNykuWWUoMSkuaXQoKTtzdGF0aWMgQWxsU2lkZXM9bmV3IFNwb3QoMCwwLDEsMTUpLlllKDEpLml0KCk7c3RhdGljIHZrPW5ldyBTcG90KC4xNTYsLjE1NikuaXQoKTtzdGF0aWMgSms9bmV3IFNwb3QoLjg0NCwuODQ0KS5pdCgpO3N0YXRpYyBUQz1bXTtzdGF0aWMgYSgpe2NvbnN0IHQ9U3BvdC5UQy5wb3AoKTtyZXR1cm4gdD09PXZvaWQgMD9uZXcgU3BvdDp0fXN0YXRpYyBvKHQpe1Nwb3QuVEMucHVzaCh0KX19Y2xhc3MgVHJhbnNmb3Jte20xMTttMTI7bTIxO20yMjtkeDtkeTtjb25zdHJ1Y3Rvcigpe3RoaXMubTExPTEsdGhpcy5tMTI9MCx0aGlzLm0yMT0wLHRoaXMubTIyPTEsdGhpcy5keD0wLHRoaXMuZHk9MH1zZXQodCl7cmV0dXJuIHRoaXMubTExPXQubTExLHRoaXMubTEyPXQubTEyLHRoaXMubTIxPXQubTIxLHRoaXMubTIyPXQubTIyLHRoaXMuZHg9dC5keCx0aGlzLmR5PXQuZHksdGhpc31zZXRUbyh0LGksZSxzLG4sbyl7cmV0dXJuIHRoaXMubTExPXQsdGhpcy5tMTI9aSx0aGlzLm0yMT1lLHRoaXMubTIyPXMsdGhpcy5keD1uLHRoaXMuZHk9byx0aGlzfWNvcHkoKXtjb25zdCB0PW5ldyBUcmFuc2Zvcm07cmV0dXJuIHQubTExPXRoaXMubTExLHQubTEyPXRoaXMubTEyLHQubTIxPXRoaXMubTIxLHQubTIyPXRoaXMubTIyLHQuZHg9dGhpcy5keCx0LmR5PXRoaXMuZHksdH10b1N0cmluZygpe3JldHVyblwiVHJhbnNmb3JtKFwiK3RoaXMubTExK1wiLFwiK3RoaXMubTEyK1wiLFwiK3RoaXMubTIxK1wiLFwiK3RoaXMubTIyK1wiLFwiK3RoaXMuZHgrXCIsXCIrdGhpcy5keStcIilcIn1lcXVhbHModCl7cmV0dXJuIHRoaXMubTExPT09dC5tMTEmJnRoaXMubTEyPT09dC5tMTImJnRoaXMubTIxPT09dC5tMjEmJnRoaXMubTIyPT09dC5tMjImJnRoaXMuZHg9PT10LmR4JiZ0aGlzLmR5PT09dC5keX0kaygpe3JldHVybiB0aGlzLmR4PT09MCYmdGhpcy5keT09PTAmJnRoaXMubTExPT09MSYmdGhpcy5tMTI9PT0wJiZ0aGlzLm0yMT09PTAmJnRoaXMubTIyPT09MX1WaSgpe3JldHVybiB0aGlzLm0xMT0xLHRoaXMubTEyPTAsdGhpcy5tMjE9MCx0aGlzLm0yMj0xLHRoaXMuZHg9MCx0aGlzLmR5PTAsdGhpc311Zih0KXtjb25zdCBpPXRoaXMubTExKnQubTExK3RoaXMubTIxKnQubTEyLGU9dGhpcy5tMTIqdC5tMTErdGhpcy5tMjIqdC5tMTIscz10aGlzLm0xMSp0Lm0yMSt0aGlzLm0yMSp0Lm0yMixuPXRoaXMubTEyKnQubTIxK3RoaXMubTIyKnQubTIyO3JldHVybiB0aGlzLmR4PXRoaXMubTExKnQuZHgrdGhpcy5tMjEqdC5keSt0aGlzLmR4LHRoaXMuZHk9dGhpcy5tMTIqdC5keCt0aGlzLm0yMip0LmR5K3RoaXMuZHksdGhpcy5tMTE9aSx0aGlzLm0xMj1lLHRoaXMubTIxPXMsdGhpcy5tMjI9bix0aGlzfURDKHQpe2NvbnN0IGk9MS8odC5tMTEqdC5tMjItdC5tMTIqdC5tMjEpLGU9dC5tMjIqaSxzPS10Lm0xMippLG49LXQubTIxKmksbz10Lm0xMSppLHI9aSoodC5tMjEqdC5keS10Lm0yMip0LmR4KSxsPWkqKHQubTEyKnQuZHgtdC5tMTEqdC5keSksaD10aGlzLm0xMSplK3RoaXMubTIxKnMsZj10aGlzLm0xMiplK3RoaXMubTIyKnMsYT10aGlzLm0xMSpuK3RoaXMubTIxKm8sYz10aGlzLm0xMipuK3RoaXMubTIyKm87cmV0dXJuIHRoaXMuZHg9dGhpcy5tMTEqcit0aGlzLm0yMSpsK3RoaXMuZHgsdGhpcy5keT10aGlzLm0xMipyK3RoaXMubTIyKmwrdGhpcy5keSx0aGlzLm0xMT1oLHRoaXMubTEyPWYsdGhpcy5tMjE9YSx0aGlzLm0yMj1jLHRoaXN9THcoKXtjb25zdCB0PTEvKHRoaXMubTExKnRoaXMubTIyLXRoaXMubTEyKnRoaXMubTIxKSxpPXRoaXMubTIyKnQsZT0tdGhpcy5tMTIqdCxzPS10aGlzLm0yMSp0LG49dGhpcy5tMTEqdCxvPXQqKHRoaXMubTIxKnRoaXMuZHktdGhpcy5tMjIqdGhpcy5keCkscj10Kih0aGlzLm0xMip0aGlzLmR4LXRoaXMubTExKnRoaXMuZHkpO3JldHVybiB0aGlzLm0xMT1pLHRoaXMubTEyPWUsdGhpcy5tMjE9cyx0aGlzLm0yMj1uLHRoaXMuZHg9byx0aGlzLmR5PXIsdGhpc31tcyh0LGksZSl7aWYodD49MzYwP3QtPTM2MDp0PDAmJih0Kz0zNjApLHQ9PT0wKXJldHVybiB0aGlzO3RoaXMuQnMoaSxlKTtsZXQgcz0wLG49MDtpZih0PT09OTApcz0wLG49MTtlbHNlIGlmKHQ9PT0xODApcz0tMSxuPTA7ZWxzZSBpZih0PT09MjcwKXM9MCxuPS0xO2Vsc2V7Y29uc3QgZj10Kk1hdGguUEkvMTgwO3M9TWF0aC5jb3MoZiksbj1NYXRoLnNpbihmKX1jb25zdCBvPXRoaXMubTExKnMrdGhpcy5tMjEqbixyPXRoaXMubTEyKnMrdGhpcy5tMjIqbixsPXRoaXMubTExKi1uK3RoaXMubTIxKnMsaD10aGlzLm0xMiotbit0aGlzLm0yMipzO3JldHVybiB0aGlzLm0xMT1vLHRoaXMubTEyPXIsdGhpcy5tMjE9bCx0aGlzLm0yMj1oLHRoaXMuQnMoLWksLWUpLHRoaXN9QnModCxpKXtyZXR1cm4gdGhpcy5keCs9dGhpcy5tMTEqdCt0aGlzLm0yMSppLHRoaXMuZHkrPXRoaXMubTEyKnQrdGhpcy5tMjIqaSx0aGlzfW90KHQsaSl7cmV0dXJuIGk9PT12b2lkIDAmJihpPXQpLHRoaXMubTExKj10LHRoaXMubTEyKj10LHRoaXMubTIxKj1pLHRoaXMubTIyKj1pLHRoaXN9bkYoKXtpZih0aGlzLm0xMT09PTEmJnRoaXMubTEyPT09MClyZXR1cm4gMDtsZXQgdD1NYXRoLmF0YW4yKHRoaXMubTEyLHRoaXMubTExKSoxODAvTWF0aC5QSTtyZXR1cm4gdDwwJiYodCs9MzYwKSx0fWt0KHQpe2NvbnN0IGk9dC54LGU9dC55O3JldHVybiB0LnMoaSp0aGlzLm0xMStlKnRoaXMubTIxK3RoaXMuZHgsaSp0aGlzLm0xMitlKnRoaXMubTIyK3RoaXMuZHkpfWlzKHQpe2NvbnN0IGk9MS8odGhpcy5tMTEqdGhpcy5tMjItdGhpcy5tMTIqdGhpcy5tMjEpLGU9dGhpcy5tMjIqaSxzPS10aGlzLm0xMippLG49LXRoaXMubTIxKmksbz10aGlzLm0xMSppLHI9dC54LXRoaXMuZHgsbD10LnktdGhpcy5keTtyZXR1cm4gdC5zKHIqZStsKm4scipzK2wqbyl9VHcodCl7Y29uc3QgaT0xLyh0aGlzLm0xMSp0aGlzLm0yMi10aGlzLm0xMip0aGlzLm0yMSksZT10aGlzLm0yMippLHM9LXRoaXMubTEyKmksbj0tdGhpcy5tMjEqaSxvPXRoaXMubTExKmkscj1pKih0aGlzLm0yMSp0aGlzLmR5LXRoaXMubTIyKnRoaXMuZHgpLGw9aSoodGhpcy5tMTIqdGhpcy5keC10aGlzLm0xMSp0aGlzLmR5KSxoPXQueCoxLjI1LGY9dC55KjEuMjtyZXR1cm4gdC5zKGgqZStmKm4rcixoKnMrZipvK2wpfVlnKHQpe2NvbnN0IGk9dC54LGU9dC55LHM9aSt0LndpZHRoLG49ZSt0LmhlaWdodCxvPXRoaXMubTExLHI9dGhpcy5tMTIsbD10aGlzLm0yMSxoPXRoaXMubTIyLGY9dGhpcy5keCxhPXRoaXMuZHksYz1pKm8rZSpsK2YsdT1pKnIrZSpoK2EsZD1zKm8rZSpsK2YsbT1zKnIrZSpoK2EsZz1pKm8rbipsK2YscD1pKnIrbipoK2Esdz1zKm8rbipsK2YseD1zKnIrbipoK2E7bGV0IGs9YyxiPWMsUz11LE09dTtyZXR1cm4gaz1NYXRoLm1pbihrLGQpLGI9TWF0aC5tYXgoYixkKSxTPU1hdGgubWluKFMsbSksTT1NYXRoLm1heChNLG0pLGs9TWF0aC5taW4oayxnKSxiPU1hdGgubWF4KGIsZyksUz1NYXRoLm1pbihTLHApLE09TWF0aC5tYXgoTSxwKSxrPU1hdGgubWluKGssdyksYj1NYXRoLm1heChiLHcpLFM9TWF0aC5taW4oUyx4KSxNPU1hdGgubWF4KE0seCksdC5zKGssUyxiLWssTS1TKSx0fXN0YXRpYyBGQz1bXTtzdGF0aWMgYSgpe2NvbnN0IHQ9VHJhbnNmb3JtLkZDLnBvcCgpO3JldHVybiB0PT09dm9pZCAwP25ldyBUcmFuc2Zvcm06dH1zdGF0aWMgbyh0KXtUcmFuc2Zvcm0uRkMucHVzaCh0KX1zdGF0aWMgWms9XCI1NGE3MDJmM2U1MzkwOWM0NDc4MjRjNjcwNjYwM2ZhZjRjXCJ9Y29uc3QgR2VvPXtvRjpcIjdkYTcxY2EwYWQzODFlOTBcIix6bjo0KigoTWF0aC5zcXJ0KDIpLTEpLzMpLFJDOm51bGwsRHc6eT0+e2lmKHk8PTApcmV0dXJuIDA7bGV0IHQ9R2VvLlJDO2lmKHQ9PT1udWxsKXt0PVtdO2ZvcihsZXQgaT0wO2k8PTJlMztpKyspdFtpXT1NYXRoLnNxcnQoaSk7R2VvLlJDPXR9aWYoeTwxKXtjb25zdCBpPTEveTtyZXR1cm4gaTw9MmUzPzEvdFtpfDBdOk1hdGguc3FydCh5KX1lbHNlIHJldHVybiB5PD0yZTM/dFt5fDBdOk1hdGguc3FydCh5KX0sZzooeSx0KT0+e2NvbnN0IGk9eS10O3JldHVybiBpPC41JiZpPi0uNX0sRzooeSx0KT0+e2NvbnN0IGk9eS10O3JldHVybiBpPDVlLTgmJmk+LTVlLTh9LHppOih5LHQsaSxlLHMsbixvKT0+e3M8PTAmJihzPTFlLTYpO2xldCByPTAsbD0wLGg9MCxmPTA7aWYoeTxpPyhsPXkscj1pKToobD1pLHI9eSksdDxlPyhmPXQsaD1lKTooZj1lLGg9dCkseT09PWkpcmV0dXJuIGY8PW8mJm88PWgmJnktczw9biYmbjw9eStzO2lmKHQ9PT1lKXJldHVybiBsPD1uJiZuPD1yJiZ0LXM8PW8mJm88PXQrcztjb25zdCBhPXIrcyxjPWwtcztpZihjPD1uJiZuPD1hKXtjb25zdCB1PWgrcyxkPWYtcztpZihkPD1vJiZvPD11KWlmKGEtYz51LWQpaWYoeS1pPnN8fGkteT5zKXtjb25zdCBnPShlLXQpLyhpLXkpKihuLXkpK3Q7aWYoZy1zPD1vJiZvPD1nK3MpcmV0dXJuITB9ZWxzZSByZXR1cm4hMDtlbHNlIGlmKHQtZT5zfHxlLXQ+cyl7Y29uc3QgZz0oaS15KS8oZS10KSooby10KSt5O2lmKGctczw9biYmbjw9ZytzKXJldHVybiEwfWVsc2UgcmV0dXJuITB9cmV0dXJuITF9LEZ3Oih5LHQsaSxlLHMsbixvLHIsbCxoLGYsYSk9PntpZighR2VvLnppKHksdCxvLHIsYSxpLGUpfHwhR2VvLnppKHksdCxvLHIsYSxzLG4pKXtjb25zdCBjPSh5K2kpLzIsdT0odCtlKS8yLGQ9KGkrcykvMixtPShlK24pLzIsZz0ocytvKS8yLHA9KG4rcikvMix3PShjK2QpLzIseD0odSttKS8yLGs9KGQrZykvMixiPShtK3ApLzIsUz0odytrKS8yLE09KHgrYikvMjtyZXR1cm4gR2VvLkZ3KHksdCxjLHUsdyx4LFMsTSxsLGgsZixhKXx8R2VvLkZ3KFMsTSxrLGIsZyxwLG8scixsLGgsZixhKX1lbHNlIHJldHVybiBHZW8uemkoeSx0LG8scixhLGgsZil9LElDOih5LHQsaSxlLHMsbixvLHIsbCk9Pntjb25zdCBoPSh5K2kpLzIsZj0odCtlKS8yLGE9KGkrcykvMixjPShlK24pLzIsdT0ocytvKS8yLGQ9KG4rcikvMixtPShoK2EpLzIsZz0oZitjKS8yLHA9KGErdSkvMix3PShjK2QpLzI7cmV0dXJuIGwucygobStwKS8yLChnK3cpLzIpLGx9LHJGOih5LHQsaSxlLHMsbixvLHIpPT57Y29uc3QgbD0oeStpKS8yLGg9KHQrZSkvMixmPShpK3MpLzIsYT0oZStuKS8yLGM9KHMrbykvMix1PShuK3IpLzIsZD0obCtmKS8yLG09KGgrYSkvMixnPShmK2MpLzIscD0oYSt1KS8yO3JldHVybiBQb2ludC5kaXJlY3Rpb24oZCxtLGcscCl9LGN1Oih5LHQsaSxlLHMsbixvLHIsbCxoKT0+e2lmKCFHZW8uemkoeSx0LG8scixsLGksZSl8fCFHZW8uemkoeSx0LG8scixsLHMsbikpe2NvbnN0IGY9KHkraSkvMixhPSh0K2UpLzIsYz0oaStzKS8yLHU9KGUrbikvMixkPShzK28pLzIsbT0obityKS8yLGc9KGYrYykvMixwPShhK3UpLzIsdz0oYytkKS8yLHg9KHUrbSkvMixrPShnK3cpLzIsYj0ocCt4KS8yO0dlby5jdSh5LHQsZixhLGcscCxrLGIsbCxoKSxHZW8uY3UoayxiLHcseCxkLG0sbyxyLGwsaCl9ZWxzZSBoLnVuaW9uTm9DaGVjayh5LHQsMCwwKSxoLnVuaW9uTm9DaGVjayhvLHIsMCwwKTtyZXR1cm4gaH0sWG46KHksdCxpLGUscyxuLG8scixsLGgpPT57aWYoIUdlby56aSh5LHQsbyxyLGwsaSxlKXx8IUdlby56aSh5LHQsbyxyLGwscyxuKSl7Y29uc3QgZj0oeStpKS8yLGE9KHQrZSkvMixjPShpK3MpLzIsdT0oZStuKS8yLGQ9KHMrbykvMixtPShuK3IpLzIsZz0oZitjKS8yLHA9KGErdSkvMix3PShjK2QpLzIseD0odSttKS8yLGs9KGcrdykvMixiPShwK3gpLzI7R2VvLlhuKHksdCxmLGEsZyxwLGssYixsLGgpLEdlby5YbihrLGIsdyx4LGQsbSxvLHIsbCxoKX1lbHNlIGgubGVuZ3RoPT09MCYmKGgucHVzaCh5KSxoLnB1c2godCkpLGgucHVzaChvKSxoLnB1c2gocik7cmV0dXJuIGh9LFFrOih5LHQsaSxlLHMsbixvLHIsbCxoKT0+e2lmKEdlby56aSh5LHQscyxuLGgsaSxlKSlyZXR1cm4gR2VvLnppKHksdCxzLG4saCxyLGwpO3tjb25zdCBmPSh5K2kpLzIsYT0odCtlKS8yLGM9KGkrcykvMix1PShlK24pLzIsZD0oZitjKS8yLG09KGErdSkvMjtyZXR1cm4gR2VvLlFrKHksdCxmLGEsZCxtLG8scixsLGgpfHxHZW8uUWsoZCxtLGMsdSxzLG4sbyxyLGwsaCl9fSxTRTooeSx0LGksZSxzLG4sbyk9Pntjb25zdCByPSh5K2kpLzIsbD0odCtlKS8yLGg9KGkrcykvMixmPShlK24pLzI7cmV0dXJuIG8ucygocitoKS8yLChsK2YpLzIpLG99LF9rOih5LHQsaSxlLHMsbixvLHIpPT57aWYoR2VvLnppKHksdCxzLG4sbyxpLGUpKXIudW5pb25Ob0NoZWNrKHksdCwwLDApLHIudW5pb25Ob0NoZWNrKHMsbiwwLDApO2Vsc2V7Y29uc3QgbD0oeStpKS8yLGg9KHQrZSkvMixmPShpK3MpLzIsYT0oZStuKS8yLGM9KGwrZikvMix1PShoK2EpLzI7R2VvLl9rKHksdCxsLGgsYyx1LG8sciksR2VvLl9rKGMsdSxmLGEscyxuLG8scil9cmV0dXJuIHJ9LEtnOih5LHQsaSxlLHMsbixvLHIpPT57aWYoR2VvLnppKHksdCxzLG4sbyxpLGUpKXIubGVuZ3RoPT09MCYmKHIucHVzaCh5KSxyLnB1c2godCkpLHIucHVzaChzKSxyLnB1c2gobik7ZWxzZXtjb25zdCBsPSh5K2kpLzIsaD0odCtlKS8yLGY9KGkrcykvMixhPShlK24pLzIsYz0obCtmKS8yLHU9KGgrYSkvMjtHZW8uS2coeSx0LGwsaCxjLHUsbyxyKSxHZW8uS2coYyx1LGYsYSxzLG4sbyxyKX1yZXR1cm4gcn0sVWc6KHksdCxpLGUscyxuLG8scixsLGgsZixhLGMsdSk9PntpZighR2VvLnppKHksdCxvLHIsYyxpLGUpfHwhR2VvLnppKHksdCxvLHIsYyxzLG4pKXtjb25zdCBkPSh5K2kpLzIsbT0odCtlKS8yLGc9KGkrcykvMixwPShlK24pLzIsdz0ocytvKS8yLHg9KG4rcikvMixrPShkK2cpLzIsYj0obStwKS8yLFM9KGcrdykvMixNPShwK3gpLzIsQT0oaytTKS8yLEM9KGIrTSkvMjtsZXQgUD0xLzAsTj0hMSxUPTAsTD0wO2lmKEdlby5VZyh5LHQsZCxtLGssYixBLEMsbCxoLGYsYSxjLHUpKXtjb25zdCBEPSh1LngtbCkqKjIrKHUueS1oKSoqMjtEPFAmJihQPUQsTj0hMCxUPXUueCxMPXUueSl9aWYoR2VvLlVnKEEsQyxTLE0sdyx4LG8scixsLGgsZixhLGMsdSkpe2NvbnN0IEQ9KHUueC1sKSoqMisodS55LWgpKioyO0Q8UCYmKFA9RCxOPSEwLFQ9dS54LEw9dS55KX1yZXR1cm4gTiYmKHUueD1ULHUueT1MKSxOfWVsc2V7aWYoIUdlby5hdSh5LHQsbyxyLGwsaCxmLGEpKXJldHVybiExO2NvbnN0IGQ9KHktbykqKGgtYSktKHQtcikqKGwtZik7aWYoZD09PTApcmV0dXJuITE7Y29uc3QgbT0oKHkqci10Km8pKihsLWYpLSh5LW8pKihsKmEtaCpmKSkvZCxnPSgoeSpyLXQqbykqKGgtYSktKHQtcikqKGwqYS1oKmYpKS9kO3JldHVybiB1LnMobSxnKSwhMH19LEdnOih5LHQsaSxlLHMsbixvLHIsbCxoLGYsYSxjKT0+e2xldCB1PTA7aWYoIUdlby56aSh5LHQsbyxyLGMsaSxlKXx8IUdlby56aSh5LHQsbyxyLGMscyxuKSl7Y29uc3QgZD0oeStpKS8yLG09KHQrZSkvMixnPShpK3MpLzIscD0oZStuKS8yLHc9KHMrbykvMix4PShuK3IpLzIsaz0oZCtnKS8yLGI9KG0rcCkvMixTPShnK3cpLzIsTT0ocCt4KS8yLEE9KGsrUykvMixDPShiK00pLzI7dSs9R2VvLkdnKHksdCxkLG0sayxiLEEsQyxsLGgsZixhLGMpLHUrPUdlby5HZyhBLEMsUyxNLHcseCxvLHIsbCxoLGYsYSxjKX1lbHNle2NvbnN0IGQ9KHktbykqKGgtYSktKHQtcikqKGwtZik7aWYoZD09PTApcmV0dXJuIHU7Y29uc3QgbT0oKHkqci10Km8pKihsLWYpLSh5LW8pKihsKmEtaCpmKSkvZCxnPSgoeSpyLXQqbykqKGgtYSktKHQtcikqKGwqYS1oKmYpKS9kO2lmKG0+PWYpcmV0dXJuIHU7bGV0IHA9MCx3PTA7aWYoKGw+Zj9sLWY6Zi1sKTwoaD5hP2gtYTphLWgpKXtpZih0PHI/KHA9dCx3PXIpOihwPXIsdz10KSxnPHB8fGc+dylyZXR1cm4gdX1lbHNlIGlmKHk8bz8ocD15LHc9byk6KHA9byx3PXkpLG08cHx8bT53KXJldHVybiB1O2Q+MD91Kys6ZDwwJiZ1LS19cmV0dXJuIHV9LHhsOih5LHQsaSxlLHMsbixvKT0+e2lmKEdlby5HKHksaSkpe2xldCByPTAsbD0wO3Q8ZT8ocj10LGw9ZSk6KHI9ZSxsPXQpO2NvbnN0IGg9bjtyZXR1cm4gaDxyPyhvLnMoeSxyKSwhMSk6aD5sPyhvLnMoeSxsKSwhMSk6KG8ucyh5LGgpLCEwKX1lbHNlIGlmKEdlby5HKHQsZSkpe2xldCByPTAsbD0wO3k8aT8ocj15LGw9aSk6KHI9aSxsPXkpO2NvbnN0IGg9cztyZXR1cm4gaDxyPyhvLnMocix0KSwhMSk6aD5sPyhvLnMobCx0KSwhMSk6KG8ucyhoLHQpLCEwKX1lbHNle2NvbnN0IHI9KGkteSkqKjIrKGUtdCkqKjIsbD0oKHktcykqKHktaSkrKHQtbikqKHQtZSkpL3I7aWYobDwtNWUtNilyZXR1cm4gby5zKHksdCksITE7aWYobD4xLjAwMDAwNSlyZXR1cm4gby5zKGksZSksITE7e2NvbnN0IGg9eStsKihpLXkpLGY9dCtsKihlLXQpO3JldHVybiBvLnMoaCxmKSwhMH19fSxZbjooeSx0LGksZSxzLG4sbyxyLGwpPT57aWYoR2VvLmcoeSxpKSYmR2VvLmcodCxlKSlyZXR1cm4gbC5zKHksdCksITE7aWYoR2VvLkcocyxvKSl7aWYoR2VvLkcoeSxpKSlyZXR1cm4gR2VvLnhsKHksdCxpLGUscyxuLGwpLCExO3tjb25zdCBmPShlLXQpLyhpLXkpKihzLXkpK3Q7cmV0dXJuIEdlby54bCh5LHQsaSxlLHMsZixsKX19ZWxzZXtjb25zdCBoPShyLW4pLyhvLXMpO2lmKEdlby5HKHksaSkpe2NvbnN0IGY9aCooeS1zKStuO2xldCBhPTAsYz0wO3JldHVybiB0PGU/KGE9dCxjPWUpOihhPWUsYz10KSxmPGE/KGwucyh5LGEpLCExKTpmPmM/KGwucyh5LGMpLCExKToobC5zKHksZiksITApfWVsc2V7Y29uc3QgZj0oZS10KS8oaS15KTtpZihHZW8uRyhoLGYpKXJldHVybiBHZW8ueGwoeSx0LGksZSxzLG4sbCksITE7e2NvbnN0IGE9KGYqeS1oKnMrbi10KS8oZi1oKTtpZihHZW8uRyhmLDApKXtsZXQgYz0wLHU9MDtyZXR1cm4geTxpPyhjPXksdT1pKTooYz1pLHU9eSksYTxjPyhsLnMoYyx0KSwhMSk6YT51PyhsLnModSx0KSwhMSk6KGwucyhhLHQpLCEwKX1lbHNle2NvbnN0IGM9ZiooYS15KSt0O3JldHVybiBHZW8ueGwoeSx0LGksZSxhLGMsbCl9fX19fSxNRTooeSx0LGksZSxzKT0+R2VvLlluKGkueCxpLnksZS54LGUueSx5LngseS55LHQueCx0LnkscyksUEU6KHksdCxpLGUscyxuLG8scixsLGgpPT57bGV0IGY9MS8wO2Z1bmN0aW9uIGEoUyxNKXtjb25zdCBBPShTLXkpKioyKyhNLXQpKioyO0E8ZiYmKGY9QSxsLnMoUyxNKSl9YShsLngsbC55KTtsZXQgYz0wLHU9MCxkPTAsbT0wO3M8bz8oYz1zLHU9byk6KGM9byx1PXMpLG48cj8oZD1zLG09byk6KGQ9byxtPXMpO2NvbnN0IGc9dS1jLHA9bS1kLHc9Zy8yK2gseD1wLzIraCxrPShzK28pLzIsYj0obityKS8yO2lmKHc9PT0wfHx4PT09MClyZXR1cm4gbDtpZihHZW8uZyh5LGkpKXtjb25zdCBTPTEtKGktaykqKjIvKHcqdyk7aWYoUzwwKXJldHVybiBsO2NvbnN0IE09TWF0aC5zcXJ0KFMpLEE9eCpNK2IsQz0teCpNK2I7YShpLEEpLGEoaSxDKX1lbHNle2NvbnN0IFM9KGUtdCkvKGkteSksTT0xLyh3KncpK1MqUy8oeCp4KSxBPTIqUyoodC1TKnkpLyh4KngpLTIqUypiLyh4KngpLTIqay8odyp3KSxDPTIqUyp5KmIvKHgqeCktMip0KmIvKHgqeCkrYipiLyh4KngpK2sqay8odyp3KS0xKyh0LVMqeSkqKHQtUyp5KS8oeCp4KSxQPUEqQS00Kk0qQztpZihQPDApcmV0dXJuIGw7Y29uc3QgTj1NYXRoLnNxcnQoUCksVD0oLUErTikvKDIqTSk7YShULFMqVC1TKnkrdCk7Y29uc3QgTD0oLUEtTikvKDIqTSk7YShMLFMqTC1TKnkrdCl9cmV0dXJuIGx9LGJsOih5LHQsaSxlLHMsbixvLHIsbCk9PntsZXQgaD0xZTIxLGY9eSxhPXQ7aWYoR2VvLlluKHksdCx5LGUscyxuLG8scixsKSl7Y29uc3QgYz0obC54LXMpKioyKyhsLnktbikqKjI7YzxoJiYoaD1jLGY9bC54LGE9bC55KX1pZihHZW8uWW4oaSx0LGksZSxzLG4sbyxyLGwpKXtjb25zdCBjPShsLngtcykqKjIrKGwueS1uKSoqMjtjPGgmJihoPWMsZj1sLngsYT1sLnkpfWlmKEdlby5Zbih5LHQsaSx0LHMsbixvLHIsbCkpe2NvbnN0IGM9KGwueC1zKSoqMisobC55LW4pKioyO2M8aCYmKGg9YyxmPWwueCxhPWwueSl9aWYoR2VvLlluKHksZSxpLGUscyxuLG8scixsKSl7Y29uc3QgYz0obC54LXMpKioyKyhsLnktbikqKjI7YzxoJiYoaD1jLGY9bC54LGE9bC55KX1yZXR1cm4gbC5zKGYsYSksaDwxZTIxfSxSdzooeSx0LGkpPT5HZW8uQ0MoeS54LHkueSx5LndpZHRoLHkuaGVpZ2h0LHQueCx0LnksaS54LGkueSksQ0M6KHksdCxpLGUscyxuLG8scik9Pntjb25zdCBsPXksaD15K2ksZj10LGE9dCtlO2lmKHM9PT1vKXtsZXQgYz0wLHU9MDtyZXR1cm4gbjxyPyhjPW4sdT1yKTooYz1yLHU9biksbDw9cyYmczw9aCYmYzw9YSYmdT49Zn1pZihuPT09cil7bGV0IGM9MCx1PTA7cmV0dXJuIHM8bz8oYz1zLHU9byk6KGM9byx1PXMpLGY8PW4mJm48PWEmJmM8PWgmJnU+PWx9cmV0dXJuISEoUmVjdC5jb250YWlucyh5LHQsaSxlLHMsbil8fFJlY3QuY29udGFpbnMoeSx0LGksZSxvLHIpfHxHZW8uYXUobCxmLGgsZixzLG4sbyxyKXx8R2VvLmF1KGgsZixoLGEscyxuLG8scil8fEdlby5hdShoLGEsbCxhLHMsbixvLHIpfHxHZW8uYXUobCxhLGwsZixzLG4sbyxyKSl9LGF1Oih5LHQsaSxlLHMsbixvLHIpPT55PT09aSYmdD09PWUmJnM9PT1vJiZuPT09cj95PT09cyYmdD09PW46R2VvLmh1KHksdCxpLGUscyxuKSpHZW8uaHUoeSx0LGksZSxvLHIpPD0wJiZHZW8uaHUocyxuLG8scix5LHQpKkdlby5odShzLG4sbyxyLGksZSk8PTAsaHU6KHksdCxpLGUscyxuKT0+e2NvbnN0IG89aS15LHI9ZS10O2xldCBsPXMteSxoPW4tdCxmPWwqci1oKm87cmV0dXJuIGY9PT0wJiYoZj1sKm8raCpyLGY+MCYmKGwtPW8saC09cixmPWwqbytoKnIsZjwwJiYoZj0wKSkpLGZ9LEhnOnk9Pih5PDAmJih5Kz0zNjApLHk+PTM2MCYmKHktPTM2MCkseSksT0M6KHksdCxpLGUscyxuKT0+e2NvbnN0IG89TWF0aC5QSTtufHwoZT1lKihvLzE4MCkscz1zKihvLzE4MCkpO2NvbnN0IHI9ZT5zPy0xOjEsbD0xZS01LGg9byoyLGY9W10sYT1vLzI7bGV0IGM9ZSx1PU1hdGgubWluKGgsTWF0aC5hYnMocy1lKSk7aWYodTxsKXtjb25zdCBkPWMrcipNYXRoLm1pbih1LGEpLG09eStpKk1hdGguY29zKGMpLGc9dCtpKk1hdGguc2luKGMpLHA9eStpKk1hdGguY29zKGQpLHc9dCtpKk1hdGguc2luKGQpLHg9KG0rcCkvMixrPShnK3cpLzI7cmV0dXJuIGYucHVzaChbbSxnLHgsayx4LGsscCx3XSksZn1mb3IoO3U+bDspe2NvbnN0IGQ9YytyKk1hdGgubWluKHUsYSk7Zi5wdXNoKEdlby5sRihpLGMsZCx5LHQpKSx1LT1NYXRoLmFicyhkLWMpLGM9ZH1yZXR1cm4gZn0sbEY6KHksdCxpLGUscyk9Pntjb25zdCBuPShpLXQpLzIsbz15Kk1hdGguY29zKG4pLHI9eSpNYXRoLnNpbihuKSxsPW8saD0tcixmPWwqbCtoKmgsYT1mK2wqbytoKnIsYz00LzMqKE1hdGguc3FydCgyKmYqYSktYSkvKGwqci1oKm8pLHU9bC1jKmgsZD1oK2MqbCxtPXUsZz0tZCxwPW4rdCx3PU1hdGguY29zKHApLHg9TWF0aC5zaW4ocCk7cmV0dXJuW2UreSpNYXRoLmNvcyh0KSxzK3kqTWF0aC5zaW4odCksZSt1KnctZCp4LHMrdSp4K2QqdyxlK20qdy1nKngscyttKngrZyp3LGUreSpNYXRoLmNvcyhpKSxzK3kqTWF0aC5zaW4oaSldfSxWZzooeSx0LGksZSxzLG4sbyk9Pntjb25zdCByPXMsbD1uLGg9TWF0aC5mbG9vcigoeS1pKS9yKSpyK2ksZj1NYXRoLmZsb29yKCh0LWUpL2wpKmwrZTtsZXQgYT1oO2grci15PHIvMiYmKGE9aCtyKTtsZXQgYz1mO3JldHVybiBmK2wtdDxsLzImJihjPWYrbCksby5zKGEsYyksb30sRUM6KHksdCk9PntsZXQgaT1NYXRoLm1heCh5LHQpLGU9TWF0aC5taW4oeSx0KSxzPTEsbj0xO2RvIHM9aSVlLG49ZSxpPWUsZT1zO3doaWxlKHM+MCk7cmV0dXJuIG59LGhGOih5LHQsaSxlKT0+e2NvbnN0IHM9aTwwLG49ZTwwO2xldCBvPTAscj0wLGw9MDt5PHQ/KHI9MSxsPTApOihyPTAsbD0xKTtsZXQgaD0wLGY9MCxhPTAsYz0wO3JldHVybiBvPXIsaD1vPT09MD95OnQsYT1vPT09MD9pOmUsKG89PT0wP3M6bikmJihhPS1hKSxvPWwsZj1vPT09MD95OnQsYz1vPT09MD9pOmUsKG89PT0wP3M6bikmJihjPS1jKSxHZW8uYUYoaCxmLGEsYywwLDApfSxhRjooeSx0LGksZSxzLG4pPT57bGV0IG89MDtpZihlPjApaWYoaT4wKXtjb25zdCByPXkqeSxsPXQqdCxoPXkqaSxmPXQqZTtsZXQgYT0tbCtmLGM9LWwrTWF0aC5zcXJ0KGgqaCtmKmYpLHU9YTtjb25zdCBkPTk5OTk5OTk5OTk7Zm9yKGxldCBwPTA7cDxkJiYodT0uNSooYStjKSwhKHU9PT1hfHx1PT09YykpOysrcCl7Y29uc3Qgdz1oLyh1K3IpLHg9Zi8odStsKSxrPXcqdyt4KngtMTtpZihrPjApYT11O2Vsc2UgaWYoazwwKWM9dTtlbHNlIGJyZWFrfXM9cippLyh1K3IpLG49bCplLyh1K2wpO2NvbnN0IG09cy1pLGc9bi1lO289TWF0aC5zcXJ0KG0qbStnKmcpfWVsc2Ugcz0wLG49dCxvPU1hdGguYWJzKGUtdCk7ZWxzZXtjb25zdCByPXkqeS10KnQsbD15Kmk7aWYobDxyKXtjb25zdCBoPWwvcixmPWgqaDtzPXkqaCxuPXQqTWF0aC5zcXJ0KE1hdGguYWJzKDEtZikpO2NvbnN0IGE9cy1pO289TWF0aC5zcXJ0KGEqYStuKm4pfWVsc2Ugcz15LG49MCxvPU1hdGguYWJzKGkteSl9cmV0dXJuIG99LHJuOm5ldyBQcm9wZXJ0eUNvbGxlY3Rpb24scWc6bmV3IFByb3BlcnR5Q29sbGVjdGlvbixjcjpuZXcgUHJvcGVydHlDb2xsZWN0aW9uLHVyOjAsV2c6MTAwfTtHZW8uemE9R2VvLm9GO3ZhciBHZW9tZXRyeVR5cGU9KHk9Pih5W3kuTGluZT0xXT1cIkxpbmVcIix5W3kuUmVjdGFuZ2xlPTJdPVwiUmVjdGFuZ2xlXCIseVt5LkVsbGlwc2U9M109XCJFbGxpcHNlXCIseVt5LlBhdGg9NF09XCJQYXRoXCIseSkpKEdlb21ldHJ5VHlwZXx8e30pLEdlb21ldHJ5U3RyZXRjaD0oeT0+KHlbeS5Ob25lPTBdPVwiTm9uZVwiLHlbeS5EZWZhdWx0PTFdPVwiRGVmYXVsdFwiLHlbeS5GaWxsPTJdPVwiRmlsbFwiLHlbeS5Vbmlmb3JtPTZdPVwiVW5pZm9ybVwiLHkpKShHZW9tZXRyeVN0cmV0Y2h8fHt9KTtjbGFzcyBHZW9tZXRyeXtsO2pnO3ZnO2RmO3V1O2R1O0tuO1VuO0duOyQ7TWU7UGU7ZWU7c2U7VnM7Z2Y7bWY7Y29uc3RydWN0b3IodCl7RGVidWcmJmFyZ3VtZW50cy5sZW5ndGg+MSYmVS5uKFwiR2VvbWV0cnkgY29uc3RydWN0b3IgY2FuIHRha2UgYXQgbW9zdCBvbmUgb3B0aW9uYWwgYXJndW1lbnQsIHRoZSBHZW9tZXRyeSB0eXBlLlwiKSxHU2V0LkppKHRoaXMpLHRoaXMubD0yLHQ9PT12b2lkIDA/dD00OkRlYnVnJiZVLmoodCxHZW9tZXRyeVR5cGUsXCJHZW9tZXRyeVR5cGVcIiksdGhpcy4kPXQsdGhpcy5NZT0wLHRoaXMuUGU9MCx0aGlzLmVlPTAsdGhpcy5zZT0wLHQ9PT00P3RoaXMuVnM9bmV3IExpc3Q6dGhpcy5Wcz1HZW9tZXRyeS5Jdyx0aGlzLmpnPXRoaXMuVnMuYXQsdGhpcy52Zz1uZXcgUmVjdCgpLnAoKSx0aGlzLmRmPW51bGwsdGhpcy51dT1udWxsLHRoaXMuZHU9TmFOLHRoaXMuS249U3BvdC5Ub3BMZWZ0LHRoaXMuVW49U3BvdC5Cb3R0b21SaWdodCx0aGlzLmdmPU5hTix0aGlzLm1mPU5hTix0aGlzLkduPTJ9Y29weSgpe2NvbnN0IHQ9bmV3IEdlb21ldHJ5O2lmKHQubD10aGlzLmwmLTIsdC4kPXRoaXMuJCx0Lk1lPXRoaXMuTWUsdC5QZT10aGlzLlBlLHQuZWU9dGhpcy5lZSx0LnNlPXRoaXMuc2UsdGhpcy4kPT09NCl7Y29uc3QgaT10aGlzLlZzLmgsZT10LlZzO2ZvcihsZXQgcz0wO3M8aS5sZW5ndGg7cysrKXtjb25zdCBuPWlbc107ZS5hZGQobi5jb3B5KCkpfXQuVnM9ZX1lbHNlIHQuVnM9dGhpcy5WcztyZXR1cm4gdC5qZz10aGlzLmpnLHQudmcuYyh0aGlzLnZnKSx0LmRmPXRoaXMuZGYsdC51dT10aGlzLnV1LHQuZHU9dGhpcy5kdSx0LktuPXRoaXMuS24uTigpLHQuVW49dGhpcy5Vbi5OKCksdC5nZj10aGlzLmdmLHQubWY9dGhpcy5tZix0LkduPXRoaXMuR24sdH1zdGF0aWMgTGluZT0xO3N0YXRpYyBSZWN0YW5nbGU9MjtzdGF0aWMgRWxsaXBzZT0zO3N0YXRpYyBQYXRoPTQ7c3RhdGljIEl3PW5ldyBMaXN0KCkucCgpO2dldCBmKCl7cmV0dXJuKHRoaXMubCYxKSE9PTB9c2V0IGYodCl7dD90aGlzLmx8PTE6dGhpcy5sJj0tMn1nZXQgTXQoKXtyZXR1cm4odGhpcy5sJjIpIT09MH1zZXQgTXQodCl7dD90aGlzLmx8PTI6dGhpcy5sJj0tM31wKCl7aWYodGhpcy5mPSEwLHRoaXMudHlwZSE9PTQpcmV0dXJuIHRoaXM7Y29uc3QgdD10aGlzLmZpZ3VyZXM7dC5wKCk7Zm9yKGNvbnN0IGkgb2YgdClpLnAoKTtyZXR1cm4gdGhpc31lcXVhbHNBcHByb3godCl7aWYoISh0IGluc3RhbmNlb2YgR2VvbWV0cnkpKXJldHVybiExO2lmKHRoaXMudHlwZSE9PXQudHlwZSlyZXR1cm4gdGhpcy50eXBlPT09MSYmdC50eXBlPT09ND90aGlzLkJDKHQpOnQudHlwZT09PTEmJnRoaXMudHlwZT09PTQ/dC5CQyh0aGlzKTohMTtpZih0aGlzLnR5cGU9PT00KXtjb25zdCBpPXRoaXMuZmlndXJlcy5oLGU9dC5maWd1cmVzLmgscz1pLmxlbmd0aDtpZihzIT09ZS5sZW5ndGgpcmV0dXJuITE7Zm9yKGxldCBuPTA7bjxzO24rKyl7Y29uc3Qgbz1pW25dLHI9ZVtuXTtpZighby5lcXVhbHNBcHByb3gocikpcmV0dXJuITF9cmV0dXJuITB9ZWxzZSByZXR1cm4gR2VvLmcodGhpcy5zdGFydFgsdC5zdGFydFgpJiZHZW8uZyh0aGlzLnN0YXJ0WSx0LnN0YXJ0WSkmJkdlby5nKHRoaXMuZW5kWCx0LmVuZFgpJiZHZW8uZyh0aGlzLmVuZFksdC5lbmRZKX1CQyh0KXtpZih0aGlzLnR5cGUhPT0xfHx0LnR5cGUhPT00KXJldHVybiExO2lmKHQuZmlndXJlcy5jb3VudD09PTEpe2NvbnN0IGk9dC5maWd1cmVzLmVsdCgwKTtpZihpLnNlZ21lbnRzLmNvdW50PT09MSYmR2VvLmcodGhpcy5zdGFydFgsaS5zdGFydFgpJiZHZW8uZyh0aGlzLnN0YXJ0WSxpLnN0YXJ0WSkpe2NvbnN0IGU9aS5zZWdtZW50cy5lbHQoMCk7aWYoZS50eXBlPT09MiYmR2VvLmcodGhpcy5lbmRYLGUuZW5kWCkmJkdlby5nKHRoaXMuZW5kWSxlLmVuZFkpKXJldHVybiEwfX1yZXR1cm4hMX1zdGF0aWMgc3RyaW5naWZ5KHQpe3JldHVybiB0LnRvU3RyaW5nKCl9c3RhdGljIHN0cmluZ2lmeUZpeGVkKHQpe3JldHVybiBVLmkodCxcIm51bWJlclwiLEdlb21ldHJ5LFwic3RyaW5naWZ5Rml4ZWQ6ZGlnaXRzXCIpLGk9PmkudG9TdHJpbmcodCl9YWkodCl7dCBpbiBHZW9tZXRyeVR5cGU/dGhpcy50eXBlPXQ6VS5ocih0aGlzLHQpfXRvU3RyaW5nKHQpe3Q9PT12b2lkIDAmJih0PS0xKTtjb25zdCBpPXM9PnM9PT0wP1wiMFwiOnMudG9GaXhlZCh0KTtsZXQgZTtzd2l0Y2godGhpcy50eXBlKXtjYXNlIDE6cmV0dXJuIHQ8MD9cIk1cIit0aGlzLnN0YXJ0WC50b1N0cmluZygpK1wiIFwiK3RoaXMuc3RhcnRZLnRvU3RyaW5nKCkrXCJMXCIrdGhpcy5lbmRYLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5lbmRZLnRvU3RyaW5nKCk6XCJNXCIraSh0aGlzLnN0YXJ0WCkrXCIgXCIraSh0aGlzLnN0YXJ0WSkrXCJMXCIraSh0aGlzLmVuZFgpK1wiIFwiK2kodGhpcy5lbmRZKTtjYXNlIDI6cmV0dXJuIGU9bmV3IFJlY3QodGhpcy5zdGFydFgsdGhpcy5zdGFydFksMCwwKSxlLnVuaW9uKHRoaXMuZW5kWCx0aGlzLmVuZFksMCwwKSx0PDA/XCJNXCIrZS54LnRvU3RyaW5nKCkrXCIgXCIrZS55LnRvU3RyaW5nKCkrXCJIXCIrZS5yaWdodC50b1N0cmluZygpK1wiVlwiK2UuYm90dG9tLnRvU3RyaW5nKCkrXCJIXCIrZS5sZWZ0LnRvU3RyaW5nKCkrXCJ6XCI6XCJNXCIraShlLngpK1wiIFwiK2koZS55KStcIkhcIitpKGUucmlnaHQpK1wiVlwiK2koZS5ib3R0b20pK1wiSFwiK2koZS5sZWZ0KStcInpcIjtjYXNlIDM6aWYoZT1uZXcgUmVjdCh0aGlzLnN0YXJ0WCx0aGlzLnN0YXJ0WSwwLDApLGUudW5pb24odGhpcy5lbmRYLHRoaXMuZW5kWSwwLDApLHQ8MCl7Y29uc3Qgcj1lLmxlZnQudG9TdHJpbmcoKStcIiBcIisoZS55K2UuaGVpZ2h0LzIpLnRvU3RyaW5nKCksbD1lLnJpZ2h0LnRvU3RyaW5nKCkrXCIgXCIrKGUueStlLmhlaWdodC8yKS50b1N0cmluZygpO3JldHVyblwiTVwiK3IrXCJBXCIrKGUud2lkdGgvMikudG9TdHJpbmcoKStcIiBcIisoZS5oZWlnaHQvMikudG9TdHJpbmcoKStcIiAwIDAgMSBcIitsK1wiQVwiKyhlLndpZHRoLzIpLnRvU3RyaW5nKCkrXCIgXCIrKGUuaGVpZ2h0LzIpLnRvU3RyaW5nKCkrXCIgMCAwIDEgXCIrcn1lbHNle2NvbnN0IHI9aShlLmxlZnQpK1wiIFwiK2koZS55K2UuaGVpZ2h0LzIpLGw9aShlLnJpZ2h0KStcIiBcIitpKGUueStlLmhlaWdodC8yKTtyZXR1cm5cIk1cIityK1wiQVwiK2koZS53aWR0aC8yKStcIiBcIitpKGUuaGVpZ2h0LzIpK1wiIDAgMCAxIFwiK2wrXCJBXCIraShlLndpZHRoLzIpK1wiIFwiK2koZS5oZWlnaHQvMikrXCIgMCAwIDEgXCIrcn1jYXNlIDQ6bGV0IHM9XCJcIjtjb25zdCBuPXRoaXMuZmlndXJlcy5oLG89bi5sZW5ndGg7Zm9yKGxldCByPTA7cjxvO3IrKyl7Y29uc3QgbD1uW3JdO3I+MCYmKHMrPVwiIHggXCIpLGwuaXNGaWxsZWQmJihzKz1cIkYgXCIpLHMrPWwudG9TdHJpbmcodCl9cmV0dXJuIHM7ZGVmYXVsdDpyZXR1cm4gR2VvbWV0cnlUeXBlW3RoaXMudHlwZV19fXN0YXRpYyBmaWxsUGF0aCh0KXt0eXBlb2YgdCE9XCJzdHJpbmdcIiYmVS5QaSh0LFwic3RyaW5nXCIsR2VvbWV0cnksXCJmaWxsUGF0aDpzdHJcIik7Y29uc3QgaT10LnNwbGl0KC9bWHhdLyksZT1pLmxlbmd0aDtsZXQgcz1cIlwiO2ZvcihsZXQgbj0wO248ZTtuKyspe2NvbnN0IG89aVtuXTtpZihvLm1hdGNoKC9bRmZdLykhPT1udWxsKXtuPT09MD9zKz1vOnMrPVwiWFwiKyhvWzBdPT09XCIgXCI/XCJcIjpcIiBcIikrbztjb250aW51ZX1zKz0obj09PTA/XCJcIjpcIlggXCIpK1wiRlwiKyhvWzBdPT09XCIgXCI/XCJcIjpcIiBcIikrb31yZXR1cm4gc31zdGF0aWMgSmc9XCJVdUJiTW1aekxsSGhWdkNjU3NRcVR0QWFGZlh4XCI7c3RhdGljIHBhcnNlKHQsaSl7aT09PXZvaWQgMCYmKGk9ITEpLHR5cGVvZiB0IT1cInN0cmluZ1wiJiZVLlBpKHQsXCJzdHJpbmdcIixHZW9tZXRyeSxcInBhcnNlOnN0clwiKTtjb25zdCBlPW5ldyBSZWdFeHAoXCIoW1wiK0dlb21ldHJ5LkpnK1wiXSkoW1wiK0dlb21ldHJ5LkpnK1wiXSlcIixcImdtXCIpLHM9bmV3IFJlZ0V4cChcIihbXCIrR2VvbWV0cnkuSmcrXCJdKShbXnNdKVwiLFwiZ21cIiksbj1uZXcgUmVnRXhwKFwiKFtec10pKFtcIitHZW9tZXRyeS5KZytcIl0pXCIsXCJnbVwiKTt0PXQucmVwbGFjZSgvLC9nbSxcIiBcIiksdD10LnJlcGxhY2UoZSxcIiQxICQyXCIpLHQ9dC5yZXBsYWNlKGUsXCIkMSAkMlwiKSx0PXQucmVwbGFjZShzLFwiJDEgJDJcIiksdD10LnJlcGxhY2UobixcIiQxICQyXCIpLHQ9dC5yZXBsYWNlKC8oWzAtOV0pKFsrXFwtXSkvZ20sXCIkMSAkMlwiKSx0PXQucmVwbGFjZSgvW1xcc1xcclxcdFxcbl0rL2dtLFwiIFwiKSx0PXQucmVwbGFjZSgvXlxccyt8XFxzKyQvZyxcIlwiKTtjb25zdCBvPXQuc3BsaXQoXCIgXCIpO2ZvcihsZXQgVD0wO1Q8by5sZW5ndGg7VCsrKXtjb25zdCBMPW9bVF07aWYoTC5tYXRjaCgvKFxcLlswLTldKikoXFwuKS9nbSkhPT1udWxsKXtjb25zdCBEPVUubHQoKTtsZXQgRj1cIlwiLEk9ITE7Zm9yKGxldCBSPTA7UjxMLmxlbmd0aDtSKyspe2NvbnN0IE89TFtSXTtPPT09XCIuXCImJiFJPyhJPSEwLEYrPU8pOk89PT1cIi5cIj8oRC5wdXNoKEYpLEY9XCIuXCIpOkYrPU99RC5wdXNoKEYpLG8uc3BsaWNlKFQsMSk7Zm9yKGxldCBSPTA7UjxELmxlbmd0aDtSKyspby5zcGxpY2UoVCtSLDAsRFtSXSk7VCs9RC5sZW5ndGgtMSxVLnR0KEQpfX1sZXQgcj0tMSxsPVwiXCIsaD1cIlwiO2NvbnN0IGY9bmV3IFBvaW50KDAsMCksYT1uZXcgUG9pbnQoMCwwKSxjPW5ldyBQb2ludCgwLDApO2xldCB1PSEwO2Z1bmN0aW9uIGQoKXtyZXR1cm4gcj49ay0xfHxvW3IrMV0ubWF0Y2goUCkhPT1udWxsPyEwOih1PSExLCExKX1mdW5jdGlvbiBtKCl7cmV0dXJuIHIrKyxvW3JdfWZ1bmN0aW9uIGcoVCl7bGV0IEw9cGFyc2VGbG9hdChtKCkpLEQ9cGFyc2VGbG9hdChtKCkpO2w9PT1sLnRvTG93ZXJDYXNlKCkmJihMPWMueCtMLEQ9Yy55K0QpLFQucyhMLEQpfWZ1bmN0aW9uIHAoKXtyZXR1cm4gZyhjKSxjfWZ1bmN0aW9uIHcoKXtyZXR1cm4gZyhhKSxhfWZ1bmN0aW9uIHgoKXtjb25zdCBUPWgudG9Mb3dlckNhc2UoKTtyZXR1cm4gVD09PVwiY1wifHxUPT09XCJzXCJ8fFQ9PT1cInFcInx8VD09PVwidFwiP25ldyBQb2ludCgyKmMueC1hLngsMipjLnktYS55KTpuZXcgUG9pbnQoYy54LGMueSl9Y29uc3Qgaz1vLmxlbmd0aCxiPUdlb1N0cmVhbS5WQyhudWxsKTtsZXQgUz0hMSxNPSExLEE9ITEsQz0hMDtjb25zdCBQPW5ldyBSZWdFeHAoXCJbXCIrR2VvbWV0cnkuSmcrXCJdXCIpO2Zvcig7IShyPj1rLTEpOyl7aWYoaD1sLGw9bSgpLGw9PT1cIlwiKWNvbnRpbnVlO3U9ITA7bGV0IFQ9ITE7c3dpdGNoKGwudG9VcHBlckNhc2UoKSl7Y2FzZVwiWFwiOkM9ITAsUz0hMSxNPSExO2JyZWFrO2Nhc2VcIk1cIjpjb25zdCBMPXAoKTtmb3IoYi5OaT09PW51bGx8fEM9PT0hMD8oYi5ndShMLngsTC55LFMsITEsIU0sQSksQz0hMSk6Yi5mRihMLngsTC55KSxmLmMoYyk7IWQoKTspe2NvbnN0IEQ9cCgpO2IuZHIoRC54LEQueSl9YnJlYWs7Y2FzZVwiTFwiOmZvcig7IWQoKTspe2NvbnN0IEQ9cCgpO2IuZHIoRC54LEQueSl9dSYmKFQ9ITApO2JyZWFrO2Nhc2VcIkhcIjpmb3IoOyFkKCk7KWMucygobD09PWwudG9Mb3dlckNhc2UoKT9jLng6MCkrcGFyc2VGbG9hdChtKCkpLGMueSksYi5kcihjLngsYy55KTticmVhaztjYXNlXCJWXCI6Zm9yKDshZCgpOyljLnMoYy54LChsPT09bC50b0xvd2VyQ2FzZSgpP2MueTowKStwYXJzZUZsb2F0KG0oKSkpLGIuZHIoYy54LGMueSk7dSYmKFQ9ITApO2JyZWFrO2Nhc2VcIkNcIjpmb3IoOyFkKCk7KXtjb25zdCBEPW5ldyBQb2ludDtnKEQpO2NvbnN0IEY9dygpLEk9cCgpO2IuZ3IoRC54LEQueSxGLngsRi55LEkueCxJLnkpfXUmJihUPSEwKTticmVhaztjYXNlXCJTXCI6Zm9yKDshZCgpOyl7Y29uc3QgRD14KCksRj13KCksST1wKCk7Yi5ncihELngsRC55LEYueCxGLnksSS54LEkueSl9dSYmKFQ9ITApO2JyZWFrO2Nhc2VcIlFcIjpmb3IoOyFkKCk7KXtjb25zdCBEPXcoKSxGPXAoKTtiLk93KEQueCxELnksRi54LEYueSl9dSYmKFQ9ITApO2JyZWFrO2Nhc2VcIlRcIjpmb3IoOyFkKCk7KXtjb25zdCBEPXgoKTthLmMoRCk7Y29uc3QgRj1wKCk7Yi5PdyhELngsRC55LEYueCxGLnkpLGEuYyhGKX11JiYoVD0hMCk7YnJlYWs7Y2FzZVwiQlwiOmZvcig7IWQoKTspe2NvbnN0IEQ9cGFyc2VGbG9hdChtKCkpLEY9cGFyc2VGbG9hdChtKCkpO2xldCBJPXBhcnNlRmxvYXQobSgpKSxSPXBhcnNlRmxvYXQobSgpKTtjb25zdCBPPXBhcnNlRmxvYXQobSgpKTtsZXQgWT1PLEs9ITE7ZCgpfHwoWT1wYXJzZUZsb2F0KG0oKSksZCgpfHwoSz1wYXJzZUZsb2F0KG0oKSkhPT0wKSksbD09PWwudG9Mb3dlckNhc2UoKSYmKEkrPWMueCxSKz1jLnkpLGIuY0YoRCxGLEksUixPLFksSyl9dSYmKFQ9ITApO2JyZWFrO2Nhc2VcIkFcIjpmb3IoOyFkKCk7KXtjb25zdCBEPU1hdGguYWJzKHBhcnNlRmxvYXQobSgpKSksRj1NYXRoLmFicyhwYXJzZUZsb2F0KG0oKSkpLEk9cGFyc2VGbG9hdChtKCkpO2xldCBSPSExLE89ITEsWT0wLEs9MDtjb25zdCBCPW0oKTtCLmxlbmd0aD09PTE/KFI9ISFwYXJzZUZsb2F0KEIpLE89ISFwYXJzZUZsb2F0KG0oKSksWT1wYXJzZUZsb2F0KG0oKSksSz1wYXJzZUZsb2F0KG0oKSkpOkIubGVuZ3RoPT09Mj8oUj0hIXBhcnNlRmxvYXQoQlswXSksTz0hIXBhcnNlRmxvYXQoQlsxXSksWT1wYXJzZUZsb2F0KG0oKSksSz1wYXJzZUZsb2F0KG0oKSkpOihSPSEhcGFyc2VGbG9hdChCWzBdKSxPPSEhcGFyc2VGbG9hdChCWzFdKSxZPXBhcnNlRmxvYXQoQi5zbGljZSgyKSksSz1wYXJzZUZsb2F0KG0oKSkpLGw9PT1sLnRvTG93ZXJDYXNlKCkmJihZPWMueCtZLEs9Yy55K0spLGMucyhZLEspLGIudUYoRCxGLEksUixPLFksSyl9dSYmKFQ9ITApO2JyZWFrO2Nhc2VcIlpcIjpiLmRGKCksYy5jKGYpO2JyZWFrO2Nhc2VcIkZcIjp7bGV0IEQ9XCJcIixGPTE7Zm9yKDtvW3IrRl07KXtpZihvW3IrRl09PT1cIjBcIil7QT0hMCxGKys7Y29udGludWV9aWYob1tyK0ZdLm1hdGNoKC9bVXVdLykhPT1udWxsKXtGKys7Y29udGludWV9aWYob1tyK0ZdLm1hdGNoKFApPT09bnVsbCl7RisrO2NvbnRpbnVlfUQ9b1tyK0ZdO2JyZWFrfUQubWF0Y2goL1tNbV0vKT9TPSEwOmIuZ0YoKTticmVha31jYXNlXCJVXCI6e2xldCBEPVwiXCIsRj0xO2Zvcig7b1tyK0ZdOyl7aWYob1tyK0ZdLm1hdGNoKC9bRmZdLykhPT1udWxsKXtGKys7Y29udGludWV9aWYob1tyK0ZdLm1hdGNoKFApPT09bnVsbCl7RisrO2NvbnRpbnVlfUQ9b1tyK0ZdO2JyZWFrfUQubWF0Y2goL1tNbV0vKT9NPSEwOmIubUYoITEpO2JyZWFrfWRlZmF1bHQ6aWYobD09PVwiMFwifHxsPT09XCIxXCIpYnJlYWs7VS5udChcIlVua25vd24gZ2VvbWV0cnkgY29tbWFuZDogXCIrbCk7YnJlYWt9aWYoVCl7VS5udChgQmFkIGdlb21ldHJ5IGNvbW1hbmQ6ICR7bH0sIG5leHQgdG9rZW46ICR7bSgpfSxcbnN0cmluZzogJHt0fWApO2JyZWFrfX1jb25zdCBOPWIuJGc7aWYoR2VvU3RyZWFtLnpDKGIpLGkpe2NvbnN0IFQ9Ti5maWd1cmVzLml0ZXJhdG9yO2Zvcig7VC5uZXh0KCk7KXtjb25zdCBMPVQudmFsdWU7TC5pc0ZpbGxlZD0hMH19cmV0dXJuIE59c3RhdGljIFhDKHQsaSl7Y29uc3QgZT10Lmxlbmd0aCxzPVBvaW50LmEoKTtmb3IobGV0IG49MDtuPGU7bisrKXtjb25zdCBvPXRbbl07cy54PW9bMF0scy55PW9bMV0saS5rdChzKSxvWzBdPXMueCxvWzFdPXMueSxzLng9b1syXSxzLnk9b1szXSxpLmt0KHMpLG9bMl09cy54LG9bM109cy55LHMueD1vWzRdLHMueT1vWzVdLGkua3Qocyksb1s0XT1zLngsb1s1XT1zLnkscy54PW9bNl0scy55PW9bN10saS5rdChzKSxvWzZdPXMueCxvWzddPXMueX1Qb2ludC5vKHMpfXRTKCl7aWYodGhpcy5NdClyZXR1cm4hMDtpZih0aGlzLnR5cGU9PT00KXtjb25zdCB0PXRoaXMuZmlndXJlcztpZih0aGlzLmpnIT09dC5hdClyZXR1cm4hMDtjb25zdCBpPXRoaXMuZmlndXJlcy5oLGU9aS5sZW5ndGg7Zm9yKGxldCBzPTA7czxlO3MrKylpZihpW3NdLnRTKCkpcmV0dXJuITB9cmV0dXJuITF9RXcoKXtpZih0aGlzLk10PSExLHRoaXMuZGY9bnVsbCx0aGlzLnV1PW51bGwsdGhpcy5kdT1OYU4sdGhpcy50eXBlPT09NCl7Y29uc3QgaT10aGlzLmZpZ3VyZXM7dGhpcy5qZz1pLmF0O2NvbnN0IGU9dGhpcy5maWd1cmVzLmgscz1lLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKWVbbl0ucEYoKX1jb25zdCB0PXRoaXMudmc7dC5BdCgpLGlzTmFOKHRoaXMuZ2YpfHxpc05hTih0aGlzLm1mKT90LnMoMCwwLDAsMCk6dC5zKDAsMCx0aGlzLmdmLHRoaXMubWYpLHRoaXMuWUModCwhMSksdC51bmlvbk5vQ2hlY2soMCwwLDAsMCksdC5wKCl9Y29tcHV0ZUJvdW5kc1dpdGhvdXRPcmlnaW4oKXtjb25zdCB0PW5ldyBSZWN0O3JldHVybiB0aGlzLllDKHQsITApLHR9WUModCxpKXtzd2l0Y2godGhpcy50eXBlKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzppP3Qucyh0aGlzLk1lLHRoaXMuUGUsMCwwKTp0LnVuaW9uTm9DaGVjayh0aGlzLk1lLHRoaXMuUGUsMCwwKSx0LnVuaW9uTm9DaGVjayh0aGlzLmVlLHRoaXMuc2UsMCwwKTticmVhaztjYXNlIDQ6Y29uc3QgZT10aGlzLmZpZ3VyZXMscz1lLmgsbj1lLmxlbmd0aDtmb3IobGV0IG89MDtvPG47bysrKXtjb25zdCByPXNbb107aSYmbz09PTA/dC5zKHIuc3RhcnRYLHIuc3RhcnRZLDAsMCk6dC51bmlvbk5vQ2hlY2soci5zdGFydFgsci5zdGFydFksMCwwKTtjb25zdCBoPXIuc2VnbWVudHMuaCxmPWgubGVuZ3RoO2xldCBhPXIuc3RhcnRYLGM9ci5zdGFydFk7Zm9yKGxldCB1PTA7dTxmO3UrKyl7Y29uc3QgZD1oW3VdO3N3aXRjaChkLnR5cGUpe2Nhc2UgMjpjYXNlIDE6YT1kLmVuZFgsYz1kLmVuZFksdC51bmlvbk5vQ2hlY2soYSxjLDAsMCk7YnJlYWs7Y2FzZSAzOkdlby5jdShhLGMsZC5wb2ludDFYLGQucG9pbnQxWSxkLnBvaW50MlgsZC5wb2ludDJZLGQuZW5kWCxkLmVuZFksLjUsdCksYT1kLmVuZFgsYz1kLmVuZFk7YnJlYWs7Y2FzZSA0Okdlby5fayhhLGMsZC5wb2ludDFYLGQucG9pbnQxWSxkLmVuZFgsZC5lbmRZLC41LHQpLGE9ZC5lbmRYLGM9ZC5lbmRZO2JyZWFrO2Nhc2UgNTpjYXNlIDY6Y29uc3QgbT1kLnR5cGU9PT01P2QuQ28ocik6ZC5IaChyLGEsYyksZz1tLmxlbmd0aDtpZihnPT09MCl7YT1kLnR5cGU9PT01P2QuY2VudGVyWDpkLmVuZFgsYz1kLnR5cGU9PT01P2QuY2VudGVyWTpkLmVuZFksdC51bmlvbk5vQ2hlY2soYSxjLDAsMCk7YnJlYWt9bGV0IHA9bnVsbDtmb3IobGV0IHc9MDt3PGc7dysrKXA9bVt3XSxHZW8uY3UocFswXSxwWzFdLHBbMl0scFszXSxwWzRdLHBbNV0scFs2XSxwWzddLC41LHQpO3AhPT1udWxsJiYoYT1wWzZdLGM9cFs3XSk7YnJlYWs7ZGVmYXVsdDpVLm4oXCJVbmtub3duIFNlZ21lbnQgdHlwZTogXCIrZC50eXBlKX19fWJyZWFrO2RlZmF1bHQ6VS5uKFwiVW5rbm93biBHZW9tZXRyeSB0eXBlOiBcIit0aGlzLnR5cGUpfX15Rih0LGkpe2NvbnN0IGU9dGhpcy5ib3VuZHM7bGV0IHM9dC9lLndpZHRoLG49aS9lLmhlaWdodDtyZXR1cm4gaXNGaW5pdGUocyl8fChzPTEpLGlzRmluaXRlKG4pfHwobj0xKSxzPT09MSYmbj09PTE/dGhpczp0aGlzLmNvcHkoKS5zY2FsZShzLG4pfW5vcm1hbGl6ZSgpe3RoaXMuZiYmVS5EKHRoaXMpO2NvbnN0IHQ9dGhpcy5jb21wdXRlQm91bmRzV2l0aG91dE9yaWdpbigpO3JldHVybiB0aGlzLm9mZnNldCgtdC54LC10LnkpLG5ldyBQb2ludCgtdC54LC10LnkpfW9mZnNldCh0LGkpe3JldHVybiB0aGlzLmYmJlUuRCh0aGlzKSxEZWJ1ZyYmKFUucih0LEdlb21ldHJ5LFwib2Zmc2V0XCIpLFUucihpLEdlb21ldHJ5LFwib2Zmc2V0XCIpKSx0aGlzLkYoMSwwLDAsMSx0LGkpLHRoaXN9c2NhbGUodCxpKXtyZXR1cm4gdGhpcy5mJiZVLkQodGhpcyksRGVidWcmJihVLnIodCxHZW9tZXRyeSxcInNjYWxlOnhcIiksVS5yKGksR2VvbWV0cnksXCJzY2FsZTp5XCIpLHQ9PT0wJiZVLlUodCxcInNjYWxlIG11c3QgYmUgbm9uLXplcm9cIixHZW9tZXRyeSxcInNjYWxlOnhcIiksaT09PTAmJlUuVShpLFwic2NhbGUgbXVzdCBiZSBub24temVyb1wiLEdlb21ldHJ5LFwic2NhbGU6eVwiKSksdGhpcy5GKHQsMCwwLGksMCwwKSx0aGlzfXJvdGF0ZSh0LGksZSl7dGhpcy5mJiZVLkQodGhpcyksaT09PXZvaWQgMCYmKGk9MCksZT09PXZvaWQgMCYmKGU9MCksRGVidWcmJihVLnIodCxHZW9tZXRyeSxcInJvdGF0ZTphbmdsZVwiKSxVLnIoaSxHZW9tZXRyeSxcInJvdGF0ZTp4XCIpLFUucihlLEdlb21ldHJ5LFwicm90YXRlOnlcIikpO2NvbnN0IHM9VHJhbnNmb3JtLmEoKTtyZXR1cm4gcy5WaSgpLHMubXModCxpLGUpLHRoaXMuRihzLm0xMSxzLm0xMixzLm0yMSxzLm0yMixzLmR4LHMuZHkpLFRyYW5zZm9ybS5vKHMpLHRoaXN9Rih0LGksZSxzLG4sbyl7bGV0IHI9MCxsPTA7c3dpdGNoKHRoaXMudHlwZSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6cj10aGlzLk1lLGw9dGhpcy5QZSx0aGlzLk1lPXIqdCtsKmUrbix0aGlzLlBlPXIqaStsKnMrbyxyPXRoaXMuZWUsbD10aGlzLnNlLHRoaXMuZWU9cip0K2wqZStuLHRoaXMuc2U9cippK2wqcytvO2JyZWFrO2Nhc2UgNDpjb25zdCBmPXRoaXMuZmlndXJlcy5oLGE9Zi5sZW5ndGg7Zm9yKGxldCBjPTA7YzxhO2MrKyl7Y29uc3QgdT1mW2NdO3I9dS5zdGFydFgsbD11LnN0YXJ0WSx1LnN0YXJ0WD1yKnQrbCplK24sdS5zdGFydFk9cippK2wqcytvO2NvbnN0IG09dS5zZWdtZW50cy5oLGc9bS5sZW5ndGg7Zm9yKGxldCBwPTA7cDxnO3ArKyl7Y29uc3Qgdz1tW3BdO3N3aXRjaCh3LnR5cGUpe2Nhc2UgMjpjYXNlIDE6cj13LmVuZFgsbD13LmVuZFksdy5lbmRYPXIqdCtsKmUrbix3LmVuZFk9cippK2wqcytvO2JyZWFrO2Nhc2UgMzpyPXcucG9pbnQxWCxsPXcucG9pbnQxWSx3LnBvaW50MVg9cip0K2wqZStuLHcucG9pbnQxWT1yKmkrbCpzK28scj13LnBvaW50MlgsbD13LnBvaW50Mlksdy5wb2ludDJYPXIqdCtsKmUrbix3LnBvaW50Mlk9cippK2wqcytvLHI9dy5lbmRYLGw9dy5lbmRZLHcuZW5kWD1yKnQrbCplK24sdy5lbmRZPXIqaStsKnMrbzticmVhaztjYXNlIDQ6cj13LnBvaW50MVgsbD13LnBvaW50MVksdy5wb2ludDFYPXIqdCtsKmUrbix3LnBvaW50MVk9cippK2wqcytvLHI9dy5lbmRYLGw9dy5lbmRZLHcuZW5kWD1yKnQrbCplK24sdy5lbmRZPXIqaStsKnMrbzticmVhaztjYXNlIDU6aWYocj13LmNlbnRlclgsbD13LmNlbnRlclksdy5jZW50ZXJYPXIqdCtsKmUrbix3LmNlbnRlclk9cippK2wqcytvLGkhPT0wKXtsZXQgeD1NYXRoLmF0YW4yKGksdCkqMTgwL01hdGguUEk7eDwwJiYoeCs9MzYwKSx3LnN0YXJ0QW5nbGUrPXh9dDwwJiYody5zdGFydEFuZ2xlPTE4MC13LnN0YXJ0QW5nbGUsdy5zd2VlcEFuZ2xlPS13LnN3ZWVwQW5nbGUpLHM8MCYmKHcuc3RhcnRBbmdsZT0tdy5zdGFydEFuZ2xlLHcuc3dlZXBBbmdsZT0tdy5zd2VlcEFuZ2xlKSx3LnJhZGl1c1gqPU1hdGguc3FydCh0KnQrZSplKSx3LnJhZGl1c1khPT12b2lkIDAmJih3LnJhZGl1c1kqPU1hdGguc3FydChpKmkrcypzKSk7YnJlYWs7Y2FzZSA2OmlmKHI9dy5lbmRYLGw9dy5lbmRZLHcuZW5kWD1yKnQrbCplK24sdy5lbmRZPXIqaStsKnMrbyx3LnJhZGl1c1g9PT0wfHx3LnJhZGl1c1k9PT0wKWJyZWFrO2lmKGkhPT0wKXtsZXQgeD1NYXRoLmF0YW4yKGksdCkqMTgwL01hdGguUEk7eDwwJiYoeCs9MzYwKSx3LnhBeGlzUm90YXRpb24rPXh9dDwwJiYody54QXhpc1JvdGF0aW9uPTE4MC13LnhBeGlzUm90YXRpb24sdy5pc0Nsb2Nrd2lzZUFyYz0hdy5pc0Nsb2Nrd2lzZUFyYyksczwwJiYody54QXhpc1JvdGF0aW9uPS13LnhBeGlzUm90YXRpb24sdy5pc0Nsb2Nrd2lzZUFyYz0hdy5pc0Nsb2Nrd2lzZUFyYyksdy5yYWRpdXNYKj1NYXRoLnNxcnQodCp0K2UqZSksdy5yYWRpdXNZKj1NYXRoLnNxcnQoaSppK3Mqcyk7YnJlYWs7ZGVmYXVsdDpVLm4oXCJVbmtub3duIFNlZ21lbnQgdHlwZTogXCIrdy50eXBlKX19fWJyZWFrfXJldHVybiB0aGlzLk10PSEwLHRoaXN9Y29udGFpbnNQb2ludCh0LGkpe2k9PT12b2lkIDAmJihpPTApO2NvbnN0IGU9dGhpcy5NZSxzPXRoaXMuUGUsbj10aGlzLmVlLG89dGhpcy5zZTtzd2l0Y2godGhpcy50eXBlKXtjYXNlIDE6cmV0dXJuIEdlby56aShlLHMsbixvLGksdC54LHQueSk7Y2FzZSAyOntjb25zdCByPU1hdGgubWluKGUsbiktaSxsPU1hdGgubWluKHMsbyktaSxoPU1hdGguYWJzKG4tZSkraSoyLGY9TWF0aC5hYnMoby1zKStpKjIsYT1SZWN0LksocixsLGgsZiksYz1hLmNvbnRhaW5zUG9pbnQodCk7cmV0dXJuIFJlY3QubyhhKSxjfWNhc2UgMzp7bGV0IHI9TWF0aC5taW4oZSxuKS1pLGw9TWF0aC5taW4ocyxvKS1pO2NvbnN0IGg9TWF0aC5hYnMobi1lKStpKjIsZj1NYXRoLmFicyhvLXMpK2kqMixhPWgvMixjPWYvMjtyZXR1cm4gYTw9MHx8Yzw9MD8hMToocj10LngtKHIrYSksbD10LnktKGwrYykscipyLyhhKmEpK2wqbC8oYypjKTw9MSl9Y2FzZSA0OnJldHVybiB0aGlzLmlTKHQsaSwhMCwhMSk7ZGVmYXVsdDpyZXR1cm4hMX19aVModCxpLGUscyl7Y29uc3Qgbj10Lngsbz10Lnkscj10aGlzLmJvdW5kcy54LTIwLGw9bztsZXQgaD0wLGY9MCxhPTAsYz0wLHU9MCxkPTA7Y29uc3QgbT10aGlzLmZpZ3VyZXMuaCxnPW0ubGVuZ3RoO2ZvcihsZXQgcD0wO3A8ZztwKyspe2NvbnN0IHc9bVtwXSx4PSF3LmlzRXZlbk9kZDtpZih3LmlzRmlsbGVkKXtpZihlJiZ3LmVTKG4sbyxpKSlyZXR1cm4hMH1lbHNle2lmKHcuZVMobixvLHM/aTppKzIpKXJldHVybiEwO2NvbnRpbnVlfWNvbnN0IGs9dy5zZWdtZW50cztmPXcuc3RhcnRYLGE9dy5zdGFydFk7bGV0IGI9ZixTPWE7Y29uc3QgTT1rLmg7Zm9yKGxldCBBPTA7QTw9ay5sZW5ndGg7QSsrKXtsZXQgQyxQO3N3aXRjaChBIT09ay5sZW5ndGg/KEM9TVtBXSxQPUMudHlwZSx1PUMuZW5kWCxkPUMuZW5kWSk6KFA9Mix1PWIsZD1TKSxQKXtjYXNlIDE6e2NvbnN0IE49dGhpcy5CdyhuLG8scixsLGYsYSxiLFMpO2lmKGlzTmFOKE4pKXJldHVybiEwO2grPU4sYj11LFM9ZDticmVha31jYXNlIDI6e2NvbnN0IE49dGhpcy5CdyhuLG8scixsLGYsYSx1LGQpO2lmKGlzTmFOKE4pKXJldHVybiEwO2grPU47YnJlYWt9Y2FzZSAzOmM9R2VvLkdnKGYsYSxDLnBvaW50MVgsQy5wb2ludDFZLEMucG9pbnQyWCxDLnBvaW50MlksdSxkLHIsbCxuLG8sLjUpLGgrPWM7YnJlYWs7Y2FzZSA0Ontjb25zdCBOPShmKzIqQy5wb2ludDFYKS8zLFQ9KGErMipDLnBvaW50MVkpLzMsTD0oQy5wb2ludDFYKjIrdSkvMyxEPShDLnBvaW50MVkqMitkKS8zO2M9R2VvLkdnKGYsYSxOLFQsTCxELHUsZCxyLGwsbixvLC41KSxoKz1jO2JyZWFrfWNhc2UgNTpjYXNlIDY6e2NvbnN0IE49Qy50eXBlPT09NT9DLkNvKHcpOkMuSGgodyxmLGEpLFQ9Ti5sZW5ndGg7aWYoVD09PTApe2NvbnN0IEQ9dGhpcy5CdyhuLG8scixsLGYsYSxDLnR5cGU9PT01P0MuY2VudGVyWDpDLmVuZFgsQy50eXBlPT09NT9DLmNlbnRlclk6Qy5lbmRZKTtpZihpc05hTihEKSlyZXR1cm4hMDtoKz1EO2JyZWFrfWxldCBMPW51bGw7Zm9yKGxldCBEPTA7RDxUO0QrKyl7aWYoTD1OW0RdLEQ9PT0wKXtjb25zdCBGPXRoaXMuQncobixvLHIsbCxmLGEsTFswXSxMWzFdKTtpZihpc05hTihGKSlyZXR1cm4hMDtoKz1GfWM9R2VvLkdnKExbMF0sTFsxXSxMWzJdLExbM10sTFs0XSxMWzVdLExbNl0sTFs3XSxyLGwsbixvLC41KSxoKz1jfUwhPT1udWxsJiYodT1MWzZdLGQ9TFs3XSk7YnJlYWt9ZGVmYXVsdDpVLm4oXCJVbmtub3duIFNlZ21lbnQgdHlwZTogXCIrQy50eXBlKX1mPXUsYT1kfWlmKHgpe2lmKGghPT0wKXJldHVybiEwfWVsc2UgaWYoaCUyIT09MClyZXR1cm4hMDtoPTB9cmV0dXJuITF9QncodCxpLGUscyxuLG8scixsKXtpZihHZW8uemkobixvLHIsbCwuMDUsdCxpKSlyZXR1cm4gTmFOO2NvbnN0IGg9KHQtZSkqKG8tbCk7aWYoaD09PTApcmV0dXJuIDA7Y29uc3QgZj0oKHQqcy1pKmUpKihuLXIpLSh0LWUpKihuKmwtbypyKSkvaCxhPSh0KnMtaSplKSooby1sKS9oO2lmKGY+PXQpcmV0dXJuIDA7aWYoKG4+cj9uLXI6ci1uKTwobz5sP28tbDpsLW8pKXtpZihvPGwpe2lmKGE8b3x8YT5sKXJldHVybiAwfWVsc2UgaWYoYTxsfHxhPm8pcmV0dXJuIDB9ZWxzZSBpZihuPHIpe2lmKGY8bnx8Zj5yKXJldHVybiAwfWVsc2UgaWYoZjxyfHxmPm4pcmV0dXJuIDA7cmV0dXJuIGg+MD8xOi0xfUtDKHQsaSxlKXtjb25zdCBzPXRoaXMuZmlndXJlcy5oLG49cy5sZW5ndGg7Zm9yKGxldCBvPTA7bzxuO28rKylpZihzW29dLmVTKHQsaSxlKSlyZXR1cm4hMDtyZXR1cm4hMX1nZXRQb2ludEFsb25nUGF0aCh0LGkpe2lmKHQ8MD90PTA6dD4xJiYodD0xKSxpPT09dm9pZCAwJiYoaT1uZXcgUG9pbnQpLHRoaXMudHlwZT09PTEpcmV0dXJuIGkucyh0aGlzLnN0YXJ0WCt0Kih0aGlzLmVuZFgtdGhpcy5zdGFydFgpLHRoaXMuc3RhcnRZK3QqKHRoaXMuZW5kWS10aGlzLnN0YXJ0WSkpLGk7Y29uc3QgZT10aGlzLmZsYXR0ZW5lZFNlZ21lbnRzLHM9dGhpcy5mbGF0dGVuZWRMZW5ndGhzLG49dGhpcy5mbGF0dGVuZWRUb3RhbExlbmd0aCxvPWUubGVuZ3RoLHI9bip0O2xldCBsPTA7Zm9yKGxldCBoPTA7aDxvO2grKyl7Y29uc3QgZj1zW2hdLGE9Zi5sZW5ndGg7Zm9yKGxldCBjPTA7YzxhO2MrKyl7Y29uc3QgdT1mW2NdO2lmKGwrdT49cil7Y29uc3QgZD1yLWwsbT11PT09MD8wOmQvdSxnPWVbaF0scD1nW2MqMl0sdz1nW2MqMisxXSx4PWdbYyoyKzJdLGs9Z1tjKjIrM107cmV0dXJuIGkucyhwKyh4LXApKm0sdysoay13KSptKSxpfWwrPXV9fXJldHVybiBpfWdldEFuZ2xlQWxvbmdQYXRoKHQpe2lmKHQ8MD90PTA6dD4xJiYodD0xKSx0aGlzLnR5cGU9PT0xKXJldHVybiBNYXRoLmF0YW4yKHRoaXMuZW5kWS10aGlzLnN0YXJ0WSx0aGlzLmVuZFgtdGhpcy5zdGFydFgpKjE4MC9NYXRoLlBJO2NvbnN0IGk9dGhpcy5mbGF0dGVuZWRTZWdtZW50cyxlPXRoaXMuZmxhdHRlbmVkTGVuZ3RocyxzPXRoaXMuZmxhdHRlbmVkVG90YWxMZW5ndGgsbj1pLmxlbmd0aCxvPXMqdDtsZXQgcj0wO2ZvcihsZXQgbD0wO2w8bjtsKyspe2NvbnN0IGg9ZVtsXSxmPWgubGVuZ3RoO2ZvcihsZXQgYT0wO2E8ZjthKyspe2NvbnN0IGM9aFthXTtpZihyK2M+PW8pe2NvbnN0IHU9aVtsXSxkPXVbYSoyXSxtPXVbYSoyKzFdLGc9dVthKjIrMl0scD11W2EqMiszXTtyZXR1cm4gTWF0aC5hYnMoZy1kKTwxJiZNYXRoLmFicyhwLW0pPDE/MDpNYXRoLmFicyhnLWQpPDE/cC1tPj0wPzkwOjI3MDpNYXRoLmFicyhwLW0pPDE/Zy1kPj0wPzA6MTgwOk1hdGguYXRhbjIocC1tLGctZCkqMTgwL01hdGguUEl9cis9Y319cmV0dXJuIE5hTn1nZXRQb2ludEFuZEFuZ2xlQWxvbmdQYXRoKHQsaSl7aWYodDwwP3Q9MDp0PjEmJih0PTEpLGk9PT12b2lkIDAmJihpPVtdKSxpLmxlbmd0aD0zLHRoaXMudHlwZT09PTEpcmV0dXJuIGlbMF09dGhpcy5zdGFydFgrdCoodGhpcy5lbmRYLXRoaXMuc3RhcnRYKSxpWzFdPXRoaXMuc3RhcnRZK3QqKHRoaXMuZW5kWS10aGlzLnN0YXJ0WSksaVsyXT1NYXRoLmF0YW4yKHRoaXMuZW5kWS10aGlzLnN0YXJ0WSx0aGlzLmVuZFgtdGhpcy5zdGFydFgpKjE4MC9NYXRoLlBJLGk7Y29uc3QgZT10aGlzLmZsYXR0ZW5lZFNlZ21lbnRzLHM9dGhpcy5mbGF0dGVuZWRMZW5ndGhzLG49dGhpcy5mbGF0dGVuZWRUb3RhbExlbmd0aCxvPWUubGVuZ3RoLHI9bip0O2xldCBsPTA7Zm9yKGxldCBoPTA7aDxvO2grKyl7Y29uc3QgZj1zW2hdLGE9Zi5sZW5ndGg7Zm9yKGxldCBjPTA7YzxhO2MrKyl7Y29uc3QgdT1mW2NdO2lmKGwrdT49cil7Y29uc3QgZD1yLWwsbT11PT09MD8wOmQvdSxnPWVbaF0scD1nW2MqMl0sdz1nW2MqMisxXSx4PWdbYyoyKzJdLGs9Z1tjKjIrM107aVswXT1wKyh4LXApKm0saVsxXT13KyhrLXcpKm07bGV0IGI7cmV0dXJuIE1hdGguYWJzKHgtcCk8MSYmTWF0aC5hYnMoay13KTwxP2I9MDpNYXRoLmFicyh4LXApPDE/Yj1rLXc+PTA/OTA6MjcwOk1hdGguYWJzKGstdyk8MT9iPXgtcD49MD8wOjE4MDpiPU1hdGguYXRhbjIoay13LHgtcCkqMTgwL01hdGguUEksaVsyXT1iLGl9bCs9dX19cmV0dXJuIGl9Z2V0RnJhY3Rpb25Gb3JQb2ludCh0KXtpZih0aGlzLnR5cGU9PT0xKXtjb25zdCBpPXRoaXMuc3RhcnRYLGU9dGhpcy5zdGFydFkscz10aGlzLmVuZFgsbj10aGlzLmVuZFk7aWYoaT09PXMmJmU9PT1uKXJldHVybiAwO3tjb25zdCBvPXQueCxyPXQueTtsZXQgbD0wLGg9MDtpZihpPT09cylyZXR1cm4gZTxuPyhsPWUsaD1uKToobD1uLGg9ZSkscjw9bD9sPT09ZT8wOjE6cj49aD9oPT09ZT8wOjE6TWF0aC5hYnMoci1lKS8oaC1sKTtpZihlPT09bilyZXR1cm4gaTxzPyhsPWksaD1zKToobD1zLGg9aSksbzw9bD9sPT09aT8wOjE6bz49aD9oPT09aT8wOjE6TWF0aC5hYnMoby1pKS8oaC1sKTt7Y29uc3QgZj0ocy1pKSoqMisobi1lKSoqMixhPVBvaW50LmEoKTtHZW8ueGwoaSxlLHMsbixvLHIsYSk7Y29uc3QgYz1hLngsdT1hLnk7cmV0dXJuIFBvaW50Lm8oYSksTWF0aC5zcXJ0KCgoYy1pKSoqMisodS1lKSoqMikvZil9fX1lbHNlIGlmKHRoaXMudHlwZT09PTIpe2NvbnN0IGk9dGhpcy5zdGFydFgsZT10aGlzLnN0YXJ0WSxzPXRoaXMuZW5kWCxuPXRoaXMuZW5kWTtpZihpPT09cyYmZT09PW4pcmV0dXJuIDA7e2NvbnN0IG89cy1pLHI9bi1lLGw9byoyK3IqMjtsZXQgaD10LngsZj10Lnk7aD1NYXRoLm1pbihNYXRoLm1heChoLGkpLHMpLGY9TWF0aC5taW4oTWF0aC5tYXgoZixlKSxuKTtjb25zdCBhPU1hdGguYWJzKGgtaSksYz1NYXRoLmFicyhoLXMpLHU9TWF0aC5hYnMoZi1lKSxkPU1hdGguYWJzKGYtbiksbT1NYXRoLm1pbihhLGMsdSxkKTtpZihtPT09dSlyZXR1cm4gaC9sO2lmKG09PT1jKXJldHVybihvK2YpL2w7aWYobT09PWQpcmV0dXJuKG8qMityLWgpL2w7aWYobT09PWEpcmV0dXJuKG8qMityKjItZikvbH19ZWxzZXtjb25zdCBpPXRoaXMuZmxhdHRlbmVkU2VnbWVudHMsZT10aGlzLmZsYXR0ZW5lZExlbmd0aHMscz10aGlzLmZsYXR0ZW5lZFRvdGFsTGVuZ3RoLG49UG9pbnQuYSgpO2xldCBvPTEvMCxyPTAsbD0wO2NvbnN0IGg9aS5sZW5ndGg7bGV0IGY9MCxhPTA7Zm9yKGxldCB1PTA7dTxoO3UrKyl7Y29uc3QgZD1pW3VdLG09ZVt1XSxnPWQubGVuZ3RoO2ZvcihsZXQgcD0wO3A8ZztwKz0yKXtjb25zdCB3PWRbcF0seD1kW3ArMV07aWYocD09PTApe2Y9dyxhPXg7Y29udGludWV9R2VvLnhsKGYsYSx3LHgsdC54LHQueSxuKTtjb25zdCBrPShuLngtdC54KSoqMisobi55LXQueSkqKjI7azxvJiYobz1rLHI9bCxyKz1NYXRoLnNxcnQoKG4ueC1mKSoqMisobi55LWEpKioyKSksbCs9bVsocC0yKS8yXSxmPXcsYT14fX1Qb2ludC5vKG4pO2NvbnN0IGM9ci9zO3JldHVybiBjPDA/MDpjPjE/MTpjfXJldHVybiAwfWdldCBmbGF0dGVuZWRTZWdtZW50cygpe3JldHVybiB0aGlzLlVDKCksdGhpcy5kZn1VQygpe2lmKHRoaXMuZGY9PT1udWxsKXtjb25zdCB0PXRoaXMuZGY9W10saT10aGlzLnV1PVtdO3RoaXMud0YodCxpKX19Z2V0IGZsYXR0ZW5lZExlbmd0aHMoKXtyZXR1cm4gdGhpcy5VQygpLHRoaXMudXV9Z2V0IGZsYXR0ZW5lZFRvdGFsTGVuZ3RoKCl7bGV0IHQ9dGhpcy5kdTtpZihpc05hTih0KSl7aWYodGhpcy50eXBlPT09MSl7Y29uc3QgaT1NYXRoLmFicyh0aGlzLmVuZFgtdGhpcy5zdGFydFgpLGU9TWF0aC5hYnModGhpcy5lbmRZLXRoaXMuc3RhcnRZKTt0PU1hdGguc3FydChpKmkrZSplKX1lbHNlIGlmKHRoaXMudHlwZT09PTIpe2NvbnN0IGk9TWF0aC5hYnModGhpcy5lbmRYLXRoaXMuc3RhcnRYKSxlPU1hdGguYWJzKHRoaXMuZW5kWS10aGlzLnN0YXJ0WSk7dD1pKjIrZSoyfWVsc2V7Y29uc3QgaT10aGlzLmZsYXR0ZW5lZExlbmd0aHMsZT1pLmxlbmd0aDt0PTA7Zm9yKGxldCBzPTA7czxlO3MrKyl7Y29uc3Qgbj1pW3NdLG89bi5sZW5ndGg7Zm9yKGxldCByPTA7cjxvO3IrKyl0Kz1uW3JdfX10aGlzLmR1PXR9cmV0dXJuIHR9c1ModCl7Y29uc3QgaT1bXTtsZXQgZT0wLHM9MDtjb25zdCBuPXQubGVuZ3RoO2ZvcihsZXQgbz0wO288bjtvKz0yKXtjb25zdCByPXRbb10sbD10W28rMV07aWYobz09PTApe2U9cixzPWw7Y29udGludWV9Y29uc3QgaD1NYXRoLnNxcnQoUG9pbnQuZGlzdGFuY2VTcXVhcmVkKGUscyxyLGwpKTtpLnB1c2goaCksZT1yLHM9bH1yZXR1cm4gaX13Rih0LGkpe2xldCBlPVtdO2NvbnN0IHM9W107aWYodGhpcy50eXBlPT09MSllLnB1c2godGhpcy5zdGFydFgpLGUucHVzaCh0aGlzLnN0YXJ0WSksZS5wdXNoKHRoaXMuZW5kWCksZS5wdXNoKHRoaXMuZW5kWSksdC5wdXNoKGUpLHMucHVzaChNYXRoLnNxcnQoKHRoaXMuc3RhcnRYLXRoaXMuZW5kWCkqKjIrKHRoaXMuc3RhcnRZLXRoaXMuZW5kWSkqKjIpKSxpLnB1c2gocyk7ZWxzZSBpZih0aGlzLnR5cGU9PT0yKWUucHVzaCh0aGlzLnN0YXJ0WCksZS5wdXNoKHRoaXMuc3RhcnRZKSxlLnB1c2godGhpcy5lbmRYKSxlLnB1c2godGhpcy5zdGFydFkpLGUucHVzaCh0aGlzLmVuZFgpLGUucHVzaCh0aGlzLmVuZFkpLGUucHVzaCh0aGlzLnN0YXJ0WCksZS5wdXNoKHRoaXMuZW5kWSksZS5wdXNoKHRoaXMuc3RhcnRYKSxlLnB1c2godGhpcy5zdGFydFkpLHQucHVzaChlKSxzLnB1c2goTWF0aC5hYnModGhpcy5zdGFydFgtdGhpcy5lbmRYKSkscy5wdXNoKE1hdGguYWJzKHRoaXMuc3RhcnRZLXRoaXMuZW5kWSkpLHMucHVzaChNYXRoLmFicyh0aGlzLnN0YXJ0WC10aGlzLmVuZFgpKSxzLnB1c2goTWF0aC5hYnModGhpcy5zdGFydFktdGhpcy5lbmRZKSksaS5wdXNoKHMpO2Vsc2UgaWYodGhpcy50eXBlPT09Myl7Y29uc3Qgbj1uZXcgUGF0aEZpZ3VyZTtuLnN0YXJ0WD10aGlzLmVuZFgsbi5zdGFydFk9KHRoaXMuc3RhcnRZK3RoaXMuZW5kWSkvMjtjb25zdCBvPW5ldyBQYXRoU2VnbWVudCg1KTtvLnN0YXJ0QW5nbGU9MCxvLnN3ZWVwQW5nbGU9MzYwLG8uY2VudGVyWD0odGhpcy5zdGFydFgrdGhpcy5lbmRYKS8yLG8uY2VudGVyWT0odGhpcy5zdGFydFkrdGhpcy5lbmRZKS8yLG8ucmFkaXVzWD1NYXRoLmFicyh0aGlzLnN0YXJ0WC10aGlzLmVuZFgpLzIsby5yYWRpdXNZPU1hdGguYWJzKHRoaXMuc3RhcnRZLXRoaXMuZW5kWSkvMixuLmFkZChvKTtjb25zdCByPW8uQ28obiksbD1yLmxlbmd0aDtpZihsPT09MCllLnB1c2goby5jZW50ZXJYKSxlLnB1c2goby5jZW50ZXJZKTtlbHNle2xldCBoPW4uc3RhcnRYLGY9bi5zdGFydFk7Zm9yKGxldCBhPTA7YTxsO2ErKyl7Y29uc3QgYz1yW2FdO0dlby5YbihoLGYsY1syXSxjWzNdLGNbNF0sY1s1XSxjWzZdLGNbN10sLjUsZSksaD1jWzZdLGY9Y1s3XX19dC5wdXNoKGUpLGkucHVzaCh0aGlzLnNTKGUpKX1lbHNle2NvbnN0IG49dGhpcy5maWd1cmVzLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7ZT1bXSxlLnB1c2goby5zdGFydFgpLGUucHVzaChvLnN0YXJ0WSk7bGV0IHI9by5zdGFydFgsbD1vLnN0YXJ0WSxoPXIsZj1sO2NvbnN0IGE9by5zZWdtZW50cy5oLGM9YS5sZW5ndGg7Zm9yKGxldCB1PTA7dTxjO3UrKyl7Y29uc3QgZD1hW3VdO3N3aXRjaChkLnR5cGUpe2Nhc2UgMTplLmxlbmd0aD49NCYmKHQucHVzaChlKSxpLnB1c2godGhpcy5zUyhlKSkpLGU9W10sZS5wdXNoKGQuZW5kWCksZS5wdXNoKGQuZW5kWSkscj1kLmVuZFgsbD1kLmVuZFksaD1yLGY9bDticmVhaztjYXNlIDI6ZS5wdXNoKGQuZW5kWCksZS5wdXNoKGQuZW5kWSkscj1kLmVuZFgsbD1kLmVuZFk7YnJlYWs7Y2FzZSAzOkdlby5YbihyLGwsZC5wb2ludDFYLGQucG9pbnQxWSxkLnBvaW50MlgsZC5wb2ludDJZLGQuZW5kWCxkLmVuZFksLjUsZSkscj1kLmVuZFgsbD1kLmVuZFk7YnJlYWs7Y2FzZSA0Okdlby5LZyhyLGwsZC5wb2ludDFYLGQucG9pbnQxWSxkLmVuZFgsZC5lbmRZLC41LGUpLHI9ZC5lbmRYLGw9ZC5lbmRZO2JyZWFrO2Nhc2UgNTp7Y29uc3QgbT1kLkNvKG8pLGc9bS5sZW5ndGg7aWYoZz09PTApe2UucHVzaChkLmNlbnRlclgpLGUucHVzaChkLmNlbnRlclkpLHI9ZC5jZW50ZXJYLGw9ZC5jZW50ZXJZO2JyZWFrfWZvcihsZXQgcD0wO3A8ZztwKyspe2NvbnN0IHc9bVtwXTtHZW8uWG4ocixsLHdbMl0sd1szXSx3WzRdLHdbNV0sd1s2XSx3WzddLC41LGUpLHI9d1s2XSxsPXdbN119YnJlYWt9Y2FzZSA2Ontjb25zdCBtPWQuSGgobyxyLGwpLGc9bS5sZW5ndGgscD1kLmVuZFgsdz1kLmVuZFk7aWYoZz09PTApe2UucHVzaChwKSxlLnB1c2godykscj1wLGw9dzticmVha31mb3IobGV0IHg9MDt4PGc7eCsrKXtjb25zdCBrPW1beF07R2VvLlhuKHIsbCxrWzJdLGtbM10sa1s0XSxrWzVdLGtbNl0sa1s3XSwuNSxlKSxyPWtbNl0sbD1rWzddfWJyZWFrfWRlZmF1bHQ6VS5uKFwiU2VnbWVudCBub3Qgb2YgdmFsaWQgdHlwZTogXCIrZC50eXBlKX1kLmlzQ2xvc2VkJiYoZS5wdXNoKGgpLGUucHVzaChmKSl9ZS5sZW5ndGg+PTQmJih0LnB1c2goZSksaS5wdXNoKHRoaXMuc1MoZSkpKX19fWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuJH1zZXQgdHlwZSh0KXt0aGlzLiQhPT10JiYoRGVidWcmJlUuaih0LEdlb21ldHJ5VHlwZSxcIkdlb21ldHJ5VHlwZVwiKSx0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMuJD10LHQ9PT00P3RoaXMuVnM9bmV3IExpc3Q6KEdlb21ldHJ5Lkl3PT09bnVsbCYmKEdlb21ldHJ5Lkl3PW5ldyBMaXN0KCkucCgpKSx0aGlzLlZzPUdlb21ldHJ5Lkl3KSx0aGlzLk10PSEwKX1nZXQgc3RhcnRYKCl7cmV0dXJuIHRoaXMuTWV9c2V0IHN0YXJ0WCh0KXt0aGlzLk1lIT09dCYmKERlYnVnJiZVLnIodCxHZW9tZXRyeSxcInN0YXJ0WFwiKSx0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMuTWU9dCx0aGlzLk10PSEwKX1nZXQgc3RhcnRZKCl7cmV0dXJuIHRoaXMuUGV9c2V0IHN0YXJ0WSh0KXt0aGlzLlBlIT09dCYmKERlYnVnJiZVLnIodCxHZW9tZXRyeSxcInN0YXJ0WVwiKSx0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMuUGU9dCx0aGlzLk10PSEwKX1nZXQgZW5kWCgpe3JldHVybiB0aGlzLmVlfXNldCBlbmRYKHQpe3RoaXMuZWUhPT10JiYoRGVidWcmJlUucih0LEdlb21ldHJ5LFwiZW5kWFwiKSx0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMuZWU9dCx0aGlzLk10PSEwKX1nZXQgZW5kWSgpe3JldHVybiB0aGlzLnNlfXNldCBlbmRZKHQpe3RoaXMuc2UhPT10JiYoRGVidWcmJlUucih0LEdlb21ldHJ5LFwiZW5kWVwiKSx0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMuc2U9dCx0aGlzLk10PSEwKX1nZXQgZmlndXJlcygpe3JldHVybiB0aGlzLlZzfXNldCBmaWd1cmVzKHQpe3RoaXMuVnMhPT10JiYoRGVidWcmJlUuZSh0LExpc3QsR2VvbWV0cnksXCJmaWd1cmVzXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCksdGhpcy5Wcz10LHRoaXMuTXQ9ITApfWFkZCh0KXtyZXR1cm4gRGVidWcmJlUuZSh0LFBhdGhGaWd1cmUsR2VvbWV0cnksXCJhZGRcIiksdGhpcy5Wcy5hZGQodCksdGhpc31zZXRTcG90cyh0LGksZSxzLG4sbyxyLGwpe3JldHVybiB0aGlzLmYmJlUuRCh0aGlzKSx0aGlzLktuPW5ldyBTcG90KHQsaSxuLG8pLnAoKSx0aGlzLlVuPW5ldyBTcG90KGUscyxyLGwpLnAoKSx0aGlzfWdldCBzcG90MSgpe3JldHVybiB0aGlzLktufXNldCBzcG90MSh0KXtEZWJ1ZyYmVS5lKHQsU3BvdCxHZW9tZXRyeSxcInNwb3QxXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCksdGhpcy5Lbj10Lk4oKX1nZXQgc3BvdDIoKXtyZXR1cm4gdGhpcy5Vbn1zZXQgc3BvdDIodCl7RGVidWcmJlUuZSh0LFNwb3QsR2VvbWV0cnksXCJzcG90MlwiKSx0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMuVW49dC5OKCl9Z2V0IGRlZmF1bHRTdHJldGNoKCl7cmV0dXJuIHRoaXMuR259c2V0IGRlZmF1bHRTdHJldGNoKHQpe3RoaXMuR249dH1nZXQgYm91bmRzKCl7cmV0dXJuIHRoaXMudFMoKSYmdGhpcy5FdygpLHRoaXMudmd9fUdlb21ldHJ5LnN0cmluZ2lmeT1HZW9tZXRyeS5zdHJpbmdpZnksR2VvbWV0cnkuc3RyaW5naWZ5Rml4ZWQ9R2VvbWV0cnkuc3RyaW5naWZ5Rml4ZWQsR2VvbWV0cnkuZmlsbFBhdGg9R2VvbWV0cnkuZmlsbFBhdGgsR2VvbWV0cnkucGFyc2U9R2VvbWV0cnkucGFyc2U7Y2xhc3MgUGF0aEZpZ3VyZXtsO01lO1BlO3BmO1pnO0tlO2NvbnN0cnVjdG9yKHQsaSxlLHMsbil7ZT09PXZvaWQgMCYmKGU9ITApLHM9PT12b2lkIDAmJihzPSEwKSxuPT09dm9pZCAwJiYobj0hMSksdGhpcy5sPTJ8KGU/NDowKXwocz84OjApfChuPzE2OjApLHQhPT12b2lkIDA/KERlYnVnJiZVLnIodCxQYXRoRmlndXJlLFwic3hcIiksdGhpcy5NZT10KTp0aGlzLk1lPTAsaSE9PXZvaWQgMD8oRGVidWcmJlUucihpLFBhdGhGaWd1cmUsXCJzeVwiKSx0aGlzLlBlPWkpOnRoaXMuUGU9MCx0aGlzLnBmPW5ldyBMaXN0LHRoaXMuWmc9dGhpcy5wZi5hdCx0aGlzLktlPW51bGx9Y29weSgpe2NvbnN0IHQ9bmV3IFBhdGhGaWd1cmU7dC5sPXRoaXMubCYtMix0Lk1lPXRoaXMuTWUsdC5QZT10aGlzLlBlO2NvbnN0IGk9dGhpcy5wZi5oLGU9aS5sZW5ndGgscz10LnBmO2ZvcihsZXQgbj0wO248ZTtuKyspe2NvbnN0IHI9aVtuXS5jb3B5KCk7cy5hZGQocil9cmV0dXJuIHQuWmc9dGhpcy5aZyx0LktlPXRoaXMuS2UsdH1lcXVhbHNBcHByb3godCl7aWYoISh0IGluc3RhbmNlb2YgUGF0aEZpZ3VyZSl8fCFHZW8uZyh0aGlzLnN0YXJ0WCx0LnN0YXJ0WCl8fCFHZW8uZyh0aGlzLnN0YXJ0WSx0LnN0YXJ0WSkpcmV0dXJuITE7Y29uc3QgaT10aGlzLnNlZ21lbnRzLmgsZT10LnNlZ21lbnRzLmgscz1pLmxlbmd0aDtpZihzIT09ZS5sZW5ndGgpcmV0dXJuITE7Zm9yKGxldCBuPTA7bjxzO24rKyl7Y29uc3Qgbz1pW25dLHI9ZVtuXTtpZighby5lcXVhbHNBcHByb3gocikpcmV0dXJuITF9cmV0dXJuITB9dG9TdHJpbmcodCl7dD09PXZvaWQgMCYmKHQ9LTEpO2xldCBpPVwiXCI7aWYodDwwKWk9XCJNXCIrdGhpcy5zdGFydFgudG9TdHJpbmcoKStcIiBcIit0aGlzLnN0YXJ0WS50b1N0cmluZygpO2Vsc2V7Y29uc3Qgbj1vPT5vPT09MD9cIjBcIjpvLnRvRml4ZWQodCk7aT1cIk1cIituKHRoaXMuc3RhcnRYKStcIiBcIituKHRoaXMuc3RhcnRZKX1jb25zdCBlPXRoaXMuc2VnbWVudHMuaCxzPWUubGVuZ3RoO2ZvcihsZXQgbj0wO248cztuKyspe2NvbnN0IG89ZVtuXTtpKz1cIiBcIitvLnRvU3RyaW5nKHQpfXJldHVybiBpfWdldCBmKCl7cmV0dXJuKHRoaXMubCYxKSE9PTB9c2V0IGYodCl7dD90aGlzLmx8PTE6dGhpcy5sJj0tMn1nZXQgTXQoKXtyZXR1cm4odGhpcy5sJjIpIT09MH1zZXQgTXQodCl7dD90aGlzLmx8PTI6dGhpcy5sJj0tM31wKCl7dGhpcy5mPSEwO2NvbnN0IHQ9dGhpcy5zZWdtZW50czt0LnAoKTtjb25zdCBpPXQuaCxlPXQubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspaVtzXS5wKCk7cmV0dXJuIHRoaXN9dFMoKXtpZih0aGlzLk10KXJldHVybiEwO2NvbnN0IHQ9dGhpcy5zZWdtZW50cztpZih0aGlzLlpnIT09dC5hdClyZXR1cm4hMDtmb3IoY29uc3QgaSBvZiB0KWlmKGkuTXQpcmV0dXJuITA7cmV0dXJuITF9cEYoKXt0aGlzLk10PSExLHRoaXMuS2U9bnVsbDtjb25zdCB0PXRoaXMuc2VnbWVudHM7dGhpcy5aZz10LmF0O2Zvcihjb25zdCBpIG9mIHQpaS5NdD0hMSxpLnpzPW51bGx9Z2V0IGlzRmlsbGVkKCl7cmV0dXJuKHRoaXMubCY0KSE9PTB9c2V0IGlzRmlsbGVkKHQpe0RlYnVnJiZVLmkodCxcImJvb2xlYW5cIixQYXRoRmlndXJlLFwiaXNGaWxsZWRcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0P3RoaXMubHw9NDp0aGlzLmwmPS01fWdldCBpc1NoYWRvd2VkKCl7cmV0dXJuKHRoaXMubCY4KSE9PTB9c2V0IGlzU2hhZG93ZWQodCl7RGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhdGhGaWd1cmUsXCJpc1NoYWRvd2VkXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCksdD90aGlzLmx8PTg6dGhpcy5sJj0tOX1nZXQgaXNFdmVuT2RkKCl7cmV0dXJuKHRoaXMubCYxNikhPT0wfXNldCBpc0V2ZW5PZGQodCl7RGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhdGhGaWd1cmUsXCJpc0V2ZW5PZGRcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0P3RoaXMubHw9MTY6dGhpcy5sJj0tMTd9Z2V0IHN0YXJ0WCgpe3JldHVybiB0aGlzLk1lfXNldCBzdGFydFgodCl7RGVidWcmJlUucih0LFBhdGhGaWd1cmUsXCJzdGFydFhcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLk1lPXQsdGhpcy5LZT1udWxsLHRoaXMuTXQ9ITB9Z2V0IHN0YXJ0WSgpe3JldHVybiB0aGlzLlBlfXNldCBzdGFydFkodCl7RGVidWcmJlUucih0LFBhdGhGaWd1cmUsXCJzdGFydFlcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLlBlPXQsdGhpcy5LZT1udWxsLHRoaXMuTXQ9ITB9Z2V0IHNlZ21lbnRzKCl7cmV0dXJuIHRoaXMucGZ9c2V0IHNlZ21lbnRzKHQpe0RlYnVnJiZVLmUodCxMaXN0LFBhdGhGaWd1cmUsXCJzZWdtZW50c1wiKSx0aGlzLmYmJlUuRCh0aGlzLHQpLHRoaXMucGY9dCx0aGlzLktlPW51bGwsdGhpcy5NdD0hMH1hZGQodCl7cmV0dXJuIERlYnVnJiZVLmUodCxQYXRoU2VnbWVudCxQYXRoRmlndXJlLFwiYWRkXCIpLHRoaXMucGYuYWRkKHQpLHRoaXMuS2U9bnVsbCx0aGlzfWVTKHQsaSxlKXtjb25zdCBzPXRoaXM7bGV0IG49cy5zdGFydFgsbz1zLnN0YXJ0WSxyPW4sbD1vO2NvbnN0IGg9cy5zZWdtZW50cy5oLGY9aC5sZW5ndGg7Zm9yKGxldCBhPTA7YTxmO2ErKyl7Y29uc3QgYz1oW2FdO3N3aXRjaChjLnR5cGUpe2Nhc2UgMTpyPWMuZW5kWCxsPWMuZW5kWSxuPWMuZW5kWCxvPWMuZW5kWTticmVhaztjYXNlIDI6aWYoR2VvLnppKG4sbyxjLmVuZFgsYy5lbmRZLGUsdCxpKSlyZXR1cm4hMDtuPWMuZW5kWCxvPWMuZW5kWTticmVhaztjYXNlIDM6aWYoR2VvLkZ3KG4sbyxjLnBvaW50MVgsYy5wb2ludDFZLGMucG9pbnQyWCxjLnBvaW50MlksYy5lbmRYLGMuZW5kWSwuNSx0LGksZSkpcmV0dXJuITA7bj1jLmVuZFgsbz1jLmVuZFk7YnJlYWs7Y2FzZSA0OmlmKEdlby5RayhuLG8sYy5wb2ludDFYLGMucG9pbnQxWSxjLmVuZFgsYy5lbmRZLC41LHQsaSxlKSlyZXR1cm4hMDtuPWMuZW5kWCxvPWMuZW5kWTticmVhaztjYXNlIDU6Y2FzZSA2OmNvbnN0IHU9Yy50eXBlPT09NT9jLkNvKHMpOmMuSGgocyxuLG8pLGQ9dS5sZW5ndGgsbT1jLnR5cGU9PT01P2MuY2VudGVyWDpjLmVuZFgsZz1jLnR5cGU9PT01P2MuY2VudGVyWTpjLmVuZFk7aWYoZD09PTApe2lmKEdlby56aShuLG8sbSxnLGUsdCxpKSlyZXR1cm4hMDtuPW0sbz1nO2JyZWFrfWxldCBwPW51bGw7Zm9yKGxldCB3PTA7dzxkO3crKylpZihwPXVbd10sdz09PTAmJkdlby56aShuLG8scFswXSxwWzFdLGUsdCxpKXx8R2VvLkZ3KHBbMF0scFsxXSxwWzJdLHBbM10scFs0XSxwWzVdLHBbNl0scFs3XSwuNSx0LGksZSkpcmV0dXJuITA7cCE9PW51bGwmJihuPXBbNl0sbz1wWzddKTticmVhaztkZWZhdWx0OlUubihcIlVua25vd24gU2VnbWVudCB0eXBlOiBcIitjLnR5cGUpfWlmKGMuaXNDbG9zZWQmJihuIT09cnx8byE9PWwpJiZHZW8uemkobixvLHIsbCxlLHQsaSkpcmV0dXJuITB9cmV0dXJuITF9fXZhciBTZWdtZW50VHlwZT0oeT0+KHlbeS5Nb3ZlPTFdPVwiTW92ZVwiLHlbeS5MaW5lPTJdPVwiTGluZVwiLHlbeS5CZXppZXI9M109XCJCZXppZXJcIix5W3kuUXVhZHJhdGljQmV6aWVyPTRdPVwiUXVhZHJhdGljQmV6aWVyXCIseVt5LkFyYz01XT1cIkFyY1wiLHlbeS5TdmdBcmM9Nl09XCJTdmdBcmNcIix5KSkoU2VnbWVudFR5cGV8fHt9KTtjbGFzcyBQYXRoU2VnbWVudHskO2w7ZWU7c2U7bG47a2w7U2w7cHI7enM7Y29uc3RydWN0b3IodCxpLGUscyxuLG8scixsKXtpZihHU2V0LkppKHRoaXMpLHQ9PT12b2lkIDA/dD0yOkRlYnVnJiZVLmoodCxTZWdtZW50VHlwZSxcIlNlZ21lbnRUeXBlXCIpLHRoaXMuJD10LHRoaXMubD0yLGkhPT12b2lkIDA/KERlYnVnJiZVLnIoaSxQYXRoU2VnbWVudCxcImV4XCIpLHRoaXMuZWU9aSk6dGhpcy5lZT0wLGUhPT12b2lkIDA/KERlYnVnJiZVLnIoZSxQYXRoU2VnbWVudCxcImV5XCIpLHRoaXMuc2U9ZSk6dGhpcy5zZT0wLHM9PT12b2lkIDAmJihzPTApLG49PT12b2lkIDAmJihuPTApLG89PT12b2lkIDAmJihvPTApLHI9PT12b2lkIDAmJihyPTApLHQ9PT02KXtsZXQgaD1vO2g9aCUzNjAsaDwwJiYoaCs9MzYwKSx0aGlzLmxuPWgsdGhpcy5rbD0wLERlYnVnJiZVLnIocyxQYXRoU2VnbWVudCxcIngxXCIpLHRoaXMuU2w9TWF0aC5tYXgocywwKSxEZWJ1ZyYmVS5yKG4sUGF0aFNlZ21lbnQsXCJ5MVwiKSx0aGlzLnByPU1hdGgubWF4KG4sMCksdHlwZW9mIHI9PVwiYm9vbGVhblwiP3ImJih0aGlzLmlzTGFyZ2VBcmM9ITApOnR5cGVvZiByPT1cIm51bWJlclwiJiZyJiYodGhpcy5pc0xhcmdlQXJjPSEwKSxsJiYodGhpcy5pc0Nsb2Nrd2lzZUFyYz0hMCl9ZWxzZSBEZWJ1ZyYmVS5yKHMsUGF0aFNlZ21lbnQsXCJ4MVwiKSx0aGlzLmxuPXMsRGVidWcmJlUucihuLFBhdGhTZWdtZW50LFwieTFcIiksdGhpcy5rbD1uLERlYnVnJiZVLnIobyxQYXRoU2VnbWVudCxcIngyXCIpLHQ9PT01JiYobz1NYXRoLm1heChvLDApKSx0aGlzLlNsPW8sdHlwZW9mIHI9PVwibnVtYmVyXCI/KHQ9PT01JiYocj1NYXRoLm1heChyLDApKSx0aGlzLnByPXIpOnRoaXMucHI9MDt0aGlzLnpzPW51bGx9Y29weSgpe2NvbnN0IHQ9bmV3IFBhdGhTZWdtZW50O3JldHVybiB0LiQ9dGhpcy4kLHQubD10aGlzLmwmLTIsdC5lZT10aGlzLmVlLHQuc2U9dGhpcy5zZSx0LmxuPXRoaXMubG4sdC5rbD10aGlzLmtsLHQuU2w9dGhpcy5TbCx0LnByPXRoaXMucHIsdH1lcXVhbHNBcHByb3godCl7aWYoISh0IGluc3RhbmNlb2YgUGF0aFNlZ21lbnQpfHx0aGlzLnR5cGUhPT10LnR5cGV8fHRoaXMuaXNDbG9zZWQhPT10LmlzQ2xvc2VkKXJldHVybiExO3N3aXRjaCh0aGlzLnR5cGUpe2Nhc2UgMTpjYXNlIDI6cmV0dXJuIEdlby5nKHRoaXMuZW5kWCx0LmVuZFgpJiZHZW8uZyh0aGlzLmVuZFksdC5lbmRZKTtjYXNlIDM6cmV0dXJuIEdlby5nKHRoaXMuZW5kWCx0LmVuZFgpJiZHZW8uZyh0aGlzLmVuZFksdC5lbmRZKSYmR2VvLmcodGhpcy5wb2ludDFYLHQucG9pbnQxWCkmJkdlby5nKHRoaXMucG9pbnQxWSx0LnBvaW50MVkpJiZHZW8uZyh0aGlzLnBvaW50MlgsdC5wb2ludDJYKSYmR2VvLmcodGhpcy5wb2ludDJZLHQucG9pbnQyWSk7Y2FzZSA0OnJldHVybiBHZW8uZyh0aGlzLmVuZFgsdC5lbmRYKSYmR2VvLmcodGhpcy5lbmRZLHQuZW5kWSkmJkdlby5nKHRoaXMucG9pbnQxWCx0LnBvaW50MVgpJiZHZW8uZyh0aGlzLnBvaW50MVksdC5wb2ludDFZKTtjYXNlIDU6cmV0dXJuIEdlby5nKHRoaXMuc3RhcnRBbmdsZSx0LnN0YXJ0QW5nbGUpJiZHZW8uZyh0aGlzLnN3ZWVwQW5nbGUsdC5zd2VlcEFuZ2xlKSYmR2VvLmcodGhpcy5jZW50ZXJYLHQuY2VudGVyWCkmJkdlby5nKHRoaXMuY2VudGVyWSx0LmNlbnRlclkpJiZHZW8uZyh0aGlzLnJhZGl1c1gsdC5yYWRpdXNYKSYmR2VvLmcodGhpcy5yYWRpdXNZLHQucmFkaXVzWSk7Y2FzZSA2OnJldHVybiB0aGlzLmlzQ2xvY2t3aXNlQXJjPT09dC5pc0Nsb2Nrd2lzZUFyYyYmdGhpcy5pc0xhcmdlQXJjPT09dC5pc0xhcmdlQXJjJiZHZW8uZyh0aGlzLnhBeGlzUm90YXRpb24sdC54QXhpc1JvdGF0aW9uKSYmR2VvLmcodGhpcy5lbmRYLHQuZW5kWCkmJkdlby5nKHRoaXMuZW5kWSx0LmVuZFkpJiZHZW8uZyh0aGlzLnJhZGl1c1gsdC5yYWRpdXNYKSYmR2VvLmcodGhpcy5yYWRpdXNZLHQucmFkaXVzWSk7ZGVmYXVsdDpyZXR1cm4hMX19YWkodCl7dCBpbiBTZWdtZW50VHlwZT90aGlzLnR5cGU9dDpVLmhyKHRoaXMsdCl9dG9TdHJpbmcodCl7dD09PXZvaWQgMCYmKHQ9LTEpO2NvbnN0IGk9cz0+cz09PTA/XCIwXCI6cy50b0ZpeGVkKHQpO2xldCBlPVwiXCI7c3dpdGNoKHRoaXMudHlwZSl7Y2FzZSAxOnQ8MD9lPVwiTVwiK3RoaXMuZW5kWC50b1N0cmluZygpK1wiIFwiK3RoaXMuZW5kWS50b1N0cmluZygpOmU9XCJNXCIraSh0aGlzLmVuZFgpK1wiIFwiK2kodGhpcy5lbmRZKTticmVhaztjYXNlIDI6dDwwP2U9XCJMXCIrdGhpcy5lbmRYLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5lbmRZLnRvU3RyaW5nKCk6ZT1cIkxcIitpKHRoaXMuZW5kWCkrXCIgXCIraSh0aGlzLmVuZFkpO2JyZWFrO2Nhc2UgMzp0PDA/ZT1cIkNcIit0aGlzLnBvaW50MVgudG9TdHJpbmcoKStcIiBcIit0aGlzLnBvaW50MVkudG9TdHJpbmcoKStcIiBcIit0aGlzLnBvaW50MlgudG9TdHJpbmcoKStcIiBcIit0aGlzLnBvaW50MlkudG9TdHJpbmcoKStcIiBcIit0aGlzLmVuZFgudG9TdHJpbmcoKStcIiBcIit0aGlzLmVuZFkudG9TdHJpbmcoKTplPVwiQ1wiK2kodGhpcy5wb2ludDFYKStcIiBcIitpKHRoaXMucG9pbnQxWSkrXCIgXCIraSh0aGlzLnBvaW50MlgpK1wiIFwiK2kodGhpcy5wb2ludDJZKStcIiBcIitpKHRoaXMuZW5kWCkrXCIgXCIraSh0aGlzLmVuZFkpO2JyZWFrO2Nhc2UgNDp0PDA/ZT1cIlFcIit0aGlzLnBvaW50MVgudG9TdHJpbmcoKStcIiBcIit0aGlzLnBvaW50MVkudG9TdHJpbmcoKStcIiBcIit0aGlzLmVuZFgudG9TdHJpbmcoKStcIiBcIit0aGlzLmVuZFkudG9TdHJpbmcoKTplPVwiUVwiK2kodGhpcy5wb2ludDFYKStcIiBcIitpKHRoaXMucG9pbnQxWSkrXCIgXCIraSh0aGlzLmVuZFgpK1wiIFwiK2kodGhpcy5lbmRZKTticmVhaztjYXNlIDU6dDwwP2U9XCJCXCIrdGhpcy5zdGFydEFuZ2xlLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5zd2VlcEFuZ2xlLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5jZW50ZXJYLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5jZW50ZXJZLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5yYWRpdXNYLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5yYWRpdXNZLnRvU3RyaW5nKCk6ZT1cIkJcIitpKHRoaXMuc3RhcnRBbmdsZSkrXCIgXCIraSh0aGlzLnN3ZWVwQW5nbGUpK1wiIFwiK2kodGhpcy5jZW50ZXJYKStcIiBcIitpKHRoaXMuY2VudGVyWSkrXCIgXCIraSh0aGlzLnJhZGl1c1gpK1wiIFwiK2kodGhpcy5yYWRpdXNZKTticmVhaztjYXNlIDY6dDwwP2U9XCJBXCIrdGhpcy5yYWRpdXNYLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5yYWRpdXNZLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy54QXhpc1JvdGF0aW9uLnRvU3RyaW5nKCkrXCIgXCIrKHRoaXMuaXNMYXJnZUFyYz8xOjApK1wiIFwiKyh0aGlzLmlzQ2xvY2t3aXNlQXJjPzE6MCkrXCIgXCIrdGhpcy5lbmRYLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5lbmRZLnRvU3RyaW5nKCk6ZT1cIkFcIitpKHRoaXMucmFkaXVzWCkrXCIgXCIraSh0aGlzLnJhZGl1c1kpK1wiIFwiK2kodGhpcy54QXhpc1JvdGF0aW9uKStcIiBcIisodGhpcy5pc0xhcmdlQXJjPzE6MCkrXCIgXCIrKHRoaXMuaXNDbG9ja3dpc2VBcmM/MTowKStcIiBcIitpKHRoaXMuZW5kWCkrXCIgXCIraSh0aGlzLmVuZFkpO2JyZWFrO2RlZmF1bHQ6ZT1TZWdtZW50VHlwZVt0aGlzLnR5cGVdfXJldHVybiBlKyh0aGlzLmlzQ2xvc2VkP1wielwiOlwiXCIpfXN0YXRpYyBNb3ZlPTE7c3RhdGljIExpbmU9MjtzdGF0aWMgQmV6aWVyPTM7c3RhdGljIFF1YWRyYXRpY0Jlemllcj00O3N0YXRpYyBBcmM9NTtzdGF0aWMgU3ZnQXJjPTY7Z2V0IGYoKXtyZXR1cm4odGhpcy5sJjEpIT09MH1zZXQgZih0KXt0P3RoaXMubHw9MTp0aGlzLmwmPS0yfWdldCBNdCgpe3JldHVybih0aGlzLmwmMikhPT0wfXNldCBNdCh0KXt0P3RoaXMubHw9Mjp0aGlzLmwmPS0zfXAoKXtyZXR1cm4gdGhpcy5mPSEwLHRoaXN9Y2xvc2UoKXtyZXR1cm4gdGhpcy5pc0Nsb3NlZD0hMCx0aGlzfUNvKHQpe2lmKHRoaXMuenMhPT1udWxsJiZ0Lk10PT09ITEpcmV0dXJuIHRoaXMuenM7Y29uc3QgaT10aGlzLnJhZGl1c1g7bGV0IGU9dGhpcy5yYWRpdXNZO2lmKGU9PT12b2lkIDAmJihlPWkpLGk9PT0wfHxlPT09MClyZXR1cm4gdGhpcy56cz1bXSx0aGlzLnpzO2NvbnN0IHM9dGhpcy5sbixuPXRoaXMua2wsbz1HZW8uT0MoMCwwLGk8ZT9pOmUsdGhpcy5zdGFydEFuZ2xlLHRoaXMuc3RhcnRBbmdsZSt0aGlzLnN3ZWVwQW5nbGUsITEpO2lmKGkhPT1lKXtjb25zdCBsPVRyYW5zZm9ybS5hKCk7bC5WaSgpLGk8ZT9sLm90KDEsZS9pKTpsLm90KGkvZSwxKSxHZW9tZXRyeS5YQyhvLGwpLFRyYW5zZm9ybS5vKGwpfWNvbnN0IHI9by5sZW5ndGg7Zm9yKGxldCBsPTA7bDxyO2wrKyl7Y29uc3QgaD1vW2xdO2hbMF0rPXMsaFsxXSs9bixoWzJdKz1zLGhbM10rPW4saFs0XSs9cyxoWzVdKz1uLGhbNl0rPXMsaFs3XSs9bn1yZXR1cm4gdGhpcy56cz1vLHRoaXMuenN9SGgodCxpLGUpe2lmKHRoaXMuenMhPT1udWxsJiZ0Lk10PT09ITEpcmV0dXJuIHRoaXMuenM7aWYodGhpcy5yYWRpdXNYPT09MHx8dGhpcy5yYWRpdXNZPT09MClyZXR1cm4gdGhpcy56cz1bXSx0aGlzLnpzO2NvbnN0IHM9aSxuPWU7bGV0IG89dGhpcy5TbCxyPXRoaXMucHI7bz09PTAmJihvPTFlLTQpLHI9PT0wJiYocj0xZS00KTtjb25zdCBsPXRoaXMubG4qKE1hdGguUEkvMTgwKSxoPXRoaXMuaXNMYXJnZUFyYyxmPXRoaXMuaXNDbG9ja3dpc2VBcmMsYT10aGlzLmVlLGM9dGhpcy5zZSx1PU1hdGguY29zKGwpLGQ9TWF0aC5zaW4obCksbT11KihzLWEpLzIrZCoobi1jKS8yLGc9LWQqKHMtYSkvMit1KihuLWMpLzIscD1tKm0vKG8qbykrZypnLyhyKnIpO3A+MSYmKG8qPU1hdGguc3FydChwKSxyKj1NYXRoLnNxcnQocCkpO2xldCB3PShoPT09Zj8tMToxKSpNYXRoLnNxcnQoKG8qbypyKnItbypvKmcqZy1yKnIqbSptKS8obypvKmcqZytyKnIqbSptKSk7aXNOYU4odykmJih3PTApO2xldCB4PXcqbypnL3Isaz13Ki1yKm0vbztpc05hTih4KSYmKHg9MCksaXNOYU4oaykmJihrPTApO2NvbnN0IGI9KHMrYSkvMit1KngtZCprLFM9KG4rYykvMitkKngrdSprLE09KHosVik9Pk1hdGguc3FydCh6KnorVipWKSxBPSh6LFYsSCxXKT0+KHoqSCtWKlcpLyhNKHosVikqTShILFcpKSxDPSh6LFYsSCxXKT0+KHoqVzxWKkg/LTE6MSkqTWF0aC5hY29zKEEoeixWLEgsVykpLFA9QygxLDAsKG0teCkvbywoZy1rKS9yKSxOPShtLXgpL28sVD0oZy1rKS9yLEw9KC1tLXgpL28sRD0oLWctaykvcjtsZXQgRj1DKE4sVCxMLEQpO2NvbnN0IEk9QShOLFQsTCxEKTtJPD0tMT9GPU1hdGguUEk6ST49MSYmKEY9MCksIWYmJkY+MCYmKEY9Ri0yKk1hdGguUEkpLGYmJkY8MCYmKEY9RisyKk1hdGguUEkpO2NvbnN0IFI9bz5yP286cixPPW8+cj8xOm8vcixZPW8+cj9yL286MSxLPUdlby5PQygwLDAsUixQLFArRiwhMCksQj1UcmFuc2Zvcm0uYSgpO3JldHVybiBCLlZpKCksQi5CcyhiLFMpLEIubXModGhpcy5sbiwwLDApLEIub3QoTyxZKSxHZW9tZXRyeS5YQyhLLEIpLFRyYW5zZm9ybS5vKEIpLHRoaXMuenM9Syx0aGlzLnpzfWdldCBpc0Nsb3NlZCgpe3JldHVybih0aGlzLmwmOCkhPT0wfXNldCBpc0Nsb3NlZCh0KXt0aGlzLmlzQ2xvc2VkIT09dCYmKHQ/dGhpcy5sfD04OnRoaXMubCY9LTksdGhpcy5NdD0hMCl9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy4kfXNldCB0eXBlKHQpe0RlYnVnJiZVLmoodCxTZWdtZW50VHlwZSxcIlNlZ21lbnRUeXBlXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCksdGhpcy4kPXQsdGhpcy5NdD0hMH1nZXQgZW5kWCgpe3JldHVybiB0aGlzLmVlfXNldCBlbmRYKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcImVuZFhcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLmVlPXQsdGhpcy5NdD0hMH1nZXQgZW5kWSgpe3JldHVybiB0aGlzLnNlfXNldCBlbmRZKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcImVuZFlcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLnNlPXQsdGhpcy5NdD0hMH1nZXQgcG9pbnQxWCgpe3JldHVybiB0aGlzLmxufXNldCBwb2ludDFYKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInBvaW50MVhcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLmxuPXQsdGhpcy5NdD0hMH1nZXQgcG9pbnQxWSgpe3JldHVybiB0aGlzLmtsfXNldCBwb2ludDFZKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInBvaW50MVlcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLmtsPXQsdGhpcy5NdD0hMH1nZXQgcG9pbnQyWCgpe3JldHVybiB0aGlzLlNsfXNldCBwb2ludDJYKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInBvaW50MlhcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLlNsPXQsdGhpcy5NdD0hMH1nZXQgcG9pbnQyWSgpe3JldHVybiB0aGlzLnByfXNldCBwb2ludDJZKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInBvaW50MllcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLnByPXQsdGhpcy5NdD0hMH1nZXQgY2VudGVyWCgpe3JldHVybiB0aGlzLmxufXNldCBjZW50ZXJYKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcImNlbnRlclhcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLmxuPXQsdGhpcy5NdD0hMH1nZXQgY2VudGVyWSgpe3JldHVybiB0aGlzLmtsfXNldCBjZW50ZXJZKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcImNlbnRlcllcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLmtsPXQsdGhpcy5NdD0hMH1nZXQgcmFkaXVzWCgpe3JldHVybiB0aGlzLlNsfXNldCByYWRpdXNYKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInJhZGl1c1hcIiksdDwwJiZVLlUodCxcIj49IHplcm9cIixQYXRoU2VnbWVudCxcInJhZGl1c1hcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLlNsPXQsdGhpcy5NdD0hMH1nZXQgcmFkaXVzWSgpe3JldHVybiB0aGlzLnByfXNldCByYWRpdXNZKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInJhZGl1c1lcIiksdDwwJiZVLlUodCxcIj49IHplcm9cIixQYXRoU2VnbWVudCxcInJhZGl1c1lcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0aGlzLnByPXQsdGhpcy5NdD0hMH1nZXQgc3RhcnRBbmdsZSgpe3JldHVybiB0aGlzLmVlfXNldCBzdGFydEFuZ2xlKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInN0YXJ0QW5nbGVcIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0PXQlMzYwLHQ8MCYmKHQrPTM2MCksdGhpcy5lZT10LHRoaXMuTXQ9ITB9Z2V0IHN3ZWVwQW5nbGUoKXtyZXR1cm4gdGhpcy5zZX1zZXQgc3dlZXBBbmdsZSh0KXtEZWJ1ZyYmVS5yKHQsUGF0aFNlZ21lbnQsXCJzd2VlcEFuZ2xlXCIpLHRoaXMuZiYmVS5EKHRoaXMsdCksdD4zNjAmJih0PTM2MCksdDwtMzYwJiYodD0tMzYwKSx0aGlzLnNlPXQsdGhpcy5NdD0hMH1nZXQgaXNDbG9ja3dpc2VBcmMoKXtyZXR1cm4odGhpcy5sJjQpIT09MH1zZXQgaXNDbG9ja3dpc2VBcmModCl7dGhpcy5mJiZVLkQodGhpcyx0KSx0P3RoaXMubHw9NDp0aGlzLmwmPS01LHRoaXMuTXQ9ITB9Z2V0IGlzTGFyZ2VBcmMoKXtyZXR1cm4odGhpcy5sJjE2KSE9PTB9c2V0IGlzTGFyZ2VBcmModCl7dGhpcy5mJiZVLkQodGhpcyx0KSx0P3RoaXMubHw9MTY6dGhpcy5sJj0tMTcsdGhpcy5NdD0hMH1nZXQgeEF4aXNSb3RhdGlvbigpe3JldHVybiB0aGlzLmxufXNldCB4QXhpc1JvdGF0aW9uKHQpe0RlYnVnJiZVLnIodCxQYXRoU2VnbWVudCxcInhBeGlzUm90YXRpb25cIiksdGhpcy5mJiZVLkQodGhpcyx0KSx0PXQlMzYwLHQ8MCYmKHQrPTM2MCksdGhpcy5sbj10LHRoaXMuTXQ9ITB9fWNsYXNzIElucHV0RXZlbnR7QztWdzt6dztRZztfZzt0bTtpbTtlbTtzbTtubTtvbTtybTtsbTtobTtBbzthbTtmbTtjbTtOZTtjb25zdHJ1Y3Rvcigpe3RoaXMuQz1udWxsLHRoaXMuVnc9bmV3IFBvaW50KDAsMCkucCgpLHRoaXMuenc9bmV3IFBvaW50KDAsMCkucCgpLHRoaXMuUWc9MCx0aGlzLl9nPTAsdGhpcy50bT0xLHRoaXMuaW09XCJcIix0aGlzLmVtPVwiXCIsdGhpcy5zbT0hMSx0aGlzLm5tPSExLHRoaXMub209MCx0aGlzLnJtPTAsdGhpcy5sbT0hMSx0aGlzLmhtPSExLHRoaXMuQW89ITEsdGhpcy5hbT1udWxsLHRoaXMuZm09MCx0aGlzLmNtPW51bGwsdGhpcy5OZT1udWxsfWNvcHkoKXtjb25zdCB0PW5ldyBJbnB1dEV2ZW50O3JldHVybiB0aGlzLmNsb25lKHQpfWNsb25lKHQpe3JldHVybiB0LkM9dGhpcy5DLHQuVncuYyh0aGlzLnZpZXdQb2ludCksdC56dy5jKHRoaXMuZG9jdW1lbnRQb2ludCksdC5RZz10aGlzLlFnLHQuX2c9dGhpcy5fZyx0LnRtPXRoaXMudG0sdC5pbT10aGlzLmltLHQuZW09dGhpcy5lbSx0LnNtPXRoaXMuc20sdC5ubT10aGlzLm5tLHQub209dGhpcy5vbSx0LnJtPXRoaXMucm0sdC5sbT10aGlzLmxtLHQuaG09dGhpcy5obSx0LkFvPXRoaXMuQW8sdC5hbT10aGlzLmFtLHQuZm09dGhpcy5mbSx0LmNtPXRoaXMuY20sdC5OZT10aGlzLk5lLHR9dG9TdHJpbmcoKXtsZXQgdD1cIl5cIjtyZXR1cm4gdGhpcy5tb2RpZmllcnMhPT0wJiYodCs9XCJNOlwiK3RoaXMubW9kaWZpZXJzKSx0aGlzLmJ1dHRvbiE9PTAmJih0Kz1cIkI6XCIrdGhpcy5idXR0b24pLHRoaXMua2V5IT09XCJcIiYmKHQrPVwiSzpcIit0aGlzLmtleSksdGhpcy5jbGlja0NvdW50IT09MCYmKHQrPVwiQzpcIit0aGlzLmNsaWNrQ291bnQpLHRoaXMuZGVsdGEhPT0wJiYodCs9XCJEOlwiK3RoaXMuZGVsdGEpLHRoaXMuaGFuZGxlZCYmKHQrPVwiaFwiKSx0aGlzLmJ1YmJsZXMmJih0Kz1cImJcIiksdGhpcy5kb2N1bWVudFBvaW50IT09bnVsbCYmKHQrPVwiQFwiK3RoaXMuZG9jdW1lbnRQb2ludC50b1N0cmluZygpKSx0fWdldCBkaWFncmFtKCl7cmV0dXJuIHRoaXMuQ31zZXQgZGlhZ3JhbSh0KXt0aGlzLkM9dH1nZXQgdmlld1BvaW50KCl7cmV0dXJuIHRoaXMuVnd9c2V0IHZpZXdQb2ludCh0KXtEZWJ1ZyYmVS5lKHQsUG9pbnQsSW5wdXRFdmVudCxcInZpZXdQb2ludFwiKSx0aGlzLlZ3LmModCl9Z2V0IGRvY3VtZW50UG9pbnQoKXtyZXR1cm4gdGhpcy56d31zZXQgZG9jdW1lbnRQb2ludCh0KXtEZWJ1ZyYmVS5lKHQsUG9pbnQsSW5wdXRFdmVudCxcImRvY3VtZW50UG9pbnRcIiksdGhpcy56dy5jKHQpfWdldE11bHRpVG91Y2hWaWV3UG9pbnQodCxpKXtjb25zdCBlPXRoaXMuZGlhZ3JhbTtyZXR1cm4gZT09PW51bGx8fGUuR0ModGhpcy5ldmVudCx0LGkpLGl9Z2V0TXVsdGlUb3VjaERvY3VtZW50UG9pbnQodCxpKXtjb25zdCBlPXRoaXMuZGlhZ3JhbTtyZXR1cm4gZT09PW51bGx8fChlLkdDKHRoaXMuZXZlbnQsdCxpKSxpLmMoZS50cmFuc2Zvcm1WaWV3VG9Eb2MoaSkpKSxpfWdldCBtb2RpZmllcnMoKXtyZXR1cm4gdGhpcy5RZ31zZXQgbW9kaWZpZXJzKHQpe3RoaXMuUWc9dH1nZXQgYnV0dG9uKCl7cmV0dXJuIHRoaXMuX2d9c2V0IGJ1dHRvbih0KXtpZih0aGlzLl9nPXQsdGhpcy5ldmVudD09PW51bGwpc3dpdGNoKHQpe2Nhc2UgMDp0aGlzLmJ1dHRvbnM9MTtyZXR1cm47Y2FzZSAxOnRoaXMuYnV0dG9ucz00O3JldHVybjtjYXNlIDI6dGhpcy5idXR0b25zPTI7cmV0dXJufX1nZXQgYnV0dG9ucygpe3JldHVybiB0aGlzLnRtfXNldCBidXR0b25zKHQpe3RoaXMudG09dH1nZXQga2V5KCl7cmV0dXJuIHRoaXMuaW19c2V0IGtleSh0KXt0aGlzLmltPXR9Z2V0IGNvZGUoKXtyZXR1cm4gdGhpcy5lbX1zZXQgY29kZSh0KXt0aGlzLmVtPXR9Z2V0IGRvd24oKXtyZXR1cm4gdGhpcy5zbX1zZXQgZG93bih0KXt0aGlzLnNtPXR9Z2V0IHVwKCl7cmV0dXJuIHRoaXMubm19c2V0IHVwKHQpe3RoaXMubm09dH1nZXQgY2xpY2tDb3VudCgpe3JldHVybiB0aGlzLm9tfXNldCBjbGlja0NvdW50KHQpe3RoaXMub209dH1nZXQgZGVsdGEoKXtyZXR1cm4gdGhpcy5ybX1zZXQgZGVsdGEodCl7dGhpcy5ybT10fWdldCBpc011bHRpVG91Y2goKXtyZXR1cm4gdGhpcy5sbX1zZXQgaXNNdWx0aVRvdWNoKHQpe3RoaXMubG09dH1nZXQgaGFuZGxlZCgpe3JldHVybiB0aGlzLmhtfXNldCBoYW5kbGVkKHQpe3RoaXMuaG09dH1nZXQgYnViYmxlcygpe3JldHVybiB0aGlzLkFvfXNldCBidWJibGVzKHQpe3RoaXMuQW89dH1nZXQgZXZlbnQoKXtyZXR1cm4gdGhpcy5hbX1zZXQgZXZlbnQodCl7dGhpcy5hbT10fWdldCBpc1RvdWNoRXZlbnQoKXtjb25zdCB0PXRoaXMuZXZlbnQ7cmV0dXJuIHQ9PT1udWxsPyExOnQucG9pbnRlclR5cGU9PT1cInRvdWNoXCJ8fHQucG9pbnRlclR5cGU9PT1cInBlblwifWdldCB0aW1lc3RhbXAoKXtyZXR1cm4gdGhpcy5mbX1zZXQgdGltZXN0YW1wKHQpe3RoaXMuZm09dH1nZXQgdGFyZ2V0RGlhZ3JhbSgpe3JldHVybiB0aGlzLmNtfXNldCB0YXJnZXREaWFncmFtKHQpe3RoaXMuY209dH1nZXQgdGFyZ2V0T2JqZWN0KCl7cmV0dXJuIHRoaXMuTmV9c2V0IHRhcmdldE9iamVjdCh0KXt0aGlzLk5lPXR9Z2V0IGNvbnRyb2woKXtyZXR1cm4odGhpcy5tb2RpZmllcnMmMSkhPT0wfXNldCBjb250cm9sKHQpe3RoaXMubW9kaWZpZXJzPXQ/dGhpcy5tb2RpZmllcnN8MTp0aGlzLm1vZGlmaWVycyYtMn1nZXQgc2hpZnQoKXtyZXR1cm4odGhpcy5tb2RpZmllcnMmNCkhPT0wfXNldCBzaGlmdCh0KXt0aGlzLm1vZGlmaWVycz10P3RoaXMubW9kaWZpZXJzfDQ6dGhpcy5tb2RpZmllcnMmLTV9Z2V0IGFsdCgpe3JldHVybih0aGlzLm1vZGlmaWVycyYyKSE9PTB9c2V0IGFsdCh0KXt0aGlzLm1vZGlmaWVycz10P3RoaXMubW9kaWZpZXJzfDI6dGhpcy5tb2RpZmllcnMmLTN9Z2V0IG1ldGEoKXtyZXR1cm4odGhpcy5tb2RpZmllcnMmOCkhPT0wfXNldCBtZXRhKHQpe3RoaXMubW9kaWZpZXJzPXQ/dGhpcy5tb2RpZmllcnN8ODp0aGlzLm1vZGlmaWVycyYtOX1nZXQgbGVmdCgpe2NvbnN0IHQ9dGhpcy5ldmVudDtyZXR1cm4gdCE9PW51bGwmJih0LnR5cGU9PT1cIm1vdXNlZG93blwifHx0LnR5cGU9PT1cIm1vdXNldXBcInx8dC50eXBlPT09XCJwb2ludGVyZG93blwifHx0LnR5cGU9PT1cInBvaW50ZXJ1cFwiKT90aGlzLmJ1dHRvbj09PTA6KHRoaXMuYnV0dG9ucyYxKSE9PTB9c2V0IGxlZnQodCl7dD90aGlzLmJ1dHRvbnN8PTE6dGhpcy5idXR0b25zJj0tMn1nZXQgcmlnaHQoKXtjb25zdCB0PXRoaXMuZXZlbnQ7cmV0dXJuIHQhPT1udWxsJiYodC50eXBlPT09XCJtb3VzZWRvd25cInx8dC50eXBlPT09XCJtb3VzZXVwXCJ8fHQudHlwZT09PVwicG9pbnRlcmRvd25cInx8dC50eXBlPT09XCJwb2ludGVydXBcIik/dGhpcy5idXR0b249PT0yOih0aGlzLmJ1dHRvbnMmMikhPT0wfXNldCByaWdodCh0KXt0P3RoaXMuYnV0dG9uc3w9Mjp0aGlzLmJ1dHRvbnMmPS0zfWdldCBtaWRkbGUoKXtjb25zdCB0PXRoaXMuZXZlbnQ7cmV0dXJuIHQhPT1udWxsJiYodC50eXBlPT09XCJtb3VzZWRvd25cInx8dC50eXBlPT09XCJtb3VzZXVwXCJ8fHQudHlwZT09PVwicG9pbnRlcmRvd25cInx8dC50eXBlPT09XCJwb2ludGVydXBcIik/dGhpcy5idXR0b249PT0xOih0aGlzLmJ1dHRvbnMmNCkhPT0wfXNldCBtaWRkbGUodCl7dD90aGlzLmJ1dHRvbnN8PTQ6dGhpcy5idXR0b25zJj0tNX1nZXQgY29tbWFuZEtleSgpe2NvbnN0IHQ9dGhpcy5jb2RlLGk9dGhpcy5rZXk7cmV0dXJuXCJjeHZ5emFnQ1hWWVpBR1wiLmluY2x1ZGVzKGkpP2kudG9Mb3dlckNhc2UoKTp0PT09XCJLZXlDXCI/XCJjXCI6dD09PVwiS2V5WFwiP1wieFwiOnQ9PT1cIktleVZcIj9cInZcIjp0PT09XCJLZXlZXCI/XCJ5XCI6dD09PVwiS2V5WlwiP1wielwiOnQ9PT1cIktleUFcIj9cImFcIjp0PT09XCJLZXlHXCI/XCJnXCI6dCE9PVwiXCI/dDppfX1jbGFzcyBEaWFncmFtRXZlbnR7QztMdDt1bTtkbTtjb25zdHJ1Y3Rvcigpe3RoaXMuQz1udWxsLHRoaXMuTHQ9XCJcIix0aGlzLnVtPW51bGwsdGhpcy5kbT1udWxsfWNvcHkoKXtjb25zdCB0PW5ldyBEaWFncmFtRXZlbnQ7cmV0dXJuIHQuQz10aGlzLkMsdC5MdD10aGlzLkx0LHQudW09dGhpcy51bSx0LmRtPXRoaXMuZG0sdH10b1N0cmluZygpe2xldCB0PVwiKlwiK3RoaXMubmFtZTtyZXR1cm4gdGhpcy5zdWJqZWN0IT09bnVsbCYmKHQrPVwiOlwiK3RoaXMuc3ViamVjdC50b1N0cmluZygpKSx0aGlzLnBhcmFtZXRlciE9PW51bGwmJih0Kz1cIihcIit0aGlzLnBhcmFtZXRlci50b1N0cmluZygpK1wiKVwiKSx0fWdldCBkaWFncmFtKCl7cmV0dXJuIHRoaXMuQ31zZXQgZGlhZ3JhbSh0KXt0aGlzLkM9dH1nZXQgbmFtZSgpe3JldHVybiB0aGlzLkx0fXNldCBuYW1lKHQpe3RoaXMuTHQ9dH1nZXQgc3ViamVjdCgpe3JldHVybiB0aGlzLnVtfXNldCBzdWJqZWN0KHQpe3RoaXMudW09dH1nZXQgcGFyYW1ldGVyKCl7cmV0dXJuIHRoaXMuZG19c2V0IHBhcmFtZXRlcih0KXt0aGlzLmRtPXR9fXZhciBDaGFuZ2VUeXBlPSh5PT4oeVt5LlRyYW5zYWN0aW9uPTFdPVwiVHJhbnNhY3Rpb25cIix5W3kuUHJvcGVydHk9Ml09XCJQcm9wZXJ0eVwiLHlbeS5JbnNlcnQ9M109XCJJbnNlcnRcIix5W3kuUmVtb3ZlPTRdPVwiUmVtb3ZlXCIseSkpKENoYW5nZVR5cGV8fHt9KTtjbGFzcyBDaGFuZ2VkRXZlbnR7bXU7Z207aG47Q2k7QztwdTt5Zjt3Zjt4ZjtiZjtjb25zdHJ1Y3Rvcigpe3RoaXMubXU9Mix0aGlzLmdtPVwiXCIsdGhpcy5obj1cIlwiLHRoaXMuQ2k9bnVsbCx0aGlzLkM9bnVsbCx0aGlzLnB1PW51bGwsdGhpcy55Zj1udWxsLHRoaXMud2Y9bnVsbCx0aGlzLnhmPW51bGwsdGhpcy5iZj1udWxsfXN0YXRpYyBUcmFuc2FjdGlvbj0xO3N0YXRpYyBQcm9wZXJ0eT0yO3N0YXRpYyBJbnNlcnQ9MztzdGF0aWMgUmVtb3ZlPTQ7Y2xlYXIoKXt0aGlzLkNpPW51bGwsdGhpcy5DPW51bGwsdGhpcy5wdT1udWxsLHRoaXMueWY9bnVsbCx0aGlzLndmPW51bGwsdGhpcy54Zj1udWxsLHRoaXMuYmY9bnVsbH1jb3B5KCl7Y29uc3QgdD1uZXcgQ2hhbmdlZEV2ZW50O3QubXU9dGhpcy5tdSx0LmdtPXRoaXMuZ20sdC5obj10aGlzLmhuLHQuQ2k9dGhpcy5DaSx0LkM9dGhpcy5DLHQucHU9dGhpcy5wdTtsZXQgaT10aGlzLnlmO3JldHVybiBVLlcoaSkmJlUucnQoaS5jb3B5RnJvemVuKT90LnlmPWkuY29weUZyb3plbigpOnQueWY9aSxpPXRoaXMud2YsVS5XKGkpJiZVLnJ0KGkuY29weUZyb3plbik/dC53Zj1pLmNvcHlGcm96ZW4oKTp0LndmPWksaT10aGlzLnhmLFUuVyhpKSYmVS5ydChpLmNvcHlGcm96ZW4pP3QueGY9aS5jb3B5RnJvemVuKCk6dC54Zj1pLGk9dGhpcy5iZixVLlcoaSkmJlUucnQoaS5jb3B5RnJvemVuKT90LmJmPWkuY29weUZyb3plbigpOnQuYmY9aSx0fWFpKHQpe3QgaW4gQ2hhbmdlVHlwZT90aGlzLmNoYW5nZT10OlUuaHIodGhpcyx0KX10b1N0cmluZygpe2xldCB0PVwiXCI7cmV0dXJuIHRoaXMuY2hhbmdlPT09MT90Kz1cIiogXCI6dGhpcy5jaGFuZ2U9PT0yP3QrPXRoaXMubW9kZWwhPT1udWxsP1wiIW1cIjpcIiFkXCI6dCs9KHRoaXMubW9kZWwhPT1udWxsP1wiIW1cIjpcIiFkXCIpK3RoaXMuY2hhbmdlLHRoaXMucHJvcGVydHlOYW1lJiZ0eXBlb2YgdGhpcy5wcm9wZXJ0eU5hbWU9PVwic3RyaW5nXCImJih0Kz1cIiBcIit0aGlzLnByb3BlcnR5TmFtZSksdGhpcy5tb2RlbENoYW5nZSYmdGhpcy5tb2RlbENoYW5nZSE9PXRoaXMucHJvcGVydHlOYW1lJiYodCs9XCIgXCIrdGhpcy5tb2RlbENoYW5nZSksdCs9XCI6IFwiLHRoaXMuY2hhbmdlPT09MT90aGlzLm9sZFZhbHVlIT09bnVsbCYmKHQrPVwiIFwiK3RoaXMub2xkVmFsdWUpOih0aGlzLm9iamVjdCE9PW51bGwmJih0Kz1VLnRvU3RyaW5nKHRoaXMub2JqZWN0KSksdGhpcy5vbGRWYWx1ZSE9PW51bGwmJih0Kz1cIiAgb2xkOiBcIitVLnRvU3RyaW5nKHRoaXMub2xkVmFsdWUpKSx0aGlzLm9sZFBhcmFtIT09bnVsbCYmKHQrPVwiIFwiK3RoaXMub2xkUGFyYW0pLHRoaXMubmV3VmFsdWUhPT1udWxsJiYodCs9XCIgIG5ldzogXCIrVS50b1N0cmluZyh0aGlzLm5ld1ZhbHVlKSksdGhpcy5uZXdQYXJhbSE9PW51bGwmJih0Kz1cIiBcIit0aGlzLm5ld1BhcmFtKSksdH1nZXRWYWx1ZSh0KXtyZXR1cm4gdD90aGlzLm9sZFZhbHVlOnRoaXMubmV3VmFsdWV9Z2V0UGFyYW0odCl7cmV0dXJuIHQ/dGhpcy5vbGRQYXJhbTp0aGlzLm5ld1BhcmFtfWNhblVuZG8oKXtyZXR1cm4gdGhpcy5tb2RlbCE9PW51bGx8fHRoaXMuZGlhZ3JhbSE9PW51bGx9dW5kbygpe3RoaXMuY2FuVW5kbygpJiYodGhpcy5tb2RlbCE9PW51bGw/dGhpcy5tb2RlbC5jaGFuZ2VTdGF0ZSh0aGlzLCEwKTp0aGlzLmRpYWdyYW0hPT1udWxsJiZ0aGlzLmRpYWdyYW0uSEModGhpcywhMCkpfWNhblJlZG8oKXtyZXR1cm4gdGhpcy5tb2RlbCE9PW51bGx8fHRoaXMuZGlhZ3JhbSE9PW51bGx9cmVkbygpe3RoaXMuY2FuUmVkbygpJiYodGhpcy5tb2RlbCE9PW51bGw/dGhpcy5tb2RlbC5jaGFuZ2VTdGF0ZSh0aGlzLCExKTp0aGlzLmRpYWdyYW0hPT1udWxsJiZ0aGlzLmRpYWdyYW0uSEModGhpcywhMSkpfWdldCBtb2RlbCgpe3JldHVybiB0aGlzLkNpfXNldCBtb2RlbCh0KXt0aGlzLkNpPXR9Z2V0IGRpYWdyYW0oKXtyZXR1cm4gdGhpcy5DfXNldCBkaWFncmFtKHQpe3RoaXMuQz10fWdldCBjaGFuZ2UoKXtyZXR1cm4gdGhpcy5tdX1zZXQgY2hhbmdlKHQpe3RoaXMubXU9dH1nZXQgbW9kZWxDaGFuZ2UoKXtyZXR1cm4gdGhpcy5nbX1zZXQgbW9kZWxDaGFuZ2UodCl7RGVidWcmJlUuaSh0LFwic3RyaW5nXCIsQ2hhbmdlZEV2ZW50LFwibW9kZWxDaGFuZ2VcIiksdGhpcy5nbT10fWdldCBwcm9wZXJ0eU5hbWUoKXtyZXR1cm4gdGhpcy5obn1zZXQgcHJvcGVydHlOYW1lKHQpe0RlYnVnJiZ0eXBlb2YgdCE9XCJzdHJpbmdcIiYmVS5QKHQsQ2hhbmdlZEV2ZW50LFwicHJvcGVydHlOYW1lXCIpLHRoaXMuaG49dH1nZXQgaXNUcmFuc2FjdGlvbkZpbmlzaGVkKCl7cmV0dXJuIHRoaXMubXU9PT0xJiYodGhpcy5obj09PVwiQ29tbWl0dGVkVHJhbnNhY3Rpb25cInx8dGhpcy5obj09PVwiRmluaXNoZWRVbmRvXCJ8fHRoaXMuaG49PT1cIkZpbmlzaGVkUmVkb1wiKX1nZXQgb2JqZWN0KCl7cmV0dXJuIHRoaXMucHV9c2V0IG9iamVjdCh0KXt0aGlzLnB1PXR9Z2V0IG9sZFZhbHVlKCl7cmV0dXJuIHRoaXMueWZ9c2V0IG9sZFZhbHVlKHQpe3RoaXMueWY9dH1nZXQgb2xkUGFyYW0oKXtyZXR1cm4gdGhpcy53Zn1zZXQgb2xkUGFyYW0odCl7dGhpcy53Zj10fWdldCBuZXdWYWx1ZSgpe3JldHVybiB0aGlzLnhmfXNldCBuZXdWYWx1ZSh0KXt0aGlzLnhmPXR9Z2V0IG5ld1BhcmFtKCl7cmV0dXJuIHRoaXMuYmZ9c2V0IG5ld1BhcmFtKHQpe3RoaXMuYmY9dH19Y2xhc3MgVHJhbnNhY3Rpb257cUM7THQ7blM7Y29uc3RydWN0b3IoKXt0aGlzLnFDPW5ldyBMaXN0KCkucCgpLHRoaXMuTHQ9XCJcIix0aGlzLm5TPSExfXRvU3RyaW5nKHQpe2xldCBpPVwiVHJhbnNhY3Rpb246IFwiK3RoaXMubmFtZStcIiBcIit0aGlzLmNoYW5nZXMuY291bnQudG9TdHJpbmcoKSsodGhpcy5pc0NvbXBsZXRlP1wiXCI6XCIsIGluY29tcGxldGVcIik7aWYodCE9PXZvaWQgMCYmdD4wKXtjb25zdCBlPXRoaXMuY2hhbmdlcy5jb3VudDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPXRoaXMuY2hhbmdlcy5lbHQocyk7biE9PW51bGwmJihpKz1gXG4gIGArbi50b1N0cmluZygpKX19cmV0dXJuIGl9Y2xlYXIoKXtjb25zdCB0PXRoaXMuY2hhbmdlczt0LkF0KCk7Zm9yKGxldCBpPXQuY291bnQtMTtpPj0wO2ktLSl7Y29uc3QgZT10LmVsdChpKTtlIT09bnVsbCYmZS5jbGVhcigpfXQuY2xlYXIoKSx0LnAoKX1jYW5VbmRvKCl7cmV0dXJuIHRoaXMuaXNDb21wbGV0ZX11bmRvKCl7aWYodGhpcy5jYW5VbmRvKCkpZm9yKGxldCB0PXRoaXMuY2hhbmdlcy5jb3VudC0xO3Q+PTA7dC0tKXtjb25zdCBpPXRoaXMuY2hhbmdlcy5lbHQodCk7aSE9PW51bGwmJmkudW5kbygpfX1jYW5SZWRvKCl7cmV0dXJuIHRoaXMuaXNDb21wbGV0ZX1yZWRvKCl7aWYoIXRoaXMuY2FuUmVkbygpKXJldHVybjtjb25zdCB0PXRoaXMuY2hhbmdlcy5jb3VudDtmb3IobGV0IGk9MDtpPHQ7aSsrKXtjb25zdCBlPXRoaXMuY2hhbmdlcy5lbHQoaSk7ZSE9PW51bGwmJmUucmVkbygpfX14Rih0KXtjb25zdCBpPXRoaXMuY2hhbmdlcztmb3IobGV0IGU9aS5jb3VudC0xO2U+PXQ7ZS0tKXtjb25zdCBzPWkuZWx0KGUpO3MhPT1udWxsJiZzLnVuZG8oKSxpLkF0KCksaS5yZW1vdmVBdChlKX1pLnAoKX10aGF3KCl7dGhpcy5jaGFuZ2VzLkF0KCl9b3B0aW1pemUoKXtpZighdGhpcy5pc0NvbXBsZXRlKXJldHVybjtjb25zdCB0PXRoaXMuY2hhbmdlczt0LkF0KCk7Y29uc3QgaT1uZXcgR01hcDtmb3IobGV0IHM9MDtzPHQuY291bnQ7cysrKXtjb25zdCBuPXQuZWx0KHMpO2lmKG49PT1udWxsfHxuLmNoYW5nZSE9PTJ8fCFuLm9iamVjdCljb250aW51ZTtsZXQgbz1pLmdldChuLm9iamVjdCk7b3x8KG89bmV3IEdNYXAsaS5zZXQobi5vYmplY3QsbykpO2NvbnN0IHI9by5nZXQobi5wcm9wZXJ0eU5hbWUpO3I9PT1udWxsP28uc2V0KG4ucHJvcGVydHlOYW1lLC0xKToocj4wJiZ0LnNldEVsdChyLG51bGwpLG8uc2V0KG4ucHJvcGVydHlOYW1lLHMpKX1sZXQgZT0wO2ZvcihsZXQgcz0wO3M8dC5jb3VudDtzKyspe2NvbnN0IG49dC5lbHQocyk7biE9PW51bGwmJihzPmUmJnQuc2V0RWx0KGUsbiksZSsrKX1mb3IoO3QubGVuZ3RoPmU7KXQucG9wKCk7dC5wKCl9Z2V0IGNoYW5nZXMoKXtyZXR1cm4gdGhpcy5xQ31nZXQgbmFtZSgpe3JldHVybiB0aGlzLkx0fXNldCBuYW1lKHQpe3RoaXMuTHQ9dH1nZXQgaXNDb21wbGV0ZSgpe3JldHVybiB0aGlzLm5TfXNldCBpc0NvbXBsZXRlKHQpe3RoaXMublM9dH19Y2xhc3MgVW5kb01hbmFnZXJ7WHc7WGk7V0M7WHM7b1M7bW07SG47WXc7clM7YW47a2Y7S3c7WXM7VXc7R3c7cG07SHc7Y29uc3RydWN0b3IodCl7dGhpcy5Ydz1uZXcgR1NldCx0aGlzLlhpPSExLHRoaXMuV0M9bmV3IExpc3QoKS5wKCksdGhpcy5Ycz0tMSx0aGlzLm9TPTk5OSx0aGlzLllzPSExLHRoaXMubW09bnVsbCx0aGlzLkhuPTAsdGhpcy5Zdz0hMSxEZWJ1ZyYmKHRoaXMuWXc9ITApLHRoaXMuclM9MjMsdGhpcy5hbj1uZXcgTGlzdCgpLnAoKSx0aGlzLmtmPW5ldyBMaXN0LHRoaXMuS3c9ITAsdGhpcy5Vdz0hMSx0aGlzLkd3PSExLHRoaXMucG09ITEsdGhpcy5Idz0hMSx0JiZPYmplY3QuYXNzaWduKHRoaXMsdCl9dG9TdHJpbmcodCl7bGV0IGk9XCJVbmRvTWFuYWdlciBcIit0aGlzLmhpc3RvcnlJbmRleCtcIjxcIit0aGlzLmhpc3RvcnkuY291bnQrXCI8PVwiK3RoaXMubWF4SGlzdG9yeUxlbmd0aDtpKz1cIltcIjtsZXQgZT10aGlzLm5lc3RlZFRyYW5zYWN0aW9uTmFtZXMuY291bnQ7Zm9yKGxldCBzPTA7czxlO3MrKylzPjAmJihpKz1cIiBcIiksaSs9dGhpcy5uZXN0ZWRUcmFuc2FjdGlvbk5hbWVzLmVsdChzKTtpZihpKz1cIl1cIix0IT09dm9pZCAwJiZ0PjApe2U9dGhpcy5oaXN0b3J5LmNvdW50O2ZvcihsZXQgcz0wO3M8ZTtzKyspaSs9YFxuIGArdGhpcy5oaXN0b3J5LmVsdChzKS50b1N0cmluZyh0LTEpfXJldHVybiBpfWNsZWFyKCl7Y29uc3QgdD10aGlzLmhpc3Rvcnk7dC5BdCgpO2ZvcihsZXQgaT10LmNvdW50LTE7aT49MDtpLS0pe2NvbnN0IGU9dC5lbHQoaSk7ZSE9PW51bGwmJmUuY2xlYXIoKX10LmNsZWFyKCksdGhpcy5Ycz0tMSx0LnAoKSx0aGlzLllzPSExLHRoaXMubW09bnVsbCx0aGlzLkhuPTAsdGhpcy5hbi5BdCgpLHRoaXMuYW4uY2xlYXIoKSx0aGlzLmFuLnAoKSx0aGlzLmtmLmNsZWFyKCksdGhpcy5Vdz0hMSx0aGlzLkd3PSExLHRoaXMucG09ITEsdGhpcy5Idz0hMX1jb3B5UHJvcGVydGllcyh0KXt0aGlzLmlzRW5hYmxlZD10LmlzRW5hYmxlZCx0aGlzLm1heEhpc3RvcnlMZW5ndGg9dC5tYXhIaXN0b3J5TGVuZ3RoLHRoaXMueXU9dC55dX1hZGRNb2RlbCh0KXt0aGlzLlh3LmFkZCh0KX1yZW1vdmVNb2RlbCh0KXt0aGlzLlh3LmRlbGV0ZSh0KX1zdGFydFRyYW5zYWN0aW9uKHQpe2lmKHQ9PT12b2lkIDAmJih0PVwiXCIpLHQ9PT1udWxsJiYodD1cIlwiKSx0aGlzLmlzVW5kb2luZ1JlZG9pbmcpcmV0dXJuITE7dGhpcy5Ldz09PSEwJiYodGhpcy5Ldz0hMSx0aGlzLkhuKyssdGhpcy5NbHx8dGhpcy5QbChcIlN0YXJ0aW5nRmlyc3RUcmFuc2FjdGlvblwiLHQsdGhpcy5jdXJyZW50VHJhbnNhY3Rpb24pLHRoaXMuSG4+MCYmdGhpcy5Ibi0tKSx0aGlzLmlzRW5hYmxlZCYmKHRoaXMuYW4uQXQoKSx0aGlzLmFuLmFkZCh0KSx0aGlzLmFuLnAoKSx0aGlzLmN1cnJlbnRUcmFuc2FjdGlvbj09PW51bGw/dGhpcy5rZi5hZGQoMCk6dGhpcy5rZi5hZGQodGhpcy5jdXJyZW50VHJhbnNhY3Rpb24uY2hhbmdlcy5jb3VudCkpLHRoaXMuSG4rKztjb25zdCBpPXRoaXMudHJhbnNhY3Rpb25MZXZlbD09PTE7cmV0dXJuIGkmJih0aGlzLk1sfHx0aGlzLlBsKFwiU3RhcnRlZFRyYW5zYWN0aW9uXCIsdCx0aGlzLmN1cnJlbnRUcmFuc2FjdGlvbikpLGl9Y29tbWl0VHJhbnNhY3Rpb24odCl7cmV0dXJuIHQ9PT12b2lkIDAmJih0PVwiXCIpLHRoaXMuakMoITAsdCl9cm9sbGJhY2tUcmFuc2FjdGlvbigpe3JldHVybiB0aGlzLmpDKCExLFwiXCIpfWpDKHQsaSl7aWYodGhpcy5pc1VuZG9pbmdSZWRvaW5nKXJldHVybiExO3RoaXMueXUmJnRoaXMudHJhbnNhY3Rpb25MZXZlbDwxJiZVLm50KFwiRW5kaW5nIHRyYW5zYWN0aW9uIHdpdGhvdXQgaGF2aW5nIHN0YXJ0ZWQgYSB0cmFuc2FjdGlvbjogXCIraSk7Y29uc3QgZT10aGlzLnRyYW5zYWN0aW9uTGV2ZWw9PT0xO2xldCBzPXRoaXMuY3VycmVudFRyYW5zYWN0aW9uO2UmJnQmJih0aGlzLk1sfHx0aGlzLlBsKFwiQ29tbWl0dGluZ1RyYW5zYWN0aW9uXCIsaSxzKSk7bGV0IG49MDtpZih0aGlzLnRyYW5zYWN0aW9uTGV2ZWw+MCYmKHRoaXMuSG4tLSx0aGlzLmlzRW5hYmxlZCkpe2NvbnN0IG89dGhpcy5hbi5jb3VudDtvPjAmJihpPT09XCJcIiYmKGk9dGhpcy5hbi5lbHQoMCkpLHRoaXMuYW4uQXQoKSx0aGlzLmFuLnJlbW92ZUF0KG8tMSksdGhpcy5hbi5wKCkpO2NvbnN0IHI9dGhpcy5rZi5jb3VudDtyPjAmJihuPXRoaXMua2YuZWx0KHItMSksdGhpcy5rZi5yZW1vdmVBdChyLTEpKX1pZihlKXtpZih0KXtpZih0aGlzLnBtPSExLHM9PT1udWxsJiZpIT09XCJcIiYmKHM9dGhpcy5jdXJyZW50VHJhbnNhY3Rpb24pLHRoaXMuaXNFbmFibGVkJiZzIT09bnVsbCl7Y29uc3Qgbz1zO28uaXNDb21wbGV0ZXx8KG8uaXNDb21wbGV0ZT0hMCxvLm5hbWU9aSksdGhpcy5kaXNjYXJkSGlzdG9yeUFmdGVySW5kZXgoKTtjb25zdCByPXRoaXMuaGlzdG9yeTtyLkF0KCk7Y29uc3QgbD10aGlzLm1heEhpc3RvcnlMZW5ndGg7aWYobD49MCl7aWYobD09PTApci5jbGVhcigpO2Vsc2UgaWYoci5jb3VudD49bCl7Y29uc3QgaD1yLmVsdCgwKTtoIT09bnVsbCYmaC5jbGVhcigpLHIucmVtb3ZlQXQoMCksdGhpcy5Ycy0tfX1sIT09MCYmKHIuY291bnQ9PT0wfHxyLmdldChyLmNvdW50LTEpIT09bykmJihyLmFkZChvKSx0aGlzLlhzKyspLHIucCgpLHM9b310aGlzLk1sfHx0aGlzLlBsKFwiQ29tbWl0dGVkVHJhbnNhY3Rpb25cIixpLHMpfWVsc2V7dGhpcy5Zcz0hMDt0cnl7dGhpcy5pc0VuYWJsZWQmJnMhPT1udWxsJiYocy5pc0NvbXBsZXRlPSEwLHMudW5kbygpKX1maW5hbGx5e3RoaXMuTWx8fHRoaXMuUGwoXCJSb2xsZWRCYWNrVHJhbnNhY3Rpb25cIixpLHMpLHRoaXMuWXM9ITF9cyE9PW51bGwmJnMuY2xlYXIoKX1yZXR1cm4gdGhpcy5tbT1udWxsLHRoaXMucXcmJnRoaXMuY2xlYXIoKSx0aGlzLnF3PSExLHRoaXMuV3c9ITEsITB9ZWxzZSByZXR1cm4gdGhpcy5pc0VuYWJsZWQmJiF0JiZzIT09bnVsbCYmcy54RihuKSwhMX1kaXNjYXJkSGlzdG9yeUFmdGVySW5kZXgoKXtpZih0aGlzLmlzVW5kb2luZ1JlZG9pbmd8fCF0aGlzLmNhblJlZG8oKSlyZXR1cm47Y29uc3QgdD10aGlzLmhpc3Rvcnk7dC5BdCgpO2ZvcihsZXQgaT10LmNvdW50LTE7aT50aGlzLmhpc3RvcnlJbmRleDtpLS0pe2NvbnN0IGU9dC5lbHQoaSk7ZSE9PW51bGwmJmUuY2xlYXIoKSx0LnJlbW92ZUF0KGkpLHRoaXMucG09ITB9dC5wKCl9dGhhdygpe3RoaXMuaGlzdG9yeS5BdCgpfU5FKHQpe3RoaXMuSG4rPXQsdGhpcy5IbjwwJiYodGhpcy5Ibj0wKX1jYW5VbmRvKCl7aWYoIXRoaXMuaXNFbmFibGVkfHx0aGlzLnRyYW5zYWN0aW9uTGV2ZWw+MClyZXR1cm4hMTtjb25zdCB0PXRoaXMudHJhbnNhY3Rpb25Ub1VuZG87cmV0dXJuISEodCE9PW51bGwmJnQuY2FuVW5kbygpKX11bmRvKCl7aWYoIXRoaXMuY2FuVW5kbygpKXJldHVybjtjb25zdCB0PXRoaXMudHJhbnNhY3Rpb25Ub1VuZG87dHJ5e3RoaXMuWXM9ITAsdGhpcy5QbChcIlN0YXJ0aW5nVW5kb1wiLFwiVW5kb1wiLHQpLHRoaXMuWHMtLSx0LnVuZG8oKX1jYXRjaChpKXtVLm50KFwidW5kbyBlcnJvcjogXCIraS50b1N0cmluZygpKX1maW5hbGx5e3RoaXMuUGwoXCJGaW5pc2hlZFVuZG9cIixcIlVuZG9cIix0KSx0aGlzLllzPSExfX1jYW5SZWRvKCl7aWYoIXRoaXMuaXNFbmFibGVkfHx0aGlzLnRyYW5zYWN0aW9uTGV2ZWw+MClyZXR1cm4hMTtjb25zdCB0PXRoaXMudHJhbnNhY3Rpb25Ub1JlZG87cmV0dXJuISEodCE9PW51bGwmJnQuY2FuUmVkbygpKX1yZWRvKCl7aWYoIXRoaXMuY2FuUmVkbygpKXJldHVybjtjb25zdCB0PXRoaXMudHJhbnNhY3Rpb25Ub1JlZG87dHJ5e3RoaXMuWXM9ITAsdGhpcy5QbChcIlN0YXJ0aW5nUmVkb1wiLFwiUmVkb1wiLHQpLHRoaXMuWHMrKyx0LnJlZG8oKX1jYXRjaChpKXtVLm50KFwicmVkbyBlcnJvcjogXCIraS50b1N0cmluZygpKX1maW5hbGx5e3RoaXMuUGwoXCJGaW5pc2hlZFJlZG9cIixcIlJlZG9cIix0KSx0aGlzLllzPSExfX1QbCh0LGksZSl7ZT09PXZvaWQgMCYmKGU9bnVsbCk7Y29uc3Qgcz1uZXcgQ2hhbmdlZEV2ZW50O3MuY2hhbmdlPTEscy5wcm9wZXJ0eU5hbWU9dCxzLm9iamVjdD1lLHMub2xkVmFsdWU9aTtjb25zdCBuPXRoaXMubW9kZWxzO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7cy5tb2RlbD1vLG8uYkYocyl9fWhhbmRsZUNoYW5nZWQodCl7aWYodGhpcy5pc0VuYWJsZWQmJiF0aGlzLmlzVW5kb2luZ1JlZG9pbmcmJiF0aGlzLnNraXBzRXZlbnQodCkpe2xldCBpPXRoaXMuY3VycmVudFRyYW5zYWN0aW9uO2k9PT1udWxsJiYoaT1uZXcgVHJhbnNhY3Rpb24sdGhpcy5tbT1pKTtjb25zdCBlPXQuY29weSgpLHM9aS5jaGFuZ2VzO2lmKHMuQXQoKSxzLmFkZChlKSxzLnAoKSx0aGlzLnl1JiZ0aGlzLnJTPjAmJnRoaXMudHJhbnNhY3Rpb25MZXZlbDw9MCYmIXRoaXMuS3cpe2NvbnN0IG49dC5kaWFncmFtO2lmKG4hPT1udWxsJiZuLnFoPT09ITEpcmV0dXJuO1UubnQoXCJDaGFuZ2Ugbm90IHdpdGhpbiBhIHRyYW5zYWN0aW9uOiBcIitlLnRvU3RyaW5nKCkpLHRoaXMuclMtLX19fXNraXBzRXZlbnQodCl7aWYodD09PW51bGx8fHQuY2hhbmdlPT09MSlyZXR1cm4hMDtjb25zdCBpPXQub2JqZWN0O2lmKGk9PT1udWxsKXJldHVybiExO2lmKGkubGF5ZXIhPT12b2lkIDApe2NvbnN0IGU9aS5sYXllcjtpZihlIT09bnVsbCYmZS5pc1RlbXBvcmFyeSlyZXR1cm4hMH1lbHNlIGlmKGkuaXNUZW1wb3JhcnkpcmV0dXJuITA7cmV0dXJuITF9Z2V0IG1vZGVscygpe3JldHVybiB0aGlzLlh3Lml0ZXJhdG9yfWdldCBpc0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5YaX1zZXQgaXNFbmFibGVkKHQpe3RoaXMuWGk9dH1nZXQgdHJhbnNhY3Rpb25Ub1VuZG8oKXtyZXR1cm4gdGhpcy5oaXN0b3J5SW5kZXg+PTAmJnRoaXMuaGlzdG9yeUluZGV4PD10aGlzLmhpc3RvcnkuY291bnQtMT90aGlzLmhpc3RvcnkuZWx0KHRoaXMuaGlzdG9yeUluZGV4KTpudWxsfWdldCB0cmFuc2FjdGlvblRvUmVkbygpe3JldHVybiB0aGlzLmhpc3RvcnlJbmRleDx0aGlzLmhpc3RvcnkuY291bnQtMT90aGlzLmhpc3RvcnkuZWx0KHRoaXMuaGlzdG9yeUluZGV4KzEpOm51bGx9Z2V0IGlzVW5kb2luZ1JlZG9pbmcoKXtyZXR1cm4gdGhpcy5Zc31nZXQgaGlzdG9yeSgpe3JldHVybiB0aGlzLldDfWdldCBtYXhIaXN0b3J5TGVuZ3RoKCl7cmV0dXJuIHRoaXMub1N9c2V0IG1heEhpc3RvcnlMZW5ndGgodCl7dGhpcy5vUz10fWdldCBoaXN0b3J5SW5kZXgoKXtyZXR1cm4gdGhpcy5Yc31nZXQgY3VycmVudFRyYW5zYWN0aW9uKCl7cmV0dXJuIHRoaXMubW19Z2V0IHRyYW5zYWN0aW9uTGV2ZWwoKXtyZXR1cm4gdGhpcy5Ibn1nZXQgaXNJblRyYW5zYWN0aW9uKCl7cmV0dXJuIHRoaXMuSG4+MH1nZXQgeXUoKXtyZXR1cm4gdGhpcy5Zd31zZXQgeXUodCl7dGhpcy5Zdz10fWdldCBuZXN0ZWRUcmFuc2FjdGlvbk5hbWVzKCl7cmV0dXJuIHRoaXMuYW59Z2V0IHF3KCl7cmV0dXJuIHRoaXMuVXd9c2V0IHF3KHQpe3RoaXMuVXc9dH1nZXQgV3coKXtyZXR1cm4gdGhpcy5Hd31zZXQgV3codCl7dGhpcy5Hdz10fWdldCBNbCgpe3JldHVybiB0aGlzLkh3fXNldCBNbCh0KXt0aGlzLkh3PXR9Z2V0IGlzSnVzdERpc2NhcmRlZCgpe3JldHVybiB0aGlzLnBtfX1jbGFzcyBUb29se0M7THQ7WGk7bFM7aFM7eW07dkM7Y29uc3RydWN0b3IoKXtHU2V0LkppKHRoaXMpLHRoaXMuQz1EaWFncmFtLndtKCksdGhpcy5MdD1cIlwiLHRoaXMuWGk9ITAsdGhpcy5sUz0hMSx0aGlzLmhTPW51bGwsdGhpcy52Qz1uZXcgSW5wdXRFdmVudCx0aGlzLnltPS0xfWdldCBkaWFncmFtKCl7cmV0dXJuIHRoaXMuQ31zZXQgZGlhZ3JhbSh0KXt0IGluc3RhbmNlb2YgRGlhZ3JhbSYmKHRoaXMuQz10KX10b1N0cmluZygpe3JldHVybiB0aGlzLm5hbWUhPT1cIlwiP3RoaXMubmFtZStcIiBUb29sXCI6VS5Cbih0aGlzLmNvbnN0cnVjdG9yKX11cGRhdGVBZG9ybm1lbnRzKHQpe31jYW5TdGFydCgpe3JldHVybiB0aGlzLmlzRW5hYmxlZH1kb1N0YXJ0KCl7fWRvQWN0aXZhdGUoKXt0aGlzLmlzQWN0aXZlPSEwfWRvRGVhY3RpdmF0ZSgpe3RoaXMuaXNBY3RpdmU9ITF9ZG9TdG9wKCl7fWRvQ2FuY2VsKCl7dGhpcy50cmFuc2FjdGlvblJlc3VsdD1udWxsLHRoaXMuc3RvcFRvb2woKX1zdG9wVG9vbCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QuY3VycmVudFRvb2w9PT10aGlzJiYodC5jdXJyZW50VG9vbD1udWxsLHQuY3VycmVudEN1cnNvcj1cIlwiKX1kb01vdXNlRG93bigpeyF0aGlzLmlzQWN0aXZlJiZ0aGlzLmNhblN0YXJ0KCkmJnRoaXMuZG9BY3RpdmF0ZSgpfWRvTW91c2VNb3ZlKCl7fWRvTW91c2VVcCgpe3RoaXMuc3RvcFRvb2woKX1kb01vdXNlV2hlZWwoKXt9Y2FuU3RhcnRNdWx0aVRvdWNoKCl7cmV0dXJuITB9c3RhbmRhcmRQaW5jaFpvb21TdGFydCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dC5sYXN0SW5wdXQsZT1pLmdldE11bHRpVG91Y2hWaWV3UG9pbnQoMCxQb2ludC5LKE5hTixOYU4pKSxzPWkuZ2V0TXVsdGlUb3VjaFZpZXdQb2ludCgxLFBvaW50LksoTmFOLE5hTikpO2lmKCFlLmlzUmVhbCgpfHwhcy5pc1JlYWwoKSl7UG9pbnQubyhlKSxQb2ludC5vKHMpO3JldHVybn1pZih0aGlzLmRvQ2FuY2VsKCksdC5nZXRJbnB1dE9wdGlvbihcImhhc0dlc3R1cmVab29tXCIpKXt0LmFTPXQuc2NhbGU7Y29uc3Qgbj1zLngtZS54LG89cy55LWUueSxyPU1hdGguc3FydChuKm4rbypvKTt0LmZTPXIsaS5idWJibGVzPSExfVBvaW50Lm8oZSksUG9pbnQubyhzKX1zdGFuZGFyZFBpbmNoWm9vbU1vdmUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXQubGFzdElucHV0LGU9aS5nZXRNdWx0aVRvdWNoVmlld1BvaW50KDAsUG9pbnQuSyhOYU4sTmFOKSkscz1pLmdldE11bHRpVG91Y2hWaWV3UG9pbnQoMSxQb2ludC5LKE5hTixOYU4pKTtpZighZS5pc1JlYWwoKXx8IXMuaXNSZWFsKCkpe1BvaW50Lm8oZSksUG9pbnQubyhzKTtyZXR1cm59aWYodGhpcy5kb0NhbmNlbCgpLHQuZ2V0SW5wdXRPcHRpb24oXCJoYXNHZXN0dXJlWm9vbVwiKSl7Y29uc3Qgbj1zLngtZS54LG89cy55LWUueSxsPU1hdGguc3FydChuKm4rbypvKS90LmZTLGg9bmV3IFBvaW50KChNYXRoLm1pbihzLngsZS54KStNYXRoLm1heChzLngsZS54KSkvMiwoTWF0aC5taW4ocy55LGUueSkrTWF0aC5tYXgocy55LGUueSkpLzIpLGY9dC5hUypsLGE9dC5jb21tYW5kSGFuZGxlcjtpZihmIT09dC5zY2FsZSYmYS5jYW5SZXNldFpvb20oZikpe2NvbnN0IGM9dC56b29tUG9pbnQ7dC56b29tUG9pbnQ9aCxhLnJlc2V0Wm9vbShmKSx0Lnpvb21Qb2ludD1jfWkuYnViYmxlcz0hMX1Qb2ludC5vKGUpLFBvaW50Lm8ocyl9ZG9LZXlEb3duKCl7dGhpcy5kaWFncmFtLmxhc3RJbnB1dC5jb2RlPT09XCJFc2NhcGVcIiYmdGhpcy5kb0NhbmNlbCgpfWRvS2V5VXAoKXt9c3RhcnRUcmFuc2FjdGlvbih0KXtyZXR1cm4gdD09PXZvaWQgMCYmKHQ9dGhpcy5uYW1lKSx0aGlzLnRyYW5zYWN0aW9uUmVzdWx0PW51bGwsdGhpcy5kaWFncmFtLnN0YXJ0VHJhbnNhY3Rpb24odCl9c3RvcFRyYW5zYWN0aW9uKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07cmV0dXJuIHRoaXMudHJhbnNhY3Rpb25SZXN1bHQ9PT1udWxsP3Qucm9sbGJhY2tUcmFuc2FjdGlvbigpOnQuY29tbWl0VHJhbnNhY3Rpb24odGhpcy50cmFuc2FjdGlvblJlc3VsdCl9c3RhbmRhcmRNb3VzZVNlbGVjdCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKCF0LmFsbG93U2VsZWN0KXJldHVybjtjb25zdCBpPXQubGFzdElucHV0LGU9dC5maW5kUGFydEF0KGkuZG9jdW1lbnRQb2ludCwhMSk7aWYoZSE9PW51bGwpe2lmKFUucnI/aS5tZXRhOmkuY29udHJvbCl7dC5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0LnNlbGVjdGlvbik7bGV0IHM9ZTtmb3IoO3MhPT1udWxsJiYhcy5jYW5TZWxlY3QoKTspcz1zLmNvbnRhaW5pbmdHcm91cDtzIT09bnVsbCYmKHMuaXNTZWxlY3RlZD0hcy5pc1NlbGVjdGVkKSx0Lk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsdC5zZWxlY3Rpb24pfWVsc2UgaWYoaS5zaGlmdCl7aWYoIWUuaXNTZWxlY3RlZCl7dC5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0LnNlbGVjdGlvbik7bGV0IHM9ZTtmb3IoO3MhPT1udWxsJiYhcy5jYW5TZWxlY3QoKTspcz1zLmNvbnRhaW5pbmdHcm91cDtzIT09bnVsbCYmKHMuaXNTZWxlY3RlZD0hMCksdC5PKFwiQ2hhbmdlZFNlbGVjdGlvblwiLHQuc2VsZWN0aW9uKX19ZWxzZSBpZighZS5pc1NlbGVjdGVkKXtsZXQgcz1lO2Zvcig7cyE9PW51bGwmJiFzLmNhblNlbGVjdCgpOylzPXMuY29udGFpbmluZ0dyb3VwO3MhPT1udWxsJiZ0LnNlbGVjdChzKX19ZWxzZSBpLmxlZnQmJiEoVS5ycj9pLm1ldGE6aS5jb250cm9sKSYmIWkuc2hpZnQmJnQuY2xlYXJTZWxlY3Rpb24oKX1zdGFuZGFyZE1vdXNlQ2xpY2sodCxpKXt0PT09dm9pZCAwJiYodD1udWxsKSxpPT09dm9pZCAwJiYoaT1vPT4hby5sYXllcj8uaXNUZW1wb3JhcnkpO2NvbnN0IGU9dGhpcy5kaWFncmFtLHM9ZS5sYXN0SW5wdXQsbj1lLmZpbmRPYmplY3RBdChzLmRvY3VtZW50UG9pbnQsdCxpKTtyZXR1cm4gcy50YXJnZXRPYmplY3Q9bix0aGlzLmtGKG4scyxlKSxzLmhhbmRsZWR9a0YodCxpLGUpe2lmKGkuaGFuZGxlZD0hMSx0IT09bnVsbCYmIXQuaXNFbmFibGVkT2JqZWN0KCkpcmV0dXJuO2xldCBzPTA7aS5sZWZ0P2kuY2xpY2tDb3VudD09PTE/cz0xOmkuY2xpY2tDb3VudD09PTI/cz0yOnM9MTppLnJpZ2h0JiZpLmNsaWNrQ291bnQ9PT0xJiYocz0zKTtsZXQgbj1cIk9iamVjdFNpbmdsZUNsaWNrZWRcIjtpZih0IT09bnVsbCl7c3dpdGNoKHMpe2Nhc2UgMTpuPVwiT2JqZWN0U2luZ2xlQ2xpY2tlZFwiO2JyZWFrO2Nhc2UgMjpuPVwiT2JqZWN0RG91YmxlQ2xpY2tlZFwiO2JyZWFrO2Nhc2UgMzpuPVwiT2JqZWN0Q29udGV4dENsaWNrZWRcIjticmVha31zIT09MCYmZS5PKG4sdCl9ZWxzZXtzd2l0Y2gocyl7Y2FzZSAxOm49XCJCYWNrZ3JvdW5kU2luZ2xlQ2xpY2tlZFwiO2JyZWFrO2Nhc2UgMjpuPVwiQmFja2dyb3VuZERvdWJsZUNsaWNrZWRcIjticmVhaztjYXNlIDM6bj1cIkJhY2tncm91bmRDb250ZXh0Q2xpY2tlZFwiO2JyZWFrfXMhPT0wJiZlLk8obil9aWYodCE9PW51bGwpZm9yKDt0IT09bnVsbDspe2xldCBvPW51bGw7c3dpdGNoKHMpe2Nhc2UgMTpvPXQuY2xpY2s7YnJlYWs7Y2FzZSAyOm89dC5kb3VibGVDbGljaz90LmRvdWJsZUNsaWNrOnQuY2xpY2s7YnJlYWs7Y2FzZSAzOm89dC5jb250ZXh0Q2xpY2s7YnJlYWt9aWYobyE9PW51bGwmJihvKGksdCksaS5oYW5kbGVkKSlicmVhazt0PXQucGFuZWx9ZWxzZXtsZXQgbz1udWxsO3N3aXRjaChzKXtjYXNlIDE6bz1lLmNsaWNrO2JyZWFrO2Nhc2UgMjpvPWUuZG91YmxlQ2xpY2s/ZS5kb3VibGVDbGljazplLmNsaWNrO2JyZWFrO2Nhc2UgMzpvPWUuY29udGV4dENsaWNrO2JyZWFrfW8hPT1udWxsJiZvKGkpfX1zdGFuZGFyZE1vdXNlT3Zlcigpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dC5sYXN0SW5wdXQ7aWYodC5hbmltYXRpb25NYW5hZ2VyLmJpPT09ITApcmV0dXJuO2NvbnN0IGU9dC5za2lwc1VuZG9NYW5hZ2VyO3Quc2tpcHNVbmRvTWFuYWdlcj0hMDtsZXQgcz10LnZpZXdwb3J0Qm91bmRzLmNvbnRhaW5zUG9pbnQoaS5kb2N1bWVudFBvaW50KT90LmZpbmRPYmplY3RBdChpLmRvY3VtZW50UG9pbnQsbnVsbCxudWxsKTpudWxsO2kuZXZlbnQmJihpLmV2ZW50LnR5cGU9PT1cInBvaW50ZXJjYW5jZWxcInx8aS5ldmVudC50eXBlPT09XCJwb2ludGVyb3V0XCIpJiYocz1udWxsKSxpLnRhcmdldE9iamVjdD1zO2xldCBuPSExO2lmKHMhPT10LlNmKXtsZXQgbz10LlNmO2NvbnN0IHI9bztmb3IodC5TZj1zLHRoaXMuZG9DdXJyZW50T2JqZWN0Q2hhbmdlZChvLHMpLGkuaGFuZGxlZD0hMTtvIT09bnVsbDspe2NvbnN0IGw9by5tb3VzZUxlYXZlO2lmKGwhPT1udWxsJiYocz09PW98fHMhPT1udWxsJiZzLmlzQ29udGFpbmVkQnkobyl8fChsKGksbyxzKSxuPSEwLGkuaGFuZGxlZCkpKWJyZWFrO289by5wYW5lbH1mb3Iobz1yLGkuaGFuZGxlZD0hMTtzIT09bnVsbDspe2NvbnN0IGw9cy5tb3VzZUVudGVyO2lmKGwhPT1udWxsJiYobz09PXN8fG8hPT1udWxsJiZvLmlzQ29udGFpbmVkQnkocyl8fChsKGkscyxvKSxuPSEwLGkuaGFuZGxlZCkpKWJyZWFrO3M9cy5wYW5lbH1zPXQuU2Z9aWYocyE9PW51bGwpe2xldCBvPXMscj1cIlwiO2Zvcig7byE9PW51bGwmJihyPW8uY3Vyc29yLHI9PT1cIlwiKTspbz1vLnBhbmVsO2Zvcih0LmN1cnJlbnRDdXJzb3I9cixpLmhhbmRsZWQ9ITEsbz1zO28hPT1udWxsOyl7Y29uc3QgbD1vLm1vdXNlT3ZlcjtpZihsIT09bnVsbCYmKGwoaSxvKSxuPSEwLGkuaGFuZGxlZCkpYnJlYWs7bz1vLnBhbmVsfX1lbHNle3RoaXMuZG9VcGRhdGVDdXJzb3IobnVsbCk7Y29uc3Qgbz10Lm1vdXNlT3ZlcjtvIT09bnVsbCYmKG8oaSksbj0hMCl9biYmdC5yZXF1ZXN0VXBkYXRlKCksdC5za2lwc1VuZG9NYW5hZ2VyPWV9ZG9VcGRhdGVDdXJzb3IodCl7Y29uc3QgaT10aGlzLmRpYWdyYW07aSYmKGkuY3VycmVudEN1cnNvcj1cIlwiKX1kb0N1cnJlbnRPYmplY3RDaGFuZ2VkKHQsaSl7fXN0YW5kYXJkTW91c2VXaGVlbCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dC5sYXN0SW5wdXQ7bGV0IGU9aS5kZWx0YTtpZihlPT09MHx8IXQuZG9jdW1lbnRCb3VuZHMuaXNSZWFsKCkpcmV0dXJuO2NvbnN0IHM9dC5jb21tYW5kSGFuZGxlcixuPXQudG9vbE1hbmFnZXIubW91c2VXaGVlbEJlaGF2aW9yO2lmKHMhPT1udWxsJiYobj09PTImJiFpLnNoaWZ0fHxuPT09MSYmaS5jb250cm9sKSl7aWYoZT4wP3MuY2FuSW5jcmVhc2Vab29tKCk6cy5jYW5EZWNyZWFzZVpvb20oKSl7Y29uc3Qgbz10Lnpvb21Qb2ludDt0Lnpvb21Qb2ludD1pLnZpZXdQb2ludCxlPjA/cy5pbmNyZWFzZVpvb20oKTpzLmRlY3JlYXNlWm9vbSgpLHQuem9vbVBvaW50PW99aS5idWJibGVzPSExfWVsc2UgaWYobj09PTImJmkuc2hpZnR8fG49PT0xJiYhaS5jb250cm9sKXtjb25zdCBvPXQucG9zaXRpb24uY29weSgpLHI9aS5ldmVudCxsPXIuZGVsdGFNb2RlO2xldCBoPXIuZGVsdGFYLGY9ci5kZWx0YVksYT1cInBpeGVsXCI7aWYoKGghPT0wfHxmIT09MCkmJiFpLnNoaWZ0KXtzd2l0Y2gobCl7Y2FzZSAwOmE9XCJwaXhlbFwiO2JyZWFrO2Nhc2UgMTphPVwibGluZVwiO2JyZWFrO2Nhc2UgMjphPVwicGFnZVwiO2JyZWFrfWlmKGghPT0wJiZ0LmFsbG93SG9yaXpvbnRhbFNjcm9sbCl7Y29uc3QgYz10LnNjcm9sbEhvcml6b250YWxMaW5lQ2hhbmdlO2g9aCooYy8xNiksdC5zY3JvbGwoYSxoPjA/XCJyaWdodFwiOlwibGVmdFwiLE1hdGguYWJzKGgpKX1pZihmIT09MCYmdC5hbGxvd1ZlcnRpY2FsU2Nyb2xsKXtjb25zdCBjPXQuc2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlO2Y9ZiooYy8xNiksdC5zY3JvbGwoYSxmPjA/XCJkb3duXCI6XCJ1cFwiLE1hdGguYWJzKGYpKX19ZWxzZSFpLnNoaWZ0JiZ0LmFsbG93VmVydGljYWxTY3JvbGw/KGU9ZSozKnQuc2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlLHQuc2Nyb2xsKGEsZT4wP1widXBcIjpcImRvd25cIixNYXRoLmFicyhlKSkpOmkuc2hpZnQmJnQuYWxsb3dIb3Jpem9udGFsU2Nyb2xsJiYoZT1lKjMqdC5zY3JvbGxIb3Jpem9udGFsTGluZUNoYW5nZSx0LnNjcm9sbChhLGU+MD9cImxlZnRcIjpcInJpZ2h0XCIsTWF0aC5hYnMoZSkpKTt0aGlzLmRvV2hlZWxDaGFuZ2UodCxvLGkpfX1kb1doZWVsQ2hhbmdlKHQsaSxlKXsoIXQucG9zaXRpb24uZXF1YWxzKGkpfHxlLmV2ZW50LndoZWVsRGVsdGFYIT09MCkmJihlLmJ1YmJsZXM9ITEpfXN0YW5kYXJkV2FpdEFmdGVyKHQsaSl7RGVidWcmJlUuaSh0LFwibnVtYmVyXCIsVG9vbCxcInN0YW5kYXJkV2FpdEFmdGVyOmRlbGF5XCIpLGk9PT12b2lkIDAmJihpPXRoaXMuZGlhZ3JhbS5sYXN0SW5wdXQpLHRoaXMuY2FuY2VsV2FpdEFmdGVyKCk7Y29uc3QgZT10aGlzLHM9aS5jbG9uZSh0aGlzLnZDKTt0aGlzLnltPVUubHIoKCk9PmUuZG9XYWl0QWZ0ZXIocyksdCl9Y2FuY2VsV2FpdEFmdGVyKCl7dGhpcy55bSE9PS0xJiZVLkJnKHRoaXMueW0pLHRoaXMueW09LTF9ZG9XYWl0QWZ0ZXIodCl7fWZpbmRUb29sSGFuZGxlQXQodCxpKXtjb25zdCBzPXRoaXMuZGlhZ3JhbS5maW5kT2JqZWN0QXQodCxuPT57Zm9yKDtuIT09bnVsbCYmIShuLnBhbmVsIGluc3RhbmNlb2YgQWRvcm5tZW50KTspbj1uLnBhbmVsO3JldHVybiBufSk7cmV0dXJuIHM9PT1udWxsP251bGw6cy5wYXJ0LmNhdGVnb3J5PT09aT9zOm51bGx9aXNCZXlvbmREcmFnU2l6ZSh0LGkpe2NvbnN0IGU9dGhpcy5kaWFncmFtO3Q9PT12b2lkIDAmJih0PWUuZmlyc3RJbnB1dC52aWV3UG9pbnQpLGk9PT12b2lkIDAmJihpPWUubGFzdElucHV0LnZpZXdQb2ludCk7Y29uc3Qgcz1lLnRvb2xNYW5hZ2VyLmRyYWdTaXplO2xldCBuPXMud2lkdGgsbz1zLmhlaWdodDtyZXR1cm4gZS5maXJzdElucHV0LmlzVG91Y2hFdmVudCYmKG4rPTYsbys9NiksTWF0aC5hYnMoaS54LXQueCk+bnx8TWF0aC5hYnMoaS55LXQueSk+b31nZXQgbmFtZSgpe3JldHVybiB0aGlzLkx0fXNldCBuYW1lKHQpe1UuaSh0LFwic3RyaW5nXCIsVG9vbCxcIm5hbWVcIiksdGhpcy5MdD10fWdldCBpc0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5YaX1zZXQgaXNFbmFibGVkKHQpe1UuaSh0LFwiYm9vbGVhblwiLFRvb2wsXCJpc0VuYWJsZWRcIiksdGhpcy5YaT10fWdldCBpc0FjdGl2ZSgpe3JldHVybiB0aGlzLmxTfXNldCBpc0FjdGl2ZSh0KXtVLmkodCxcImJvb2xlYW5cIixUb29sLFwiaXNBY3RpdmVcIiksdGhpcy5sUz10fWdldCB0cmFuc2FjdGlvblJlc3VsdCgpe3JldHVybiB0aGlzLmhTfXNldCB0cmFuc2FjdGlvblJlc3VsdCh0KXt0IT09bnVsbCYmVS5pKHQsXCJzdHJpbmdcIixUb29sLFwidHJhbnNhY3Rpb25SZXN1bHRcIiksdGhpcy5oUz10fX12YXIgV2hlZWxNb2RlPSh5PT4oeVt5LlNjcm9sbD0xXT1cIlNjcm9sbFwiLHlbeS5ab29tPTJdPVwiWm9vbVwiLHlbeS5Ob25lPTNdPVwiTm9uZVwiLHkpKShXaGVlbE1vZGV8fHt9KSxHZXN0dXJlTW9kZT0oeT0+KHlbeS5ab29tPTFdPVwiWm9vbVwiLHlbeS5DYW5jZWw9Ml09XCJDYW5jZWxcIix5W3kuTm9uZT0zXT1cIk5vbmVcIix5KSkoR2VzdHVyZU1vZGV8fHt9KTtjbGFzcyBUb29sTWFuYWdlciBleHRlbmRzIFRvb2x7SkM7JEM7WkM7Y1M7dVM7ZFM7Z1M7bVM7cFM7eVM7eG07V2g7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJUb29sTWFuYWdlclwiLHRoaXMuSkM9bmV3IExpc3QsdGhpcy4kQz1uZXcgTGlzdCx0aGlzLlpDPW5ldyBMaXN0LHRoaXMuY1M9ODUwLHRoaXMudVM9ODUwLHRoaXMuZFM9bmV3IFNpemUoMiwyKS5pdCgpLHRoaXMuZ1M9NWUzLHRoaXMubVM9MSx0aGlzLnBTPTEsdGhpcy55Uz1udWxsLHRoaXMueG09bnVsbCx0aGlzLldoPS0xLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1zdGF0aWMgV2hlZWxTY3JvbGw9MTtzdGF0aWMgV2hlZWxab29tPTI7c3RhdGljIFdoZWVsTm9uZT0zO3N0YXRpYyBHZXN0dXJlWm9vbT0xO3N0YXRpYyBHZXN0dXJlQ2FuY2VsPTI7c3RhdGljIEdlc3R1cmVOb25lPTM7Z2V0IG1vdXNlV2hlZWxCZWhhdmlvcigpe3JldHVybiB0aGlzLm1TfXNldCBtb3VzZVdoZWVsQmVoYXZpb3IodCl7VS5qKHQsV2hlZWxNb2RlLFwiV2hlZWxNb2RlXCIpLHRoaXMubVM9dH1nZXQgZ2VzdHVyZUJlaGF2aW9yKCl7cmV0dXJuIHRoaXMucFN9c2V0IGdlc3R1cmVCZWhhdmlvcih0KXtVLmoodCxHZXN0dXJlTW9kZSxcIkdlc3R1cmVNb2RlXCIpLHRoaXMucFM9dH1pbml0aWFsaXplU3RhbmRhcmRUb29scygpe311cGRhdGVBZG9ybm1lbnRzKHQpe2NvbnN0IGk9dGhpcy5jdXJyZW50VG9vbFRpcDtpZihpIGluc3RhbmNlb2YgQWRvcm5tZW50JiZ0aGlzLnhtPT09dCl7Y29uc3QgZT1pLmFkb3JuZWRPYmplY3Q7KHQhPT1udWxsP2UhPT1udWxsJiZlLnBhcnQ9PT10OmU9PT1udWxsKT90aGlzLnNob3dUb29sVGlwKGksZSk6dGhpcy5oaWRlVG9vbFRpcCgpfX1kb01vdXNlRG93bigpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dC5sYXN0SW5wdXQ7aWYoaS5pc1RvdWNoRXZlbnQmJnRoaXMuZ2VzdHVyZUJlaGF2aW9yPT09MiYmKGkuYnViYmxlcz0hMSksaS5pc011bHRpVG91Y2gpe2lmKHRoaXMuY2FuY2VsV2FpdEFmdGVyKCksdGhpcy5nZXN0dXJlQmVoYXZpb3I9PT0zKXtpLmJ1YmJsZXM9ITA7cmV0dXJufWlmKHRoaXMuZ2VzdHVyZUJlaGF2aW9yPT09MilyZXR1cm47aWYodC5jdXJyZW50VG9vbC5jYW5TdGFydE11bHRpVG91Y2goKSl7dC5jdXJyZW50VG9vbC5zdGFuZGFyZFBpbmNoWm9vbVN0YXJ0KCk7cmV0dXJufX1jb25zdCBlPXQudW5kb01hbmFnZXI7RGVidWcmJmUueXUmJmUudHJhbnNhY3Rpb25MZXZlbCE9PTAmJlUubnQoXCJXQVJOSU5HOiBJbiBUb29sTWFuYWdlci5kb01vdXNlRG93bjogVW5kb01hbmFnZXIudHJhbnNhY3Rpb25MZXZlbCBpcyBub3QgemVyb1wiKTtjb25zdCBzPXRoaXMubW91c2VEb3duVG9vbHMubGVuZ3RoO2ZvcihsZXQgbj0wO248cztuKyspe2NvbnN0IG89dGhpcy5tb3VzZURvd25Ub29scy5lbHQobik7aWYoby5kaWFncmFtPXRoaXMuZGlhZ3JhbSxvLmNhblN0YXJ0KCkpe3QuZG9Gb2N1cygpLHQuY3VycmVudFRvb2w9byx0LmN1cnJlbnRUb29sPT09byYmKG8uaXNBY3RpdmV8fG8uZG9BY3RpdmF0ZSgpLG8uZG9Nb3VzZURvd24oKSk7cmV0dXJufX10Lmxhc3RJbnB1dC5idXR0b249PT0xJiYodGhpcy5tb3VzZVdoZWVsQmVoYXZpb3I9PT0xP3RoaXMubW91c2VXaGVlbEJlaGF2aW9yPTI6dGhpcy5tb3VzZVdoZWVsQmVoYXZpb3I9PT0yJiYodGhpcy5tb3VzZVdoZWVsQmVoYXZpb3I9MSkpLHRoaXMuZG9BY3RpdmF0ZSgpLHRoaXMuc3RhbmRhcmRXYWl0QWZ0ZXIodGhpcy5ob2xkRGVsYXksaSl9ZG9Nb3VzZU1vdmUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXQubGFzdElucHV0O2lmKGkuaXNNdWx0aVRvdWNoKXtpZih0aGlzLmdlc3R1cmVCZWhhdmlvcj09PTMpe2kuYnViYmxlcz0hMDtyZXR1cm59aWYodGhpcy5nZXN0dXJlQmVoYXZpb3I9PT0yKXJldHVybjtpZih0LmN1cnJlbnRUb29sLmNhblN0YXJ0TXVsdGlUb3VjaCgpKXt0LmN1cnJlbnRUb29sLnN0YW5kYXJkUGluY2hab29tTW92ZSgpO3JldHVybn19aWYodGhpcy5pc0FjdGl2ZSl7Y29uc3Qgcz10aGlzLm1vdXNlTW92ZVRvb2xzLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKXtjb25zdCBvPXRoaXMubW91c2VNb3ZlVG9vbHMuZWx0KG4pO2lmKG8uZGlhZ3JhbT10aGlzLmRpYWdyYW0sby5jYW5TdGFydCgpKXt0LmRvRm9jdXMoKSx0LmN1cnJlbnRUb29sPW8sdC5jdXJyZW50VG9vbD09PW8mJihvLmlzQWN0aXZlfHxvLmRvQWN0aXZhdGUoKSxvLmRvTW91c2VNb3ZlKCkpO3JldHVybn19fXRoaXMuc3RhbmRhcmRNb3VzZUFjdGl2aXR5KHQpO2NvbnN0IGU9aS5ldmVudDtlIT09bnVsbCYmKGUudHlwZT09PVwicG9pbnRlcm1vdmVcInx8IWUuY2FuY2VsYWJsZSkmJihpLmJ1YmJsZXM9ITApfXN0YW5kYXJkTW91c2VBY3Rpdml0eSh0KXt0aGlzLnN0YW5kYXJkTW91c2VPdmVyKCksdGhpcy5pc0JleW9uZERyYWdTaXplKCkmJnRoaXMuc3RhbmRhcmRXYWl0QWZ0ZXIodGhpcy5pc0FjdGl2ZT90aGlzLmhvbGREZWxheTp0aGlzLmhvdmVyRGVsYXksdC5sYXN0SW5wdXQpfWRvQ3VycmVudE9iamVjdENoYW5nZWQodCxpKXtjb25zdCBlPXRoaXMuY3VycmVudFRvb2xUaXA7ZSE9PW51bGwmJihpIT09bnVsbCYmZSBpbnN0YW5jZW9mIEFkb3JubWVudCYmKGk9PT1lfHxpLmlzQ29udGFpbmVkQnkoZSkpfHx0aGlzLmhpZGVUb29sVGlwKCkpfWRvV2FpdEFmdGVyKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKGkuU0YoKSYmKHRoaXMuZG9Nb3VzZUhvdmVyKCksdGhpcy5pc0FjdGl2ZXx8dGhpcy5kb1Rvb2xUaXAoKSx0LmlzVG91Y2hFdmVudCYmIWkubGFzdElucHV0LmhhbmRsZWQpKXtjb25zdCBlPXQuY29weSgpO2UuYnV0dG9uPTIsaS5sYXN0SW5wdXQ9ZSxpLmp3PSEwLGkuZG9Nb3VzZVVwKCk7cmV0dXJufX1kb01vdXNlSG92ZXIoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXQubGFzdElucHV0O2kudGFyZ2V0T2JqZWN0PT09bnVsbCYmKGkudGFyZ2V0T2JqZWN0PXQuZmluZE9iamVjdEF0KGkuZG9jdW1lbnRQb2ludCxudWxsLG51bGwpKTtsZXQgZT1pLnRhcmdldE9iamVjdDtpZihlIT09bnVsbClmb3IoaS5oYW5kbGVkPSExO2UhPT1udWxsOyl7Y29uc3Qgcz10aGlzLmlzQWN0aXZlP2UubW91c2VIb2xkOmUubW91c2VIb3ZlcjtpZihzIT09bnVsbCYmKHMoaSxlKSxpLmhhbmRsZWQpKWJyZWFrO2U9ZS5wYW5lbH1lbHNle2NvbnN0IHM9dGhpcy5pc0FjdGl2ZT90Lm1vdXNlSG9sZDp0Lm1vdXNlSG92ZXI7cyE9PW51bGwmJnMoaSl9fWRvVG9vbFRpcCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dC5sYXN0SW5wdXQ7aS50YXJnZXRPYmplY3Q9PT1udWxsJiYoaS50YXJnZXRPYmplY3Q9dC5maW5kT2JqZWN0QXQoaS5kb2N1bWVudFBvaW50LG51bGwsbnVsbCkpO2xldCBlPWkudGFyZ2V0T2JqZWN0O2lmKGUhPT1udWxsKXtjb25zdCBzPXRoaXMuY3VycmVudFRvb2xUaXA7aWYocyBpbnN0YW5jZW9mIEFkb3JubWVudCYmKGU9PT1zfHxlLmlzQ29udGFpbmVkQnkocykpKXJldHVybjtmb3IoO2UhPT1udWxsOyl7Y29uc3Qgbj1lLnRvb2xUaXA7aWYobiE9PW51bGwpe3RoaXMuc2hvd1Rvb2xUaXAobixlKTtyZXR1cm59ZT1lLnBhbmVsfXRoaXMuaGlkZVRvb2xUaXAoKX1lbHNle2NvbnN0IHM9dC50b29sVGlwO3MhPT1udWxsP3RoaXMuc2hvd1Rvb2xUaXAocyxudWxsKTp0aGlzLmhpZGVUb29sVGlwKCl9fXNob3dUb29sVGlwKHQsaSl7RGVidWcmJiEodCBpbnN0YW5jZW9mIEFkb3JubWVudHx8dCBpbnN0YW5jZW9mIEhUTUxJbmZvKSYmVS5uKFwic2hvd1Rvb2xUaXA6dG9vbHRpcCBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksaSE9PW51bGwmJlUuZShpLEdyYXBoT2JqZWN0LFRvb2xNYW5hZ2VyLFwic2hvd1Rvb2xUaXA6b2JqXCIpO2NvbnN0IGU9dGhpcy5kaWFncmFtO2lmKHQhPT10aGlzLmN1cnJlbnRUb29sVGlwJiZ0aGlzLmhpZGVUb29sVGlwKCksdCBpbnN0YW5jZW9mIEFkb3JubWVudCl7dC5sYXllck5hbWU9XCJUb29sXCIsdC5zZWxlY3RhYmxlPSExLHQuc2NhbGU9MS9lLnNjYWxlLHQuY2F0ZWdvcnk9XCJUb29sVGlwXCIsdC5oYXNQbGFjZWhvbGRlcigpJiYodC5wbGFjZWhvbGRlci5zY2FsZT1lLnNjYWxlKTtjb25zdCBuPXQuZGlhZ3JhbTtuIT09bnVsbCYmbiE9PWUmJm4ucmVtb3ZlKHQpLGUuYWRkKHQpLGkhPT1udWxsP3QuYWRvcm5lZE9iamVjdD1pOnQuZGF0YT1lLm1vZGVsLHQuZW5zdXJlQm91bmRzKCksdGhpcy5wb3NpdGlvblRvb2xUaXAodCxpKX1lbHNlIHQgaW5zdGFuY2VvZiBIVE1MSW5mbyYmdCE9PXRoaXMuY3VycmVudFRvb2xUaXAmJnQuc2hvdyE9PW51bGwmJnQuc2hvdyhpLGUsdGhpcyk7dGhpcy5jdXJyZW50VG9vbFRpcD10LHRoaXMuV2ghPT0tMSYmKFUuQmcodGhpcy5XaCksdGhpcy5XaD0tMSk7Y29uc3Qgcz10aGlzLnRvb2xUaXBEdXJhdGlvbjtpZihzPjAmJnMhPT0xLzApe2NvbnN0IG49dGhpczt0aGlzLldoPVUubHIoKCk9Pm4uaGlkZVRvb2xUaXAoKSxzKX19cG9zaXRpb25Ub29sVGlwKHQsaSl7aWYodC5oYXNQbGFjZWhvbGRlcigpKXJldHVybjtjb25zdCBlPXQscz10aGlzLmRpYWdyYW0sbj1zLmxhc3RJbnB1dC5kb2N1bWVudFBvaW50LmNvcHkoKSxvPWUubWVhc3VyZWRCb3VuZHMscj1zLnZpZXdwb3J0Qm91bmRzO3MubGFzdElucHV0LmlzVG91Y2hFdmVudCYmKG4ueC09by53aWR0aCksbi54K28ud2lkdGg+ci5yaWdodCYmKG4ueC09by53aWR0aCs1L3Muc2NhbGUpLG4ueDxyLngmJihuLng9ci54KSxuLnkrMjAvcy5zY2FsZStvLmhlaWdodD5yLmJvdHRvbT9uLnktPW8uaGVpZ2h0KzUvcy5zY2FsZTpuLnkrPTIwL3Muc2NhbGUsbi55PHIueSYmKG4ueT1yLnkpLGUucG9zaXRpb249bn1oaWRlVG9vbFRpcCgpe3RoaXMuV2ghPT0tMSYmKFUuQmcodGhpcy5XaCksdGhpcy5XaD0tMSk7Y29uc3QgdD10aGlzLmRpYWdyYW0saT10aGlzLmN1cnJlbnRUb29sVGlwO2khPT1udWxsJiYoaSBpbnN0YW5jZW9mIEFkb3JubWVudD8odC5yZW1vdmUoaSksdGhpcy54bSE9PW51bGwmJnRoaXMueG0ucmVtb3ZlQWRvcm5tZW50KGkuY2F0ZWdvcnkpLGkuZGF0YT1udWxsLGkuYWRvcm5lZE9iamVjdD1udWxsKTppIGluc3RhbmNlb2YgSFRNTEluZm8mJmkuaGlkZSE9PW51bGwmJmkuaGlkZSh0LHRoaXMpLHRoaXMuY3VycmVudFRvb2xUaXA9bnVsbCl9Z2V0IGN1cnJlbnRUb29sVGlwKCl7cmV0dXJuIHRoaXMueVN9c2V0IGN1cnJlbnRUb29sVGlwKHQpe0RlYnVnJiZ0IT09bnVsbCYmISh0IGluc3RhbmNlb2YgQWRvcm5tZW50fHx0IGluc3RhbmNlb2YgSFRNTEluZm8pJiZVLm4oXCJUb29sTWFuYWdlci5jdXJyZW50VG9vbFRpcCBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksdGhpcy55Uz10LHRoaXMueG09dCE9PW51bGwmJnQgaW5zdGFuY2VvZiBBZG9ybm1lbnQ/dC5hZG9ybmVkUGFydDpudWxsfWRvTW91c2VVcCgpe3RoaXMuY2FuY2VsV2FpdEFmdGVyKCk7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodGhpcy5pc0FjdGl2ZSl7Y29uc3QgaT10aGlzLm1vdXNlVXBUb29scy5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl7Y29uc3Qgcz10aGlzLm1vdXNlVXBUb29scy5lbHQoZSk7aWYocy5kaWFncmFtPXRoaXMuZGlhZ3JhbSxzLmNhblN0YXJ0KCkpe3QuZG9Gb2N1cygpLHQuY3VycmVudFRvb2w9cyx0LmN1cnJlbnRUb29sPT09cyYmKHMuaXNBY3RpdmV8fHMuZG9BY3RpdmF0ZSgpLHMuZG9Nb3VzZVVwKCkpO3JldHVybn19fXQuZG9Gb2N1cygpLHRoaXMuZG9EZWFjdGl2YXRlKCl9ZG9Nb3VzZVdoZWVsKCl7dGhpcy5zdGFuZGFyZE1vdXNlV2hlZWwoKX1kb0tleURvd24oKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0LmNvbW1hbmRIYW5kbGVyIT09bnVsbCYmdC5jb21tYW5kSGFuZGxlci5kb0tleURvd24oKX1kb0tleVVwKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dC5jb21tYW5kSGFuZGxlciE9PW51bGwmJnQuY29tbWFuZEhhbmRsZXIuZG9LZXlVcCgpfWZpbmRUb29sKHQpe1UuaSh0LFwic3RyaW5nXCIsVG9vbE1hbmFnZXIsXCJmaW5kVG9vbDpuYW1lXCIpO2xldCBpPXRoaXMubW91c2VEb3duVG9vbHMubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspe2NvbnN0IHM9dGhpcy5tb3VzZURvd25Ub29scy5lbHQoZSk7aWYocy5uYW1lPT09dClyZXR1cm4gc31pPXRoaXMubW91c2VNb3ZlVG9vbHMubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspe2NvbnN0IHM9dGhpcy5tb3VzZU1vdmVUb29scy5lbHQoZSk7aWYocy5uYW1lPT09dClyZXR1cm4gc31pPXRoaXMubW91c2VVcFRvb2xzLmxlbmd0aDtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCBzPXRoaXMubW91c2VVcFRvb2xzLmVsdChlKTtpZihzLm5hbWU9PT10KXJldHVybiBzfXJldHVybiBudWxsfXJlcGxhY2VUb29sKHQsaSl7VS5pKHQsXCJzdHJpbmdcIixUb29sTWFuYWdlcixcInJlcGxhY2VUb29sOm5hbWVcIiksaSE9PW51bGwmJihVLmUoaSxUb29sLFRvb2xNYW5hZ2VyLFwicmVwbGFjZVRvb2w6bmV3dG9vbFwiKSxpLmRpYWdyYW09dGhpcy5kaWFncmFtKTtsZXQgZT10aGlzLm1vdXNlRG93blRvb2xzLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPXRoaXMubW91c2VEb3duVG9vbHMuZWx0KHMpO2lmKG4ubmFtZT09PXQpcmV0dXJuIGkhPT1udWxsP3RoaXMubW91c2VEb3duVG9vbHMuc2V0RWx0KHMsaSk6dGhpcy5tb3VzZURvd25Ub29scy5yZW1vdmVBdChzKSxufWU9dGhpcy5tb3VzZU1vdmVUb29scy5sZW5ndGg7Zm9yKGxldCBzPTA7czxlO3MrKyl7Y29uc3Qgbj10aGlzLm1vdXNlTW92ZVRvb2xzLmVsdChzKTtpZihuLm5hbWU9PT10KXJldHVybiBpIT09bnVsbD90aGlzLm1vdXNlTW92ZVRvb2xzLnNldEVsdChzLGkpOnRoaXMubW91c2VNb3ZlVG9vbHMucmVtb3ZlQXQocyksbn1lPXRoaXMubW91c2VVcFRvb2xzLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPXRoaXMubW91c2VVcFRvb2xzLmVsdChzKTtpZihuLm5hbWU9PT10KXJldHVybiBpIT09bnVsbD90aGlzLm1vdXNlVXBUb29scy5zZXRFbHQocyxpKTp0aGlzLm1vdXNlVXBUb29scy5yZW1vdmVBdChzKSxufXJldHVybiBudWxsfXJlcGxhY2VTdGFuZGFyZFRvb2wodCxpLGUpe3RoaXMudGkodCxpLGUpfXRpKHQsaSxlKXtVLmkodCxcInN0cmluZ1wiLFRvb2xNYW5hZ2VyLFwicmVwbGFjZVN0YW5kYXJkVG9vbDpuYW1lXCIpLFUuZShlLExpc3QsVG9vbE1hbmFnZXIsXCJyZXBsYWNlU3RhbmRhcmRUb29sOmxpc3RcIiksaSE9PW51bGwmJihVLmUoaSxUb29sLFRvb2xNYW5hZ2VyLFwicmVwbGFjZVN0YW5kYXJkVG9vbDpuZXd0b29sXCIpLGkubmFtZT10LGkuZGlhZ3JhbT10aGlzLmRpYWdyYW0pLHRoaXMuZmluZFRvb2wodCk/dGhpcy5yZXBsYWNlVG9vbCh0LGkpOmkhPT1udWxsJiZlLmFkZChpKX1nZXQgbW91c2VEb3duVG9vbHMoKXtyZXR1cm4gdGhpcy5KQ31nZXQgbW91c2VNb3ZlVG9vbHMoKXtyZXR1cm4gdGhpcy4kQ31nZXQgbW91c2VVcFRvb2xzKCl7cmV0dXJuIHRoaXMuWkN9Z2V0IGhvdmVyRGVsYXkoKXtyZXR1cm4gdGhpcy5jU31zZXQgaG92ZXJEZWxheSh0KXtVLmkodCxcIm51bWJlclwiLFRvb2xNYW5hZ2VyLFwiaG92ZXJEZWxheVwiKSx0aGlzLmNTPXR9Z2V0IGhvbGREZWxheSgpe3JldHVybiB0aGlzLnVTfXNldCBob2xkRGVsYXkodCl7VS5pKHQsXCJudW1iZXJcIixUb29sTWFuYWdlcixcImhvbGREZWxheVwiKSx0aGlzLnVTPXR9Z2V0IGRyYWdTaXplKCl7cmV0dXJuIHRoaXMuZFN9c2V0IGRyYWdTaXplKHQpe1UuZSh0LFNpemUsVG9vbE1hbmFnZXIsXCJkcmFnU2l6ZVwiKSx0aGlzLmRTPXQuTigpfWdldCB0b29sVGlwRHVyYXRpb24oKXtyZXR1cm4gdGhpcy5nU31zZXQgdG9vbFRpcER1cmF0aW9uKHQpe1UuaSh0LFwibnVtYmVyXCIsVG9vbE1hbmFnZXIsXCJ0b29sVGlwRHVyYXRpb25cIiksdGhpcy5nUz10fWdldCBhY3Rpb25Ub29sKCl7cmV0dXJuIHRoaXMuZmluZFRvb2woXCJBY3Rpb25cIil9c2V0IGFjdGlvblRvb2wodCl7dGhpcy50aShcIkFjdGlvblwiLHQsdGhpcy5tb3VzZURvd25Ub29scyl9Z2V0IHJlbGlua2luZ1Rvb2woKXtyZXR1cm4gdGhpcy5maW5kVG9vbChcIlJlbGlua2luZ1wiKX1zZXQgcmVsaW5raW5nVG9vbCh0KXt0aGlzLnRpKFwiUmVsaW5raW5nXCIsdCx0aGlzLm1vdXNlRG93blRvb2xzKX1nZXQgbGlua1Jlc2hhcGluZ1Rvb2woKXtyZXR1cm4gdGhpcy5maW5kVG9vbChcIkxpbmtSZXNoYXBpbmdcIil9c2V0IGxpbmtSZXNoYXBpbmdUb29sKHQpe3RoaXMudGkoXCJMaW5rUmVzaGFwaW5nXCIsdCx0aGlzLm1vdXNlRG93blRvb2xzKX1nZXQgcmVzaXppbmdUb29sKCl7cmV0dXJuIHRoaXMuZmluZFRvb2woXCJSZXNpemluZ1wiKX1zZXQgcmVzaXppbmdUb29sKHQpe3RoaXMudGkoXCJSZXNpemluZ1wiLHQsdGhpcy5tb3VzZURvd25Ub29scyl9Z2V0IHJvdGF0aW5nVG9vbCgpe3JldHVybiB0aGlzLmZpbmRUb29sKFwiUm90YXRpbmdcIil9c2V0IHJvdGF0aW5nVG9vbCh0KXt0aGlzLnRpKFwiUm90YXRpbmdcIix0LHRoaXMubW91c2VEb3duVG9vbHMpfWdldCBsaW5raW5nVG9vbCgpe3JldHVybiB0aGlzLmZpbmRUb29sKFwiTGlua2luZ1wiKX1zZXQgbGlua2luZ1Rvb2wodCl7dGhpcy50aShcIkxpbmtpbmdcIix0LHRoaXMubW91c2VNb3ZlVG9vbHMpfWdldCBkcmFnZ2luZ1Rvb2woKXtyZXR1cm4gdGhpcy5maW5kVG9vbChcIkRyYWdnaW5nXCIpfXNldCBkcmFnZ2luZ1Rvb2wodCl7dGhpcy50aShcIkRyYWdnaW5nXCIsdCx0aGlzLm1vdXNlTW92ZVRvb2xzKX1nZXQgZHJhZ1NlbGVjdGluZ1Rvb2woKXtyZXR1cm4gdGhpcy5maW5kVG9vbChcIkRyYWdTZWxlY3RpbmdcIil9c2V0IGRyYWdTZWxlY3RpbmdUb29sKHQpe3RoaXMudGkoXCJEcmFnU2VsZWN0aW5nXCIsdCx0aGlzLm1vdXNlTW92ZVRvb2xzKX1nZXQgcGFubmluZ1Rvb2woKXtyZXR1cm4gdGhpcy5maW5kVG9vbChcIlBhbm5pbmdcIil9c2V0IHBhbm5pbmdUb29sKHQpe3RoaXMudGkoXCJQYW5uaW5nXCIsdCx0aGlzLm1vdXNlTW92ZVRvb2xzKX1nZXQgY29udGV4dE1lbnVUb29sKCl7cmV0dXJuIHRoaXMuZmluZFRvb2woXCJDb250ZXh0TWVudVwiKX1zZXQgY29udGV4dE1lbnVUb29sKHQpe3RoaXMudGkoXCJDb250ZXh0TWVudVwiLHQsdGhpcy5tb3VzZVVwVG9vbHMpfWdldCB0ZXh0RWRpdGluZ1Rvb2woKXtyZXR1cm4gdGhpcy5maW5kVG9vbChcIlRleHRFZGl0aW5nXCIpfXNldCB0ZXh0RWRpdGluZ1Rvb2wodCl7dGhpcy50aShcIlRleHRFZGl0aW5nXCIsdCx0aGlzLm1vdXNlVXBUb29scyl9Z2V0IGNsaWNrQ3JlYXRpbmdUb29sKCl7cmV0dXJuIHRoaXMuZmluZFRvb2woXCJDbGlja0NyZWF0aW5nXCIpfXNldCBjbGlja0NyZWF0aW5nVG9vbCh0KXt0aGlzLnRpKFwiQ2xpY2tDcmVhdGluZ1wiLHQsdGhpcy5tb3VzZVVwVG9vbHMpfWdldCBjbGlja1NlbGVjdGluZ1Rvb2woKXtyZXR1cm4gdGhpcy5maW5kVG9vbChcIkNsaWNrU2VsZWN0aW5nXCIpfXNldCBjbGlja1NlbGVjdGluZ1Rvb2wodCl7dGhpcy50aShcIkNsaWNrU2VsZWN0aW5nXCIsdCx0aGlzLm1vdXNlVXBUb29scyl9fWNsYXNzIERyYWdnaW5nVG9vbCBleHRlbmRzIFRvb2x7d1M7eFM7Zm47YlM7a1M7U1M7TVM7TWY7Ym07UFM7amg7eXI7UUM7TlM7d3U7eHU7Q1M7QVM7TFM7VFM7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJEcmFnZ2luZ1wiLHRoaXMud1M9ITAsdGhpcy5UUz0hMCx0aGlzLnhTPSEwLHRoaXMuZm49bnVsbCx0aGlzLmJTPW51bGwsdGhpcy5rUz1udWxsLHRoaXMuU1M9bnVsbCx0aGlzLk1TPSExLHRoaXMud3U9ITEsdGhpcy5NZj1uZXcgUG9pbnQoTmFOLE5hTiksdGhpcy5ibT1uZXcgUG9pbnQsdGhpcy5QUz0hMCx0aGlzLmpoPTEwMCx0aGlzLnlyPVtdLHRoaXMuUUM9bmV3IEdTZXQoKS5wKCksdGhpcy5OUz1uZXcgRHJhZ2dpbmdPcHRpb25zLHRoaXMueHU9bnVsbCx0aGlzLkNTPVwiY29weVwiLHRoaXMuQVM9XCJcIix0aGlzLkxTPVwibm8tZHJvcFwiLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1nZXQgaXNDb3B5RW5hYmxlZCgpe3JldHVybiB0aGlzLndTfXNldCBpc0NvcHlFbmFibGVkKHQpe1UuaSh0LFwiYm9vbGVhblwiLERyYWdnaW5nVG9vbCxcImlzQ29weUVuYWJsZWRcIiksdGhpcy53Uz10fWdldCBjb3BpZXNFZmZlY3RpdmVDb2xsZWN0aW9uKCl7cmV0dXJuIHRoaXMueFN9c2V0IGNvcGllc0VmZmVjdGl2ZUNvbGxlY3Rpb24odCl7VS5pKHQsXCJib29sZWFuXCIsRHJhZ2dpbmdUb29sLFwiY29waWVzRWZmZWN0aXZlQ29sbGVjdGlvblwiKSx0aGlzLnhTPXR9Z2V0IGRyYWdPcHRpb25zKCl7cmV0dXJuIHRoaXMuTlN9c2V0IGRyYWdPcHRpb25zKHQpe1UuZSh0LERyYWdnaW5nT3B0aW9ucyxEcmFnZ2luZ1Rvb2wsXCJkcmFnT3B0aW9uc1wiKSx0aGlzLk5TPXR9Z2V0IGlzR3JpZFNuYXBFbmFibGVkKCl7cmV0dXJuIHRoaXMuZHJhZ09wdGlvbnMuaXNHcmlkU25hcEVuYWJsZWR9c2V0IGlzR3JpZFNuYXBFbmFibGVkKHQpe1UuaSh0LFwiYm9vbGVhblwiLERyYWdnaW5nVG9vbCxcImlzR3JpZFNuYXBFbmFibGVkXCIpLHRoaXMuZHJhZ09wdGlvbnMuaXNHcmlkU25hcEVuYWJsZWQ9dH1nZXQgaXNDb21wbGV4Um91dGluZ1JlYWx0aW1lKCl7cmV0dXJuIHRoaXMuUFN9c2V0IGlzQ29tcGxleFJvdXRpbmdSZWFsdGltZSh0KXt0aGlzLlBTPXQ7Y29uc3QgaT10aGlzLmRpYWdyYW0uZmluZFJvdXRlcihcIkF2b2lkc0xpbmtzXCIpO2khPT1udWxsJiYoaS5pc1JlYWx0aW1lPXQpfWdldCBpc0dyaWRTbmFwUmVhbHRpbWUoKXtyZXR1cm4gdGhpcy5kcmFnT3B0aW9ucy5pc0dyaWRTbmFwUmVhbHRpbWV9c2V0IGlzR3JpZFNuYXBSZWFsdGltZSh0KXtVLmkodCxcImJvb2xlYW5cIixEcmFnZ2luZ1Rvb2wsXCJpc0dyaWRTbmFwUmVhbHRpbWVcIiksdGhpcy5kcmFnT3B0aW9ucy5pc0dyaWRTbmFwUmVhbHRpbWU9dH1nZXQgZ3JpZFNuYXBDZWxsU2l6ZSgpe3JldHVybiB0aGlzLmRyYWdPcHRpb25zLmdyaWRTbmFwQ2VsbFNpemV9c2V0IGdyaWRTbmFwQ2VsbFNpemUodCl7VS5lKHQsU2l6ZSxEcmFnZ2luZ1Rvb2wsXCJncmlkU25hcENlbGxTaXplXCIpLHRoaXMuZHJhZ09wdGlvbnMuZ3JpZFNuYXBDZWxsU2l6ZS5lcXVhbHModCl8fCh0PXQuTigpLHRoaXMuZHJhZ09wdGlvbnMuZ3JpZFNuYXBDZWxsU2l6ZT10KX1nZXQgZ3JpZFNuYXBDZWxsU3BvdCgpe3JldHVybiB0aGlzLmRyYWdPcHRpb25zLmdyaWRTbmFwQ2VsbFNwb3R9c2V0IGdyaWRTbmFwQ2VsbFNwb3QodCl7VS5lKHQsU3BvdCxEcmFnZ2luZ1Rvb2wsXCJncmlkU25hcENlbGxTcG90XCIpLHRoaXMuZHJhZ09wdGlvbnMuZ3JpZFNuYXBDZWxsU3BvdC5lcXVhbHModCl8fCh0PXQuTigpLHRoaXMuZHJhZ09wdGlvbnMuZ3JpZFNuYXBDZWxsU3BvdD10KX1nZXQgZ3JpZFNuYXBPcmlnaW4oKXtyZXR1cm4gdGhpcy5kcmFnT3B0aW9ucy5ncmlkU25hcE9yaWdpbn1zZXQgZ3JpZFNuYXBPcmlnaW4odCl7VS5lKHQsUG9pbnQsRHJhZ2dpbmdUb29sLFwiZ3JpZFNuYXBPcmlnaW5cIiksdGhpcy5kcmFnT3B0aW9ucy5ncmlkU25hcE9yaWdpbi5lcXVhbHModCl8fCh0PXQuTigpLHRoaXMuZHJhZ09wdGlvbnMuZ3JpZFNuYXBPcmlnaW49dCl9Z2V0IGRyYWdzTGluaygpe3JldHVybiB0aGlzLmRyYWdPcHRpb25zLmRyYWdzTGlua31zZXQgZHJhZ3NMaW5rKHQpe1UuaSh0LFwiYm9vbGVhblwiLERyYWdnaW5nVG9vbCxcImRyYWdzTGlua1wiKSx0aGlzLmRyYWdPcHRpb25zLmRyYWdzTGluaz10fWdldCBkcmFnc1RyZWUoKXtyZXR1cm4gdGhpcy5kcmFnT3B0aW9ucy5kcmFnc1RyZWV9c2V0IGRyYWdzVHJlZSh0KXtVLmkodCxcImJvb2xlYW5cIixEcmFnZ2luZ1Rvb2wsXCJkcmFnc1RyZWVcIiksdGhpcy5kcmFnT3B0aW9ucy5kcmFnc1RyZWU9dH1nZXQgY29weUN1cnNvcigpe3JldHVybiB0aGlzLkNTfXNldCBjb3B5Q3Vyc29yKHQpe3RoaXMuQ1M9dH1nZXQgbW92ZUN1cnNvcigpe3JldHVybiB0aGlzLkFTfXNldCBtb3ZlQ3Vyc29yKHQpe3RoaXMuQVM9dH1nZXQgbm9kcm9wQ3Vyc29yKCl7cmV0dXJuIHRoaXMuTFN9c2V0IG5vZHJvcEN1cnNvcih0KXt0aGlzLkxTPXR9Z2V0IGN1cnJlbnRQYXJ0KCl7cmV0dXJuIHRoaXMuYlN9c2V0IGN1cnJlbnRQYXJ0KHQpe3QhPT1udWxsJiZVLmUodCxQYXJ0LERyYWdnaW5nVG9vbCxcImN1cnJlbnRQYXJ0XCIpLHRoaXMuYlM9dH1nZXQgY29waWVkUGFydHMoKXtyZXR1cm4gdGhpcy5TU31zZXQgY29waWVkUGFydHModCl7dGhpcy5TUz10fWdldCBkcmFnZ2VkUGFydHMoKXtyZXR1cm4gdGhpcy5rU31zZXQgZHJhZ2dlZFBhcnRzKHQpe3RoaXMua1M9dH1nZXQgZHJhZ2dpbmdQYXJ0cygpe3JldHVybiB0aGlzLmNvcGllZFBhcnRzIT09bnVsbD90aGlzLmNvcGllZFBhcnRzLnRvS2V5U2V0KCk6dGhpcy5kcmFnZ2VkUGFydHMhPT1udWxsP3RoaXMuZHJhZ2dlZFBhcnRzLnRvS2V5U2V0KCk6dGhpcy5RQ31nZXQgZHJhZ2dlZExpbmsoKXtyZXR1cm4gdGhpcy5kaWFncmFtLmRyYWdnZWRMaW5rfXNldCBkcmFnZ2VkTGluayh0KXt0IT09bnVsbCYmVS5lKHQsTGluayxEcmFnZ2luZ1Rvb2wsXCJkcmFnZ2VkTGlua1wiKSx0aGlzLmRpYWdyYW0uZHJhZ2dlZExpbms9dH1nZXQgaXNEcmFnT3V0U3RhcnRlZCgpe3JldHVybiB0aGlzLk1TfXNldCBpc0RyYWdPdXRTdGFydGVkKHQpe3RoaXMuTVM9dH1nZXQgc3RhcnRQb2ludCgpe3JldHVybiB0aGlzLmJtfXNldCBzdGFydFBvaW50KHQpe1UuZSh0LFBvaW50LERyYWdnaW5nVG9vbCxcInN0YXJ0UG9pbnRcIiksdGhpcy5ibS5lcXVhbHModCl8fHRoaXMuYm0uYyh0KX1nZXQgZGVsYXkoKXtyZXR1cm4gdGhpcy5qaH1zZXQgZGVsYXkodCl7VS5pKHQsXCJudW1iZXJcIixEcmFnZ2luZ1Rvb2wsXCJkZWxheVwiKSx0aGlzLmpoPXR9Y2FuU3RhcnQoKXtpZighdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodD09PW51bGx8fHQuaXNSZWFkT25seSYmIXQuYWxsb3dEcmFnT3V0fHwhdC5hbGxvd01vdmUmJiF0LmFsbG93Q29weSYmIXQuYWxsb3dEcmFnT3V0fHwhdC5hbGxvd1NlbGVjdClyZXR1cm4hMTtjb25zdCBpPXQubGFzdElucHV0O3JldHVybiFpLmxlZnR8fHQuY3VycmVudFRvb2whPT10aGlzJiYoIXRoaXMuaXNCZXlvbmREcmFnU2l6ZSgpfHxpLmlzVG91Y2hFdmVudCYmaS50aW1lc3RhbXAtdC5maXJzdElucHV0LnRpbWVzdGFtcDx0aGlzLmpoKT8hMTp0aGlzLmZpbmREcmFnZ2FibGVQYXJ0KCkhPT1udWxsfWZpbmREcmFnZ2FibGVQYXJ0KCl7Y29uc3QgdD10aGlzLmRpYWdyYW07bGV0IGk9dC5maW5kUGFydEF0KHQuZmlyc3RJbnB1dC5kb2N1bWVudFBvaW50LCExKTtpZihpPT09bnVsbClyZXR1cm4gbnVsbDtmb3IoO2khPT1udWxsJiYhaS5jYW5TZWxlY3QoKTspaT1pLmNvbnRhaW5pbmdHcm91cDtyZXR1cm4gaSE9PW51bGwmJihpLmNhbk1vdmUoKXx8aS5jYW5Db3B5KCkpP2k6bnVsbH1zdGFuZGFyZE1vdXNlU2VsZWN0KCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYoIXQuYWxsb3dTZWxlY3QpcmV0dXJuO2xldCBpPXQuZmluZFBhcnRBdCh0LmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCwhMSk7aWYoaSE9PW51bGwpe2Zvcig7aSE9PW51bGwmJiFpLmNhblNlbGVjdCgpOylpPWkuY29udGFpbmluZ0dyb3VwO2lmKHRoaXMuY3VycmVudFBhcnQ9aSx0aGlzLmN1cnJlbnRQYXJ0IT09bnVsbCYmIXRoaXMuY3VycmVudFBhcnQuaXNTZWxlY3RlZCl7dC5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0LnNlbGVjdGlvbik7Y29uc3QgZT10Lmxhc3RJbnB1dDshKFUucnI/ZS5tZXRhOmUuY29udHJvbCkmJiFlLnNoaWZ0JiZ0LmNsZWFyU2VsZWN0aW9uKCEwKSx0aGlzLmN1cnJlbnRQYXJ0LmlzU2VsZWN0ZWQ9ITAsdC5PKFwiQ2hhbmdlZFNlbGVjdGlvblwiLHQuc2VsZWN0aW9uKX19fWRvQWN0aXZhdGUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLnh1PW51bGwsdGhpcy5jdXJyZW50UGFydD09PW51bGwmJnRoaXMuc3RhbmRhcmRNb3VzZVNlbGVjdCgpO2NvbnN0IGk9dGhpcy5jdXJyZW50UGFydDtpZihpPT09bnVsbHx8IWkuY2FuTW92ZSgpJiYhaS5jYW5Db3B5KCkpcmV0dXJuO3QuY2FjaGVHcm91cEV4dGVybmFsTGlua3MoITApLERyYWdnaW5nVG9vbC5idD1udWxsLHRoaXMuaXNBY3RpdmU9ITAsdGhpcy5NZi5zZXQodC5wb3NpdGlvbiksdGhpcy5EUyh0LnNlbGVjdGlvbiksdGhpcy55ci5sZW5ndGg9MCx0LmFuaW1hdGlvbk1hbmFnZXIuc3RvcEFuaW1hdGlvbigpO2NvbnN0IGU9dGhpcy5jb21wdXRlRWZmZWN0aXZlQ29sbGVjdGlvbih0LnNlbGVjdGlvbix0aGlzLmRyYWdPcHRpb25zKTt0aGlzLmRyYWdnZWRQYXJ0cz1lLHRoaXMuVFM9ISF0aGlzLmRpYWdyYW0ubGF5b3V0LmlzUmVhbHRpbWUsdGhpcy5kaWFncmFtLmxheW91dC5pc1JlYWx0aW1lPSExLHQuYnU9ITAsdC5nZXRSZW5kZXJpbmdIaW50KFwidGVtcG9yYXJ5UGl4ZWxSYXRpb1wiKT09PSEwJiZ0LmF2Z1NwZj4zMCYmdC52dygpLHQuX0ModGhpcy5kcmFnZ2VkUGFydHMpLHQua3U9ITAsdGhpcy5zdGFydFRyYW5zYWN0aW9uKFwiRHJhZ1wiKSx0aGlzLnN0YXJ0UG9pbnQ9dC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsdC5pc01vdXNlQ2FwdHVyZWQ9ITAsdC5hbGxvd0RyYWdPdXQmJnRoaXMuTUYoKX1EUyh0KXtpZighdGhpcy5kcmFnc0xpbmspcmV0dXJuO2NvbnN0IGk9dGhpcy5kaWFncmFtLGU9aS5tb2RlbC5rbSgpLHM9dC5maXJzdCgpO2UmJnQuY291bnQ9PT0xJiZzIGluc3RhbmNlb2YgTGluayYmdGhpcy5tYXlEcmFnTGluayhzKT8odGhpcy5kcmFnZ2VkTGluaz1zLHRoaXMuZHJhZ2dlZExpbmsuY2FuUmVsaW5rRnJvbSgpJiZ0aGlzLmRyYWdnZWRMaW5rLmNhblJlbGlua1RvKCkmJnRoaXMuZHJhZ2dlZExpbmsuY2xlYXJBZG9ybm1lbnRzKCksdGhpcy5mbj1pLnRvb2xNYW5hZ2VyLmZpbmRUb29sKFwiUmVsaW5raW5nXCIpLHRoaXMuZm49PT1udWxsJiYodGhpcy5mbj1uZXcgUmVsaW5raW5nVG9vbCx0aGlzLmZuLmRpYWdyYW09aSksdGhpcy5mbi5vcmlnaW5hbExpbms9dGhpcy5kcmFnZ2VkTGluayk6KHRoaXMuZHJhZ2dlZExpbms9bnVsbCx0aGlzLmZuPW51bGwpfW1heURyYWdMaW5rKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtO3JldHVybiBpIT09bnVsbCYmaS5hbGxvd1JlbGlua31jb21wdXRlRWZmZWN0aXZlQ29sbGVjdGlvbih0LGkpe3JldHVybiB0aGlzLmRpYWdyYW0uY29tbWFuZEhhbmRsZXIuY29tcHV0ZUVmZmVjdGl2ZUNvbGxlY3Rpb24odCxpKX1Lcyh0KXtyZXR1cm4gdD09PXZvaWQgMD9uZXcgRHJhZ2dpbmdJbmZvKFBvaW50Lk5vKTp0aGlzLmlzR3JpZFNuYXBFbmFibGVkP25ldyBEcmFnZ2luZ0luZm8obmV3IFBvaW50KE1hdGgucm91bmQodC54KjFlMykvMWUzLE1hdGgucm91bmQodC55KjFlMykvMWUzKSk6bmV3IERyYWdnaW5nSW5mbyh0LmNvcHkoKSl9ZG9EZWFjdGl2YXRlKCl7dGhpcy5pc0FjdGl2ZT0hMTtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLmRpYWdyYW0ubGF5b3V0LmlzUmVhbHRpbWU9dGhpcy5UUyx0Lmt1PSExLHQuTmw9ITAsdC5jYWNoZUdyb3VwRXh0ZXJuYWxMaW5rcyghMSksdC5zdG9wQXV0b1Njcm9sbCgpLHRoaXMuRlMoKSx0LlJTKHRoaXMuZHJhZ2dlZFBhcnRzKSx0aGlzLnh1PW51bGwsdGhpcy5jdXJyZW50UGFydD1udWxsLHRoaXMuZHJhZ2dlZFBhcnRzPW51bGwsdGhpcy5pc0RyYWdPdXRTdGFydGVkPSExLHRoaXMud3U9ITEsRHJhZ2dpbmdUb29sLlBGKCksdGhpcy50QSgpLHRoaXMuTWYucyhOYU4sTmFOKSxEcmFnZ2luZ1Rvb2wudmghPT1udWxsJiYoRHJhZ2dpbmdUb29sLnZoLmN1cnJlbnRDdXJzb3I9XCJcIiksRHJhZ2dpbmdUb29sLnZoPW51bGwsRHJhZ2dpbmdUb29sLmJ0PW51bGwsdGhpcy5DbCgpLHQuaXNNb3VzZUNhcHR1cmVkPSExLHQuY3VycmVudEN1cnNvcj1cIlwiLHQuYnU9ITEsdGhpcy5zdG9wVHJhbnNhY3Rpb24oKSx0LklTKCEwKX1zdG9wVHJhbnNhY3Rpb24oKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXN1cGVyLnN0b3BUcmFuc2FjdGlvbigpO3JldHVybiBpJiZ0LnVuZG9NYW5hZ2VyLnRyYW5zYWN0aW9uVG9VbmRvIT09bnVsbCYmdC51bmRvTWFuYWdlci50cmFuc2FjdGlvblRvVW5kby5vcHRpbWl6ZSgpLGl9RlMoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXQuc2tpcHNVbmRvTWFuYWdlcjt0LnNraXBzVW5kb01hbmFnZXI9ITA7Y29uc3QgZT10Lmxhc3RJbnB1dDt0aGlzLmlBKGUsbnVsbCksdC5za2lwc1VuZG9NYW5hZ2VyPWksdGhpcy55ci5sZW5ndGg9MH1lQSgpe3RoaXMuQ2woKSx0aGlzLk9TKCk7Y29uc3QgdD10aGlzLmRpYWdyYW07dGhpcy5NZi5pc1JlYWwoKSYmKHQucG9zaXRpb249dGhpcy5NZiksdC5zdG9wQXV0b1Njcm9sbCgpfWRvQ2FuY2VsKCl7dGhpcy5DbCgpLHRoaXMuT1MoKTtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLk1mLmlzUmVhbCgpJiYodC5wb3NpdGlvbj10aGlzLk1mKSx0aGlzLnN0b3BUb29sKCl9ZG9LZXlEb3duKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYoIXRoaXMuaXNBY3RpdmUpcmV0dXJuO2NvbnN0IGk9dC5sYXN0SW5wdXQsZT10LnByZXZpb3VzSW5wdXQ7aS5jb2RlPT09XCJFc2NhcGVcIj90aGlzLmRvQ2FuY2VsKCk6KGkuY29kZSE9PWUuY29kZXx8aS5tb2RpZmllcnMhPT1lLm1vZGlmaWVycykmJnRoaXMuZG9Nb3VzZU1vdmUoKX1kb0tleVVwKCl7dGhpcy5pc0FjdGl2ZSYmdGhpcy5kb01vdXNlTW92ZSgpfU5GKHQsaSl7bGV0IGU9MS8wLHM9MS8wLG49LTEvMCxvPS0xLzA7Y29uc3Qgcj10Lml0ZXJhdG9yO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7aWYoIWwuaXNWaXNpYmxlKCkpY29udGludWU7Y29uc3QgaD1sLmxvY2F0aW9uLGY9aC54LGE9aC55O2lzTmFOKGYpfHxpc05hTihhKXx8KGY8ZSYmKGU9ZiksYTxzJiYocz1hKSxmPm4mJihuPWYpLGE+byYmKG89YSkpfXJldHVybiBlPT09MS8wP2kucygwLDAsMCwwKTppLnMoZSxzLG4tZSxvLXMpLGl9RVModCl7aWYodGhpcy5jb3BpZWRQYXJ0cyE9PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKHQmJihpLmlzUmVhZE9ubHl8fGkuaXNNb2RlbFJlYWRPbmx5KXx8dGhpcy5kcmFnZ2VkUGFydHM9PT1udWxsKXJldHVybjtjb25zdCBlPWkudW5kb01hbmFnZXI7ZS5pc0VuYWJsZWQmJmUuaXNJblRyYW5zYWN0aW9uP2UuY3VycmVudFRyYW5zYWN0aW9uIT09bnVsbCYmZS5jdXJyZW50VHJhbnNhY3Rpb24uY2hhbmdlcy5jb3VudD4wJiYoaS51bmRvTWFuYWdlci5yb2xsYmFja1RyYW5zYWN0aW9uKCksaS5zdGFydFRyYW5zYWN0aW9uKFwiRHJhZ1wiKSk6dGhpcy5PUygpLGkuc2tpcHNVbmRvTWFuYWdlcj0hdCxpLnBhcnRNYW5hZ2VyLmFkZHNUb1RlbXBvcmFyeUxheWVyPSF0LHRoaXMuc3RhcnRQb2ludD1pLmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludDtjb25zdCBzPXRoaXMuY29waWVzRWZmZWN0aXZlQ29sbGVjdGlvbj90aGlzLmRyYWdnZWRQYXJ0cy50b0tleVNldCgpOmkuc2VsZWN0aW9uLG49aS5jb3B5UGFydHMocyxpLCEwKSxvPW5ldyBHTWFwLHI9dGhpcy5kcmFnZ2VkUGFydHMuaXRlcmF0b3I7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGg9ci5rZXk7aWYoaC5DZSgpJiZoLmNhbkNvcHkoKSl7Y29uc3QgZj1uLmdldChoKTtpZihmPT09bnVsbCljb250aW51ZTtmLmxvY2F0aW9uPWgubG9jYXRpb24sZi5lbnN1cmVCb3VuZHMoKSxvLnNldChmLHRoaXMuS3MoZi5sb2NhdGlvbikpfX1jb25zdCBsPW4uaXRlcmF0b3I7Zm9yKDtsLm5leHQoKTspe2NvbnN0IGg9bC52YWx1ZTtoIGluc3RhbmNlb2YgTGluayYmaC5jYW5Db3B5KCkmJm8uc2V0KGgsdGhpcy5LcygpKX1pZih0aGlzLmNvcGllZFBhcnRzPW8sdGhpcy5EUyhvLnRvS2V5U2V0KCkpLHRoaXMuZHJhZ2dlZExpbmshPT1udWxsKXtjb25zdCBoPXRoaXMuZHJhZ2dlZExpbmssZj1oLnJvdXRlQm91bmRzO2gud3IodGhpcy5zdGFydFBvaW50LngtKGYueCtmLndpZHRoLzIpLHRoaXMuc3RhcnRQb2ludC55LShmLnkrZi5oZWlnaHQvMikpfXRoaXMuZG9VcGRhdGVDdXJzb3IobnVsbCl9Q2woKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0aGlzLmNvcGllZFBhcnRzIT09bnVsbCl7aWYodC5yZW1vdmVQYXJ0cyh0aGlzLmNvcGllZFBhcnRzLnRvS2V5U2V0KCksITEpLHRoaXMuY29waWVkUGFydHM9bnVsbCx0aGlzLmRyYWdnZWRQYXJ0cyE9PW51bGwpe2NvbnN0IGk9dGhpcy5kcmFnZ2VkUGFydHMuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspaWYoaS5rZXkgaW5zdGFuY2VvZiBMaW5rKXtjb25zdCBzPWkudmFsdWU7cy5wb2ludD1uZXcgUG9pbnQoMCwwKX19dGhpcy5kb1VwZGF0ZUN1cnNvcihudWxsKX10LnNraXBzVW5kb01hbmFnZXI9ITEsdC5wYXJ0TWFuYWdlci5hZGRzVG9UZW1wb3JhcnlMYXllcj0hMSx0aGlzLnN0YXJ0UG9pbnQ9dC5maXJzdElucHV0LmRvY3VtZW50UG9pbnR9dEEoKXt0aGlzLmRyYWdnZWRMaW5rIT09bnVsbCYmKHRoaXMuZHJhZ3NMaW5rJiZ0aGlzLmZuIT09bnVsbCYmKHRoaXMuZm4uc3RvcERyYWdnaW5nTW91c2VNb3ZlKCksdGhpcy5mbi5vcmlnaW5hbExpbms9bnVsbCksdGhpcy5kcmFnZ2VkTGluaz1udWxsLHRoaXMuZm49bnVsbCl9UGYodCxpKXtpZih0PT09bnVsbClyZXR1cm47Y29uc3QgZT10aGlzLmRpYWdyYW0scz10aGlzLnN0YXJ0UG9pbnQsbj1Qb2ludC5hKCk7bi5jKGUubGFzdElucHV0LmRvY3VtZW50UG9pbnQpLHRoaXMubW92ZVBhcnRzKHQsbi5zdWJ0cmFjdChzKSxpKSxQb2ludC5vKG4pLGUuZ2V0UmVuZGVyaW5nSGludChcInRlbXBvcmFyeVBpeGVsUmF0aW9cIik9PT0hMCYmZS5BbD09PW51bGwmJmUuYXZnU3BmPjMwJiYoZS52dygpLGUuU3UoKSl9bW92ZVBhcnRzKHQsaSxlKXtlPT09dm9pZCAwJiYoZT0hMSk7Y29uc3Qgcz10aGlzLmRpYWdyYW07cyE9PW51bGwmJnMuQlModCxpLHRoaXMuZHJhZ09wdGlvbnMsZSl9T1MoKXtpZih0aGlzLmRyYWdnZWRQYXJ0cz09PW51bGwpcmV0dXJuO2NvbnN0IHQ9dGhpcy5kaWFncmFtO2xldCBpPXRoaXMuZHJhZ2dlZFBhcnRzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkua2V5O2UuQ2UoKSYmKGUubG9jYXRpb249aS52YWx1ZS5wb2ludCl9Zm9yKGk9dGhpcy5kcmFnZ2VkUGFydHMuaXRlcmF0b3I7aS5uZXh0KCk7KXtjb25zdCBlPWkua2V5O2lmKGUgaW5zdGFuY2VvZiBMaW5rJiZlLnN1c3BlbmRzUm91dGluZyl7Y29uc3Qgcz1pLnZhbHVlLnBvaW50O3RoaXMuZHJhZ2dlZFBhcnRzLnNldChlLHRoaXMuS3MoKSksZS53cigtcy54LC1zLnkpfX10Lm1heWJlVXBkYXRlKCl9Q0YodCl7aWYodD09PW51bGwpcmV0dXJuITA7Y29uc3QgaT10LnBhcnQ7cmV0dXJuISEoaT09PW51bGx8fGkgaW5zdGFuY2VvZiBBZG9ybm1lbnR8fGkubGF5ZXI/LmlzVGVtcG9yYXJ5fHx0aGlzLmRyYWdnZWRQYXJ0cyYmdGhpcy5kcmFnZ2VkUGFydHMuaGFzKGkpfHx0aGlzLmNvcGllZFBhcnRzJiZ0aGlzLmNvcGllZFBhcnRzLmhhcyhpKSl9VlModCl7Y29uc3QgaT10aGlzLmRpYWdyYW07dGhpcy5kcmFnc0xpbmsmJih0aGlzLmRyYWdnZWRMaW5rIT09bnVsbCYmKHRoaXMuZHJhZ2dlZExpbmsuZnJvbU5vZGU9bnVsbCx0aGlzLmRyYWdnZWRMaW5rLnRvTm9kZT1udWxsKSx0aGlzLnNBKCExKSk7Y29uc3QgZT10aGlzLmZpbmREcmFnT3Zlck9iamVjdCh0KSxzPWkubGFzdElucHV0O3MudGFyZ2V0T2JqZWN0PWUsdGhpcy5kb1VwZGF0ZUN1cnNvcihlKTtjb25zdCBuPWkuc2tpcHNVbmRvTWFuYWdlcjtsZXQgbz0hMTt0cnl7aWYoaS5za2lwc1VuZG9NYW5hZ2VyPSEwLG89dGhpcy5pQShzLGUpLCF0aGlzLmlzQWN0aXZlJiZEcmFnZ2luZ1Rvb2wuYnQ9PT1udWxsKXJldHVybjtjb25zdCByPWUhPT1udWxsP2UucGFydDpudWxsO2lmKHI9PT1udWxsfHxpLmhhbmRsZXNEcmFnRHJvcEZvclRvcExldmVsUGFydHMmJnIuaXNUb3BMZXZlbCYmIShyIGluc3RhbmNlb2YgR3JvdXApKXtjb25zdCBsPWkubW91c2VEcmFnT3ZlcjtsIT09bnVsbCYmKGwocyksbz0hMCl9aWYoIXRoaXMuaXNBY3RpdmUmJkRyYWdnaW5nVG9vbC5idD09PW51bGx8fCh0aGlzLmRvRHJhZ092ZXIodCxlKSwhdGhpcy5pc0FjdGl2ZSYmRHJhZ2dpbmdUb29sLmJ0PT09bnVsbCkpcmV0dXJufWZpbmFsbHl7aS5za2lwc1VuZG9NYW5hZ2VyPW4sbyYmaS5tYXliZVVwZGF0ZSgpfXRoaXMueHU9ZSwhaS5pc1JlYWRPbmx5JiYoaS5hbGxvd01vdmV8fGkuYWxsb3dDb3B5KSYmKGkuYWxsb3dIb3Jpem9udGFsU2Nyb2xsfHxpLmFsbG93VmVydGljYWxTY3JvbGwpJiZpLmRvQXV0b1Njcm9sbChzLnZpZXdQb2ludCl9ZmluZERyYWdPdmVyT2JqZWN0KHQpe3JldHVybiB0aGlzLmRpYWdyYW0uelModCxudWxsLGk9PiF0aGlzLkNGKGkpKX1kb1VwZGF0ZUN1cnNvcih0KXtjb25zdCBpPXRoaXMuZGlhZ3JhbTsodD09PW51bGx8fHRoaXMueHUhPT10KSYmKCF0aGlzLmRpYWdyYW0uY3VycmVudFRvb2wuaXNBY3RpdmV8fHRoaXMubWF5Q29weSgpP2kuY3VycmVudEN1cnNvcj10aGlzLmNvcHlDdXJzb3I6dGhpcy5tYXlNb3ZlKCk/aS5jdXJyZW50Q3Vyc29yPXRoaXMubW92ZUN1cnNvcjp0aGlzLm1heURyYWdPdXQoKSYmKGkuY3VycmVudEN1cnNvcj10aGlzLm5vZHJvcEN1cnNvcikpfWlBKHQsaSl7bGV0IGU9ITEscz10aGlzLnlyLmxlbmd0aDtjb25zdCBuPXM+MD90aGlzLnlyWzBdOm51bGw7aWYoaT09PW4pcmV0dXJuITE7dC5oYW5kbGVkPSExO2ZvcihsZXQgcj0wO3I8cztyKyspe2NvbnN0IGw9dGhpcy55cltyXSxoPWwubW91c2VEcmFnTGVhdmU7aWYoaCE9PW51bGwmJihoKHQsbCxpKSxlPSEwLHQuaGFuZGxlZCkpYnJlYWt9aWYodGhpcy55ci5sZW5ndGg9MCwhdGhpcy5pc0FjdGl2ZSYmRHJhZ2dpbmdUb29sLmJ0PT09bnVsbHx8aT09PW51bGwpcmV0dXJuIGU7dC5oYW5kbGVkPSExO2xldCBvPWk7Zm9yKDtvIT09bnVsbDspdGhpcy55ci5wdXNoKG8pLG89dGhpcy5uQShvKTtzPXRoaXMueXIubGVuZ3RoO2ZvcihsZXQgcj0wO3I8cztyKyspe2NvbnN0IGw9dGhpcy55cltyXSxoPWwubW91c2VEcmFnRW50ZXI7aWYoaCE9PW51bGwmJihoKHQsbCxuKSxlPSEwLHQuaGFuZGxlZCkpYnJlYWt9cmV0dXJuIGV9Q0UodCxpKXtyZXR1cm4gdD09PW51bGw/ITE6ISEodD09PWl8fHQuaXNDb250YWluZWRCeShpKXx8aSBpbnN0YW5jZW9mIEdyb3VwJiYhKHQgaW5zdGFuY2VvZiBHcm91cCkmJmkuaGFuZGxlc0RyYWdEcm9wRm9yTWVtYmVycyYmdC5wYXJ0Py5pc01lbWJlck9mKGkpKX1uQSh0KXtjb25zdCBpPXQucGFuZWw7aWYoaSE9PW51bGwpcmV0dXJuIGk7aWYodCBpbnN0YW5jZW9mIFBhcnQmJiEodCBpbnN0YW5jZW9mIEdyb3VwKSl7Y29uc3QgZT10LmNvbnRhaW5pbmdHcm91cDtpZihlIT09bnVsbCYmZS5oYW5kbGVzRHJhZ0Ryb3BGb3JNZW1iZXJzKXJldHVybiBlfXJldHVybiBudWxsfW9BKHQsaSl7Y29uc3QgZT10aGlzLmRpYWdyYW0scz10aGlzLmZuO2lmKHM9PT1udWxsKXJldHVybiBudWxsO2NvbnN0IG49cy5wb3J0R3Jhdml0eSxvPWUuZmluZE9iamVjdHNOZWFyKHQsbixmPT5zLmZpbmRWYWxpZExpbmthYmxlUG9ydChmLGkpKSxyPVBvaW50LmEoKTtsZXQgbD0xLzAsaD1udWxsO2Zvcihjb25zdCBmPW8uaXRlcmF0b3I7Zi5uZXh0KCk7KXtjb25zdCBhPWYudmFsdWU7aWYoYS5wYXJ0PT09bnVsbCljb250aW51ZTtjb25zdCB1PWEuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcixyKSxkPXQuZGlzdGFuY2VTcXVhcmVkUG9pbnQodSk7ZDxsJiYoaD1hLGw9ZCl9cmV0dXJuIFBvaW50Lm8ociksaH1zQSh0KXtjb25zdCBpPXRoaXMuZHJhZ2dlZExpbms7aWYoaSE9PW51bGwpe2lmKGkucG9pbnRzQ291bnQ8MilyZXR1cm47Y29uc3QgZT10aGlzLmRpYWdyYW07aWYoZS5pc1JlYWRPbmx5KXJldHVybjtjb25zdCBzPXRoaXMuZm47aWYocz09PW51bGwpcmV0dXJuO2xldCBuPW51bGwsbz1udWxsO2kuZnJvbU5vZGU9PT1udWxsJiYobj10aGlzLm9BKGkuZ2V0UG9pbnQoMCksITEpLG4hPT1udWxsJiYobz1uLnBhcnQpKTtsZXQgcj1udWxsLGw9bnVsbDtpLnRvTm9kZT09PW51bGwmJihyPXRoaXMub0EoaS5nZXRQb2ludChpLnBvaW50c0NvdW50LTEpLCEwKSxyIT09bnVsbCYmKGw9ci5wYXJ0KSkscy5pc1ZhbGlkTGluayhvLG4sbCxyKT90PyhpLmRlZmF1bHRGcm9tUG9pbnQ9aS5nZXRQb2ludCgwKSxpLmRlZmF1bHRUb1BvaW50PWkuZ2V0UG9pbnQoaS5wb2ludHNDb3VudC0xKSxpLnN1c3BlbmRzUm91dGluZz0hMSxpLmZyb21Ob2RlPW8sbiE9PW51bGwmJihpLmZyb21Qb3J0SWQ9bi5wb3J0SWQpLGkudG9Ob2RlPWwsciE9PW51bGwmJihpLnRvUG9ydElkPXIucG9ydElkKSxpLmZyb21Qb3J0IT09ZS5YUyYmZS5PKFwiTGlua1JlbGlua2VkXCIsaSxlLlhTKSxpLnRvUG9ydCE9PWUuWVMmJmUuTyhcIkxpbmtSZWxpbmtlZFwiLGksZS5ZUykpOnMuZG9EcmFnZ2luZ01vdXNlTW92ZShvLG4sbCxyKTpzLmRvRHJhZ2dpbmdNb3VzZU1vdmUobnVsbCxudWxsLG51bGwsbnVsbCl9fWRvRHJhZ092ZXIodCxpKXt9ckEodCl7Y29uc3QgaT10aGlzLmRpYWdyYW07dGhpcy5kcmFnc0xpbmsmJnRoaXMuc0EoITApLHRoaXMuRlMoKTtjb25zdCBlPXRoaXMuZmluZERyYWdPdmVyT2JqZWN0KHQpLHM9aS5sYXN0SW5wdXQ7aWYocy50YXJnZXRPYmplY3Q9ZSxlIT09bnVsbCl7cy5oYW5kbGVkPSExO2xldCBsPWU7Zm9yKDtsIT09bnVsbDspe2NvbnN0IGg9bC5tb3VzZURyb3A7aWYoaCE9PW51bGwmJihoKHMsbCkscy5oYW5kbGVkKSlicmVhazt0aGlzLkFGKHMsbCksbD10aGlzLm5BKGwpfX1lbHNle2NvbnN0IGw9aS5tb3VzZURyb3A7bCE9PW51bGwmJmwocyl9aWYoIXRoaXMuaXNBY3RpdmUmJkRyYWdnaW5nVG9vbC5idD09PW51bGwpcmV0dXJuO2NvbnN0IG49dGhpcy5jb3BpZWRQYXJ0c3x8dGhpcy5kcmFnZ2VkUGFydHM7aWYobiE9PW51bGwpe2NvbnN0IGw9bi5pdGVyYXRvcjtmb3IoO2wubmV4dCgpOyl7Y29uc3QgaD1sLmtleTtoIGluc3RhbmNlb2YgTm9kZSYmaC5saW5rc0Nvbm5lY3RlZC5lYWNoKGY9PmYuc3VzcGVuZHNSb3V0aW5nPSExKX19aWYodGhpcy5kb0Ryb3BPbnRvKHQsZSksIXRoaXMuaXNBY3RpdmUmJkRyYWdnaW5nVG9vbC5idD09PW51bGwpcmV0dXJuO2NvbnN0IG89UmVjdC5hKCkscj1pLnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO2wgaW5zdGFuY2VvZiBOb2RlJiZ0aGlzLkxGKGksbCxvKX1SZWN0Lm8obyl9QUYodCxpKXtjb25zdCBlPXRoaXMuZGlhZ3JhbSxzPWkucGFydDtpZihlLmhhbmRsZXNEcmFnRHJvcEZvclRvcExldmVsUGFydHMmJnMhPT1udWxsJiZzLmlzVG9wTGV2ZWwmJiEocyBpbnN0YW5jZW9mIEdyb3VwKSl7Y29uc3Qgbj1lLm1vdXNlRHJvcDtuIT09bnVsbCYmbih0KX19TEYodCxpLGUpe2lmKCFpLmNhbkF2b2lkKCkpcmV0dXJuO2xldCBzPSExO2U9aS5nZXRBdm9pZGFibGVSZWN0KGUpLHQudmlld3BvcnRCb3VuZHMuY29udGFpbnNSZWN0KGUpJiYocz0hMCk7Y29uc3Qgbj10aGlzLmNvcGllZFBhcnRzfHx0aGlzLmRyYWdnZWRQYXJ0cztpZihuPT09bnVsbClyZXR1cm47Y29uc3Qgbz10LktTKGUsbD0+bC5wYXJ0LGw9PmwgaW5zdGFuY2VvZiBMaW5rLCEwLGw9PmwgaW5zdGFuY2VvZiBMaW5rLHMpO2lmKG8uY291bnQ9PT0wKXJldHVybjtjb25zdCByPW8uaXRlcmF0b3I7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtuLmhhcyhsKSYmbi5oYXMoaSl8fCFsLmlzTWVtYmVyT2YoaSkmJmwuaXNBdm9pZGluZyYmbC5pbnZhbGlkYXRlUm91dGUoKX19ZG9Ecm9wT250byh0LGkpe31kb01vdXNlTW92ZSgpe2lmKCF0aGlzLmlzQWN0aXZlKXJldHVybjtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXQubGFzdElucHV0O2lmKHRoaXMuc2ltdWxhdGVkTW91c2VNb3ZlKGkuZXZlbnQsaS5kb2N1bWVudFBvaW50LGkudGFyZ2V0RGlhZ3JhbSkpcmV0dXJuO3RoaXMuY3VycmVudFBhcnQhPT1udWxsJiZ0aGlzLmRyYWdnZWRQYXJ0cyE9PW51bGwmJih0aGlzLm1heUNvcHkoKT8odGhpcy5FUyghMSksdGhpcy5QZih0aGlzLmNvcGllZFBhcnRzLCExKSk6dGhpcy5tYXlNb3ZlKCk/KHRoaXMuQ2woKSx0aGlzLlBmKHRoaXMuZHJhZ2dlZFBhcnRzLCEwKSk6dGhpcy5tYXlEcmFnT3V0KCk/KHRoaXMuRVMoITEpLHRoaXMuUGYodGhpcy5jb3BpZWRQYXJ0cywhMSkpOnRoaXMuQ2woKSx0aGlzLlZTKHQubGFzdElucHV0LmRvY3VtZW50UG9pbnQpKX1kb01vdXNlVXAoKXtpZighdGhpcy5pc0FjdGl2ZSlyZXR1cm47Y29uc3QgdD10aGlzLmRpYWdyYW0saT10Lmxhc3RJbnB1dDtpZih0aGlzLnNpbXVsYXRlZE1vdXNlVXAoaS5ldmVudCxpLmRvY3VtZW50UG9pbnQsaS50YXJnZXREaWFncmFtKSlyZXR1cm47bGV0IGU9ITE7Y29uc3Qgcz10aGlzLm1heUNvcHkoKTtpZihzJiZ0aGlzLmNvcGllZFBhcnRzIT09bnVsbD8odGhpcy5DbCgpLHRoaXMuRVMoITApLHRoaXMuUGYodGhpcy5jb3BpZWRQYXJ0cywhMSksdGhpcy5jb3BpZWRQYXJ0cyE9PW51bGwmJih0Lk8oXCJDaGFuZ2luZ1NlbGVjdGlvblwiLHQuc2VsZWN0aW9uKSx0LmNsZWFyU2VsZWN0aW9uKCEwKSx0aGlzLmNvcGllZFBhcnRzLml0ZXJhdG9yS2V5cy5lYWNoKG49PntuLmlzU2VsZWN0ZWQ9ITB9KSkpOihlPSEwLHRoaXMuQ2woKSx0aGlzLm1heU1vdmUoKSYmKHRoaXMuUGYodGhpcy5kcmFnZ2VkUGFydHMsITApLHRoaXMuVlModC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCkpKSx0aGlzLnd1PSEwLHRoaXMuckEodC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCksdGhpcy5pc0FjdGl2ZSl7Y29uc3Qgbj1zJiZ0aGlzLmNvcGllZFBhcnRzLG89bj90aGlzLmNvcGllZFBhcnRzPy50b0tleVNldCgpOnRoaXMuZHJhZ2dlZFBhcnRzP3RoaXMuZHJhZ2dlZFBhcnRzLnRvS2V5U2V0KCk6bnVsbDt0aGlzLmNvcGllZFBhcnRzPW51bGwsZSYmdGhpcy5URigpLHQuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdC5SUyh0aGlzLmRyYWdnZWRQYXJ0cyksdGhpcy50cmFuc2FjdGlvblJlc3VsdD1uP1wiQ29weVwiOlwiTW92ZVwiLHQuTyhuP1wiU2VsZWN0aW9uQ29waWVkXCI6XCJTZWxlY3Rpb25Nb3ZlZFwiLG8pfXRoaXMuc3RvcFRvb2woKSxzJiZ0Lk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsdC5zZWxlY3Rpb24pfXNpbXVsYXRlZE1vdXNlTW92ZSh0LGksZSl7aWYoRHJhZ2dpbmdUb29sLmJ0PT09bnVsbClyZXR1cm4hMTtjb25zdCBzPURyYWdnaW5nVG9vbC5idC5kaWFncmFtO2UgaW5zdGFuY2VvZiBEaWFncmFtfHwoZT1udWxsKTtjb25zdCBuPURyYWdnaW5nVG9vbC52aDtpZihlIT09bil7aWYobiE9PW51bGwmJm4hPT1zKXtuLnN0b3BBdXRvU2Nyb2xsKCksRHJhZ2dpbmdUb29sLmJ0LmlzRHJhZ091dFN0YXJ0ZWQ9ITE7Y29uc3Qgcj1uLnRvb2xNYW5hZ2VyLmZpbmRUb29sKFwiRHJhZ2dpbmdcIik7ciE9PW51bGwmJnIuZG9TaW11bGF0ZWREcmFnTGVhdmUoKX1pZihEcmFnZ2luZ1Rvb2wudmg9ZSxlIT09bnVsbCYmZSE9PXMpe0RyYWdnaW5nVG9vbC5idC5lQSgpO2NvbnN0IHI9ZS50b29sTWFuYWdlci5maW5kVG9vbChcIkRyYWdnaW5nXCIpO3IhPT1udWxsJiYoci5sQSgpLHIuZG9TaW11bGF0ZWREcmFnRW50ZXIoKSl9dGhpcy5kb1VwZGF0ZUN1cnNvcihudWxsKX1pZihlPT09bnVsbHx8ZT09PXN8fCFlLmFsbG93RHJvcHx8ZS5pc1JlYWRPbmx5fHwhZS5hbGxvd0luc2VydClyZXR1cm4hMTtjb25zdCBvPWUudG9vbE1hbmFnZXIuZmluZFRvb2woXCJEcmFnZ2luZ1wiKTtpZihvIT09bnVsbCl7bGV0IHI9aTt0IT09bnVsbCYmKHQudGFyZ2V0VG91Y2hlcyE9PXZvaWQgMCYmKHQudGFyZ2V0VG91Y2hlcy5sZW5ndGg+MD90PXQudGFyZ2V0VG91Y2hlc1swXTp0LmNoYW5nZWRUb3VjaGVzLmxlbmd0aD4wJiYodD10LmNoYW5nZWRUb3VjaGVzWzBdKSkscj1lLmdldE1vdXNlKHQpKSxlLmxhc3RJbnB1dC5kb2N1bWVudFBvaW50PXIsZS5sYXN0SW5wdXQudmlld1BvaW50PWUudHJhbnNmb3JtRG9jVG9WaWV3KHIpLGUubGFzdElucHV0LmRvd249ITEsZS5sYXN0SW5wdXQudXA9ITEsby5kb1NpbXVsYXRlZERyYWdPdmVyKCl9cmV0dXJuITB9c2ltdWxhdGVkTW91c2VVcCh0LGksZSl7aWYoRHJhZ2dpbmdUb29sLmJ0PT09bnVsbClyZXR1cm4hMTtjb25zdCBzPURyYWdnaW5nVG9vbC52aCxuPURyYWdnaW5nVG9vbC5idC5kaWFncmFtO2lmKGU9PT1udWxsKXJldHVybiBEcmFnZ2luZ1Rvb2wuYnQuZG9DYW5jZWwoKSwhMDtpZihlIT09cyl7aWYocyE9PW51bGwpe2NvbnN0IHI9cy50b29sTWFuYWdlci5maW5kVG9vbChcIkRyYWdnaW5nXCIpO2lmKHMhPT1udWxsJiZzIT09biYmciE9PW51bGwpcmV0dXJuIHMuc3RvcEF1dG9TY3JvbGwoKSxEcmFnZ2luZ1Rvb2wuYnQuaXNEcmFnT3V0U3RhcnRlZD0hMSxyLmRvU2ltdWxhdGVkRHJhZ0xlYXZlKCksITF9RHJhZ2dpbmdUb29sLnZoPWU7Y29uc3Qgbz1lLnRvb2xNYW5hZ2VyLmZpbmRUb29sKFwiRHJhZ2dpbmdcIik7byE9PW51bGwmJihEcmFnZ2luZ1Rvb2wuYnQuZUEoKSxvLmxBKCksby5kb1NpbXVsYXRlZERyYWdFbnRlcigpKX1pZihlIT09dGhpcy5kaWFncmFtKXtsZXQgbz1pO3QhPT1udWxsPyh0LnRhcmdldFRvdWNoZXMhPT12b2lkIDAmJih0LnRhcmdldFRvdWNoZXMubGVuZ3RoPjA/dD10LnRhcmdldFRvdWNoZXNbMF06dC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg+MCYmKHQ9dC5jaGFuZ2VkVG91Y2hlc1swXSkpLG89ZS5nZXRNb3VzZSh0KSk6bz09PW51bGwmJihvPW5ldyBQb2ludCksZS5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludD1vLGUubGFzdElucHV0LnZpZXdQb2ludD1lLnRyYW5zZm9ybURvY1RvVmlldyhvKSxlLmxhc3RJbnB1dC5kb3duPSExLGUubGFzdElucHV0LnVwPSEwO2NvbnN0IHI9ZS50b29sTWFuYWdlci5maW5kVG9vbChcIkRyYWdnaW5nXCIpO3IhPT1udWxsJiZyLmRvU2ltdWxhdGVkRHJvcCgpO2NvbnN0IGw9RHJhZ2dpbmdUb29sLmJ0O2lmKGwhPT1udWxsKXtjb25zdCBoPWwubWF5Q29weSgpO2wudHJhbnNhY3Rpb25SZXN1bHQ9aD9cIkNvcHlcIjpcIk1vdmVcIixsLnN0b3BUb29sKCl9cmV0dXJuITB9cmV0dXJuITF9VEYoKXtpZih0aGlzLmRyYWdnZWRQYXJ0cz09PW51bGwpcmV0dXJuO2NvbnN0IHQ9dGhpcy5kcmFnZ2VkUGFydHMuaXRlcmF0b3I7Zm9yKDt0Lm5leHQoKTspe2NvbnN0IGk9dC5rZXk7aWYoaSBpbnN0YW5jZW9mIE5vZGUpe2NvbnN0IGU9aS5jb250YWluaW5nR3JvdXA7ZSE9PW51bGwmJmUuaGFzUGxhY2Vob2xkZXIoKSYmIXRoaXMuZHJhZ2dlZFBhcnRzLmhhcyhlKSYmZS5wbGFjZWhvbGRlci51KCl9fX1tYXlDb3B5KCl7aWYoIXRoaXMuaXNDb3B5RW5hYmxlZClyZXR1cm4hMTtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0LmlzUmVhZE9ubHl8fHQuaXNNb2RlbFJlYWRPbmx5fHwhdC5hbGxvd0luc2VydHx8IXQuYWxsb3dDb3B5fHwhKFUucnI/dC5sYXN0SW5wdXQuYWx0OnQubGFzdElucHV0LmNvbnRyb2wpKXJldHVybiExO2NvbnN0IGk9dC5zZWxlY3Rpb24uaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspaWYoaS52YWx1ZS5jYW5Db3B5KCkpcmV0dXJuITA7cmV0dXJuISEodGhpcy5kcmFnZ2VkTGluayE9PW51bGwmJnRoaXMuZHJhZ3NMaW5rJiZ0aGlzLmRyYWdnZWRMaW5rLmNhbkNvcHkoKSl9bWF5RHJhZ091dCgpe2lmKCF0aGlzLmlzQ29weUVuYWJsZWQpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYoIXQuYWxsb3dEcmFnT3V0fHwhdC5hbGxvd0NvcHl8fHQuYWxsb3dNb3ZlKXJldHVybiExO2NvbnN0IGk9dC5zZWxlY3Rpb24uaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspaWYoaS52YWx1ZS5jYW5Db3B5KCkpcmV0dXJuITA7cmV0dXJuISEodGhpcy5kcmFnZ2VkTGluayE9PW51bGwmJnRoaXMuZHJhZ3NMaW5rJiZ0aGlzLmRyYWdnZWRMaW5rLmNhbkNvcHkoKSl9bWF5TW92ZSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHQuaXNSZWFkT25seXx8IXQuYWxsb3dNb3ZlKXJldHVybiExO2NvbnN0IGk9dC5zZWxlY3Rpb24uaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspaWYoaS52YWx1ZS5jYW5Nb3ZlKCkpcmV0dXJuITA7cmV0dXJuISEodGhpcy5kcmFnZ2VkTGluayE9PW51bGwmJnRoaXMuZHJhZ3NMaW5rJiZ0aGlzLmRyYWdnZWRMaW5rLmNhbk1vdmUoKSl9bEEoKXtEcmFnZ2luZ1Rvb2wuSncuaGFzKHRoaXMpfHxEcmFnZ2luZ1Rvb2wuSncuYWRkKHRoaXMpfXN0YXRpYyBQRigpe2lmKERyYWdnaW5nVG9vbC5Kdy5jb3VudD4wKXtjb25zdCB0PURyYWdnaW5nVG9vbC5KdyxpPXQubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspe2NvbnN0IHM9dC5lbHQoZSk7cy50QSgpLHMuQ2woKSxzLkZTKCkscy5kaWFncmFtLnN0b3BBdXRvU2Nyb2xsKCl9dC5jbGVhcigpfX1jb21wdXRlQm9yZGVyKHQsaSxlKXtyZXR1cm4hdGhpcy53dSYmdGhpcy5kcmFnZ2VkUGFydHMhPT1udWxsJiYhdGhpcy5kcmFnZ2VkUGFydHMuaGFzKHQpP2UuYyhpKTpudWxsfWdldERyYWdnaW5nU291cmNlKCl7cmV0dXJuIERyYWdnaW5nVG9vbC5idH1tYXlEcmFnSW4oKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZighdC5hbGxvd0Ryb3B8fHQuaXNSZWFkT25seXx8dC5pc01vZGVsUmVhZE9ubHl8fCF0LmFsbG93SW5zZXJ0KXJldHVybiExO2NvbnN0IGk9RHJhZ2dpbmdUb29sLmJ0O3JldHVybiEoaT09PW51bGx8fGkuZGlhZ3JhbS5tb2RlbC5kYXRhRm9ybWF0IT09dC5tb2RlbC5kYXRhRm9ybWF0KX1kb1NpbXVsYXRlZERyYWdFbnRlcigpe2lmKCF0aGlzLm1heURyYWdJbigpKXJldHVybjtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0LmFuaW1hdGlvbk1hbmFnZXIuc3RvcEFuaW1hdGlvbigpLHQueHIoKSx0LmFuaW1hdGlvbk1hbmFnZXIuc3RvcEFuaW1hdGlvbigpO2NvbnN0IGk9RHJhZ2dpbmdUb29sLmJ0O2khPT1udWxsJiYodGhpcy5kaWFncmFtLmJ1PSEwLHQubGFzdElucHV0LmV2ZW50PT09bnVsbCYmKHQubGFzdElucHV0LmV2ZW50PWkuZGlhZ3JhbS5sYXN0SW5wdXQuZXZlbnQpKSx0aGlzLmRvVXBkYXRlQ3Vyc29yKG51bGwpfWRvU2ltdWxhdGVkRHJhZ0xlYXZlKCl7Y29uc3QgdD1EcmFnZ2luZ1Rvb2wuYnQ7dCE9PW51bGwmJnQuZG9TaW11bGF0ZWREcmFnT3V0KCksdGhpcy5kaWFncmFtLmJ1PSExLHRoaXMuZG9DYW5jZWwoKX1kb1NpbXVsYXRlZERyYWdPdmVyKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dC5hbmltYXRpb25NYW5hZ2VyLk11PSEwO2NvbnN0IGk9RHJhZ2dpbmdUb29sLmJ0O2lmKGkhPT1udWxsJiZpLmRyYWdnZWRQYXJ0cyE9PW51bGwpe2lmKCF0aGlzLm1heURyYWdJbigpKXJldHVybjt0aGlzLmhBKGkuZHJhZ2dlZFBhcnRzLnRvS2V5U2V0KCksITEsdC5maXJzdElucHV0KSx0aGlzLlBmKHRoaXMuY29waWVkUGFydHMsITEpLHRoaXMuVlModC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCl9dC5hbmltYXRpb25NYW5hZ2VyLk11PSExfWRvU2ltdWxhdGVkRHJvcCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9RHJhZ2dpbmdUb29sLmJ0O2lmKGkhPT1udWxsKXtjb25zdCBlPWkuZGlhZ3JhbTtpZihpLnd1PSEwLHRoaXMuQ2woKSxpLmRyYWdnZWRQYXJ0cz09PW51bGx8fCF0aGlzLm1heURyYWdJbigpKXJldHVybjt0LmFuaW1hdGlvbk1hbmFnZXIuTXU9ITAsdC5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0LnNlbGVjdGlvbiksdGhpcy5zdGFydFRyYW5zYWN0aW9uKFwiRHJvcFwiKSx0aGlzLmhBKGkuZHJhZ2dlZFBhcnRzLnRvS2V5U2V0KCksITAsdC5sYXN0SW5wdXQpLHRoaXMuUGYodGhpcy5jb3BpZWRQYXJ0cywhMSk7Y29uc3Qgcz1uZXcgR1NldDt0aGlzLmNvcGllZFBhcnRzIT09bnVsbCYmKHQuY2xlYXJTZWxlY3Rpb24oITApLHRoaXMuY29waWVkUGFydHMuaXRlcmF0b3JLZXlzLmVhY2gobj0+e24uaXNTZWxlY3RlZD0hMCxzLmFkZChuKX0pKSx0aGlzLnJBKHQubGFzdElucHV0LmRvY3VtZW50UG9pbnQpLHQuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy5jb3BpZWRQYXJ0cyE9PW51bGwmJih0aGlzLnRyYW5zYWN0aW9uUmVzdWx0PVwiRXh0ZXJuYWxDb3B5XCIpLHRoaXMuY29waWVkUGFydHM9bnVsbCx0LmRvRm9jdXMoKSx0LmJ1PSExLHQuTyhcIkV4dGVybmFsT2JqZWN0c0Ryb3BwZWRcIixzLGUpLHRoaXMuc3RvcFRyYW5zYWN0aW9uKCksdC5PKFwiQ2hhbmdlZFNlbGVjdGlvblwiLHQuc2VsZWN0aW9uKX10LmFuaW1hdGlvbk1hbmFnZXIuTXU9ITF9aEEodCxpLGUpe2lmKHRoaXMuY29waWVkUGFydHMhPT1udWxsKXJldHVybjtjb25zdCBzPXRoaXMuZGlhZ3JhbTtpZihzLmlzUmVhZE9ubHl8fHMuaXNNb2RlbFJlYWRPbmx5KXJldHVybjtzLnNraXBzVW5kb01hbmFnZXI9IWkscy5wYXJ0TWFuYWdlci5hZGRzVG9UZW1wb3JhcnlMYXllcj0haSx0aGlzLnN0YXJ0UG9pbnQ9ZS5kb2N1bWVudFBvaW50O2NvbnN0IG49cy5jb3B5UGFydHModCxzLCEwKSxvPVJlY3QuYSgpO3RoaXMuTkYodCxvKTtjb25zdCByPW8ueCtvLndpZHRoLzIsbD1vLnkrby5oZWlnaHQvMjtSZWN0Lm8obyk7Y29uc3QgaD10aGlzLmJtLGY9bmV3IEdNYXAsYT1Qb2ludC5hKCksYz10Lml0ZXJhdG9yO2Zvcig7Yy5uZXh0KCk7KXtjb25zdCBkPWMudmFsdWU7aWYoZCBpbnN0YW5jZW9mIExpbmsmJmQuY2FuQ29weSgpKXtjb25zdCBtPW4uZ2V0KGQpO2lmKG09PT1udWxsKWNvbnRpbnVlO20ucG9pbnRzPWQucG9pbnRzLG0ud3IoaC54LXIsaC55LWwpLG0uc3VzcGVuZHNSb3V0aW5nPSEwLGYuc2V0KG0sdGhpcy5LcygpKX19Y29uc3QgdT10Lml0ZXJhdG9yO2Zvcig7dS5uZXh0KCk7KXtjb25zdCBkPXUudmFsdWU7aWYoZC5DZSgpJiZkLmNhbkNvcHkoKSl7Y29uc3QgbT1uLmdldChkKTtpZihtPT09bnVsbCljb250aW51ZTtjb25zdCBnPWQubG9jYXRpb247YS5zKGgueC0oci1nLngpLGgueS0obC1nLnkpKSxtLmxvY2F0aW9uPWEsbS5lbnN1cmVCb3VuZHMoKSxmLnNldChtLHRoaXMuS3MoYSkpfX1pZihQb2ludC5vKGEpLHRoaXMuY29waWVkUGFydHM9Zix0aGlzLkRTKGYudG9LZXlTZXQoKSksdGhpcy5kcmFnZ2VkTGluayE9PW51bGwpe2NvbnN0IGQ9dGhpcy5kcmFnZ2VkTGluayxtPWQucm91dGVCb3VuZHM7ZC53cih0aGlzLnN0YXJ0UG9pbnQueC0obS54K20ud2lkdGgvMiksdGhpcy5zdGFydFBvaW50LnktKG0ueSttLmhlaWdodC8yKSl9dGhpcy5kb1VwZGF0ZUN1cnNvcihudWxsKX1NRigpe3RoaXMuaXNEcmFnT3V0U3RhcnRlZD0hMCx0aGlzLnd1PSExLERyYWdnaW5nVG9vbC5idD10aGlzLERyYWdnaW5nVG9vbC52aD10aGlzLmRpYWdyYW0sdGhpcy5kb1NpbXVsYXRlZERyYWdPdXQoKX1kb1NpbXVsYXRlZERyYWdPdXQoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTshdGhpcy5tYXlDb3B5KCkmJiF0aGlzLm1heU1vdmUoKT90LmN1cnJlbnRDdXJzb3I9dGhpcy5ub2Ryb3BDdXJzb3I6dC5jdXJyZW50Q3Vyc29yPVwiXCIsdGhpcy54dT1udWxsfWNvbXB1dGVNb3ZlKHQsaSxlLHMpe2NvbnN0IG49dGhpcy5kaWFncmFtO3JldHVybiBuIT09bnVsbD9uLmNvbXB1dGVNb3ZlKHQsaSx0aGlzLmRyYWdPcHRpb25zLHMpOm5ldyBQb2ludH1zdGF0aWMgSnc9bmV3IExpc3Q7c3RhdGljIGJ0PW51bGw7c3RhdGljIHZoPW51bGx9VG9vbE1hbmFnZXIucHJvdG90eXBlLmRvQ2FuY2VsPWZ1bmN0aW9uKCl7RHJhZ2dpbmdUb29sLmJ0IT09bnVsbCYmRHJhZ2dpbmdUb29sLmJ0LmRvQ2FuY2VsKCksVG9vbC5wcm90b3R5cGUuZG9DYW5jZWwuY2FsbCh0aGlzKX07Y2xhc3MgTGlua2luZ0Jhc2VUb29sIGV4dGVuZHMgVG9vbHtVUztHUztMbDtIUztxUztKaDtXUzskaDtqUzt2UztKUzskUztaUztRUzthQTtfUztUbDt0TTtjb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5VUz0xMDAsdGhpcy5HUz0hMSx0aGlzLkxsPVwicG9pbnRlclwiLHRoaXMuSFM9bmV3IExpbmsoe2xheWVyTmFtZTpcIlRvb2xcIn0pLmFkZChuZXcgU2hhcGUoe2lzUGFuZWxNYWluOiEwLHN0cm9rZTpcImJsdWVcIn0pLnRoZW1lKFwic3Ryb2tlXCIsXCJ0ZW1wTGlua1wiKSxuZXcgU2hhcGUoe3RvQXJyb3c6XCJTdGFuZGFyZFwiLGZpbGw6XCJibHVlXCIsc3Ryb2tlOlwiYmx1ZVwifSkudGhlbWUoXCJmaWxsXCIsXCJ0ZW1wTGlua1wiKS50aGVtZShcInN0cm9rZVwiLFwidGVtcExpbmtcIikpLkt0KCksdGhpcy5KaD1uZXcgU2hhcGUoXCJSZWN0YW5nbGVcIix7cG9ydElkOlwiXCIsZmlsbDpudWxsLHN0cm9rZTpcIm1hZ2VudGFcIixzdHJva2VXaWR0aDoyLGRlc2lyZWRTaXplOlNpemUuV2t9KS50aGVtZShcInN0cm9rZVwiLFwidGVtcFBvcnRcIiksdGhpcy5xUz1uZXcgTm9kZSh7c2VsZWN0YWJsZTohMSxsYXllck5hbWU6XCJUb29sXCJ9KS5hZGQodGhpcy5KaCkuS3QoKSx0aGlzLiRoPW5ldyBTaGFwZShcIlJlY3RhbmdsZVwiLHtwb3J0SWQ6XCJcIixmaWxsOm51bGwsc3Ryb2tlOlwibWFnZW50YVwiLHN0cm9rZVdpZHRoOjIsZGVzaXJlZFNpemU6U2l6ZS5Xa30pLnRoZW1lKFwic3Ryb2tlXCIsXCJ0ZW1wUG9ydFwiKSx0aGlzLldTPW5ldyBOb2RlKHtzZWxlY3RhYmxlOiExLGxheWVyTmFtZTpcIlRvb2xcIn0pLmFkZCh0aGlzLiRoKS5LdCgpLHRoaXMualM9bnVsbCx0aGlzLnZTPW51bGwsdGhpcy5KUz1udWxsLHRoaXMuJFM9bnVsbCx0aGlzLlpTPW51bGwsdGhpcy5RUz0hMCx0aGlzLmFBPW5ldyBHTWFwLHRoaXMuX1M9bnVsbCx0aGlzLlRsPW51bGwsdGhpcy50TT1udWxsfWRvU3RvcCgpe3RoaXMuZGlhZ3JhbS5zdG9wQXV0b1Njcm9sbCgpLHRoaXMub3JpZ2luYWxMaW5rPW51bGwsdGhpcy5vcmlnaW5hbEZyb21Ob2RlPW51bGwsdGhpcy5vcmlnaW5hbEZyb21Qb3J0PW51bGwsdGhpcy5vcmlnaW5hbFRvTm9kZT1udWxsLHRoaXMub3JpZ2luYWxUb1BvcnQ9bnVsbCx0aGlzLnZhbGlkUG9ydHNDYWNoZS5jbGVhcigpLHRoaXMudGFyZ2V0UG9ydD1udWxsfWdldCBwb3J0R3Jhdml0eSgpe3JldHVybiB0aGlzLlVTfXNldCBwb3J0R3Jhdml0eSh0KXtVLmkodCxcIm51bWJlclwiLExpbmtpbmdCYXNlVG9vbCxcInBvcnRHcmF2aXR5XCIpLHQ+PTAmJih0aGlzLlVTPXQpfWdldCBpc1VuY29ubmVjdGVkTGlua1ZhbGlkKCl7cmV0dXJuIHRoaXMuR1N9c2V0IGlzVW5jb25uZWN0ZWRMaW5rVmFsaWQodCl7VS5pKHQsXCJib29sZWFuXCIsTGlua2luZ0Jhc2VUb29sLFwiaXNVbmNvbm5lY3RlZExpbmtWYWxpZFwiKSx0aGlzLkdTPXR9Z2V0IGxpbmtpbmdDdXJzb3IoKXtyZXR1cm4gdGhpcy5MbH1zZXQgbGlua2luZ0N1cnNvcih0KXt0aGlzLkxsPXR9Z2V0IHRlbXBvcmFyeUxpbmsoKXtyZXR1cm4gdGhpcy5IU31zZXQgdGVtcG9yYXJ5TGluayh0KXtVLmUodCxMaW5rLExpbmtpbmdCYXNlVG9vbCxcInRlbXBvcmFyeUxpbmtcIiksdC5LdCgpLHRoaXMuSFM9dH1nZXQgdGVtcG9yYXJ5RnJvbU5vZGUoKXtyZXR1cm4gdGhpcy5xU31zZXQgdGVtcG9yYXJ5RnJvbU5vZGUodCl7VS5lKHQsTm9kZSxMaW5raW5nQmFzZVRvb2wsXCJ0ZW1wb3JhcnlGcm9tTm9kZVwiKSx0Lkt0KCksdGhpcy5xUz10LHQmJih0aGlzLkpoPXQucG9ydCl9Z2V0IHRlbXBvcmFyeUZyb21Qb3J0KCl7cmV0dXJuIHRoaXMuSmh9c2V0IHRlbXBvcmFyeUZyb21Qb3J0KHQpe2lmKFUuZSh0LEdyYXBoT2JqZWN0LExpbmtpbmdCYXNlVG9vbCxcInRlbXBvcmFyeUZyb21Qb3J0XCIpLHRoaXMuSmghPT1udWxsKXtjb25zdCBpPXRoaXMuSmgucGFuZWw7aWYoaSE9PW51bGwpe2NvbnN0IGU9aS5ULmluZGV4T2YodGhpcy5KaCk7aS5yZW1vdmVBdChlKSxpLmluc2VydEF0KGUsdCl9fXRoaXMuSmg9dH1nZXQgdGVtcG9yYXJ5VG9Ob2RlKCl7cmV0dXJuIHRoaXMuV1N9c2V0IHRlbXBvcmFyeVRvTm9kZSh0KXtVLmUodCxOb2RlLExpbmtpbmdCYXNlVG9vbCxcInRlbXBvcmFyeVRvTm9kZVwiKSx0Lkt0KCksdGhpcy5XUz10LHQmJih0aGlzLiRoPXQucG9ydCl9Z2V0IHRlbXBvcmFyeVRvUG9ydCgpe3JldHVybiB0aGlzLiRofXNldCB0ZW1wb3JhcnlUb1BvcnQodCl7aWYoVS5lKHQsR3JhcGhPYmplY3QsTGlua2luZ0Jhc2VUb29sLFwidGVtcG9yYXJ5VG9Qb3J0XCIpLHRoaXMuJGghPT1udWxsKXtjb25zdCBpPXRoaXMuJGgucGFuZWw7aWYoaSE9PW51bGwpe2NvbnN0IGU9aS5ULmluZGV4T2YodGhpcy4kaCk7aS5yZW1vdmVBdChlKSxpLmluc2VydEF0KGUsdCl9fXRoaXMuJGg9dH1nZXQgb3JpZ2luYWxMaW5rKCl7cmV0dXJuIHRoaXMualN9c2V0IG9yaWdpbmFsTGluayh0KXt0IT09bnVsbCYmVS5lKHQsTGluayxMaW5raW5nQmFzZVRvb2wsXCJvcmlnaW5hbExpbmtcIiksdGhpcy5qUz10fWdldCBvcmlnaW5hbEZyb21Ob2RlKCl7cmV0dXJuIHRoaXMudlN9c2V0IG9yaWdpbmFsRnJvbU5vZGUodCl7dCE9PW51bGwmJlUuZSh0LE5vZGUsTGlua2luZ0Jhc2VUb29sLFwib3JpZ2luYWxGcm9tTm9kZVwiKSx0aGlzLnZTPXR9Z2V0IG9yaWdpbmFsRnJvbVBvcnQoKXtyZXR1cm4gdGhpcy5KU31zZXQgb3JpZ2luYWxGcm9tUG9ydCh0KXt0IT09bnVsbCYmVS5lKHQsR3JhcGhPYmplY3QsTGlua2luZ0Jhc2VUb29sLFwib3JpZ2luYWxGcm9tUG9ydFwiKSx0aGlzLkpTPXR9Z2V0IG9yaWdpbmFsVG9Ob2RlKCl7cmV0dXJuIHRoaXMuJFN9c2V0IG9yaWdpbmFsVG9Ob2RlKHQpe3QhPT1udWxsJiZVLmUodCxOb2RlLExpbmtpbmdCYXNlVG9vbCxcIm9yaWdpbmFsVG9Ob2RlXCIpLHRoaXMuJFM9dH1nZXQgb3JpZ2luYWxUb1BvcnQoKXtyZXR1cm4gdGhpcy5aU31zZXQgb3JpZ2luYWxUb1BvcnQodCl7dCE9PW51bGwmJlUuZSh0LEdyYXBoT2JqZWN0LExpbmtpbmdCYXNlVG9vbCxcIm9yaWdpbmFsVG9Qb3J0XCIpLHRoaXMuWlM9dH1nZXQgaXNGb3J3YXJkcygpe3JldHVybiB0aGlzLlFTfXNldCBpc0ZvcndhcmRzKHQpe3RoaXMuUVM9dH1nZXQgdmFsaWRQb3J0c0NhY2hlKCl7cmV0dXJuIHRoaXMuYUF9Z2V0IHRhcmdldFBvcnQoKXtyZXR1cm4gdGhpcy5fU31zZXQgdGFyZ2V0UG9ydCh0KXt0IT09bnVsbCYmVS5lKHQsR3JhcGhPYmplY3QsTGlua2luZ0Jhc2VUb29sLFwidGFyZ2V0UG9ydFwiKSx0aGlzLl9TPXR9Y29weVBvcnRQcm9wZXJ0aWVzKHQsaSxlLHMsbil7aWYodD09PW51bGx8fGk9PT1udWxsfHxlPT09bnVsbHx8cz09PW51bGwpcmV0dXJuO2NvbnN0IG89aS5nZXREb2N1bWVudFNjYWxlKCkscj1TaXplLmEoKTtyLndpZHRoPWkubmF0dXJhbEJvdW5kcy53aWR0aCpvLHIuaGVpZ2h0PWkubmF0dXJhbEJvdW5kcy5oZWlnaHQqbyxzLmRlc2lyZWRTaXplPXIsU2l6ZS5vKHIpLG4/KHMudG9TcG90PWkudG9TcG90LHMudG9FbmRTZWdtZW50TGVuZ3RoPWkudG9FbmRTZWdtZW50TGVuZ3RoKToocy5mcm9tU3BvdD1pLmZyb21TcG90LHMuZnJvbUVuZFNlZ21lbnRMZW5ndGg9aS5mcm9tRW5kU2VnbWVudExlbmd0aCksZS5sb2NhdGlvblNwb3Q9U3BvdC5DZW50ZXI7Y29uc3QgbD1Qb2ludC5hKCk7ZS5sb2NhdGlvbj1pLmdldERvY3VtZW50UG9pbnQoU3BvdC5DZW50ZXIsbCksUG9pbnQubyhsKSxzLmFuZ2xlPWkuZ2V0RG9jdW1lbnRBbmdsZSgpLHRoaXMucG9ydFRhcmdldGVkIT09bnVsbCYmdGhpcy5wb3J0VGFyZ2V0ZWQodCxpLGUscyxuKX1zZXROb1RhcmdldFBvcnRQcm9wZXJ0aWVzKHQsaSxlKXtpIT09bnVsbCYmKGkuZGVzaXJlZFNpemU9U2l6ZS5XayxpLmZyb21TcG90PVNwb3QuTm9uZSxpLnRvU3BvdD1TcG90Lk5vbmUpLHQhPT1udWxsJiYodC5sb2NhdGlvbj10aGlzLmRpYWdyYW0ubGFzdElucHV0LmRvY3VtZW50UG9pbnQpLHRoaXMucG9ydFRhcmdldGVkIT09bnVsbCYmdGhpcy5wb3J0VGFyZ2V0ZWQobnVsbCxudWxsLHQsaSxlKX1kb01vdXNlRG93bigpe3RoaXMuaXNBY3RpdmUmJnRoaXMuZG9Nb3VzZU1vdmUoKX1kb01vdXNlTW92ZSgpe2lmKHRoaXMuaXNBY3RpdmUpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMudGFyZ2V0UG9ydD10aGlzLmZpbmRUYXJnZXRQb3J0KHRoaXMuaXNGb3J3YXJkcyksdGhpcy50YXJnZXRQb3J0IT09bnVsbCYmdGhpcy50YXJnZXRQb3J0LnBhcnQgaW5zdGFuY2VvZiBOb2RlKXtjb25zdCBpPXRoaXMudGFyZ2V0UG9ydC5wYXJ0O3RoaXMuaXNGb3J3YXJkcz90aGlzLmNvcHlQb3J0UHJvcGVydGllcyhpLHRoaXMudGFyZ2V0UG9ydCx0aGlzLnRlbXBvcmFyeVRvTm9kZSx0aGlzLnRlbXBvcmFyeVRvUG9ydCwhMCk6dGhpcy5jb3B5UG9ydFByb3BlcnRpZXMoaSx0aGlzLnRhcmdldFBvcnQsdGhpcy50ZW1wb3JhcnlGcm9tTm9kZSx0aGlzLnRlbXBvcmFyeUZyb21Qb3J0LCExKX1lbHNlIHRoaXMuaXNGb3J3YXJkcz90aGlzLnNldE5vVGFyZ2V0UG9ydFByb3BlcnRpZXModGhpcy50ZW1wb3JhcnlUb05vZGUsdGhpcy50ZW1wb3JhcnlUb1BvcnQsITApOnRoaXMuc2V0Tm9UYXJnZXRQb3J0UHJvcGVydGllcyh0aGlzLnRlbXBvcmFyeUZyb21Ob2RlLHRoaXMudGVtcG9yYXJ5RnJvbVBvcnQsITEpOyh0LmFsbG93SG9yaXpvbnRhbFNjcm9sbHx8dC5hbGxvd1ZlcnRpY2FsU2Nyb2xsKSYmdC5kb0F1dG9TY3JvbGwodC5sYXN0SW5wdXQudmlld1BvaW50KX19ZmluZFZhbGlkTGlua2FibGVQb3J0KHQsaSl7aWYodD09PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgZT10LnBhcnQ7aWYoIShlIGluc3RhbmNlb2YgTm9kZSkpcmV0dXJuIG51bGw7Zm9yKDt0IT09bnVsbDspe2NvbnN0IHM9aT90LnRvTGlua2FibGU6dC5mcm9tTGlua2FibGU7aWYocz09PSEwJiYodC5wb3J0SWQhPT1udWxsfHx0IGluc3RhbmNlb2YgTm9kZSkmJihpP3RoaXMuaXNWYWxpZFRvKGUsdCk6dGhpcy5pc1ZhbGlkRnJvbShlLHQpKSlyZXR1cm4gdDtpZihzPT09ITEpcmV0dXJuIG51bGw7dD10LnBhbmVsfXJldHVybiBudWxsfWZpbmRUYXJnZXRQb3J0KHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtLGU9aS5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludDtsZXQgcz10aGlzLnBvcnRHcmF2aXR5O2NvbnN0IG49aS5maW5kT2JqZWN0c05lYXIoZSxzLGg9PnRoaXMuZmluZFZhbGlkTGlua2FibGVQb3J0KGgsdCksbnVsbCwhMCk7bGV0IG89MS8wLHI9bnVsbDtjb25zdCBsPW4uaXRlcmF0b3I7Zm9yKDtsLm5leHQoKTspe2NvbnN0IGg9bC52YWx1ZSxmPWgucGFydDtpZighKGYgaW5zdGFuY2VvZiBOb2RlKSljb250aW51ZTtjb25zdCBhPWguZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcixQb2ludC5hKCkpLGM9ZS54LWEueCx1PWUueS1hLnk7UG9pbnQubyhhKTtjb25zdCBkPWMqYyt1KnU7aWYoZDxvKXtjb25zdCBtPXRoaXMudmFsaWRQb3J0c0NhY2hlLmdldChoKTttIT09bnVsbD9tJiYocj1oLG89ZCk6dCYmdGhpcy5pc1ZhbGlkTGluayh0aGlzLm9yaWdpbmFsRnJvbU5vZGUsdGhpcy5vcmlnaW5hbEZyb21Qb3J0LGYsaCl8fCF0JiZ0aGlzLmlzVmFsaWRMaW5rKGYsaCx0aGlzLm9yaWdpbmFsVG9Ob2RlLHRoaXMub3JpZ2luYWxUb1BvcnQpPyh0aGlzLnZhbGlkUG9ydHNDYWNoZS5zZXQoaCwhMCkscj1oLG89ZCk6dGhpcy52YWxpZFBvcnRzQ2FjaGUuc2V0KGgsITEpfX1pZihyIT09bnVsbCl7Y29uc3QgaD1yLnBhcnQ7aWYoaCBpbnN0YW5jZW9mIE5vZGUmJihoLmxheWVyPT09bnVsbHx8aC5sYXllci5hbGxvd0xpbmspKXJldHVybiByfXJldHVybiBudWxsfWlzVmFsaWRGcm9tKHQsaSl7aWYodD09PW51bGx8fGk9PT1udWxsKXJldHVybiB0aGlzLmlzVW5jb25uZWN0ZWRMaW5rVmFsaWQ7aWYodGhpcy5kaWFncmFtLmN1cnJlbnRUb29sPT09dGhpcyYmKHQubGF5ZXIhPT1udWxsJiYhdC5sYXllci5hbGxvd0xpbmt8fGkuZnJvbUxpbmthYmxlIT09ITApKXJldHVybiExO2NvbnN0IGU9aS5mcm9tTWF4TGlua3M7aWYoZTwxLzApe2lmKHRoaXMub3JpZ2luYWxMaW5rIT09bnVsbCYmdD09PXRoaXMub3JpZ2luYWxGcm9tTm9kZSYmaT09PXRoaXMub3JpZ2luYWxGcm9tUG9ydClyZXR1cm4hMDtsZXQgcz1pLnBvcnRJZDtpZihzPT09bnVsbCYmKHM9XCJcIiksdC5maW5kTGlua3NPdXRPZihzKS5jb3VudD49ZSlyZXR1cm4hMX1yZXR1cm4hMH1pc1ZhbGlkVG8odCxpKXtpZih0PT09bnVsbHx8aT09PW51bGwpcmV0dXJuIHRoaXMuaXNVbmNvbm5lY3RlZExpbmtWYWxpZDtpZih0aGlzLmRpYWdyYW0uY3VycmVudFRvb2w9PT10aGlzJiYodC5sYXllciE9PW51bGwmJiF0LmxheWVyLmFsbG93TGlua3x8aS50b0xpbmthYmxlIT09ITApKXJldHVybiExO2NvbnN0IGU9aS50b01heExpbmtzO2lmKGU8MS8wKXtpZih0aGlzLm9yaWdpbmFsTGluayE9PW51bGwmJnQ9PT10aGlzLm9yaWdpbmFsVG9Ob2RlJiZpPT09dGhpcy5vcmlnaW5hbFRvUG9ydClyZXR1cm4hMDtsZXQgcz1pLnBvcnRJZDtpZihzPT09bnVsbCYmKHM9XCJcIiksdC5maW5kTGlua3NJbnRvKHMpLmNvdW50Pj1lKXJldHVybiExfXJldHVybiEwfWlzSW5TYW1lTm9kZSh0LGkpe2lmKHQ9PT1udWxsfHxpPT09bnVsbClyZXR1cm4hMTtpZih0PT09aSlyZXR1cm4hMDtjb25zdCBlPXQucGFydCxzPWkucGFydDtyZXR1cm4gZSE9PW51bGwmJmU9PT1zfWlzTGlua2VkKHQsaSl7aWYodD09PW51bGx8fGk9PT1udWxsKXJldHVybiExO2NvbnN0IGU9dC5wYXJ0O2lmKCEoZSBpbnN0YW5jZW9mIE5vZGUpKXJldHVybiExO2xldCBzPXQucG9ydElkO3M9PT1udWxsJiYocz1cIlwiKTtjb25zdCBuPWkucGFydDtpZighKG4gaW5zdGFuY2VvZiBOb2RlKSlyZXR1cm4hMTtsZXQgbz1pLnBvcnRJZDtvPT09bnVsbCYmKG89XCJcIik7Y29uc3Qgcj1uLmZpbmRMaW5rc0ludG8obyk7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtpZihsLmZyb21Ob2RlPT09ZSYmbC5mcm9tUG9ydElkPT09cylyZXR1cm4hMH1yZXR1cm4hMX1pc1ZhbGlkTGluayh0LGksZSxzKXtpZighdGhpcy5pc1ZhbGlkRnJvbSh0LGkpfHwhdGhpcy5pc1ZhbGlkVG8oZSxzKXx8aSE9PW51bGwmJnMhPT1udWxsJiYoIShpLmZyb21MaW5rYWJsZVNlbGZOb2RlJiZzLnRvTGlua2FibGVTZWxmTm9kZSkmJnRoaXMuaXNJblNhbWVOb2RlKGkscyl8fCEoaS5mcm9tTGlua2FibGVEdXBsaWNhdGVzJiZzLnRvTGlua2FibGVEdXBsaWNhdGVzKSYmdGhpcy5pc0xpbmtlZChpLHMpKXx8dGhpcy5vcmlnaW5hbExpbmshPT1udWxsJiYodCE9PW51bGwmJnRoaXMuaXNMYWJlbERlcGVuZGVudE9uTGluayh0LHRoaXMub3JpZ2luYWxMaW5rKXx8ZSE9PW51bGwmJnRoaXMuaXNMYWJlbERlcGVuZGVudE9uTGluayhlLHRoaXMub3JpZ2luYWxMaW5rKSl8fHQhPT1udWxsJiZlIT09bnVsbCYmKHQuZGF0YT09PW51bGwmJmUuZGF0YSE9PW51bGx8fHQuZGF0YSE9PW51bGwmJmUuZGF0YT09PW51bGwpfHwhdGhpcy5pc1ZhbGlkQ3ljbGUodCxlLHRoaXMub3JpZ2luYWxMaW5rKSlyZXR1cm4hMTtsZXQgbjtyZXR1cm4gdCE9PW51bGwmJmkhPT1udWxsJiYobj10LmxpbmtWYWxpZGF0aW9uLG4hPT1udWxsJiYhbih0LGksZSxzLHRoaXMub3JpZ2luYWxMaW5rKSl8fGUhPT1udWxsJiZzIT09bnVsbCYmKG49ZS5saW5rVmFsaWRhdGlvbixuIT09bnVsbCYmIW4odCxpLGUscyx0aGlzLm9yaWdpbmFsTGluaykpPyExOihuPXRoaXMubGlua1ZhbGlkYXRpb24sbiE9PW51bGw/bih0LGksZSxzLHRoaXMub3JpZ2luYWxMaW5rKTohMCl9aXNMYWJlbERlcGVuZGVudE9uTGluayh0LGkpe2lmKHQ9PT1udWxsKXJldHVybiExO2NvbnN0IGU9dC5sYWJlbGVkTGluaztpZihlPT09bnVsbClyZXR1cm4hMTtpZihlPT09aSlyZXR1cm4hMDtjb25zdCBzPW5ldyBHU2V0O3JldHVybiBzLmFkZCh0KSx0aGlzLmlNKGUsaSxzKX1pTSh0LGksZSl7aWYodD09PWkpcmV0dXJuITA7Y29uc3Qgcz10LmZyb21Ob2RlO2lmKHMhPT1udWxsJiZzLmxhYmVsZWRMaW5rJiYoZS5hZGQocyksdGhpcy5pTShzLmxhYmVsZWRMaW5rLGksZSkpKXJldHVybiEwO2NvbnN0IG49dC50b05vZGU7cmV0dXJuISEobiE9PW51bGwmJm4ubGFiZWxlZExpbmsmJihlLmFkZChuKSx0aGlzLmlNKG4ubGFiZWxlZExpbmssaSxlKSkpfWlzVmFsaWRDeWNsZSh0LGksZSl7aWYoZT09PXZvaWQgMCYmKGU9bnVsbCksdD09PW51bGx8fGk9PT1udWxsKXJldHVybiB0aGlzLmlzVW5jb25uZWN0ZWRMaW5rVmFsaWQ7Y29uc3Qgcz10aGlzLmRpYWdyYW07bGV0IG49MTtpZihzJiYocy5tb2RlbC5TbSgpP249cy5pc1RyZWVQYXRoVG9DaGlsZHJlbj81OjY6bj1zLnZhbGlkQ3ljbGUpLG49PT0xKXJldHVybiEwO2lmKG49PT01KXtjb25zdCBvPWV8fHRoaXMudGVtcG9yYXJ5TGluaztpZihvIT09bnVsbCYmIW8uaXNUcmVlTGluaylyZXR1cm4hMDtjb25zdCByPWkubGlua3NDb25uZWN0ZWQ7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtpZihsIT09ZSYmbC5pc1RyZWVMaW5rJiZsLnRvTm9kZT09PWkpcmV0dXJuITF9cmV0dXJuIXRoaXMuUHUodCxpLGUsITApfWVsc2UgaWYobj09PTYpe2NvbnN0IG89ZXx8dGhpcy50ZW1wb3JhcnlMaW5rO2lmKG8hPT1udWxsJiYhby5pc1RyZWVMaW5rKXJldHVybiEwO2NvbnN0IHI9dC5saW5rc0Nvbm5lY3RlZDtmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO2lmKGwhPT1lJiZsLmlzVHJlZUxpbmsmJmwuZnJvbU5vZGU9PT10KXJldHVybiExfXJldHVybiF0aGlzLlB1KHQsaSxlLCEwKX1lbHNle2lmKG49PT0yKXJldHVybiF0aGlzLkRGKHQsaSxlKTtpZihuPT09MylyZXR1cm4hdGhpcy5QdSh0LGksZSwhMSk7aWYobj09PTQpcmV0dXJuIXRoaXMuRkYodCxpLGUpfXJldHVybiEwfVB1KHQsaSxlLHMpe2lmKHQ9PT1pKXJldHVybiEwO2lmKHQ9PT1udWxsfHxpPT09bnVsbClyZXR1cm4hMTtjb25zdCBuPXQubGlua3NDb25uZWN0ZWQ7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtpZihvPT09ZXx8cyYmIW8uaXNUcmVlTGlua3x8by50b05vZGUhPT10KWNvbnRpbnVlO2NvbnN0IHI9by5mcm9tTm9kZTtpZighKHI9PT10fHxyPT09bnVsbCkmJnRoaXMuUHUocixpLGUscykpcmV0dXJuITB9cmV0dXJuITF9REYodCxpLGUpe2lmKHQ9PT1pKXJldHVybiEwO2NvbnN0IHM9bmV3IEdTZXQ7cmV0dXJuIHMuYWRkKGkpLHRoaXMuZkEocyx0LGksZSl9ZkEodCxpLGUscyl7aWYoaT09PWUpcmV0dXJuITA7aWYoaT09PW51bGx8fGU9PT1udWxsfHx0LmhhcyhpKSlyZXR1cm4hMTt0LmFkZChpKTtjb25zdCBuPWkubGlua3NDb25uZWN0ZWQ7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtpZihvPT09c3x8by50b05vZGUhPT1pKWNvbnRpbnVlO2NvbnN0IHI9by5mcm9tTm9kZTtpZighKHI9PT1pfHxyPT09bnVsbCkmJnRoaXMuZkEodCxyLGUscykpcmV0dXJuITB9cmV0dXJuITF9RkYodCxpLGUpe2lmKHQ9PT1pKXJldHVybiEwO2NvbnN0IHM9bmV3IEdTZXQ7cmV0dXJuIHMuYWRkKGkpLHRoaXMuY0Eocyx0LGksZSl9Y0EodCxpLGUscyl7aWYoaT09PWUpcmV0dXJuITA7aWYoaT09PW51bGx8fGU9PT1udWxsfHx0LmhhcyhpKSlyZXR1cm4hMTt0LmFkZChpKTtjb25zdCBuPWkubGlua3NDb25uZWN0ZWQ7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtpZihvPT09cyljb250aW51ZTtjb25zdCByPW8uZnJvbU5vZGUsbD1vLnRvTm9kZSxoPXI9PT1pP2w6cjtpZighKGg9PT1pfHxoPT09bnVsbCkmJnRoaXMuY0EodCxoLGUscykpcmV0dXJuITB9cmV0dXJuITF9Z2V0IGxpbmtWYWxpZGF0aW9uKCl7cmV0dXJuIHRoaXMuVGx9c2V0IGxpbmtWYWxpZGF0aW9uKHQpe3QhPT1udWxsJiZVLlAodCxMaW5raW5nQmFzZVRvb2wsXCJsaW5rVmFsaWRhdGlvblwiKSx0aGlzLlRsPXR9Z2V0IHBvcnRUYXJnZXRlZCgpe3JldHVybiB0aGlzLnRNfXNldCBwb3J0VGFyZ2V0ZWQodCl7dCE9PW51bGwmJlUuUCh0LExpbmtpbmdCYXNlVG9vbCxcInBvcnRUYXJnZXRlZFwiKSx0aGlzLnRNPXR9fXZhciBMaW5raW5nRGlyZWN0aW9uPSh5PT4oeVt5LkVpdGhlcj0xXT1cIkVpdGhlclwiLHlbeS5Gb3J3YXJkc09ubHk9Ml09XCJGb3J3YXJkc09ubHlcIix5W3kuQmFja3dhcmRzT25seT0zXT1cIkJhY2t3YXJkc09ubHlcIix5KSkoTGlua2luZ0RpcmVjdGlvbnx8e30pO2NsYXNzIExpbmtpbmdUb29sIGV4dGVuZHMgTGlua2luZ0Jhc2VUb29se2VNO3NNO1M7bk07Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJMaW5raW5nXCIsdGhpcy5lTT17fSx0aGlzLnNNPW51bGwsdGhpcy5TPTEsdGhpcy5uTT1udWxsLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1zdGF0aWMgRWl0aGVyPTE7c3RhdGljIEZvcndhcmRzT25seT0yO3N0YXRpYyBCYWNrd2FyZHNPbmx5PTM7Z2V0IGFyY2hldHlwZUxpbmtEYXRhKCl7cmV0dXJuIHRoaXMuZU19c2V0IGFyY2hldHlwZUxpbmtEYXRhKHQpe3QhPT1udWxsJiZVLk1vKHQsTGlua2luZ1Rvb2wsXCJhcmNoZXR5cGVMaW5rRGF0YVwiKSx0IGluc3RhbmNlb2YgR3JhcGhPYmplY3QmJlUuZSh0LExpbmssTGlua2luZ1Rvb2wsXCJhcmNoZXR5cGVMaW5rRGF0YVwiKSx0aGlzLmVNPXR9Z2V0IGFyY2hldHlwZUxhYmVsTm9kZURhdGEoKXtyZXR1cm4gdGhpcy5zTX1zZXQgYXJjaGV0eXBlTGFiZWxOb2RlRGF0YSh0KXt0IT09bnVsbCYmVS5Nbyh0LExpbmtpbmdUb29sLFwiYXJjaGV0eXBlTGFiZWxOb2RlRGF0YVwiKSx0IGluc3RhbmNlb2YgR3JhcGhPYmplY3QmJlUuZSh0LE5vZGUsTGlua2luZ1Rvb2wsXCJhcmNoZXR5cGVMYWJlbE5vZGVEYXRhXCIpLHRoaXMuc009dH1nZXQgZGlyZWN0aW9uKCl7cmV0dXJuIHRoaXMuU31zZXQgZGlyZWN0aW9uKHQpe1Uuaih0LExpbmtpbmdEaXJlY3Rpb24sXCJMaW5raW5nRGlyZWN0aW9uXCIpLHRoaXMuUz10fWdldCBzdGFydE9iamVjdCgpe3JldHVybiB0aGlzLm5NfXNldCBzdGFydE9iamVjdCh0KXt0IT09bnVsbCYmVS5lKHQsR3JhcGhPYmplY3QsTGlua2luZ1Rvb2wsXCJzdGFydE9iamVjdFwiKSx0aGlzLm5NPXR9Y2FuU3RhcnQoKXtpZighdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07cmV0dXJuIHQuaXNSZWFkT25seXx8dC5pc01vZGVsUmVhZE9ubHl8fCF0LmFsbG93TGlua3x8IXQubW9kZWwuJHcoKXx8IXQubGFzdElucHV0LmxlZnR8fHQuY3VycmVudFRvb2whPT10aGlzJiYhdGhpcy5pc0JleW9uZERyYWdTaXplKCk/ITE6dGhpcy5maW5kTGlua2FibGVQb3J0KCkhPT1udWxsfWZpbmRMaW5rYWJsZVBvcnQoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtsZXQgaT10aGlzLnN0YXJ0T2JqZWN0O2lmKGk9PT1udWxsJiYoaT10LmZpbmRPYmplY3RBdCh0LmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCxudWxsLG51bGwpKSxpPT09bnVsbClyZXR1cm4gbnVsbDtjb25zdCBlPWkucGFydDtpZighKGUgaW5zdGFuY2VvZiBOb2RlKSlyZXR1cm4gbnVsbDtjb25zdCBzPXRoaXMuZGlyZWN0aW9uO2lmKHM9PT0xfHxzPT09Mil7Y29uc3Qgbj10aGlzLmZpbmRWYWxpZExpbmthYmxlUG9ydChpLCExKTtpZihuIT09bnVsbClyZXR1cm4gdGhpcy5pc0ZvcndhcmRzPSEwLG47aWYodGhpcy5zdGFydE9iamVjdD09PWUpe2NvbnN0IG89ZS5wb3J0O2lmKHRoaXMuZmluZFZhbGlkTGlua2FibGVQb3J0KG8sITEpKXJldHVybiB0aGlzLmlzRm9yd2FyZHM9ITAsb319aWYocz09PTF8fHM9PT0zKXtjb25zdCBuPXRoaXMuZmluZFZhbGlkTGlua2FibGVQb3J0KGksITApO2lmKG4hPT1udWxsKXJldHVybiB0aGlzLmlzRm9yd2FyZHM9ITEsbjtpZih0aGlzLnN0YXJ0T2JqZWN0PT09ZSl7Y29uc3Qgbz1lLnBvcnQ7aWYodGhpcy5maW5kVmFsaWRMaW5rYWJsZVBvcnQobywhMCkpcmV0dXJuIHRoaXMuaXNGb3J3YXJkcz0hMSxvfX1yZXR1cm4gbnVsbH1kb0FjdGl2YXRlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW0saT10aGlzLmZpbmRMaW5rYWJsZVBvcnQoKTtpZihpPT09bnVsbCl7dGhpcy5zdG9wVG9vbCgpO3JldHVybn1pZih0aGlzLnN0YXJ0VHJhbnNhY3Rpb24odGhpcy5uYW1lKSx0LmlzTW91c2VDYXB0dXJlZD0hMCx0LmN1cnJlbnRDdXJzb3I9dGhpcy5saW5raW5nQ3Vyc29yLHRoaXMuaXNGb3J3YXJkcyl7dGhpcy50ZW1wb3JhcnlUb05vZGUhPT1udWxsJiYodGhpcy50ZW1wb3JhcnlUb05vZGUubG9jYXRpb249dC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCksdGhpcy5vcmlnaW5hbEZyb21Qb3J0PWk7Y29uc3QgZT10aGlzLm9yaWdpbmFsRnJvbVBvcnQucGFydDtlIGluc3RhbmNlb2YgTm9kZSYmKHRoaXMub3JpZ2luYWxGcm9tTm9kZT1lKSx0aGlzLmNvcHlQb3J0UHJvcGVydGllcyh0aGlzLm9yaWdpbmFsRnJvbU5vZGUsdGhpcy5vcmlnaW5hbEZyb21Qb3J0LHRoaXMudGVtcG9yYXJ5RnJvbU5vZGUsdGhpcy50ZW1wb3JhcnlGcm9tUG9ydCwhMSl9ZWxzZXt0aGlzLnRlbXBvcmFyeUZyb21Ob2RlIT09bnVsbCYmKHRoaXMudGVtcG9yYXJ5RnJvbU5vZGUubG9jYXRpb249dC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCksdGhpcy5vcmlnaW5hbFRvUG9ydD1pO2NvbnN0IGU9dGhpcy5vcmlnaW5hbFRvUG9ydC5wYXJ0O2UgaW5zdGFuY2VvZiBOb2RlJiYodGhpcy5vcmlnaW5hbFRvTm9kZT1lKSx0aGlzLmNvcHlQb3J0UHJvcGVydGllcyh0aGlzLm9yaWdpbmFsVG9Ob2RlLHRoaXMub3JpZ2luYWxUb1BvcnQsdGhpcy50ZW1wb3JhcnlUb05vZGUsdGhpcy50ZW1wb3JhcnlUb1BvcnQsITApfXQuYWRkKHRoaXMudGVtcG9yYXJ5RnJvbU5vZGUpLHRoaXMudGVtcG9yYXJ5RnJvbU5vZGUmJnRoaXMudGVtcG9yYXJ5RnJvbU5vZGUuZW5zdXJlQm91bmRzKCksdC5hZGQodGhpcy50ZW1wb3JhcnlUb05vZGUpLHRoaXMudGVtcG9yYXJ5VG9Ob2RlJiZ0aGlzLnRlbXBvcmFyeVRvTm9kZS5lbnN1cmVCb3VuZHMoKSx0aGlzLnRlbXBvcmFyeUxpbmshPT1udWxsJiYodGhpcy50ZW1wb3JhcnlGcm9tTm9kZSE9PW51bGwmJih0aGlzLnRlbXBvcmFyeUxpbmsuZnJvbU5vZGU9dGhpcy50ZW1wb3JhcnlGcm9tTm9kZSksdGhpcy50ZW1wb3JhcnlUb05vZGUhPT1udWxsJiYodGhpcy50ZW1wb3JhcnlMaW5rLnRvTm9kZT10aGlzLnRlbXBvcmFyeVRvTm9kZSksdGhpcy50ZW1wb3JhcnlMaW5rLmlzVHJlZUxpbms9dGhpcy5pc05ld1RyZWVMaW5rKCksdGhpcy50ZW1wb3JhcnlMaW5rLmludmFsaWRhdGVSb3V0ZSgpLHQuYWRkKHRoaXMudGVtcG9yYXJ5TGluaykpLHRoaXMuaXNBY3RpdmU9ITB9ZG9EZWFjdGl2YXRlKCl7dGhpcy5pc0FjdGl2ZT0hMTtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0LnJlbW92ZSh0aGlzLnRlbXBvcmFyeUxpbmspLHQucmVtb3ZlKHRoaXMudGVtcG9yYXJ5RnJvbU5vZGUpLHQucmVtb3ZlKHRoaXMudGVtcG9yYXJ5VG9Ob2RlKSx0LmlzTW91c2VDYXB0dXJlZD0hMSx0LmN1cnJlbnRDdXJzb3I9XCJcIix0aGlzLnN0b3BUcmFuc2FjdGlvbigpfWRvU3RvcCgpe3N1cGVyLmRvU3RvcCgpLHRoaXMuc3RhcnRPYmplY3Q9bnVsbH1kb01vdXNlVXAoKXtpZih0aGlzLmlzQWN0aXZlKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLnRyYW5zYWN0aW9uUmVzdWx0PW51bGw7bGV0IGk9bnVsbCxlPW51bGwscz1udWxsLG49bnVsbCxvPW51bGw7dHJ5e3RoaXMudGFyZ2V0UG9ydD10aGlzLmZpbmRUYXJnZXRQb3J0KHRoaXMuaXNGb3J3YXJkcyk7Y29uc3Qgcj10aGlzLnRhcmdldFBvcnQ7aWYociE9PW51bGwpe2NvbnN0IGw9ci5wYXJ0O2wgaW5zdGFuY2VvZiBOb2RlJiYodGhpcy5pc0ZvcndhcmRzPyh0aGlzLm9yaWdpbmFsRnJvbU5vZGUhPT1udWxsJiYoaT10aGlzLm9yaWdpbmFsRnJvbU5vZGUsZT10aGlzLm9yaWdpbmFsRnJvbVBvcnQpLHM9bCxuPXIpOihpPWwsZT1yLHRoaXMub3JpZ2luYWxUb05vZGUhPT1udWxsJiYocz10aGlzLm9yaWdpbmFsVG9Ob2RlLG49dGhpcy5vcmlnaW5hbFRvUG9ydCkpKX1lbHNlIHRoaXMuaXNGb3J3YXJkcz90aGlzLm9yaWdpbmFsRnJvbU5vZGUhPT1udWxsJiZ0aGlzLmlzVW5jb25uZWN0ZWRMaW5rVmFsaWQmJihpPXRoaXMub3JpZ2luYWxGcm9tTm9kZSxlPXRoaXMub3JpZ2luYWxGcm9tUG9ydCk6dGhpcy5vcmlnaW5hbFRvTm9kZSE9PW51bGwmJnRoaXMuaXNVbmNvbm5lY3RlZExpbmtWYWxpZCYmKHM9dGhpcy5vcmlnaW5hbFRvTm9kZSxuPXRoaXMub3JpZ2luYWxUb1BvcnQpO2khPT1udWxsfHxzIT09bnVsbD8obz10aGlzLmluc2VydExpbmsoaSxlLHMsbiksbyE9PW51bGw/KHI9PT1udWxsJiYodGhpcy5pc0ZvcndhcmRzP28uZGVmYXVsdFRvUG9pbnQ9dC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludDpvLmRlZmF1bHRGcm9tUG9pbnQ9dC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCksdC5hbGxvd1NlbGVjdCYmKHQuTyhcIkNoYW5naW5nU2VsZWN0aW9uXCIsdC5zZWxlY3Rpb24pLHQuY2xlYXJTZWxlY3Rpb24oITApLG8uaXNTZWxlY3RlZD0hMCksdGhpcy50cmFuc2FjdGlvblJlc3VsdD10aGlzLm5hbWUsdC5PKFwiTGlua0RyYXduXCIsbykpOnRoaXMuZG9Ob0xpbmsoaSxlLHMsbikpOnRoaXMuaXNGb3J3YXJkcz90aGlzLmRvTm9MaW5rKHRoaXMub3JpZ2luYWxGcm9tTm9kZSx0aGlzLm9yaWdpbmFsRnJvbVBvcnQsbnVsbCxudWxsKTp0aGlzLmRvTm9MaW5rKG51bGwsbnVsbCx0aGlzLm9yaWdpbmFsVG9Ob2RlLHRoaXMub3JpZ2luYWxUb1BvcnQpfWZpbmFsbHl7dGhpcy5zdG9wVG9vbCgpLG8mJnQuYWxsb3dTZWxlY3QmJnQuTyhcIkNoYW5nZWRTZWxlY3Rpb25cIix0LnNlbGVjdGlvbil9fX1pc05ld1RyZWVMaW5rKCl7Y29uc3QgdD10aGlzLmFyY2hldHlwZUxpbmtEYXRhO2lmKHQ9PT1udWxsKXJldHVybiEwO2lmKHQgaW5zdGFuY2VvZiBMaW5rKXJldHVybiB0LmlzVHJlZUxpbms7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaT09PW51bGwpcmV0dXJuITA7Y29uc3QgZT1pLnBhcnRNYW5hZ2VyLmdldExpbmtDYXRlZ29yeUZvckRhdGEodCkscz1pLnBhcnRNYW5hZ2VyLmZpbmRMaW5rVGVtcGxhdGVGb3JDYXRlZ29yeShlKTtyZXR1cm4gcyE9PW51bGw/cy5pc1RyZWVMaW5rOiEwfWluc2VydExpbmsodCxpLGUscyl7cmV0dXJuIHRoaXMuZGlhZ3JhbS5wYXJ0TWFuYWdlci5pbnNlcnRMaW5rKHQsaSxlLHMpfWRvTm9MaW5rKHQsaSxlLHMpe319Y2xhc3MgUmVsaW5raW5nVG9vbCBleHRlbmRzIExpbmtpbmdCYXNlVG9vbHt1QT1udWxsO2RBPW51bGw7b009bnVsbDtyTT1udWxsO3BzO2xNO2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5uYW1lPVwiUmVsaW5raW5nXCIsdGhpcy5mcm9tSGFuZGxlQXJjaGV0eXBlPW5ldyBTaGFwZShcIkRpYW1vbmRcIix7ZGVzaXJlZFNpemU6U2l6ZS5mdSxmaWxsOlwibGlnaHRibHVlXCIsc3Ryb2tlOlwiZG9kZ2VyYmx1ZVwiLGN1cnNvcjp0aGlzLmxpbmtpbmdDdXJzb3Isc2VnbWVudEluZGV4OjB9KS50aGVtZShcImZpbGxcIixcImFkb3JubWVudEZpbGxcIikudGhlbWUoXCJzdHJva2VcIixcImFkb3JubWVudFN0cm9rZVwiKSx0aGlzLnRvSGFuZGxlQXJjaGV0eXBlPW5ldyBTaGFwZShcIkRpYW1vbmRcIix7ZGVzaXJlZFNpemU6U2l6ZS5mdSxmaWxsOlwibGlnaHRibHVlXCIsc3Ryb2tlOlwiZG9kZ2VyYmx1ZVwiLGN1cnNvcjp0aGlzLmxpbmtpbmdDdXJzb3Isc2VnbWVudEluZGV4Oi0xfSkudGhlbWUoXCJmaWxsXCIsXCJhZG9ybm1lbnRGaWxsXCIpLnRoZW1lKFwic3Ryb2tlXCIsXCJhZG9ybm1lbnRTdHJva2VcIiksdGhpcy5wcz1udWxsLHRoaXMubE09bmV3IFJlY3QsdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfXVwZGF0ZUFkb3JubWVudHModCl7aWYodD09PW51bGx8fCEodCBpbnN0YW5jZW9mIExpbmspKXJldHVybjtsZXQgaT1cIlJlbGlua0Zyb21cIixlPW51bGw7aWYodC5pc1NlbGVjdGVkJiYhdGhpcy5kaWFncmFtLmlzUmVhZE9ubHkpe2NvbnN0IHM9dC5zZWxlY3Rpb25PYmplY3Q7cyE9PW51bGwmJnQuY2FuUmVsaW5rRnJvbSgpJiZ0LmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmdC5pc1Zpc2libGUoKSYmcy5hY3R1YWxCb3VuZHMuaXNSZWFsKCkmJnMuaXNWaXNpYmxlT2JqZWN0KCkmJihlPXQuZmluZEFkb3JubWVudChpKSxlPT09bnVsbCYmKGU9dGhpcy5tYWtlQWRvcm5tZW50KHMsITEpLHQuYWRkQWRvcm5tZW50KGksZSkpKX1pZihlPT09bnVsbCYmdC5yZW1vdmVBZG9ybm1lbnQoaSksaT1cIlJlbGlua1RvXCIsZT1udWxsLHQuaXNTZWxlY3RlZCYmIXRoaXMuZGlhZ3JhbS5pc1JlYWRPbmx5KXtjb25zdCBzPXQuc2VsZWN0aW9uT2JqZWN0O3MhPT1udWxsJiZ0LmNhblJlbGlua1RvKCkmJnQuYWN0dWFsQm91bmRzLmlzUmVhbCgpJiZ0LmlzVmlzaWJsZSgpJiZzLmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmcy5pc1Zpc2libGVPYmplY3QoKSYmKGU9dC5maW5kQWRvcm5tZW50KGkpLGU9PT1udWxsPyhlPXRoaXMubWFrZUFkb3JubWVudChzLCEwKSx0LmFkZEFkb3JubWVudChpLGUpKTplLnUoKSl9ZT09PW51bGwmJnQucmVtb3ZlQWRvcm5tZW50KGkpfW1ha2VBZG9ybm1lbnQodCxpKXtsZXQgZT1pP3RoaXMuck06dGhpcy5vTTtyZXR1cm4gZSYmKGU9ZS5jb3B5KCksZS5hZG9ybmVkT2JqZWN0PXQpLGV9Z2V0IGZyb21IYW5kbGVBcmNoZXR5cGUoKXtyZXR1cm4gdGhpcy51QX1zZXQgZnJvbUhhbmRsZUFyY2hldHlwZSh0KXt0IT09bnVsbCYmVS5lKHQsR3JhcGhPYmplY3QsUmVsaW5raW5nVG9vbCxcImZyb21IYW5kbGVBcmNoZXR5cGVcIiksdGhpcy51QT10LHQhPT1udWxsP3RoaXMub009bmV3IEFkb3JubWVudChQYW5lbC5MaW5rKS5hZGQodCkuS3QoKTp0aGlzLm9NPW51bGx9Z2V0IHRvSGFuZGxlQXJjaGV0eXBlKCl7cmV0dXJuIHRoaXMuZEF9c2V0IHRvSGFuZGxlQXJjaGV0eXBlKHQpe3QhPT1udWxsJiZVLmUodCxHcmFwaE9iamVjdCxSZWxpbmtpbmdUb29sLFwidG9IYW5kbGVBcmNoZXR5cGVcIiksdGhpcy5kQT10LHQhPT1udWxsP3RoaXMuck09bmV3IEFkb3JubWVudChQYW5lbC5MaW5rKS5hZGQodCkuS3QoKTp0aGlzLnJNPW51bGx9Z2V0IGhhbmRsZSgpe3JldHVybiB0aGlzLnBzfXNldCBoYW5kbGUodCl7dCE9PW51bGwmJihVLmUodCxHcmFwaE9iamVjdCxSZWxpbmtpbmdUb29sLFwiaGFuZGxlXCIpLHQucGFydCBpbnN0YW5jZW9mIEFkb3JubWVudHx8VS5uKFwibmV3IGhhbmRsZSBpcyBub3QgaW4gYW4gQWRvcm5tZW50OiBcIit0KSksdGhpcy5wcz10fWNhblN0YXJ0KCl7aWYoIXRoaXMuaXNFbmFibGVkKXJldHVybiExO2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHQuaXNSZWFkT25seXx8dC5pc01vZGVsUmVhZE9ubHl8fCF0LmFsbG93UmVsaW5rfHwhdC5tb2RlbC4kdygpfHwhdC5sYXN0SW5wdXQubGVmdClyZXR1cm4hMTtsZXQgZT10aGlzLmZpbmRUb29sSGFuZGxlQXQodC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsXCJSZWxpbmtGcm9tXCIpO3JldHVybiBlPT09bnVsbCYmKGU9dGhpcy5maW5kVG9vbEhhbmRsZUF0KHQuZmlyc3RJbnB1dC5kb2N1bWVudFBvaW50LFwiUmVsaW5rVG9cIikpLGUhPT1udWxsfWRvQWN0aXZhdGUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0aGlzLm9yaWdpbmFsTGluaz09PW51bGwpe2xldCBlPXRoaXMuaGFuZGxlO2lmKGU9PT1udWxsJiYoZT10aGlzLmZpbmRUb29sSGFuZGxlQXQodC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsXCJSZWxpbmtGcm9tXCIpLGU9PT1udWxsJiYoZT10aGlzLmZpbmRUb29sSGFuZGxlQXQodC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsXCJSZWxpbmtUb1wiKSkpLGU9PT1udWxsKXJldHVybjtjb25zdCBzPWUucGFydDtpZighKHMgaW5zdGFuY2VvZiBBZG9ybm1lbnQpfHwhKHMuYWRvcm5lZFBhcnQgaW5zdGFuY2VvZiBMaW5rKSlyZXR1cm47dGhpcy5oYW5kbGU9ZSx0aGlzLmlzRm9yd2FyZHM9cz09PW51bGx8fHMuY2F0ZWdvcnk9PT1cIlJlbGlua1RvXCIsdGhpcy5vcmlnaW5hbExpbms9cy5hZG9ybmVkUGFydH1jb25zdCBpPXRoaXMub3JpZ2luYWxMaW5rO2khPT1udWxsJiYodGhpcy5zdGFydFRyYW5zYWN0aW9uKHRoaXMubmFtZSksdC5pc01vdXNlQ2FwdHVyZWQ9ITAsdC5jdXJyZW50Q3Vyc29yPXRoaXMubGlua2luZ0N1cnNvcix0aGlzLm9yaWdpbmFsRnJvbVBvcnQ9aS5mcm9tUG9ydCx0aGlzLm9yaWdpbmFsRnJvbU5vZGU9aS5mcm9tTm9kZSx0aGlzLm9yaWdpbmFsVG9Qb3J0PWkudG9Qb3J0LHRoaXMub3JpZ2luYWxUb05vZGU9aS50b05vZGUsdGhpcy5sTS5zZXQoaS5hY3R1YWxCb3VuZHMpLGkucG9pbnRzQ291bnQ+MCYmKGkuZnJvbU5vZGU9PT1udWxsJiYodGhpcy50ZW1wb3JhcnlGcm9tUG9ydCE9PW51bGwmJih0aGlzLnRlbXBvcmFyeUZyb21Qb3J0LmRlc2lyZWRTaXplPVNpemUuR2gpLHRoaXMudGVtcG9yYXJ5RnJvbU5vZGUhPT1udWxsJiYodGhpcy50ZW1wb3JhcnlGcm9tTm9kZS5sb2NhdGlvbj1pLmdldFBvaW50KDApKSksaS50b05vZGU9PT1udWxsJiYodGhpcy50ZW1wb3JhcnlUb1BvcnQhPT1udWxsJiYodGhpcy50ZW1wb3JhcnlUb1BvcnQuZGVzaXJlZFNpemU9U2l6ZS5HaCksdGhpcy50ZW1wb3JhcnlUb05vZGUhPT1udWxsJiYodGhpcy50ZW1wb3JhcnlUb05vZGUubG9jYXRpb249aS5nZXRQb2ludChpLnBvaW50c0NvdW50LTEpKSkpLHRoaXMuY29weVBvcnRQcm9wZXJ0aWVzKHRoaXMub3JpZ2luYWxGcm9tTm9kZSx0aGlzLm9yaWdpbmFsRnJvbVBvcnQsdGhpcy50ZW1wb3JhcnlGcm9tTm9kZSx0aGlzLnRlbXBvcmFyeUZyb21Qb3J0LCExKSx0aGlzLmNvcHlQb3J0UHJvcGVydGllcyh0aGlzLm9yaWdpbmFsVG9Ob2RlLHRoaXMub3JpZ2luYWxUb1BvcnQsdGhpcy50ZW1wb3JhcnlUb05vZGUsdGhpcy50ZW1wb3JhcnlUb1BvcnQsITApLHQuYWRkKHRoaXMudGVtcG9yYXJ5RnJvbU5vZGUpLHQuYWRkKHRoaXMudGVtcG9yYXJ5VG9Ob2RlKSx0aGlzLnRlbXBvcmFyeUxpbmshPT1udWxsJiYodGhpcy50ZW1wb3JhcnlGcm9tTm9kZSE9PW51bGwmJih0aGlzLnRlbXBvcmFyeUxpbmsuZnJvbU5vZGU9dGhpcy50ZW1wb3JhcnlGcm9tTm9kZSksdGhpcy50ZW1wb3JhcnlUb05vZGUhPT1udWxsJiYodGhpcy50ZW1wb3JhcnlMaW5rLnRvTm9kZT10aGlzLnRlbXBvcmFyeVRvTm9kZSksdGhpcy5jb3B5TGlua1Byb3BlcnRpZXMoaSx0aGlzLnRlbXBvcmFyeUxpbmspLHRoaXMudGVtcG9yYXJ5TGluay5pbnZhbGlkYXRlUm91dGUoKSx0LmFkZCh0aGlzLnRlbXBvcmFyeUxpbmspKSx0aGlzLmlzQWN0aXZlPSEwKX1jb3B5TGlua1Byb3BlcnRpZXModCxpKXtpZih0PT09bnVsbHx8aT09PW51bGwpcmV0dXJuO2kuYWRqdXN0aW5nPXQuYWRqdXN0aW5nLGkuY29ybmVyPXQuY29ybmVyO2xldCBlPXQuY3VydmU7KGU9PT0xMXx8ZT09PTEwKSYmKGU9MCksaS5jdXJ2ZT1lLGkuY3VydmluZXNzPXQuY3VydmluZXNzLGkuaXNUcmVlTGluaz10LmlzVHJlZUxpbmssaS5wb2ludHM9dC5wb2ludHMsaS5yb3V0aW5nPXQucm91dGluZyxpLnNtb290aG5lc3M9dC5zbW9vdGhuZXNzLGkuZnJvbVNwb3Q9dC5mcm9tU3BvdCxpLmZyb21FbmRTZWdtZW50TGVuZ3RoPXQuZnJvbUVuZFNlZ21lbnRMZW5ndGgsaS5mcm9tU2hvcnRMZW5ndGg9dC5mcm9tU2hvcnRMZW5ndGgsaS50b1Nwb3Q9dC50b1Nwb3QsaS50b0VuZFNlZ21lbnRMZW5ndGg9dC50b0VuZFNlZ21lbnRMZW5ndGgsaS50b1Nob3J0TGVuZ3RoPXQudG9TaG9ydExlbmd0aH1kb0RlYWN0aXZhdGUoKXt0aGlzLmlzQWN0aXZlPSExO2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QucmVtb3ZlKHRoaXMudGVtcG9yYXJ5TGluayksdC5yZW1vdmUodGhpcy50ZW1wb3JhcnlGcm9tTm9kZSksdC5yZW1vdmUodGhpcy50ZW1wb3JhcnlUb05vZGUpLHQuaXNNb3VzZUNhcHR1cmVkPSExLHQuY3VycmVudEN1cnNvcj1cIlwiLHRoaXMuc3RvcFRyYW5zYWN0aW9uKCl9ZG9TdG9wKCl7c3VwZXIuZG9TdG9wKCksdGhpcy5oYW5kbGU9bnVsbH1kb01vdXNlVXAoKXtpZih0aGlzLmlzQWN0aXZlKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLnRyYW5zYWN0aW9uUmVzdWx0PW51bGw7bGV0IGk9dGhpcy5vcmlnaW5hbEZyb21Ob2RlLGU9dGhpcy5vcmlnaW5hbEZyb21Qb3J0LHM9dGhpcy5vcmlnaW5hbFRvTm9kZSxuPXRoaXMub3JpZ2luYWxUb1BvcnQsbz10aGlzLm9yaWdpbmFsTGluazt0cnl7aWYodGhpcy50YXJnZXRQb3J0PXRoaXMuZmluZFRhcmdldFBvcnQodGhpcy5pc0ZvcndhcmRzKSx0aGlzLnRhcmdldFBvcnQhPT1udWxsKXtjb25zdCByPXRoaXMudGFyZ2V0UG9ydC5wYXJ0O3IgaW5zdGFuY2VvZiBOb2RlJiYodGhpcy5pc0ZvcndhcmRzPyhzPXIsbj10aGlzLnRhcmdldFBvcnQpOihpPXIsZT10aGlzLnRhcmdldFBvcnQpKX1lbHNlIHRoaXMuaXNVbmNvbm5lY3RlZExpbmtWYWxpZD90aGlzLmlzRm9yd2FyZHM/KHM9bnVsbCxuPW51bGwpOihpPW51bGwsZT1udWxsKTpvPW51bGw7byE9PW51bGw/KHRoaXMucmVjb25uZWN0TGluayhvLHRoaXMuaXNGb3J3YXJkcz9zOmksdGhpcy5pc0ZvcndhcmRzP246ZSx0aGlzLmlzRm9yd2FyZHMpLHRoaXMudGFyZ2V0UG9ydD09PW51bGwmJih0aGlzLmlzRm9yd2FyZHM/by5kZWZhdWx0VG9Qb2ludD10Lmxhc3RJbnB1dC5kb2N1bWVudFBvaW50Om8uZGVmYXVsdEZyb21Qb2ludD10Lmxhc3RJbnB1dC5kb2N1bWVudFBvaW50LG8uaW52YWxpZGF0ZVJvdXRlKCkpLHRoaXMudHJhbnNhY3Rpb25SZXN1bHQ9dGhpcy5uYW1lLHQuTyhcIkxpbmtSZWxpbmtlZFwiLG8sdGhpcy5pc0ZvcndhcmRzP3RoaXMub3JpZ2luYWxUb1BvcnQ6dGhpcy5vcmlnaW5hbEZyb21Qb3J0KSk6dGhpcy5vcmlnaW5hbExpbmshPT1udWxsJiZ0aGlzLmRvTm9SZWxpbmsodGhpcy5vcmlnaW5hbExpbmssdGhpcy5pc0ZvcndhcmRzKSx0aGlzLm9yaWdpbmFsTGluayE9PW51bGwmJnRoaXMub3JpZ2luYWxMaW5rLmludmFsaWRhdGVPdGhlckp1bXBPdmVycyh0aGlzLmxNKX1maW5hbGx5e3RoaXMuc3RvcFRvb2woKX19fXJlY29ubmVjdExpbmsodCxpLGUscyl7Y29uc3Qgbj1lIT09bnVsbCYmZS5wb3J0SWQhPT1udWxsP2UucG9ydElkOlwiXCI7cmV0dXJuIHM/KHQudG9Ob2RlPWksdC50b1BvcnRJZD1uKToodC5mcm9tTm9kZT1pLHQuZnJvbVBvcnRJZD1uKSwhMH1kb05vUmVsaW5rKHQsaSl7fWRvRHJhZ2dpbmdNb3VzZU1vdmUodCxpLGUscyl7dCE9PW51bGw/KHRoaXMuY29weVBvcnRQcm9wZXJ0aWVzKHQsaSx0aGlzLnRlbXBvcmFyeUZyb21Ob2RlLHRoaXMudGVtcG9yYXJ5RnJvbVBvcnQsITEpLHRoaXMuZGlhZ3JhbS5hZGQodGhpcy50ZW1wb3JhcnlGcm9tTm9kZSkpOnRoaXMuZGlhZ3JhbS5yZW1vdmUodGhpcy50ZW1wb3JhcnlGcm9tTm9kZSksZSE9PW51bGw/KHRoaXMuY29weVBvcnRQcm9wZXJ0aWVzKGUscyx0aGlzLnRlbXBvcmFyeVRvTm9kZSx0aGlzLnRlbXBvcmFyeVRvUG9ydCwhMCksdGhpcy5kaWFncmFtLmFkZCh0aGlzLnRlbXBvcmFyeVRvTm9kZSkpOnRoaXMuZGlhZ3JhbS5yZW1vdmUodGhpcy50ZW1wb3JhcnlUb05vZGUpfXN0b3BEcmFnZ2luZ01vdXNlTW92ZSgpe3RoaXMuZGlhZ3JhbS5yZW1vdmUodGhpcy50ZW1wb3JhcnlGcm9tTm9kZSksdGhpcy5kaWFncmFtLnJlbW92ZSh0aGlzLnRlbXBvcmFyeVRvTm9kZSl9fXZhciBSZXNoYXBpbmdCZWhhdmlvcj0oeT0+KHlbeS5Ob25lPTBdPVwiTm9uZVwiLHlbeS5Ib3Jpem9udGFsPTFdPVwiSG9yaXpvbnRhbFwiLHlbeS5WZXJ0aWNhbD0yXT1cIlZlcnRpY2FsXCIseVt5LkFsbD0zXT1cIkFsbFwiLHkpKShSZXNoYXBpbmdCZWhhdmlvcnx8e30pO2NsYXNzIExpbmtSZXNoYXBpbmdUb29sIGV4dGVuZHMgVG9vbHticjtoTTthTTtwcztadztmTTtNbTtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMubmFtZT1cIkxpbmtSZXNoYXBpbmdcIix0aGlzLmJyPW5ldyBTaGFwZShcIlJlY3RhbmdsZVwiLHtkZXNpcmVkU2l6ZTpTaXplLlNDLGZpbGw6XCJsaWdodGJsdWVcIixzdHJva2U6XCJkb2RnZXJibHVlXCJ9KS50aGVtZShcImZpbGxcIixcImFkb3JubWVudEZpbGxcIikudGhlbWUoXCJzdHJva2VcIixcImFkb3JubWVudFN0cm9rZVwiKSx0aGlzLmhNPW5ldyBTaGFwZShcIkRpYW1vbmRcIix7ZGVzaXJlZFNpemU6U2l6ZS5mdSxmaWxsOlwibGlnaHRibHVlXCIsc3Ryb2tlOlwiZG9kZ2VyYmx1ZVwiLGN1cnNvcjpcIm1vdmVcIn0pLnRoZW1lKFwiZmlsbFwiLFwiYWRvcm5tZW50RmlsbFwiKS50aGVtZShcInN0cm9rZVwiLFwiYWRvcm5tZW50U3Ryb2tlXCIpLHRoaXMuYU09Myx0aGlzLnBzPW51bGwsdGhpcy5adz1udWxsLHRoaXMuZk09bmV3IFBvaW50LHRoaXMuTW09bmV3IExpc3QsdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfXN0YXRpYyBOb25lPTA7c3RhdGljIEhvcml6b250YWw9MTtzdGF0aWMgVmVydGljYWw9MjtzdGF0aWMgQWxsPTM7Z2V0UmVzaGFwaW5nQmVoYXZpb3IodCl7cmV0dXJuIHQ/dC5rcjowfXNldFJlc2hhcGluZ0JlaGF2aW9yKHQsaSl7dC5rcj1pfXVwZGF0ZUFkb3JubWVudHModCl7aWYodD09PW51bGx8fCEodCBpbnN0YW5jZW9mIExpbmspKXJldHVybjtsZXQgaT1udWxsO2lmKHQuaXNTZWxlY3RlZCYmIXRoaXMuZGlhZ3JhbS5pc1JlYWRPbmx5KXtjb25zdCBlPXQucGF0aDtlIT09bnVsbCYmdC5jYW5SZXNoYXBlKCkmJnQuYWN0dWFsQm91bmRzLmlzUmVhbCgpJiZ0LmlzVmlzaWJsZSgpJiZlLmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmZS5pc1Zpc2libGVPYmplY3QoKSYmKGk9dC5maW5kQWRvcm5tZW50KHRoaXMubmFtZSksKGk9PT1udWxsfHxpLmNNIT09dC5wb2ludHNDb3VudHx8aS51TSE9PXQucmVzZWdtZW50YWJsZSkmJihpPXRoaXMubWFrZUFkb3JubWVudChlKSxpIT09bnVsbCYmKGkuY009dC5wb2ludHNDb3VudCxpLnVNPXQucmVzZWdtZW50YWJsZSx0LmFkZEFkb3JubWVudCh0aGlzLm5hbWUsaSkpKSl9aT09PW51bGwmJnQucmVtb3ZlQWRvcm5tZW50KHRoaXMubmFtZSl9bWFrZUFkb3JubWVudCh0KXtjb25zdCBpPXQucGFydCxlPWkucG9pbnRzLHM9aS5wb2ludHNDb3VudCxuPWkuaXNPcnRob2dvbmFsO2xldCBvPW51bGw7aWYoZSE9PW51bGwmJnM+MSl7bz1uZXcgQWRvcm5tZW50LG8udHlwZT1QYW5lbC5MaW5rO2NvbnN0IHI9aS5maXJzdFBpY2tJbmRleCxsPWkubGFzdFBpY2tJbmRleCxoPW4/MTowO2lmKGkucmVzZWdtZW50YWJsZSYmaS5jb21wdXRlQ3VydmUoKSE9PTkpZm9yKGxldCBmPXIraDtmPGwtaDtmKyspe2NvbnN0IGE9dGhpcy5tYWtlUmVzZWdtZW50SGFuZGxlKHQsZik7YSE9PW51bGwmJihhLnNlZ21lbnRJbmRleD1mLGEuc2VnbWVudEZyYWN0aW9uPS41LGEuZnJvbU1heExpbmtzPTk5OSxvLmFkZChhKSl9Zm9yKGxldCBmPXIrMTtmPGw7ZisrKXtjb25zdCBhPXRoaXMubWFrZUhhbmRsZSh0LGYpO2lmKGEhPT1udWxsKXtpZihhLnNlZ21lbnRJbmRleD1mLGYhPT1yKWlmKGY9PT1yKzEmJm4pe2NvbnN0IGM9aS5nZXRQb2ludChyKTtsZXQgdT1pLmdldFBvaW50KHIrMSk7R2VvLmcoYy54LHUueCkmJkdlby5nKGMueSx1LnkpPyh1PWkuZ2V0UG9pbnQoci0xKSxHZW8uZyhjLngsdS54KT8odGhpcy5zZXRSZXNoYXBpbmdCZWhhdmlvcihhLDIpLGEuY3Vyc29yPVwibi1yZXNpemVcIik6R2VvLmcoYy55LHUueSkmJih0aGlzLnNldFJlc2hhcGluZ0JlaGF2aW9yKGEsMSksYS5jdXJzb3I9XCJ3LXJlc2l6ZVwiKSk6R2VvLmcoYy54LHUueCk/KHRoaXMuc2V0UmVzaGFwaW5nQmVoYXZpb3IoYSwyKSxhLmN1cnNvcj1cIm4tcmVzaXplXCIpOkdlby5nKGMueSx1LnkpJiYodGhpcy5zZXRSZXNoYXBpbmdCZWhhdmlvcihhLDEpLGEuY3Vyc29yPVwidy1yZXNpemVcIil9ZWxzZSBpZihmPT09bC0xJiZuKXtsZXQgYz1pLmdldFBvaW50KGwtMSk7Y29uc3QgdT1pLmdldFBvaW50KGwpO0dlby5nKGMueCx1LngpJiZHZW8uZyhjLnksdS55KT8oYz1pLmdldFBvaW50KGwrMSksR2VvLmcoYy54LHUueCk/KHRoaXMuc2V0UmVzaGFwaW5nQmVoYXZpb3IoYSwyKSxhLmN1cnNvcj1cIm4tcmVzaXplXCIpOkdlby5nKGMueSx1LnkpJiYodGhpcy5zZXRSZXNoYXBpbmdCZWhhdmlvcihhLDEpLGEuY3Vyc29yPVwidy1yZXNpemVcIikpOkdlby5nKGMueCx1LngpPyh0aGlzLnNldFJlc2hhcGluZ0JlaGF2aW9yKGEsMiksYS5jdXJzb3I9XCJuLXJlc2l6ZVwiKTpHZW8uZyhjLnksdS55KSYmKHRoaXMuc2V0UmVzaGFwaW5nQmVoYXZpb3IoYSwxKSxhLmN1cnNvcj1cInctcmVzaXplXCIpfWVsc2UgZj09PWx8fCh0aGlzLnNldFJlc2hhcGluZ0JlaGF2aW9yKGEsMyksYS5jdXJzb3I9XCJtb3ZlXCIpO28uYWRkKGEpfX1vLmFkb3JuZWRPYmplY3Q9dH1yZXR1cm4gb31tYWtlSGFuZGxlKHQsaSl7Y29uc3QgZT10aGlzLmhhbmRsZUFyY2hldHlwZTtyZXR1cm4gZT09PW51bGw/bnVsbDplLmNvcHkoKS5kTSgpfWdldCBoYW5kbGVBcmNoZXR5cGUoKXtyZXR1cm4gdGhpcy5icn1zZXQgaGFuZGxlQXJjaGV0eXBlKHQpe3QhPT1udWxsJiZVLmUodCxHcmFwaE9iamVjdCxMaW5rUmVzaGFwaW5nVG9vbCxcImhhbmRsZUFyY2hldHlwZVwiKSx0aGlzLmJyPXR9bWFrZVJlc2VnbWVudEhhbmRsZSh0LGkpe2NvbnN0IGU9dGhpcy5taWRIYW5kbGVBcmNoZXR5cGU7cmV0dXJuIGU9PT1udWxsP251bGw6ZS5jb3B5KCkuZE0oKX1nZXQgbWlkSGFuZGxlQXJjaGV0eXBlKCl7cmV0dXJuIHRoaXMuaE19c2V0IG1pZEhhbmRsZUFyY2hldHlwZSh0KXt0IT09bnVsbCYmVS5lKHQsR3JhcGhPYmplY3QsTGlua1Jlc2hhcGluZ1Rvb2wsXCJtaWRIYW5kbGVBcmNoZXR5cGVcIiksdGhpcy5oTT10fWdldCBoYW5kbGUoKXtyZXR1cm4gdGhpcy5wc31zZXQgaGFuZGxlKHQpe3QhPT1udWxsJiYoVS5lKHQsR3JhcGhPYmplY3QsTGlua1Jlc2hhcGluZ1Rvb2wsXCJoYW5kbGVcIiksdC5wYXJ0IGluc3RhbmNlb2YgQWRvcm5tZW50fHxVLm4oXCJuZXcgaGFuZGxlIGlzIG5vdCBpbiBhbiBBZG9ybm1lbnQ6IFwiK3QpKSx0aGlzLnBzPXR9Z2V0IGFkb3JuZWRMaW5rKCl7cmV0dXJuIHRoaXMuWnd9Y2FuU3RhcnQoKXtpZighdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07cmV0dXJuIHQuaXNSZWFkT25seXx8IXQuYWxsb3dSZXNoYXBlfHwhdC5sYXN0SW5wdXQubGVmdD8hMTp0aGlzLmZpbmRUb29sSGFuZGxlQXQodC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsdGhpcy5uYW1lKSE9PW51bGx9ZG9BY3RpdmF0ZSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMuaGFuZGxlPT09bnVsbCYmKHRoaXMuaGFuZGxlPXRoaXMuZmluZFRvb2xIYW5kbGVBdCh0LmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCx0aGlzLm5hbWUpKSx0aGlzLmhhbmRsZT09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5oYW5kbGUucGFydC5hZG9ybmVkUGFydDtpZihpIGluc3RhbmNlb2YgTGluayl7aWYodGhpcy5adz1pLHQuaXNNb3VzZUNhcHR1cmVkPSEwLHRoaXMuc3RhcnRUcmFuc2FjdGlvbih0aGlzLm5hbWUpLGkucmVzZWdtZW50YWJsZSYmdGhpcy5oYW5kbGUuZnJvbU1heExpbmtzPT09OTk5KXtjb25zdCBlPWkucG9pbnRzLmNvcHkoKSxzPXRoaXMuZ2V0UmVzZWdtZW50aW5nUG9pbnQoKTtpZihlLmluc2VydEF0KHRoaXMuaGFuZGxlLnNlZ21lbnRJbmRleCsxLHMpLGkuaXNPcnRob2dvbmFsJiZlLmluc2VydEF0KHRoaXMuaGFuZGxlLnNlZ21lbnRJbmRleCsxLHMpLGkucG9pbnRzPWUsaS5pbnZhbGlkYXRlQWRvcm5tZW50cygpLGkudXBkYXRlQWRvcm5tZW50cygpLHRoaXMuaGFuZGxlPXRoaXMuZmluZFRvb2xIYW5kbGVBdCh0LmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCx0aGlzLm5hbWUpLHRoaXMuaGFuZGxlPT09bnVsbCl7dGhpcy5kb0RlYWN0aXZhdGUoKTtyZXR1cm59fXRoaXMuZk09aS5nZXRQb2ludCh0aGlzLmhhbmRsZS5zZWdtZW50SW5kZXgpLHRoaXMuTW09aS5wb2ludHMuY29weSgpLHRoaXMuaXNBY3RpdmU9ITB9fWRvRGVhY3RpdmF0ZSgpe3RoaXMuc3RvcFRyYW5zYWN0aW9uKCksdGhpcy5oYW5kbGU9bnVsbCx0aGlzLlp3PW51bGw7Y29uc3QgdD10aGlzLmRpYWdyYW07dC5pc01vdXNlQ2FwdHVyZWQ9ITEsdGhpcy5pc0FjdGl2ZT0hMX1zdG9wVHJhbnNhY3Rpb24oKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXN1cGVyLnN0b3BUcmFuc2FjdGlvbigpO3JldHVybiBpJiZ0LnVuZG9NYW5hZ2VyLnRyYW5zYWN0aW9uVG9VbmRvIT09bnVsbCYmdC51bmRvTWFuYWdlci50cmFuc2FjdGlvblRvVW5kby5vcHRpbWl6ZSgpLGl9ZG9DYW5jZWwoKXtjb25zdCB0PXRoaXMuYWRvcm5lZExpbms7dCE9PW51bGwmJih0LnBvaW50cz10aGlzLk1tKSx0aGlzLnN0b3BUb29sKCl9Z2V0UmVzZWdtZW50aW5nUG9pbnQoKXtyZXR1cm4gdGhpcy5oYW5kbGU9PT1udWxsP3RoaXMuZGlhZ3JhbS5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludDp0aGlzLmhhbmRsZS5nZXREb2N1bWVudFBvaW50KFNwb3QuQ2VudGVyKX1kb01vdXNlTW92ZSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMuaXNBY3RpdmUpe2NvbnN0IGk9dGhpcy5jb21wdXRlUmVzaGFwZSh0Lmxhc3RJbnB1dC5kb2N1bWVudFBvaW50KTt0aGlzLnJlc2hhcGUoaSl9fWRvTW91c2VVcCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMuaXNBY3RpdmUpe2NvbnN0IGk9dGhpcy5jb21wdXRlUmVzaGFwZSh0Lmxhc3RJbnB1dC5kb2N1bWVudFBvaW50KTt0aGlzLnJlc2hhcGUoaSk7Y29uc3QgZT10aGlzLmFkb3JuZWRMaW5rO2lmKGUhPT1udWxsJiZlLnJlc2VnbWVudGFibGUmJnRoaXMuaGFuZGxlIT09bnVsbCl7Y29uc3Qgcz10aGlzLmhhbmRsZS5zZWdtZW50SW5kZXgsbj1lLmdldFBvaW50KHMtMSksbz1lLmdldFBvaW50KHMpLHI9ZS5nZXRQb2ludChzKzEpO2lmKGUuaXNPcnRob2dvbmFsKXtpZihzPmUuZmlyc3RQaWNrSW5kZXgrMSYmczxlLmxhc3RQaWNrSW5kZXgtMSl7bGV0IGw9ZS5nZXRQb2ludChzLTIpO2lmKHRoaXMuaXNXaXRoaW5SZXNlZ21lbnRpbmdEaXN0YW5jZShuLG8pJiYodGhpcy5pc0luTGluZU9ydGhvKGwsbixvLHIsITApfHx0aGlzLmlzSW5MaW5lT3J0aG8obCxuLG8sciwhMSkpKXtjb25zdCBoPWUucG9pbnRzLmNvcHkoKTt0aGlzLmlzSW5MaW5lT3J0aG8obCxuLG8sciwhMCk/KGguc2V0RWx0KHMtMixuZXcgUG9pbnQobC54LChyLnkrbC55KS8yKSksaC5zZXRFbHQocysxLG5ldyBQb2ludChyLngsKHIueStsLnkpLzIpKSk6KGguc2V0RWx0KHMtMixuZXcgUG9pbnQoKHIueCtsLngpLzIsbC55KSksaC5zZXRFbHQocysxLG5ldyBQb2ludCgoci54K2wueCkvMixyLnkpKSksaC5yZW1vdmVBdChzKSxoLnJlbW92ZUF0KHMtMSksZS5wb2ludHM9aCxlLmludmFsaWRhdGVBZG9ybm1lbnRzKCl9ZWxzZSBpZihsPWUuZ2V0UG9pbnQocysyKSx0aGlzLmlzV2l0aGluUmVzZWdtZW50aW5nRGlzdGFuY2UobyxyKSYmKHRoaXMuaXNJbkxpbmVPcnRobyhuLG8scixsLCEwKXx8dGhpcy5pc0luTGluZU9ydGhvKG4sbyxyLGwsITEpKSl7Y29uc3QgaD1lLnBvaW50cy5jb3B5KCk7dGhpcy5pc0luTGluZU9ydGhvKG4sbyxyLGwsITApPyhoLnNldEVsdChzLTEsbmV3IFBvaW50KG4ueCwobi55K2wueSkvMikpLGguc2V0RWx0KHMrMixuZXcgUG9pbnQobC54LChuLnkrbC55KS8yKSkpOihoLnNldEVsdChzLTEsbmV3IFBvaW50KChuLngrbC54KS8yLG4ueSkpLGguc2V0RWx0KHMrMixuZXcgUG9pbnQoKG4ueCtsLngpLzIsbC55KSkpLGgucmVtb3ZlQXQocysxKSxoLnJlbW92ZUF0KHMpLGUucG9pbnRzPWgsZS5pbnZhbGlkYXRlQWRvcm5tZW50cygpfX19ZWxzZXtjb25zdCBsPVBvaW50LmEoKTtpZihHZW8ueGwobi54LG4ueSxyLngsci55LG8ueCxvLnksbCkmJmwuZGlzdGFuY2VTcXVhcmVkUG9pbnQobyk8dGhpcy5yZXNlZ21lbnRpbmdEaXN0YW5jZSp0aGlzLnJlc2VnbWVudGluZ0Rpc3RhbmNlKXtjb25zdCBoPWUucG9pbnRzLmNvcHkoKTtoLnJlbW92ZUF0KHMpLGUucG9pbnRzPWgsZS5pbnZhbGlkYXRlQWRvcm5tZW50cygpfVBvaW50Lm8obCl9fXQuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy50cmFuc2FjdGlvblJlc3VsdD10aGlzLm5hbWUsdC5PKFwiTGlua1Jlc2hhcGVkXCIsdGhpcy5hZG9ybmVkTGluayx0aGlzLk1tKX10aGlzLnN0b3BUb29sKCl9aXNXaXRoaW5SZXNlZ21lbnRpbmdEaXN0YW5jZSh0LGkpe3JldHVybiBNYXRoLmFicyh0LngtaS54KTx0aGlzLnJlc2VnbWVudGluZ0Rpc3RhbmNlJiZNYXRoLmFicyh0LnktaS55KTx0aGlzLnJlc2VnbWVudGluZ0Rpc3RhbmNlfWlzSW5MaW5lT3J0aG8odCxpLGUscyxuKXtyZXR1cm4gbj9NYXRoLmFicyh0LnktaS55KTx0aGlzLnJlc2VnbWVudGluZ0Rpc3RhbmNlJiZNYXRoLmFicyhpLnktZS55KTx0aGlzLnJlc2VnbWVudGluZ0Rpc3RhbmNlJiZNYXRoLmFicyhlLnktcy55KTx0aGlzLnJlc2VnbWVudGluZ0Rpc3RhbmNlOk1hdGguYWJzKHQueC1pLngpPHRoaXMucmVzZWdtZW50aW5nRGlzdGFuY2UmJk1hdGguYWJzKGkueC1lLngpPHRoaXMucmVzZWdtZW50aW5nRGlzdGFuY2UmJk1hdGguYWJzKGUueC1zLngpPHRoaXMucmVzZWdtZW50aW5nRGlzdGFuY2V9Z2V0IHJlc2VnbWVudGluZ0Rpc3RhbmNlKCl7cmV0dXJuIHRoaXMuYU19c2V0IHJlc2VnbWVudGluZ0Rpc3RhbmNlKHQpe1UuaSh0LFwibnVtYmVyXCIsTGlua1Jlc2hhcGluZ1Rvb2wsXCJyZXNlZ21lbnRpbmdEaXN0YW5jZVwiKSx0aGlzLmFNPXR9cmVzaGFwZSh0KXtjb25zdCBpPXRoaXMuYWRvcm5lZExpbms7aWYoaT09PW51bGwpcmV0dXJuO2NvbnN0IGU9dGhpcy5oYW5kbGU7aWYoZT09PW51bGwpcmV0dXJuO2kuc3RhcnRSb3V0ZSgpO2xldCBzPWUuc2VnbWVudEluZGV4O2NvbnN0IG49dGhpcy5nZXRSZXNoYXBpbmdCZWhhdmlvcihlKTtpZihpLmlzT3J0aG9nb25hbClpZihzPT09aS5maXJzdFBpY2tJbmRleCsxKXtjb25zdCBvPWkuZmlyc3RQaWNrSW5kZXgrMTtuPT09Mj8oaS5zZXRQb2ludEF0KG8saS5nZXRQb2ludChvLTEpLngsdC55KSxpLnNldFBvaW50QXQobysxLGkuZ2V0UG9pbnQobysyKS54LHQueSkpOm49PT0xJiYoaS5zZXRQb2ludEF0KG8sdC54LGkuZ2V0UG9pbnQoby0xKS55KSxpLnNldFBvaW50QXQobysxLHQueCxpLmdldFBvaW50KG8rMikueSkpfWVsc2UgaWYocz09PWkubGFzdFBpY2tJbmRleC0xKXtjb25zdCBvPWkubGFzdFBpY2tJbmRleC0xO249PT0yPyhpLnNldFBvaW50QXQoby0xLGkuZ2V0UG9pbnQoby0yKS54LHQueSksaS5zZXRQb2ludEF0KG8saS5nZXRQb2ludChvKzEpLngsdC55KSk6bj09PTEmJihpLnNldFBvaW50QXQoby0xLHQueCxpLmdldFBvaW50KG8tMikueSksaS5zZXRQb2ludEF0KG8sdC54LGkuZ2V0UG9pbnQobysxKS55KSl9ZWxzZXtsZXQgbz1zO2NvbnN0IHI9aS5nZXRQb2ludChvKSxsPWkuZ2V0UG9pbnQoby0xKSxoPWkuZ2V0UG9pbnQobysxKTtHZW8uZyhsLngsci54KSYmR2VvLmcoci55LGgueSk/KEdlby5nKGwueCxpLmdldFBvaW50KG8tMikueCkmJiFHZW8uZyhsLnksaS5nZXRQb2ludChvLTIpLnkpPyhpLmluc2VydFBvaW50QXQobyx0LngsbC55KSxzKyssbysrKTppLnNldFBvaW50QXQoby0xLHQueCxsLnkpLEdlby5nKGgueSxpLmdldFBvaW50KG8rMikueSkmJiFHZW8uZyhoLngsaS5nZXRQb2ludChvKzIpLngpP2kuaW5zZXJ0UG9pbnRBdChvKzEsaC54LHQueSk6aS5zZXRQb2ludEF0KG8rMSxoLngsdC55KSk6R2VvLmcobC55LHIueSkmJkdlby5nKHIueCxoLngpPyhHZW8uZyhsLnksaS5nZXRQb2ludChvLTIpLnkpJiYhR2VvLmcobC54LGkuZ2V0UG9pbnQoby0yKS54KT8oaS5pbnNlcnRQb2ludEF0KG8sbC54LHQueSkscysrLG8rKyk6aS5zZXRQb2ludEF0KG8tMSxsLngsdC55KSxHZW8uZyhoLngsaS5nZXRQb2ludChvKzIpLngpJiYhR2VvLmcoaC55LGkuZ2V0UG9pbnQobysyKS55KT9pLmluc2VydFBvaW50QXQobysxLHQueCxoLnkpOmkuc2V0UG9pbnRBdChvKzEsdC54LGgueSkpOkdlby5nKGwueCxyLngpJiZHZW8uZyhyLngsaC54KT8oR2VvLmcobC54LGkuZ2V0UG9pbnQoby0yKS54KSYmIUdlby5nKGwueSxpLmdldFBvaW50KG8tMikueSk/KGkuaW5zZXJ0UG9pbnRBdChvLHQueCxsLnkpLHMrKyxvKyspOmkuc2V0UG9pbnRBdChvLTEsdC54LGwueSksR2VvLmcoaC54LGkuZ2V0UG9pbnQobysyKS54KSYmIUdlby5nKGgueSxpLmdldFBvaW50KG8rMikueSk/aS5pbnNlcnRQb2ludEF0KG8rMSx0LngsaC55KTppLnNldFBvaW50QXQobysxLHQueCxoLnkpKTpHZW8uZyhsLnksci55KSYmR2VvLmcoci55LGgueSkmJihHZW8uZyhsLnksaS5nZXRQb2ludChvLTIpLnkpJiYhR2VvLmcobC54LGkuZ2V0UG9pbnQoby0yKS54KT8oaS5pbnNlcnRQb2ludEF0KG8sbC54LHQueSkscysrLG8rKyk6aS5zZXRQb2ludEF0KG8tMSxsLngsdC55KSxHZW8uZyhoLnksaS5nZXRQb2ludChvKzIpLnkpJiYhR2VvLmcoaC54LGkuZ2V0UG9pbnQobysyKS54KT9pLmluc2VydFBvaW50QXQobysxLGgueCx0LnkpOmkuc2V0UG9pbnRBdChvKzEsaC54LHQueSkpLGkuc2V0UG9pbnRBdChzLHQueCx0LnkpfWVsc2V7aS5zZXRQb2ludEF0KHMsdC54LHQueSk7bGV0IG89aS5mcm9tTm9kZSxyPWkuZnJvbVBvcnQ7aWYobyE9PW51bGwpe2NvbnN0IGY9by5maW5kVmlzaWJsZU5vZGUoKTtmIT09bnVsbCYmZiE9PW8mJihvPWYscj1vLnBvcnQpfWlmKHM9PT0xJiZyIT09bnVsbCYmaS5jb21wdXRlU3BvdCghMCxyKS5pc05vU3BvdCgpKXtjb25zdCBmPXIuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcixQb2ludC5hKCkpLGE9aS5nZXRMaW5rUG9pbnRGcm9tUG9pbnQobyxyLGYsdCwhMCxQb2ludC5hKCkpO2kuc2V0UG9pbnRBdCgwLGEueCxhLnkpLFBvaW50Lm8oZiksUG9pbnQubyhhKX1sZXQgbD1pLnRvTm9kZSxoPWkudG9Qb3J0O2lmKGwhPT1udWxsKXtjb25zdCBmPWwuZmluZFZpc2libGVOb2RlKCk7ZiE9PW51bGwmJmYhPT1sJiYobD1mLGg9bC5wb3J0KX1pZihzPT09aS5wb2ludHNDb3VudC0yJiZoIT09bnVsbCYmaS5jb21wdXRlU3BvdCghMSxoKS5pc05vU3BvdCgpKXtjb25zdCBmPWguZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcixQb2ludC5hKCkpLGE9aS5nZXRMaW5rUG9pbnRGcm9tUG9pbnQobCxoLGYsdCwhMSxQb2ludC5hKCkpO2kuc2V0UG9pbnRBdChpLnBvaW50c0NvdW50LTEsYS54LGEueSksUG9pbnQubyhmKSxQb2ludC5vKGEpfX1pLmNvbW1pdFJvdXRlKCl9Y29tcHV0ZVJlc2hhcGUodCl7Y29uc3QgaT10aGlzLmFkb3JuZWRMaW5rO2lmKGk9PT1udWxsKXJldHVybiB0O2NvbnN0IGU9dGhpcy5oYW5kbGU7aWYoZT09PW51bGwpcmV0dXJuIHQ7Y29uc3Qgcz1lLnNlZ21lbnRJbmRleDtzd2l0Y2godGhpcy5nZXRSZXNoYXBpbmdCZWhhdmlvcihlKSl7Y2FzZSAzOnJldHVybiB0O2Nhc2UgMjp7Y29uc3Qgbj1pLmdldFBvaW50KHMpO3JldHVybiBuZXcgUG9pbnQobi54LHQueSl9Y2FzZSAxOntjb25zdCBuPWkuZ2V0UG9pbnQocyk7cmV0dXJuIG5ldyBQb2ludCh0Lngsbi55KX1kZWZhdWx0OmNhc2UgMDpyZXR1cm4gaS5nZXRQb2ludChzKX19Z2V0IG9yaWdpbmFsUG9pbnQoKXtyZXR1cm4gdGhpcy5mTX1nZXQgb3JpZ2luYWxQb2ludHMoKXtyZXR1cm4gdGhpcy5NbX19Y2xhc3MgUmVzaXppbmdUb29sIGV4dGVuZHMgVG9vbHtTcjtNcjtMbztOZjtnTTt5czticjtwcztQbTttTTtDZjtRdztfdzt0eDtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMubmFtZT1cIlJlc2l6aW5nXCIsdGhpcy5Tcj1uZXcgU2l6ZSgxLDEpLnAoKSx0aGlzLk1yPW5ldyBTaXplKDk5OTksOTk5OSkucCgpLHRoaXMuTG89bmV3IFNpemUoTmFOLE5hTikucCgpLHRoaXMuTmY9ITEsdGhpcy5nTT0hMCx0aGlzLnlzPW51bGwsdGhpcy5icj1uZXcgU2hhcGUoXCJSZWN0YW5nbGVcIix7YWxpZ25tZW50Rm9jdXM6U3BvdC5DZW50ZXIsZGVzaXJlZFNpemU6U2l6ZS5TQyxmaWxsOlwibGlnaHRibHVlXCIsc3Ryb2tlOlwiZG9kZ2VyYmx1ZVwiLHN0cm9rZVdpZHRoOjEsY3Vyc29yOlwicG9pbnRlclwifSkudGhlbWUoXCJmaWxsXCIsXCJhZG9ybm1lbnRGaWxsXCIpLnRoZW1lKFwic3Ryb2tlXCIsXCJhZG9ybm1lbnRTdHJva2VcIiksdGhpcy5wcz1udWxsLHRoaXMuUG09bmV3IFBvaW50LHRoaXMubU09bmV3IFNpemUsdGhpcy5DZj1uZXcgUG9pbnQsdGhpcy5Rdz1uZXcgU2l6ZSgwLDApLHRoaXMuX3c9bmV3IFNpemUoMS8wLDEvMCksdGhpcy50eD1uZXcgU2l6ZSgxLDEpLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX11cGRhdGVBZG9ybm1lbnRzKHQpe2lmKCEodD09PW51bGx8fHQgaW5zdGFuY2VvZiBMaW5rKSl7aWYodC5pc1NlbGVjdGVkJiYhdGhpcy5kaWFncmFtLmlzUmVhZE9ubHkpe2NvbnN0IGk9dC5yZXNpemVPYmplY3Q7bGV0IGU9dC5maW5kQWRvcm5tZW50KHRoaXMubmFtZSk7aWYoaSE9PW51bGwmJnQuY2FuUmVzaXplKCkmJnQuYWN0dWFsQm91bmRzLmlzUmVhbCgpJiZ0LmlzVmlzaWJsZSgpJiZpLmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmaS5pc1Zpc2libGVPYmplY3QoKSYmKChlPT09bnVsbHx8ZS5hZG9ybmVkT2JqZWN0IT09aSkmJihlPXRoaXMubWFrZUFkb3JubWVudChpKSksZSE9PW51bGwpKXtjb25zdCBzPWkuZ2V0RG9jdW1lbnRBbmdsZSgpO3QuRGwoKSYmdGhpcy51cGRhdGVSZXNpemVIYW5kbGVzKGUscyksdC5hZGRBZG9ybm1lbnQodGhpcy5uYW1lLGUpO3JldHVybn19dC5yZW1vdmVBZG9ybm1lbnQodGhpcy5uYW1lKX19bWFrZUFkb3JubWVudCh0KXtsZXQgaT1udWxsO2NvbnN0IGU9dC5wYXJ0Py5yZXNpemVBZG9ybm1lbnRUZW1wbGF0ZTtpZihlKXtpZihpPWUuY29weSgpLGk9PT1udWxsKXJldHVybiBudWxsfWVsc2V7aT1uZXcgQWRvcm5tZW50LGkudHlwZT1QYW5lbC5TcG90LGkubG9jYXRpb25TcG90PVNwb3QuQ2VudGVyO2NvbnN0IHM9bmV3IFBsYWNlaG9sZGVyO3MuaXNQYW5lbE1haW49ITAsaS5hZGQocyk7bGV0IG49dGhpcy5tYWtlSGFuZGxlKHQsU3BvdC5Ub3BMZWZ0KTtuIT09bnVsbCYmaS5hZGQobiksbj10aGlzLm1ha2VIYW5kbGUodCxTcG90LlRvcFJpZ2h0KSxuIT09bnVsbCYmaS5hZGQobiksbj10aGlzLm1ha2VIYW5kbGUodCxTcG90LkJvdHRvbVJpZ2h0KSxuIT09bnVsbCYmaS5hZGQobiksbj10aGlzLm1ha2VIYW5kbGUodCxTcG90LkJvdHRvbUxlZnQpLG4hPT1udWxsJiZpLmFkZChuKSxuPXRoaXMubWFrZUhhbmRsZSh0LFNwb3QuTWlkZGxlVG9wKSxuIT09bnVsbCYmaS5hZGQobiksbj10aGlzLm1ha2VIYW5kbGUodCxTcG90Lk1pZGRsZVJpZ2h0KSxuIT09bnVsbCYmaS5hZGQobiksbj10aGlzLm1ha2VIYW5kbGUodCxTcG90Lk1pZGRsZUJvdHRvbSksbiE9PW51bGwmJmkuYWRkKG4pLG49dGhpcy5tYWtlSGFuZGxlKHQsU3BvdC5NaWRkbGVMZWZ0KSxuIT09bnVsbCYmaS5hZGQobil9cmV0dXJuIGkuYWRvcm5lZE9iamVjdD10LGl9bWFrZUhhbmRsZSh0LGkpe2NvbnN0IGU9dGhpcy5oYW5kbGVBcmNoZXR5cGU7aWYoZT09PW51bGwpcmV0dXJuIG51bGw7Y29uc3Qgcz1lLmNvcHkoKS5kTSgpO3JldHVybiBzLmFsaWdubWVudD1pLHN9dXBkYXRlUmVzaXplSGFuZGxlcyh0LGkpe2lmKHQhPT1udWxsKXtpZighdC5hbGlnbm1lbnQuaXNEZWZhdWx0KCkmJih0LmN1cnNvcj09PVwicG9pbnRlclwifHx0LmN1cnNvci5pbmRleE9mKFwicmVzaXplXCIpPjApKXRoaXMuUkYodCxpKTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBQYW5lbCl7Y29uc3QgZT10LmVsZW1lbnRzO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBzPWUudmFsdWU7dGhpcy51cGRhdGVSZXNpemVIYW5kbGVzKHMsaSl9fX19UkYodCxpKXtsZXQgZT10LmFsaWdubWVudDtlLmlzTm9TcG90KCkmJihlPVNwb3QuQ2VudGVyKTtsZXQgcz1pO2lmKGUueDw9MCllLnk8PTA/cys9MjI1OmUueT49MT9zKz0xMzU6cys9MTgwO2Vsc2UgaWYoZS54Pj0xKWUueTw9MD9zKz0zMTU6ZS55Pj0xJiYocys9NDUpO2Vsc2UgaWYoZS55PD0wKXMrPTI3MDtlbHNlIGlmKGUueT49MSlzKz05MDtlbHNlIHJldHVybjtzPDA/cys9MzYwOnM+PTM2MCYmKHMtPTM2MCksczwyMi41P3QuY3Vyc29yPVwiZS1yZXNpemVcIjpzPDY3LjU/dC5jdXJzb3I9XCJzZS1yZXNpemVcIjpzPDExMi41P3QuY3Vyc29yPVwicy1yZXNpemVcIjpzPDE1Ny41P3QuY3Vyc29yPVwic3ctcmVzaXplXCI6czwyMDIuNT90LmN1cnNvcj1cInctcmVzaXplXCI6czwyNDcuNT90LmN1cnNvcj1cIm53LXJlc2l6ZVwiOnM8MjkyLjU/dC5jdXJzb3I9XCJuLXJlc2l6ZVwiOnM8MzM3LjU/dC5jdXJzb3I9XCJuZS1yZXNpemVcIjp0LmN1cnNvcj1cImUtcmVzaXplXCJ9Z2V0IGhhbmRsZUFyY2hldHlwZSgpe3JldHVybiB0aGlzLmJyfXNldCBoYW5kbGVBcmNoZXR5cGUodCl7dCE9PW51bGwmJlUuZSh0LEdyYXBoT2JqZWN0LFJlc2l6aW5nVG9vbCxcImhhbmRsZUFyY2hldHlwZVwiKSx0aGlzLmJyPXR9Z2V0IGhhbmRsZSgpe3JldHVybiB0aGlzLnBzfXNldCBoYW5kbGUodCl7dCE9PW51bGwmJihVLmUodCxHcmFwaE9iamVjdCxSZXNpemluZ1Rvb2wsXCJoYW5kbGVcIiksdC5wYXJ0IGluc3RhbmNlb2YgQWRvcm5tZW50fHxVLm4oXCJuZXcgaGFuZGxlIGlzIG5vdCBpbiBhbiBBZG9ybm1lbnQ6IFwiK3QpKSx0aGlzLnBzPXR9Z2V0IGFkb3JuZWRPYmplY3QoKXtyZXR1cm4gdGhpcy55c31zZXQgYWRvcm5lZE9iamVjdCh0KXt0IT09bnVsbCYmKFUuZSh0LEdyYXBoT2JqZWN0LFJlc2l6aW5nVG9vbCxcImhhbmRsZVwiKSx0LnBhcnQgaW5zdGFuY2VvZiBBZG9ybm1lbnQmJlUubihcIm5ldyBoYW5kbGUgbXVzdCBub3QgYmUgaW4gYW4gQWRvcm5tZW50OiBcIit0KSksdGhpcy55cz10fWNhblN0YXJ0KCl7aWYoIXRoaXMuaXNFbmFibGVkKXJldHVybiExO2NvbnN0IHQ9dGhpcy5kaWFncmFtO3JldHVybiB0LmlzUmVhZE9ubHl8fCF0LmFsbG93UmVzaXplfHwhdC5sYXN0SW5wdXQubGVmdD8hMTp0aGlzLmZpbmRUb29sSGFuZGxlQXQodC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsdGhpcy5uYW1lKSE9PW51bGx9ZG9BY3RpdmF0ZSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3RoaXMuaGFuZGxlPT09bnVsbCYmKHRoaXMuaGFuZGxlPXRoaXMuZmluZFRvb2xIYW5kbGVBdCh0LmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCx0aGlzLm5hbWUpKSx0aGlzLmhhbmRsZSE9PW51bGwmJih0aGlzLmFkb3JuZWRPYmplY3Q9dGhpcy5oYW5kbGUucGFydC5hZG9ybmVkT2JqZWN0LHRoaXMuYWRvcm5lZE9iamVjdCE9PW51bGwmJnRoaXMuYWRvcm5lZE9iamVjdC5wYXJ0IT09bnVsbCYmKHQuaXNNb3VzZUNhcHR1cmVkPSEwLHQuYW5pbWF0aW9uTWFuYWdlci5zdG9wQW5pbWF0aW9uKCksdC5rdT0hMCx0aGlzLnN0YXJ0VHJhbnNhY3Rpb24odGhpcy5uYW1lKSx0aGlzLlBtLnNldCh0aGlzLmFkb3JuZWRPYmplY3QuZ2V0RG9jdW1lbnRQb2ludCh0aGlzLmhhbmRsZS5hbGlnbm1lbnQub3Bwb3NpdGUoKSkpLHRoaXMuQ2Yuc2V0KHRoaXMuYWRvcm5lZE9iamVjdC5wYXJ0LmxvY2F0aW9uKSx0aGlzLm1NLnNldCh0aGlzLmFkb3JuZWRPYmplY3QuZGVzaXJlZFNpemUpLHRoaXMudHg9dGhpcy5jb21wdXRlQ2VsbFNpemUoKSx0aGlzLlF3PXRoaXMuY29tcHV0ZU1pblNpemUoKSx0aGlzLl93PXRoaXMuY29tcHV0ZU1heFNpemUoKSx0aGlzLmlzQWN0aXZlPSEwKSl9ZG9EZWFjdGl2YXRlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dC5rdT0hMSx0Lk5sPSEwLHRoaXMuc3RvcFRyYW5zYWN0aW9uKCksdGhpcy5oYW5kbGU9bnVsbCx0aGlzLnlzPW51bGwsdC5pc01vdXNlQ2FwdHVyZWQ9ITEsdGhpcy5pc0FjdGl2ZT0hMX1zdG9wVHJhbnNhY3Rpb24oKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXN1cGVyLnN0b3BUcmFuc2FjdGlvbigpO3JldHVybiBpJiZ0LnVuZG9NYW5hZ2VyLnRyYW5zYWN0aW9uVG9VbmRvIT09bnVsbCYmdC51bmRvTWFuYWdlci50cmFuc2FjdGlvblRvVW5kby5vcHRpbWl6ZSgpLGl9ZG9DYW5jZWwoKXt0aGlzLmFkb3JuZWRPYmplY3QhPT1udWxsJiZ0aGlzLmFkb3JuZWRPYmplY3QucGFydCE9PW51bGwmJih0aGlzLmFkb3JuZWRPYmplY3QuZGVzaXJlZFNpemU9dGhpcy5vcmlnaW5hbERlc2lyZWRTaXplLHRoaXMuYWRvcm5lZE9iamVjdC5wYXJ0LmxvY2F0aW9uPXRoaXMub3JpZ2luYWxMb2NhdGlvbiksdGhpcy5zdG9wVG9vbCgpfWRvTW91c2VNb3ZlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYoIXRoaXMuaXNBY3RpdmV8fHRoaXMuYWRvcm5lZE9iamVjdD09PW51bGx8fHRoaXMuaGFuZGxlPT09bnVsbClyZXR1cm47Y29uc3QgaT10aGlzLlF3LGU9dGhpcy5fdyxzPXRoaXMudHgsbj10Lmxhc3RJbnB1dC5kb2N1bWVudFBvaW50LG89dGhpcy5hZG9ybmVkT2JqZWN0LmdldExvY2FsUG9pbnQobixQb2ludC5hKCkpLHI9dGhpcy5jb21wdXRlUmVzaGFwZSgpLGw9dGhpcy5jb21wdXRlUmVzaXplKG8sdGhpcy5oYW5kbGUuYWxpZ25tZW50LGksZSxzLHIpO3RoaXMucmVzaXplKGwpLHQubWF5YmVVcGRhdGUoKSxQb2ludC5vKG8pfWRvTW91c2VVcCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMuaXNBY3RpdmUmJnRoaXMuYWRvcm5lZE9iamVjdCE9PW51bGwmJnRoaXMuaGFuZGxlIT09bnVsbCl7Y29uc3QgaT10aGlzLlF3LGU9dGhpcy5fdyxzPXRoaXMudHgsbj10aGlzLmFkb3JuZWRPYmplY3QuZ2V0TG9jYWxQb2ludCh0Lmxhc3RJbnB1dC5kb2N1bWVudFBvaW50LFBvaW50LmEoKSksbz10aGlzLmNvbXB1dGVSZXNoYXBlKCkscj10aGlzLmNvbXB1dGVSZXNpemUobix0aGlzLmhhbmRsZS5hbGlnbm1lbnQsaSxlLHMsbyk7dGhpcy5yZXNpemUociksUG9pbnQubyhuKSx0LmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLHRoaXMudHJhbnNhY3Rpb25SZXN1bHQ9dGhpcy5uYW1lLHQuTyhcIlBhcnRSZXNpemVkXCIsdGhpcy5hZG9ybmVkT2JqZWN0LHRoaXMub3JpZ2luYWxEZXNpcmVkU2l6ZSl9dGhpcy5zdG9wVG9vbCgpfXJlc2l6ZSh0KXtjb25zdCBpPXRoaXMuZGlhZ3JhbSxlPXRoaXMuYWRvcm5lZE9iamVjdDtpZihlPT09bnVsbClyZXR1cm47ZS5kZXNpcmVkU2l6ZT10LnNpemU7Y29uc3Qgcz1lLnBhcnQ7aWYocz09PW51bGx8fHRoaXMuaGFuZGxlPT09bnVsbClyZXR1cm47cy5lbnN1cmVCb3VuZHMoKTtjb25zdCBuPWUuZ2V0RG9jdW1lbnRQb2ludCh0aGlzLmhhbmRsZS5hbGlnbm1lbnQub3Bwb3NpdGUoKSk7aWYocyBpbnN0YW5jZW9mIEdyb3VwKXtjb25zdCBvPW5ldyBMaXN0O28uYWRkKHMpO2xldCByOyF0aGlzLmRyYWdzTWVtYmVycyYmIXMuaGFzUGxhY2Vob2xkZXIoKSYmKHI9bmV3IERyYWdnaW5nT3B0aW9ucyxyLmRyYWdzTWVtYmVycz0hMSksaS5tb3ZlUGFydHMobyx0aGlzLm9wcG9zaXRlUG9pbnQuY29weSgpLnN1YnRyYWN0KG4pLCEwLHIpfWVsc2Ugcy5sb2NhdGlvbj1zLmxvY2F0aW9uLmNvcHkoKS5zdWJ0cmFjdChuKS5hZGQodGhpcy5vcHBvc2l0ZVBvaW50KTtpLm1heWJlVXBkYXRlKCl9Y29tcHV0ZVJlc2l6ZSh0LGksZSxzLG4sbyl7aWYodGhpcy5hZG9ybmVkT2JqZWN0PT09bnVsbClyZXR1cm4gUmVjdC56ZztpLmlzTm9TcG90KCkmJihpPVNwb3QuQ2VudGVyKTtjb25zdCByPXRoaXMuYWRvcm5lZE9iamVjdC5uYXR1cmFsQm91bmRzLGw9ci54LGg9ci55LGY9ci54K3Iud2lkdGgsYT1yLnkrci5oZWlnaHQ7bGV0IGM9MTtpZighbyl7bGV0IG09ci53aWR0aCxnPXIuaGVpZ2h0O208PTAmJihtPTEpLGc8PTAmJihnPTEpLGM9Zy9tfWNvbnN0IHU9UG9pbnQuYSgpO0dlby5WZyh0LngsdC55LGwsaCxuLndpZHRoLG4uaGVpZ2h0LHUpO2NvbnN0IGQ9ci5jb3B5KCk7cmV0dXJuIGkueDw9MD9pLnk8PTA/KGQueD1NYXRoLm1heCh1LngsZi1zLndpZHRoKSxkLng9TWF0aC5taW4oZC54LGYtZS53aWR0aCksZC53aWR0aD1NYXRoLm1heChmLWQueCxlLndpZHRoKSxkLnk9TWF0aC5tYXgodS55LGEtcy5oZWlnaHQpLGQueT1NYXRoLm1pbihkLnksYS1lLmhlaWdodCksZC5oZWlnaHQ9TWF0aC5tYXgoYS1kLnksZS5oZWlnaHQpLG98fChkLmhlaWdodC9kLndpZHRoPj0xPyhkLmhlaWdodD1NYXRoLm1heChNYXRoLm1pbihjKmQud2lkdGgscy5oZWlnaHQpLGUuaGVpZ2h0KSxkLndpZHRoPWQuaGVpZ2h0L2MpOihkLndpZHRoPU1hdGgubWF4KE1hdGgubWluKGQuaGVpZ2h0L2Mscy53aWR0aCksZS53aWR0aCksZC5oZWlnaHQ9YypkLndpZHRoKSxkLng9Zi1kLndpZHRoLGQueT1hLWQuaGVpZ2h0KSk6aS55Pj0xPyhkLng9TWF0aC5tYXgodS54LGYtcy53aWR0aCksZC54PU1hdGgubWluKGQueCxmLWUud2lkdGgpLGQud2lkdGg9TWF0aC5tYXgoZi1kLngsZS53aWR0aCksZC5oZWlnaHQ9TWF0aC5tYXgoTWF0aC5taW4odS55LWgscy5oZWlnaHQpLGUuaGVpZ2h0KSxvfHwoZC5oZWlnaHQvZC53aWR0aD49MT8oZC5oZWlnaHQ9TWF0aC5tYXgoTWF0aC5taW4oYypkLndpZHRoLHMuaGVpZ2h0KSxlLmhlaWdodCksZC53aWR0aD1kLmhlaWdodC9jKTooZC53aWR0aD1NYXRoLm1heChNYXRoLm1pbihkLmhlaWdodC9jLHMud2lkdGgpLGUud2lkdGgpLGQuaGVpZ2h0PWMqZC53aWR0aCksZC54PWYtZC53aWR0aCkpOihkLng9TWF0aC5tYXgodS54LGYtcy53aWR0aCksZC54PU1hdGgubWluKGQueCxmLWUud2lkdGgpLGQud2lkdGg9Zi1kLngsb3x8KGQuaGVpZ2h0PU1hdGgubWF4KE1hdGgubWluKGMqZC53aWR0aCxzLmhlaWdodCksZS5oZWlnaHQpLGQud2lkdGg9ZC5oZWlnaHQvYyxkLnk9aCsuNSooYS1oLWQuaGVpZ2h0KSkpOmkueD49MT9pLnk8PTA/KGQud2lkdGg9TWF0aC5tYXgoTWF0aC5taW4odS54LWwscy53aWR0aCksZS53aWR0aCksZC55PU1hdGgubWF4KHUueSxhLXMuaGVpZ2h0KSxkLnk9TWF0aC5taW4oZC55LGEtZS5oZWlnaHQpLGQuaGVpZ2h0PU1hdGgubWF4KGEtZC55LGUuaGVpZ2h0KSxvfHwoZC5oZWlnaHQvZC53aWR0aD49MT8oZC5oZWlnaHQ9TWF0aC5tYXgoTWF0aC5taW4oYypkLndpZHRoLHMuaGVpZ2h0KSxlLmhlaWdodCksZC53aWR0aD1kLmhlaWdodC9jKTooZC53aWR0aD1NYXRoLm1heChNYXRoLm1pbihkLmhlaWdodC9jLHMud2lkdGgpLGUud2lkdGgpLGQuaGVpZ2h0PWMqZC53aWR0aCksZC55PWEtZC5oZWlnaHQpKTppLnk+PTE/KGQud2lkdGg9TWF0aC5tYXgoTWF0aC5taW4odS54LWwscy53aWR0aCksZS53aWR0aCksZC5oZWlnaHQ9TWF0aC5tYXgoTWF0aC5taW4odS55LWgscy5oZWlnaHQpLGUuaGVpZ2h0KSxvfHwoZC5oZWlnaHQvZC53aWR0aD49MT8oZC5oZWlnaHQ9TWF0aC5tYXgoTWF0aC5taW4oYypkLndpZHRoLHMuaGVpZ2h0KSxlLmhlaWdodCksZC53aWR0aD1kLmhlaWdodC9jKTooZC53aWR0aD1NYXRoLm1heChNYXRoLm1pbihkLmhlaWdodC9jLHMud2lkdGgpLGUud2lkdGgpLGQuaGVpZ2h0PWMqZC53aWR0aCkpKTooZC53aWR0aD1NYXRoLm1heChNYXRoLm1pbih1LngtbCxzLndpZHRoKSxlLndpZHRoKSxvfHwoZC5oZWlnaHQ9TWF0aC5tYXgoTWF0aC5taW4oYypkLndpZHRoLHMuaGVpZ2h0KSxlLmhlaWdodCksZC53aWR0aD1kLmhlaWdodC9jLGQueT1oKy41KihhLWgtZC5oZWlnaHQpKSk6aS55PD0wPyhkLnk9TWF0aC5tYXgodS55LGEtcy5oZWlnaHQpLGQueT1NYXRoLm1pbihkLnksYS1lLmhlaWdodCksZC5oZWlnaHQ9YS1kLnksb3x8KGQud2lkdGg9TWF0aC5tYXgoTWF0aC5taW4oZC5oZWlnaHQvYyxzLndpZHRoKSxlLndpZHRoKSxkLmhlaWdodD1jKmQud2lkdGgsZC54PWwrLjUqKGYtbC1kLndpZHRoKSkpOmkueT49MSYmKGQuaGVpZ2h0PU1hdGgubWF4KE1hdGgubWluKHUueS1oLHMuaGVpZ2h0KSxlLmhlaWdodCksb3x8KGQud2lkdGg9TWF0aC5tYXgoTWF0aC5taW4oZC5oZWlnaHQvYyxzLndpZHRoKSxlLndpZHRoKSxkLmhlaWdodD1jKmQud2lkdGgsZC54PWwrLjUqKGYtbC1kLndpZHRoKSkpLFBvaW50Lm8odSksZH1jb21wdXRlUmVzaGFwZSgpe2xldCB0PTA7cmV0dXJuIHRoaXMuYWRvcm5lZE9iamVjdCBpbnN0YW5jZW9mIFNoYXBlJiYodD10aGlzLmFkb3JuZWRPYmplY3QucE0oKSksISh0PT09Nnx8dGhpcy5kaWFncmFtLmxhc3RJbnB1dC5zaGlmdCl9Y29tcHV0ZU1pblNpemUoKXtpZih0aGlzLmFkb3JuZWRPYmplY3Q9PT1udWxsKXJldHVybiBTaXplLkdoO2NvbnN0IHQ9dGhpcy5hZG9ybmVkT2JqZWN0Lm1pblNpemUuY29weSgpLGk9dGhpcy5taW5TaXplO3JldHVybiFpc05hTihpLndpZHRoKSYmaS53aWR0aD50LndpZHRoJiYodC53aWR0aD1pLndpZHRoKSwhaXNOYU4oaS5oZWlnaHQpJiZpLmhlaWdodD50LmhlaWdodCYmKHQuaGVpZ2h0PWkuaGVpZ2h0KSx0fWNvbXB1dGVNYXhTaXplKCl7aWYodGhpcy5hZG9ybmVkT2JqZWN0PT09bnVsbClyZXR1cm4gU2l6ZS5Ndztjb25zdCB0PXRoaXMuYWRvcm5lZE9iamVjdC5tYXhTaXplLmNvcHkoKSxpPXRoaXMubWF4U2l6ZTtyZXR1cm4haXNOYU4oaS53aWR0aCkmJmkud2lkdGg8dC53aWR0aCYmKHQud2lkdGg9aS53aWR0aCksIWlzTmFOKGkuaGVpZ2h0KSYmaS5oZWlnaHQ8dC5oZWlnaHQmJih0LmhlaWdodD1pLmhlaWdodCksdH1jb21wdXRlQ2VsbFNpemUoKXtjb25zdCB0PW5ldyBTaXplKE5hTixOYU4pLGk9dGhpcy5hZG9ybmVkT2JqZWN0Py5wYXJ0O2lmKGkpe2NvbnN0IG49aS5yZXNpemVDZWxsU2l6ZTshaXNOYU4obi53aWR0aCkmJm4ud2lkdGg+MCYmKHQud2lkdGg9bi53aWR0aCksIWlzTmFOKG4uaGVpZ2h0KSYmbi5oZWlnaHQ+MCYmKHQuaGVpZ2h0PW4uaGVpZ2h0KX1sZXQgZT10aGlzLmNlbGxTaXplO2lzTmFOKHQud2lkdGgpJiYhaXNOYU4oZS53aWR0aCkmJmUud2lkdGg+MCYmKHQud2lkdGg9ZS53aWR0aCksaXNOYU4odC5oZWlnaHQpJiYhaXNOYU4oZS5oZWlnaHQpJiZlLmhlaWdodD4wJiYodC5oZWlnaHQ9ZS5oZWlnaHQpO2NvbnN0IHM9dGhpcy5kaWFncmFtO2lmKChpc05hTih0LndpZHRoKXx8aXNOYU4odC5oZWlnaHQpKSYmcyl7Y29uc3Qgbj1zLmdyaWQ7biE9PW51bGwmJm4udmlzaWJsZSYmdGhpcy5pc0dyaWRTbmFwRW5hYmxlZCYmKGU9bi5ncmlkQ2VsbFNpemUsaXNOYU4odC53aWR0aCkmJiFpc05hTihlLndpZHRoKSYmZS53aWR0aD4wJiYodC53aWR0aD1lLndpZHRoKSxpc05hTih0LmhlaWdodCkmJiFpc05hTihlLmhlaWdodCkmJmUuaGVpZ2h0PjAmJih0LmhlaWdodD1lLmhlaWdodCkpfXJldHVybihpc05hTih0LndpZHRoKXx8dC53aWR0aD09PTB8fHQud2lkdGg9PT0xLzApJiYodC53aWR0aD0xKSwoaXNOYU4odC5oZWlnaHQpfHx0LmhlaWdodD09PTB8fHQuaGVpZ2h0PT09MS8wKSYmKHQuaGVpZ2h0PTEpLHR9Z2V0IG1pblNpemUoKXtyZXR1cm4gdGhpcy5Tcn1zZXQgbWluU2l6ZSh0KXtpZihVLmUodCxTaXplLFJlc2l6aW5nVG9vbCxcIm1pblNpemVcIiksIXRoaXMuU3IuZXF1YWxzKHQpKXtsZXQgZT10LndpZHRoO2lzTmFOKGUpJiYoZT0wKTtsZXQgcz10LmhlaWdodDtpc05hTihzKSYmKHM9MCksdGhpcy5Tci5zKGUscyl9fWdldCBtYXhTaXplKCl7cmV0dXJuIHRoaXMuTXJ9c2V0IG1heFNpemUodCl7aWYoVS5lKHQsU2l6ZSxSZXNpemluZ1Rvb2wsXCJtYXhTaXplXCIpLCF0aGlzLk1yLmVxdWFscyh0KSl7bGV0IGU9dC53aWR0aDtpc05hTihlKSYmKGU9MS8wKTtsZXQgcz10LmhlaWdodDtpc05hTihzKSYmKHM9MS8wKSx0aGlzLk1yLnMoZSxzKX19Z2V0IGNlbGxTaXplKCl7cmV0dXJuIHRoaXMuTG99c2V0IGNlbGxTaXplKHQpe1UuZSh0LFNpemUsUmVzaXppbmdUb29sLFwiY2VsbFNpemVcIiksdGhpcy5Mby5lcXVhbHModCl8fHRoaXMuTG8uYyh0KX1nZXQgaXNHcmlkU25hcEVuYWJsZWQoKXtyZXR1cm4gdGhpcy5OZn1zZXQgaXNHcmlkU25hcEVuYWJsZWQodCl7VS5pKHQsXCJib29sZWFuXCIsUmVzaXppbmdUb29sLFwiaXNHcmlkU25hcEVuYWJsZWRcIiksdGhpcy5OZj10fWdldCBkcmFnc01lbWJlcnMoKXtyZXR1cm4gdGhpcy5nTX1zZXQgZHJhZ3NNZW1iZXJzKHQpe1UuaSh0LFwiYm9vbGVhblwiLFJlc2l6aW5nVG9vbCxcImRyYWdzTWVtYmVyc1wiKSx0aGlzLmdNPXR9Z2V0IG9wcG9zaXRlUG9pbnQoKXtyZXR1cm4gdGhpcy5QbX1zZXQgb3Bwb3NpdGVQb2ludCh0KXtVLmUodCxQb2ludCxSZXNpemluZ1Rvb2wsXCJvcHBvc2l0ZVBvaW50XCIpLHRoaXMuUG0uZXF1YWxzKHQpfHx0aGlzLlBtLmModCl9Z2V0IG9yaWdpbmFsRGVzaXJlZFNpemUoKXtyZXR1cm4gdGhpcy5tTX1nZXQgb3JpZ2luYWxMb2NhdGlvbigpe3JldHVybiB0aGlzLkNmfX1jbGFzcyBSb3RhdGluZ1Rvb2wgZXh0ZW5kcyBUb29se3lNO3dNO3lzPW51bGw7YnI9bnVsbDtpeD1udWxsO3BzPW51bGw7eE07Tm07Q2Y7Yk07a007Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJSb3RhdGluZ1wiLHRoaXMueU09NDUsdGhpcy53TT0yLHRoaXMuQ2Y9bmV3IFBvaW50LHRoaXMueXM9bnVsbCx0aGlzLmhhbmRsZUFyY2hldHlwZT1uZXcgU2hhcGUoXCJFbGxpcHNlXCIse2Rlc2lyZWRTaXplOlNpemUuZnUsZmlsbDpcImxpZ2h0Ymx1ZVwiLHN0cm9rZTpcImRvZGdlcmJsdWVcIixzdHJva2VXaWR0aDoxLGN1cnNvcjpcInBvaW50ZXJcIn0pLnRoZW1lKFwiZmlsbFwiLFwiYWRvcm5tZW50RmlsbFwiKS50aGVtZShcInN0cm9rZVwiLFwiYWRvcm5tZW50U3Ryb2tlXCIpLHRoaXMucHM9bnVsbCx0aGlzLnhNPTAsdGhpcy5ObT1uZXcgUG9pbnQoTmFOLE5hTiksdGhpcy5iTT0wLHRoaXMua009NTAsdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfXVwZGF0ZUFkb3JubWVudHModCl7aWYodCE9PW51bGwpe2lmKHQuRmwoKSl7Y29uc3QgaT10LnJvdGF0ZU9iamVjdDtpZihpPT09dHx8aT09PXQucGF0aHx8aS5pc1BhbmVsTWFpbilyZXR1cm59aWYodC5pc1NlbGVjdGVkJiYhdGhpcy5kaWFncmFtLmlzUmVhZE9ubHkpe2NvbnN0IGk9dC5yb3RhdGVPYmplY3Q7aWYoaSE9PW51bGwmJnQuY2FuUm90YXRlKCkmJnQuYWN0dWFsQm91bmRzLmlzUmVhbCgpJiZ0LmlzVmlzaWJsZSgpJiZpLmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmaS5pc1Zpc2libGVPYmplY3QoKSl7bGV0IGU9dC5maW5kQWRvcm5tZW50KHRoaXMubmFtZSk7aWYoKGU9PT1udWxsfHxlLmFkb3JuZWRPYmplY3QhPT1pKSYmKGU9dGhpcy5tYWtlQWRvcm5tZW50KGkpKSxlIT09bnVsbCl7ZS5hbmdsZT1pLmdldERvY3VtZW50QW5nbGUoKSxlLmhhc1BsYWNlaG9sZGVyKCl8fChlLmxvY2F0aW9uPXRoaXMuY29tcHV0ZUFkb3JubWVudExvY2F0aW9uKGkpKSx0LmFkZEFkb3JubWVudCh0aGlzLm5hbWUsZSk7cmV0dXJufX19dC5yZW1vdmVBZG9ybm1lbnQodGhpcy5uYW1lKX19bWFrZUFkb3JubWVudCh0KXtsZXQgaT1udWxsO2NvbnN0IGU9dC5wYXJ0Py5yb3RhdGVBZG9ybm1lbnRUZW1wbGF0ZTtyZXR1cm4gZT9pPWUuY29weSgpOnRoaXMuaXghPT1udWxsJiYoaT10aGlzLml4LmNvcHkoKSksaT09PW51bGw/bnVsbDooaS5hZG9ybmVkT2JqZWN0PXQsaSl9Z2V0IGhhbmRsZUFyY2hldHlwZSgpe3JldHVybiB0aGlzLmJyfXNldCBoYW5kbGVBcmNoZXR5cGUodCl7dCE9PW51bGwmJlUuZSh0LEdyYXBoT2JqZWN0LFJvdGF0aW5nVG9vbCxcImhhbmRsZUFyY2hldHlwZVwiKSx0aGlzLmJyPXQsdCE9PW51bGw/dGhpcy5peD1uZXcgQWRvcm5tZW50KFBhbmVsLlBvc2l0aW9uLHtsb2NhdGlvblNwb3Q6U3BvdC5DZW50ZXJ9KS5hZGQodCkuS3QoKTp0aGlzLml4PW51bGx9Z2V0IGhhbmRsZSgpe3JldHVybiB0aGlzLnBzfXNldCBoYW5kbGUodCl7dCE9PW51bGwmJihVLmUodCxHcmFwaE9iamVjdCxSb3RhdGluZ1Rvb2wsXCJoYW5kbGVcIiksdC5wYXJ0IGluc3RhbmNlb2YgQWRvcm5tZW50fHxVLm4oXCJuZXcgaGFuZGxlIGlzIG5vdCBpbiBhbiBBZG9ybm1lbnQ6IFwiK3QpKSx0aGlzLnBzPXR9Z2V0IGFkb3JuZWRPYmplY3QoKXtyZXR1cm4gdGhpcy55c31zZXQgYWRvcm5lZE9iamVjdCh0KXt0IT09bnVsbCYmKFUuZSh0LEdyYXBoT2JqZWN0LFJvdGF0aW5nVG9vbCxcImhhbmRsZVwiKSx0LnBhcnQgaW5zdGFuY2VvZiBBZG9ybm1lbnQmJlUubihcIm5ldyBoYW5kbGUgbXVzdCBub3QgYmUgaW4gYW4gQWRvcm5tZW50OiBcIit0KSksdGhpcy55cz10fWNhblN0YXJ0KCl7aWYoIXRoaXMuaXNFbmFibGVkKXJldHVybiExO2NvbnN0IHQ9dGhpcy5kaWFncmFtO3JldHVybiB0LmlzUmVhZE9ubHl8fCF0LmFsbG93Um90YXRlfHwhdC5sYXN0SW5wdXQubGVmdD8hMTp0aGlzLmZpbmRUb29sSGFuZGxlQXQodC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsdGhpcy5uYW1lKSE9PW51bGx9ZG9BY3RpdmF0ZSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMuYWRvcm5lZE9iamVjdD09PW51bGwpe2lmKHRoaXMuaGFuZGxlPT09bnVsbCYmKHRoaXMuaGFuZGxlPXRoaXMuZmluZFRvb2xIYW5kbGVBdCh0LmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCx0aGlzLm5hbWUpKSx0aGlzLmhhbmRsZT09PW51bGwpcmV0dXJuO3RoaXMuYWRvcm5lZE9iamVjdD10aGlzLmhhbmRsZS5wYXJ0LmFkb3JuZWRPYmplY3R9dGhpcy5hZG9ybmVkT2JqZWN0PT09bnVsbHx8dGhpcy5hZG9ybmVkT2JqZWN0LnBhcnQ9PT1udWxsfHwodC5pc01vdXNlQ2FwdHVyZWQ9ITAsdC5kZWxheXNMYXlvdXQ9ITAsdGhpcy5zdGFydFRyYW5zYWN0aW9uKHRoaXMubmFtZSksdGhpcy54TT10aGlzLmFkb3JuZWRPYmplY3QuYW5nbGUsdGhpcy5ObT10aGlzLmNvbXB1dGVSb3RhdGlvblBvaW50KHRoaXMuYWRvcm5lZE9iamVjdCksdGhpcy5DZj10aGlzLmFkb3JuZWRPYmplY3QucGFydC5sb2NhdGlvbi5jb3B5KCksdGhpcy5pc0FjdGl2ZT0hMCl9Y29tcHV0ZVJvdGF0aW9uUG9pbnQodCl7Y29uc3QgaT10LnBhcnQ7aWYoaSE9PW51bGwpe2NvbnN0IGU9aS5sb2NhdGlvbk9iamVjdDtpZihpLnJvdGF0aW9uU3BvdC5pc1Nwb3QoKSlyZXR1cm4gdC5nZXREb2N1bWVudFBvaW50KGkucm90YXRpb25TcG90KTtpZih0PT09aXx8dD09PWUpcmV0dXJuIGUuZ2V0RG9jdW1lbnRQb2ludChpLmxvY2F0aW9uU3BvdCl9cmV0dXJuIHQuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcil9Y29tcHV0ZUFkb3JubWVudExvY2F0aW9uKHQpe2xldCBpPXRoaXMucm90YXRpb25Qb2ludDtpLmlzUmVhbCgpfHwoaT10aGlzLmNvbXB1dGVSb3RhdGlvblBvaW50KHQpKTtjb25zdCBlPXQuZ2V0TG9jYWxQb2ludChpKTtsZXQgcz10aGlzLmhhbmRsZUFuZ2xlO3M8MD9zKz0zNjA6cz49MzYwJiYocy09MzYwKSxzPU1hdGgucm91bmQoTWF0aC5yb3VuZChzLzQ1KSo0NSk7Y29uc3Qgbj10aGlzLmhhbmRsZURpc3RhbmNlO3JldHVybiBzPT09MD9lLng9dC5uYXR1cmFsQm91bmRzLndpZHRoK246cz09PTQ1PyhlLng9dC5uYXR1cmFsQm91bmRzLndpZHRoK24sZS55PXQubmF0dXJhbEJvdW5kcy5oZWlnaHQrbik6cz09PTkwP2UueT10Lm5hdHVyYWxCb3VuZHMuaGVpZ2h0K246cz09PTEzNT8oZS54PS1uLGUueT10Lm5hdHVyYWxCb3VuZHMuaGVpZ2h0K24pOnM9PT0xODA/ZS54PS1uOnM9PT0yMjU/KGUueD0tbixlLnk9LW4pOnM9PT0yNzA/ZS55PS1uOnM9PT0zMTUmJihlLng9dC5uYXR1cmFsQm91bmRzLndpZHRoK24sZS55PS1uKSx0LmdldERvY3VtZW50UG9pbnQoZSl9ZG9EZWFjdGl2YXRlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dGhpcy5zdG9wVHJhbnNhY3Rpb24oKSx0aGlzLmhhbmRsZT1udWxsLHRoaXMueXM9bnVsbCx0aGlzLk5tPW5ldyBQb2ludChOYU4sTmFOKSx0LmlzTW91c2VDYXB0dXJlZD0hMSx0aGlzLmlzQWN0aXZlPSExfXN0b3BUcmFuc2FjdGlvbigpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9c3VwZXIuc3RvcFRyYW5zYWN0aW9uKCk7cmV0dXJuIGkmJnQudW5kb01hbmFnZXIudHJhbnNhY3Rpb25Ub1VuZG8hPT1udWxsJiZ0LnVuZG9NYW5hZ2VyLnRyYW5zYWN0aW9uVG9VbmRvLm9wdGltaXplKCksaX1kb0NhbmNlbCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QuZGVsYXlzTGF5b3V0PSExLHRoaXMucm90YXRlKHRoaXMub3JpZ2luYWxBbmdsZSksdGhpcy5zdG9wVG9vbCgpfWRvTW91c2VNb3ZlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodGhpcy5pc0FjdGl2ZSl7Y29uc3QgaT10aGlzLmNvbXB1dGVSb3RhdGUodC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCk7dGhpcy5yb3RhdGUoaSl9fWRvTW91c2VVcCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMuaXNBY3RpdmUpe3QuZGVsYXlzTGF5b3V0PSExO2NvbnN0IGk9dGhpcy5jb21wdXRlUm90YXRlKHQubGFzdElucHV0LmRvY3VtZW50UG9pbnQpO3RoaXMucm90YXRlKGkpLHQuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy50cmFuc2FjdGlvblJlc3VsdD10aGlzLm5hbWUsdC5PKFwiUGFydFJvdGF0ZWRcIix0aGlzLmFkb3JuZWRPYmplY3QsdGhpcy5vcmlnaW5hbEFuZ2xlKX10aGlzLnN0b3BUb29sKCl9cm90YXRlKHQpe0RlYnVnJiZVLnIodCxSb3RhdGluZ1Rvb2wsXCJyb3RhdGU6bmV3YW5nbGVcIik7Y29uc3QgaT10aGlzLmFkb3JuZWRPYmplY3Q7aWYoaT09PW51bGx8fGkucGFydD09PW51bGwpcmV0dXJuO2kuYW5nbGU9dDtjb25zdCBlPWkucGFydDtlLmVuc3VyZUJvdW5kcygpO2NvbnN0IHM9ZS5sb2NhdGlvbk9iamVjdCxuPWUucm90YXRlT2JqZWN0O2lmKHM9PT1ufHxzLmlzQ29udGFpbmVkQnkobikpe2NvbnN0IG89dGhpcy5DZi5jb3B5KCk7ZS5sb2NhdGlvbj1vLnN1YnRyYWN0KHRoaXMucm90YXRpb25Qb2ludCkucm90YXRlKHQtdGhpcy5vcmlnaW5hbEFuZ2xlKS5hZGQodGhpcy5yb3RhdGlvblBvaW50KX10aGlzLmRpYWdyYW0ubWF5YmVVcGRhdGUoKX1jb21wdXRlUm90YXRlKHQpe2xldCBpPXRoaXMucm90YXRpb25Qb2ludC5kaXJlY3Rpb25Qb2ludCh0KS10aGlzLmhhbmRsZUFuZ2xlO2NvbnN0IGU9dGhpcy5hZG9ybmVkT2JqZWN0Py5wYW5lbDtlJiYoaS09ZS5nZXREb2N1bWVudEFuZ2xlKCkpLGk+PTM2MD9pLT0zNjA6aTwwJiYoaSs9MzYwKTtjb25zdCBzPU1hdGgubWluKE1hdGguYWJzKHRoaXMuc25hcEFuZ2xlTXVsdGlwbGUpLDE4MCksbj1NYXRoLm1pbihNYXRoLmFicyh0aGlzLnNuYXBBbmdsZUVwc2lsb24pLHMvMik7cmV0dXJuIXRoaXMuZGlhZ3JhbS5sYXN0SW5wdXQuc2hpZnQmJnM+MCYmbj4wJiYoaSVzPG4/aT1NYXRoLmZsb29yKGkvcykqczppJXM+cy1uJiYoaT0oTWF0aC5mbG9vcihpL3MpKzEpKnMpKSxpPj0zNjA/aS09MzYwOmk8MCYmKGkrPTM2MCksaX1nZXQgc25hcEFuZ2xlTXVsdGlwbGUoKXtyZXR1cm4gdGhpcy55TX1zZXQgc25hcEFuZ2xlTXVsdGlwbGUodCl7VS5pKHQsXCJudW1iZXJcIixSb3RhdGluZ1Rvb2wsXCJzbmFwQW5nbGVNdWx0aXBsZVwiKSx0aGlzLnlNPXR9Z2V0IHNuYXBBbmdsZUVwc2lsb24oKXtyZXR1cm4gdGhpcy53TX1zZXQgc25hcEFuZ2xlRXBzaWxvbih0KXtVLmkodCxcIm51bWJlclwiLFJvdGF0aW5nVG9vbCxcInNuYXBBbmdsZUVwc2lsb25cIiksdGhpcy53TT10fWdldCBvcmlnaW5hbEFuZ2xlKCl7cmV0dXJuIHRoaXMueE19Z2V0IHJvdGF0aW9uUG9pbnQoKXtyZXR1cm4gdGhpcy5ObX1zZXQgcm90YXRpb25Qb2ludCh0KXt0aGlzLk5tPXQuY29weSgpfWdldCBoYW5kbGVBbmdsZSgpe3JldHVybiB0aGlzLmJNfXNldCBoYW5kbGVBbmdsZSh0KXtVLmkodCxcIm51bWJlclwiLFJvdGF0aW5nVG9vbCxcImhhbmRsZUFuZ2xlXCIpLHRoaXMuYk09dH1nZXQgaGFuZGxlRGlzdGFuY2UoKXtyZXR1cm4gdGhpcy5rTX1zZXQgaGFuZGxlRGlzdGFuY2UodCl7VS5pKHQsXCJudW1iZXJcIixSb3RhdGluZ1Rvb2wsXCJoYW5kbGVEaXN0YW5jZVwiKSx0aGlzLmtNPXR9fWNsYXNzIENsaWNrU2VsZWN0aW5nVG9vbCBleHRlbmRzIFRvb2x7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJDbGlja1NlbGVjdGluZ1wiLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1jYW5TdGFydCgpe3JldHVybiEoIXRoaXMuaXNFbmFibGVkfHx0aGlzLmlzQmV5b25kRHJhZ1NpemUoKSl9ZG9Nb3VzZVVwKCl7dGhpcy5pc0FjdGl2ZSYmKHRoaXMuc3RhbmRhcmRNb3VzZVNlbGVjdCgpLHRoaXMuc3RhbmRhcmRNb3VzZUNsaWNrKCl8fHRoaXMuZGlhZ3JhbS5sYXN0SW5wdXQuaXNUb3VjaEV2ZW50JiZ0aGlzLmRpYWdyYW0udG9vbE1hbmFnZXIuZG9Ub29sVGlwKCkpLHRoaXMuc3RvcFRvb2woKX19Y2xhc3MgQWN0aW9uVG9vbCBleHRlbmRzIFRvb2x7QWY7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJBY3Rpb25cIix0aGlzLkFmPW51bGwsdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfWNhblN0YXJ0KCl7aWYoIXRoaXMuaXNFbmFibGVkKXJldHVybiExO2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dC5sYXN0SW5wdXQsZT10LmZpbmRPYmplY3RBdChpLmRvY3VtZW50UG9pbnQscz0+e2Zvcig7cy5wYW5lbCE9PW51bGw7KXtpZihzLmlzQWN0aW9uYWJsZSlyZXR1cm4gcztzPXMucGFuZWx9cmV0dXJuIHN9KTtyZXR1cm4gZSE9PW51bGwmJmUuaXNBY3Rpb25hYmxlPyh0aGlzLkFmPWUsdC5TZj10LmZpbmRPYmplY3RBdChpLmRvY3VtZW50UG9pbnQsbnVsbCxudWxsKSwhMCk6ITF9ZG9Nb3VzZURvd24oKXtpZighdGhpcy5pc0FjdGl2ZSl0aGlzLmNhblN0YXJ0KCkmJnRoaXMuZG9BY3RpdmF0ZSgpO2Vsc2V7Y29uc3QgaT10aGlzLmRpYWdyYW0ubGFzdElucHV0LGU9dGhpcy5BZjtpZihlPT09bnVsbClyZXR1cm47aS50YXJnZXRPYmplY3Q9ZSxlLmFjdGlvbkRvd24hPT1udWxsJiZlLmFjdGlvbkRvd24oaSxlKX19ZG9Nb3VzZU1vdmUoKXtpZih0aGlzLmlzQWN0aXZlKXtjb25zdCBpPXRoaXMuZGlhZ3JhbS5sYXN0SW5wdXQsZT10aGlzLkFmO2lmKGU9PT1udWxsKXJldHVybjtpLnRhcmdldE9iamVjdD1lLGUuYWN0aW9uTW92ZSE9PW51bGwmJmUuYWN0aW9uTW92ZShpLGUpfX1kb01vdXNlVXAoKXtpZih0aGlzLmlzQWN0aXZlKXtjb25zdCBpPXRoaXMuZGlhZ3JhbS5sYXN0SW5wdXQsZT10aGlzLkFmO2lmKGU9PT1udWxsKXJldHVybjtpLnRhcmdldE9iamVjdD1lLGUuYWN0aW9uVXAhPT1udWxsJiZlLmFjdGlvblVwKGksZSksdGhpcy5zdGFuZGFyZE1vdXNlQ2xpY2socz0+e2Zvcig7cy5wYW5lbCE9PW51bGw7KXtpZihzLmlzQWN0aW9uYWJsZSYmcz09PWUpcmV0dXJuIHM7cz1zLnBhbmVsfXJldHVybiBzfSxzPT5zPT09ZSl9dGhpcy5zdG9wVG9vbCgpfWRvQ2FuY2VsKCl7Y29uc3QgaT10aGlzLmRpYWdyYW0ubGFzdElucHV0LGU9dGhpcy5BZjtlIT09bnVsbCYmKGkudGFyZ2V0T2JqZWN0PWUsZS5hY3Rpb25DYW5jZWwhPT1udWxsJiZlLmFjdGlvbkNhbmNlbChpLGUpLHRoaXMuc3RvcFRvb2woKSl9ZG9TdG9wKCl7dGhpcy5BZj1udWxsfX1jbGFzcyBDbGlja0NyZWF0aW5nVG9vbCBleHRlbmRzIFRvb2x7Umw7U007TmY7TU07Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJDbGlja0NyZWF0aW5nXCIsdGhpcy5SbD1udWxsLHRoaXMuU009ITAsdGhpcy5OZj0hMSx0aGlzLk1NPW5ldyBQb2ludCgwLDApLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1jYW5TdGFydCgpe2lmKCF0aGlzLmlzRW5hYmxlZHx8dGhpcy5hcmNoZXR5cGVOb2RlRGF0YT09PW51bGwpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodC5pc1JlYWRPbmx5fHx0LmlzTW9kZWxSZWFkT25seXx8IXQuYWxsb3dJbnNlcnR8fCF0Lmxhc3RJbnB1dC5sZWZ0fHx0aGlzLmlzQmV5b25kRHJhZ1NpemUoKSlyZXR1cm4hMTtpZih0aGlzLmlzRG91YmxlQ2xpY2spe2lmKHQubGFzdElucHV0LmNsaWNrQ291bnQ9PT0xJiYodGhpcy5NTT10Lmxhc3RJbnB1dC52aWV3UG9pbnQuY29weSgpKSx0Lmxhc3RJbnB1dC5jbGlja0NvdW50IT09Mnx8dGhpcy5pc0JleW9uZERyYWdTaXplKHRoaXMuTU0pKXJldHVybiExfWVsc2UgaWYodC5sYXN0SW5wdXQuY2xpY2tDb3VudCE9PTEpcmV0dXJuITE7cmV0dXJuISh0LmN1cnJlbnRUb29sIT09dGhpcyYmdC5maW5kUGFydEF0KHQubGFzdElucHV0LmRvY3VtZW50UG9pbnQsITApIT09bnVsbCl9ZG9Nb3VzZVVwKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dGhpcy5pc0FjdGl2ZSYmdGhpcy5pbnNlcnRQYXJ0KHQubGFzdElucHV0LmRvY3VtZW50UG9pbnQpLHRoaXMuc3RvcFRvb2woKX1pbnNlcnRQYXJ0KHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtLGU9dGhpcy5hcmNoZXR5cGVOb2RlRGF0YTtpZihlPT09bnVsbClyZXR1cm4gbnVsbDtsZXQgcz1udWxsO3RyeXtpZihpLk8oXCJDaGFuZ2luZ1NlbGVjdGlvblwiLGkuc2VsZWN0aW9uKSx0aGlzLnN0YXJ0VHJhbnNhY3Rpb24odGhpcy5uYW1lKSxlIGluc3RhbmNlb2YgUGFydCllLkNlKCkmJihlLkt0KCkscz1lLmNvcHkoKSxzIT09bnVsbCYmaS5hZGQocykpO2Vsc2UgaWYoZSE9PW51bGwpe2NvbnN0IG49aS5tb2RlbC5jb3B5Tm9kZURhdGEoZSk7VS5XKG4pJiYoaS5tb2RlbC5hZGROb2RlRGF0YShuKSxzPWkuZmluZFBhcnRGb3JEYXRhKG4pKX1pZihzIT09bnVsbCl7Y29uc3Qgbj1Qb2ludC5LKHQueCx0LnkpO3RoaXMuaXNHcmlkU25hcEVuYWJsZWQmJnRoaXMuZGlhZ3JhbS5QTShzLHQsbikscy5sb2NhdGlvbj1uLGkuYWxsb3dTZWxlY3QmJihpLmNsZWFyU2VsZWN0aW9uKCEwKSxzLmlzU2VsZWN0ZWQ9ITApLFBvaW50Lm8obil9aS5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKSx0aGlzLnRyYW5zYWN0aW9uUmVzdWx0PXRoaXMubmFtZSxpLk8oXCJQYXJ0Q3JlYXRlZFwiLHMpfWZpbmFsbHl7dGhpcy5zdG9wVHJhbnNhY3Rpb24oKSxpLk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsaS5zZWxlY3Rpb24pfXJldHVybiBzfWdldCBhcmNoZXR5cGVOb2RlRGF0YSgpe3JldHVybiB0aGlzLlJsfXNldCBhcmNoZXR5cGVOb2RlRGF0YSh0KXt0IT09bnVsbCYmVS5Nbyh0LENsaWNrQ3JlYXRpbmdUb29sLFwiYXJjaGV0eXBlTm9kZURhdGFcIiksdGhpcy5SbD10fWdldCBpc0RvdWJsZUNsaWNrKCl7cmV0dXJuIHRoaXMuU019c2V0IGlzRG91YmxlQ2xpY2sodCl7VS5pKHQsXCJib29sZWFuXCIsQ2xpY2tDcmVhdGluZ1Rvb2wsXCJpc0RvdWJsZUNsaWNrXCIpLHRoaXMuU009dH1nZXQgaXNHcmlkU25hcEVuYWJsZWQoKXtyZXR1cm4gdGhpcy5OZn1zZXQgaXNHcmlkU25hcEVuYWJsZWQodCl7VS5pKHQsXCJib29sZWFuXCIsQ2xpY2tDcmVhdGluZ1Rvb2wsXCJpc0dyaWRTbmFwRW5hYmxlZFwiKSx0aGlzLk5mPXR9fWNsYXNzIERyYWdTZWxlY3RpbmdUb29sIGV4dGVuZHMgVG9vbHtqaDtOTTtJbDtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMubmFtZT1cIkRyYWdTZWxlY3RpbmdcIix0aGlzLmpoPTE3NSx0aGlzLk5NPSExLHRoaXMuSWw9bmV3IFBhcnQoe2xheWVyTmFtZTpcIlRvb2xcIixzZWxlY3RhYmxlOiExfSkuYWRkKG5ldyBTaGFwZShcIlJlY3RhbmdsZVwiLHtuYW1lOlwiU0hBUEVcIixmaWxsOm51bGwsc3Ryb2tlOlwibWFnZW50YVwifSkudGhlbWUoXCJzdHJva2VcIixcImRyYWdTZWxlY3RcIikpLkt0KCksdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfWNhblN0YXJ0KCl7aWYoIXRoaXMuaXNFbmFibGVkKXJldHVybiExO2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKCF0LmFsbG93U2VsZWN0KXJldHVybiExO2NvbnN0IGk9dC5sYXN0SW5wdXQ7cmV0dXJuISghaS5sZWZ0fHx0LmN1cnJlbnRUb29sIT09dGhpcyYmKCF0aGlzLmlzQmV5b25kRHJhZ1NpemUoKXx8aS50aW1lc3RhbXAtdC5maXJzdElucHV0LnRpbWVzdGFtcDx0aGlzLmRlbGF5fHx0LmZpbmRQYXJ0QXQoaS5kb2N1bWVudFBvaW50LCEwKSE9PW51bGwpKX1kb0FjdGl2YXRlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dGhpcy5pc0FjdGl2ZT0hMCx0LmlzTW91c2VDYXB0dXJlZD0hMCx0LnNraXBzVW5kb01hbmFnZXI9ITAsdGhpcy5ib3gmJnQuYWRkKHRoaXMuYm94KSx0aGlzLmRvTW91c2VNb3ZlKCl9ZG9EZWFjdGl2YXRlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dC5zdG9wQXV0b1Njcm9sbCgpLHRoaXMuYm94JiZ0LnJlbW92ZSh0aGlzLmJveCksdC5za2lwc1VuZG9NYW5hZ2VyPSExLHQuaXNNb3VzZUNhcHR1cmVkPSExLHRoaXMuaXNBY3RpdmU9ITF9ZG9Nb3VzZU1vdmUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0aGlzLmlzQWN0aXZlJiZ0aGlzLmJveCE9PW51bGwpe2NvbnN0IGk9dGhpcy5jb21wdXRlQm94Qm91bmRzKCk7bGV0IGU9dGhpcy5ib3guZmluZE9iamVjdChcIlNIQVBFXCIpO2U9PT1udWxsJiYoZT10aGlzLmJveC5maW5kTWFpbkVsZW1lbnQoKSk7Y29uc3Qgcz1TaXplLmEoKS5zKGkud2lkdGgsaS5oZWlnaHQpO2UhPT1udWxsJiYoZS5kZXNpcmVkU2l6ZT1zKSx0aGlzLmJveC5MZihpLngsaS55LCExKSxTaXplLm8ocyksKHQuYWxsb3dIb3Jpem9udGFsU2Nyb2xsfHx0LmFsbG93VmVydGljYWxTY3JvbGwpJiZ0LmRvQXV0b1Njcm9sbCh0Lmxhc3RJbnB1dC52aWV3UG9pbnQpfX1kb01vdXNlVXAoKXtpZih0aGlzLmlzQWN0aXZlKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLmJveCYmdC5yZW1vdmUodGhpcy5ib3gpO3RyeXt0LmN1cnJlbnRDdXJzb3I9XCJ3YWl0XCIsdC5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0LnNlbGVjdGlvbiksdGhpcy5zZWxlY3RJblJlY3QodGhpcy5jb21wdXRlQm94Qm91bmRzKCkpLHQuTyhcIkNoYW5nZWRTZWxlY3Rpb25cIix0LnNlbGVjdGlvbil9ZmluYWxseXt0LmN1cnJlbnRDdXJzb3I9XCJcIn19dGhpcy5zdG9wVG9vbCgpfWNvbXB1dGVCb3hCb3VuZHMoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtyZXR1cm4gbmV3IFJlY3QodC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQsdC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCl9c2VsZWN0SW5SZWN0KHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtLGU9aS5sYXN0SW5wdXQscz1pLmZpbmRQYXJ0c0luKHQsdGhpcy5pc1BhcnRpYWxJbmNsdXNpb24pO2lmKFUucnI/ZS5tZXRhOmUuY29udHJvbClpZihlLnNoaWZ0KXtjb25zdCBuPXMuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtvLmlzU2VsZWN0ZWQmJihvLmlzU2VsZWN0ZWQ9ITEpfX1lbHNle2NvbnN0IG49cy5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28uaXNTZWxlY3RlZD0hby5pc1NlbGVjdGVkfX1lbHNlIGlmKGUuc2hpZnQpe2NvbnN0IG49cy5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28uaXNTZWxlY3RlZHx8KG8uaXNTZWxlY3RlZD0hMCl9fWVsc2V7Y29uc3Qgbj1uZXcgTGlzdCxvPWkuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KXtjb25zdCBoPW8udmFsdWU7cy5oYXMoaCl8fG4uYWRkKGgpfWNvbnN0IHI9bi5pdGVyYXRvcjtmb3IoO3IubmV4dCgpOyl7Y29uc3QgaD1yLnZhbHVlO2guaXNTZWxlY3RlZD0hMX1jb25zdCBsPXMuaXRlcmF0b3I7Zm9yKDtsLm5leHQoKTspe2NvbnN0IGg9bC52YWx1ZTtoLmlzU2VsZWN0ZWR8fChoLmlzU2VsZWN0ZWQ9ITApfX19Z2V0IGRlbGF5KCl7cmV0dXJuIHRoaXMuamh9c2V0IGRlbGF5KHQpe1UuaSh0LFwibnVtYmVyXCIsRHJhZ1NlbGVjdGluZ1Rvb2wsXCJkZWxheVwiKSx0aGlzLmpoPXR9Z2V0IGlzUGFydGlhbEluY2x1c2lvbigpe3JldHVybiB0aGlzLk5NfXNldCBpc1BhcnRpYWxJbmNsdXNpb24odCl7VS5pKHQsXCJib29sZWFuXCIsRHJhZ1NlbGVjdGluZ1Rvb2wsXCJpc1BhcnRpYWxJbmNsdXNpb25cIiksdGhpcy5OTT10fWdldCBib3goKXtyZXR1cm4gdGhpcy5JbH1zZXQgYm94KHQpe3QhPT1udWxsJiYoVS5lKHQsUGFydCxEcmFnU2VsZWN0aW5nVG9vbCxcImJveFwiKSx0Lkt0KCkpLHRoaXMuSWw9dH19Y2xhc3MgUGFubmluZ1Rvb2wgZXh0ZW5kcyBUb29se2V4O2dBO0FvO0NNO2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5uYW1lPVwiUGFubmluZ1wiLHRoaXMuZXg9bmV3IFBvaW50LHRoaXMuZ0E9bmV3IFBvaW50LHRoaXMuQW89ITE7Y29uc3QgaT10aGlzO3RoaXMuQ009KCk9Pntjb25zdCBlPWkuZGlhZ3JhbTtlIT09bnVsbCYmZS5BaShyb290LmRvY3VtZW50LFwic2Nyb2xsXCIsaS5DTSwhMSksaS5zdG9wVG9vbCgpfSx0JiZPYmplY3QuYXNzaWduKHRoaXMsdCl9Y2FuU3RhcnQoKXtpZighdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07cmV0dXJuISghdC5hbGxvd0hvcml6b250YWxTY3JvbGwmJiF0LmFsbG93VmVydGljYWxTY3JvbGx8fCF0Lmxhc3RJbnB1dC5sZWZ0fHx0LmN1cnJlbnRUb29sIT09dGhpcyYmIXRoaXMuaXNCZXlvbmREcmFnU2l6ZSgpKX1kb0FjdGl2YXRlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dGhpcy5Bbz8odC5sYXN0SW5wdXQuYnViYmxlcz0hMCx0LlV0KHJvb3QuZG9jdW1lbnQsXCJzY3JvbGxcIix0aGlzLkNNLCExKSk6KHQuY3VycmVudEN1cnNvcj1cIm1vdmVcIix0LmlzTW91c2VDYXB0dXJlZD0hMCx0aGlzLmV4LmModC5wb3NpdGlvbikpLHRoaXMuaXNBY3RpdmU9ITB9ZG9EZWFjdGl2YXRlKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dC5jdXJyZW50Q3Vyc29yPVwiXCIsdC5pc01vdXNlQ2FwdHVyZWQ9ITEsdGhpcy5pc0FjdGl2ZT0hMX1kb0NhbmNlbCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QucG9zaXRpb249dGhpcy5leCx0LmlzTW91c2VDYXB0dXJlZD0hMSx0aGlzLnN0b3BUb29sKCl9ZG9Nb3VzZU1vdmUoKXt0aGlzLm1BKCl9ZG9Nb3VzZVVwKCl7dGhpcy5tQSgpLHRoaXMuc3RvcFRvb2woKX1tQSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHRoaXMuaXNBY3RpdmUmJnQpe2lmKHRoaXMuQW8pe3QubGFzdElucHV0LmJ1YmJsZXM9ITA7cmV0dXJufWNvbnN0IGk9dC5wb3NpdGlvbixlPXQuZmlyc3RJbnB1dC5kb2N1bWVudFBvaW50LHM9dC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludDtsZXQgbj1pLngrZS54LXMueCxvPWkueStlLnktcy55O3QuYWxsb3dIb3Jpem9udGFsU2Nyb2xsfHwobj1pLngpLHQuYWxsb3dWZXJ0aWNhbFNjcm9sbHx8KG89aS55KSx0LnBvc2l0aW9uPXRoaXMuZ0EucyhuLG8pfX1nZXQgYnViYmxlcygpe3JldHVybiB0aGlzLkFvfXNldCBidWJibGVzKHQpe1UuaSh0LFwiYm9vbGVhblwiLFBhbm5pbmdUb29sLFwiYnViYmxlc1wiKSx0aGlzLkFvPXR9Z2V0IG9yaWdpbmFsUG9zaXRpb24oKXtyZXR1cm4gdGhpcy5leH19Y2xhc3MgSFRNTEluZm97bng7bHg7QU07TE07Y29uc3RydWN0b3IodCl7dGhpcy5ueD1udWxsLHRoaXMubHg9bnVsbCx0aGlzLkFNPW51bGwsdGhpcy5MTT1udWxsLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1nZXQgbWFpbkVsZW1lbnQoKXtyZXR1cm4gdGhpcy5BTX1zZXQgbWFpbkVsZW1lbnQodCl7dCE9PW51bGwmJlUuZSh0LEhUTUxFbGVtZW50LEhUTUxJbmZvLFwibWFpbkVsZW1lbnRcIiksdGhpcy5BTT10fWdldCBzaG93KCl7cmV0dXJuIHRoaXMubnh9c2V0IHNob3codCl7dGhpcy5ueCE9PXQmJih0IT09bnVsbCYmVS5QKHQsSFRNTEluZm8sXCJzaG93XCIpLHRoaXMubng9dCl9Z2V0IGhpZGUoKXtyZXR1cm4gdGhpcy5seH1zZXQgaGlkZSh0KXt0aGlzLmx4IT09dCYmKHQhPT1udWxsJiZVLlAodCxIVE1MSW5mbyxcImhpZGVcIiksdGhpcy5seD10KX1nZXQgdmFsdWVGdW5jdGlvbigpe3JldHVybiB0aGlzLkxNfXNldCB2YWx1ZUZ1bmN0aW9uKHQpe3RoaXMuTE09dH19Y2xhc3MgQ29udGV4dE1lbnVCdXR0b25JbmZve2ZpO2h4O1RmO2NvbnN0cnVjdG9yKHQsaSxlKXt0aGlzLmZpPXQsdGhpcy5oeD1pLHRoaXMuVGY9ZX19Y2xhc3MgQ29udGV4dE1lbnVUb29sIGV4dGVuZHMgVG9vbHtUTTtheDtETTtGTTtmeDtjeDtDbTtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMubmFtZT1cIkNvbnRleHRNZW51XCIsdGhpcy5UTT1udWxsLHRoaXMuYXg9bnVsbCx0aGlzLkRNPW51bGwsdGhpcy5GTT1uZXcgUG9pbnQsdGhpcy5meD1udWxsLHRoaXMuQ209ITE7Y29uc3QgaT10aGlzO3RoaXMuY3g9KCk9Pmkuc3RvcFRvb2woKSx0JiZPYmplY3QuYXNzaWduKHRoaXMsdCl9SUYoKXtjb25zdCB0PW5ldyBIVE1MSW5mbzt0LnNob3c9KHIsbCxoKT0+aC5zaG93RGVmYXVsdENvbnRleHRNZW51KCksdC5oaWRlPShyLGwpPT5sLmhpZGVEZWZhdWx0Q29udGV4dE1lbnUoKSxDb250ZXh0TWVudVRvb2wuTnU9dDtjb25zdCBpPXRoaXM7dGhpcy5jeD0oKT0+aS5zdG9wVG9vbCgpO2NvbnN0IGU9VS5kcyhcImRpdlwiKSxzPVUuZHMoXCJkaXZcIik7ZS5zdHlsZS5jc3NUZXh0PVwidG9wOiAwcHg7ei1pbmRleDoxMDAwMjtwb3NpdGlvbjogZml4ZWQ7ZGlzcGxheTogbm9uZTt0ZXh0LWFsaWduOiBjZW50ZXI7bGVmdDogMjUlO3dpZHRoOiA1MCU7YmFja2dyb3VuZC1jb2xvcjogI0Y1RjVGNTtwYWRkaW5nOiAxNnB4O2JvcmRlcjogMTZweCBzb2xpZCAjNDQ0O2JvcmRlci1yYWRpdXM6IDEwcHg7bWFyZ2luLXRvcDogMTBweFwiLHMuc3R5bGUuY3NzVGV4dD1cInotaW5kZXg6MTAwMDE7cG9zaXRpb246IGZpeGVkO2Rpc3BsYXk6IG5vbmU7dG9wOiAwO2xlZnQ6IDA7d2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlO2JhY2tncm91bmQtY29sb3I6IGJsYWNrO29wYWNpdHk6IDAuODtcIjtjb25zdCBuPVUuZHMoXCJzdHlsZVwiKTtyb290LmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChuKSxuLnNoZWV0Lmluc2VydFJ1bGUoXCIuZ29DWHVsIHsgbGlzdC1zdHlsZTogbm9uZTsgfVwiLDApLG4uc2hlZXQuaW5zZXJ0UnVsZShcIi5nb0NYbGkge2ZvbnQ6NzAwIDEuNWVtIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7cG9zaXRpb246IHJlbGF0aXZlO21pbi13aWR0aDogNjBweDsgfVwiLDApLG4uc2hlZXQuaW5zZXJ0UnVsZShcIi5nb0NYYSB7Y29sb3I6ICM0NDQ7ZGlzcGxheTogaW5saW5lLWJsb2NrO3BhZGRpbmc6IDRweDt0ZXh0LWRlY29yYXRpb246IG5vbmU7bWFyZ2luOiAycHg7Ym9yZGVyOiAxcHggc29saWQgZ3JheTtib3JkZXItcmFkaXVzOiAxMHB4OyB9XCIsMCk7Y29uc3Qgbz10aGlzLmRpYWdyYW07byE9PW51bGwmJihvLlV0KGUsXCJjb250ZXh0bWVudVwiLENvbnRleHRNZW51VG9vbC5aaCwhMSksby5VdChlLFwic2VsZWN0c3RhcnRcIixDb250ZXh0TWVudVRvb2wuWmgsITEpLG8uVXQocyxcImNvbnRleHRtZW51XCIsQ29udGV4dE1lbnVUb29sLlpoLCExKSksZS5jbGFzc05hbWU9XCJnb0NYZm9yZWdyb3VuZFwiLHMuY2xhc3NOYW1lPVwiZ29DWGJhY2tncm91bmRcIixyb290LmRvY3VtZW50LmJvZHkmJihyb290LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZSkscm9vdC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHMpKSxDb250ZXh0TWVudVRvb2wuQW09ZSxDb250ZXh0TWVudVRvb2wuTG09cyxDb250ZXh0TWVudVRvb2wuUk09ITB9c3RhdGljIE51PW51bGw7c3RhdGljIFJNPSExO3N0YXRpYyBMbTtzdGF0aWMgQW07c3RhdGljIFpoKHQpe3JldHVybiB0LnByZXZlbnREZWZhdWx0KCksITF9Y2FuU3RhcnQoKXtpZighdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07cmV0dXJuIHRoaXMuaXNCZXlvbmREcmFnU2l6ZSgpfHwhdC5sYXN0SW5wdXQucmlnaHR8fHQubGFzdElucHV0LmNsaWNrQ291bnQ+MT8hMTohISh0Lmxhc3RJbnB1dC5pc1RvdWNoRXZlbnQmJnRoaXMuZGVmYXVsdFRvdWNoQ29udGV4dE1lbnUhPT1udWxsfHx0aGlzLmZpbmRPYmplY3RXaXRoQ29udGV4dE1lbnUoKSE9PW51bGwpfWRvU3RhcnQoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLkZNLnNldCh0LmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCl9ZG9TdG9wKCl7dGhpcy5oaWRlQ29udGV4dE1lbnUoKSx0aGlzLmN1cnJlbnRPYmplY3Q9bnVsbCx0aGlzLkNtPSExfWZpbmRPYmplY3RXaXRoQ29udGV4dE1lbnUodCl7dD09PXZvaWQgMCYmKHQ9bnVsbCk7Y29uc3QgaT10aGlzLmRpYWdyYW0sZT1pLmxhc3RJbnB1dDtsZXQgcz1udWxsO2lmKHQgaW5zdGFuY2VvZiBEaWFncmFtfHwodCBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0P3M9dDpzPWkuZmluZE9iamVjdEF0KGUuZG9jdW1lbnRQb2ludCxudWxsLG49PiFuLmxheWVyPy5pc1RlbXBvcmFyeSkpLHMhPT1udWxsKXtsZXQgbj1zO2Zvcig7biE9PW51bGw7KXtpZihuLmNvbnRleHRNZW51IT09bnVsbClyZXR1cm4gbjtuPW4ucGFuZWx9aWYoaS5sYXN0SW5wdXQuaXNUb3VjaEV2ZW50JiZ0aGlzLmRlZmF1bHRUb3VjaENvbnRleHRNZW51KXJldHVybiBzLnBhcnR9ZWxzZSBpZihpLmNvbnRleHRNZW51IT09bnVsbClyZXR1cm4gaTtyZXR1cm4gbnVsbH1kb0FjdGl2YXRlKCl7fWRvTW91c2VEb3duKCl7aWYoc3VwZXIuZG9Nb3VzZURvd24oKSx0aGlzLmlzQWN0aXZlJiZ0aGlzLmN1cnJlbnRDb250ZXh0TWVudSBpbnN0YW5jZW9mIEFkb3JubWVudCl7Y29uc3QgdD10aGlzLmRpYWdyYW0udG9vbE1hbmFnZXIuZmluZFRvb2woXCJBY3Rpb25cIik7dCE9PW51bGwmJnQuY2FuU3RhcnQoKSYmKHQuZG9BY3RpdmF0ZSgpLHQuZG9Nb3VzZURvd24oKSx0LmRvRGVhY3RpdmF0ZSgpKX10aGlzLmRpYWdyYW0udG9vbE1hbmFnZXIubW91c2VEb3duVG9vbHMuaGFzKHRoaXMpJiZ0aGlzLmRvQ29udGV4dENsaWNrKCl9ZG9Nb3VzZVVwKCl7aWYodGhpcy5pc0FjdGl2ZSYmdGhpcy5jdXJyZW50Q29udGV4dE1lbnUgaW5zdGFuY2VvZiBBZG9ybm1lbnQpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLnRvb2xNYW5hZ2VyLmZpbmRUb29sKFwiQWN0aW9uXCIpO3QhPT1udWxsJiZ0LmNhblN0YXJ0KCkmJih0LmRvQWN0aXZhdGUoKSx0LmRvQ2FuY2VsKCksdC5kb0RlYWN0aXZhdGUoKSl9dGhpcy5kb0NvbnRleHRDbGljaygpfWRvQ29udGV4dENsaWNrKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYoIXRoaXMuaXNBY3RpdmUpdGhpcy5jYW5TdGFydCgpJiYodGhpcy5vcGVuTWVudSghMCksdGhpcy5pc0FjdGl2ZXx8dGhpcy5zdG9wVG9vbCgpKTtlbHNle2NvbnN0IGk9dGhpcy5jdXJyZW50Q29udGV4dE1lbnU7aWYoaT09PW51bGwpcmV0dXJuO2xldCBlPW51bGw7aSBpbnN0YW5jZW9mIEhUTUxJbmZvfHwoZT10LmZpbmRPYmplY3RBdCh0Lmxhc3RJbnB1dC5kb2N1bWVudFBvaW50LG51bGwsbnVsbCksZSE9PW51bGwmJmUuaXNDb250YWluZWRCeShpKSYmdGhpcy5zdGFuZGFyZE1vdXNlQ2xpY2sobnVsbCxudWxsKSksdGhpcy5tYXliZVN0b3BUb29sKGUpfX1tYXliZVN0b3BUb29sKHQpe3RoaXMuc3RvcFRvb2woKSx0aGlzLmNhblN0YXJ0KCkmJih0aGlzLmRpYWdyYW0uY3VycmVudFRvb2w9dGhpcyx0aGlzLmRvTW91c2VVcCgpKX1vcGVuTWVudSh0LGkpe2lmKGk9PT12b2lkIDAmJihpPW51bGwpLHRoaXMuQ20pcmV0dXJuO3RoaXMuQ209ITAsdCYmdGhpcy5zdGFuZGFyZE1vdXNlU2VsZWN0KCk7Y29uc3QgZT10aGlzLnN0YW5kYXJkTW91c2VDbGljaygpO2lmKHRoaXMuQ209ITEsIWUpe3RoaXMuaXNBY3RpdmU9ITA7Y29uc3Qgcz1Db250ZXh0TWVudVRvb2wuTnU7aWYoaT09PW51bGwmJihpPXRoaXMuZmluZE9iamVjdFdpdGhDb250ZXh0TWVudSgpKSxpIT09bnVsbCl7Y29uc3Qgbj1pLmNvbnRleHRNZW51O24hPT1udWxsPyh0aGlzLmN1cnJlbnRPYmplY3Q9aSBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0P2k6bnVsbCx0aGlzLnNob3dDb250ZXh0TWVudShuLHRoaXMuY3VycmVudE9iamVjdCkpOnMhPT1udWxsJiZ0aGlzLnNob3dDb250ZXh0TWVudShzLHRoaXMuY3VycmVudE9iamVjdCl9ZWxzZSBzIT09bnVsbCYmdGhpcy5zaG93Q29udGV4dE1lbnUocyxudWxsKTt0aGlzLmN1cnJlbnRDb250ZXh0TWVudSBpbnN0YW5jZW9mIEFkb3JubWVudCYmIXRoaXMuY3VycmVudENvbnRleHRNZW51LnZpc2libGUmJnRoaXMuc3RvcFRvb2woKX19ZG9Nb3VzZU1vdmUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbS50b29sTWFuYWdlci5maW5kVG9vbChcIkFjdGlvblwiKTt0IT09bnVsbCYmdC5kb01vdXNlTW92ZSgpLHRoaXMuaXNBY3RpdmUmJnRoaXMuZGlhZ3JhbS50b29sTWFuYWdlci5kb01vdXNlTW92ZSgpfXNob3dDb250ZXh0TWVudSh0LGkpe0RlYnVnJiYhKHQgaW5zdGFuY2VvZiBBZG9ybm1lbnR8fHQgaW5zdGFuY2VvZiBIVE1MSW5mbykmJlUubihcInNob3dDb250ZXh0TWVudTpjb250ZXh0TWVudSBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksaSE9PW51bGwmJlUuZShpLEdyYXBoT2JqZWN0LENvbnRleHRNZW51VG9vbCxcInNob3dDb250ZXh0TWVudTpvYmpcIik7Y29uc3QgZT10aGlzLmRpYWdyYW07aWYodCE9PXRoaXMuY3VycmVudENvbnRleHRNZW51JiZ0aGlzLmhpZGVDb250ZXh0TWVudSgpLHQgaW5zdGFuY2VvZiBBZG9ybm1lbnQpe2NvbnN0IHM9dDtzLmxheWVyTmFtZT1cIlRvb2xcIixzLnNlbGVjdGFibGU9ITEscy5zY2FsZT0xL2Uuc2NhbGUscy5jYXRlZ29yeT10aGlzLm5hbWUscy5oYXNQbGFjZWhvbGRlcigpJiYocy5wbGFjZWhvbGRlci5zY2FsZT1lLnNjYWxlKTtjb25zdCBuPXMuZGlhZ3JhbTtuIT09bnVsbCYmbiE9PWUmJm4ucmVtb3ZlKHMpLGUuYWRkKHMpLGkhPT1udWxsP3MuYWRvcm5lZE9iamVjdD1pOnMuZGF0YT1lLm1vZGVsLHMuZW5zdXJlQm91bmRzKCksdGhpcy5wb3NpdGlvbkNvbnRleHRNZW51KHMsaSl9ZWxzZSB0IGluc3RhbmNlb2YgSFRNTEluZm8mJnQuc2hvdyE9PW51bGwmJnQuc2hvdyhpLGUsdGhpcyk7dGhpcy5jdXJyZW50Q29udGV4dE1lbnU9dH1wb3NpdGlvbkNvbnRleHRNZW51KHQsaSl7aWYodC5oYXNQbGFjZWhvbGRlcigpKXJldHVybjtjb25zdCBlPXQscz10aGlzLmRpYWdyYW0sbj1zLmxhc3RJbnB1dC5kb2N1bWVudFBvaW50LmNvcHkoKSxvPWUubWVhc3VyZWRCb3VuZHMscj1zLnZpZXdwb3J0Qm91bmRzO3MubGFzdElucHV0LmlzVG91Y2hFdmVudCYmKG4ueC09by53aWR0aCksbi54K28ud2lkdGg+ci5yaWdodCYmKG4ueC09by53aWR0aCs1L3Muc2NhbGUpLG4ueDxyLngmJihuLng9ci54KSxuLnkrby5oZWlnaHQ+ci5ib3R0b20mJihuLnktPW8uaGVpZ2h0KzUvcy5zY2FsZSksbi55PHIueSYmKG4ueT1yLnkpLGUucG9zaXRpb249bn1oaWRlQ29udGV4dE1lbnUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbSxpPXRoaXMuY3VycmVudENvbnRleHRNZW51O2khPT1udWxsJiYoaSBpbnN0YW5jZW9mIEFkb3JubWVudD8odC5yZW1vdmUoaSksdGhpcy5heCE9PW51bGwmJnRoaXMuYXgucmVtb3ZlQWRvcm5tZW50KGkuY2F0ZWdvcnkpLGkuZGF0YT1udWxsLGkuYWRvcm5lZE9iamVjdD1udWxsKTppIGluc3RhbmNlb2YgSFRNTEluZm8mJihpLmhpZGUhPT1udWxsP2kuaGlkZSh0LHRoaXMpOmkubWFpbkVsZW1lbnQhPT1udWxsJiYoaS5tYWluRWxlbWVudC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiKSksdGhpcy5jdXJyZW50Q29udGV4dE1lbnU9bnVsbCx0aGlzLnN0YW5kYXJkTW91c2VPdmVyKCkpfU9GKCl7Y29uc3QgdD10aGlzLGk9bmV3IExpc3Q7cmV0dXJuIGkuYWRkKG5ldyBDb250ZXh0TWVudUJ1dHRvbkluZm8oXCJDb3B5XCIsZT0+ZS5jb21tYW5kSGFuZGxlci5jb3B5U2VsZWN0aW9uKCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5Db3B5U2VsZWN0aW9uKCkpKSxpLmFkZChuZXcgQ29udGV4dE1lbnVCdXR0b25JbmZvKFwiQ3V0XCIsZT0+ZS5jb21tYW5kSGFuZGxlci5jdXRTZWxlY3Rpb24oKSxlPT5lLmNvbW1hbmRIYW5kbGVyLmNhbkN1dFNlbGVjdGlvbigpKSksaS5hZGQobmV3IENvbnRleHRNZW51QnV0dG9uSW5mbyhcIkRlbGV0ZVwiLGU9PmUuY29tbWFuZEhhbmRsZXIuZGVsZXRlU2VsZWN0aW9uKCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5EZWxldGVTZWxlY3Rpb24oKSkpLGkuYWRkKG5ldyBDb250ZXh0TWVudUJ1dHRvbkluZm8oXCJQYXN0ZVwiLGU9PmUuY29tbWFuZEhhbmRsZXIucGFzdGVTZWxlY3Rpb24odC5tb3VzZURvd25Qb2ludCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5QYXN0ZVNlbGVjdGlvbih0Lm1vdXNlRG93blBvaW50KSkpLGkuYWRkKG5ldyBDb250ZXh0TWVudUJ1dHRvbkluZm8oXCJTZWxlY3QgQWxsXCIsZT0+ZS5jb21tYW5kSGFuZGxlci5zZWxlY3RBbGwoKSxlPT5lLmNvbW1hbmRIYW5kbGVyLmNhblNlbGVjdEFsbCgpKSksaS5hZGQobmV3IENvbnRleHRNZW51QnV0dG9uSW5mbyhcIlVuZG9cIixlPT5lLmNvbW1hbmRIYW5kbGVyLnVuZG8oKSxlPT5lLmNvbW1hbmRIYW5kbGVyLmNhblVuZG8oKSkpLGkuYWRkKG5ldyBDb250ZXh0TWVudUJ1dHRvbkluZm8oXCJSZWRvXCIsZT0+ZS5jb21tYW5kSGFuZGxlci5yZWRvKCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5SZWRvKCkpKSxpLmFkZChuZXcgQ29udGV4dE1lbnVCdXR0b25JbmZvKFwiU2Nyb2xsIFRvIFBhcnRcIixlPT5lLmNvbW1hbmRIYW5kbGVyLnNjcm9sbFRvUGFydCgpLGU9PmUuY29tbWFuZEhhbmRsZXIuY2FuU2Nyb2xsVG9QYXJ0KCkpKSxpLmFkZChuZXcgQ29udGV4dE1lbnVCdXR0b25JbmZvKFwiWm9vbSBUbyBGaXRcIixlPT5lLmNvbW1hbmRIYW5kbGVyLnpvb21Ub0ZpdCgpLGU9PmUuY29tbWFuZEhhbmRsZXIuY2FuWm9vbVRvRml0KCkpKSxpLmFkZChuZXcgQ29udGV4dE1lbnVCdXR0b25JbmZvKFwiUmVzZXQgWm9vbVwiLGU9PmUuY29tbWFuZEhhbmRsZXIucmVzZXRab29tKCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5SZXNldFpvb20oKSkpLGkuYWRkKG5ldyBDb250ZXh0TWVudUJ1dHRvbkluZm8oXCJHcm91cCBTZWxlY3Rpb25cIixlPT5lLmNvbW1hbmRIYW5kbGVyLmdyb3VwU2VsZWN0aW9uKCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5Hcm91cFNlbGVjdGlvbigpKSksaS5hZGQobmV3IENvbnRleHRNZW51QnV0dG9uSW5mbyhcIlVuZ3JvdXAgU2VsZWN0aW9uXCIsZT0+ZS5jb21tYW5kSGFuZGxlci51bmdyb3VwU2VsZWN0aW9uKCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5Vbmdyb3VwU2VsZWN0aW9uKCkpKSxpLmFkZChuZXcgQ29udGV4dE1lbnVCdXR0b25JbmZvKFwiRWRpdCBUZXh0XCIsZT0+ZS5jb21tYW5kSGFuZGxlci5lZGl0VGV4dEJsb2NrKCksZT0+ZS5jb21tYW5kSGFuZGxlci5jYW5FZGl0VGV4dEJsb2NrKCkpKSxpfXNob3dEZWZhdWx0Q29udGV4dE1lbnUoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTt0aGlzLmZ4PT09bnVsbCYmKHRoaXMuZng9dGhpcy5PRigpKSxDb250ZXh0TWVudVRvb2wuQW0uaW5uZXJIVE1MPVwiXCIsQ29udGV4dE1lbnVUb29sLkxtLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLHRoaXMuY3gsITEpO2NvbnN0IGk9dGhpcyxlPVUuZHMoXCJ1bFwiKTtlLmNsYXNzTmFtZT1cImdvQ1h1bFwiLENvbnRleHRNZW51VG9vbC5BbS5hcHBlbmRDaGlsZChlKSxlLmlubmVySFRNTD1cIlwiO2NvbnN0IHM9dGhpcy5meC5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlLG89bi5oeCxyPW4uVGY7aWYoIVUucnQobyl8fFUucnQocikmJiFyKHQpKWNvbnRpbnVlO2NvbnN0IGw9VS5kcyhcImxpXCIpO2wuY2xhc3NOYW1lPVwiZ29DWGxpXCI7Y29uc3QgaD1VLmRzKFwiYVwiKTtoLmNsYXNzTmFtZT1cImdvQ1hhXCIsaC5ocmVmPVwiI1wiLGguaHg9byxoLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLGZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmh4KHQpLGkuc3RvcFRvb2woKSxmLnByZXZlbnREZWZhdWx0KCksITF9LCExKSxoLnRleHRDb250ZW50PW4uZmksbC5hcHBlbmRDaGlsZChoKSxlLmFwcGVuZENoaWxkKGwpfUNvbnRleHRNZW51VG9vbC5BbS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIixDb250ZXh0TWVudVRvb2wuTG0uc3R5bGUuZGlzcGxheT1cImJsb2NrXCJ9aGlkZURlZmF1bHRDb250ZXh0TWVudSgpe2lmKHRoaXMuY3VycmVudENvbnRleHRNZW51PT09bnVsbHx8dGhpcy5jdXJyZW50Q29udGV4dE1lbnUhPT1Db250ZXh0TWVudVRvb2wuTnUpcmV0dXJuO0NvbnRleHRNZW51VG9vbC5BbS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLENvbnRleHRNZW51VG9vbC5MbS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QhPT1udWxsJiZ0LkFpKENvbnRleHRNZW51VG9vbC5MbSxcInBvaW50ZXJkb3duXCIsdGhpcy5jeCwhMSksdGhpcy5jdXJyZW50Q29udGV4dE1lbnU9bnVsbH1nZXQgY3VycmVudENvbnRleHRNZW51KCl7cmV0dXJuIHRoaXMuVE19c2V0IGN1cnJlbnRDb250ZXh0TWVudSh0KXtEZWJ1ZyYmdCE9PW51bGwmJiEodCBpbnN0YW5jZW9mIEFkb3JubWVudHx8dCBpbnN0YW5jZW9mIEhUTUxJbmZvKSYmVS5uKFwiQ29udGV4dE1lbnVUb29sLmN1cnJlbnRDb250ZXh0TWVudSBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksdGhpcy5UTT10LHRoaXMuYXg9dCBpbnN0YW5jZW9mIEFkb3JubWVudD90LmFkb3JuZWRQYXJ0Om51bGx9Z2V0IGRlZmF1bHRUb3VjaENvbnRleHRNZW51KCl7cmV0dXJuIENvbnRleHRNZW51VG9vbC5STT09PSExJiZDb250ZXh0TWVudVRvb2wuTnU9PT1udWxsJiZEaWFncmFtLmlzVXNpbmdET00oKSYmdGhpcy5JRigpLENvbnRleHRNZW51VG9vbC5OdX1zZXQgZGVmYXVsdFRvdWNoQ29udGV4dE1lbnUodCl7RGVidWcmJnQhPT1udWxsJiYhKHQgaW5zdGFuY2VvZiBBZG9ybm1lbnR8fHQgaW5zdGFuY2VvZiBIVE1MSW5mbykmJlUubihcIkNvbnRleHRNZW51VG9vbC5kZWZhdWx0VG91Y2hDb250ZXh0TWVudSBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksdD09PW51bGwmJihDb250ZXh0TWVudVRvb2wuUk09ITApLENvbnRleHRNZW51VG9vbC5OdT10fWdldCBjdXJyZW50T2JqZWN0KCl7cmV0dXJuIHRoaXMuRE19c2V0IGN1cnJlbnRPYmplY3QodCl7dCE9PW51bGwmJlUuZSh0LEdyYXBoT2JqZWN0LENvbnRleHRNZW51VG9vbCxcImN1cnJlbnRPYmplY3RcIiksdGhpcy5ETT10fWdldCBtb3VzZURvd25Qb2ludCgpe3JldHVybiB0aGlzLkZNfX12YXIgVGV4dEVkaXRpbmdBY2NlcHQ9KHk9Pih5W3kuTG9zdEZvY3VzPTFdPVwiTG9zdEZvY3VzXCIseVt5Lk1vdXNlRG93bj0yXT1cIk1vdXNlRG93blwiLHlbeS5UYWI9M109XCJUYWJcIix5W3kuRW50ZXI9NF09XCJFbnRlclwiLHkpKShUZXh0RWRpdGluZ0FjY2VwdHx8e30pLFRleHRFZGl0aW5nU3RhcnRpbmc9KHk9Pih5W3kuU2luZ2xlQ2xpY2s9MV09XCJTaW5nbGVDbGlja1wiLHlbeS5TaW5nbGVDbGlja1NlbGVjdGVkPTJdPVwiU2luZ2xlQ2xpY2tTZWxlY3RlZFwiLHlbeS5Eb3VibGVDbGljaz0zXT1cIkRvdWJsZUNsaWNrXCIseSkpKFRleHRFZGl0aW5nU3RhcnRpbmd8fHt9KSxUZXh0RWRpdGluZ1N0YXRlPSh5PT4oeVt5Lk5vbmU9MV09XCJOb25lXCIseVt5LkFjdGl2ZT0yXT1cIkFjdGl2ZVwiLHlbeS5FZGl0aW5nPTNdPVwiRWRpdGluZ1wiLHlbeS5WYWxpZGF0aW5nPTRdPVwiVmFsaWRhdGluZ1wiLHlbeS5JbnZhbGlkPTVdPVwiSW52YWxpZFwiLHlbeS5WYWxpZGF0ZWQ9Nl09XCJWYWxpZGF0ZWRcIix5KSkoVGV4dEVkaXRpbmdTdGF0ZXx8e30pO2NsYXNzIFRleHRFZGl0aW5nVG9vbCBleHRlbmRzIFRvb2x7QWU7SU07T007T2w7dnQ7RU07Qk07Vk07dXg7ek07Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJUZXh0RWRpdGluZ1wiLHRoaXMuQWU9bmV3IFRleHRCbG9jayx0aGlzLklNPW51bGwsdGhpcy5PTT0yLHRoaXMuT2w9bnVsbCx0aGlzLnZ0PTEsdGhpcy5FTT0xLHRoaXMuQk09ITAsdGhpcy5WTT1udWxsLHRoaXMudXg9bmV3IEhUTUxJbmZvLHRoaXMuRUYodGhpcy51eCksdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfXN0YXRpYyBMb3N0Rm9jdXM9MTtzdGF0aWMgTW91c2VEb3duPTI7c3RhdGljIFRhYj0zO3N0YXRpYyBFbnRlcj00O3N0YXRpYyBTaW5nbGVDbGljaz0xO3N0YXRpYyBTaW5nbGVDbGlja1NlbGVjdGVkPTI7c3RhdGljIERvdWJsZUNsaWNrPTM7c3RhdGljIFN0YXRlTm9uZT0xO3N0YXRpYyBTdGF0ZUFjdGl2ZT0yO3N0YXRpYyBTdGF0ZUVkaXRpbmc9MztzdGF0aWMgU3RhdGVWYWxpZGF0aW5nPTQ7c3RhdGljIFN0YXRlSW52YWxpZD01O3N0YXRpYyBTdGF0ZVZhbGlkYXRlZD02O0VGKHQpe2lmKCFEaWFncmFtLmlzVXNpbmdET00oKSlyZXR1cm47Y29uc3QgaT1VLmRzKFwidGV4dGFyZWFcIik7dGhpcy56TT1pO2NvbnN0IGU9dGhpcztpLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLGZ1bmN0aW9uKHMpe2lmKGUudGV4dEJsb2NrPT09bnVsbClyZXR1cm47Y29uc3Qgbj1lLm1lYXN1cmVUZW1wb3JhcnlUZXh0QmxvY2sodGhpcy52YWx1ZSksbz10aGlzLnRleHRTY2FsZTt0aGlzLnN0eWxlLndpZHRoPTIwK01hdGgubWF4KGUudGV4dEJsb2NrLm1lYXN1cmVkQm91bmRzLndpZHRoLG4ubWVhc3VyZWRCb3VuZHMud2lkdGgpKm8rXCJweFwiLHRoaXMucm93cz1NYXRoLm1heChlLnRleHRCbG9jay5saW5lQ291bnQsbi5saW5lQ291bnQpfSwhMSksaS5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLGZ1bmN0aW9uKHMpe2lmKHMuaXNDb21wb3Npbmd8fGUudGV4dEJsb2NrPT09bnVsbClyZXR1cm47Y29uc3Qgbj1zLmtleTtpZihuPT09XCJFbnRlclwiKXtlLnRleHRCbG9jay5pc011bHRpbGluZT09PSExJiZzLnByZXZlbnREZWZhdWx0KCksZS5hY2NlcHRUZXh0KDQpO3JldHVybn1lbHNlIGlmKG49PT1cIlRhYlwiKXtlLmFjY2VwdFRleHQoMykscy5wcmV2ZW50RGVmYXVsdCgpO3JldHVybn1lbHNlIG49PT1cIkVzY2FwZVwiJiYoZS5kb0NhbmNlbCgpLGUuZGlhZ3JhbSE9PW51bGwmJmUuZGlhZ3JhbS5kb0ZvY3VzKCkpfSwhMSksaS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIixmdW5jdGlvbihzKXtlLkJGKHMpfSwhMSksaS5hZGRFdmVudExpc3RlbmVyKFwiYmx1clwiLGZ1bmN0aW9uKHMpe2UuVkYocyl9LCExKSx0LnZhbHVlRnVuY3Rpb249KCk9PmkudmFsdWUsdC5tYWluRWxlbWVudD1pLHQuc2hvdz0ocyxuLG8pPT57aWYoIShzIGluc3RhbmNlb2YgVGV4dEJsb2NrKXx8IW58fCFuLmRpdnx8IShvIGluc3RhbmNlb2YgVGV4dEVkaXRpbmdUb29sKSlyZXR1cm47aWYoby5zdGF0ZT09PTUpe2kuc3R5bGUuYm9yZGVyPVwiM3B4IHNvbGlkIHJlZFwiLGkuZm9jdXMoKTtyZXR1cm59Y29uc3Qgcj1zLmdldERvY3VtZW50UG9pbnQoU3BvdC5DZW50ZXIpLGw9bi5wb3NpdGlvbixoPW4uc2NhbGU7bGV0IGY9cy5nZXREb2N1bWVudFNjYWxlKCkqaDtmPG8ubWluaW11bUVkaXRvclNjYWxlJiYoZj1vLm1pbmltdW1FZGl0b3JTY2FsZSk7Y29uc3QgYT1zLm5hdHVyYWxCb3VuZHMud2lkdGgqZis2LGM9cy5uYXR1cmFsQm91bmRzLmhlaWdodCpmKzIsdT0oci54LWwueCkqaCxkPShyLnktbC55KSpoLG09cy52ZXJ0aWNhbEFsaWdubWVudCxwPShzLmxpbmVIZWlnaHQrcy5zcGFjaW5nQWJvdmUrcy5zcGFjaW5nQmVsb3cpKnMubGluZUNvdW50KmYsdz0uNSpjLS41KnAseD1tLnkqYy1tLnkqcCttLm9mZnNldFktdy1wLzI7aS52YWx1ZT1zLnRleHQsbi5kaXYuc3R5bGUuZm9udD1zLmZvbnQ7Y29uc3Qgaz0xO2kuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiLGkuc3R5bGUuekluZGV4PVwiMTAwXCIsaS5zdHlsZS5mb250PVwiaW5oZXJpdFwiLGkuc3R5bGUuZm9udFNpemU9ZioxMDArXCIlXCIsaS5zdHlsZS5saW5lSGVpZ2h0PVwibm9ybWFsXCIsaS5zdHlsZS53aWR0aD1hK1wicHhcIixpLnN0eWxlLmxlZnQ9KHUtYS8yfDApLWsrXCJweFwiLGkuc3R5bGUudG9wPShkK3h8MCktaytcInB4XCIsaS5zdHlsZS50ZXh0QWxpZ249cy50ZXh0QWxpZ24saS5zdHlsZS5tYXJnaW49XCIwXCIsaS5zdHlsZS5wYWRkaW5nPWsrXCJweFwiLGkuc3R5bGUuYm9yZGVyPVwiMFwiLGkuc3R5bGUub3V0bGluZT1cIm5vbmVcIixpLnN0eWxlLndoaXRlU3BhY2U9XCJwcmUtd3JhcFwiLGkuc3R5bGUub3ZlcmZsb3c9XCJoaWRkZW5cIixpLnJvd3M9cy5saW5lQ291bnQsaS50ZXh0U2NhbGU9ZixpLmNsYXNzTmFtZT1cImdvVFhhcmVhXCIsbi5kaXYuYXBwZW5kQ2hpbGQoaSksaS5mb2N1cygpLG8uc2VsZWN0c1RleHRPbkFjdGl2YXRlJiYoaS5zZWxlY3QoKSxpLnNldFNlbGVjdGlvblJhbmdlKDAsOTk5OSkpfSx0LmhpZGU9KHMsbik9PntzLmRpdiYmcy5kaXYucmVtb3ZlQ2hpbGQoaSl9fWdldCB0ZXh0QmxvY2soKXtyZXR1cm4gdGhpcy5JTX1zZXQgdGV4dEJsb2NrKHQpe3QhPT1udWxsJiZVLmUodCxUZXh0QmxvY2ssVGV4dEVkaXRpbmdUb29sLFwidGV4dEJsb2NrXCIpLHRoaXMuSU09dH1nZXQgY3VycmVudFRleHRFZGl0b3IoKXtyZXR1cm4gdGhpcy5WTX1zZXQgY3VycmVudFRleHRFZGl0b3IodCl7dGhpcy5WTT10fWdldCBkZWZhdWx0VGV4dEVkaXRvcigpe3JldHVybiB0aGlzLnV4fXNldCBkZWZhdWx0VGV4dEVkaXRvcih0KXtEZWJ1ZyYmISh0IGluc3RhbmNlb2YgSFRNTEluZm8pJiZVLm4oXCJUZXh0RWRpdGluZ1Rvb2wuZGVmYXVsdFRleHRFZGl0b3IgbXVzdCBiZSBhbiBIVE1MSW5mby5cIiksdGhpcy51eD10fWdldCBzdGFydGluZygpe3JldHVybiB0aGlzLk9NfXNldCBzdGFydGluZyh0KXtVLmoodCxUZXh0RWRpdGluZ1N0YXJ0aW5nLFwiVGV4dEVkaXRpbmdTdGFydGluZ1wiKSx0aGlzLk9NPXR9Y2FuU3RhcnQoKXtpZighdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodD09PW51bGx8fHQuaXNSZWFkT25seXx8VGV4dEVkaXRpbmdUb29sLkRmJiZUZXh0RWRpdGluZ1Rvb2wuRGYhPT10aGlzJiYoVGV4dEVkaXRpbmdUb29sLkRmLmFjY2VwdFRleHQoMiksVGV4dEVkaXRpbmdUb29sLkRmJiZUZXh0RWRpdGluZ1Rvb2wuRGYhPT10aGlzKXx8IXQubGFzdElucHV0LmxlZnR8fHRoaXMuaXNCZXlvbmREcmFnU2l6ZSgpKXJldHVybiExO2NvbnN0IGk9dC5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCxlPXQuZmluZE9iamVjdEF0KGkpO2lmKGU9PT1udWxsfHwhKGUgaW5zdGFuY2VvZiBUZXh0QmxvY2spfHwhZS5lZGl0YWJsZXx8ZS5wYXJ0PT09bnVsbHx8IWUucGFydC5jYW5FZGl0KCkpcmV0dXJuITE7Y29uc3Qgcz1lLnBhcnQ7cmV0dXJuIShzPT09bnVsbHx8dGhpcy5zdGFydGluZz09PTImJiFzLmlzU2VsZWN0ZWR8fHRoaXMuc3RhcnRpbmc9PT0zJiZ0Lmxhc3RJbnB1dC5jbGlja0NvdW50PDIpfWRvU3RhcnQoKXtUZXh0RWRpdGluZ1Rvb2wuRGY9dGhpcyx0aGlzLnRleHRCbG9jayE9PW51bGwmJnRoaXMuZG9BY3RpdmF0ZSgpfWRvQWN0aXZhdGUoKXtpZih0aGlzLmlzQWN0aXZlKXJldHVybjtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0PT09bnVsbClyZXR1cm47bGV0IGk9dGhpcy50ZXh0QmxvY2s7aWYoaT09PW51bGwmJihpPXQuZmluZE9iamVjdEF0KHQubGFzdElucHV0LmRvY3VtZW50UG9pbnQpKSxpPT09bnVsbHx8IShpIGluc3RhbmNlb2YgVGV4dEJsb2NrKXx8KHRoaXMudGV4dEJsb2NrPWksaS5wYXJ0PT09bnVsbCkpcmV0dXJuO3QuYW5pbWF0aW9uTWFuYWdlci5zdG9wQW5pbWF0aW9uKCksdGhpcy5pc0FjdGl2ZT0hMCx0aGlzLnZ0PTI7bGV0IHM9dGhpcy5kZWZhdWx0VGV4dEVkaXRvcjtpLnRleHRFZGl0b3IhPT1udWxsJiYocz1pLnRleHRFZGl0b3IpLHRoaXMuQWU9dGhpcy50ZXh0QmxvY2suY29weSgpO2NvbnN0IG49bmV3IFJlY3QodGhpcy50ZXh0QmxvY2suZ2V0RG9jdW1lbnRQb2ludChTcG90LlRvcExlZnQpLHRoaXMudGV4dEJsb2NrLmdldERvY3VtZW50UG9pbnQoU3BvdC5Cb3R0b21SaWdodCkpO3Quc2Nyb2xsVG9SZWN0KG4pLHMhPT1udWxsJiZzLnNob3chPT1udWxsJiZzLnNob3coaSx0LHRoaXMpLHRoaXMuY3VycmVudFRleHRFZGl0b3I9c31kb0NhbmNlbCgpe3RoaXMuc3RvcFRvb2woKX1kb01vdXNlVXAoKXt0aGlzLmNhblN0YXJ0KCkmJnRoaXMuZG9BY3RpdmF0ZSgpfWRvTW91c2VEb3duKCl7dGhpcy5pc0FjdGl2ZSYmdGhpcy5hY2NlcHRUZXh0KDIpfWFjY2VwdFRleHQodCl7c3dpdGNoKHQpe2Nhc2UgMjp0aGlzLnZ0PT09Nj90aGlzLmN1cnJlbnRUZXh0RWRpdG9yIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQmJnRoaXMuY3VycmVudFRleHRFZGl0b3IuZm9jdXMoKToodGhpcy52dD09PTJ8fHRoaXMudnQ9PT01fHx0aGlzLnZ0PT09MykmJih0aGlzLnZ0PTQsdGhpcy5wQSgpKTticmVhaztjYXNlIDE6Y2FzZSA0OmNhc2UgMzppZih0PT09NCYmdGhpcy50ZXh0QmxvY2shPT1udWxsJiZ0aGlzLnRleHRCbG9jay5pc011bHRpbGluZT09PSEwKXJldHVybjsodGhpcy52dD09PTJ8fHRoaXMudnQ9PT01fHx0aGlzLnZ0PT09MykmJih0aGlzLnZ0PTQsdGhpcy5wQSgpKTticmVha319cEEoKXtjb25zdCB0PXRoaXMudGV4dEJsb2NrLGk9dGhpcy5kaWFncmFtLGU9dGhpcy5jdXJyZW50VGV4dEVkaXRvcjtpZih0IT09bnVsbCYmZSE9PW51bGwpe2NvbnN0IHM9dC50ZXh0O2xldCBuPVwiXCI7aWYoZS52YWx1ZUZ1bmN0aW9uIT09bnVsbCYmKG49ZS52YWx1ZUZ1bmN0aW9uKCkpLCF0aGlzLmlzVmFsaWRUZXh0KHQscyxuKSl7dGhpcy52dD01LHRoaXMuZG9FcnJvcihzLG4pO3JldHVybn10aGlzLnN0YXJ0VHJhbnNhY3Rpb24odGhpcy5uYW1lKSx0aGlzLnZ0PTYsdGhpcy50cmFuc2FjdGlvblJlc3VsdD10aGlzLm5hbWUsdC50ZXh0PW4sdGhpcy5kb1N1Y2Nlc3MocyxuKSxpIT09bnVsbCYmaS5PKFwiVGV4dEVkaXRlZFwiLHQscyksdGhpcy5zdG9wVHJhbnNhY3Rpb24oKSx0aGlzLnN0b3BUb29sKCksaSE9PW51bGwmJmkuZG9Gb2N1cygpfX1kb0Vycm9yKHQsaSl7Y29uc3QgZT10aGlzLnRleHRCbG9jaztpZihlPT09bnVsbClyZXR1cm47ZS5lcnJvckZ1bmN0aW9uIT09bnVsbCYmZS5lcnJvckZ1bmN0aW9uKHRoaXMsdCxpKTtjb25zdCBzPXRoaXMuY3VycmVudFRleHRFZGl0b3I7cyE9PW51bGwmJnMuc2hvdyE9PW51bGwmJnMuc2hvdyhlLHRoaXMuZGlhZ3JhbSx0aGlzKX1kb1N1Y2Nlc3ModCxpKXtjb25zdCBlPXRoaXMudGV4dEJsb2NrO2UhPT1udWxsJiZlLnRleHRFZGl0ZWQhPT1udWxsJiZlLnRleHRFZGl0ZWQoZSx0LGkpfWRvRGVhY3RpdmF0ZSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHQhPT1udWxsKXtpZih0aGlzLnZ0PTEsdGhpcy5jdXJyZW50VGV4dEVkaXRvciE9PW51bGwpe2NvbnN0IGk9dGhpcy5jdXJyZW50VGV4dEVkaXRvcjtpIT09bnVsbCYmaS5oaWRlIT09bnVsbCYmaS5oaWRlKHQsdGhpcyl9dGhpcy50ZXh0QmxvY2s9bnVsbCx0aGlzLmlzQWN0aXZlPSExfX1kb1N0b3AoKXtUZXh0RWRpdGluZ1Rvb2wuRGY9bnVsbH1CRih0KXtpZih0aGlzLmN1cnJlbnRUZXh0RWRpdG9yPT09bnVsbHx8dGhpcy5zdGF0ZT09PTEpcmV0dXJuO2NvbnN0IGk9dGhpcy56TTt0aGlzLnZ0PT09MiYmKHRoaXMudnQ9MyksVS5ydChpLnNlbGVjdCkmJnRoaXMuc2VsZWN0c1RleHRPbkFjdGl2YXRlJiYoaS5zZWxlY3QoKSxpLnNldFNlbGVjdGlvblJhbmdlKDAsOTk5OSkpfVZGKHQpe2lmKHRoaXMuY3VycmVudFRleHRFZGl0b3I9PT1udWxsfHx0aGlzLnN0YXRlPT09MSlyZXR1cm47Y29uc3QgaT10aGlzLnpNO1UucnQoaS5mb2N1cykmJmkuZm9jdXMoKSxVLnJ0KGkuc2VsZWN0KSYmdGhpcy5zZWxlY3RzVGV4dE9uQWN0aXZhdGUmJihpLnNlbGVjdCgpLGkuc2V0U2VsZWN0aW9uUmFuZ2UoMCw5OTk5KSl9aXNWYWxpZFRleHQodCxpLGUpe1UuZSh0LFRleHRCbG9jayxUZXh0RWRpdGluZ1Rvb2wsXCJpc1ZhbGlkVGV4dDp0ZXh0YmxvY2tcIik7Y29uc3Qgcz10aGlzLnRleHRWYWxpZGF0aW9uO2lmKHMhPT1udWxsJiYhcyh0LGksZSkpcmV0dXJuITE7Y29uc3Qgbj10LnRleHRWYWxpZGF0aW9uO3JldHVybiEobiE9PW51bGwmJiFuKHQsaSxlKSl9Z2V0IHRleHRWYWxpZGF0aW9uKCl7cmV0dXJuIHRoaXMuT2x9c2V0IHRleHRWYWxpZGF0aW9uKHQpe3QhPT1udWxsJiZVLlAodCxUZXh0RWRpdGluZ1Rvb2wsXCJ0ZXh0VmFsaWRhdGlvblwiKSx0aGlzLk9sPXR9Z2V0IG1pbmltdW1FZGl0b3JTY2FsZSgpe3JldHVybiB0aGlzLkVNfXNldCBtaW5pbXVtRWRpdG9yU2NhbGUodCl7dCE9PW51bGwmJlUuaSh0LFwibnVtYmVyXCIsVGV4dEVkaXRpbmdUb29sLFwibWluaW11bUVkaXRvclNjYWxlXCIpLHRoaXMuRU09dH1nZXQgc2VsZWN0c1RleHRPbkFjdGl2YXRlKCl7cmV0dXJuIHRoaXMuQk19c2V0IHNlbGVjdHNUZXh0T25BY3RpdmF0ZSh0KXt0IT09bnVsbCYmVS5pKHQsXCJib29sZWFuXCIsVGV4dEVkaXRpbmdUb29sLFwic2VsZWN0c1RleHRPbkFjdGl2YXRlXCIpLHRoaXMuQk09dH1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy52dH1zZXQgc3RhdGUodCl7dGhpcy52dCE9PXQmJihVLmoodCxUZXh0RWRpdGluZ1N0YXRlLFwiVGV4dEVkaXRpbmdTdGF0ZVwiKSx0aGlzLnZ0PXQpfW1lYXN1cmVUZW1wb3JhcnlUZXh0QmxvY2sodCl7Y29uc3QgaT10aGlzLkFlO3JldHVybiBpLnRleHQ9dCx0aGlzLnRleHRCbG9jayE9PW51bGwmJmkuZHQodGhpcy50ZXh0QmxvY2suRWwsMS8wKSxpfXN0YXRpYyBEZj1udWxsfXZhciBBbmltYXRpb25TdHlsZT0oeT0+KHlbeS5EZWZhdWx0PTFdPVwiRGVmYXVsdFwiLHlbeS5BbmltYXRlTG9jYXRpb25zPTJdPVwiQW5pbWF0ZUxvY2F0aW9uc1wiLHlbeS5Ob25lPTNdPVwiTm9uZVwiLHkpKShBbmltYXRpb25TdHlsZXx8e30pO2NsYXNzIEFuaW1hdGlvbk1hbmFnZXJ7QztMaTtYaTtQcjtxbjtUbztYTTtZTTtUbTtiaTtGZjtjbjtEbTtRaDtneDtGbTtteDtSZjtNdTtSbTtjb25zdHJ1Y3Rvcih0KXt0aGlzLkM9RGlhZ3JhbS53bSgpLHRoaXMuTGk9ITEsdGhpcy5UbT0hMSx0aGlzLmJpPSExLHRoaXMuRmY9ITEsdGhpcy5teD0hMCx0aGlzLlJmPTEsdGhpcy5NdT0hMSx0aGlzLlhpPSEwLHRoaXMuUHI9ITAsdGhpcy5Ubz02MDAsdGhpcy5YTT0hMSx0aGlzLllNPSExLHRoaXMucW49bmV3IEdTZXQsdGhpcy5jbj1uZXcgQW5pbWF0aW9uLHRoaXMuRG09bmV3IEFuaW1hdGlvbix0aGlzLmNuLndzPXRoaXMsdGhpcy5RaD1uZXcgR1NldCx0aGlzLmd4PW5ldyBHU2V0LHRoaXMuRm09bmV3IEdTZXQsdGhpcy5SbT1uZXcgR1NldCx0JiZPYmplY3QuYXNzaWduKHRoaXMsdCl9RG8odCl7dGhpcy5DPXR9QUUoKXtyZXR1cm4gdGhpcy5DfWNhblN0YXJ0KHQpe3JldHVybiEwfUJsKHQpe3JldHVybiF0aGlzLlhpfHwhdGhpcy5jYW5TdGFydCh0KT8hMToodGhpcy5xbi5hZGQodCksdGhpcy5kZWZhdWx0QW5pbWF0aW9uLmlzQW5pbWF0aW5nJiZ0aGlzLnN0b3BBbmltYXRpb24oKSx0aGlzLkMuVGkoKSx0aGlzLmJpPSEwLCEwKX1nZXRCdW5kbGVBbmltYXRpb24oKXtyZXR1cm4gdGhpcy5EbX1LTSgpe2lmKCF0aGlzLlhpfHwodGhpcy5EbS5nZS5jb3VudD4wJiZ0aGlzLkRtLnN0YXJ0KCksIXRoaXMuYmkpKXJldHVybjtjb25zdCB0PXRoaXMuY24saT10aGlzLkMsZT10aGlzLnFuLmhhcyhcIk1vZGVsXCIpO2lmKGUmJih0aGlzLkZmPSEwLHRoaXMuUmY9PT0xPyh0LmlzVmlld3BvcnRVbmNvbnN0cmFpbmVkPSEwLHQuZ2UuY2xlYXIoKSx0LmFkZChpLFwicG9zaXRpb25cIixpLnBvc2l0aW9uLmNvcHkoKS5vZmZzZXQoMCwtMjAwKSxpLnBvc2l0aW9uKSx0LmFkZChpLFwib3BhY2l0eVwiLDAsMSkpOnRoaXMuUmY9PT0zJiZ0LmdlLmNsZWFyKCksdGhpcy5SZj09PTImJmkueXguZXF1YWxzKGkuZ3QpP3RoaXMubXg9ITA6dGhpcy5teD0hMSxpLk8oXCJJbml0aWFsQW5pbWF0aW9uU3RhcnRpbmdcIix0aGlzKSksZSYmIXRoaXMuUHJ8fHQuZ2UuY291bnQ9PT0wKXt0aGlzLnFuLmNsZWFyKCksdGhpcy5iaT0hMSx0LmdlLmNsZWFyKCksdC53eChpKSx0aGlzLkZmPSExLGkuTCgpO3JldHVybn10aGlzLnFuLmNsZWFyKCksaS5Ocj0hMTtjb25zdCBzPXQuZ2UuZ2V0KGkpO2kuYXV0b1NjYWxlIT09MSYmcyE9PW51bGwmJihkZWxldGUgcy5saS5zY2FsZSxkZWxldGUgcy54cy5zY2FsZSk7Y29uc3Qgbj10aGlzO3Jvb3QucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpPT57bi5iaT09PSExfHx0LkxpfHwoaS5nZXRSZW5kZXJpbmdIaW50KFwidGVtcG9yYXJ5UGl4ZWxSYXRpb1wiKSYmaS52dygpLGkuVU0oKSxuLmJpPSExLHQuc3RhcnQoKSx0LkxpJiYobi5DdSgpLGkuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdC55QSgwKSxpLnhyKCEwKSxuLkF1KCksaS5PKFwiQW5pbWF0aW9uU3RhcnRpbmdcIixuKSkpfSl9R00oKXtyZXR1cm4gdGhpcy5xbi5oYXMoXCJUcmlnZ2VyXCIpJiZ0aGlzLnFuLmNvdW50PT09MX13QSh0LGksZSxzKXt0aGlzLmlzVGlja2luZ3x8dGhpcy5HTSgpfHx0IGluc3RhbmNlb2YgTGluayYmKHQuZnJvbU5vZGUhPT1udWxsfHx0LnRvTm9kZSE9PW51bGwpfHx0aGlzLmNuLmFkZCh0LFwicG9zaXRpb25cIixpLGUscyl9eHgodCl7cmV0dXJuIHRoaXMuY24ueHgodCl9SE0odCl7cmV0dXJuIHRoaXMuY24uSE0odCl9ekYodCl7Y29uc3QgaT10aGlzLlFoLGU9dGhpcztmdW5jdGlvbiBzKCl7aWYoZS5GbS5jb3VudD4wJiYoaS5hZGRBbGwoZS5GbSksZS5GbS5jbGVhcigpLGUuTGk9ITApLGUuTGk9PT0hMXx8aS5jb3VudD09PTApcmV0dXJuO2UuZ3guYWRkQWxsKGkpO2NvbnN0IG49ZS5neC5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28uTGkhPT0hMSYmKG8uWEYoKT9vLnhBKCExKTpvLklmPSEwKX1pZihlLmd4LmNsZWFyKCksZS5MaT09PSExKXtyb290LnJlcXVlc3RBbmltYXRpb25GcmFtZShzKTtyZXR1cm59ZS5DdSgpLGUuQy54cigpLGUuQXUoKSxyb290LnJlcXVlc3RBbmltYXRpb25GcmFtZShzKX10aGlzLkxpP3RoaXMuWUYodCk6KHRoaXMuTGk9ITAsaS5hZGQodCkscm9vdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCk9PnMoKSkpfVlGKHQpe3RoaXMuRm0uYWRkKHQpfUtGKCl7Y29uc3QgdD10aGlzLlFoLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXQudmFsdWUuSWY9ITF9Q3UoKXtpZih0aGlzLlRtKXJldHVybjtjb25zdCB0PXRoaXMuQzt0aGlzLlhNPXQuc2tpcHNVbmRvTWFuYWdlcix0aGlzLllNPXQubWUsdC5za2lwc1VuZG9NYW5hZ2VyPSEwLHQubWU9ITAsdGhpcy5UbT0hMH1BdSgpe2NvbnN0IHQ9dGhpcy5DO3Quc2tpcHNVbmRvTWFuYWdlcj10aGlzLlhNLHQubWU9dGhpcy5ZTSx0aGlzLlRtPSExfXN0b3BBbmltYXRpb24odCl7Y29uc3QgaT10aGlzLmNuO2lmKHRoaXMuYmk9PT0hMCYmKHRoaXMuYmk9ITEsdGhpcy5GZj0hMSx0aGlzLnFuLmNsZWFyKCksaS5VRigpJiZ0aGlzLkMucmVxdWVzdFVwZGF0ZSgpKSwhdGhpcy5MaSl7aS5nZS5jbGVhcigpLGkud3godGhpcy5DKTtyZXR1cm59aWYoaS5MdSghMCksaS53eChudWxsKSx0PT09ITApe2NvbnN0IGU9dGhpcy5RaC50b0FycmF5KCk7Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspZVtzXS5MdSghMCl9fUx1KHQpe3RoaXMuUWguZGVsZXRlKHQpLHRoaXMuUWguY291bnQ9PT0wJiYodGhpcy5MaT0hMSx0aGlzLkMucmVxdWVzdFVwZGF0ZSgpKSx0PT09dGhpcy5kZWZhdWx0QW5pbWF0aW9uJiZ0aGlzLkMuTyhcIkFuaW1hdGlvbkZpbmlzaGVkXCIsdGhpcyl9T2YodCxpKXt0aGlzLmJpJiYoIXRoaXMucW4uaGFzKFwiRXhwYW5kIFRyZWVcIikmJiF0aGlzLnFuLmhhcyhcIkV4cGFuZCBTdWJHcmFwaFwiKXx8KHRoaXMuY24uT2YodCxpKSx0aGlzLmJBKHQpKSl9RWYodCxpKXt0aGlzLmJpJiYoIXRoaXMucW4uaGFzKFwiQ29sbGFwc2UgVHJlZVwiKSYmIXRoaXMucW4uaGFzKFwiQ29sbGFwc2UgU3ViR3JhcGhcIil8fCh0aGlzLmNuLkVmKHQsaSksdGhpcy5jbi5xTShpLFwicG9zaXRpb25cIixpLnBvc2l0aW9uLGkucG9zaXRpb24pLHRoaXMuYkEodCkpKX1rQSh0LGkpeyF0aGlzLmJpfHx0LmVxdWFscyhpKXx8dGhpcy5HTSgpfHwodGhpcy5DLnFofHwodD1pLmNvcHkoKSksdGhpcy5jbi5xTSh0aGlzLkMsXCJwb3NpdGlvblwiLHQsaSkpfVNBKHQsaSl7dGhpcy5iaSYmKHRoaXMuR00oKXx8dGhpcy5jbi5hZGQodGhpcy5DLFwic2NhbGVcIix0LGkpKX1XTSh0LGkpe3QuTGUmJih0LkNyPWksdGhpcy5SbS5hZGQodCkpfWJBKHQpe2NvbnN0IGk9dC5maW5kTGlua3NDb25uZWN0ZWQoKTtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO2UuTGUmJihlLkNyPWUucG9pbnRzLmNvcHkoKSx0aGlzLlJtLmFkZChlKSl9fWdldCBpc0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5YaX1zZXQgaXNFbmFibGVkKHQpe1UuaSh0LFwiYm9vbGVhblwiLEFuaW1hdGlvbk1hbmFnZXIsXCJpc0VuYWJsZWRcIiksdGhpcy5YaT10LHQmJnRoaXMuUWguZWFjaChpPT57IWkuaXNBbmltYXRpbmcmJmkucnVuQ291bnQ9PT0xLzAmJmkuc3RhcnQoKX0pfWdldCBkdXJhdGlvbigpe3JldHVybiB0aGlzLlRvfXNldCBkdXJhdGlvbih0KXtVLmkodCxcIm51bWJlclwiLEFuaW1hdGlvbk1hbmFnZXIsXCJkdXJhdGlvblwiKSx0PDEmJlUuVSh0LFwiPj0gMVwiLEFuaW1hdGlvbk1hbmFnZXIsXCJkdXJhdGlvblwiKSx0aGlzLlRvPXR9Z2V0IGlzQW5pbWF0aW5nKCl7cmV0dXJuIHRoaXMuTGl9Z2V0IGlzVGlja2luZygpe3JldHVybiB0aGlzLlRtfWdldCBpc0luaXRpYWwoKXtyZXR1cm4gdGhpcy5Qcn1zZXQgaXNJbml0aWFsKHQpe1UuaSh0LFwiYm9vbGVhblwiLEFuaW1hdGlvbk1hbmFnZXIsXCJpc0luaXRpYWxcIiksdGhpcy5Qcj10fWdldCBkZWZhdWx0QW5pbWF0aW9uKCl7cmV0dXJuIHRoaXMuY259Z2V0IGFjdGl2ZUFuaW1hdGlvbnMoKXtyZXR1cm4gdGhpcy5RaH1nZXQgaW5pdGlhbEFuaW1hdGlvblN0eWxlKCl7cmV0dXJuIHRoaXMuUmZ9c2V0IGluaXRpYWxBbmltYXRpb25TdHlsZSh0KXtEZWJ1ZyYmVS5qKHQsQW5pbWF0aW9uU3R5bGUsXCJBbmltYXRpb25TdHlsZVwiKSx0aGlzLlJmPXR9c3RhdGljIGJ4PW5ldyBHTWFwO3N0YXRpYyBkZWZpbmVBbmltYXRpb25FZmZlY3QodCxpKXtBbmltYXRpb25NYW5hZ2VyLmJ4LnNldCh0LGkpfXN0YXRpYyBqTSh0LGksZSxzLG4pe3Q9PT1udWxsJiYodD1bMCwwLDAsMF0pLGk9PT1udWxsJiYoaT1bMCwwLDAsMF0pO2xldCBvPXRbMF0scj10WzFdO2NvbnN0IGw9dFsyXSxoPXRbM107bGV0IGY9aVswXSxhPWlbMV07Y29uc3QgYz1pWzJdLHU9aVszXTtsPT09MHx8bD09PTEwMD8obz1mLHI9YSk6KGM9PT0wfHxjPT09MTAwKSYmKGY9byxhPXIpLE1hdGguYWJzKGYtbyk+MTgwJiYoZj5vP28rPTM2MDpmKz0zNjApO2NvbnN0IGQ9bihlLG8sZi1vLHMpJTM2MCxtPW4oZSxyLGEtcixzKSxnPW4oZSxsLGMtbCxzKSxwPW4oZSxoLHUtaCxzKTtyZXR1cm5cImhzbGEoXCIrZCtcIiwgXCIrbStcIiUsIFwiK2crXCIlLCBcIitwK1wiKVwifXN0YXRpYyBEZWZhdWx0PTE7c3RhdGljIEFuaW1hdGVMb2NhdGlvbnM9MjtzdGF0aWMgTm9uZT0zfXtjb25zdCB5PUFuaW1hdGlvbk1hbmFnZXIuYngsdD0oaSxlLHMsbixvLHIpPT57aS5wb3NpdGlvbj1uZXcgUG9pbnQobihvLGUueCxzLngtZS54LHIpLG4obyxlLnkscy55LWUueSxyKSl9O3kuc2V0KFwicG9zaXRpb246ZGlhZ3JhbVwiLHQpLHkuc2V0KFwicG9zaXRpb25cIix0KSx5LnNldChcInBvc2l0aW9uOnBhcnRcIiwoaSxlLHMsbixvLHIpPT57bzxyP2kuTGYobihvLGUueCxzLngtZS54LHIpLG4obyxlLnkscy55LWUueSxyKSwhMSk6aS5wb3NpdGlvbj1uZXcgUG9pbnQobihvLGUueCxzLngtZS54LHIpLG4obyxlLnkscy55LWUueSxyKSl9KSx5LnNldChcImxvY2F0aW9uXCIsKGksZSxzLG4sbyxyKT0+e288cj9pLkxmKG4obyxlLngscy54LWUueCxyKSxuKG8sZS55LHMueS1lLnksciksITApOmkubG9jYXRpb249bmV3IFBvaW50KG4obyxlLngscy54LWUueCxyKSxuKG8sZS55LHMueS1lLnkscikpfSkseS5zZXQoXCJwb3NpdGlvbjpwbGFjZWhvbGRlclwiLChpLGUscyxuLG8scik9PntvPHI/aS5MZihuKG8sZS54LHMueC1lLngsciksbihvLGUueSxzLnktZS55LHIpLCExKTppLnBvc2l0aW9uPW5ldyBQb2ludChuKG8sZS54LHMueC1lLngsciksbihvLGUueSxzLnktZS55LHIpKX0pLHkuc2V0KFwicG9zaXRpb246bm9kZUNvbGxhcHNlXCIsKGksZSxzLG4sbyxyKT0+e2NvbnN0IGw9aS5hY3R1YWxCb3VuZHMsaD1zLmFjdHVhbEJvdW5kcyxmPWgueCtoLndpZHRoLzItbC53aWR0aC8yLGE9aC55K2guaGVpZ2h0LzItbC5oZWlnaHQvMjtvPHI/aS5MZihuKG8sZS54LGYtZS54LHIpLG4obyxlLnksYS1lLnksciksITEpOmkucG9zaXRpb249bmV3IFBvaW50KG4obyxlLngsZi1lLngsciksbihvLGUueSxhLWUueSxyKSl9KSx5LnNldChcImRlc2lyZWRTaXplXCIsKGksZSxzLG4sbyxyKT0+e2kuZGVzaXJlZFNpemU9bmV3IFNpemUobihvLGUud2lkdGgscy53aWR0aC1lLndpZHRoLHIpLG4obyxlLmhlaWdodCxzLmhlaWdodC1lLmhlaWdodCxyKSl9KSx5LnNldChcIndpZHRoXCIsKGksZSxzLG4sbyxyKT0+e2kud2lkdGg9bihvLGUscy1lLHIpfSkseS5zZXQoXCJoZWlnaHRcIiwoaSxlLHMsbixvLHIpPT57aS5oZWlnaHQ9bihvLGUscy1lLHIpfSkseS5zZXQoXCJmaWxsXCIsKGksZSxzLG4sbyxyKT0+e2kuZmlsbD1BbmltYXRpb25NYW5hZ2VyLmpNKGUscyxvLHIsbil9KSx5LnNldChcInN0cm9rZVwiLChpLGUscyxuLG8scik9PntpLnN0cm9rZT1BbmltYXRpb25NYW5hZ2VyLmpNKGUscyxvLHIsbil9KSx5LnNldChcInN0cm9rZVdpZHRoXCIsKGksZSxzLG4sbyxyKT0+e2kuc3Ryb2tlV2lkdGg9bihvLGUscy1lLHIpfSkseS5zZXQoXCJzdHJva2VEYXNoT2Zmc2V0XCIsKGksZSxzLG4sbyxyKT0+e2kuc3Ryb2tlRGFzaE9mZnNldD1uKG8sZSxzLWUscil9KSx5LnNldChcImJhY2tncm91bmRcIiwoaSxlLHMsbixvLHIpPT57aS5iYWNrZ3JvdW5kPUFuaW1hdGlvbk1hbmFnZXIuak0oZSxzLG8scixuKX0pLHkuc2V0KFwib3BhY2l0eVwiLChpLGUscyxuLG8scik9PntpLm9wYWNpdHk9bihvLGUscy1lLHIpfSkseS5zZXQoXCJzY2FsZVwiLChpLGUscyxuLG8scik9PntpLnNjYWxlPW4obyxlLHMtZSxyKX0pLHkuc2V0KFwiYW5nbGVcIiwoaSxlLHMsbixvLHIpPT57aS5hbmdsZT1uKG8sZSxzLWUscil9KX1jbGFzcyBBbmltYXRpb257a3g7SW07TGk7VHU7VG87YnM7TUE7QmY7Z2U7U3g7bGk7V247RHU7VmY7TXg7UHg7SWY7dk07Tng7d3M7QztKTTskTTtaTTtjb25zdHJ1Y3Rvcih0KXt0aGlzLkM9bnVsbCx0aGlzLndzPW51bGwsdGhpcy52TT1udWxsLHRoaXMuTng9bnVsbCx0aGlzLkpNPSExLHRoaXMuTGk9ITEsdGhpcy5JZj0hMSx0aGlzLmxpPTAsdGhpcy5Xbj0wLHRoaXMua3g9QW5pbWF0aW9uLkVhc2VJbk91dFF1YWQsdGhpcy5JbT1BbmltYXRpb24uRWFzZUluT3V0UXVhZCx0aGlzLkR1PSExLHRoaXMuVmY9ITEsdGhpcy5NeD0xLHRoaXMuUHg9MCx0aGlzLlRvPU5hTix0aGlzLmJzPU5hTix0aGlzLiRNPTAsdGhpcy5UdT1udWxsLHRoaXMuTUE9UG9pbnQuTm8sdGhpcy5nZT1uZXcgR01hcCx0aGlzLlN4PW5ldyBHTWFwLHRoaXMuQmY9bmV3IEdTZXQsdGhpcy5aTT0xLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1zdXNwZW5kKCl7dGhpcy5JZj0hMH1hZHZhbmNlVG8odCxpKXtpJiYodGhpcy5JZj0hMSksdGhpcy5EdSYmdD49dGhpcy5icyYmKHRoaXMuVmY9ITAsdD10LXRoaXMuYnMpLHRoaXMuJE09dCx0aGlzLnhBKCEwKSx0aGlzLndzLkN1KCksdGhpcy5DLnhyKCksdGhpcy53cy5BdSgpLHRoaXMuQy5yZWRyYXcoKX13eCh0KXtpZih0aGlzLlN4LmNsZWFyKCksdGhpcy5WZj0hMSx0aGlzLlB4PTAsdGhpcy5icz1OYU4sdGhpcy5CZi5jb3VudD4wJiZ0aGlzLkJmLmNsZWFyKCksdCE9PW51bGwpe2NvbnN0IGk9dC5saW5rcztmb3IoO2kubmV4dCgpOylpLnZhbHVlLkNyPW51bGx9fVVGKCl7cmV0dXJuIHRoaXMuZ2UuY291bnQ+MH1zdGFydCgpe2lmKHRoaXMuZ2UuY291bnQ9PT0wKXJldHVybiB0aGlzO2lmKHRoaXMuTGkpcmV0dXJuIHRoaXM7bGV0IHQ9dGhpcy5DO2NvbnN0IGk9dGhpcy5nZS5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3Qgcz1pLmtleTt0PT09bnVsbCYmKHMgaW5zdGFuY2VvZiBEaWFncmFtP3Q9czpzIGluc3RhbmNlb2YgR3JhcGhPYmplY3QmJih0PXMuZGlhZ3JhbSkpfWlmKHQhPT1udWxsKXRoaXMuQz10LHRoaXMud3M9dC5hbmltYXRpb25NYW5hZ2VyO2Vsc2UgcmV0dXJuIHRoaXM7Y29uc3QgZT10aGlzLndzO3JldHVybiBlLmlzRW5hYmxlZD09PSExP3RoaXM6KHRoaXMuYnM9aXNOYU4odGhpcy5Ubyk/ZS5kdXJhdGlvbjp0aGlzLlRvLHRoaXMuSW09dGhpcy5reCxlLkZmJiZlLlJmPT09MSYmdGhpcz09PWUuZGVmYXVsdEFuaW1hdGlvbiYmKHRoaXMuSW09QW5pbWF0aW9uLkVhc2VPdXRFeHBvLHRoaXMuYnM9aXNOYU4odGhpcy5Ubyk/ZS5kdXJhdGlvbj09PTYwMD85MDA6ZS5kdXJhdGlvbjp0aGlzLlRvKSx0aGlzLlpNPXQuc2Nyb2xsTW9kZSx0aGlzLmlzVmlld3BvcnRVbmNvbnN0cmFpbmVkJiYodC5faD0yKSxlLkN1KCksdGhpcy5CZi5lYWNoKHM9PntzLmRhdGE9bnVsbCx0LmFkZChzKX0pLGUuQXUoKSx0aGlzLkxpPSEwLHRoaXMubGk9K25ldyBEYXRlLHRoaXMuV249dGhpcy5saSt0aGlzLmJzLGUuekYodGhpcyksdGhpcyl9YWRkVGVtcG9yYXJ5UGFydCh0LGkpe3JldHVybiB0LkNlKCk/KERlYnVnJiYoaT09PXZvaWQgMCYmVS5uKFwiYWRkVGVtcG9yYXJ5UGFydDogUmVxdWlyZWQgRGlhZ3JhbSBhcmd1bWVudCBtaXNzaW5nXCIpLHQuZGlhZ3JhbT09PWkmJlUubihcImFkZFRlbXBvcmFyeVBhcnQ6IFBhcnQgYWxyZWFkeSBpbiBEaWFncmFtLCBkaWQgeW91IG1lYW4gdG8gcGFzcyBpbiBhIGNvcHk/XCIpLHRoaXMuQyE9PW51bGwmJnRoaXMuQyE9PWkmJlUubihcImFkZFRlbXBvcmFyeVBhcnQ6IEEgZGlmZmVyZW50IERpYWdyYW0gaXMgYWxyZWFkeSBhc3NvY2lhdGVkIHdpdGggdGhpcyBBbmltYXRpb246IFwiK3RoaXMuQy50b1N0cmluZygpKSksdGhpcy5CZi5hZGQodCksdGhpcy5DPWksdGhpcyk6dGhpc31hZGQodCxpLGUscyxuKXtpZih0aGlzLkM9PT1udWxsJiYodCBpbnN0YW5jZW9mIERpYWdyYW0/dGhpcy5DPXQ6dCBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0JiZ0LmRpYWdyYW0hPT1udWxsJiYodGhpcy5DPXQuZGlhZ3JhbSkpLHQgaW5zdGFuY2VvZiBQYXJ0KXtpZighdC5pc0FuaW1hdGVkKXJldHVybiB0aGlzO2k9PT1cInBvc2l0aW9uXCImJihpPVwicG9zaXRpb246cGFydFwiKX1yZXR1cm4gdGhpcy5xTSh0LGksZSxzLG4pLHRoaXN9cU0odCxpLGUscyxuKXtjb25zdCBvPXRoaXMuZ2U7bGV0IHIsbCxoO2lmKHQgaW5zdGFuY2VvZiBEaWFncmFtJiZpPT09XCJwb3NpdGlvblwiJiYoaT1cInBvc2l0aW9uOmRpYWdyYW1cIiksKGk9PT1cImZpbGxcInx8aT09PVwic3Ryb2tlXCJ8fGk9PT1cImJhY2tncm91bmRcIikmJihCcnVzaC5GbyhlKSxCcnVzaC5RTSgpLGU9W0JydXNoLllpLm4wLEJydXNoLllpLm4xLEJydXNoLllpLm4yLEJydXNoLllpLm4zXSxCcnVzaC5GbyhzKSxCcnVzaC5RTSgpLHM9W0JydXNoLllpLm4wLEJydXNoLllpLm4xLEJydXNoLllpLm4yLEJydXNoLllpLm4zXSksby5oYXModCkpcj1vLmdldCh0KSxsPXIubGksaD1yLnhzLGxbaV09PT12b2lkIDAmJihsW2ldPXRoaXMuRnUoZSkpLGhbaV09dGhpcy5GdShzKTtlbHNle2lmKGk9PT1cInBvc2l0aW9uXCImJmUuZXF1YWxzQXBwcm94KHMpKXJldHVybjtsPXt9LGg9e30sbFtpXT10aGlzLkZ1KGUpLGhbaV09dGhpcy5GdShzKSxyPW5ldyBBbmltYXRpb25TdGF0ZShsLGgsbiksby5zZXQodCxyKX1jb25zdCBmPWxbaV07ZiBpbnN0YW5jZW9mIFBvaW50JiYhZi5pc1JlYWwoKSYmZi5jKHRoaXMuTUEpLG4mJmkuaW5kZXhPZihcInBvc2l0aW9uOlwiKT09PTAmJnQgaW5zdGFuY2VvZiBQYXJ0P3IuQ3gubG9jYXRpb249dGhpcy5GdSh0LmxvY2F0aW9uKTpuJiYoci5DeFtpXT10aGlzLkZ1KGUpKX1GdSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFBvaW50fHx0IGluc3RhbmNlb2YgU2l6ZT90LmNvcHkoKTp0fUdGKHQpe2NvbnN0IGk9dGhpcy5nZTtpZihpLmhhcyh0KSl7Y29uc3QgZT1pLmdldCh0KTtlLkF4PSEwfX14eCh0KXtpZighdGhpcy5MaSlyZXR1cm4hMTtjb25zdCBpPXRoaXMuZ2UuZ2V0KHQpO3JldHVybiBpIT09bnVsbCYmaS5BeH1ITSh0KXtpZighdGhpcy5MaSlyZXR1cm4hMTtjb25zdCBpPXRoaXMuZ2UuZ2V0KHQpO3JldHVybiBpIT09bnVsbCYmISEoaS5saS5wb3NpdGlvbnx8aS5saVtcInBvc2l0aW9uOnBhcnRcIl18fGkubGkubG9jYXRpb24pfVhGKCl7aWYodGhpcy5CZi5jb3VudD4wKXJldHVybiEwO2NvbnN0IHQ9dGhpcy5nZS5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl7Y29uc3QgaT10LmtleTtpZihpIGluc3RhbmNlb2YgR3JhcGhPYmplY3QmJmkuZGlhZ3JhbSE9PW51bGx8fGkgaW5zdGFuY2VvZiBEaWFncmFtKXJldHVybiEwfXJldHVybiExfXhBKHQpe2lmKHRoaXMuSWYmJiF0KXJldHVybjtjb25zdCBpPXRoaXMud3M7aWYodGhpcy5MaT09PSExKXJldHVybjtjb25zdCBlPStuZXcgRGF0ZTtsZXQgcz1lPnRoaXMuV24/dGhpcy5iczplLXRoaXMubGk7dCYmKHM9dGhpcy4kTSxzPHRoaXMuYnM/KHRoaXMubGk9K25ldyBEYXRlLXMsdGhpcy5Xbj10aGlzLmxpK3RoaXMuYnMpOnM9dGhpcy5icyksaS5DdSgpLHRoaXMueUEocyksdGhpcy5DLnhyKCEwKSxpLkF1KCksZT50aGlzLlduJiYodGhpcy5EdSYmIXRoaXMuVmY/KHRoaXMubGk9K25ldyBEYXRlLHRoaXMuV249dGhpcy5saSt0aGlzLmJzLHRoaXMuVmY9ITApOnRoaXMuTHUoITEpKX15QSh0KXtjb25zdCBpPXRoaXMuYnMsZT10aGlzLmdlLml0ZXJhdG9yLHM9dGhpcy5WZjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgbj1lLmtleTtpZihuIGluc3RhbmNlb2YgR3JhcGhPYmplY3QmJm4uZGlhZ3JhbT09PW51bGwpY29udGludWU7Y29uc3Qgbz1lLnZhbHVlLHI9cz9vLnhzOm8ubGksbD1zP28ubGk6by54cyxoPUFuaW1hdGlvbk1hbmFnZXIuYng7Zm9yKGNvbnN0IGYgaW4gbClmPT09XCJwb3NpdGlvblwiJiYobFtcInBvc2l0aW9uOnBsYWNlaG9sZGVyXCJdfHxsW1wicG9zaXRpb246bm9kZUNvbGxhcHNlXCJdKXx8aC5nZXQoZikhPT1udWxsJiZoLmdldChmKShuLHJbZl0sbFtmXSx0aGlzLkltLHQsaSx0aGlzKX19c3RvcCgpe3JldHVybiB0aGlzLkxpPyh0aGlzLkx1KCEwKSx0aGlzKTp0aGlzfUx1KHQpe2lmKHRoaXMuTnghPT1udWxsJiZ0aGlzLk54LkhGKHRoaXMudk0pLCF0aGlzLkxpKXJldHVybjtjb25zdCBpPXRoaXMuQyxlPXRoaXMud3M7ZS5GZj0hMSx0aGlzLkxpPSExLHRoaXMuSWY9ITEsZS5DdSgpO2NvbnN0IHM9dGhpcy5nZSxuPXRoaXMuQmYuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspaS5yZW1vdmUobi52YWx1ZSk7Y29uc3Qgbz10aGlzLkR1LHI9cy5pdGVyYXRvcixsPUFuaW1hdGlvbk1hbmFnZXIuYng7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGY9ci5rZXksYT1yLnZhbHVlLGM9bz9hLnhzOmEubGksdT1vP2EubGk6YS54cyxkPWEuQ3g7Zm9yKGNvbnN0IG0gaW4gdSlpZihsLmdldChtKSE9PW51bGwpe2xldCBnPW07YS5MeCYmKGc9PT1cInBvc2l0aW9uOm5vZGVDb2xsYXBzZVwifHxnPT09XCJwb3NpdGlvbjpwbGFjZWhvbGRlclwiKSYmKGc9XCJwb3NpdGlvblwiKSxsLmdldChnKShmLGNbbV0sZFttXSE9PXZvaWQgMD9kW21dOmEuTHg/Y1ttXTp1W21dLHRoaXMuSW0sdGhpcy5icyx0aGlzLmJzLHRoaXMpfWEuTHgmJmQubG9jYXRpb24hPT12b2lkIDAmJmYgaW5zdGFuY2VvZiBQYXJ0JiYoZi5sb2NhdGlvbj1kLmxvY2F0aW9uKSxhLkF4JiZmIGluc3RhbmNlb2YgUGFydCYmZi5LaSghMSl9dGhpcy5QeCsrO2NvbnN0IGg9IXQmJnRoaXMuTXg+dGhpcy5QeDtpZighaCYmKHRoaXM9PT1lLkRtfHx0aGlzPT09ZS5kZWZhdWx0QW5pbWF0aW9uKSYmdGhpcy5nZS5jbGVhcigpLGkuVHguY2xlYXIoKSxpLklTKCExKSxpLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLGkuTCgpLGkueHIoITApLGUuZGVmYXVsdEFuaW1hdGlvbj09PXRoaXMpe2NvbnN0IGY9ZS5SbS5pdGVyYXRvcjtmb3IoO2YubmV4dCgpOylmLnZhbHVlLnFGKCk7ZS5SbS5jbGVhcigpfWlmKGkueHIoITApLHRoaXMuaXNWaWV3cG9ydFVuY29uc3RyYWluZWQmJihpLnNjcm9sbE1vZGU9dGhpcy5aTSksZS5BdSgpLGgpe3RoaXMuVmY9ITEsdGhpcy5zdGFydCgpO3JldHVybn10aGlzLnd4KG51bGwpLGkuUEEoKSxlLkx1KHRoaXMpLHRoaXMuVHUmJnRoaXMuVHUodGhpcyksaS5yZXF1ZXN0VXBkYXRlKCl9T2YodCxpKXtjb25zdCBlPWkuYWN0dWFsQm91bmRzO2xldCBzPW51bGw7aWYoaSBpbnN0YW5jZW9mIEdyb3VwJiYocz1pLnBsYWNlaG9sZGVyKSxzIT09bnVsbCYmcy52aXNpYmxlKXtjb25zdCBuPXMuZ2V0RG9jdW1lbnRQb2ludChTcG90LlRvcExlZnQpLG89cy5wYWRkaW5nO24ueCs9by5sZWZ0LG4ueSs9by50b3AsdGhpcy5hZGQodCxcInBvc2l0aW9uXCIsbix0LnBvc2l0aW9uLCExKX1lbHNlIHRoaXMuYWRkKHQsXCJwb3NpdGlvblwiLG5ldyBQb2ludChlLngrZS53aWR0aC8yLGUueStlLmhlaWdodC8yKSx0LnBvc2l0aW9uLCExKTt0aGlzLmFkZCh0LFwic2NhbGVcIiwuMDEsdC5zY2FsZSwhMSksdCBpbnN0YW5jZW9mIEdyb3VwJiZ0aGlzLldGKHQsaSl9V0YodCxpKXtjb25zdCBlPXQubWVtYmVyUGFydHM7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtzIGluc3RhbmNlb2YgTm9kZSYmdGhpcy5PZihzLGkpfX1FZih0LGkpe2lmKCF0LmlzVmlzaWJsZSgpKXJldHVybjtsZXQgZT1udWxsO2lmKGkgaW5zdGFuY2VvZiBHcm91cCYmKGU9aS5wbGFjZWhvbGRlciksZSE9PW51bGwmJmUudmlzaWJsZSl7Y29uc3Qgcz1lLmdldERvY3VtZW50UG9pbnQoU3BvdC5Ub3BMZWZ0KSxuPWUucGFkZGluZztzLngrPW4ubGVmdCxzLnkrPW4udG9wLHRoaXMuYWRkKHQsXCJwb3NpdGlvbjpwbGFjZWhvbGRlclwiLHQucG9zaXRpb24scywhMCl9ZWxzZSB0aGlzLmFkZCh0LFwicG9zaXRpb246bm9kZUNvbGxhcHNlXCIsdC5wb3NpdGlvbixpLCEwKTt0aGlzLmFkZCh0LFwic2NhbGVcIix0LnNjYWxlLC4wMSwhMCksdGhpcy5HRih0KSx0IGluc3RhbmNlb2YgR3JvdXAmJnRoaXMuakYodCxpKX1qRih0LGkpe2NvbnN0IGU9dC5tZW1iZXJQYXJ0cztmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO3MgaW5zdGFuY2VvZiBOb2RlJiZ0aGlzLkVmKHMsaSl9fWdldCBkdXJhdGlvbigpe3JldHVybiB0aGlzLlRvfXNldCBkdXJhdGlvbih0KXtVLmkodCxcIm51bWJlclwiLEFuaW1hdGlvbixcImR1cmF0aW9uXCIpLHQ8MSYmVS5VKHQsXCI+PSAxXCIsQW5pbWF0aW9uLFwiZHVyYXRpb25cIiksdGhpcy5Ubz10fWdldCByZXZlcnNpYmxlKCl7cmV0dXJuIHRoaXMuRHV9c2V0IHJldmVyc2libGUodCl7dGhpcy5EdT10fWdldCBydW5Db3VudCgpe3JldHVybiB0aGlzLk14fXNldCBydW5Db3VudCh0KXt0PjA/dGhpcy5NeD10OlUubihcIkFuaW1hdGlvbi5ydW5Db3VudCB2YWx1ZSBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlci5cIil9Z2V0IGZpbmlzaGVkKCl7cmV0dXJuIHRoaXMuVHV9c2V0IGZpbmlzaGVkKHQpe3RoaXMuVHUhPT10JiYodCE9PW51bGwmJlUuUCh0LEFuaW1hdGlvbixcImZpbmlzaGVkXCIpLHRoaXMuVHU9dCl9Z2V0IGVhc2luZygpe3JldHVybiB0aGlzLmt4fXNldCBlYXNpbmcodCl7dGhpcy5reD10fWdldCBpc1ZpZXdwb3J0VW5jb25zdHJhaW5lZCgpe3JldHVybiB0aGlzLkpNfXNldCBpc1ZpZXdwb3J0VW5jb25zdHJhaW5lZCh0KXt0aGlzLkpNPXR9Z2V0IGlzQW5pbWF0aW5nKCl7cmV0dXJuIHRoaXMuTGl9Z2V0VGVtcG9yYXJ5U3RhdGUodCl7bGV0IGk9dGhpcy5TeC5nZXQodCk7cmV0dXJuIGk9PT1udWxsJiYoaT17fSx0aGlzLlN4LnNldCh0LGkpKSxpfXN0YXRpYyBFYXNlTGluZWFyPSh0LGksZSxzKT0+ZSp0L3MraTtzdGF0aWMgRWFzZUluT3V0UXVhZD0odCxpLGUscyk9Pih0Lz1zLzIsdDwxP2UvMip0KnQraTotZS8yKigtLXQqKHQtMiktMSkraSk7c3RhdGljIEVhc2VJblF1YWQ9KHQsaSxlLHMpPT5lKih0Lz1zKSp0K2k7c3RhdGljIEVhc2VPdXRRdWFkPSh0LGksZSxzKT0+LWUqKHQvPXMpKih0LTIpK2k7c3RhdGljIEVhc2VJbkV4cG89KHQsaSxlLHMpPT50PT09MD9pOmUqTWF0aC5wb3coMiwxMCoodC9zLTEpKStpO3N0YXRpYyBFYXNlT3V0RXhwbz0odCxpLGUscyk9PnQ9PT1zP2krZTplKigtTWF0aC5wb3coMiwtMTAqdC9zKSsxKStpfWNsYXNzIEFuaW1hdGlvblN0YXRle2xpO3hzO0N4O0x4O0F4O2NvbnN0cnVjdG9yKHQsaSxlKXt0aGlzLmxpPXQsdGhpcy54cz1pLHRoaXMuQ3g9e30sdGhpcy5MeD1lLHRoaXMuQXg9ITF9fXZhciBUcmlnZ2VyU3RhcnQ9KHk9Pih5W3kuRGVmYXVsdD0xXT1cIkRlZmF1bHRcIix5W3kuSW1tZWRpYXRlPTJdPVwiSW1tZWRpYXRlXCIseVt5LkJ1bmRsZWQ9M109XCJCdW5kbGVkXCIseSkpKFRyaWdnZXJTdGFydHx8e30pO2NsYXNzIEFuaW1hdGlvblRyaWdnZXJ7TmU7aG47UnU7emY7Y29uc3RydWN0b3IodCxpLGUpe2UmJkRlYnVnJiZVLmooZSxUcmlnZ2VyU3RhcnQsXCJUcmlnZ2VyU3RhcnRcIiksdGhpcy5OZT1udWxsLHRoaXMuaG49dCx0aGlzLlJ1PWV8fDEsdGhpcy56Zj1udWxsLGkhPT12b2lkIDAmJih0aGlzLnpmPWksZT09PXZvaWQgMCYmKHRoaXMuUnU9MikpfWNvcHkoKXtjb25zdCB0PW5ldyBBbmltYXRpb25UcmlnZ2VyKHRoaXMuaG4pO3QuUnU9dGhpcy5SdTtjb25zdCBpPXRoaXMuemY7aWYoaSE9PW51bGwpe2NvbnN0IGU9e307aS5kdXJhdGlvbiE9PXZvaWQgMCYmKGUuZHVyYXRpb249aS5kdXJhdGlvbiksaS5maW5pc2hlZCE9PXZvaWQgMCYmKGUuZmluaXNoZWQ9aS5maW5pc2hlZCksaS5lYXNpbmchPT12b2lkIDAmJihlLmVhc2luZz1pLmVhc2luZyksdC56Zj1lfXJldHVybiB0fWdldCBwcm9wZXJ0eU5hbWUoKXtyZXR1cm4gdGhpcy5obn1zZXQgcHJvcGVydHlOYW1lKHQpe3RoaXMuaG49dH1nZXQgYW5pbWF0aW9uU2V0dGluZ3MoKXtyZXR1cm4gdGhpcy56Zn1zZXQgYW5pbWF0aW9uU2V0dGluZ3ModCl7dGhpcy56Zj10fXZGKHQpe2NvbnN0IGk9dGhpcy56ZjtpIT09bnVsbCYmKGkuZHVyYXRpb24mJih0LmR1cmF0aW9uPWkuZHVyYXRpb24pLGkuZmluaXNoZWQmJih0LmZpbmlzaGVkPWkuZmluaXNoZWQpLGkuZWFzaW5nJiYodC5lYXNpbmc9aS5lYXNpbmcpKX1nZXQgc3RhcnRDb25kaXRpb24oKXtyZXR1cm4gdGhpcy5SdX1zZXQgc3RhcnRDb25kaXRpb24odCl7RGVidWcmJlUuaih0LFRyaWdnZXJTdGFydCxcIlRyaWdnZXJTdGFydFwiKSx0aGlzLlJ1PXR9c3RhdGljIERlZmF1bHQ9MTtzdGF0aWMgSW1tZWRpYXRlPTI7c3RhdGljIEJ1bmRsZWQ9M31jbGFzcyBMYXllcntDO0x0O2lpO0FyO1ZsO3psO1hsO1lsO0tsO1VsO0dsO0hsO3FsO1dsO2psO3ZsO1RmO0psO0R4O09tO0l1O0Z0O2NvbnN0cnVjdG9yKHQpe0dTZXQuSmkodGhpcyksdGhpcy5DPW51bGwsdGhpcy5GdD1uZXcgTGlzdCx0aGlzLkx0PVwiXCIsdGhpcy5paT0xLHRoaXMuQXI9ITEsdGhpcy5WbD0hMCx0aGlzLnpsPSEwLHRoaXMuWGw9ITAsdGhpcy5ZbD0hMCx0aGlzLktsPSEwLHRoaXMuVWw9ITAsdGhpcy5HbD0hMCx0aGlzLkhsPSEwLHRoaXMucWw9ITAsdGhpcy5XbD0hMCx0aGlzLmpsPSEwLHRoaXMudmw9ITAsdGhpcy5UZj0hMCx0aGlzLkpsPSEwLHRoaXMuRHg9ITAsdGhpcy5PbT0hMSx0aGlzLkl1PVtdLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1KRigpe2NvbnN0IHQ9dGhpcy5GdDtmb3IobGV0IGk9MDtpPHQubGVuZ3RoO2krKyl0LmhbaV0uX00obnVsbCk7dC5jbGVhcigpLHRoaXMuSXUubGVuZ3RoPTB9RG8odCl7dGhpcy5DPXR9dG9TdHJpbmcodCl7dD09PXZvaWQgMCYmKHQ9MCk7Y29uc3QgaT0nTGF5ZXIgXCInK3RoaXMubmFtZSsnXCInO2lmKHQ8PTApcmV0dXJuIGk7bGV0IGU9MCxzPTAsbj0wLG89MCxyPTA7Y29uc3QgbD10aGlzLkZ0Lml0ZXJhdG9yO2Zvcig7bC5uZXh0KCk7KXtjb25zdCBmPWwudmFsdWU7ZiBpbnN0YW5jZW9mIEdyb3VwP24rKzpmIGluc3RhbmNlb2YgTm9kZT9zKys6ZiBpbnN0YW5jZW9mIExpbms/bysrOmYgaW5zdGFuY2VvZiBBZG9ybm1lbnQ/cisrOmUrK31sZXQgaD1cIlwiO2lmKGU+MCYmKGgrPWUrXCIgUGFydHMgXCIpLHM+MCYmKGgrPXMrXCIgTm9kZXMgXCIpLG4+MCYmKGgrPW4rXCIgR3JvdXBzIFwiKSxvPjAmJihoKz1vK1wiIExpbmtzIFwiKSxyPjAmJihoKz1yK1wiIEFkb3JubWVudHMgXCIpLHQ+MSl7Y29uc3QgZj10aGlzLkZ0Lml0ZXJhdG9yO2Zvcig7Zi5uZXh0KCk7KXtjb25zdCBhPWYudmFsdWU7aCs9YFxuICAgIGArYS50b1N0cmluZygpO2NvbnN0IGM9YS5kYXRhO2MhPT1udWxsJiZHU2V0LmdzKGMpJiYoaCs9XCIgI1wiK0dTZXQuZ3MoYykpLGEgaW5zdGFuY2VvZiBOb2RlP2grPVwiIFwiK1UudG9TdHJpbmcoYyk6YSBpbnN0YW5jZW9mIExpbmsmJihoKz1cIiBcIitVLnRvU3RyaW5nKGEuZnJvbU5vZGUpK1wiIFwiK1UudG9TdHJpbmcoYS50b05vZGUpKX19cmV0dXJuIGkrXCIgXCIrdGhpcy5GdC5jb3VudCtcIjogXCIraH1maW5kT2JqZWN0QXQodCxpLGUpe2lmKGk9PT12b2lkIDAmJihpPW51bGwpLGU9PT12b2lkIDAmJihlPW51bGwpLHRoaXMuSmw9PT0hMSlyZXR1cm4gbnVsbDtEZWJ1ZyYmIXQuaXNSZWFsKCkmJlUubihcImZpbmRPYmplY3RBdDogUG9pbnQgbXVzdCBoYXZlIGEgcmVhbCB2YWx1ZSwgbm90OiBcIit0LnRvU3RyaW5nKCkpO2xldCBzPSExO3RoaXMuZGlhZ3JhbSE9PW51bGwmJnRoaXMuZGlhZ3JhbS52aWV3cG9ydEJvdW5kcy5jb250YWluc1BvaW50KHQpJiYocz0hMCk7Y29uc3Qgbj1Qb2ludC5hKCksbz10aGlzLkZ0Lmgscj1vLmxlbmd0aDtmb3IobGV0IGw9cjtsLS07KXtjb25zdCBoPW9bbF07aWYocz09PSEwJiZoLkRsKCk9PT0hMXx8IWguaXNWaXNpYmxlKCkpY29udGludWU7bi5jKHQpLG4uWGUoaC5Vcyk7bGV0IGY9aC5OQShuLGksZSk7aWYoZiE9PW51bGwmJihpIT09bnVsbCYmKGY9aShmKSksZiE9PW51bGwmJihlPT09bnVsbHx8ZShmKSkpKXJldHVybiBQb2ludC5vKG4pLGZ9cmV0dXJuIFBvaW50Lm8obiksbnVsbH1maW5kT2JqZWN0c0F0KHQsaSxlLHMpe2lmKGk9PT12b2lkIDAmJihpPW51bGwpLGU9PT12b2lkIDAmJihlPW51bGwpLCEocyBpbnN0YW5jZW9mIExpc3QpJiYhKHMgaW5zdGFuY2VvZiBHU2V0KSYmKHM9bmV3IEdTZXQpLHRoaXMuSmw9PT0hMSlyZXR1cm4gcztEZWJ1ZyYmIXQuaXNSZWFsKCkmJlUubihcImZpbmRPYmplY3RzQXQ6IFBvaW50IG11c3QgaGF2ZSBhIHJlYWwgdmFsdWUsIG5vdDogXCIrdC50b1N0cmluZygpKTtsZXQgbj0hMTt0aGlzLmRpYWdyYW0hPT1udWxsJiZ0aGlzLmRpYWdyYW0udmlld3BvcnRCb3VuZHMuY29udGFpbnNQb2ludCh0KSYmKG49ITApO2NvbnN0IG89UG9pbnQuYSgpLHI9dGhpcy5GdC5oLGw9ci5sZW5ndGg7Zm9yKGxldCBoPWw7aC0tOyl7Y29uc3QgZj1yW2hdO2lmKG49PT0hMCYmZi5EbCgpPT09ITF8fCFmLmlzVmlzaWJsZSgpKWNvbnRpbnVlO28uYyh0KSxvLlhlKGYuVXMpO2xldCBhPWY7Zi5DQShvLGksZSxzKSYmKGkhPT1udWxsJiYoYT1pKGEpKSxhIT09bnVsbCYmKGU9PT1udWxsfHxlKGEpKSYmcy5hZGQoYSkpfXJldHVybiBQb2ludC5vKG8pLHN9ZmluZE9iamVjdHNJbih0LGksZSxzLG4pe2lmKGk9PT12b2lkIDAmJihpPW51bGwpLGU9PT12b2lkIDAmJihlPW51bGwpLHM9PT12b2lkIDAmJihzPSExKSwhKG4gaW5zdGFuY2VvZiBMaXN0KSYmIShuIGluc3RhbmNlb2YgR1NldCkmJihuPW5ldyBHU2V0KSx0aGlzLkpsPT09ITEpcmV0dXJuIG47RGVidWcmJiF0LmlzUmVhbCgpJiZVLm4oXCJmaW5kT2JqZWN0c0luOiBSZWN0IG11c3QgaGF2ZSBhIHJlYWwgdmFsdWUsIG5vdDogXCIrdC50b1N0cmluZygpKTtsZXQgbz0hMTt0aGlzLmRpYWdyYW0hPT1udWxsJiZ0aGlzLmRpYWdyYW0udmlld3BvcnRCb3VuZHMuY29udGFpbnNSZWN0KHQpJiYobz0hMCk7Y29uc3Qgcj10aGlzLkZ0LmgsbD1yLmxlbmd0aDtmb3IobGV0IGg9bDtoLS07KXtjb25zdCBmPXJbaF07aWYobz09PSEwJiZmLkRsKCk9PT0hMXx8IWYuaXNWaXNpYmxlKCkpY29udGludWU7bGV0IGE9ZjtmLkVtKHQsaSxlLHMsbikmJihpIT09bnVsbCYmKGE9aShhKSksYSE9PW51bGwmJihlPT09bnVsbHx8ZShhKSkmJm4uYWRkKGEpKX1yZXR1cm4gbn1LUyh0LGksZSxzLG4sbyxyKXtpZih0aGlzLkpsPT09ITEpcmV0dXJuIG47Y29uc3QgbD10aGlzLkZ0LmgsaD1sLmxlbmd0aDtmb3IobGV0IGY9aDtmLS07KXtjb25zdCBhPWxbZl07aWYocj09PSEwJiZhLkRsKCk9PT0hMXx8IW8oYSl8fCFhLmlzVmlzaWJsZSgpKWNvbnRpbnVlO2xldCBjPWE7YS5FbSh0LGksZSxzLG4pJiYoaSE9PW51bGwmJihjPWkoYykpLGMhPT1udWxsJiYoZT09PW51bGx8fGUoYykpJiZuLmFkZChjKSl9cmV0dXJuIG59ZmluZE9iamVjdHNOZWFyKHQsaSxlLHMsbixvKXtpZihlPT09dm9pZCAwJiYoZT1udWxsKSxzPT09dm9pZCAwJiYocz1udWxsKSxuPT09dm9pZCAwJiYobj0hMCksbiE9PSExJiZuIT09ITAmJigobiBpbnN0YW5jZW9mIExpc3R8fG4gaW5zdGFuY2VvZiBHU2V0KSYmKG89biksbj0hMCksIShvIGluc3RhbmNlb2YgTGlzdCkmJiEobyBpbnN0YW5jZW9mIEdTZXQpJiYobz1uZXcgR1NldCksdGhpcy5KbD09PSExKXJldHVybiBvO0RlYnVnJiYhdC5pc1JlYWwoKSYmVS5uKFwiZmluZE9iamVjdHNOZWFyOiBQb2ludCBtdXN0IGhhdmUgYSByZWFsIHZhbHVlLCBub3Q6IFwiK3QudG9TdHJpbmcoKSk7bGV0IHI9ITE7dGhpcy5kaWFncmFtIT09bnVsbCYmdGhpcy5kaWFncmFtLnZpZXdwb3J0Qm91bmRzLmNvbnRhaW5zUG9pbnQodCkmJihyPSEwKTtjb25zdCBsPVBvaW50LmEoKSxoPVBvaW50LmEoKSxmPXRoaXMuRnQuaCxhPWYubGVuZ3RoO2ZvcihsZXQgYz1hO2MtLTspe2NvbnN0IHU9ZltjXTtpZihyPT09ITAmJnUuRGwoKT09PSExfHwhdS5pc1Zpc2libGUoKSljb250aW51ZTtsLmModCksbC5YZSh1LlVzKSxoLnModC54K2ksdC55KSxoLlhlKHUuVXMpO2xldCBkPXU7dS5BQShsLGgsZSxzLG4sbykmJihlIT09bnVsbCYmKGQ9ZShkKSksZCE9PW51bGwmJihzPT09bnVsbHx8cyhkKSkmJm8uYWRkKGQpKX1yZXR1cm4gUG9pbnQubyhsKSxQb2ludC5vKGgpLG99dDIoKXtyZXR1cm4gdGhpcy5GdC5ofWtzKHQsaSl7aWYoIXRoaXMudmlzaWJsZSlyZXR1cm47Y29uc3QgZT10aGlzLkZ0Lmgscz1lLmxlbmd0aDtpZihzPT09MClyZXR1cm47Y29uc3Qgbj1VLmx0KCksbz1VLmx0KCk7Zm9yKGxldCByPTA7cjxzO3IrKyl7Y29uc3QgbD1lW3JdO2lmKGwuaTI9cixsIGluc3RhbmNlb2YgTGluayl7aWYobC5MZT09PSExKWNvbnRpbnVlfWVsc2UgaWYobCBpbnN0YW5jZW9mIEFkb3JubWVudCYmbC5hZG9ybmVkUGFydCE9PW51bGwpY29udGludWU7Y29uc3QgaD1sLmFjdHVhbEJvdW5kcztsLmlzVmlzaWJsZSgpJiZoLmludGVyc2VjdHNSZWN0UGx1cyhpLDEwKT8obC5rcyghMCksbi5wdXNoKGwpKToobC5rcyghMSksbC5hZG9ybm1lbnRzIT09bnVsbCYmbC5hZG9ybm1lbnRzLmNvdW50PjAmJm8ucHVzaChsKSl9Zm9yKGxldCByPTA7cjxuLmxlbmd0aDtyKyspe2NvbnN0IGw9bltyXTtsLmUyKCk7Y29uc3QgaD1sLmFkb3JubWVudHM7Zm9yKDtoLm5leHQoKTspe2NvbnN0IGY9aC52YWx1ZTtmLmR0KDEvMCwxLzApLGYuR3QoKSxmLmtzKCEwKX19Zm9yKGxldCByPTA7cjxvLmxlbmd0aDtyKyspb1tyXS5lMigpO1UudHQobiksVS50dChvKX1PdSh0KXtsZXQgaT0xO3JldHVybiB0aGlzLmlpIT09MSYmKGk9dC5nbG9iYWxBbHBoYSx0Lmdsb2JhbEFscGhhPWkqdGhpcy5paSksaX1MQSh0LGkpe2ZvcihsZXQgZT0wO2U8aTtlKyspdFtlXS5FdSgpfVVpKHQsaSxlKXtpZighdGhpcy52aXNpYmxlfHx0aGlzLmlpPT09MHx8KGU9PT12b2lkIDAmJihlPSEwKSwhZSYmdGhpcy5pc1RlbXBvcmFyeSkpcmV0dXJuO2NvbnN0IHM9dGhpcy5GdC5oLG49cy5sZW5ndGg7aWYobj09PTApcmV0dXJuO3QuQXImJnRoaXMuTEEocyxuKTtjb25zdCBvPXRoaXMuT3UodCkscj10aGlzLkl1O3IubGVuZ3RoPTA7Y29uc3QgbD1pLnNjYWxlLGg9UmVjdC5hKCk7Zm9yKGxldCBmPTA7ZjxuO2YrKyl7Y29uc3QgYT1zW2ZdO3RoaXMuQm0odCxhLGkscixsLGgsITApfVJlY3QubyhoKSx0LkFyJiZ0aGlzLkxBKHMsbiksdC5nbG9iYWxBbHBoYT1vfUxFKHQsaSxlKXtpZighdGhpcy52aXNpYmxlfHx0aGlzLmlpPT09MClyZXR1cm47Y29uc3Qgcz10aGlzLkZ0Lmgsbj1zLmxlbmd0aDtpZihuPT09MClyZXR1cm47Y29uc3Qgbz10aGlzLk91KHQpLHI9dGhpcy5JdTtyLmxlbmd0aD0wO2NvbnN0IGw9aS5zY2FsZSxoPVJlY3QuYSgpO2ZvcihsZXQgZj0wO2Y8bjtmKyspe2NvbnN0IGE9c1tmXTtlLmhhcyhhKXx8dGhpcy5CbSh0LGEsaSxyLGwsaCwhMCl9UmVjdC5vKGgpLHQuZ2xvYmFsQWxwaGE9b30kRih0LGksZSxzKXtpZighdGhpcy52aXNpYmxlfHx0aGlzLmlpPT09MHx8IXMmJnRoaXMuaXNUZW1wb3JhcnkpcmV0dXJuO2NvbnN0IG49dGhpcy5GdC5oLG89bi5sZW5ndGg7aWYobz09PTApcmV0dXJuO2NvbnN0IHI9dGhpcy5PdSh0KSxsPXRoaXMuSXU7bC5sZW5ndGg9MDtjb25zdCBoPWkuc2NhbGUsZj1SZWN0LmEoKTtmb3IobGV0IGE9MDthPG87YSsrKXtjb25zdCBjPW5bYV07ZS5oYXMoYykmJnRoaXMuQm0odCxjLGksbCxoLGYsITEpfVJlY3QubyhmKSx0Lmdsb2JhbEFscGhhPXJ9WkYodCxpLGUscyxuKXtpZighdGhpcy52aXNpYmxlfHx0aGlzLm9wYWNpdHk9PT0wKXJldHVybjtjb25zdCBvPXRoaXMuZGlhZ3JhbS5ncmlkLnBhcnQ7aWYoIXMmJnRoaXMuaXNUZW1wb3Jhcnkpe2lmKG4mJm8ubGF5ZXI9PT10aGlzKXtjb25zdCByPXRoaXMuT3UodCk7by5VaSh0LGUpLHQuZ2xvYmFsQWxwaGE9cn19ZWxzZXtjb25zdCByPXRoaXMuT3UodCksbD1lLnNjYWxlLGg9UmVjdC5hKCksZj10aGlzLkZ0LmgsYT1mLmxlbmd0aDtmb3IobGV0IGM9MDtjPGE7YysrKXtjb25zdCB1PWZbY107IW4mJnU9PT1vfHx0aGlzLkJtKHQsdSxlLG51bGwsbCxoLCExKX1SZWN0Lm8oaCksdC5nbG9iYWxBbHBoYT1yfX1URSh0LGksZSl7aWYoIXRoaXMudmlzaWJsZXx8dGhpcy5paT09PTApcmV0dXJuO2NvbnN0IHM9dGhpcy5PdSh0KSxuPXRoaXMuSXU7bi5sZW5ndGg9MDtjb25zdCBvPWkuc2NhbGUscj1SZWN0LmEoKSxsPXRoaXMuRnQuaCxoPWwubGVuZ3RoLGY9ZS5sZW5ndGg7Zm9yKGxldCBhPTA7YTxoO2ErKyl7Y29uc3QgYz1sW2FdLHU9Yy50YShjLmFjdHVhbEJvdW5kcyk7dGhpcy5RRih1LGUsZixvKSYmdGhpcy5CbSh0LGMsaSxuLG8sciwhMCl9UmVjdC5vKHIpLHQuZ2xvYmFsQWxwaGE9c31CbSh0LGksZSxzLG4sbyxyKXtpZihyJiYhaS5EbCgpKXt0LnJlbW92ZVBhcnRGcm9tVmlldyhpKTtyZXR1cm59aWYocyE9PW51bGwmJmkgaW5zdGFuY2VvZiBMaW5rJiYoaS5pc09ydGhvZ29uYWwmJnMucHVzaChpKSxpLkxlPT09ITEpKXt0LnJlbW92ZVBhcnRGcm9tVmlldyhpKTtyZXR1cm59bGV0IGw9ITEsaD1pLmNvbnRhaW5pbmdHcm91cDtmb3IoO2ghPT1udWxsOylsP2guaGkhPT1udWxsJiZvLmludGVyc2VjdFJlY3QoaC5oaSk6aC5oaSE9PW51bGwmJihsPSEwLG8uYyhoLmhpKSksaD1oLmNvbnRhaW5pbmdHcm91cDtjb25zdCBmPWkuYWN0dWFsQm91bmRzO2xldCBhPSExO2lmKGwmJmkuaXNWaXNpYmxlKCkpe2lmKCFvLmludGVyc2VjdHNSZWN0KGYpKXt0LnJlbW92ZVBhcnRGcm9tVmlldyhpKTtyZXR1cm59YT0hby5jb250YWluc1JlY3QoZil9YSYmKHQuc2F2ZSgpLHQgaW5zdGFuY2VvZiBTVkdDb250ZXh0P3QucGFydENsaXBSZWN0PW8uY29weSgpOih0LmJlZ2luUGF0aCgpLHQucmVjdChvLngsby55LG8ud2lkdGgsby5oZWlnaHQpLHQuY2xpcCgpKSksZi53aWR0aCpuPmUuVm18fGYuaGVpZ2h0Km4+ZS5WbT9pLlVpKHQsZSk6dGhpcy5fRih0LGksZSksYSYmKHQucmVzdG9yZSgpLHQuY2xlYXJDb250ZXh0Q2FjaGUoITApKX1fRih0LGksZSl7aWYodCBpbnN0YW5jZW9mIFNWR0NvbnRleHQpe2kuVWkodCxlKTtyZXR1cm59Y29uc3Qgcz1pLmFjdHVhbEJvdW5kcyxuPWkubmF0dXJhbEJvdW5kcztpZihzLndpZHRoPT09MHx8cy5oZWlnaHQ9PT0wfHxpc05hTihzLngpfHxpc05hTihzLnkpfHwhaS5pc1Zpc2libGUoKSlyZXR1cm47Y29uc3Qgbz1pLkY7aWYoaS5iYWNrZ3JvdW5kPT09bnVsbCl7aS51bih0LFwicmdiYSgwLDAsMCwwLjMpXCIsITAsITEsbixzKSx0LmZpbGxSZWN0KHMueCxzLnkscy53aWR0aCxzLmhlaWdodCk7cmV0dXJufWlmKHQudHJhbnNmb3JtKG8ubTExLG8ubTEyLG8ubTIxLG8ubTIyLG8uZHgsby5keSksaS51bih0LGkuYmFja2dyb3VuZCwhMCwhMSxuLHMpLHQuZmlsbFJlY3QoMCwwLG4ud2lkdGgvMixuLmhlaWdodC8yKSwhby4kaygpKXtjb25zdCByPTEvKG8ubTExKm8ubTIyLW8ubTEyKm8ubTIxKTt0LnRyYW5zZm9ybShvLm0yMipyLC1vLm0xMipyLC1vLm0yMSpyLG8ubTExKnIsciooby5tMjEqby5keS1vLm0yMipvLmR4KSxyKihvLm0xMipvLmR4LW8ubTExKm8uZHkpKX19UUYodCxpLGUscyl7Y29uc3Qgbj0yL3Msbz00L3M7Zm9yKGxldCByPTA7cjxlO3IrKyl7Y29uc3QgbD1pW3JdO2lmKCEobC53aWR0aD09PTB8fGwuaGVpZ2h0PT09MCkmJnQuaW50ZXJzZWN0cyhsLngtbixsLnktbixsLndpZHRoK28sbC5oZWlnaHQrbykpcmV0dXJuITB9cmV0dXJuITF9dCh0LGksZSxzLG4pe2NvbnN0IG89dGhpcy5kaWFncmFtO28hPT1udWxsJiZvLnJhaXNlQ2hhbmdlZEV2ZW50KDIsdCx0aGlzLGksZSxzLG4pfWlhKHQsaSxlKXtjb25zdCBzPXRoaXMuRnQ7aWYoaS5fTSh0aGlzKSx0Pj1zLmNvdW50KXQ9cy5jb3VudDtlbHNlIGlmKHMuZWx0KHQpPT09aSlyZXR1cm4tMTtzLmluc2VydEF0KHQsaSksaS56bShlKTtjb25zdCBuPXRoaXMuZGlhZ3JhbTtyZXR1cm4gbiE9PW51bGwmJihlP24uTCgpOm4uaWEoaSkpLHRoaXMuRngodCxpKSx0fW5lKHQsaSxlKXtpZighZSYmaS5sYXllciE9PXRoaXMmJmkubGF5ZXIhPT1udWxsKXJldHVybiBpLmxheWVyLm5lKHQsaSxlKTtjb25zdCBzPXRoaXMuRnQ7aWYodDwwfHx0Pj1zLmxlbmd0aCl7aWYodD1zLmluZGV4T2YoaSksdDwwKXJldHVybi0xfWVsc2UgaWYocy5lbHQodCkhPT1pJiYodD1zLmluZGV4T2YoaSksdDwwKSlyZXR1cm4tMTtpLlhtKGUpLHMucmVtb3ZlQXQodCk7Y29uc3Qgbj10aGlzLmRpYWdyYW07cmV0dXJuIG4hPT1udWxsJiYoZT9uLkwoKTpuLm5lKGkpKSxpLl9NKG51bGwpLHR9RngodCxpKXt0PXRoaXMudFIodCxpKSxpIGluc3RhbmNlb2YgR3JvdXAmJnRoaXMuaVIodCxpKSxpLnN2ZyE9PW51bGwmJmkuc3ZnLnJlbW92ZSgpfXRSKHQsaSl7Y29uc3QgZT1pLnpPcmRlcjtpZihpc05hTihlKSlyZXR1cm4gdDtjb25zdCBzPXRoaXMuRnQsbj1zLmNvdW50O2lmKG48PTEpcmV0dXJuIHQ7aWYodDwwJiYodD1zLmluZGV4T2YoaSkpLHQ8MClyZXR1cm4tMTtsZXQgbz10LTEscj1OYU47Zm9yKDtvPj0wJiYocj1zLmVsdChvKS56T3JkZXIsISFpc05hTihyKSk7KW8tLTtsZXQgbD10KzEsaD1OYU47Zm9yKDtsPG4mJihoPXMuZWx0KGwpLnpPcmRlciwhIWlzTmFOKGgpKTspbCsrO2lmKCFpc05hTihyKSYmcj5lKWZvcig7Oyl7aWYobz09PS0xfHxyPD1lKXJldHVybiBvKyssbz09PXQ/dDoocy5yZW1vdmVBdCh0KSxzLmluc2VydEF0KG8saSksbyk7Zm9yKHI9TmFOOy0tbz49MCYmKHI9cy5lbHQobykuek9yZGVyLCEhaXNOYU4ocikpOyk7fWVsc2UgaWYoIWlzTmFOKGgpJiZoPGUpZm9yKDs7KXtpZihsPT09bnx8aD49ZSlyZXR1cm4gbC0tLGw9PT10P3Q6KHMucmVtb3ZlQXQodCkscy5pbnNlcnRBdChsLGkpLGwpO2ZvcihoPU5hTjsrK2w8biYmKGg9cy5lbHQobCkuek9yZGVyLCEhaXNOYU4oaCkpOyk7fXJldHVybiB0fWlSKHQsaSl7aWYoaT09PW51bGx8fCFpc05hTihpLnpPcmRlcikpcmV0dXJuO3RoaXMuZVIodCxpKTtjb25zdCBlPWkuY29udGFpbmluZ0dyb3VwO2UhPT1udWxsJiZ0aGlzLkZ4KC0xLGUpfWVSKHQsaSl7aWYoaS5tZW1iZXJQYXJ0cy5jb3VudD09PTApcmV0dXJuO2xldCBlPS0xO2NvbnN0IHM9dGhpcy5GdC5oLG49cy5sZW5ndGg7Zm9yKGxldCBvPTA7bzxuO28rKyl7Y29uc3Qgcj1zW29dO2lmKHI9PT1pJiYodD1vLGU+PTApfHxlPDAmJnIuY29udGFpbmluZ0dyb3VwPT09aSYmKGU9byx0Pj0wKSlicmVha31pZighKGU8MCkmJmU8dCl7Y29uc3Qgbz10aGlzLkZ0O28ucmVtb3ZlQXQodCksby5pbnNlcnRBdChlLGkpfX1nZXQgcGFydHMoKXtyZXR1cm4gdGhpcy5GdC5pdGVyYXRvcn1nZXQgcGFydHNCYWNrd2FyZHMoKXtyZXR1cm4gdGhpcy5GdC5pdGVyYXRvckJhY2t3YXJkc31nZXQgZGlhZ3JhbSgpe3JldHVybiB0aGlzLkN9Z2V0IG5hbWUoKXtyZXR1cm4gdGhpcy5MdH1zZXQgbmFtZSh0KXtVLmkodCxcInN0cmluZ1wiLExheWVyLFwibmFtZVwiKTtjb25zdCBpPXRoaXMuTHQ7aWYoaSE9PXQpe2NvbnN0IGU9dGhpcy5kaWFncmFtO2lmKGUhPT1udWxsKXtpPT09XCJcIiYmVS5uKFwiQ2Fubm90IHJlbmFtZSBkZWZhdWx0IExheWVyIHRvOiBcIit0KTtjb25zdCBuPWUubGF5ZXJzO2Zvcig7bi5uZXh0KCk7KW4udmFsdWUubmFtZT09PXQmJlUubihcIkxheWVyLm5hbWUgaXMgYWxyZWFkeSBwcmVzZW50IGluIHRoaXMgZGlhZ3JhbTogXCIrdCl9dGhpcy5MdD10LHRoaXMudChcIm5hbWVcIixpLHQpO2NvbnN0IHM9dGhpcy5GdC5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO24ubGF5ZXJOYW1lPXRoaXMuTHR9fX1nZXQgb3BhY2l0eSgpe3JldHVybiB0aGlzLmlpfXNldCBvcGFjaXR5KHQpe2NvbnN0IGk9dGhpcy5paTtpZihpIT09dCl7VS5pKHQsXCJudW1iZXJcIixMYXllcixcIm9wYWNpdHlcIiksKHQ8MHx8dD4xKSYmVS5VKHQsXCIwIDw9IHZhbHVlIDw9IDFcIixMYXllcixcIm9wYWNpdHlcIiksdGhpcy5paT10O2NvbnN0IGU9dGhpcy5kaWFncmFtO2UhPT1udWxsJiZlLkwoKSx0aGlzLnQoXCJvcGFjaXR5XCIsaSx0KX19Z2V0IGlzVmlld3BvcnRBbGlnbmVkKCl7cmV0dXJuIHRoaXMuT219c2V0IGlzVmlld3BvcnRBbGlnbmVkKHQpe2NvbnN0IGk9dGhpcy5PbTtpIT09dCYmKHRoaXMuT209dCx0aGlzLmRpYWdyYW0mJih0aGlzLlRBKCksdGhpcy5kaWFncmFtLkwoKSksdGhpcy50KFwiaXNWaWV3cG9ydEFsaWduZWRcIixpLHQpLHQmJih0aGlzLmlzSW5Eb2N1bWVudEJvdW5kcz0hMSkpfVRBKCl7aWYoIXRoaXMuT20pcmV0dXJuO2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dGhpcy5GdC5oLGU9aS5sZW5ndGgscz10LlB0LG49dC5OdDtmb3IobGV0IG89MDtvPGU7bysrKXtjb25zdCByPWlbb10sbD1yLm5hdHVyYWxCb3VuZHMud2lkdGgsaD1yLm5hdHVyYWxCb3VuZHMuaGVpZ2h0O2xldCBmPXIuYWxpZ25tZW50OyhmLmlzRGVmYXVsdCgpfHwhZi5pc1Nwb3QoKSkmJihmPVNwb3QuQm90dG9tUmlnaHQpO2xldCBhPXIuYWxpZ25tZW50Rm9jdXM7YS5pc0RlZmF1bHQoKSYmKGE9bmV3IFNwb3QoZi54LGYueSkpO2NvbnN0IGM9Zi54KnMrZi5vZmZzZXRYLShhLngqbCthLm9mZnNldFgpLHU9Zi55Km4rZi5vZmZzZXRZLShhLnkqaCthLm9mZnNldFkpLGQ9UG9pbnQuSyhjLHUpO3Quc1IoZCksci5MZihkLngsZC55LCEwKSxQb2ludC5vKGQpLHIub3Q9MS90LnNjYWxlfX1nZXQgaXNUZW1wb3JhcnkoKXtyZXR1cm4gdGhpcy5Bcn1zZXQgaXNUZW1wb3JhcnkodCl7Y29uc3QgaT10aGlzLkFyO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTGF5ZXIsXCJpc1RlbXBvcmFyeVwiKSx0aGlzLkFyPXQsdGhpcy50KFwiaXNUZW1wb3JhcnlcIixpLHQpKX1nZXQgdmlzaWJsZSgpe3JldHVybiB0aGlzLlRmfXNldCB2aXNpYmxlKHQpe2NvbnN0IGk9dGhpcy5UZjtpZihpIT09dCl7VS5pKHQsXCJib29sZWFuXCIsTGF5ZXIsXCJ2aXNpYmxlXCIpLHRoaXMuVGY9dDtjb25zdCBlPXRoaXMuRnQuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspZS52YWx1ZS5LaSh0KTtjb25zdCBzPXRoaXMuZGlhZ3JhbTtzIT09bnVsbCYmcy5MKCksdGhpcy50KFwidmlzaWJsZVwiLGksdCl9fWdldCBwaWNrYWJsZSgpe3JldHVybiB0aGlzLkpsfXNldCBwaWNrYWJsZSh0KXtjb25zdCBpPXRoaXMuSmw7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcixcInBpY2thYmxlXCIpLHRoaXMuSmw9dCx0aGlzLnQoXCJwaWNrYWJsZVwiLGksdCkpfWdldCBpc0luRG9jdW1lbnRCb3VuZHMoKXtyZXR1cm4gdGhpcy5EeH1zZXQgaXNJbkRvY3VtZW50Qm91bmRzKHQpe2NvbnN0IGk9dGhpcy5EeDtpIT09dCYmKHRoaXMuRHg9dCx0aGlzLmRpYWdyYW0hPT1udWxsJiZ0aGlzLmRpYWdyYW0uaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy50KFwiaXNJbkRvY3VtZW50Qm91bmRzXCIsaSx0KSl9Z2V0IGFsbG93Q29weSgpe3JldHVybiB0aGlzLlZsfXNldCBhbGxvd0NvcHkodCl7Y29uc3QgaT10aGlzLlZsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTGF5ZXIsXCJhbGxvd0NvcHlcIiksdGhpcy5WbD10LHRoaXMudChcImFsbG93Q29weVwiLGksdCkpfWdldCBhbGxvd0RlbGV0ZSgpe3JldHVybiB0aGlzLnpsfXNldCBhbGxvd0RlbGV0ZSh0KXtjb25zdCBpPXRoaXMuemw7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcixcImFsbG93RGVsZXRlXCIpLHRoaXMuemw9dCx0aGlzLnQoXCJhbGxvd0RlbGV0ZVwiLGksdCkpfWdldCBhbGxvd1RleHRFZGl0KCl7cmV0dXJuIHRoaXMuWGx9c2V0IGFsbG93VGV4dEVkaXQodCl7Y29uc3QgaT10aGlzLlhsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTGF5ZXIsXCJhbGxvd1RleHRFZGl0XCIpLHRoaXMuWGw9dCx0aGlzLnQoXCJhbGxvd1RleHRFZGl0XCIsaSx0KSl9Z2V0IGFsbG93R3JvdXAoKXtyZXR1cm4gdGhpcy5ZbH1zZXQgYWxsb3dHcm91cCh0KXtjb25zdCBpPXRoaXMuWWw7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcixcImFsbG93R3JvdXBcIiksdGhpcy5ZbD10LHRoaXMudChcImFsbG93R3JvdXBcIixpLHQpKX1nZXQgYWxsb3dVbmdyb3VwKCl7cmV0dXJuIHRoaXMuS2x9c2V0IGFsbG93VW5ncm91cCh0KXtjb25zdCBpPXRoaXMuS2w7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcixcImFsbG93VW5ncm91cFwiKSx0aGlzLktsPXQsdGhpcy50KFwiYWxsb3dVbmdyb3VwXCIsaSx0KSl9Z2V0IGFsbG93TGluaygpe3JldHVybiB0aGlzLlVsfXNldCBhbGxvd0xpbmsodCl7Y29uc3QgaT10aGlzLlVsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTGF5ZXIsXCJhbGxvd0xpbmtcIiksdGhpcy5VbD10LHRoaXMudChcImFsbG93TGlua1wiLGksdCkpfWdldCBhbGxvd1JlbGluaygpe3JldHVybiB0aGlzLkdsfXNldCBhbGxvd1JlbGluayh0KXtjb25zdCBpPXRoaXMuR2w7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcixcImFsbG93UmVsaW5rXCIpLHRoaXMuR2w9dCx0aGlzLnQoXCJhbGxvd1JlbGlua1wiLGksdCkpfWdldCBhbGxvd01vdmUoKXtyZXR1cm4gdGhpcy5IbH1zZXQgYWxsb3dNb3ZlKHQpe2NvbnN0IGk9dGhpcy5IbDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLExheWVyLFwiYWxsb3dNb3ZlXCIpLHRoaXMuSGw9dCx0aGlzLnQoXCJhbGxvd01vdmVcIixpLHQpKX1nZXQgYWxsb3dSZXNoYXBlKCl7cmV0dXJuIHRoaXMucWx9c2V0IGFsbG93UmVzaGFwZSh0KXtjb25zdCBpPXRoaXMucWw7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcixcImFsbG93UmVzaGFwZVwiKSx0aGlzLnFsPXQsdGhpcy50KFwiYWxsb3dSZXNoYXBlXCIsaSx0KSl9Z2V0IGFsbG93UmVzaXplKCl7cmV0dXJuIHRoaXMuV2x9c2V0IGFsbG93UmVzaXplKHQpe2NvbnN0IGk9dGhpcy5XbDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLExheWVyLFwiYWxsb3dSZXNpemVcIiksdGhpcy5XbD10LHRoaXMudChcImFsbG93UmVzaXplXCIsaSx0KSl9Z2V0IGFsbG93Um90YXRlKCl7cmV0dXJuIHRoaXMuamx9c2V0IGFsbG93Um90YXRlKHQpe2NvbnN0IGk9dGhpcy5qbDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLExheWVyLFwiYWxsb3dSb3RhdGVcIiksdGhpcy5qbD10LHRoaXMudChcImFsbG93Um90YXRlXCIsaSx0KSl9Z2V0IGFsbG93U2VsZWN0KCl7cmV0dXJuIHRoaXMudmx9c2V0IGFsbG93U2VsZWN0KHQpe2NvbnN0IGk9dGhpcy52bDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLExheWVyLFwiYWxsb3dTZWxlY3RcIiksdGhpcy52bD10LHRoaXMudChcImFsbG93U2VsZWN0XCIsaSx0KSl9fXZhciBBdXRvU2NhbGU9KHk9Pih5W3kuTm9uZT0xXT1cIk5vbmVcIix5W3kuVW5pZm9ybT0yXT1cIlVuaWZvcm1cIix5W3kuVW5pZm9ybVRvRmlsbD0zXT1cIlVuaWZvcm1Ub0ZpbGxcIix5KSkoQXV0b1NjYWxlfHx7fSksQ3ljbGVNb2RlPSh5PT4oeVt5LkFsbD0xXT1cIkFsbFwiLHlbeS5Ob3REaXJlY3RlZD0yXT1cIk5vdERpcmVjdGVkXCIseVt5Lk5vdERpcmVjdGVkRmFzdD0zXT1cIk5vdERpcmVjdGVkRmFzdFwiLHlbeS5Ob3RVbmRpcmVjdGVkPTRdPVwiTm90VW5kaXJlY3RlZFwiLHlbeS5EZXN0aW5hdGlvblRyZWU9NV09XCJEZXN0aW5hdGlvblRyZWVcIix5W3kuU291cmNlVHJlZT02XT1cIlNvdXJjZVRyZWVcIix5KSkoQ3ljbGVNb2RlfHx7fSksU2Nyb2xsTW9kZT0oeT0+KHlbeS5Eb2N1bWVudD0xXT1cIkRvY3VtZW50XCIseVt5LkluZmluaXRlPTJdPVwiSW5maW5pdGVcIix5KSkoU2Nyb2xsTW9kZXx8e30pLENvbGxhcHNlUG9saWN5PSh5PT4oeVt5LlRyZWVQYXJlbnQ9MV09XCJUcmVlUGFyZW50XCIseVt5LkFsbFBhcmVudHM9Ml09XCJBbGxQYXJlbnRzXCIseVt5LkFueVBhcmVudHM9M109XCJBbnlQYXJlbnRzXCIseSkpKENvbGxhcHNlUG9saWN5fHx7fSk7Y2xhc3MgRGlhZ3JhbXt3cztfdDtzMjtSeDtMcjtCdTtJeDtPeDtFeDtCeDtWeDt6eDtlYTtfaDtYeDtZeDtLeDskbDtYZjtUcjtZbTtVeDtHeDtWdTtqbjtEcjtzYTtSbztLbTtZZjtVbTtLZjt6dTtGcjt2bjtvMjtsMjtIeDtxeDtoMjtXeDthMjtmMjtjMjtqeDtHbTtScjtJcjtPcjtFcjtCcjtWcjt2eDt6cjtKeDtYcjtZcjtLcjtVcjskeDt1MjtJbztkMjtaeDtReDtnMjtDaTttMjtwMjt3MjtYcztPbztYaTtfeDtWbDt6bDt0MTtpMTtYbDtZbDtLbDtlMTtVbDtHbDtIbDtxbDtXbDtqbDt2bDtzMTtvMTtiMjtYdTtZdTtsMTtoMTthMTtmMTtIbTtjMTt1MTtkMTtlaTtrMjtnMTtTMjtLdTtkbjtKbjtvZTskbjtEQTtabDtNMjtQMjtxbTttMTtVdTtXbTtwMTtHcjtRbDtuYTtOMjtDMjtqbTt3MTtiMTtlcztHdTt2bTtIdTtfbDtVZjtKbTtIcjtvYTtBMjskbTtadDtGO1VlO05yO0dpO1NzO0wyO3RoO3FyO05sO1dyO3JhO0dmO1QyO3F1O2xhO1d1O1d0O2loO2d0O290O2p1O1B0O050O3d0O0hmO2p3O2sxO2hhO3FmO1MxO00xO1AxO25SO29SO0hpO0FsO1ZtO1ptO0QyO0YyO0ZBO1FtO3JSO2xSO2hSO04xO2FSO2ZSO2NSO2FhO1JBO2VoO2ZhO2NhO3VhO2RhO1N1O1poO3NpO1R0O1dmO2FTO2ZTO1NmO2lpO3N0YXRpYyBDMT1udWxsO3N0YXRpYyBJQT1uZXcgR01hcDtzdGF0aWMgUjI7c3RhdGljIEkyPW51bGw7a3U7QTE7TDE7VDE7RDE7RjE7X207TzI7dDA7aTA7ZTA7eXg7RTI7QjI7amY7Y29uc3RydWN0b3IodCxpKXtpZihEaWFncmFtLmt3fHwoRGlhZ3JhbS5aaygpLERpYWdyYW0ua3c9ITApLEdTZXQuSmkodGhpcyksRGlhZ3JhbS5PQSh0aGlzKSx0aGlzLlp0PSEwLHRoaXMuVHQ9bnVsbCx0aGlzLlB0PTAsdGhpcy5OdD0wLHRoaXMud3Q9bnVsbCxEaWFncmFtLmlzVXNpbmdET00oKSl7Y29uc3Qgcz10aGlzLG49KCk9PntzLkFpKHJvb3QuZG9jdW1lbnQsXCJET01Db250ZW50TG9hZGVkXCIsbiwhMSkscy5zZXRSVEwoKX07cm9vdC5kb2N1bWVudC5ib2R5IT09bnVsbD90aGlzLnNldFJUTCgpOnMuVXQocm9vdC5kb2N1bWVudCxcIkRPTUNvbnRlbnRMb2FkZWRcIixuLCExKX10aGlzLkhmPW51bGwsRGlhZ3JhbS5WMihcIk1vZGVsXCIsUGFydE1hbmFnZXIpO2NvbnN0IGU9dGhpcztyZXR1cm4gdGhpcy5tMj1zPT5lLnBhcnRNYW5hZ2VyLmRvTW9kZWxEYXRhQ2hhbmdlZChzKSx0aGlzLnAyPXM9PmUucGFydE1hbmFnZXIuZG9Nb2RlbENoYW5nZWQocyksdGhpcy5TMT1udWxsLHRoaXMuTTE9bnVsbCx0aGlzLkVBKCksdGhpcy5tb2RlbD1Nb2RlbC56MigpLHRoaXMudGhlbWVNYW5hZ2VyPW5ldyBUaGVtZU1hbmFnZXIsdGhpcy5Jbz0hMCx0aGlzLkJBKCksdGhpcy5sYXlvdXQ9bmV3IExheW91dCx0aGlzLklvPSExLHRoaXMuclI9bnVsbCx0aGlzLmxSPW51bGwsdGhpcy5oUj1udWxsLHRoaXMuTjE9bnVsbCx0aGlzLmFSPW51bGwsdGhpcy5mUj1udWxsLHRoaXMuY1I9bnVsbCx0aGlzLmFhPW51bGwsdGhpcy5SQT1udWxsLHRoaXMuZWg9bnVsbCx0aGlzLmZhPW51bGwsdGhpcy5jYT1udWxsLHRoaXMudWE9bnVsbCx0aGlzLmRhPW51bGwsdGhpcy5TdT0oKT0+e30sdGhpcy5aaD1udWxsLHRoaXMuSHU9ITEsdGhpcy5XZj1uZXcgRGlhZ3JhbUhlbHBlcih0aGlzKSx0IT09dm9pZCAwJiYodHlwZW9mIHQ9PVwic3RyaW5nXCJ8fHJvb3QuRWxlbWVudCYmdCBpbnN0YW5jZW9mIEVsZW1lbnQ/dGhpcy5YMih0KTppPXQpLGkmJnRoaXMuc2V0UHJvcGVydGllcyhpKSx0aGlzLlp0PSExLHRoaXMucmVxdWVzdFVwZGF0ZSgpLHRoaXN9U0YoKXtyZXR1cm4gdGhpcy53dCE9PW51bGx9Z2V0IHJlbmRlcmVyKCl7cmV0dXJuIHRoaXMuVWZ9c2V0IHJlbmRlcmVyKHQpe2lmKHRoaXMgaW5zdGFuY2VvZiBPdmVydmlldylyZXR1cm47dD09PVwiXCImJih0PVwiZGVmYXVsdFwiKTtjb25zdCBpPXQudG9Mb3dlckNhc2UoKSxlPXRoaXMuVWY7aWYoaT09PWUpcmV0dXJuO3RoaXMuVWY9aTtsZXQgcz1udWxsO2k9PT1cImRlZmF1bHRcInx8aT09PVwiY2FudmFzXCI/KHM9dGhpcy5fbC5nZXQoXCJzdmdcIikscyE9PW51bGwmJnMuRXQucmVtb3ZlKCksdGhpcy53dCYmKHRoaXMuc2k9dGhpcy53dC5jaSksdGhpcy5zaS5jbGVhckNvbnRleHRDYWNoZSghMCkpOmk9PT1cInN2Z1wiPyh0aGlzLl9sLmhhcyhcInN2Z1wiKT9zPXRoaXMuX2wuZ2V0KFwic3ZnXCIpOihzPW5ldyBTVkdTdXJmYWNlKHRoaXMscm9vdC5kb2N1bWVudCksdGhpcy5hZGRSZW5kZXJlcihcInN2Z1wiLHMpKSx0aGlzLmRpdiE9PW51bGwmJnRoaXMuZGl2LmFwcGVuZENoaWxkKHMuRXQpLHRoaXMuc2k9cy5jaSx0aGlzLnd0JiYodGhpcy53dC5jaS5zZXRUcmFuc2Zvcm0odGhpcy5IaSwwLDAsdGhpcy5IaSwwLDApLHRoaXMud3QuY2kuY2xlYXJSZWN0KDAsMCx0aGlzLlB0LHRoaXMuTnQpKSk6aT09PVwiZGVidWdcIiYmKHRoaXMuX2wuaGFzKFwiU1ZHXCIpfHwocz1uZXcgU1ZHU3VyZmFjZSh0aGlzLHJvb3QuZG9jdW1lbnQpLHRoaXMuYWRkUmVuZGVyZXIoXCJTVkdcIixzKSxzLkV0LnN0eWxlLmJhY2tncm91bmRDb2xvcj1cIndoaXRlc21va2VcIix0aGlzLmRpdiE9PW51bGwmJnRoaXMuZGl2LmFmdGVyKHMuRXQpKSksdGhpcy5adHx8dGhpcy5yZWRyYXcoKX1FQSgpe3RoaXMuamY9bmV3IExpc3QsdGhpcy5zZXR1cFJvdXRlcnMoKSx0aGlzLndzPW5ldyBBbmltYXRpb25NYW5hZ2VyLHRoaXMud3MuRG8odGhpcyksdGhpcy5fdD0xNyx0aGlzLnMyPSExLHRoaXMuanU9ITEsdGhpcy5SeD1cImRlZmF1bHRcIix0aGlzLld0PW5ldyBMaXN0LHRoaXMuX2w9bmV3IEdNYXAsdGhpcy5VZj1cImRlZmF1bHRcIix0aGlzLnJlc2V0UmVuZGVyaW5nSGludHMoKSx0aGlzLnVSKCksdGhpcy5paT0xLHRoaXMuZ3Q9bmV3IFBvaW50KE5hTixOYU4pLnAoKSx0aGlzLnl4PW5ldyBQb2ludChOYU4sTmFOKSx0aGlzLm90PTEsdGhpcy4kbT0xLHRoaXMuSXg9bmV3IFBvaW50KE5hTixOYU4pLnAoKSx0aGlzLk94PU5hTix0aGlzLkV4PTFlLTQsdGhpcy5CeD0xMDAsdGhpcy5GPW5ldyBUcmFuc2Zvcm0sdGhpcy5WeD1uZXcgUG9pbnQoTmFOLE5hTikucCgpLHRoaXMueng9bmV3IFJlY3QoTmFOLE5hTixOYU4sTmFOKS5wKCksdGhpcy5lYT1uZXcgTWFyZ2luKDAsMCwwLDApLnAoKSx0aGlzLl9oPTEsdGhpcy5YeD0hMSx0aGlzLll4PW51bGwsdGhpcy5LeD1udWxsLHRoaXMuJGw9MSx0aGlzLlhmPVNwb3QuRGVmYXVsdCx0aGlzLlRyPTEsdGhpcy5ZbT1TcG90LkRlZmF1bHQsdGhpcy5VeD1TcG90Lk5vbmUsdGhpcy5HeD1TcG90Lk5vbmUsdGhpcy5VZT0hMCx0aGlzLlZ1PSExLHRoaXMuam49bmV3IFNldCx0aGlzLkRyPW5ldyBHU2V0LHRoaXMuc2E9bmV3IEdTZXQsdGhpcy5Sbz0hMSx0aGlzLmloPW5ldyBHTWFwLHRoaXMucXU9ITAsdGhpcy5LbT0yNTAsdGhpcy5ZZj0tMSx0aGlzLlVtPW5ldyBNYXJnaW4oMTYsMTYsMTYsMTYpLnAoKSx0aGlzLk5yPSExLHRoaXMuS2Y9ITEsdGhpcy56dT0hMCx0aGlzLkptPW5ldyBJbnB1dEV2ZW50LHRoaXMuSm0uZGlhZ3JhbT10aGlzLHRoaXMuSHI9bmV3IElucHV0RXZlbnQsdGhpcy5Ici5kaWFncmFtPXRoaXMsdGhpcy5vYT1uZXcgSW5wdXRFdmVudCx0aGlzLm9hLmRpYWdyYW09dGhpcyx0aGlzLkZyPW51bGwsdGhpcy52bj1udWxsLHRoaXMuanc9ITEsdGhpcy5kUigpLHRoaXMuV3I9bmV3IEdTZXQsdGhpcy5IeD0hMCx0aGlzLnF4PTEsdGhpcy5oMj0hMSx0aGlzLld4PTEsdGhpcy5qeD1cImF1dG9cIix0aGlzLkdtPVwiYXV0b1wiLHRoaXMuUnI9bnVsbCx0aGlzLklyPW51bGwsdGhpcy5Pcj1udWxsLHRoaXMuRXI9bnVsbCx0aGlzLkJyPW51bGwsdGhpcy5Wcj1udWxsLHRoaXMudng9bnVsbCx0aGlzLnpyPW51bGwsdGhpcy5KeD0hMSx0aGlzLlhyPW51bGwsdGhpcy5Zcj1udWxsLHRoaXMuS3I9bnVsbCx0aGlzLlVyPW51bGwsdGhpcy4keD0hMSx0aGlzLmsxPXt9LHRoaXMuaGE9W251bGwsbnVsbF0sdGhpcy5Jbz0hMSx0aGlzLmQyPSExLHRoaXMuWng9ITEsdGhpcy5ReD0hMSx0aGlzLmcyPSEwLHRoaXMuU3M9ITEsdGhpcy5sYT0hMSx0aGlzLncyPSEwLHRoaXMuWHM9LTIsdGhpcy50aD1uZXcgR01hcCx0aGlzLld1PW5ldyBMaXN0LHRoaXMuT289ITEsdGhpcy5YaT0hMCx0aGlzLl94PSEwLHRoaXMuVmw9ITAsdGhpcy56bD0hMCx0aGlzLnQxPSExLHRoaXMuaTE9ITAsdGhpcy5YbD0hMCx0aGlzLllsPSEwLHRoaXMuS2w9ITAsdGhpcy5lMT0hMCx0aGlzLlVsPSEwLHRoaXMuR2w9ITAsdGhpcy5IbD0hMCx0aGlzLnFsPSEwLHRoaXMuV2w9ITAsdGhpcy5qbD0hMCx0aGlzLnZsPSEwLHRoaXMuczE9ITAsdGhpcy5vMT0hMCx0aGlzLmIyPSExLHRoaXMucWY9ITEsdGhpcy5YdT0hMCx0aGlzLll1PSEwLHRoaXMubDE9ITAsdGhpcy5oMT0hMCx0aGlzLmExPTE2LHRoaXMuZjE9MTYsdGhpcy5IbT0hMSx0aGlzLmMxPSExLHRoaXMudTE9MCx0aGlzLmQxPTAsdGhpcy5laT1uZXcgTWFyZ2luKDUpLnAoKSx0aGlzLmsyPW5ldyBHU2V0KCkucCgpLHRoaXMuZzE9OTk5OTk5OTk5LHRoaXMuUzI9bmV3IEdTZXQoKS5wKCksdGhpcy5yYT0hMCx0aGlzLkt1PSEwLHRoaXMuR2Y9ITAsdGhpcy5kbj0hMSx0aGlzLkpuPSExLHRoaXMucXI9ITAsdGhpcy5ObD0hMSx0aGlzLiRuPSExLHRoaXMuREE9bmV3IEdTZXQsdGhpcy5UMj1uZXcgR1NldCx0aGlzLlpsPW51bGwsdGhpcy5NMj1uZXcgU2l6ZSg4LDgpLHRoaXMuUDI9OTk5LHRoaXMucW09ITEsdGhpcy5hUz0xLHRoaXMuZlM9MCx0aGlzLkdpPXtzY2FsZToxLHBvc2l0aW9uOm5ldyBQb2ludCxib3VuZHM6bmV3IFJlY3QsY2FudmFzU2l6ZTpuZXcgU2l6ZSxuZXdDYW52YXNTaXplOm5ldyBTaXplLGlzU2Nyb2xsOiExfSx0aGlzLkdpLmNhbnZhc1NpemU9dGhpcy5HaS5jYW52YXNTaXplLHRoaXMuR2kubmV3Q2FudmFzU2l6ZT10aGlzLkdpLm5ld0NhbnZhc1NpemUsdGhpcy5HaS5pc1Njcm9sbD0hMSx0aGlzLm0xPW5ldyBSZWN0KE5hTixOYU4sTmFOLE5hTikucCgpLHRoaXMuVXU9bmV3IFNpemUoTmFOLE5hTikucCgpLHRoaXMuV209bmV3IFJlY3QoTmFOLE5hTixOYU4sTmFOKS5wKCksdGhpcy5wMT0hMSx0aGlzLmdSKCksdGhpcy5lcz1udWxsLHRoaXMuR3U9ITEsdGhpcy5TZj1udWxsLHRoaXMucGFydE1hbmFnZXI9bmV3IFBhcnRNYW5hZ2VyLHRoaXMudG9vbE1hbmFnZXI9bmV3IFRvb2xNYW5hZ2VyLHRoaXMudG9vbE1hbmFnZXIuaW5pdGlhbGl6ZVN0YW5kYXJkVG9vbHMoKSx0aGlzLmRlZmF1bHRUb29sPXRoaXMudG9vbE1hbmFnZXIsdGhpcy5jdXJyZW50VG9vbD10aGlzLmRlZmF1bHRUb29sLHRoaXMuTDE9bnVsbCx0aGlzLlQxPW5ldyBEcmFnZ2luZ09wdGlvbnMsdGhpcy5EMT1udWxsLHRoaXMuRjE9bnVsbCx0aGlzLkExPSExLHRoaXMua3U9ITEsdGhpcy5jb21tYW5kSGFuZGxlcj1uZXcgQ29tbWFuZEhhbmRsZXIsdGhpcy5pMD1udWxsLHRoaXMuZTA9UG9pbnQuSGssdGhpcy5FMj0hMSx0aGlzLkhpPTEsdGhpcy5BbD1udWxsLHRoaXMuVm09MSx0aGlzLl9tPTAsdGhpcy5PMj1bMCwwLDAsMCwwXSx0aGlzLnQwPTAsdGhpcy5abT0xLHRoaXMuRDI9MCx0aGlzLkYyPW5ldyBQb2ludCx0aGlzLkZBPTUwMCx0aGlzLnZtPW5ldyBQb2ludCx0aGlzLlFtPSExfXN0YXRpYyBWQT1yb290LmRvY3VtZW50IT09dm9pZCAwO3N0YXRpYyBpc1VzaW5nRE9NKCl7cmV0dXJuIERpYWdyYW0uVkF9c3RhdGljIHVzZURPTSh0KXtEaWFncmFtLlZBPXQ/cm9vdC5kb2N1bWVudCE9PXZvaWQgMDohMX1zdGF0aWMgc3M9bmV3IFdlYWtNYXA7Y2xlYXIoKXt0aGlzLmFuaW1hdGlvbk1hbmFnZXIuc3RvcEFuaW1hdGlvbigpLHRoaXMubW9kZWwuY2xlYXIoKSxEaWFncmFtLnpBKCksdGhpcy5YQSghMSksdGhpcy5XdS5jbGVhcigpLHRoaXMuWUEoKSx0aGlzLlpsPW51bGwsdGhpcy5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKSx0aGlzLmVuc3VyZUJvdW5kcygpLHRoaXMuTCgpfVhBKHQpe3RoaXMuYW5pbWF0aW9uTWFuYWdlci5zdG9wQW5pbWF0aW9uKCEwKSx0aGlzLmsyPW5ldyBHU2V0KCkucCgpLHRoaXMuUzI9bmV3IEdTZXQoKS5wKCk7Y29uc3QgaT10aGlzLnNraXBzVW5kb01hbmFnZXIsZT10aGlzLkNpIT09bnVsbCYmdGhpcy5DaSE9PXZvaWQgMDtlJiYodGhpcy5za2lwc1VuZG9NYW5hZ2VyPSEwKTtsZXQgcz1udWxsO3RoaXMuZXMhPT1udWxsJiYocz10aGlzLmVzLnBhcnQscyE9PW51bGwmJnRoaXMucmVtb3ZlKHMpKTtjb25zdCBuPVtdLG89dGhpcy5XdC5sZW5ndGg7aWYodCl7Zm9yKGxldCByPTA7cjxvO3IrKyl7Y29uc3QgaD10aGlzLld0Lmhbcl0ucGFydHM7Zm9yKDtoLm5leHQoKTspe2NvbnN0IGY9aC52YWx1ZTtmIT09cyYmZi5kYXRhPT09bnVsbCYmbi5wdXNoKGYpfX1mb3IobGV0IHI9MDtyPG4ubGVuZ3RoO3IrKyl7Y29uc3QgbD1uW3JdO3RoaXMucmVtb3ZlKGwpfX1mb3IobGV0IHI9MDtyPG87cisrKXRoaXMuV3QuaFtyXS5KRigpO3JldHVybiB0aGlzLnBhcnRNYW5hZ2VyLmNsZWFyKCksdGhpcy5qbi5jbGVhcigpLHRoaXMuRHIuY2xlYXIoKSx0aGlzLnNhLmNsZWFyKCksdGhpcy5paC5jbGVhcigpLHRoaXMuV3IuY2xlYXIoKSx0aGlzLlNmPW51bGwsdGhpcy5XdS5jbGVhcigpLHRoaXMuWUEoKSxVLlVrPVtdLHMhPT1udWxsJiYodGhpcy5hZGQocyksdGhpcy5wYXJ0TWFuYWdlci5wYXJ0cy5kZWxldGUocykpLGUmJih0aGlzLnNraXBzVW5kb01hbmFnZXI9aSksbn1zdGF0aWMgczA9bnVsbDtzdGF0aWMgUjE9XCJcIjtzdGF0aWMgekEoKXtEaWFncmFtLnMwPW51bGwsRGlhZ3JhbS5SMT1cIlwifXN0YXRpYyBERSgpe3JldHVybiBudWxsfXJlc2V0KCl7dGhpcy5jbGVhcigpLHRoaXMuWnQ9ITAsdGhpcy5FQSgpLHRoaXMudGhlbWVNYW5hZ2VyPW5ldyBUaGVtZU1hbmFnZXIsdGhpcy5uaCgpLHRoaXMuSW89ITAsdGhpcy5CQSgpLHRoaXMubGF5b3V0PW5ldyBMYXlvdXQsdGhpcy5Jbz0hMSx0aGlzLm1vZGVsPU1vZGVsLnoyKCksdGhpcy5tb2RlbC51bmRvTWFuYWdlcj1uZXcgVW5kb01hbmFnZXIsdGhpcy5IdT0hMSx0aGlzLlp0PSExLHRoaXMuTCgpfWdSKCl7dGhpcy5Hcj1uZXcgR01hcCx0aGlzLk4yPW5ldyBOb2RlKCkuYWRkKG5ldyBUZXh0QmxvY2soe3N0cm9rZTpcImJsYWNrXCIsZm9udDpcIjEwcHQgc2Fucy1zZXJpZlwifSkuYmluZChcInRleHRcIixcIlwiLFUudG9TdHJpbmcpLnRoZW1lKFwic3Ryb2tlXCIsXCJ0ZXh0XCIpLnRoZW1lKFwiZm9udFwiLFwibm9ybWFsXCIpKSx0aGlzLkdyLnNldChcIlwiLHRoaXMuTjIpLHRoaXMuR3Iuc2V0KFwiQ29tbWVudFwiLG5ldyBOb2RlKCkuYWRkKG5ldyBUZXh0QmxvY2soe3N0cm9rZTpcImJyb3duXCIsZm9udDpcIjEwcHQgc2Fucy1zZXJpZlwifSkuYmluZChcInRleHRcIixcIlwiLFUudG9TdHJpbmcpLnRoZW1lKFwic3Ryb2tlXCIsXCJjb21tZW50XCIpLnRoZW1lKFwiZm9udFwiLFwibm9ybWFsXCIpKSksdGhpcy5Hci5zZXQoXCJMaW5rTGFiZWxcIixuZXcgTm9kZSh7c2VsZWN0YWJsZTohMSxhdm9pZGFibGU6ITF9KS5hZGQobmV3IFNoYXBlKFwiRWxsaXBzZVwiLHtmaWxsOlwiYmxhY2tcIixzdHJva2U6bnVsbCxkZXNpcmVkU2l6ZTpuZXcgU2l6ZSgzLDMpLml0KCl9KS50aGVtZShcImZpbGxcIixcImxpbmtcIikpKSx0aGlzLm5hPW5ldyBHTWFwLHRoaXMuTDI9bmV3IEdyb3VwKFBhbmVsLlZlcnRpY2FsLHtzZWxlY3Rpb25PYmplY3ROYW1lOlwiR1JPVVBQQU5FTFwifSkuYWRkKG5ldyBUZXh0QmxvY2soe3N0cm9rZTpcImJsYWNrXCIsZm9udDpcImJvbGQgMTJwdCBzYW5zLXNlcmlmXCJ9KS5iaW5kKFwidGV4dFwiLFwiXCIsVS50b1N0cmluZykudGhlbWUoXCJzdHJva2VcIixcInRleHRcIikudGhlbWUoXCJmb250XCIsXCJib2xkXCIpLG5ldyBQYW5lbChQYW5lbC5BdXRvLHtuYW1lOlwiR1JPVVBQUEFORUxcIn0pLmFkZChuZXcgU2hhcGUoe2ZpbGw6XCJyZ2JhKDEyOCwxMjgsMTI4LDAuMilcIixzdHJva2U6XCJibGFja1wiLHN0cm9rZVdpZHRoOjF9KS50aGVtZShcImZpbGxcIixcImdyb3VwXCIpLnRoZW1lKFwic3Ryb2tlXCIsXCJvdXRsaW5lXCIpLnRoZW1lKFwic3Ryb2tlV2lkdGhcIixcImdyb3VwXCIpLG5ldyBQbGFjZWhvbGRlcih7cGFkZGluZzo1fSkudGhlbWUoXCJwYWRkaW5nXCIsXCJncm91cFwiKSkpLHRoaXMubmEuc2V0KFwiXCIsdGhpcy5MMiksdGhpcy5RbD1uZXcgR01hcCx0aGlzLkMyPW5ldyBMaW5rKCkuYWRkKG5ldyBTaGFwZSh7aXNQYW5lbE1haW46ITAsc3Ryb2tlOlwiYmxhY2tcIn0pLnRoZW1lKFwic3Ryb2tlXCIsXCJsaW5rXCIpLG5ldyBTaGFwZSh7dG9BcnJvdzpcIlN0YW5kYXJkXCIsZmlsbDpcImJsYWNrXCIsc3Ryb2tlOm51bGwsc3Ryb2tlV2lkdGg6MH0pLnRoZW1lKFwidG9BcnJvd1wiKS50aGVtZShcImZpbGxcIixcImxpbmtcIikpLHRoaXMuUWwuc2V0KFwiXCIsdGhpcy5DMiksdGhpcy5RbC5zZXQoXCJDb21tZW50XCIsbmV3IExpbmsoKS5hZGQobmV3IFNoYXBlKHtpc1BhbmVsTWFpbjohMCxzdHJva2U6XCJicm93blwifSkudGhlbWUoXCJzdHJva2VcIixcImNvbW1lbnRcIikpKSx0aGlzLmptPW5ldyBBZG9ybm1lbnQoUGFuZWwuQXV0bykuYWRkKG5ldyBTaGFwZSh7ZmlsbDpudWxsLHN0cm9rZTpcImRvZGdlcmJsdWVcIixzdHJva2VXaWR0aDozfSkudGhlbWUoXCJzdHJva2VcIixcInNlbGVjdGlvblwiKS50aGVtZShcInN0cm9rZVdpZHRoXCIsXCJzZWxlY3Rpb25cIiksbmV3IFBsYWNlaG9sZGVyKHttYXJnaW46MS41fSkudGhlbWUoXCJtYXJnaW5cIixcInNlbGVjdGlvblwiLFwibnVtYmVyc1wiLG51bGwsdD0+dD9uZXcgTWFyZ2luKHQvMik6MS41KSksdGhpcy53MT10aGlzLmptLHRoaXMuYjE9bmV3IEFkb3JubWVudChQYW5lbC5MaW5rKS5hZGQobmV3IFNoYXBlKHtpc1BhbmVsTWFpbjohMCxmaWxsOm51bGwsc3Ryb2tlOlwiZG9kZ2VyYmx1ZVwiLHN0cm9rZVdpZHRoOjN9KS50aGVtZShcInN0cm9rZVwiLFwic2VsZWN0aW9uXCIpLnRoZW1lKFwic3Ryb2tlV2lkdGhcIixcInNlbGVjdGlvblwiKSl9c2V0UlRMKHQpe2xldCBpPXQ9PT12b2lkIDA/dGhpcy5kaXY6dDtpPT09bnVsbCYmKGk9cm9vdC5kb2N1bWVudC5ib2R5KTtjb25zdCBlPVUuZHMoXCJkaXZcIik7ZS5kaXI9XCJydGxcIixlLnN0eWxlLmNzc1RleHQ9XCJmb250LXNpemU6IDE0cHg7IHdpZHRoOiAxcHg7IGhlaWdodDogMXB4OyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwMDBweDsgb3ZlcmZsb3c6IHNjcm9sbDtcIixlLnRleHRDb250ZW50PVwiQVwiLGkuYXBwZW5kQ2hpbGQoZSk7bGV0IHM9XCJyZXZlcnNlXCI7ZS5zY3JvbGxMZWZ0PjA/cz1cImRlZmF1bHRcIjooZS5zY3JvbGxMZWZ0PTEsZS5zY3JvbGxMZWZ0PT09MCYmKHM9XCJuZWdhdGl2ZVwiKSksaS5yZW1vdmVDaGlsZChlKSx0aGlzLlJ4PXN9c2V0U2Nyb2xsV2lkdGgodCl7bGV0IGk9dD09PXZvaWQgMD90aGlzLmRpdjp0O2k9PT1udWxsJiYoaT1yb290LmRvY3VtZW50LmJvZHkpO2xldCBlPTA7aWYoRGlhZ3JhbS5pc1VzaW5nRE9NKCkpe2xldCBzPURpYWdyYW0uSTIsbj1EaWFncmFtLlIyO3M9PT1udWxsJiYoRGlhZ3JhbS5JMj1VLmRzKFwicFwiKSxzPURpYWdyYW0uSTIscy5zdHlsZS53aWR0aD1cIjEwMCVcIixzLnN0eWxlLmhlaWdodD1cIjIwMHB4XCIscy5zdHlsZS5ib3hTaXppbmc9XCJjb250ZW50LWJveFwiLERpYWdyYW0uUjI9VS5kcyhcImRpdlwiKSxuPURpYWdyYW0uUjIsbi5zdHlsZS5wb3NpdGlvbj1cImFic29sdXRlXCIsbi5zdHlsZS52aXNpYmlsaXR5PVwiaGlkZGVuXCIsbi5zdHlsZS53aWR0aD1cIjIwMHB4XCIsbi5zdHlsZS5oZWlnaHQ9XCIxNTBweFwiLG4uc3R5bGUuYm94U2l6aW5nPVwiY29udGVudC1ib3hcIixuLmFwcGVuZENoaWxkKHMpKSxuLnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIsaS5hcHBlbmRDaGlsZChuKTtjb25zdCBvPXMub2Zmc2V0V2lkdGg7bi5zdHlsZS5vdmVyZmxvdz1cInNjcm9sbFwiO2xldCByPXMub2Zmc2V0V2lkdGg7bz09PXImJihyPW4uY2xpZW50V2lkdGgpLGkucmVtb3ZlQ2hpbGQobiksZT1vLXIsZT09PTAmJiFVLnJyJiYoZT0xMSl9dGhpcy5fdD1lLHRoaXMuczI9ITB9YWkodCl7dCBpbiBBdXRvU2NhbGU/dGhpcy5hdXRvU2NhbGU9dDpVLmhyKHRoaXMsdCl9dG9TdHJpbmcodCl7dD09PXZvaWQgMCYmKHQ9MCk7bGV0IGk9XCJcIjt0aGlzLmRpdiYmdGhpcy5kaXYuaWQmJihpPXRoaXMuZGl2LmlkKTtsZXQgZT0nRGlhZ3JhbSBcIicraSsnXCInO2lmKHQ8PTApcmV0dXJuIGU7Y29uc3Qgcz10aGlzLld0Lml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7ZSs9YFxuICBgK24udG9TdHJpbmcodC0xKX1yZXR1cm4gZX1zdGF0aWMgT0EodCl7RGlhZ3JhbS5DMT10fXN0YXRpYyB3bSgpe3JldHVybiBEaWFncmFtLkMxfXN0YXRpYyBmcm9tRGl2KHQpe2xldCBpPXQ7aWYodHlwZW9mIHQ9PVwic3RyaW5nXCImJihpPXJvb3QuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodCkpLGkgaW5zdGFuY2VvZiBIVE1MRGl2RWxlbWVudCl7Y29uc3QgZT1EaWFncmFtLnNzLmdldChpKTtpZihlKXJldHVybiBlfXJldHVybiBudWxsfWdldCBkaXYoKXtyZXR1cm4gdGhpcy5UdH1zZXQgZGl2KHQpe2lmKHQhPT1udWxsJiZVLmUodCxIVE1MRGl2RWxlbWVudCxEaWFncmFtLFwiZGl2XCIpLHRoaXMuVHQhPT10KXtjb25zdCBpPXRoaXMuVHQ7aWYoaSE9PW51bGwpe2lmKERpYWdyYW0uc3MuZGVsZXRlKGkpLGkuZ29EaWFncmFtPXZvaWQgMCxpLmdvPXZvaWQgMCxpLmlubmVySFRNTD1cIlwiLHRoaXMud3QhPT1udWxsKXtjb25zdCBzPXRoaXMud3QuRXQ7dGhpcy5BaShzLFwicG9pbnRlcm1vdmVcIix0aGlzLmZhLCExKSx0aGlzLkFpKHMsXCJwb2ludGVyZG93blwiLHRoaXMuZWgsITEpLHRoaXMuQWkocyxcInBvaW50ZXJ1cFwiLHRoaXMuY2EsITEpLHRoaXMuQWkocyxcInBvaW50ZXJvdXRcIix0aGlzLnVhLCExKSx0aGlzLkFpKHMsXCJwb2ludGVyY2FuY2VsXCIsdGhpcy5kYSwhMSksdGhpcy53dC5kaXNwb3NlKCl9dGhpcy5IZiYmKHRoaXMuSGYuZGlzY29ubmVjdCgpLHRoaXMuSGY9bnVsbCk7Y29uc3QgZT10aGlzLnRvb2xNYW5hZ2VyO2UhPT1udWxsJiYoZS5tb3VzZURvd25Ub29scy5lYWNoKHM9PnMuY2FuY2VsV2FpdEFmdGVyKCkpLGUubW91c2VNb3ZlVG9vbHMuZWFjaChzPT5zLmNhbmNlbFdhaXRBZnRlcigpKSxlLm1vdXNlVXBUb29scy5lYWNoKHM9PnMuY2FuY2VsV2FpdEFmdGVyKCkpKSxlLmNhbmNlbFdhaXRBZnRlcigpLHRoaXMuY3VycmVudFRvb2wuZG9DYW5jZWwoKSx0aGlzLnd0PW51bGwsdGhpcy5BaShyb290LFwicmVzaXplXCIsdGhpcy5OMSwhMSksdGhpcy5BaShyb290LFwid2hlZWxcIix0aGlzLmFhLCEwKSxEaWFncmFtLndtKCk9PT10aGlzJiZEaWFncmFtLk9BKG51bGwpfWVsc2UgdGhpcy5laD09PW51bGwmJih0aGlzLiRuPSExKTtpZih0aGlzLlR0PW51bGwsdCE9PW51bGwpe2NvbnN0IGU9RGlhZ3JhbS5zcy5nZXQodCk7ZSYmKGUuZGl2PW51bGwpLHRoaXMuWDIodCksdGhpcy5TdSgpLHRoaXMudGhlbWVNYW5hZ2VyJiZ0aGlzLnRoZW1lTWFuYWdlci5tUigpfWVsc2UgdGhpcy50aGVtZU1hbmFnZXImJnRoaXMudGhlbWVNYW5hZ2VyLnBSKCl9fXNldHVwUm91dGVycygpe3RoaXMuamYucHVzaChuZXcgQXZvaWRzTm9kZXNSb3V0ZXIpfVgyKHQpe2NvbnN0IGk9dGhpcztpZighRGlhZ3JhbS5pc1VzaW5nRE9NKCkpcmV0dXJuO3Q9PW51bGwmJlUubihcIkRpYWdyYW0gc2V0dXAgcmVxdWlyZXMgYW4gYXJndW1lbnQgRElWLlwiKSxpLlR0IT09bnVsbCYmVS5uKFwiRGlhZ3JhbSBoYXMgYWxyZWFkeSBjb21wbGV0ZWQgc2V0dXAuXCIpLHR5cGVvZiB0PT1cInN0cmluZ1wiP2kuVHQ9cm9vdC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KTp0IGluc3RhbmNlb2YgSFRNTERpdkVsZW1lbnQ/aS5UdD10OlUubihcIk5vIERJViBvciBESVYgaWQgc3VwcGxpZWQ6IFwiK3QpLGkuVHQ9PT1udWxsJiZVLm4oXCJJbnZhbGlkIERJViBpZDsgY291bGQgbm90IGdldCBlbGVtZW50IHdpdGggaWQ6IFwiK3QpO2NvbnN0IGU9RGlhZ3JhbS5zcy5nZXQoaS5UdCk7aWYoZSYmZSE9PXRoaXMmJlUubihcIkludmFsaWQgZGl2IGlkOyBkaXYgYWxyZWFkeSBoYXMgYSBEaWFncmFtIGFzc29jaWF0ZWQgd2l0aCBpdC5cIiksIWkuSGYmJnJvb3QuUmVzaXplT2JzZXJ2ZXIpe2NvbnN0IGE9cm9vdC5SZXNpemVPYnNlcnZlcixjPVUuS2soKCk9PmkucmVxdWVzdFVwZGF0ZSgpLDI1MCwhMSk7aS5IZj1uZXcgYSgoKT0+YygpKSxpLkhmLm9ic2VydmUoaS5UdCl9cm9vdC5nZXRDb21wdXRlZFN0eWxlKGkuVHQsbnVsbCkucG9zaXRpb249PT1cInN0YXRpY1wiJiYoaS5UdC5zdHlsZS5wb3NpdGlvbj1cInJlbGF0aXZlXCIpO2xldCBzPTU7Y29uc3Qgbj1cInJnYmEoMlwiK3MrXCI1LCAyNTUsIDI1NSwgMClcIjtzLS0saS5UdC5zdHlsZVtcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiXT1uLGkuVHQuaW5uZXJIVE1MPVwiXCIsRGlhZ3JhbS5zcy5zZXQoaS5UdCxpKSxpLlR0LmdvRGlhZ3JhbT1pLGkuVHQuZ289cm9vdC5nbztjb25zdCBvPW5ldyBDYW52YXNTdXJmYWNlKGkpO28uc3R5bGUhPT12b2lkIDAmJihvLnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIixvLnN0eWxlLnRvcD1cIjBweFwiLG8uc3R5bGUubGVmdD1cIjBweFwiLHJvb3QuZ2V0Q29tcHV0ZWRTdHlsZShpLlR0LG51bGwpLmdldFByb3BlcnR5VmFsdWUoXCJkaXJlY3Rpb25cIik9PT1cInJ0bFwiJiYoaS5qdT0hMCksby5zdHlsZS56SW5kZXg9XCIyXCIsby5zdHlsZS51c2VyU2VsZWN0PVwibm9uZVwiLG8uc3R5bGUuTW96VXNlclNlbGVjdD1cIm5vbmVcIixvLnN0eWxlLnRvdWNoQWN0aW9uPVwibm9uZVwiLG8uc3R5bGUubGV0dGVyU3BhY2luZz1cIm5vcm1hbCAhaW1wb3J0YW50XCIsby5zdHlsZS53b3JkU3BhY2luZz1cIm5vcm1hbCAhaW1wb3J0YW50XCIsby5zdHlsZS5sYW5nPVwidW5rbm93blwiKSxpLnd0PW8saS5zaT1vLmNpO2NvbnN0IHI9aS5zaTtpLkhpPWkuY29tcHV0ZVBpeGVsUmF0aW8oKSxpLnZpZXdTaXplLmlzUmVhbCgpfHwoaS5QdD1pLlR0LmNsaWVudFdpZHRofHwxLGkuTnQ9aS5UdC5jbGllbnRIZWlnaHR8fDEpLGkuS0EoaS5QdCxpLk50KTtjb25zdCBsPWk7aS5UdC5pbnNlcnRCZWZvcmUoby5FdCxpLlR0LmZpcnN0Q2hpbGQpO2NvbnN0IGg9bmV3IENhbnZhc1N1cmZhY2UobnVsbCk7aWYoaC53aWR0aD0xLGguaGVpZ2h0PTEsaS5uUj1oLGkub1I9aC5jaSxEaWFncmFtLmlzVXNpbmdET00oKSl7Y29uc3QgYT1VLmRzKFwiZGl2XCIpLGM9VS5kcyhcImRpdlwiKTthLnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIixhLnN0eWxlLm92ZXJmbG93PVwiYXV0b1wiLGEuc3R5bGUud2lkdGg9aS5QdCtcInB4XCIsYS5zdHlsZS5oZWlnaHQ9aS5OdCtcInB4XCIsYS5zdHlsZS56SW5kZXg9XCIxXCIsYy5zdHlsZS5wb3NpdGlvbj1cImFic29sdXRlXCIsYy5zdHlsZS53aWR0aD1cIjFweFwiLGMuc3R5bGUuaGVpZ2h0PVwiMXB4XCIsaS5UdC5hcHBlbmRDaGlsZChhKSxhLmFwcGVuZENoaWxkKGMpLGEub25zY3JvbGw9RGlhZ3JhbS55UixhLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLERpYWdyYW0ud1IpLGEuQz1pLGEueFI9ITAsYS5iUj0hMCxpLlMxPWEsaS5NMT1jfWkuU3U9VS5LaygoKT0+e2kuQWw9bnVsbCxpLkwoKX0sMzAwLCExKSxpLk4xPVUuS2soKCk9PntpLlVNKCl9LDI1MCwhMSksaS5aaD1hPT4oYS5wcmV2ZW50RGVmYXVsdCgpLCExKSxpLmFhPWE9PntpZighbC5pc0VuYWJsZWQpcmV0dXJuO2NvbnN0IGM9bC52ZihhLCEwKTtjLmJ1YmJsZXM9ITA7bGV0IHU9MCxkPTA7Yy5kZWx0YT0wLGEuZGVsdGFYIT09dm9pZCAwPyhhLmRlbHRhWCE9PTAmJih1PWEuZGVsdGFYPjA/MTotMSksYS5kZWx0YVkhPT0wJiYoZD1hLmRlbHRhWT4wPzE6LTEpLGMuZGVsdGE9TWF0aC5hYnMoYS5kZWx0YVgpPk1hdGguYWJzKGEuZGVsdGFZKT8tdTotZCk6YS53aGVlbERlbHRhWCE9PXZvaWQgMD8oYS53aGVlbERlbHRhWCE9PTAmJih1PWEud2hlZWxEZWx0YVg+MD8tMToxKSxhLndoZWVsRGVsdGFZIT09MCYmKGQ9YS53aGVlbERlbHRhWT4wPy0xOjEpLGMuZGVsdGE9TWF0aC5hYnMoYS53aGVlbERlbHRhWCk+TWF0aC5hYnMoYS53aGVlbERlbHRhWSk/LXU6LWQpOmEud2hlZWxEZWx0YSE9PXZvaWQgMCYmYS53aGVlbERlbHRhIT09MCYmKGMuZGVsdGE9YS53aGVlbERlbHRhPjA/MTotMSksbC5kb01vdXNlV2hlZWwoKSxsLmdhKGMsYSl9LGkuUkE9YT0+e2lmKCFsLmlzRW5hYmxlZClyZXR1cm47aS5xZj0hMSxsLnZmKGEsITApO2NvbnN0IGM9bC5jdXJyZW50VG9vbDtjLmNhbmNlbFdhaXRBZnRlcigpLGMuc3RhbmRhcmRNb3VzZU92ZXIoKX0saS5laD1hPT57aWYoIWwuaXNFbmFibGVkKXJldHVybjtpLnFmPSEwO2NvbnN0IGM9bC5rMTtjW2EucG9pbnRlcklkXT09PXZvaWQgMCYmKGNbYS5wb2ludGVySWRdPWEpO2NvbnN0IHU9bC5oYTtsZXQgZD0hMTtpZih1WzBdIT09bnVsbCYmKHVbMF0ucG9pbnRlcklkPT09YS5wb2ludGVySWR8fHVbMF0ucG9pbnRlclR5cGUhPT1hLnBvaW50ZXJUeXBlKSl1WzBdPWE7ZWxzZSBpZih1WzFdIT09bnVsbCYmdVsxXS5wb2ludGVySWQ9PT1hLnBvaW50ZXJJZCl1WzFdPWEsZD0hMDtlbHNlIGlmKHVbMF09PT1udWxsKXVbMF09YTtlbHNlIGlmKHVbMV09PT1udWxsKXVbMV09YSxkPSEwO2Vsc2V7YS5wcmV2ZW50RGVmYXVsdCgpO3JldHVybn1jb25zdCBtPWEucG9pbnRlclR5cGU9PT1cInRvdWNoXCJ8fGEucG9pbnRlclR5cGU9PT1cInBlblwiO20mJihsLmp3PSExLGwuUW09ITApO2NvbnN0IGc9bC5rUihhLGEsZCkscD1sLkYyLHc9bT8yNToxMDtpZihhLnRpbWVTdGFtcC1sLkQyPGwuRkEmJiEoTWF0aC5hYnMocC54LWEuc2NyZWVuWCk+d3x8TWF0aC5hYnMocC55LWEuc2NyZWVuWSk+dyk/bC5abSsrOmwuWm09MSxnLmNsaWNrQ291bnQ9bC5abSxsLkQyPWEudGltZVN0YW1wLGwuRjIuc2V0VG8oYS5zY3JlZW5YLGEuc2NyZWVuWSksbC5kb01vdXNlRG93bigpLGEuYnV0dG9uPT09MSl7YS5wcmV2ZW50RGVmYXVsdCgpO3JldHVybn1sLmdhKGcsYSl9LGkuZmE9YT0+e2lmKCFsLmlzRW5hYmxlZClyZXR1cm47aS5xZj0hMDtjb25zdCBjPWwuaGE7aWYoY1swXSE9PW51bGwmJihjWzBdLnBvaW50ZXJJZD09PWEucG9pbnRlcklkfHxjWzBdLnBvaW50ZXJUeXBlIT09YS5wb2ludGVyVHlwZSkpY1swXT1hO2Vsc2UgaWYoY1sxXSE9PW51bGwmJmNbMV0ucG9pbnRlcklkPT09YS5wb2ludGVySWQpe2NbMV09YTtyZXR1cm59ZWxzZSBpZihjWzBdPT09bnVsbCljWzBdPWE7ZWxzZSByZXR1cm47aWYoY1swXS5wb2ludGVySWQhPT1hLnBvaW50ZXJJZClyZXR1cm47Y29uc3QgdT1sLlNSKGEsYSxjWzFdIT09bnVsbCk7bC5kb01vdXNlTW92ZSgpLGwuZ2EodSxhKX0saS5jYT1hPT57aWYoIWwuaXNFbmFibGVkKXJldHVybjtpLnFmPSEwO2NvbnN0IGM9YS5wb2ludGVyVHlwZT09PVwidG91Y2hcInx8YS5wb2ludGVyVHlwZT09PVwicGVuXCIsdT1sLmsxO2lmKGMmJmwuancpe2RlbGV0ZSB1W2EucG9pbnRlcklkXSxhLnByZXZlbnREZWZhdWx0KCk7cmV0dXJufWNvbnN0IGQ9bC5oYTtpZihkWzBdIT09bnVsbCYmKGRbMF0ucG9pbnRlcklkPT09YS5wb2ludGVySWR8fGRbMF0ucG9pbnRlclR5cGUhPT1hLnBvaW50ZXJUeXBlKSlkWzBdPW51bGw7ZWxzZSBpZihkWzFdIT09bnVsbCYmZFsxXS5wb2ludGVySWQ9PT1hLnBvaW50ZXJJZCl7ZFsxXT1udWxsO3JldHVybn1lbHNlIHJldHVybjtjb25zdCBtPWwuWTIoYSwhMSwhMCwhMSwhMCwhMSk7bGV0IGc9cm9vdC5kb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KGEuY2xpZW50WCxhLmNsaWVudFkpfHxudWxsO2chPT1udWxsJiZnLnNoYWRvd1Jvb3QhPT12b2lkIDAmJmcuc2hhZG93Um9vdCE9PW51bGwmJihnPWcuc2hhZG93Um9vdC5lbGVtZW50RnJvbVBvaW50KGEuY2xpZW50WCxhLmNsaWVudFkpKSxnIT09bnVsbCYmZy5DIGluc3RhbmNlb2YgRGlhZ3JhbSYmZy5DIT09bCYmZy5DLm8wKGEsbSksZz09PW51bGwmJihnPWEudGFyZ2V0KSxsLm8wKGEsbSksbS5jbGlja0NvdW50PWwuWm0sbS50YXJnZXREaWFncmFtPWwuSTEoYSxnKSxtLnRhcmdldE9iamVjdD1udWxsLGwuZG9Nb3VzZVVwKCksbC5nYShtLGEpLGMmJihsLlFtPSExKX0saS51YT1hPT57aWYoIWwuaXNFbmFibGVkKXJldHVybjtpLnFmPSExO2NvbnN0IGM9bC5rMTtjW2EucG9pbnRlcklkXSYmZGVsZXRlIGNbYS5wb2ludGVySWRdO2NvbnN0IHU9bC5oYTtpZih1WzBdIT09bnVsbCYmdVswXS5wb2ludGVySWQ9PT1hLnBvaW50ZXJJZCYmKHVbMF09bnVsbCksdVsxXSE9PW51bGwmJnVbMV0ucG9pbnRlcklkPT09YS5wb2ludGVySWQmJih1WzFdPW51bGwpLGEucG9pbnRlclR5cGU9PT1cInRvdWNoXCJ8fGEucG9pbnRlclR5cGU9PT1cInBlblwiKXJldHVybjtjb25zdCBkPWwuY3VycmVudFRvb2w7ZC5jYW5jZWxXYWl0QWZ0ZXIoKSxkLnN0YW5kYXJkTW91c2VPdmVyKCl9LGkuZGE9YT0+e2NvbnN0IGM9bC5oYTtjWzBdIT09bnVsbCYmY1swXS5wb2ludGVySWQ9PT1hLnBvaW50ZXJJZD8oY1swXT1udWxsLGwuUW09ITEpOmNbMV0hPT1udWxsJiZjWzFdLnBvaW50ZXJJZD09PWEucG9pbnRlcklkJiYoY1sxXT1udWxsKX07Y29uc3QgZj1yO2lmKGkuUDE9Zi56W1UuT3MoXCI3ZWJhMTdhNGNhM2IxYTgzNDZcIildW1UuT3MoXCI3OGExMThiN1wiKV0oZi56LERpYWdyYW0udnUscyxzKSxyLmNsZWFyQ29udGV4dENhY2hlKCEwKSxpLk1SKCksdGhpcy5VZj09PVwic3ZnXCIpe2NvbnN0IGE9dGhpcy5fbC5nZXQoXCJzdmdcIik7dGhpcy5UdCYmdGhpcy5UdC5hcHBlbmRDaGlsZChhLkV0KSx0aGlzLnNpPWEuY2l9fWFkZEV2ZW50TGlzdGVuZXIodCxpLGUscyl7dC5hZGRFdmVudExpc3RlbmVyKGksZSx7Y2FwdHVyZTpzLHBhc3NpdmU6ITF9KX1VdCh0LGksZSxzKXt0LmFkZEV2ZW50TGlzdGVuZXIoaSxlLHtjYXB0dXJlOnMscGFzc2l2ZTohMX0pfXJlbW92ZUV2ZW50TGlzdGVuZXIodCxpLGUscyl7dC5yZW1vdmVFdmVudExpc3RlbmVyKGksZSx7Y2FwdHVyZTpzfSl9QWkodCxpLGUscyl7dC5yZW1vdmVFdmVudExpc3RlbmVyKGksZSx7Y2FwdHVyZTpzfSl9TVIoKXtjb25zdCB0PXRoaXM7bGV0IGk9dGhpcy53dC5FdDtpIGluc3RhbmNlb2YgSFRNTENhbnZhc0VsZW1lbnR8fChpPXQuZGl2KSx0aGlzLlV0KGksXCJwb2ludGVyZG93blwiLHQuZWgsITEpLHRoaXMuVXQoaSxcInBvaW50ZXJtb3ZlXCIsdC5mYSwhMSksdGhpcy5VdChpLFwicG9pbnRlcnVwXCIsdC5jYSwhMSksdGhpcy5VdChpLFwicG9pbnRlcm91dFwiLHQudWEsITEpLHRoaXMuVXQoaSxcInBvaW50ZXJjYW5jZWxcIix0LmRhLCExKSx0aGlzLlV0KGksXCJwb2ludGVyZW50ZXJcIix0LlBSLCExKSx0aGlzLlV0KGksXCJwb2ludGVybGVhdmVcIix0Lk5SLCExKSx0aGlzLlV0KGksXCJ3aGVlbFwiLHQuYWEsITEpLHRoaXMuVXQoaSxcImtleWRvd25cIix0LkNSLCExKSx0aGlzLlV0KGksXCJrZXl1cFwiLHQuQVIsITEpLHRoaXMuVXQoaSxcImJsdXJcIix0LkxSLCExKSx0aGlzLlV0KGksXCJmb2N1c1wiLHQuVFIsITEpLHRoaXMuVXQoaSxcInNlbGVjdHN0YXJ0XCIsZT0+KGUucHJldmVudERlZmF1bHQoKSwhMSksITEpLHRoaXMuVXQoaSxcImNvbnRleHRtZW51XCIsZT0+KGUucHJldmVudERlZmF1bHQoKSwhMSksITEpLHRoaXMuVXQocm9vdCxcInJlc2l6ZVwiLHQuTjEsITEpfXZ3KCl7dGhpcy5fbT4zMCYmKHRoaXMuQWw9MSl9SVModCl7dGhpcy5BbCE9PW51bGwmJih0aGlzLkFsPW51bGwsdCYmdGhpcy5TdSgpLERlYnVnJiZEZWJ1Zy5kcmF3RnJhbWVzfHwodGhpcy5fbT0wLHRoaXMuTzI9WzAsMCwwLDAsMF0sdGhpcy50MD0wKSl9Y29tcHV0ZVBpeGVsUmF0aW8oKXtyZXR1cm4gdGhpcy5BbCE9PW51bGw/dGhpcy5BbDpyb290LmRldmljZVBpeGVsUmF0aW98fDF9Z2V0IGF2Z1NwZigpe3JldHVybiB0aGlzLl9tfWRvTW91c2VEb3duKCl7dGhpcy5jdXJyZW50VG9vbC5kb01vdXNlRG93bigpfWRvTW91c2VNb3ZlKCl7dGhpcy5jdXJyZW50VG9vbC5kb01vdXNlTW92ZSgpfWRvTW91c2VVcCgpe3RoaXMuY3VycmVudFRvb2wuZG9Nb3VzZVVwKCl9ZG9Nb3VzZVdoZWVsKCl7dGhpcy5jdXJyZW50VG9vbC5kb01vdXNlV2hlZWwoKX1kb0tleURvd24oKXt0aGlzLmN1cnJlbnRUb29sLmRvS2V5RG93bigpfWRvS2V5VXAoKXt0aGlzLmN1cnJlbnRUb29sLmRvS2V5VXAoKX1kb0ZvY3VzKCl7dGhpcy5mb2N1cygpfWZvY3VzKCl7aWYodGhpcy53dClpZih0aGlzLnNjcm9sbHNQYWdlT25Gb2N1cyl0aGlzLnd0LmZvY3VzKCk7ZWxzZXtjb25zdCB0PXJvb3Quc2Nyb2xsWCxpPXJvb3Quc2Nyb2xsWTt0aGlzLnd0LmZvY3VzKCkscm9vdC5zY3JvbGxUbyh0LGkpfX1UUih0KXtjb25zdCBpPURpYWdyYW0uc3MuZ2V0KHRoaXMpO2kmJmkuTyhcIkdhaW5lZEZvY3VzXCIpfUxSKHQpe2NvbnN0IGk9RGlhZ3JhbS5zcy5nZXQodGhpcyk7aSYmaS5PKFwiTG9zdEZvY3VzXCIpfVVNKCl7aWYodGhpcy53dD09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5UdDtpZihpPT09bnVsbHx8aS5jbGllbnRXaWR0aD09PTB8fGkuY2xpZW50SGVpZ2h0PT09MClyZXR1cm47dGhpcy5zMnx8dGhpcy5zZXRTY3JvbGxXaWR0aCgpO2NvbnN0IGU9dGhpcy5Kbj90aGlzLl90OjAscz10aGlzLmRuP3RoaXMuX3Q6MCxuPXRoaXMuSGk7aWYodGhpcy5IaT10aGlzLmNvbXB1dGVQaXhlbFJhdGlvKCksdGhpcy5IaSE9PW4mJih0aGlzLlZ1PSEwLHRoaXMucmVxdWVzdFVwZGF0ZSgpKSxpLmNsaWVudFdpZHRoIT09dGhpcy5QdCtlfHxpLmNsaWVudEhlaWdodCE9PXRoaXMuTnQrcyl7dGhpcy5tYSgpLHRoaXMuVWU9ITA7Y29uc3Qgbz10aGlzLmxheW91dDtvIT09bnVsbCYmby5pc1ZpZXdwb3J0U2l6ZWQmJnRoaXMuYXV0b1NjYWxlPT09MSYmKHRoaXMuS2Y9ITAsby5pbnZhbGlkYXRlTGF5b3V0KCkpLHRoaXMuU3N8fHRoaXMucmVxdWVzdFVwZGF0ZSgpfX1CQSgpe2xldCB0PTAsaT1uZXcgTGF5ZXI7aS5uYW1lPVwiR3JpZFwiLGkuYWxsb3dTZWxlY3Q9ITEsaS5waWNrYWJsZT0hMSxpLmlzVGVtcG9yYXJ5PSEwLGkuaXNJbkRvY3VtZW50Qm91bmRzPSExLHRoaXMuanIoaSx0KyspLGk9bmV3IExheWVyLGkubmFtZT1cIlZpZXdwb3J0QmFja2dyb3VuZFwiLGkuaXNWaWV3cG9ydEFsaWduZWQ9ITAsaS5pc1RlbXBvcmFyeT0hMCxpLmlzSW5Eb2N1bWVudEJvdW5kcz0hMSx0aGlzLmpyKGksdCsrKSxpPW5ldyBMYXllcixpLm5hbWU9XCJCYWNrZ3JvdW5kXCIsdGhpcy5qcihpLHQrKyksaT1uZXcgTGF5ZXIsaS5uYW1lPVwiXCIsdGhpcy5qcihpLHQrKyksaT1uZXcgTGF5ZXIsaS5uYW1lPVwiRm9yZWdyb3VuZFwiLHRoaXMuanIoaSx0KyspLGk9bmV3IExheWVyLGkubmFtZT1cIlZpZXdwb3J0Rm9yZWdyb3VuZFwiLGkuaXNWaWV3cG9ydEFsaWduZWQ9ITAsaS5pc1RlbXBvcmFyeT0hMCxpLmlzSW5Eb2N1bWVudEJvdW5kcz0hMSx0aGlzLmpyKGksdCsrKSxpPW5ldyBMYXllcixpLm5hbWU9XCJBZG9ybm1lbnRcIixpLmlzVGVtcG9yYXJ5PSEwLGkuaXNJbkRvY3VtZW50Qm91bmRzPSExLHRoaXMuanIoaSx0KyspLGk9bmV3IExheWVyLGkubmFtZT1cIlRvb2xcIixpLmlzVGVtcG9yYXJ5PSEwLGkuaXNJbkRvY3VtZW50Qm91bmRzPSEwLHRoaXMuanIoaSx0KyspfVVBKCl7Y29uc3QgdD1uZXcgUGFuZWwoUGFuZWwuR3JpZCx7bmFtZTpcIkdSSURcIn0pLmFkZChuZXcgU2hhcGUoXCJMaW5lSFwiLHtzdHJva2U6XCJsaWdodGdyYXlcIixzdHJva2VXaWR0aDouNSxpbnRlcnZhbDoxfSkudGhlbWUoXCJzdHJva2VcIixcImdyaWRNaW5vclwiKSxuZXcgU2hhcGUoXCJMaW5lVlwiLHtzdHJva2U6XCJsaWdodGdyYXlcIixzdHJva2VXaWR0aDouNSxpbnRlcnZhbDoxfSkudGhlbWUoXCJzdHJva2VcIixcImdyaWRNaW5vclwiKSxuZXcgU2hhcGUoXCJMaW5lSFwiLHtzdHJva2U6XCJncmF5XCIsc3Ryb2tlV2lkdGg6LjUsaW50ZXJ2YWw6NX0pLnRoZW1lKFwic3Ryb2tlXCIsXCJncmlkTWFqb3JcIiksbmV3IFNoYXBlKFwiTGluZVZcIix7c3Ryb2tlOlwiZ3JheVwiLHN0cm9rZVdpZHRoOi41LGludGVydmFsOjV9KS50aGVtZShcInN0cm9rZVwiLFwiZ3JpZE1ham9yXCIpLG5ldyBTaGFwZShcIkxpbmVIXCIse3N0cm9rZTpcImdyYXlcIixzdHJva2VXaWR0aDoxLGludGVydmFsOjEwfSkudGhlbWUoXCJzdHJva2VcIixcImdyaWRNYWpvclwiKSxuZXcgU2hhcGUoXCJMaW5lVlwiLHtzdHJva2U6XCJncmF5XCIsc3Ryb2tlV2lkdGg6MSxpbnRlcnZhbDoxMH0pLnRoZW1lKFwic3Ryb2tlXCIsXCJncmlkTWFqb3JcIikpLGk9bmV3IFBhcnQoe2xheWVyTmFtZTpcIkdyaWRcIix6T3JkZXI6MCxpc0luRG9jdW1lbnRCb3VuZHM6ITEsaXNBbmltYXRlZDohMSxwaWNrYWJsZTohMSxsb2NhdGlvbk9iamVjdE5hbWU6XCJHUklEXCJ9KS5hZGQodCk7cmV0dXJuIHRoaXMuYWRkKGkpLHRoaXMucGFydE1hbmFnZXIucGFydHMuZGVsZXRlKGkpLHQudmlzaWJsZT0hMSx0fXN0YXRpYyB5Uigpe2NvbnN0IHQ9RGlhZ3JhbS5zcy5nZXQodGhpcy5wYXJlbnRFbGVtZW50fHx0aGlzKTtpZih0KXtpZih0LmMxKXt0LmMxPSExO3JldHVybn1pZighdC5pc0VuYWJsZWQpe3QuR0EoKTtyZXR1cm59dC5kaWFncmFtU2Nyb2xsKHRoaXMpfX1zdGF0aWMgd1IodCl7aWYoIXRoaXMuQy5pc0VuYWJsZWQpe3RoaXMuQy51cGRhdGVTY3JvbGwoKTtyZXR1cm59dGhpcy5DLnUxPXQudGFyZ2V0LnNjcm9sbFRvcCx0aGlzLkMuZDE9dC50YXJnZXQuc2Nyb2xsTGVmdH1kaWFncmFtU2Nyb2xsKHQpe2lmKHRoaXMud3Q9PT1udWxsKXJldHVybjtjb25zdCBpPXRoaXMuUzEsZT10aGlzLk0xO3RoaXMuSG09ITA7bGV0IHM9dGhpcy5kb2N1bWVudEJvdW5kcyxuPXRoaXMudmlld3BvcnRCb3VuZHM7Y29uc3Qgbz10aGlzLmVhO2xldCByPXMueC1vLmxlZnQsbD1zLnktby50b3A7Y29uc3QgaD1zLndpZHRoK28ubGVmdCtvLnJpZ2h0LGY9cy5oZWlnaHQrby50b3Arby5ib3R0b207bGV0IGE9cy5yaWdodCtvLnJpZ2h0LGM9cy5ib3R0b20rby5ib3R0b20sdT1uLngsZD1uLnk7Y29uc3QgbT1uLndpZHRoLGc9bi5oZWlnaHQ7bGV0IHA9bi5yaWdodCx3PW4uYm90dG9tO2NvbnN0IHg9dGhpcy5zY2FsZTtsZXQgayxiPXQuc2Nyb2xsTGVmdDtpZih0aGlzLmp1KXN3aXRjaCh0aGlzLlJ4KXtjYXNlXCJuZWdhdGl2ZVwiOmI9Yit0LnNjcm9sbFdpZHRoLXQuY2xpZW50V2lkdGg7YnJlYWs7Y2FzZVwicmV2ZXJzZVwiOmI9dC5zY3JvbGxXaWR0aC1iLXQuY2xpZW50V2lkdGg7YnJlYWt9Y29uc3QgUz1iO2lmKG08aHx8ZzxmKXtrPVBvaW50LksodGhpcy5wb3NpdGlvbi54LHRoaXMucG9zaXRpb24ueSksdGhpcy5hbGxvd0hvcml6b250YWxTY3JvbGwmJnRoaXMuZDEhPT1TJiYoay54PVMveCtyLHRoaXMuZDE9UyksdGhpcy5hbGxvd1ZlcnRpY2FsU2Nyb2xsJiZ0aGlzLnUxIT09dC5zY3JvbGxUb3AmJihrLnk9dC5zY3JvbGxUb3AveCtsLHRoaXMudTE9dC5zY3JvbGxUb3ApLHRoaXMucG9zaXRpb249ayxQb2ludC5vKGspLHRoaXMuSG09ITEsdGhpcy5LdT0hMTtyZXR1cm59aWYoaz1Qb2ludC5hKCksdC54UiYmdGhpcy5hbGxvd0hvcml6b250YWxTY3JvbGwmJihyPHUmJih0aGlzLnBvc2l0aW9uPWsucyhTK3IsdGhpcy5wb3NpdGlvbi55KSksYT5wKSl7Y29uc3QgTT1pLnNjcm9sbFdpZHRoLXRoaXMuUHQ7dGhpcy5wb3NpdGlvbj1rLnMoLU0rUy10aGlzLlB0L3grYSx0aGlzLnBvc2l0aW9uLnkpfWlmKHQuYlImJnRoaXMuYWxsb3dWZXJ0aWNhbFNjcm9sbCYmKGw8ZCYmKHRoaXMucG9zaXRpb249ay5zKHRoaXMucG9zaXRpb24ueCx0LnNjcm9sbFRvcCtsKSksYz53KSl7Y29uc3QgTT1pLnNjcm9sbEhlaWdodC10aGlzLk50O3RoaXMucG9zaXRpb249ay5zKHRoaXMucG9zaXRpb24ueCwtTSt0LnNjcm9sbFRvcC10aGlzLk50L3grYyl9UG9pbnQubyhrKSx0aGlzLm9oKCksdGhpcy5IbT0hMSx0aGlzLkt1PSExLHM9dGhpcy5kb2N1bWVudEJvdW5kcyxuPXRoaXMudmlld3BvcnRCb3VuZHMsYT1zLnJpZ2h0LHA9bi5yaWdodCxjPXMuYm90dG9tLHc9bi5ib3R0b20scj1zLngsdT1uLngsbD1zLnksZD1uLnksbT49aCYmcj49dSYmYTw9cCYmKGUuc3R5bGUud2lkdGg9XCIxcHhcIiksZz49ZiYmbD49ZCYmYzw9dyYmKGUuc3R5bGUuaGVpZ2h0PVwiMXB4XCIpfWNvbXB1dGVCb3VuZHModCl7cmV0dXJuIHQ9PT12b2lkIDAmJih0PW5ldyBSZWN0KSx0aGlzLlRpKCksdGhpcy5IQSh0KX1IQSh0KXtpZih0aGlzLmZpeGVkQm91bmRzLmlzUmVhbCgpKXJldHVybiB0LmModGhpcy5maXhlZEJvdW5kcyksdC5hZGRNYXJnaW4odGhpcy5laSksdDtsZXQgaT0hMDtjb25zdCBlPXRoaXMuV3QuaCxzPWUubGVuZ3RoO2ZvcihsZXQgbj0wO248cztuKyspe2NvbnN0IG89ZVtuXTtpZighby52aXNpYmxlfHwhby5pc0luRG9jdW1lbnRCb3VuZHMpY29udGludWU7Y29uc3Qgcj1vLkZ0LmgsbD1yLmxlbmd0aDtmb3IobGV0IGg9MDtoPGw7aCsrKXtjb25zdCBmPXJbaF07aWYoIWYuaXNJbkRvY3VtZW50Qm91bmRzfHwhZi5pc1Zpc2libGUoKSljb250aW51ZTtjb25zdCBhPWYuYWN0dWFsQm91bmRzO2EuaXNSZWFsKCkmJihpPyhpPSExLHQuYyhhKSk6dC51bmlvblJlY3QoYSkpfX1yZXR1cm4gaSYmdC5zKDAsMCwwLDApLHQuYWRkTWFyZ2luKHRoaXMuZWkpLHR9Y29tcHV0ZVBhcnRzQm91bmRzKHQsaSl7aT09PXZvaWQgMCYmKGk9ITEpO2xldCBlPW51bGw7aWYoQXJyYXkuaXNBcnJheSh0KSlmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKyl7Y29uc3Qgbj10W3NdOyFpJiZuIGluc3RhbmNlb2YgTGlua3x8KG4uZW5zdXJlQm91bmRzKCksZT09PW51bGw/ZT1uLmFjdHVhbEJvdW5kcy5jb3B5KCk6ZS51bmlvblJlY3Qobi5hY3R1YWxCb3VuZHMpKX1lbHNle2NvbnN0IHM9dC5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlOyFpJiZuIGluc3RhbmNlb2YgTGlua3x8KG4uZW5zdXJlQm91bmRzKCksZT09PW51bGw/ZT1uLmFjdHVhbEJvdW5kcy5jb3B5KCk6ZS51bmlvblJlY3Qobi5hY3R1YWxCb3VuZHMpKX19cmV0dXJuIGU9PT1udWxsP25ldyBSZWN0KE5hTixOYU4sMCwwKTplfUdzKHQpe2lmKCF0JiYhdGhpcy4kbnx8dGhpcy5adHx8dGhpcy53dD09PW51bGx8fCF0aGlzLmRvY3VtZW50Qm91bmRzLmlzUmVhbCgpKXJldHVybjtpZih0aGlzLlp0PSEwLHQpe2NvbnN0IGM9dGhpcy5pbml0aWFsUG9zaXRpb247aWYoYy5pc1JlYWwoKSl7dGhpcy5adD0hMSx0aGlzLnBvc2l0aW9uPWM7cmV0dXJufWxldCB1PXRoaXMuaW5pdGlhbERvY3VtZW50U3BvdCxkPXRoaXMuaW5pdGlhbFZpZXdwb3J0U3BvdDt1LmlzTm9TcG90KCkmJih1PVNwb3QuVG9wTGVmdCksZC5pc05vU3BvdCgpJiYoZD1TcG90LlRvcExlZnQpO2NvbnN0IG09UG9pbnQuYSgpO20uc2V0UmVjdFNwb3QodGhpcy5kb2N1bWVudEJvdW5kcyx1KTtjb25zdCBnPXRoaXMudmlld3BvcnRCb3VuZHMscD1SZWN0LksoMCwwLGcud2lkdGgsZy5oZWlnaHQpLHc9UG9pbnQuYSgpO3cuc2V0UmVjdFNwb3QocCxkKSx3LnMobS54LXcueCxtLnktdy55KSx0aGlzLlp0PSExLHRoaXMucG9zaXRpb249dyxSZWN0Lm8ocCksUG9pbnQubyh3KX1sZXQgaT10aGlzLiRsO3QmJnRoaXMuVHIhPT0xJiYoaT10aGlzLlRyKTtjb25zdCBlPWkhPT0xP3RoaXMuSnUoaSk6dGhpcy5zY2FsZSxzPXRoaXMuZ3QueCxuPXRoaXMuZ3QueSxvPXRoaXMuUHQvZSxyPXRoaXMuTnQvZTtsZXQgbD10aGlzLlhmO2NvbnN0IGg9dGhpcy5ZbTtpZih0JiYhbC5pc1Nwb3QoKSYmKGguaXNTcG90KCl8fGguaXNEZWZhdWx0KCkpKXtjb25zdCBjPXRoaXMuaW5pdGlhbERvY3VtZW50U3BvdC5pc1Nwb3QoKSYmdGhpcy5pbml0aWFsVmlld3BvcnRTcG90LmlzU3BvdCgpO2w9aC5pc0RlZmF1bHQoKSYmIWM/U3BvdC5DZW50ZXI6aH10aGlzLksyKHRoaXMuZG9jdW1lbnRCb3VuZHMsbyxyLGwsdCk7Y29uc3QgZj10aGlzLnNjYWxlO3RoaXMuc2NhbGU9ZSx0aGlzLlp0PSExO2NvbnN0IGE9dGhpcy52aWV3cG9ydEJvdW5kczthLmVxdWFsc0FwcHJveFRvKHMsbixvLHIpfHx0aGlzLm9uVmlld3BvcnRCb3VuZHNDaGFuZ2VkKG5ldyBSZWN0KHMsbixvLHIpLGEsZiwhMSl9SnUodCl7Y29uc3QgaT10aGlzLiRtO2lmKHRoaXMud3Q9PT1udWxsKXJldHVybiBpO2lmKHQ9PT0xKXJldHVybiB0aGlzLnNjYWxlO3RoaXMuZW5zdXJlQm91bmRzKCk7Y29uc3QgZT10aGlzLmRvY3VtZW50Qm91bmRzO2lmKCFlLmlzUmVhbCgpKXJldHVybiBpO2NvbnN0IHM9ZS53aWR0aCxuPWUuaGVpZ2h0LG89dGhpcy5QdCsodGhpcy5Kbj90aGlzLl90OjApLHI9dGhpcy5OdCsodGhpcy5kbj90aGlzLl90OjApO2xldCBsPW8vcyxoPXIvbjtjb25zdCBmPXRoaXMuZWEsYT1mLmxlZnQrZi5yaWdodCE9PTAsYz1mLnRvcCtmLmJvdHRvbSE9PTA7KGF8fGMpJiYoaD09PWw/KGg9KHItdGhpcy5fdCkvbixsPShvLXRoaXMuX3QpL3MpOmg+bD9oPShyLXRoaXMuX3QpL246bD0oby10aGlzLl90KS9zKTtsZXQgdT0wO3JldHVybiB0PT09Mj91PU1hdGgubWluKGgsbCk6dD09PTMmJihoPmw/dT0oci10aGlzLl90KS9uOnU9KG8tdGhpcy5fdCkvcyksdT5pJiYodT1pKSx1PHRoaXMubWluU2NhbGUmJih1PXRoaXMubWluU2NhbGUpLHU+dGhpcy5tYXhTY2FsZSYmKHU9dGhpcy5tYXhTY2FsZSksdX16b29tVG9GaXQoKXtjb25zdCB0PXRoaXMuX2g7dGhpcy5faD0xLHRoaXMuc2NhbGU9dGhpcy5KdSgyKSx0aGlzLmFsaWduRG9jdW1lbnQoU3BvdC5DZW50ZXIsU3BvdC5DZW50ZXIpLHQhPT0xJiYodGhpcy5HcyghMSksdGhpcy5LMih0aGlzLmRvY3VtZW50Qm91bmRzLHRoaXMuUHQvdGhpcy5vdCx0aGlzLk50L3RoaXMub3QsdGhpcy5YZiwhMSkpLHRoaXMuX2g9dH16b29tVG9SZWN0KHQsaSl7aT09PXZvaWQgMCYmKGk9Mik7Y29uc3QgZT10LndpZHRoLHM9dC5oZWlnaHQ7aWYoZT09PTB8fHM9PT0wfHxpc05hTihlKSYmaXNOYU4ocykpcmV0dXJuO2xldCBuPTE7aWYoaT09PTJ8fGk9PT0zKWlmKGlzTmFOKGUpKW49dGhpcy52aWV3cG9ydEJvdW5kcy5oZWlnaHQqdGhpcy5zY2FsZS9zO2Vsc2UgaWYoaXNOYU4ocykpbj10aGlzLnZpZXdwb3J0Qm91bmRzLndpZHRoKnRoaXMuc2NhbGUvZTtlbHNle2NvbnN0IG89dGhpcy5QdCxyPXRoaXMuTnQ7aT09PTM/ci9zPm8vZT9uPShyLSh0aGlzLmRuP3RoaXMuX3Q6MCkpL3M6bj0oby0odGhpcy5Kbj90aGlzLl90OjApKS9lOm49TWF0aC5taW4oci9zLG8vZSl9dGhpcy5zY2FsZT1uLHRoaXMucG9zaXRpb249bmV3IFBvaW50KHQueCx0LnkpfWdldCBEUigpe3JldHVybiB0aGlzLlp0fXNldCBEUih0KXt0aGlzLlp0PXR9YWxpZ25Eb2N1bWVudCh0LGkpe3RoaXMuZW5zdXJlQm91bmRzKCk7Y29uc3QgZT10aGlzLmRvY3VtZW50Qm91bmRzLHM9dGhpcy52aWV3cG9ydEJvdW5kczt0aGlzLnBvc2l0aW9uPW5ldyBQb2ludChlLngrKHQueCplLndpZHRoK3Qub2Zmc2V0WCktKGkueCpzLndpZHRoLWkub2Zmc2V0WCksZS55Kyh0LnkqZS5oZWlnaHQrdC5vZmZzZXRZKS0oaS55KnMuaGVpZ2h0LWkub2Zmc2V0WSkpfWZvY3VzT2JqZWN0KHQpe2lmKHQgaW5zdGFuY2VvZiBHcmFwaE9iamVjdCl7dGhpcy5pMD10O2NvbnN0IGk9UG9pbnQuYSgpO3RoaXMuZTA9dGhpcy50cmFuc2Zvcm1Eb2NUb1ZpZXcodC5nZXREb2N1bWVudFBvaW50KFNwb3QuVG9wTGVmdCxpKSksUG9pbnQubyhpKX1lbHNlIHRoaXMuaTA9bnVsbCx0aGlzLmUwPVBvaW50LkhrfUsyKHQsaSxlLHMsbil7Y29uc3Qgbz1Qb2ludC5LKHRoaXMuZ3QueCx0aGlzLmd0LnkpO2xldCByPW8ueCxsPW8ueTtpZih0aGlzLmkwIT09bnVsbCl7bGV0IGg9UG9pbnQuYSgpO2g9dGhpcy5pMC5nZXREb2N1bWVudFBvaW50KFNwb3QuVG9wTGVmdCxoKSxyPWgueC10aGlzLmUwLngvdGhpcy5zY2FsZSxsPWgueS10aGlzLmUwLnkvdGhpcy5zY2FsZSxzPVNwb3QuTm9uZSxQb2ludC5vKGgpfWlmKG58fHRoaXMuc2Nyb2xsTW9kZT09PTEpe3MuaXNTcG90KCkmJihpPnQud2lkdGgmJihyPXQueCsocy54KnQud2lkdGgrcy5vZmZzZXRYKS0ocy54Kmktcy5vZmZzZXRYKSksZT50LmhlaWdodCYmKGw9dC55KyhzLnkqdC5oZWlnaHQrcy5vZmZzZXRZKS0ocy55KmUtcy5vZmZzZXRZKSkpO2NvbnN0IGg9dGhpcy5lYSxmPWktdC53aWR0aDtpZihpPHQud2lkdGgraC5sZWZ0K2gucmlnaHQpe2xldCBjPXIraS8yO2M9TWF0aC5taW4oYyx0LnJpZ2h0K01hdGgubWF4KGYsaC5yaWdodCktaS8yKSxjPU1hdGgubWF4KGMsdC5sZWZ0LU1hdGgubWF4KGYsaC5sZWZ0KStpLzIpLHI9Yy1pLzJ9ZWxzZSByPnQubGVmdD9yPXQubGVmdDpyPHQucmlnaHQtaSYmKHI9dC5yaWdodC1pKTtjb25zdCBhPWUtdC5oZWlnaHQ7aWYoZTx0LmhlaWdodCtoLnRvcCtoLmJvdHRvbSl7bGV0IGM9bCtlLzI7Yz1NYXRoLm1pbihjLHQuYm90dG9tK01hdGgubWF4KGEsaC5ib3R0b20pLWUvMiksYz1NYXRoLm1heChjLHQudG9wLU1hdGgubWF4KGEsaC50b3ApK2UvMiksbD1jLWUvMn1lbHNlIGw+dC50b3A/bD10LnRvcDpsPHQuYm90dG9tLWUmJihsPXQuYm90dG9tLWUpfWlmKG8ueD1pc0Zpbml0ZShyKT9yOi10aGlzLmVpLmxlZnQsby55PWlzRmluaXRlKGwpP2w6LXRoaXMuZWkudG9wLHRoaXMucG9zaXRpb25Db21wdXRhdGlvbiE9PW51bGwpe2NvbnN0IGg9dGhpcy5wb3NpdGlvbkNvbXB1dGF0aW9uKHRoaXMsbyk7by54PWgueCxvLnk9aC55fXRoaXMud3Mua0EodGhpcy5ndCxvKSx0aGlzLmd0LnMoby54LG8ueSksdGhpcy5yMCgpLHRoaXMubmgoKSx0aGlzLkZSKCksUG9pbnQubyhvKX1maW5kUGFydEF0KHQsaSl7aWYoaT09PXZvaWQgMCYmKGk9ITApLGkpe2NvbnN0IGU9dGhpcy56Uyh0LHM9PnMucGFydCxzPT5zLmNhblNlbGVjdCgpKTtpZihlIGluc3RhbmNlb2YgUGFydClyZXR1cm4gZX1lbHNle2NvbnN0IGU9dGhpcy56Uyh0LHM9PnMucGFydCk7aWYoZSBpbnN0YW5jZW9mIFBhcnQpcmV0dXJuIGV9cmV0dXJuIG51bGx9ZmluZE9iamVjdEF0KHQsaSxlKXtpPT09dm9pZCAwJiYoaT1udWxsKSxlPT09dm9pZCAwJiYoZT1udWxsKSx0aGlzLlRpKCk7Y29uc3Qgcz10aGlzLld0Lml0ZXJhdG9yQmFja3dhcmRzO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7aWYoIW4udmlzaWJsZSljb250aW51ZTtjb25zdCBvPW4uZmluZE9iamVjdEF0KHQsaSxlKTtpZihvIT09bnVsbClyZXR1cm4gb31yZXR1cm4gbnVsbH16Uyh0LGksZSl7aT09PXZvaWQgMCYmKGk9bnVsbCksZT09PXZvaWQgMCYmKGU9bnVsbCksdGhpcy5UaSgpO2NvbnN0IHM9dGhpcy5XdC5pdGVyYXRvckJhY2t3YXJkcztmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2lmKCFuLnZpc2libGV8fG4uaXNUZW1wb3JhcnkpY29udGludWU7Y29uc3Qgbz1uLmZpbmRPYmplY3RBdCh0LGksZSk7aWYobyE9PW51bGwpcmV0dXJuIG99cmV0dXJuIG51bGx9ZmluZFBhcnRzQXQodCxpLGUpe3JldHVybiBpPT09dm9pZCAwJiYoaT0hMCksdGhpcy5SUih0LHM9PnMucGFydCxpP3M9PnMgaW5zdGFuY2VvZiBQYXJ0JiZzLmNhblNlbGVjdCgpOm51bGwsZSl9UlIodCxpLGUscyl7aT09PXZvaWQgMCYmKGk9bnVsbCksZT09PXZvaWQgMCYmKGU9bnVsbCksIShzIGluc3RhbmNlb2YgTGlzdCkmJiEocyBpbnN0YW5jZW9mIEdTZXQpJiYocz1uZXcgR1NldCksdGhpcy5UaSgpO2NvbnN0IG49dGhpcy5XdC5pdGVyYXRvckJhY2t3YXJkcztmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlOyFvLnZpc2libGV8fG8uaXNUZW1wb3Jhcnl8fG8uZmluZE9iamVjdHNBdCh0LGksZSxzKX1yZXR1cm4gc31maW5kT2JqZWN0c0F0KHQsaSxlLHMpe2k9PT12b2lkIDAmJihpPW51bGwpLGU9PT12b2lkIDAmJihlPW51bGwpLCEocyBpbnN0YW5jZW9mIExpc3QpJiYhKHMgaW5zdGFuY2VvZiBHU2V0KSYmKHM9bmV3IEdTZXQpLHRoaXMuVGkoKTtjb25zdCBuPXRoaXMuV3QuaXRlcmF0b3JCYWNrd2FyZHM7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtvLnZpc2libGUmJm8uZmluZE9iamVjdHNBdCh0LGksZSxzKX1yZXR1cm4gc31maW5kUGFydHNJbih0LGksZSxzKXtyZXR1cm4gaT09PXZvaWQgMCYmKGk9ITEpLGU9PT12b2lkIDAmJihlPSEwKSx0aGlzLklSKHQsbnVsbCxuPT5uIGluc3RhbmNlb2YgUGFydCYmKCFlfHxuLmNhblNlbGVjdCgpKSxpLHMpfWZpbmRPYmplY3RzSW4odCxpLGUscyxuKXtpPT09dm9pZCAwJiYoaT1udWxsKSxlPT09dm9pZCAwJiYoZT1udWxsKSxzPT09dm9pZCAwJiYocz0hMSksIShuIGluc3RhbmNlb2YgTGlzdCkmJiEobiBpbnN0YW5jZW9mIEdTZXQpJiYobj1uZXcgR1NldCksdGhpcy5UaSgpO2NvbnN0IG89dGhpcy5XdC5pdGVyYXRvckJhY2t3YXJkcztmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlO3IudmlzaWJsZSYmci5maW5kT2JqZWN0c0luKHQsaSxlLHMsbil9cmV0dXJuIG59S1ModCxpLGUscyxuLG8pe2NvbnN0IHI9bmV3IEdTZXQ7dGhpcy5UaSgpO2NvbnN0IGw9dGhpcy5XdC5pdGVyYXRvckJhY2t3YXJkcztmb3IoO2wubmV4dCgpOyl7Y29uc3QgaD1sLnZhbHVlO2gudmlzaWJsZSYmaC5LUyh0LGksZSxzLHIsbixvKX1yZXR1cm4gcn1JUih0LGksZSxzLG4pe2k9PT12b2lkIDAmJihpPW51bGwpLGU9PT12b2lkIDAmJihlPW51bGwpLHM9PT12b2lkIDAmJihzPSExKSwhKG4gaW5zdGFuY2VvZiBMaXN0KSYmIShuIGluc3RhbmNlb2YgR1NldCkmJihuPW5ldyBHU2V0KSx0aGlzLlRpKCk7Y29uc3Qgbz10aGlzLld0Lml0ZXJhdG9yQmFja3dhcmRzO2Zvcig7by5uZXh0KCk7KXtjb25zdCByPW8udmFsdWU7IXIudmlzaWJsZXx8ci5pc1RlbXBvcmFyeXx8ci5maW5kT2JqZWN0c0luKHQsaSxlLHMsbil9cmV0dXJuIG59ZmluZFBhcnRzTmVhcih0LGksZSxzLG4pe3JldHVybiBlPT09dm9pZCAwJiYoZT0hMCkscz09PXZvaWQgMCYmKHM9ITApLHRoaXMuT1IodCxpLG51bGwsbz0+byBpbnN0YW5jZW9mIFBhcnQmJighc3x8by5jYW5TZWxlY3QoKSksZSxuKX1maW5kT2JqZWN0c05lYXIodCxpLGUscyxuLG8pe2U9PT12b2lkIDAmJihlPW51bGwpLHM9PT12b2lkIDAmJihzPW51bGwpLG49PT12b2lkIDAmJihuPSEwKSxuIT09ITEmJm4hPT0hMCYmKChuIGluc3RhbmNlb2YgTGlzdHx8biBpbnN0YW5jZW9mIEdTZXQpJiYobz1uKSxuPSEwKSwhKG8gaW5zdGFuY2VvZiBMaXN0KSYmIShvIGluc3RhbmNlb2YgR1NldCkmJihvPW5ldyBHU2V0KSx0aGlzLlRpKCk7Y29uc3Qgcj10aGlzLld0Lml0ZXJhdG9yQmFja3dhcmRzO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7bC52aXNpYmxlJiZsLmZpbmRPYmplY3RzTmVhcih0LGksZSxzLG4sbyl9cmV0dXJuIG99T1IodCxpLGUscyxuLG8pe2U9PT12b2lkIDAmJihlPW51bGwpLHM9PT12b2lkIDAmJihzPW51bGwpLG49PT12b2lkIDAmJihuPSEwKSxuIT09ITEmJm4hPT0hMCYmKChuIGluc3RhbmNlb2YgTGlzdHx8biBpbnN0YW5jZW9mIEdTZXQpJiYobz1uKSxuPSEwKSwhKG8gaW5zdGFuY2VvZiBMaXN0KSYmIShvIGluc3RhbmNlb2YgR1NldCkmJihvPW5ldyBHU2V0KSx0aGlzLlRpKCk7Y29uc3Qgcj10aGlzLld0Lml0ZXJhdG9yQmFja3dhcmRzO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7IWwudmlzaWJsZXx8bC5pc1RlbXBvcmFyeXx8bC5maW5kT2JqZWN0c05lYXIodCxpLGUscyxuLG8pfXJldHVybiBvfWFjY2VwdEV2ZW50KHQpe3JldHVybiB0aGlzLnZmKHQsdCBpbnN0YW5jZW9mIE1vdXNlRXZlbnQpfXZmKHQsaSl7Y29uc3QgZT10aGlzLkhyO3RoaXMuSHI9dGhpcy5vYSx0aGlzLm9hPWUsZS5kaWFncmFtPXRoaXMsZS5ldmVudD10LGk/dGhpcy5vMCh0LGUpOihlLnZpZXdQb2ludD10aGlzLkhyLnZpZXdQb2ludCxlLmRvY3VtZW50UG9pbnQ9dGhpcy5Ici5kb2N1bWVudFBvaW50KTtsZXQgcz0wO2NvbnN0IG49dDtyZXR1cm4gbi5jdHJsS2V5JiYocys9MSksbi5hbHRLZXkmJihzKz0yKSxuLnNoaWZ0S2V5JiYocys9NCksbi5tZXRhS2V5JiYocys9OCksZS5tb2RpZmllcnM9cyxlLmJ1dHRvbj1uLmJ1dHRvbixuLmJ1dHRvbnMhPT12b2lkIDAmJihlLmJ1dHRvbnM9bi5idXR0b25zKSxVLnJyJiZuLmJ1dHRvbj09PTAmJm4uY3RybEtleSYmKGUuYnV0dG9uPTIpLGUuZG93bj0hMSxlLnVwPSExLGUuY2xpY2tDb3VudD0xLGUuZGVsdGE9MCxlLmhhbmRsZWQ9ITEsZS5idWJibGVzPSExLGUudGltZXN0YW1wPXQudGltZVN0YW1wLGUuaXNNdWx0aVRvdWNoPSExLGUudGFyZ2V0RGlhZ3JhbT10aGlzLkkxKHQsdC50YXJnZXQpLGUudGFyZ2V0T2JqZWN0PW51bGwsZX1JMSh0LGkpe2lmKGk9PT1udWxsKXJldHVybiBudWxsO2NvbnN0IGU9RGlhZ3JhbS5zcy5nZXQoaSk7aWYoZSlyZXR1cm4gZTtsZXQgcz10LnBhdGg7aWYoIXMmJlUucnQodC5jb21wb3NlZFBhdGgpJiYocz10LmNvbXBvc2VkUGF0aCgpKSxzJiZzWzBdKXtjb25zdCBuPURpYWdyYW0uc3MuZ2V0KHNbMF0pO2lmKG4pcmV0dXJuIG59cmV0dXJuIG51bGx9a1IodCxpLGUpe2NvbnN0IHM9dGhpcy5ZMih0LCEwLCExLCExLCEwLGUpO3JldHVybiB0aGlzLm8wKGkscykscy50YXJnZXREaWFncmFtPXRoaXMuSTEodCx0LnRhcmdldCkscy50YXJnZXRPYmplY3Q9bnVsbCxlfHxzLmNsb25lKHRoaXMuSm0pLHN9U1IodCxpLGUpe2NvbnN0IHM9dGhpcy5ZMih0LCExLCExLCExLCExLGUpO2xldCBuPXJvb3QuZG9jdW1lbnQuZWxlbWVudEZyb21Qb2ludChpLmNsaWVudFgsaS5jbGllbnRZKXx8bnVsbDtuIT09bnVsbCYmbi5zaGFkb3dSb290IT09dm9pZCAwJiZuLnNoYWRvd1Jvb3QhPT1udWxsJiYobj1uLnNoYWRvd1Jvb3QuZWxlbWVudEZyb21Qb2ludChpLmNsaWVudFgsaS5jbGllbnRZKSk7bGV0IG89dGhpcyxyPXQ7aWYobil7Y29uc3QgbD10aGlzLkkxKHQsbik7bCYmKHI9aSxvPWwpfXJldHVybiBzLnRhcmdldERpYWdyYW09byx0aGlzLm8wKHIscykscy50YXJnZXRPYmplY3Q9bnVsbCxzfVkyKHQsaSxlLHMsbixvKXtjb25zdCByPXRoaXMuSHI7dGhpcy5Icj10aGlzLm9hLHRoaXMub2E9cixyLmRpYWdyYW09dGhpcyxyLmNsaWNrQ291bnQ9MSxyLmRlbHRhPTA7bGV0IGw9MDtyZXR1cm4gdC5jdHJsS2V5JiYobCs9MSksdC5hbHRLZXkmJihsKz0yKSx0LnNoaWZ0S2V5JiYobCs9NCksdC5tZXRhS2V5JiYobCs9OCksci5tb2RpZmllcnM9bCxyLmV2ZW50PXQsci50aW1lc3RhbXA9dC50aW1lU3RhbXAsci5idXR0b249ZT90aGlzLmZpcnN0SW5wdXQuYnV0dG9uOnQuYnV0dG9uLHIuYnV0dG9ucz10LmJ1dHRvbnMsVS5yciYmdC5idXR0b249PT0wJiZ0LmN0cmxLZXkmJihyLmJ1dHRvbj0yKSxyLmRvd249aSxyLnVwPWUsci5oYW5kbGVkPXMsci5idWJibGVzPW4sci5pc011bHRpVG91Y2g9byxyfWdhKHQsaSl7cmV0dXJuIHQuYnViYmxlcz8oRGVidWcmJkRlYnVnLmhhbmRsZU1lc3NhZ2VzJiZVLm50KFwiTk9UIGhhbmRsZWQgXCIraS50eXBlK1wiIFwiK3QudG9TdHJpbmcoKSksITApOihEZWJ1ZyYmRGVidWcuaGFuZGxlTWVzc2FnZXMmJlUubnQoXCJoYW5kbGVkIFwiK2kudHlwZStcIiBcIit0aGlzLmN1cnJlbnRUb29sLm5hbWUrXCIgXCIrdC50b1N0cmluZygpKSxpLnN0b3BQcm9wYWdhdGlvbiE9PXZvaWQgMCYmaS5zdG9wUHJvcGFnYXRpb24oKSxpLmNhbmNlbGFibGUhPT0hMSYmaS5wcmV2ZW50RGVmYXVsdCgpLGkuY2FuY2VsQnViYmxlPSEwLCExKX1DUih0KXtjb25zdCBpPURpYWdyYW0uc3MuZ2V0KHRoaXMpO2lmKCFpfHwhaS5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgZT1pLnZmKHQsITEpO3JldHVybiBlLmtleT10LmtleSxlLmNvZGU9dC5jb2RlLGUuZG93bj0hMCxpLmRvS2V5RG93bigpLGkuZ2EoZSx0KX1BUih0KXtjb25zdCBpPURpYWdyYW0uc3MuZ2V0KHRoaXMpO2lmKCFpfHwhaS5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgZT1pLnZmKHQsITEpO3JldHVybiBlLmtleT10LmtleSxlLmNvZGU9dC5jb2RlLGUudXA9ITAsaS5kb0tleVVwKCksaS5nYShlLHQpfVBSKHQpe2NvbnN0IGk9RGlhZ3JhbS5zcy5nZXQodGhpcyk7aWYoIWl8fCFpLmlzRW5hYmxlZClyZXR1cm4hMTtjb25zdCBlPWkudmYodCwhMCk7cmV0dXJuIGkubW91c2VFbnRlciE9PW51bGwmJmkubW91c2VFbnRlcihlKSxpLmN1cnJlbnRUb29sLnN0YW5kYXJkTW91c2VPdmVyKCksaS5nYShlLHQpfU5SKHQpe2NvbnN0IGk9RGlhZ3JhbS5zcy5nZXQodGhpcyk7aWYoIWl8fCFpLmlzRW5hYmxlZClyZXR1cm4hMTtjb25zdCBlPWkudmYodCwhMCk7cmV0dXJuIGkubW91c2VMZWF2ZSE9PW51bGwmJmkubW91c2VMZWF2ZShlKSxpLmdhKGUsdCl9Z2V0TW91c2UodCl7Y29uc3QgaT10aGlzLnd0O2lmKGk9PT1udWxsKXJldHVybiBuZXcgUG9pbnQoMCwwKTtjb25zdCBlPWkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkscz0odC5jbGllbnRYLWUubGVmdCkqKHRoaXMuUHQvZS53aWR0aCksbj0odC5jbGllbnRZLWUudG9wKSoodGhpcy5OdC9lLmhlaWdodCk7cmV0dXJuIG5ldyBQb2ludChzLG4pLlhlKHRoaXMuRil9bzAodCxpKXtjb25zdCBlPXRoaXMud3Q7bGV0IHM9MCxuPTA7aWYoZSE9PW51bGwpe2NvbnN0IHI9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtzPSh0LmNsaWVudFgtci5sZWZ0KSoodGhpcy5QdC9yLndpZHRoKSxuPSh0LmNsaWVudFktci50b3ApKih0aGlzLk50L3IuaGVpZ2h0KX1pLnZpZXdQb2ludC5zKHMsbik7Y29uc3Qgbz1Qb2ludC5LKHMsbik7dGhpcy5GLmlzKG8pLGkuZG9jdW1lbnRQb2ludC5jKG8pLFBvaW50Lm8obyl9R0ModCxpLGUpe2xldCBzO2lmKHRoaXMuaGFbMF0hPT1udWxsKXM9dGhpcy5oYVtpXTtlbHNlIHJldHVybjtjb25zdCBuPXRoaXMud3Q7aWYobiE9PW51bGwpe2NvbnN0IG89bi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtlLnMoKHMuY2xpZW50WC1vLmxlZnQpKih0aGlzLlB0L28ud2lkdGgpLChzLmNsaWVudFktby50b3ApKih0aGlzLk50L28uaGVpZ2h0KSl9fWludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpe3RoaXMucmF8fCh0aGlzLnJhPSEwLHRoaXMucmVxdWVzdFVwZGF0ZSghMSkpfUVSKCl7dGhpcy5Tc3x8dGhpcy5UaSgpLHRoaXMuZW5zdXJlQm91bmRzKCl9cmVkcmF3KCl7dGhpcy5adHx8dGhpcy5Tc3x8KHRoaXMuTCgpLHRoaXMubWF5YmVVcGRhdGUoKSl9aXNVcGRhdGVSZXF1ZXN0ZWQoKXtyZXR1cm4gdGhpcy5Ocn1kZWxheUluaXRpYWxpemF0aW9uKHQpe3Q9PT12b2lkIDAmJih0PW51bGwpO2NvbnN0IGk9dGhpcy5hbmltYXRpb25NYW5hZ2VyLGU9aS5pc0VuYWJsZWQ7aS5zdG9wQW5pbWF0aW9uKCksaS5pc0VuYWJsZWQ9ITEsdGhpcy54cigpLHRoaXMuJG49ITEsdGhpcy55eD1uZXcgUG9pbnQoTmFOLE5hTiksaS5pc0VuYWJsZWQ9ZSx0aGlzLlNzPSEwO2NvbnN0IHM9dGhpczt0IT09bnVsbCYmVS5scigoKT0+e3MuU3M9ITEsaS5CbChcIk1vZGVsXCIpLHQocyl9LDEpfXJlcXVlc3RVcGRhdGUodCl7aWYodD09PXZvaWQgMCYmKHQ9ITEpLHRoaXMuTnI9PT0hMHx8dGhpcy5adHx8dD09PSExJiZ0aGlzLlNzKXJldHVybjt0aGlzLk5yPSEwO2NvbnN0IGk9dGhpcztyb290LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKT0+e2kuTnImJmkubWF5YmVVcGRhdGUoKX0pfW1heWJlVXBkYXRlKCl7dGhpcy56dSYmIXRoaXMuTnJ8fCh0aGlzLnp1JiYodGhpcy56dT0hMSksdGhpcy54cigpKX1VMih0LGkpeyF0aGlzLkt1fHx0aGlzLlp0fHx0aGlzLmFuaW1hdGlvbk1hbmFnZXIuZGVmYXVsdEFuaW1hdGlvbi5pc0FuaW1hdGluZ3x8dGhpcy5HQSgpfHwodCYmdGhpcy5UaSgpLGkmJnRoaXMuR3MoITEpKX14cih0KXtpZih0aGlzLlNzfHwodGhpcy5Ocj0hMSx0aGlzLlR0PT09bnVsbCYmIXRoaXMuVXUuaXNSZWFsKCkpKXJldHVybjt0aGlzLlNzPSEwO2NvbnN0IGk9dGhpcy5hbmltYXRpb25NYW5hZ2VyLGU9dGhpcy5XdTtpZighaS5pc0FuaW1hdGluZyYmZS5sZW5ndGghPT0wKXtjb25zdCBhPWUuaCxjPWEubGVuZ3RoO2ZvcihsZXQgdT0wO3U8Yzt1Kyspe2NvbnN0IGQ9YVt1XTtkLnBlKCExKSxkLnUoKX1lLmNsZWFyKCl9Y29uc3Qgcz10aGlzLlQyO3MuY291bnQ+MCYmKHMuZWFjaChhPT5hLkcyKCkpLHMuY2xlYXIoKSk7bGV0IG49ITEsbz0hMTtpLmRlZmF1bHRBbmltYXRpb24uaXNBbmltYXRpbmcmJihvPSEwLG49dGhpcy5za2lwc1VuZG9NYW5hZ2VyLHRoaXMuc2tpcHNVbmRvTWFuYWdlcj0hMCksaS5iaXx8dGhpcy5VTSgpLHR8fHRoaXMuVTIoITEsITApO2NvbnN0IHI9IXRoaXMudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZyYmKHRoaXMuTmx8fHRoaXMuamYuY291bnQhPT0wJiZ0aGlzLkRyLnNpemUhPT0wKSxsPSF0aGlzLiRufHx0aGlzLnFyO3RoaXMuVGkoITApO2xldCBoPSExOyhsfHxyKSYmKHRoaXMuJG4/dGhpcy5IMighdGhpcy5LZixyKToodGhpcy5zdGFydFRyYW5zYWN0aW9uKFwiSW5pdGlhbCBMYXlvdXRcIiksaS5pc0VuYWJsZWQ9PT0hMSYmaS5zdG9wQW5pbWF0aW9uKCksdGhpcy5IMighMSxyKSksaD1sKSx0aGlzLktmPSExLHRoaXMuTmw9ITEsdGhpcy5UaSgpLHRoaXMuZXMhPT1udWxsJiYodGhpcy5lcy52aXNpYmxlJiYhdGhpcy5HdSYmKHRoaXMubGgoKSx0aGlzLkd1PSEwKSwhdGhpcy5lcy52aXNpYmxlJiZ0aGlzLkd1JiYodGhpcy5HdT0hMSkpLHRoaXMuWnh8fHRoaXMuRVIoKSx0fHx0aGlzLlUyKCEwLCExKTtsZXQgZj0hMTtpZihoKXtjb25zdCBhPVJlY3QuYSgpO2EuYyh0aGlzLnZpZXdwb3J0Qm91bmRzKSx0aGlzLiRufHwodGhpcy4kbj0hMCxmPSEwLHRoaXMuc2tpcHNVbmRvTWFuYWdlcnx8KHRoaXMudW5kb01hbmFnZXIucXc9ITApLHRoaXMudW5kb01hbmFnZXIuV3c9ITAsdGhpcy5CUigpKSx0aGlzLlZSKCksdGhpcy5UaSghMSksdHx8dGhpcy5VMighMCwhMCksUmVjdC5vKGEpfWVsc2UgaWYoaS5GZiYmaS5teCl7aWYodGhpcy5UciE9PTEpdGhpcy5zY2FsZT10aGlzLkp1KHRoaXMuVHIpO2Vsc2UgaWYodGhpcy4kbCE9PTEpdGhpcy5zY2FsZT10aGlzLkp1KHRoaXMuJGwpO2Vsc2V7Y29uc3QgYT10aGlzLmluaXRpYWxTY2FsZTtpc0Zpbml0ZShhKSYmYT4wJiYodGhpcy5zY2FsZT1hKX10aGlzLkdzKCEwKX1oJiZmJiZ0aGlzLmNvbW1pdFRyYW5zYWN0aW9uKFwiSW5pdGlhbCBMYXlvdXRcIiksdHx8dGhpcy5VaSh0aGlzLnNpKSxvJiYodGhpcy5za2lwc1VuZG9NYW5hZ2VyPW4pLHRoaXMuU3M9ITF9Z2V0IHFoKCl7cmV0dXJuIHRoaXMuJG59QlIoKXtpZih0aGlzLlRyIT09MSl0aGlzLnNjYWxlPXRoaXMuSnUodGhpcy5Ucik7ZWxzZSBpZih0aGlzLiRsIT09MSl0aGlzLnNjYWxlPXRoaXMuSnUodGhpcy4kbCk7ZWxzZXtjb25zdCBpPXRoaXMuaW5pdGlhbFNjYWxlO2lzRmluaXRlKGkpJiZpPjAmJih0aGlzLnNjYWxlPWkpfXRoaXMuR3MoITApO2NvbnN0IHQ9dGhpcy5XdC5oO3RoaXMua3ModCx0Lmxlbmd0aCx0aGlzLHRoaXMudmlld3BvcnRCb3VuZHMpLHRoaXMuTyhcIkluaXRpYWxMYXlvdXRDb21wbGV0ZWRcIiksdGhpcy55eC5jKHRoaXMuZ3QpLHRoaXMubGgoKX1WUigpe3RoaXMuTyhcIkxheW91dENvbXBsZXRlZFwiKX1sMCh0KXt0aGlzLmpuLmFkZCh0KX1hZGRJbnZhbGlkUm91dGUodCl7dGhpcy5Sbz90aGlzLnNhLmFkZCh0KTp0aGlzLkRyLmFkZCh0KX1UaSh0KXtpZih0aGlzLmpuLnNpemUhPT0wJiYhKCF0aGlzLlNzJiZ0aGlzLmFuaW1hdGlvbk1hbmFnZXIuaXNUaWNraW5nKSl7aWYodGhpcy5Tc3x8KHRoaXMuTmw9ITApLHQpe3RoaXMucUEodGhpcy5qbik7cmV0dXJufWZvcihsZXQgaT0wO2k8MjMmJnRoaXMuam4uc2l6ZSE9PTA7aSsrKXtjb25zdCBlPW5ldyBTZXQodGhpcy5qbik7dGhpcy5qbi5jbGVhcigpLHRoaXMuRzIoZSx0aGlzLmpuKSxEZWJ1ZyYmaT09PTIyJiZVLm50KFwiZmFpbHVyZSB0byB2YWxpZGF0ZSBwYXJ0c1wiKX10aGlzLm5vZGVzLmVhY2goaT0+e2kgaW5zdGFuY2VvZiBHcm91cCYmaS5XQSghMSl9KX19cUEodCxpKXtmb3IoY29uc3QgZSBvZiB0KSFlLkNlKCl8fGUgaW5zdGFuY2VvZiBHcm91cHx8KGUudnIoKT8oZS5kdCgxLzAsMS8wKSxlLkd0KCkpOmkmJmkuYWRkKGUpKTtmb3IoY29uc3QgZSBvZiB0KWlmKGUgaW5zdGFuY2VvZiBHcm91cCl7aWYoIWUuaXNWaXNpYmxlKCkpY29udGludWU7dGhpcy5PMShlKX19RzIodCxpKXt0aGlzLnFBKHQsaSk7Zm9yKGNvbnN0IGUgb2YgdCl7aWYoIShlIGluc3RhbmNlb2YgTGluaykpY29udGludWU7Y29uc3Qgcz1lO3MuaXNWaXNpYmxlKCkmJihzLnZyKCk/KHMuZHQoMS8wLDEvMCkscy5HdCgpKTppLmFkZChzKSl9Zm9yKGNvbnN0IGUgb2YgdCllIGluc3RhbmNlb2YgQWRvcm5tZW50JiZlLmlzVmlzaWJsZSgpJiYoZS52cigpPyhlLmR0KDEvMCwxLzApLGUuR3QoKSk6aS5hZGQoZSkpfWgwKHQpe2NvbnN0IGk9dCBpbnN0YW5jZW9mIERpYWdyYW0sZT1pP3QubGlua3M6dC5tZW1iZXJQYXJ0cyxzPXRoaXMuam47aWYoaSl0aGlzLlRpKCEwKTtlbHNle2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBuPWUudmFsdWU7cy5oYXMobikmJighbi5DZSgpfHxuIGluc3RhbmNlb2YgR3JvdXB8fG4udnIoKSYmKG4uZHQoMS8wLDEvMCksbi5HdCgpKSl9Zm9yKGUucmVzZXQoKTtlLm5leHQoKTspe2NvbnN0IG49ZS52YWx1ZTtpZihzLmhhcyhuKSYmbiBpbnN0YW5jZW9mIEdyb3VwKXtpZighbi5pc1Zpc2libGUoKSljb250aW51ZTt0aGlzLk8xKG4pfX1lLnJlc2V0KCl9Zm9yKDtlLm5leHQoKTspe2NvbnN0IG49ZS52YWx1ZTtuIGluc3RhbmNlb2YgTGluayYmcy5oYXMobikmJm4uaXNWaXNpYmxlKCkmJm4udnIoKSYmKG4uZHQoMS8wLDEvMCksbi5HdCgpKX19TzEodCl7Y29uc3QgaT1VLmx0KCksZT1VLmx0KCkscz10Lm1lbWJlclBhcnRzO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBvPXMudmFsdWU7by5pc1Zpc2libGUoKSYmKG8gaW5zdGFuY2VvZiBHcm91cD8oby5FbygpfHxvLm5zKCl8fG8uaGgoKSkmJnRoaXMuTzEobyk6byBpbnN0YW5jZW9mIExpbms/by5mcm9tTm9kZT09PXR8fG8udG9Ob2RlPT09dD9lLnB1c2gobyk6aS5wdXNoKG8pOihvLmR0KDEvMCwxLzApLG8uR3QoKSkpfWxldCBuPWkubGVuZ3RoO2ZvcihsZXQgbz0wO288bjtvKyspe2NvbnN0IHI9aVtvXTtyLmR0KDEvMCwxLzApLHIuR3QoKX1VLnR0KGkpLHQuZHQoMS8wLDEvMCksdC5HdCgpLG49ZS5sZW5ndGg7Zm9yKGxldCBvPTA7bzxuO28rKyl7Y29uc3Qgcj1lW29dO3IuZHQoMS8wLDEvMCksci5HdCgpfVUudHQoZSl9a3ModCxpLGUscyl7aWYoISghdGhpcy5HZiYmIXRoaXMuYW5pbWF0aW9uTWFuYWdlci5pc0FuaW1hdGluZykpe2ZvcihsZXQgbj0wO248aTtuKyspdFtuXS5rcyhlLHMpO3RoaXMuVGkoKX19VWkodCl7aWYodGhpcy5UdD09PW51bGwpcmV0dXJuO3RoaXMud3Q9PT1udWxsJiZVLm4oXCJObyBjYW52YXMgc3BlY2lmaWVkXCIpLHRoaXMuVWY9PT1cInN2Z1wiP3RoaXMuelIodCk6dGhpcy5YUih0KX1YUih0KXtjb25zdCBpPXRoaXMuYW5pbWF0aW9uTWFuYWdlcjtpZihpLmJpfHxpLmlzQW5pbWF0aW5nJiYhaS5pc1RpY2tpbmcpcmV0dXJuO2NvbnN0IGU9bmV3IERhdGU7aWYodGhpcy5hMCgpLHRoaXMuVHQmJnRoaXMuVHQuc3R5bGUub3BhY2l0eT09PVwiMFwiKXJldHVybjtjb25zdCBzPXQhPT10aGlzLnNpLG49dGhpcy5XdC5oLG89bi5sZW5ndGgscj10aGlzO2lmKHRoaXMua3MobixvLHIsci52aWV3cG9ydEJvdW5kcykscyl0LmNsZWFyQ29udGV4dENhY2hlKCEwKSx0aGlzLm9oKCk7ZWxzZSBpZighdGhpcy5VZSYmIWkuaXNBbmltYXRpbmcpcmV0dXJuO2NvbnN0IGw9dGhpcy5GLGg9dGhpcy5IaTt0LnNldFRyYW5zZm9ybShoLDAsMCxoLDAsMCksdC5jbGVhclJlY3QoMCwwLHRoaXMuUHQsdGhpcy5OdCksdGhpcy5paSE9PTEmJih0Lmdsb2JhbEFscGhhPXRoaXMuaWkpLHRoaXMucTIodCk7Zm9yKGxldCBtPTA7bTxvO20rKyl0LnNldFRyYW5zZm9ybShoLDAsMCxoLDAsMCksdC50cmFuc2Zvcm0obC5tMTEsbC5tMTIsbC5tMjEsbC5tMjIsbC5keCxsLmR5KSx0LmNvbW1pdFRyYW5zZm9ybSgpLG5bbV0uVWkodCxyKTtsZXQgZj0hMTt0aGlzLldmP3RoaXMuV2YudnUodGhpcykmJihmPXRoaXMuUDEoKSk6Zj0hMCxmJiYoVHJhbnNmb3JtLnByb3RvdHlwZS5pcz1UcmFuc2Zvcm0ucHJvdG90eXBlLlR3KSxzPyh0aGlzLnNpLmNsZWFyQ29udGV4dENhY2hlKCEwKSx0aGlzLm9oKCkpOih0aGlzLkdmPSExLHRoaXMuVWU9ITEpO2NvbnN0IGM9K25ldyBEYXRlLStlLHU9RGVidWcmJkRlYnVnLmRyYXdGcmFtZXMsZD10aGlzLk8yO2lmKHV8fHRoaXMuQWw9PT1udWxsKXtkW3RoaXMudDBdPWMsdGhpcy50MD0odGhpcy50MCsxKSVkLmxlbmd0aDtsZXQgbT0wO2ZvcihsZXQgZz0wO2c8ZC5sZW5ndGg7ZysrKW0rPWRbZ107dGhpcy5fbT1tL2QubGVuZ3RofWlmKHRoaXMuaWkhPT0xJiYodC5nbG9iYWxBbHBoYT0xKSx1KXt0LnNldFRyYW5zZm9ybSgxLDAsMCwxLDAsMCk7Zm9yKGxldCBtPTA7bTxkLmxlbmd0aDttKyspdC5maWxsVGV4dChkW21dLnRvU3RyaW5nKCksMjAsMTUwKyArKG0qMjApKX19elIodCl7aWYodGhpcy5UdD09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5hbmltYXRpb25NYW5hZ2VyO2lmKGkuYml8fGkuaXNBbmltYXRpbmcmJiFpLmlzVGlja2luZylyZXR1cm47dGhpcy5hMCgpO2NvbnN0IGU9dGhpcy5QdCxzPXRoaXMuTnQ7dC5zdXJmYWNlLnJlc2l6ZShlLHMsZSxzKTtjb25zdCBvPXRoaXMuV3QuaCxyPW8ubGVuZ3RoLGw9dGhpcztpZih0aGlzLmtzKG8scixsLGwudmlld3BvcnRCb3VuZHMpLCF0aGlzLlVlJiYhaS5pc0FuaW1hdGluZylyZXR1cm47Y29uc3QgaD10aGlzLkY7dC5sYXN0RHJhd25QYXJ0PW51bGwsdC5zZXREaWFncmFtUG9zU2NhbGUoaC5tMTEsaC5tMTIsaC5tMjEsaC5tMjIsaC5keCxoLmR5KSx0aGlzLmlpIT09MSYmKHQuZ2xvYmFsQWxwaGE9dGhpcy5paSksdGhpcy5xMih0KTtjb25zdCBmPXRoaXMuSGk7dGhpcy53dC5jaS5zZXRUcmFuc2Zvcm0oZiwwLDAsZiwwLDApLHRoaXMud3QuY2kuY2xlYXJSZWN0KDAsMCx0aGlzLlB0LHRoaXMuTnQpO2ZvcihsZXQgYz0wO2M8cjtjKyspb1tjXS5VaSh0LGwpO2xldCBhPSExO3RoaXMuV2Y/dGhpcy5XZi52dSh0aGlzKSYmKGE9dGhpcy5QMSgpKTphPSEwLGEmJihUcmFuc2Zvcm0ucHJvdG90eXBlLmlzPVRyYW5zZm9ybS5wcm90b3R5cGUuVHcpLHRoaXMuR2Y9ITEsdGhpcy5VZT0hMX1FMSh0LGksZSxzLG4sbyxyLGwsaCl7aWYodGhpcy5UdD09PW51bGwpcmV0dXJuO3RoaXMud3Q9PT1udWxsJiZVLm4oXCJObyBjYW52YXMgc3BlY2lmaWVkXCIpLG89PT12b2lkIDAmJihvPW51bGwpLHI9PT12b2lkIDAmJihyPW51bGwpLGw9PT12b2lkIDAmJihsPSExKSxoPT09dm9pZCAwJiYoaD0hMSksdGhpcy5hMCgpLHRoaXMuc2kuY2xlYXJDb250ZXh0Q2FjaGUoITApLHRoaXMub2goKSx0aGlzLmxhPSEwO2NvbnN0IGY9dGhpcy5vdDt0aGlzLm90PXM7Y29uc3QgYT10aGlzLGM9dGhpcy5XdC5oLHU9Yy5sZW5ndGg7dHJ5e2NvbnN0IGQ9bmV3IFJlY3Qobi54LG4ueSxlLndpZHRoL3MsZS5oZWlnaHQvcyksbT1kLmNvcHkoKTttLmFkZE1hcmdpbihpKSx0aGlzLmxoKG0pLHRoaXMuVGkoKSx0aGlzLmtzKGMsdSxhLGQpLHQuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSx0LmNsZWFyUmVjdCgwLDAsZS53aWR0aCxlLmhlaWdodCksciE9PW51bGwmJnIhPT1cIlwiJiYodC5maWxsU3R5bGU9cix0LmZpbGxCYWNrZ3JvdW5kKDAsMCxlLndpZHRoLGUuaGVpZ2h0KSk7Y29uc3QgZz10aGlzLkhpO3Quc2NhbGUoZyxnKTtjb25zdCBwPVRyYW5zZm9ybS5hKCk7cC5WaSgpLHAuQnMoaS5sZWZ0LGkudG9wKSxwLm90KHMpLChuLnghPT0wfHxuLnkhPT0wKSYmcC5Ccygtbi54LC1uLnkpLHQuc2V0VHJhbnNmb3JtKHAubTExLHAubTEyLHAubTIxLHAubTIyLHAuZHgscC5keSksdC5jb21taXRUcmFuc2Zvcm0oKSx0IGluc3RhbmNlb2YgU1ZHQ29udGV4dCYmdC5zZXREaWFncmFtUG9zU2NhbGUocC5tMTEscC5tMTIscC5tMjEscC5tMjIscC5keCxwLmR5KSxUcmFuc2Zvcm0ubyhwKSx0aGlzLnEyKHQpLHQuZ2xvYmFsQWxwaGE9dGhpcy5paTtjb25zdCB3PXRoaXMuZmluZExheWVyKFwiR3JpZFwiKTtpZihvKXtjb25zdCB4PW5ldyBHU2V0LGs9by5pdGVyYXRvcjtmb3Ioay5yZXNldCgpO2submV4dCgpOyl7Y29uc3QgYj1rLnZhbHVlO2IgaW5zdGFuY2VvZiBQYXJ0JiYoIWgmJmIubGF5ZXI9PT13fHwoYi5FdSgpLHguYWRkKGIpKSl9Zm9yKGxldCBiPTA7Yjx1O2IrKyljW2JdLiRGKHQsYSx4LGwpO3guZWFjaChiPT5iLkV1KCkpfWVsc2UgZm9yKGxldCB4PTA7eDx1O3grKyl7Y29uc3Qgaz1jW3hdO2s9PT13P2gmJmsuVWkodCxhLCEwKTprLlVpKHQsYSxsKX10aGlzLmxhPSExLHRoaXMuV2YmJnRoaXMuV2YudnUodGhpcykmJnRoaXMuUDEoKX1maW5hbGx5e3RoaXMub3Q9Zix0aGlzLnNpLmNsZWFyQ29udGV4dENhY2hlKCEwKSx0aGlzLm9oKCksdGhpcy5rcyhjLHUsYSxhLnZpZXdwb3J0Qm91bmRzKSx0aGlzLmxoKCksdGhpcy5zaSBpbnN0YW5jZW9mIFNWR0NvbnRleHQmJih0aGlzLnNpLmRpYWdyYW1Hcm91cC5yZXBsYWNlQ2hpbGRyZW4oKSx0aGlzLnJlZHJhdygpKX19Z2V0UmVuZGVyaW5nSGludCh0KXtyZXR1cm4gdGhpcy5Mclt0XX1zZXRSZW5kZXJpbmdIaW50KHQsaSl7dD09PVwibWluRHJhd2luZ0xlbmd0aFwiJiYodGhpcy5WbT1pKSx0aGlzLkxyW3RdPWksdGhpcy5yZWRyYXcoKX1yZXNldFJlbmRlcmluZ0hpbnRzKCl7dGhpcy5Mcj1uZXcgUHJvcGVydHlDb2xsZWN0aW9uLHRoaXMuTHIuZHJhd1NoYWRvd3M9ITAsdGhpcy5Mci50ZXh0R3JlZWtpbmc9ITAsdGhpcy5Mci52aWV3cG9ydE9wdGltaXphdGlvbnM9IVUucnIsdGhpcy5Mci50ZW1wb3JhcnlQaXhlbFJhdGlvPSEwLHRoaXMuTHIucGljdHVyZVJhdGlvT3B0aW1pemF0aW9uPSEwLHRoaXMuTHIubWluRHJhd2luZ0xlbmd0aD0xLHRoaXMuVm09MX1xMih0KXtjb25zdCBpPXRoaXMuTHI7aWYoaT09PW51bGwpcmV0dXJuO2lmKGkuaW1hZ2VTbW9vdGhpbmdFbmFibGVkIT09dm9pZCAwKXtjb25zdCBzPSEhaS5pbWFnZVNtb290aGluZ0VuYWJsZWQ7dC5zZXRJbWFnZVNtb290aGluZ0VuYWJsZWQocyl9Y29uc3QgZT1pLmRlZmF1bHRGb250O2UhPW51bGwmJih0LmZvbnQ9ZSl9Z2V0SW5wdXRPcHRpb24odCl7cmV0dXJuIHRoaXMuQnVbdF19c2V0SW5wdXRPcHRpb24odCxpKXt0aGlzLkJ1W3RdPWl9dVIoKXt0aGlzLkJ1PW5ldyBQcm9wZXJ0eUNvbGxlY3Rpb24sdGhpcy5CdS5leHRyYVRvdWNoQXJlYT0xMCx0aGlzLkJ1LmV4dHJhVG91Y2hUaHJlc2hvbGQ9MTAsdGhpcy5CdS5oYXNHZXN0dXJlWm9vbT0hMH1zZXQodCl7aWYoRGVidWcpZm9yKGNvbnN0IGkgaW4gdCkoaS5zdGFydHNXaXRoKFwiX1wiKXx8aS5pbmRleE9mKFwiLlwiKSE9PS0xKSYmVS5uKFwiUHJvcGVydHkgd2l0aCB1bmRlcnNjb3JlIG9yIHBlcmlvZCBwYXNzZWQgdG8gRGlhZ3JhbS5zZXQuIERpZCB5b3UgbWVhbiB0byB1c2UgRGlhZ3JhbS5hc3NpZ24/XCIpO3JldHVybiBPYmplY3QuYXNzaWduKHRoaXMsdCksdGhpc31hdHRhY2godCl7cmV0dXJuIHRoaXMuc2V0UHJvcGVydGllcyh0KX1zZXRQcm9wZXJ0aWVzKHQpe3JldHVybiBEaWFncmFtLmYwKHRoaXMsdCksdGhpc31zdGF0aWMgZjAodCxpKXtjb25zdCBlPXQgaW5zdGFuY2VvZiBQYW5lbCxzPXQgaW5zdGFuY2VvZiBEaWFncmFtO2Zvcihjb25zdCBuIGluIGkpe249PT1cIlwiJiZVLm4oXCJTZXR0aW5nIHByb3BlcnRpZXMgcmVxdWlyZXMgbm9uLWVtcHR5IHByb3BlcnR5IG5hbWVzXCIpO2xldCBvPXQscj1uO2lmKGV8fHMpe2NvbnN0IGg9bi5pbmRleE9mKFwiLlwiKTtpZihoPjApe2NvbnN0IGY9bi5zdWJzdHJpbmcoMCxoKTtlP289dC5maW5kT2JqZWN0KGYpOihvPXRbZl0sbz09bnVsbCYmKG89dC50b29sTWFuYWdlcltmXSkpLFUuVyhvKT9yPW4uc3Vic3RyaW5nKGgrMSk6VS5uKFwiVW5hYmxlIHRvIGZpbmQgb2JqZWN0IG5hbWVkOiBcIitmK1wiIGluIFwiK3QudG9TdHJpbmcoKStcIiB3aGVuIHRyeWluZyB0byBzZXQgcHJvcGVydHk6IFwiK24pfX1pZihyWzBdIT09XCJfXCImJiFVLmJ3KG8scikpaWYocyYmcj09PVwiTW9kZWxDaGFuZ2VkXCIpe3QuYWRkTW9kZWxDaGFuZ2VkTGlzdGVuZXIoaVtyXSk7Y29udGludWV9ZWxzZSBpZihzJiZyPT09XCJDaGFuZ2VkXCIpe3QuYWRkQ2hhbmdlZExpc3RlbmVyKGlbcl0pO2NvbnRpbnVlfWVsc2UgaWYocyYmVS5idyh0LnRvb2xNYW5hZ2VyLHIpKW89dC50b29sTWFuYWdlcjtlbHNlIGlmKHMmJnQuakEocikpe3QuYWRkRGlhZ3JhbUxpc3RlbmVyKHIsaVtyXSk7Y29udGludWV9ZWxzZSBpZih0IGluc3RhbmNlb2YgTW9kZWwmJnI9PT1cIkNoYW5nZWRcIil7dC5hZGRDaGFuZ2VkTGlzdGVuZXIoaVtyXSk7Y29udGludWV9ZWxzZSBVLm4oJ1RyeWluZyB0byBzZXQgdW5kZWZpbmVkIHByb3BlcnR5IFwiJytyKydcIiBvbiBvYmplY3Q6ICcrby50b1N0cmluZygpKTtjb25zdCBsPWlbbl07b1tyXT1sLHJbMF09PT1cIl9cIiYmbyBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0JiZvLmFkZENvcHlQcm9wZXJ0eShyKX19UEEoKXtpZih0aGlzLmloLmNvdW50IT09MCYmISh0aGlzLnVuZG9NYW5hZ2VyLnRyYW5zYWN0aW9uTGV2ZWw+MSkpe2Zvcig7dGhpcy5paC5jb3VudD4wOyl7Y29uc3QgdD10aGlzLmloO3RoaXMuaWg9bmV3IEdNYXA7Y29uc3QgaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkua2V5O2UuaW52YWxpZGF0ZU90aGVySnVtcE92ZXJzKGkudmFsdWUpLGUucmUoKX19dGhpcy5MKCl9fUwodCl7aWYodD09PXZvaWQgMCl0aGlzLlVlPSEwLHRoaXMucmVxdWVzdFVwZGF0ZSgpO2Vsc2V7Y29uc3QgaT10aGlzLnZpZXdwb3J0Qm91bmRzO3QuaXNSZWFsKCkmJmkuaW50ZXJzZWN0c1JlY3QodCkmJih0aGlzLlVlPSEwLHRoaXMucmVxdWVzdFVwZGF0ZSgpKX10aGlzLk8oXCJJbnZhbGlkYXRlRHJhd1wiKX1pbnZhbGlkYXRlVmlld3BvcnQodCxpKXtpZih0aGlzLlVlPT09ITApcmV0dXJuO2lmKHRoaXMuVWU9ITAsdGhpcy5VZj09PVwic3ZnXCIpe3RoaXMubWF5YmVVcGRhdGUoKTtyZXR1cm59dGhpcy5nZXRSZW5kZXJpbmdIaW50KFwidGVtcG9yYXJ5UGl4ZWxSYXRpb1wiKT09PSEwPyh0aGlzLnZ3KCksdGhpcy5tYXliZVVwZGF0ZSgpLHRoaXMuSVMoITApKTp0aGlzLm1heWJlVXBkYXRlKCl9bWEoKXt0aGlzLkt1PSEwfW9oKCl7dGhpcy5HZj0hMH1hMCgpe3RoaXMuVnUhPT0hMSYmKHRoaXMuVnU9ITEsdGhpcy5LQSh0aGlzLlB0LHRoaXMuTnQpKX1LQSh0LGkpe3RoaXMubmgoKTtjb25zdCBlPXRoaXMuSGkscz10KmUsbj1pKmU7dGhpcy53dC5yZXNpemUocyxuLHQsaSkmJih0aGlzLlVlPSEwLHRoaXMuc2kuY2xlYXJDb250ZXh0Q2FjaGUoITApKX1HQSgpe2NvbnN0IHQ9dGhpcy53dDtpZih0PT09bnVsbHx8dGhpcy5VdS5pc1JlYWwoKSlyZXR1cm4hMDtjb25zdCBpPXRoaXMuUHQsZT10aGlzLk50LHM9dGhpcy5UdDtsZXQgbj0hMSxvPXRoaXMuSm4/dGhpcy5fdDowLHI9dGhpcy5kbj90aGlzLl90OjAsbD1zLmNsaWVudFdpZHRofHxpK28saD1zLmNsaWVudEhlaWdodHx8ZStyO2NvbnN0IGY9dGhpcy52aWV3cG9ydEJvdW5kcyxhPWYueCxjPWYueSx1PWYud2lkdGgsZD1mLmhlaWdodDtpZigobCE9PWkrb3x8aCE9PWUrcikmJih0aGlzLkpuPSExLHRoaXMuZG49ITEsbz0wLHI9MCx0aGlzLlB0PWwsdGhpcy5OdD1oLHRoaXMuVnU9ITAsbj0hMCx0aGlzLm5oKCkpLCF0aGlzLiRufHwhdGhpcy52aWV3cG9ydEJvdW5kcy5pc1JlYWwoKSlyZXR1cm4hMDtjb25zdCBtPXRoaXMuUzEsZz10aGlzLk0xO2lmKHRoaXMuS3U9ITEsIW4mJiF0aGlzLkpuJiYhdGhpcy5kbiYmIXRoaXMuWHUmJiF0aGlzLll1KXJldHVybiEwO2NvbnN0IHA9dGhpcy5kb2N1bWVudEJvdW5kcztsZXQgdz0wLHg9MCxrPTAsYj0wO2NvbnN0IFM9Zi53aWR0aCxNPWYuaGVpZ2h0LEE9dGhpcy5lYTt0aGlzLmNvbnRlbnRBbGlnbm1lbnQuaXNTcG90KCk/KHAud2lkdGg+UyYmKHc9QS5sZWZ0LHg9QS5yaWdodCkscC5oZWlnaHQ+TSYmKGs9QS50b3AsYj1BLmJvdHRvbSkpOih3PUEubGVmdCx4PUEucmlnaHQsaz1BLnRvcCxiPUEuYm90dG9tKTtjb25zdCBDPXAud2lkdGgrdyt4LFA9cC5oZWlnaHQraytiLE49dGhpcy5zY2FsZSxUPU47bGV0IEw9Qz5sL04sRD1QPmgvTjtpZighbiYmIXRoaXMuSm4mJiF0aGlzLmRuJiYhTCYmIUQpcmV0dXJuITA7Y29uc3QgRj1wLngtdyxJPWYueCxSPXAucmlnaHQreDtsZXQgTz1mLnJpZ2h0K287Y29uc3QgWT1wLnktayxLPWYueSxCPXAuYm90dG9tK2I7bGV0IHo9Zi5ib3R0b20rcixWPVwiMXB4XCIsSD1cIjFweFwiO2lmKHRoaXMuc2Nyb2xsTW9kZT09PTEmJihMfHxEKSl7aWYoTCYmdGhpcy5oYXNIb3Jpem9udGFsU2Nyb2xsYmFyJiZ0aGlzLmFsbG93SG9yaXpvbnRhbFNjcm9sbCl7bGV0IFg9MTtGKzE8SSYmKFg9TWF0aC5tYXgoKEktRikqTit0aGlzLlB0LFgpKSxSPk8rMSYmKFg9TWF0aC5tYXgoKFItTykqTit0aGlzLlB0LFgpKSxTK28rMTxDJiYoWD1NYXRoLm1heCgoQy1TKSpOK3RoaXMuUHQsWCkpLFY9WC50b1N0cmluZygpK1wicHhcIn1pZihEJiZ0aGlzLmhhc1ZlcnRpY2FsU2Nyb2xsYmFyJiZ0aGlzLmFsbG93VmVydGljYWxTY3JvbGwpe2xldCBYPTE7WSsxPEsmJihYPU1hdGgubWF4KChLLVkpKk4rdGhpcy5OdCxYKSksQj56KzEmJihYPU1hdGgubWF4KChCLXopKk4rdGhpcy5OdCxYKSksTStyKzE8UCYmKFg9TWF0aC5tYXgoKFAtTSkqTit0aGlzLk50LFgpKSxIPVgudG9TdHJpbmcoKStcInB4XCJ9fWxldCBXPVYhPT1cIjFweFwiLGo9SCE9PVwiMXB4XCI7aWYoIShXJiZqKSYmKFd8fGopKXtpZihMPSEoQzxTK28pLEQ9IShQPE0rciksaiYmKE8tPXRoaXMuX3QpLFcmJih6LT10aGlzLl90KSxMJiZ0aGlzLmhhc0hvcml6b250YWxTY3JvbGxiYXImJnRoaXMuYWxsb3dIb3Jpem9udGFsU2Nyb2xsKXtsZXQgSj0xO0YrMTxJJiYoSj1NYXRoLm1heCgoSS1GKSpOK3RoaXMuUHQsSikpLFI+TysxJiYoSj1NYXRoLm1heCgoUi1PKSpOK3RoaXMuUHQsSikpLFMrMTxDJiYoSj1NYXRoLm1heCgoQy1TKSpOK3RoaXMuUHQsSikpLFY9Si50b1N0cmluZygpK1wicHhcIn1XPVYhPT1cIjFweFwiO2xldCBYPXRoaXMuTnQ7aWYoVyE9PXRoaXMuZG4mJihYPVc/dGhpcy5OdC10aGlzLl90OnRoaXMuTnQrdGhpcy5fdCksRCYmdGhpcy5oYXNWZXJ0aWNhbFNjcm9sbGJhciYmdGhpcy5hbGxvd1ZlcnRpY2FsU2Nyb2xsKXtsZXQgSj0xO1krMTxLJiYoSj1NYXRoLm1heCgoSy1ZKSpOK1gsSikpLEI+eisxJiYoSj1NYXRoLm1heCgoQi16KSpOK1gsSikpLE0rMTxQJiYoSj1NYXRoLm1heCgoUC1NKSpOK1gsSikpLEg9Si50b1N0cmluZygpK1wicHhcIn1qPUghPT1cIjFweFwifWlmKHRoaXMuSG0mJiEoVyE9PXRoaXMuZG58fGohPT10aGlzLkpuKSlyZXR1cm4oaSE9PXRoaXMuUHR8fGUhPT10aGlzLk50KSYmdGhpcy5tYXliZVVwZGF0ZSgpLCExO2lmKFchPT10aGlzLmRuJiYoVj09PVwiMXB4XCI/dGhpcy5OdD10aGlzLk50K3RoaXMuX3Q6dGhpcy5OdD1NYXRoLm1heCh0aGlzLk50LXRoaXMuX3QsMSksbj0hMCksdGhpcy5kbj1XLGcuc3R5bGUud2lkdGg9VixqIT09dGhpcy5KbiYmKEg9PT1cIjFweFwiP3RoaXMuUHQ9dGhpcy5QdCt0aGlzLl90OnRoaXMuUHQ9TWF0aC5tYXgodGhpcy5QdC10aGlzLl90LDEpLG49ITAsdGhpcy5qdSkpe2NvbnN0IFg9UG9pbnQuYSgpO2o/KHQuc3R5bGUubGVmdD10aGlzLl90K1wicHhcIix0aGlzLnBvc2l0aW9uPVgucyh0aGlzLmd0LngrdGhpcy5fdC90aGlzLnNjYWxlLHRoaXMuZ3QueSkpOih0LnN0eWxlLmxlZnQ9XCIwcHhcIix0aGlzLnBvc2l0aW9uPVgucyh0aGlzLmd0LngtdGhpcy5fdC90aGlzLnNjYWxlLHRoaXMuZ3QueSkpLFBvaW50Lm8oWCl9biYmdGhpcy5uaCgpLHRoaXMuSm49aixnLnN0eWxlLmhlaWdodD1ILHRoaXMuYzE9ITAsbiYmKHRoaXMuVnU9ITApO2xldCAkPW0uc2Nyb2xsTGVmdDtpZih0aGlzLmhhc0hvcml6b250YWxTY3JvbGxiYXImJnRoaXMuYWxsb3dIb3Jpem9udGFsU2Nyb2xsJiYoUysxPEM/JD0odGhpcy5wb3NpdGlvbi54LUYpKk46RisxPEk/JD1tLnNjcm9sbFdpZHRoLW0uY2xpZW50V2lkdGg6Uj5PKzEmJigkPXRoaXMucG9zaXRpb24ueCpOKSksdGhpcy5qdSlzd2l0Y2godGhpcy5SeCl7Y2FzZVwibmVnYXRpdmVcIjokPS0obS5zY3JvbGxXaWR0aC0kLW0uY2xpZW50V2lkdGgpO2JyZWFrO2Nhc2VcInJldmVyc2VcIjokPW0uc2Nyb2xsV2lkdGgtJC1tLmNsaWVudFdpZHRoO2JyZWFrfWlmKG0uc2Nyb2xsTGVmdD0kLHRoaXMuaGFzVmVydGljYWxTY3JvbGxiYXImJnRoaXMuYWxsb3dWZXJ0aWNhbFNjcm9sbCYmKE0rMTxQP20uc2Nyb2xsVG9wPSh0aGlzLnBvc2l0aW9uLnktWSkqTjpZKzE8Sz9tLnNjcm9sbFRvcD1tLnNjcm9sbEhlaWdodC1tLmNsaWVudEhlaWdodDpCPnorMSYmKG0uc2Nyb2xsVG9wPXRoaXMucG9zaXRpb24ueSpOKSksbD10aGlzLlB0LGg9dGhpcy5OdCxtLnN0eWxlLndpZHRoPWwrKHRoaXMuSm4/dGhpcy5fdDowKStcInB4XCIsbS5zdHlsZS5oZWlnaHQ9aCsodGhpcy5kbj90aGlzLl90OjApK1wicHhcIixpIT09bHx8ZSE9PWh8fHRoaXMuYW5pbWF0aW9uTWFuYWdlci5iaSl7Y29uc3QgWD1SZWN0LksoYSxjLHUsZCk7cmV0dXJuIHRoaXMub25WaWV3cG9ydEJvdW5kc0NoYW5nZWQoWCx0aGlzLnZpZXdwb3J0Qm91bmRzLFQsbiksUmVjdC5vKFgpLCExfXJldHVybiEwfWFkZCh0KXtVLmUodCxQYXJ0LERpYWdyYW0sXCJhZGQ6cGFydFwiKTtjb25zdCBpPXQuZGlhZ3JhbTtpZihpPT09dGhpcylyZXR1cm47aSE9PW51bGwmJlUubihcIkNhbm5vdCBhZGQgcGFydCBcIit0LnRvU3RyaW5nKCkrXCIgdG8gXCIrdGhpcy50b1N0cmluZygpK1wiLiBJdCBpcyBhbHJlYWR5IGEgcGFydCBvZiBcIitpLnRvU3RyaW5nKCkpO2xldCBlPXRoaXMuZmluZExheWVyKHQubGF5ZXJOYW1lKTtpZihlPT09bnVsbCYmKGU9dGhpcy5maW5kTGF5ZXIoXCJcIikpLGU9PT1udWxsJiZVLm4oJ0Nhbm5vdCBhZGQgYSBQYXJ0IHdoZW4gdW5hYmxlIGZpbmQgYSBMYXllciBuYW1lZCBcIicrdC5sYXllck5hbWUrJ1wiIGFuZCB0aGVyZSBpcyBubyBkZWZhdWx0IExheWVyJyksdC5sYXllcj09PWUpcmV0dXJuO2NvbnN0IHM9ZS5pYSg5OTk5OTk5OSx0LHQuZGlhZ3JhbT09PXRoaXMpO3M+PTAmJnRoaXMucmFpc2VDaGFuZ2VkRXZlbnQoMyxcInBhcnRzXCIsZSxudWxsLHQsbnVsbCxzKSxlLmlzVGVtcG9yYXJ5fHx0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLHQuaW52YWxpZGF0ZUxheW91dCgxKTtjb25zdCBuPXQubGF5ZXJDaGFuZ2VkO24hPT1udWxsJiZuKHQsbnVsbCxlKX1pYSh0KXt0aGlzLnBhcnRNYW5hZ2VyLmlhKHQpO2NvbnN0IGk9dGhpczt0LkpyKHM9PmkudkEocykpLHQuZGF0YXx8dC5CbygpLHQuaGFzUGxhY2Vob2xkZXIoKSYmdC51KCksdC5kYXRhIT09bnVsbCYmdC5KcihzPT5pLnBhcnRNYW5hZ2VyLlcyKHMsbnVsbCkpLCh0Lm5zKCk9PT0hMHx8dC5oaCgpPT09ITApJiZ0aGlzLmwwKHQpLHQuSkEoITAsdGhpcyksdC4kQSgpPyh0LmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmdGhpcy5MKHQudGEodC5hY3R1YWxCb3VuZHMpKSx0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpKTp0LmlzVmlzaWJsZSgpJiZ0LmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmdGhpcy5MKHQudGEodC5hY3R1YWxCb3VuZHMpKSx0aGlzLnJlcXVlc3RVcGRhdGUoKX1uZSh0KXt0LmNsZWFyQWRvcm5tZW50cygpLHRoaXMucGFydE1hbmFnZXIubmUodCk7Y29uc3QgaT10aGlzO3QuZGF0YSE9PW51bGwmJnQuSnIocz0+aS5wYXJ0TWFuYWdlci5qMihzLGkpKSx0aGlzLmpuLmRlbGV0ZSh0KSx0IGluc3RhbmNlb2YgTGluayYmdGhpcy5Eci5kZWxldGUodCksdC4kQSgpPyh0LmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmdGhpcy5MKHQudGEodC5hY3R1YWxCb3VuZHMpKSx0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpKTp0LmlzVmlzaWJsZSgpJiZ0LmFjdHVhbEJvdW5kcy5pc1JlYWwoKSYmdGhpcy5MKHQudGEodC5hY3R1YWxCb3VuZHMpKSx0aGlzLnJlcXVlc3RVcGRhdGUoKX1yZW1vdmUodCl7VS5lKHQsUGFydCxEaWFncmFtLFwicmVtb3ZlOnBhcnRcIiksdGhpcy52Mih0LCEwKX12Mih0LGkpe2NvbnN0IGU9dC5sYXllcjtpZihlPT09bnVsbHx8ZS5kaWFncmFtIT09dGhpcylyZXR1cm47dC5pc1NlbGVjdGVkPSExLHQuaXNIaWdobGlnaHRlZD0hMSx0LmludmFsaWRhdGVMYXlvdXQoMiksaSYmdC5KZigpO2NvbnN0IHM9ZS5uZSgtMSx0LCExKTtzPj0wJiZ0aGlzLnJhaXNlQ2hhbmdlZEV2ZW50KDQsXCJwYXJ0c1wiLGUsdCxudWxsLHMsbnVsbCk7Y29uc3Qgbj10LmxheWVyQ2hhbmdlZDtuIT09bnVsbCYmbih0LGUsbnVsbCl9cmVtb3ZlUGFydHModCxpKXtpZihpPT09dm9pZCAwJiYoaT0hMSksQXJyYXkuaXNBcnJheSh0KSl7Y29uc3QgZT10Lmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPXRbc107aSYmIW4uY2FuRGVsZXRlKCl8fHRoaXMucmVtb3ZlKG4pfX1lbHNle2NvbnN0IGU9bmV3IEdTZXQ7ZS5hZGRBbGwodCk7Y29uc3Qgcz1lLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7aSYmIW4uY2FuRGVsZXRlKCl8fHRoaXMucmVtb3ZlKG4pfX19Y29weVBhcnRzKHQsaSxlKXtlPT09dm9pZCAwJiYoZT0hMSk7bGV0IHM9bnVsbDtjb25zdCBuPWl8fHRoaXMsbz1uLm1vZGVsO2xldCByPSExLGw9ITE7dHJ5e28uU20oKSYmKHI9by5jb3BpZXNQYXJlbnRLZXlPZk5vZGVEYXRhLG8uY29waWVzUGFyZW50S2V5T2ZOb2RlRGF0YT1uLmNvbW1hbmRIYW5kbGVyLmNvcGllc1BhcmVudEtleSksKG8ua20oKXx8by5CMSgpKSYmKGw9by5jb3BpZXNHcm91cEtleU9mTm9kZURhdGEsby5jb3BpZXNHcm91cEtleU9mTm9kZURhdGE9bi5jb21tYW5kSGFuZGxlci5jb3BpZXNHcm91cEtleSkscz10aGlzLnBhcnRNYW5hZ2VyLmNvcHlQYXJ0cyh0LGksZSl9ZmluYWxseXtvLlNtKCkmJihvLmNvcGllc1BhcmVudEtleU9mTm9kZURhdGE9ciksKG8ua20oKXx8by5CMSgpKSYmKG8uY29waWVzR3JvdXBLZXlPZk5vZGVEYXRhPWwpfXJldHVybiBzfW1vdmVQYXJ0cyh0LGksZSxzKXtpZihlPT09dm9pZCAwJiYoZT0hMSkscz09PXZvaWQgMCYmKHM9dGhpcy5jMCgpKSxVLmUoaSxQb2ludCxEaWFncmFtLFwibW92ZVBhcnRzOm9mZnNldFwiKSx0aGlzLnRvb2xNYW5hZ2VyPT09bnVsbClyZXR1cm47Y29uc3Qgbz1uZXcgR01hcDtpZih0IT09bnVsbClpZihBcnJheS5pc0FycmF5KHQpKWZvcihsZXQgcj0wO3I8dC5sZW5ndGg7cisrKXRoaXMuJHIobyx0W3JdLGUscyk7ZWxzZXtjb25zdCByPXQuaXRlcmF0b3I7Zm9yKDtyLm5leHQoKTspdGhpcy4kcihvLHIudmFsdWUsZSxzKX1lbHNle2xldCByPXRoaXMucGFydHM7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTt0aGlzLiRyKG8sbCxlLHMpfWZvcihyPXRoaXMubm9kZXM7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7dGhpcy4kcihvLGwsZSxzKX1mb3Iocj10aGlzLmxpbmtzO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO3RoaXMuJHIobyxsLGUscyl9fXRoaXMuQlMobyxpLHMsZSl9JHIodCxpLGUscyxuKXtpZighdC5oYXMoaSkmJihuPT09dm9pZCAwJiYobj0hMSksIShlJiYhbiYmIWkuY2FuTW92ZSgpJiYhaS5jYW5Db3B5KCkpKSlpZihzPT09dm9pZCAwJiYocz10aGlzLmMwKCkpLGkgaW5zdGFuY2VvZiBOb2RlKXtpZih0LnNldChpLHRoaXMuS3MocyxpLGkubG9jYXRpb24pKSxpIGluc3RhbmNlb2YgR3JvdXAmJihpLmhhc1BsYWNlaG9sZGVyKCl8fHMuZHJhZ3NNZW1iZXJzKSl7Y29uc3Qgcj1pLm1lbWJlclBhcnRzO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7dGhpcy4kcih0LGwsZSxzLHMuZ3JvdXBzQWx3YXlzTW92ZSl9fWNvbnN0IG89aS5saW5rc0Nvbm5lY3RlZDtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlO2lmKHQuaGFzKHIpKWNvbnRpbnVlO2NvbnN0IGw9ci5mcm9tTm9kZSxoPXIudG9Ob2RlO2whPT1udWxsJiZ0LmhhcyhsKSYmaCE9PW51bGwmJnQuaGFzKGgpJiZ0aGlzLiRyKHQscixlLHMpfWlmKHMuZHJhZ3NUcmVlKXtjb25zdCByPWkuZmluZFRyZWVDaGlsZHJlbk5vZGVzKCk7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTt0aGlzLiRyKHQsbCxlLHMpfX19ZWxzZSBpZihpIGluc3RhbmNlb2YgTGluayl7dC5zZXQoaSx0aGlzLktzKHMsaSkpO2NvbnN0IG89aS5sYWJlbE5vZGVzO2Zvcig7by5uZXh0KCk7KXtjb25zdCByPW8udmFsdWU7dGhpcy4kcih0LHIsZSxzKX19ZWxzZSBpIGluc3RhbmNlb2YgQWRvcm5tZW50fHx0LnNldChpLHRoaXMuS3MocyxpLGkubG9jYXRpb24pKX1CUyh0LGksZSxzKXtpZih0PT09bnVsbHx8KFUuZSh0LEdNYXAsRGlhZ3JhbSxcIm1vdmVQYXJ0czpwYXJ0c1wiKSx0LmNvdW50PT09MCkpcmV0dXJuO2NvbnN0IG49UG9pbnQuYSgpLG89UG9pbnQuYSgpO28uYyhpKSxpc05hTihvLngpJiYoby54PTApLGlzTmFOKG8ueSkmJihvLnk9MCk7Y29uc3Qgcj10aGlzLkExO3J8fHRoaXMuX0ModCk7Y29uc3QgbD1VLmx0KCksaD1VLmx0KCksZj10Lml0ZXJhdG9yO2xldCBhPVBvaW50LmEoKTtmb3IoO2YubmV4dCgpOyl7Y29uc3QgZz1mLmtleSxwPWYudmFsdWU7aWYoZy5DZSgpKXtjb25zdCB3PXRoaXMuWkEoZyx0KTtpZih3IT09bnVsbClsLnB1c2gobmV3IERyYWdnaW5nTm9kZUluZm9QYWlyKGcscCx3KSk7ZWxzZSBpZighc3x8Zy5jYW5Nb3ZlKCkpe2NvbnN0IHg9cC5wb2ludDtuLmMoeCksdGhpcy5jb21wdXRlTW92ZShnLG4uYWRkKG8pLGUsYSksZy5sb2NhdGlvbj1hLHAuc2hpZnRlZD09PXZvaWQgMCYmKHAuc2hpZnRlZD1uZXcgUG9pbnQpLHAuc2hpZnRlZC5jKGEuc3VidHJhY3QoeCkpfX1lbHNlIGYua2V5IGluc3RhbmNlb2YgTGluayYmaC5wdXNoKG5ldyBLZXlWYWx1ZVBhaXIoZi5rZXksZi52YWx1ZSkpfVBvaW50Lm8oYSk7Y29uc3QgYz1sLmxlbmd0aDtmb3IobGV0IGc9MDtnPGM7ZysrKXtjb25zdCBwPWxbZ10sdz1wLlFBLnBvaW50O24uYyh3KSxwLlYxLnNoaWZ0ZWQ9PT12b2lkIDAmJihwLlYxLnNoaWZ0ZWQ9bmV3IFBvaW50KSxwLlRlLmxvY2F0aW9uPW4uYWRkKHAuVjEuc2hpZnRlZCl9Y29uc3QgdT1Qb2ludC5hKCksZD1Qb2ludC5hKCksbT1oLmxlbmd0aDtmb3IobGV0IGc9MDtnPG07ZysrKXtjb25zdCBwPWhbZ10sdz1wLmtleTtpZih3IGluc3RhbmNlb2YgTGluayl7aWYody5zdXNwZW5kc1JvdXRpbmcpe3cuQ3I9bnVsbDtjb25zdCB4PXcuZnJvbU5vZGUsaz13LnRvTm9kZTtpZih0aGlzLmRyYWdnZWRMaW5rIT09bnVsbCYmZS5kcmFnc0xpbmspe2NvbnN0IGI9cC52YWx1ZS5wb2ludDtpZih3LmRyYWdDb21wdXRhdGlvbj09PW51bGwpe3Quc2V0KHcsdGhpcy5LcyhlLHcsbykpO2NvbnN0IFM9by54LWIueCxNPW8ueS1iLnk7dy53cihTLE0pfWVsc2V7Y29uc3QgUz1Qb2ludC5LKDAsMCksTT13LmdldFBvaW50KDApO00mJk0uaXNSZWFsKCkmJlMuYyhNKSxhPVBvaW50LmEoKS5jKFMpLmFkZChvKTtsZXQgQT1hO2UuaXNHcmlkU25hcEVuYWJsZWQmJihlLmlzR3JpZFNuYXBSZWFsdGltZXx8dGhpcy5sYXN0SW5wdXQudXApJiYoQT1Qb2ludC5hKCksdGhpcy5QTSh3LGEsQSxlKSksYS5jKHcuZHJhZ0NvbXB1dGF0aW9uKHcsYSxBKSkuc3VidHJhY3QoUyksdC5zZXQodyx0aGlzLktzKGUsdyxhKSk7Y29uc3QgQz1hLngtYi54LFA9YS55LWIueTt3LndyKEMsUCksUG9pbnQubyhTKSxQb2ludC5vKGEpLEEhPT1hJiZQb2ludC5vKEEpfX1lbHNle2lmKHghPT1udWxsKXt1LmMoeC5sb2NhdGlvbik7Y29uc3QgYj10LmdldCh4KTtiIT09bnVsbCYmdS5zdWJ0cmFjdChiLnBvaW50KX1pZihrIT09bnVsbCl7ZC5jKGsubG9jYXRpb24pO2NvbnN0IGI9dC5nZXQoayk7YiE9PW51bGwmJmQuc3VidHJhY3QoYi5wb2ludCl9aWYoeCE9PW51bGwmJmshPT1udWxsKWlmKHUuZXF1YWxzQXBwcm94KGQpKXtjb25zdCBiPXAudmFsdWUucG9pbnQsUz1uO1MuYyh1KSxTLnN1YnRyYWN0KGIpLHQuc2V0KHcsdGhpcy5LcyhlLHcsdSkpLHcud3IoUy54LFMueSl9ZWxzZSB3LnN1c3BlbmRzUm91dGluZz0hMSx3LmludmFsaWRhdGVSb3V0ZSgpO2Vsc2V7Y29uc3QgYj1wLnZhbHVlLnBvaW50O2xldCBTO3ghPT1udWxsP1M9dTprIT09bnVsbD9TPWQ6Uz1vLHQuc2V0KHcsdGhpcy5LcyhlLHcsUykpO2NvbnN0IE09Uy54LWIueCxBPVMueS1iLnk7dy53cihNLEEpfX19ZWxzZSBpZih3LmZyb21Ob2RlPT09bnVsbHx8dy50b05vZGU9PT1udWxsKXtjb25zdCB4PXAudmFsdWUucG9pbnQ7dC5zZXQodyx0aGlzLktzKGUsdyxvKSk7Y29uc3Qgaz1vLngteC54LGI9by55LXgueTt3LndyKGssYil9fX1Qb2ludC5vKG4pLFBvaW50Lm8obyksUG9pbnQubyh1KSxQb2ludC5vKGQpLFUudHQobCksVS50dChoKSxyfHwodGhpcy5UaSgpLHRoaXMuUlModCkpfWNvbXB1dGVNb3ZlKHQsaSxlLHMpe2lmKHM9PT12b2lkIDAmJihzPW5ldyBQb2ludCkscy5jKGkpLHQ9PT1udWxsKXJldHVybiBzO2xldCBuPWk7Y29uc3Qgbz1lLmlzR3JpZFNuYXBFbmFibGVkO28mJihlLmlzR3JpZFNuYXBSZWFsdGltZXx8dGhpcy5sYXN0SW5wdXQudXApJiYobj1Qb2ludC5hKCksdGhpcy5QTSh0LGksbixlKSk7Y29uc3Qgcj10LmRyYWdDb21wdXRhdGlvbiE9PW51bGw/dC5kcmFnQ29tcHV0YXRpb24odCxpLG4pOm4sbD10Lm1pbkxvY2F0aW9uO2xldCBoPWwueDtpc05hTihoKSYmKGg9bz9NYXRoLnJvdW5kKHQubG9jYXRpb24ueCoxZTMpLzFlMzp0LmxvY2F0aW9uLngpO2xldCBmPWwueTtpc05hTihmKSYmKGY9bz9NYXRoLnJvdW5kKHQubG9jYXRpb24ueSoxZTMpLzFlMzp0LmxvY2F0aW9uLnkpO2NvbnN0IGE9dC5tYXhMb2NhdGlvbjtsZXQgYz1hLng7aXNOYU4oYykmJihjPW8/TWF0aC5yb3VuZCh0LmxvY2F0aW9uLngqMWUzKS8xZTM6dC5sb2NhdGlvbi54KTtsZXQgdT1hLnk7cmV0dXJuIGlzTmFOKHUpJiYodT1vP01hdGgucm91bmQodC5sb2NhdGlvbi55KjFlMykvMWUzOnQubG9jYXRpb24ueSkscy5zKE1hdGgubWF4KGgsTWF0aC5taW4oci54LGMpKSxNYXRoLm1heChmLE1hdGgubWluKHIueSx1KSkpLG4hPT1pJiZQb2ludC5vKG4pLHN9YzAoKXtjb25zdCB0PXRoaXMudG9vbE1hbmFnZXIuZmluZFRvb2woXCJEcmFnZ2luZ1wiKTtyZXR1cm4gdCBpbnN0YW5jZW9mIERyYWdnaW5nVG9vbD90LmRyYWdPcHRpb25zOnRoaXMuVDF9UE0odCxpLGUscyl7aWYocz09PXZvaWQgMCYmKHM9dGhpcy5jMCgpKSxlLmMoaSksdD09PW51bGwpcmV0dXJuIGU7Y29uc3Qgbj10aGlzLmdyaWQsbz1zLmdyaWRTbmFwQ2VsbFNpemU7bGV0IHI9by53aWR0aCxsPW8uaGVpZ2h0O2NvbnN0IGg9cy5ncmlkU25hcE9yaWdpbjtsZXQgZj1oLngsYT1oLnk7Y29uc3QgYz1zLmdyaWRTbmFwQ2VsbFNwb3Q7aWYobiE9PW51bGwpe2NvbnN0IGQ9bi5ncmlkQ2VsbFNpemU7aXNOYU4ocikmJihyPWQud2lkdGgpLGlzTmFOKGwpJiYobD1kLmhlaWdodCk7Y29uc3QgbT1uLmdyaWRPcmlnaW47aXNOYU4oZikmJihmPW0ueCksaXNOYU4oYSkmJihhPW0ueSl9Y29uc3QgdT1Qb2ludC5LKDAsMCk7cmV0dXJuIHUuc2V0U3BvdCgwLDAscixsLGMpLEdlby5WZyhpLngsaS55LGYrdS54LGErdS55LHIsbCxlKSxQb2ludC5vKHUpLGV9X0ModCl7aWYodD09PW51bGwpcmV0dXJuO3RoaXMuQTE9ITA7Y29uc3QgaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkua2V5O2UgaW5zdGFuY2VvZiBMaW5rJiYoZS5zdXNwZW5kc1JvdXRpbmc9ITApfX1SUyh0KXtpZih0PT09bnVsbClyZXR1cm47Y29uc3QgaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkua2V5O2UgaW5zdGFuY2VvZiBMaW5rJiYoZS5zdXNwZW5kc1JvdXRpbmc9ITEsZS5fQSgpJiZlLmludmFsaWRhdGVSb3V0ZSgpKX10aGlzLkExPSExfWdldCBkcmFnZ2VkTGluaygpe3JldHVybiB0aGlzLkwxfXNldCBkcmFnZ2VkTGluayh0KXt0aGlzLkwxIT09dCYmKHRoaXMuTDE9dCx0IT09bnVsbCYmKHRoaXMuRDE9dC5mcm9tUG9ydCx0aGlzLkYxPXQudG9Qb3J0KSl9Z2V0IFhTKCl7cmV0dXJuIHRoaXMuRDF9c2V0IFhTKHQpe3RoaXMuRDE9dH1nZXQgWVMoKXtyZXR1cm4gdGhpcy5GMX1zZXQgWVModCl7dGhpcy5GMT10fVpBKHQsaSl7Y29uc3QgZT10LmNvbnRhaW5pbmdHcm91cDtpZihlIT09bnVsbCl7bGV0IHM9dGhpcy5aQShlLGkpO2lmKHMhPT1udWxsfHwocz1pLmdldChlKSxzIT09bnVsbCkpcmV0dXJuIHN9cmV0dXJuIG51bGx9S3ModCxpLGUpe2lmKGU9PT12b2lkIDApcmV0dXJuIG5ldyBEcmFnZ2luZ0luZm8oUG9pbnQuTm8pO2xldCBzPXQuaXNHcmlkU25hcEVuYWJsZWQ7cmV0dXJuIXQuZ3JvdXBzU25hcE1lbWJlcnMmJmkuY29udGFpbmluZ0dyb3VwIT09bnVsbCYmKHM9ITEpLHM/bmV3IERyYWdnaW5nSW5mbyhuZXcgUG9pbnQoTWF0aC5yb3VuZChlLngqMWUzKS8xZTMsTWF0aC5yb3VuZChlLnkqMWUzKS8xZTMpKTpuZXcgRHJhZ2dpbmdJbmZvKGUuY29weSgpKX1KMih0LGkpe2lmKFUuZSh0LExheWVyLERpYWdyYW0sXCJhZGRMYXllcjpsYXllclwiKSx0LmRpYWdyYW0hPT1udWxsJiZ0LmRpYWdyYW0hPT10aGlzJiZVLm4oXCJDYW5ub3Qgc2hhcmUgYSBMYXllciB3aXRoIGFub3RoZXIgRGlhZ3JhbTogXCIrdCtcIiBvZiBcIit0LmRpYWdyYW0pLGk9PT1udWxsP3QuZGlhZ3JhbSE9PW51bGwmJlUubihcIkNhbm5vdCBhZGQgYW4gZXhpc3RpbmcgTGF5ZXIgdG8gdGhpcyBEaWFncmFtIGFnYWluOiBcIit0KTooVS5lKGksTGF5ZXIsRGlhZ3JhbSxcImFkZExheWVyOmV4aXN0aW5nTGF5ZXJcIiksaS5kaWFncmFtIT09dGhpcyYmVS5uKFwiRXhpc3RpbmcgTGF5ZXIgbXVzdCBiZSBpbiB0aGlzIERpYWdyYW06IFwiK2krXCIgbm90IGluIFwiK2kuZGlhZ3JhbSksdD09PWkmJlUubihcIkNhbm5vdCBtb3ZlIGEgTGF5ZXIgYmVmb3JlIG9yIGFmdGVyIGl0c2VsZjogXCIrdCkpLHQuZGlhZ3JhbT09PXRoaXMpcmV0dXJuO2NvbnN0IGU9dC5uYW1lLHM9dGhpcy5XdCxuPXMuY291bnQ7Zm9yKGxldCBvPTA7bzxuO28rKylzLmVsdChvKS5uYW1lPT09ZSYmVS5uKFwiQ2Fubm90IGFkZCBMYXllciB3aXRoIHRoZSBuYW1lICdcIitlK1wiJzsgYSBMYXllciB3aXRoIHRoZSBzYW1lIG5hbWUgaXMgYWxyZWFkeSBwcmVzZW50IGluIHRoaXMgRGlhZ3JhbS5cIil9YWRkTGF5ZXIodCl7dGhpcy5KMih0LG51bGwpLHQuRG8odGhpcyk7Y29uc3QgaT10aGlzLld0O2xldCBlPWkuY291bnQtMTtpZighdC5pc1RlbXBvcmFyeSlmb3IoO2U+PTAmJmkuZWx0KGUpLmlzVGVtcG9yYXJ5OyllLS07cmV0dXJuIGkuaW5zZXJ0QXQoZSsxLHQpLHRoaXMuQ2khPT1udWxsJiZ0aGlzLnJhaXNlQ2hhbmdlZEV2ZW50KDMsXCJsYXllcnNcIix0aGlzLG51bGwsdCxudWxsLGUrMSksdGhpcy5MKCksdGhpcy5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKSx0aGlzfWFkZExheWVyQmVmb3JlKHQsaSl7dGhpcy5KMih0LGkpLHQuRG8odGhpcyk7Y29uc3QgZT10aGlzLld0LHM9ZS5pbmRleE9mKHQpO3M+PTAmJihlLmRlbGV0ZSh0KSx0aGlzLkNpIT09bnVsbCYmdGhpcy5yYWlzZUNoYW5nZWRFdmVudCg0LFwibGF5ZXJzXCIsdGhpcyx0LG51bGwscyxudWxsKSk7Y29uc3Qgbj1lLmNvdW50O2xldCBvO2ZvcihvPTA7bzxuO28rKylpZihlLmVsdChvKT09PWkpe2UuaW5zZXJ0QXQobyx0KTticmVha31yZXR1cm4gdGhpcy5DaSE9PW51bGwmJnRoaXMucmFpc2VDaGFuZ2VkRXZlbnQoMyxcImxheWVyc1wiLHRoaXMsbnVsbCx0LG51bGwsbyksdGhpcy5MKCksczwwJiZ0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLHRoaXN9YWRkTGF5ZXJBZnRlcih0LGkpe3RoaXMuSjIodCxpKSx0LkRvKHRoaXMpO2NvbnN0IGU9dGhpcy5XdCxzPWUuaW5kZXhPZih0KTtzPj0wJiYoZS5kZWxldGUodCksdGhpcy5DaSE9PW51bGwmJnRoaXMucmFpc2VDaGFuZ2VkRXZlbnQoNCxcImxheWVyc1wiLHRoaXMsdCxudWxsLHMsbnVsbCkpO2NvbnN0IG49ZS5jb3VudDtsZXQgbztmb3Iobz0wO288bjtvKyspaWYoZS5lbHQobyk9PT1pKXtlLmluc2VydEF0KG8rMSx0KTticmVha31yZXR1cm4gdGhpcy5DaSE9PW51bGwmJnRoaXMucmFpc2VDaGFuZ2VkRXZlbnQoMyxcImxheWVyc1wiLHRoaXMsbnVsbCx0LG51bGwsbysxKSx0aGlzLkwoKSxzPDAmJnRoaXMuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpc31qcih0LGkpe3QuRG8odGhpcyksdGhpcy5XdC5pbnNlcnRBdChpLHQpfXRMKHQpe3RoaXMuV3QucmVtb3ZlQXQodCl9cmVtb3ZlTGF5ZXIodCl7aWYoVS5lKHQsTGF5ZXIsRGlhZ3JhbSxcInJlbW92ZUxheWVyOmxheWVyXCIpLHQuZGlhZ3JhbSE9PXRoaXMmJlUubihcIkNhbm5vdCByZW1vdmUgYSBMYXllciBmcm9tIGFub3RoZXIgRGlhZ3JhbTogXCIrdCtcIiBvZiBcIit0LmRpYWdyYW0pLHQubmFtZT09PVwiXCIpcmV0dXJuO2NvbnN0IGk9dGhpcy5XdCxlPWkuaW5kZXhPZih0KTtpZihpLmRlbGV0ZSh0KSl7Y29uc3Qgbj10LkZ0LmNvcHkoKS5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlLHI9by5sYXllck5hbWU7ciE9PXQubmFtZT9vLmxheWVyTmFtZT1yOm8ubGF5ZXJOYW1lPVwiXCJ9dGhpcy5DaSE9PW51bGwmJnRoaXMucmFpc2VDaGFuZ2VkRXZlbnQoNCxcImxheWVyc1wiLHRoaXMsdCxudWxsLGUsbnVsbCksdGhpcy5MKCksdGhpcy5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKX19ZmluZExheWVyKHQpe2NvbnN0IGk9dGhpcy5sYXllcnM7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtpZihlLm5hbWU9PT10KXJldHVybiBlfXJldHVybiBudWxsfWZpbmRSb3V0ZXIodCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5qZilpZihpLm5hbWU9PT10KXJldHVybiBpO3JldHVybiBudWxsfWFkZE1vZGVsQ2hhbmdlZExpc3RlbmVyKHQpe3JldHVybiBVLlAodCxEaWFncmFtLFwiYWRkTW9kZWxDaGFuZ2VkTGlzdGVuZXI6bGlzdGVuZXJcIiksdGhpcy52bj09PW51bGwmJih0aGlzLnZuPW5ldyBMaXN0KSx0aGlzLnZuLmFkZCh0KSx0aGlzLm1vZGVsLmFkZENoYW5nZWRMaXN0ZW5lcih0KSx0aGlzfXJlbW92ZU1vZGVsQ2hhbmdlZExpc3RlbmVyKHQpe1UuUCh0LERpYWdyYW0sXCJyZW1vdmVNb2RlbENoYW5nZWRMaXN0ZW5lcjpsaXN0ZW5lclwiKSx0aGlzLnZuIT09bnVsbCYmKHRoaXMudm4uZGVsZXRlKHQpLHRoaXMudm4uY291bnQ9PT0wJiYodGhpcy52bj1udWxsKSksdGhpcy5tb2RlbC5yZW1vdmVDaGFuZ2VkTGlzdGVuZXIodCl9YWRkQ2hhbmdlZExpc3RlbmVyKHQpe3JldHVybiBVLlAodCxEaWFncmFtLFwiYWRkQ2hhbmdlZExpc3RlbmVyOmxpc3RlbmVyXCIpLHRoaXMuRnI9PT1udWxsJiYodGhpcy5Gcj1uZXcgTGlzdCksdGhpcy5Gci5hZGQodCksdGhpc31yZW1vdmVDaGFuZ2VkTGlzdGVuZXIodCl7VS5QKHQsRGlhZ3JhbSxcInJlbW92ZUNoYW5nZWRMaXN0ZW5lcjpsaXN0ZW5lclwiKSx0aGlzLkZyIT09bnVsbCYmKHRoaXMuRnIuZGVsZXRlKHQpLHRoaXMuRnIuY291bnQ9PT0wJiYodGhpcy5Gcj1udWxsKSl9JDIodCl7aWYoIXRoaXMuc2tpcHNVbmRvTWFuYWdlciYmIXRoaXMubW9kZWwuc2tpcHNVbmRvTWFuYWdlciYmdGhpcy5tb2RlbC51bmRvTWFuYWdlci5oYW5kbGVDaGFuZ2VkKHQpLHQuY2hhbmdlIT09MSYmKHRoaXMuaXNNb2RpZmllZD0hMCksdGhpcy5GciE9PW51bGwpe2NvbnN0IGk9dGhpcy5GcixlPWkubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspaS5lbHQocykodCl9fXJhaXNlQ2hhbmdlZEV2ZW50KHQsaSxlLHMsbixvLHIpe289PT12b2lkIDAmJihvPW51bGwpLHI9PT12b2lkIDAmJihyPW51bGwpO2NvbnN0IGw9bmV3IENoYW5nZWRFdmVudDtsLmRpYWdyYW09dGhpcyxsLmNoYW5nZT10LGwucHJvcGVydHlOYW1lPWksbC5vYmplY3Q9ZSxsLm9sZFZhbHVlPXMsbC5vbGRQYXJhbT1vLGwubmV3VmFsdWU9bixsLm5ld1BhcmFtPXIsdGhpcy4kMihsKX1yYWlzZUNoYW5nZWQodCxpLGUscyxuKXt0aGlzLnJhaXNlQ2hhbmdlZEV2ZW50KDIsdCx0aGlzLGksZSxzLG4pfXQodCxpLGUscyxuKXt0aGlzLnJhaXNlQ2hhbmdlZEV2ZW50KDIsdCx0aGlzLGksZSxzLG4pfWdldCBhbmltYXRpb25NYW5hZ2VyKCl7cmV0dXJuIHRoaXMud3N9Z2V0IHVuZG9NYW5hZ2VyKCl7cmV0dXJuIHRoaXMuQ2kudW5kb01hbmFnZXJ9Z2V0IHNraXBzVW5kb01hbmFnZXIoKXtyZXR1cm4gdGhpcy5Jb31zZXQgc2tpcHNVbmRvTWFuYWdlcih0KXtVLmkodCxcImJvb2xlYW5cIixEaWFncmFtLFwic2tpcHNVbmRvTWFuYWdlclwiKSx0aGlzLklvPXQsdGhpcy5DaS5za2lwc1VuZG9NYW5hZ2VyPXR9Z2V0IGRlbGF5c0xheW91dCgpe3JldHVybiB0aGlzLlF4fXNldCBkZWxheXNMYXlvdXQodCl7dGhpcy5ReD10fUhDKHQsaSl7aWYodD09PW51bGx8fHQuZGlhZ3JhbSE9PXRoaXMpcmV0dXJuO2NvbnN0IGU9dGhpcy5tZTt0cnl7dGhpcy5tZT0hMDtjb25zdCBzPXQuY2hhbmdlO2lmKHM9PT0yKXtjb25zdCBuPXQub2JqZWN0LG89dC5wcm9wZXJ0eU5hbWUscj10LmdldFZhbHVlKGkpO2lmKHQuZGlhZ3JhbS5tb2RlbC5ldChuLG8sciksbiBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0KXtjb25zdCBsPW4ucGFydDtsIT09bnVsbCYmbC5pbnZhbGlkYXRlQWRvcm5tZW50cygpfXRoaXMuaXNNb2RpZmllZD0hMH1lbHNlIGlmKHM9PT0zKXtjb25zdCBuPXQub2JqZWN0LG89dC5uZXdQYXJhbSxyPXQubmV3VmFsdWU7aWYobiBpbnN0YW5jZW9mIFBhbmVsKWlmKHR5cGVvZiBvPT1cIm51bWJlclwiJiZyIGluc3RhbmNlb2YgR3JhcGhPYmplY3Qpe2k/bi5uZShvKTpuLmluc2VydEF0KG8scik7Y29uc3QgbD1uLnBhcnQ7bCE9PW51bGwmJmwuaW52YWxpZGF0ZUFkb3JubWVudHMoKX1lbHNlIHR5cGVvZiBvPT1cIm51bWJlclwiJiZyIGluc3RhbmNlb2YgUm93Q29sdW1uRGVmaW5pdGlvbiYmKHIuaXNSb3c/bi5pTChvLGk/dm9pZCAwOnIpOm4uZUwobyxpP3ZvaWQgMDpyKSk7ZWxzZSBpZihuIGluc3RhbmNlb2YgTGF5ZXIpe2NvbnN0IGw9dC5vbGRQYXJhbT09PSEwO3R5cGVvZiBvPT1cIm51bWJlclwiJiZyIGluc3RhbmNlb2YgUGFydCYmKGk/KGx8fChyLmlzU2VsZWN0ZWQ9ITEsci5pc0hpZ2hsaWdodGVkPSExLHIuaW52YWxpZGF0ZUFkb3JubWVudHMoKSksbi5uZShsP286LTEscixsKSk6bi5pYShvLHIsbCkpfWVsc2UgbiBpbnN0YW5jZW9mIERpYWdyYW0/dHlwZW9mIG89PVwibnVtYmVyXCImJnIgaW5zdGFuY2VvZiBMYXllciYmKGk/dGhpcy50TChvKTp0aGlzLmpyKHIsbykpOlUubihcInVua25vd24gQ2hhbmdlVHlwZS5JbnNlcnQgb2JqZWN0OiBcIit0LnRvU3RyaW5nKCkpO3RoaXMuaXNNb2RpZmllZD0hMH1lbHNlIGlmKHM9PT00KXtjb25zdCBuPXQub2JqZWN0LG89dC5vbGRQYXJhbSxyPXQub2xkVmFsdWU7aWYobiBpbnN0YW5jZW9mIFBhbmVsKXR5cGVvZiBvPT1cIm51bWJlclwiJiZyIGluc3RhbmNlb2YgR3JhcGhPYmplY3Q/aT9uLmluc2VydEF0KG8scik6bi5uZShvKTp0eXBlb2Ygbz09XCJudW1iZXJcIiYmciBpbnN0YW5jZW9mIFJvd0NvbHVtbkRlZmluaXRpb24mJihyLmlzUm93P24uaUwobyxpP3I6dm9pZCAwKTpuLmVMKG8saT9yOnZvaWQgMCkpO2Vsc2UgaWYobiBpbnN0YW5jZW9mIExheWVyKXtjb25zdCBsPXQubmV3UGFyYW09PT0hMDt0eXBlb2Ygbz09XCJudW1iZXJcIiYmciBpbnN0YW5jZW9mIFBhcnQmJihpP24uRnQuaW5kZXhPZihyKTwwJiZuLmlhKG8scixsKToobHx8KHIuaXNTZWxlY3RlZD0hMSxyLmlzSGlnaGxpZ2h0ZWQ9ITEsci5pbnZhbGlkYXRlQWRvcm5tZW50cygpKSxuLm5lKGw/bzotMSxyLGwpKSl9ZWxzZSBuIGluc3RhbmNlb2YgRGlhZ3JhbT90eXBlb2Ygbz09XCJudW1iZXJcIiYmciBpbnN0YW5jZW9mIExheWVyJiYoaT90aGlzLmpyKHIsbyk6dGhpcy50TChvKSk6VS5uKFwidW5rbm93biBDaGFuZ2VUeXBlLlJlbW92ZSBvYmplY3Q6IFwiK3QudG9TdHJpbmcoKSk7dGhpcy5pc01vZGlmaWVkPSEwfWVsc2Ugcz09PTF8fFUubihcInVua25vd24gQ2hhbmdlZEV2ZW50OiBcIit0LnRvU3RyaW5nKCkpfWZpbmFsbHl7dGhpcy5tZT1lfX1zdGFydFRyYW5zYWN0aW9uKHQpe3JldHVybiB0aGlzLnVuZG9NYW5hZ2VyLnN0YXJ0VHJhbnNhY3Rpb24odCl9Y29tbWl0VHJhbnNhY3Rpb24odCl7cmV0dXJuIHRoaXMudW5kb01hbmFnZXIuY29tbWl0VHJhbnNhY3Rpb24odCl9cm9sbGJhY2tUcmFuc2FjdGlvbigpe3JldHVybiB0aGlzLnVuZG9NYW5hZ2VyLnJvbGxiYWNrVHJhbnNhY3Rpb24oKX1jb21taXQodCxpKXtsZXQgZT1pO2U9PT12b2lkIDAmJihlPVwiXCIpO2NvbnN0IHM9dGhpcy5za2lwc1VuZG9NYW5hZ2VyO2U9PT1udWxsJiYodGhpcy5za2lwc1VuZG9NYW5hZ2VyPSEwLGU9XCJcIiksdGhpcy51bmRvTWFuYWdlci5zdGFydFRyYW5zYWN0aW9uKGUpO2xldCBuPSExO3RyeXt0KHRoaXMpLG49ITB9ZmluYWxseXtuP3RoaXMudW5kb01hbmFnZXIuY29tbWl0VHJhbnNhY3Rpb24oZSk6dGhpcy51bmRvTWFuYWdlci5yb2xsYmFja1RyYW5zYWN0aW9uKCksdGhpcy5za2lwc1VuZG9NYW5hZ2VyPXN9fXVwZGF0ZUFsbFRhcmdldEJpbmRpbmdzKHQpe3RoaXMucGFydE1hbmFnZXIudXBkYXRlQWxsVGFyZ2V0QmluZGluZ3ModCl9dXBkYXRlQWxsVGhlbWVCaW5kaW5ncygpe2lmKHRoaXMucGFydE1hbmFnZXIudXBkYXRlQWxsVGhlbWVCaW5kaW5ncygpLHRoaXMuZXMhPT1udWxsKXtjb25zdCB0PXRoaXMuZXMucGFydDt0IT09bnVsbCYmdC5CbygpfX1zZXREaXZCYWNrZ3JvdW5kKHQpe3RoaXMuZGl2JiYodGhpcy5kaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yPXQpfXVwZGF0ZUFsbFJlbGF0aW9uc2hpcHNGcm9tRGF0YSgpe3RoaXMucGFydE1hbmFnZXIudXBkYXRlQWxsUmVsYXRpb25zaGlwc0Zyb21EYXRhKCl9cjAoKXtjb25zdCB0PXRoaXMuRixpPXRoaXMub3QsZT10aGlzLmd0O3QuVmkoKSxpIT09MSYmdC5vdChpKSwoZS54IT09MHx8ZS55IT09MCkmJnQuQnMoLWUueCwtZS55KX1zTCh0LGkpe2NvbnN0IGU9dGhpcy5hbmltYXRpb25NYW5hZ2VyO2lmKHRoaXMuWnR8fHRoaXMuU3Mpe3RoaXMub3Q9aSx0aGlzLm5oKCksdGhpcy5MKCksdGhpcy5tYSgpLGUuU0EodCx0aGlzLm90KSx0aGlzLnIwKCk7cmV0dXJufWlmKHRoaXMud3Q9PT1udWxsKXt0aGlzLm90PWksdGhpcy5yMCgpO3JldHVybn10aGlzLlp0PSEwO2NvbnN0IG49dGhpcy52aWV3cG9ydEJvdW5kcy5jb3B5KCksbz10aGlzLlB0LHI9dGhpcy5OdDtsZXQgbD10aGlzLnpvb21Qb2ludC54LGg9dGhpcy56b29tUG9pbnQueTtjb25zdCBmPXRoaXMuY29udGVudEFsaWdubWVudDtpc05hTihsKSYmKGYuaXNTaWRlKCk/Zi5pbmNsdWRlc1NpZGUoU3BvdC5MZWZ0U2lkZSk/bD0wOmYuaW5jbHVkZXNTaWRlKFNwb3QuUmlnaHRTaWRlKSYmKGw9by0xKTpmLmlzU3BvdCgpP2w9Zi54KihvLTEpOmw9by8yKSxpc05hTihoKSYmKGYuaXNTaWRlKCk/Zi5pbmNsdWRlc1NpZGUoU3BvdC5Ub3BTaWRlKT9oPTA6Zi5pbmNsdWRlc1NpZGUoU3BvdC5Cb3R0b21TaWRlKSYmKGg9ci0xKTpmLmlzU3BvdCgpP2g9Zi55KihyLTEpOmg9ci8yKSx0aGlzLnNjYWxlQ29tcHV0YXRpb24hPT1udWxsJiYhdGhpcy5hbmltYXRpb25NYW5hZ2VyLmRlZmF1bHRBbmltYXRpb24uaXNBbmltYXRpbmcmJihpPXRoaXMuc2NhbGVDb21wdXRhdGlvbih0aGlzLGkpKSxpPHRoaXMubWluU2NhbGUmJihpPXRoaXMubWluU2NhbGUpLGk+dGhpcy5tYXhTY2FsZSYmKGk9dGhpcy5tYXhTY2FsZSk7Y29uc3QgYT1Qb2ludC5LKHRoaXMuZ3QueCtsL3QtbC9pLHRoaXMuZ3QueStoL3QtaC9pKTt0aGlzLnBvc2l0aW9uPWEsUG9pbnQubyhhKSx0aGlzLm90PWksdGhpcy5yMCgpLHRoaXMubmgoKSx0aGlzLlp0PSExLHRoaXMub25WaWV3cG9ydEJvdW5kc0NoYW5nZWQobix0aGlzLnZpZXdwb3J0Qm91bmRzLHQsITEpLHRoaXMuR3MoITEpLGUuU0EodCx0aGlzLm90KSx0aGlzLkwoKX1GUigpe2NvbnN0IHQ9dGhpcy5XdC5oO2ZvcihsZXQgaT0wO2k8dC5sZW5ndGg7aSsrKXRbaV0uVEEoKX1vblZpZXdwb3J0Qm91bmRzQ2hhbmdlZCh0LGksZSxzKXtpZih0LmVxdWFscyhpKSlyZXR1cm47cz09PXZvaWQgMCYmKHM9ITEpLHN8fHRoaXMubWEoKSx0aGlzLm9oKCk7Y29uc3Qgbj10aGlzLmxheW91dDtuIT09bnVsbCYmbi5pc1ZpZXdwb3J0U2l6ZWQmJnRoaXMuYXV0b1NjYWxlPT09MSYmKHQud2lkdGghPT1pLndpZHRofHx0LmhlaWdodCE9PWkuaGVpZ2h0KSYmbi5pbnZhbGlkYXRlTGF5b3V0KCk7Y29uc3Qgbz10aGlzLmN1cnJlbnRUb29sO3RoaXMucWY9PT0hMCYmbyBpbnN0YW5jZW9mIFRvb2xNYW5hZ2VyJiYhdGhpcy5hbmltYXRpb25NYW5hZ2VyLmlzVGlja2luZyYmKHRoaXMubGFzdElucHV0LmRvY3VtZW50UG9pbnQ9dGhpcy50cmFuc2Zvcm1WaWV3VG9Eb2ModGhpcy5sYXN0SW5wdXQudmlld1BvaW50KSxvLnN0YW5kYXJkTW91c2VBY3Rpdml0eSh0aGlzKSksdGhpcy5adHx8dGhpcy5pbnZhbGlkYXRlVmlld3BvcnQodCxpKSx0aGlzLmxoKCksdGhpcy5HaS5zY2FsZT1lLHRoaXMuR2kucG9zaXRpb24ueD10LngsdGhpcy5HaS5wb3NpdGlvbi55PXQueSx0aGlzLkdpLmJvdW5kcy5jKHQpLHRoaXMuR2kuY2FudmFzU2l6ZS53aWR0aD1NYXRoLnJvdW5kKHQud2lkdGgqZSksdGhpcy5HaS5jYW52YXNTaXplLmhlaWdodD1NYXRoLnJvdW5kKHQuaGVpZ2h0KmUpLHRoaXMuR2kubmV3Q2FudmFzU2l6ZS53aWR0aD10aGlzLlB0LHRoaXMuR2kubmV3Q2FudmFzU2l6ZS5oZWlnaHQ9dGhpcy5OdCx0aGlzLkdpLmlzU2Nyb2xsPXMsdGhpcy5PKFwiVmlld3BvcnRCb3VuZHNDaGFuZ2VkXCIsdGhpcy5HaSx0KSx0aGlzLmlzVmlydHVhbGl6ZWQmJnRoaXMubGlua3MuZWFjaChyPT57ci5pc0F2b2lkaW5nJiZyLmFjdHVhbEJvdW5kcy5pbnRlcnNlY3RzUmVjdChpKSYmci5pbnZhbGlkYXRlUm91dGUoKX0pfWxoKHQpe2NvbnN0IGk9dGhpcy5lcztpZihpPT09bnVsbHx8IWkudmlzaWJsZXx8aS5wYXJ0PT09bnVsbHx8aS5sYXllcj09PW51bGwpcmV0dXJuO2NvbnN0IGU9dCE9PXZvaWQgMD90OnRoaXMubTE7aWYoIWUuaXNSZWFsKCkpcmV0dXJuO2NvbnN0IHM9ZS53aWR0aCxuPWUuaGVpZ2h0O2lmKGkuc2NhbGU9MSxpLmFuZ2xlPTAsaS5sYXllci5pc1ZpZXdwb3J0QWxpZ25lZClpLndpZHRoPXMqdGhpcy5zY2FsZSxpLmhlaWdodD1uKnRoaXMuc2NhbGUsaS5wYXJ0LmFsaWdubWVudD1TcG90LlRvcExlZnQ7ZWxzZXtpLmtpPT09bnVsbCYmKGkua2k9bmV3IEdyaWRQYW5lbFNldHRpbmdzKTtjb25zdCBvPWkua2kuJGY7aWYoIW8uaXNSZWFsKCkpcmV0dXJuO2kud2lkdGg9cytvLndpZHRoKjIsaS5oZWlnaHQ9bitvLmhlaWdodCoyO2NvbnN0IHI9UG9pbnQuYSgpO0dlby5WZyhlLngsZS55LDAsMCxvLndpZHRoLG8uaGVpZ2h0LHIpLHIub2Zmc2V0KC1vLndpZHRoLC1vLmhlaWdodCksaS5wYXJ0LmxvY2F0aW9uPXIsUG9pbnQubyhyKX19Y2xlYXJTZWxlY3Rpb24odCl7dD09PXZvaWQgMCYmKHQ9ITEpO2NvbnN0IGk9dGhpcy5zZWxlY3Rpb247aWYoaS5jb3VudD09PTApcmV0dXJuO3R8fHRoaXMuTyhcIkNoYW5naW5nU2VsZWN0aW9uXCIsaSk7Y29uc3QgZT1pLnRvQXJyYXkoKSxzPWUubGVuZ3RoO2ZvcihsZXQgbj0wO248cztuKyspe2NvbnN0IG89ZVtuXTtvLmlzU2VsZWN0ZWQ9ITF9aS5BdCgpLGkuY2xlYXIoKSxpLnAoKSx0fHx0aGlzLk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsaSl9c2VsZWN0KHQpe3QhPT1udWxsJiYoVS5lKHQsUGFydCxEaWFncmFtLFwic2VsZWN0OnBhcnRcIiksdC5kaWFncmFtPT09dGhpcyYmKCF0LmlzU2VsZWN0ZWR8fHRoaXMuc2VsZWN0aW9uLmNvdW50PjEpJiYodGhpcy5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0aGlzLnNlbGVjdGlvbiksdGhpcy5jbGVhclNlbGVjdGlvbighMCksdC5pc1NlbGVjdGVkPSEwLHRoaXMuTyhcIkNoYW5nZWRTZWxlY3Rpb25cIix0aGlzLnNlbGVjdGlvbikpKX1zZWxlY3RDb2xsZWN0aW9uKHQpe2lmKHRoaXMuTyhcIkNoYW5naW5nU2VsZWN0aW9uXCIsdGhpcy5zZWxlY3Rpb24pLHRoaXMuY2xlYXJTZWxlY3Rpb24oITApLEFycmF5LmlzQXJyYXkodCkpe2NvbnN0IGk9dC5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl7Y29uc3Qgcz10W2VdO3MgaW5zdGFuY2VvZiBQYXJ0fHxVLm4oXCJEaWFncmFtLnNlbGVjdENvbGxlY3Rpb24gZ2l2ZW4gc29tZXRoaW5nIHRoYXQgaXMgbm90IGEgUGFydDogXCIrcykscy5pc1NlbGVjdGVkPSEwfX1lbHNle2NvbnN0IGk9dC5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO2UgaW5zdGFuY2VvZiBQYXJ0fHxVLm4oXCJEaWFncmFtLnNlbGVjdENvbGxlY3Rpb24gZ2l2ZW4gc29tZXRoaW5nIHRoYXQgaXMgbm90IGEgUGFydDogXCIrZSksZS5pc1NlbGVjdGVkPSEwfX10aGlzLk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsdGhpcy5zZWxlY3Rpb24pfWNsZWFySGlnaGxpZ2h0ZWRzKCl7Y29uc3QgdD10aGlzLmhpZ2hsaWdodGVkcztpZih0LmNvdW50PjApe2NvbnN0IGk9dC50b0FycmF5KCksZT1pLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPWlbc107bi5pc0hpZ2hsaWdodGVkPSExfXQuQXQoKSx0LmNsZWFyKCksdC5wKCl9fWhpZ2hsaWdodCh0KXt0IT09bnVsbCYmdC5kaWFncmFtPT09dGhpcyYmKFUuZSh0LFBhcnQsRGlhZ3JhbSxcImhpZ2hsaWdodDpwYXJ0XCIpLCghdC5pc0hpZ2hsaWdodGVkfHx0aGlzLmhpZ2hsaWdodGVkcy5jb3VudD4xKSYmKHRoaXMuY2xlYXJIaWdobGlnaHRlZHMoKSx0LmlzSGlnaGxpZ2h0ZWQ9ITApKX1oaWdobGlnaHRDb2xsZWN0aW9uKHQpe2NvbnN0IGk9bmV3IEdTZXQoKS5hZGRBbGwodCkscz10aGlzLmhpZ2hsaWdodGVkcy5jb3B5KCkucmVtb3ZlQWxsKGkpLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBvPXMudmFsdWU7by5pc0hpZ2hsaWdodGVkPSExfWNvbnN0IG49aS5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28gaW5zdGFuY2VvZiBQYXJ0fHxVLm4oXCJEaWFncmFtLmhpZ2hsaWdodENvbGxlY3Rpb24gZ2l2ZW4gc29tZXRoaW5nIHRoYXQgaXMgbm90IGEgUGFydDogXCIrbyksby5pc0hpZ2hsaWdodGVkPSEwfX1zY3JvbGwodCxpLGUpe2U9PT12b2lkIDAmJihlPTEpO2NvbnN0IHM9aT09PVwidXBcInx8aT09PVwiZG93blwiO2xldCBuPTA7Y29uc3Qgbz1Qb2ludC5hKCk7aWYodD09PVwicGl4ZWxcIiluPWU7ZWxzZSBpZih0PT09XCJsaW5lXCIpbj1lKihzP3RoaXMuc2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlOnRoaXMuc2Nyb2xsSG9yaXpvbnRhbExpbmVDaGFuZ2UpO2Vsc2UgaWYodD09PVwicGFnZVwiKXtsZXQgbD1zP3RoaXMudmlld3BvcnRCb3VuZHMuaGVpZ2h0OnRoaXMudmlld3BvcnRCb3VuZHMud2lkdGg7aWYobCo9dGhpcy5zY2FsZSxsIT09MCl7Y29uc3QgaD1NYXRoLm1heChsLShzP3RoaXMuc2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlOnRoaXMuc2Nyb2xsSG9yaXpvbnRhbExpbmVDaGFuZ2UpLDApO249ZSpofX1lbHNlIGlmKHQ9PT1cImRvY3VtZW50XCIpe2NvbnN0IGw9dGhpcy5kb2N1bWVudEJvdW5kcyxoPXRoaXMudmlld3BvcnRCb3VuZHM7aT09PVwidXBcIj90aGlzLnBvc2l0aW9uPW8ucyhoLngsbC55KTppPT09XCJsZWZ0XCI/dGhpcy5wb3NpdGlvbj1vLnMobC54LGgueSk6aT09PVwiZG93blwiP3RoaXMucG9zaXRpb249by5zKGgueCxsLmJvdHRvbS1oLmhlaWdodCk6aT09PVwicmlnaHRcIiYmKHRoaXMucG9zaXRpb249by5zKGwucmlnaHQtaC53aWR0aCxoLnkpKSxQb2ludC5vKG8pO3JldHVybn1lbHNlIFUubihcInNjcm9sbGluZyB1bml0IG11c3QgYmUgJ3BpeGVsJywgJ2xpbmUnLCAncGFnZScsIG9yICdkb2N1bWVudCcsIG5vdDogXCIrdCk7bi89dGhpcy5zY2FsZTtjb25zdCByPXRoaXMucG9zaXRpb247aT09PVwidXBcIj90aGlzLnBvc2l0aW9uPW8ucyhyLngsci55LW4pOmk9PT1cImRvd25cIj90aGlzLnBvc2l0aW9uPW8ucyhyLngsci55K24pOmk9PT1cImxlZnRcIj90aGlzLnBvc2l0aW9uPW8ucyhyLngtbixyLnkpOmk9PT1cInJpZ2h0XCI/dGhpcy5wb3NpdGlvbj1vLnMoci54K24sci55KTpVLm4oXCJzY3JvbGxpbmcgZGlyZWN0aW9uIG11c3QgYmUgJ3VwJywgJ2Rvd24nLCAnbGVmdCcsIG9yICdyaWdodCcsIG5vdDogXCIraSksUG9pbnQubyhvKX1zY3JvbGxUb1JlY3QodCl7Y29uc3QgaT10aGlzLnZpZXdwb3J0Qm91bmRzO2lmKGkuY29udGFpbnNSZWN0KHQpKXJldHVybjtjb25zdCBlPXQuY2VudGVyO2UueC09aS53aWR0aC8yLGUueS09aS5oZWlnaHQvMix0aGlzLnBvc2l0aW9uPWV9Y2VudGVyUmVjdCh0KXtjb25zdCBpPXRoaXMudmlld3BvcnRCb3VuZHMsZT10LmNlbnRlcjtlLngtPWkud2lkdGgvMixlLnktPWkuaGVpZ2h0LzIsdGhpcy5wb3NpdGlvbj1lfXRyYW5zZm9ybURvY1RvVmlldyh0KXtyZXR1cm4gdC5jb3B5KCkuRih0aGlzLkYpfXRyYW5zZm9ybVZpZXdUb0RvYyh0KXtyZXR1cm4gdC5jb3B5KCkuWGUodGhpcy5GKX1zUih0KXtyZXR1cm4gdC5YZSh0aGlzLkYpfXN0YXRpYyBOb25lPTE7c3RhdGljIFVuaWZvcm09MjtzdGF0aWMgVW5pZm9ybVRvRmlsbD0zO3N0YXRpYyBDeWNsZUFsbD0xO3N0YXRpYyBDeWNsZU5vdERpcmVjdGVkPTI7c3RhdGljIEN5Y2xlTm90RGlyZWN0ZWRGYXN0PTM7c3RhdGljIEN5Y2xlTm90VW5kaXJlY3RlZD00O3N0YXRpYyBDeWNsZURlc3RpbmF0aW9uVHJlZT01O3N0YXRpYyBDeWNsZVNvdXJjZVRyZWU9NjtzdGF0aWMgRG9jdW1lbnRTY3JvbGw9MTtzdGF0aWMgSW5maW5pdGVTY3JvbGw9MjtzdGF0aWMgVHJlZVBhcmVudENvbGxhcHNlZD0xO3N0YXRpYyBBbGxQYXJlbnRzQ29sbGFwc2VkPTI7c3RhdGljIEFueVBhcmVudHNDb2xsYXBzZWQ9MztnZXQgb3BhY2l0eSgpe3JldHVybiB0aGlzLmlpfXNldCBvcGFjaXR5KHQpe2NvbnN0IGk9dGhpcy5paTtpIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsRGlhZ3JhbSxcIm9wYWNpdHlcIiksKHQ8MHx8dD4xKSYmVS5VKHQsXCIwIDw9IHZhbHVlIDw9IDFcIixEaWFncmFtLFwib3BhY2l0eVwiKSx0aGlzLmlpPXQsdGhpcy50KFwib3BhY2l0eVwiLGksdCksdGhpcy5MKCkpfWdldCB2YWxpZEN5Y2xlKCl7cmV0dXJuIHRoaXMuV3h9c2V0IHZhbGlkQ3ljbGUodCl7Y29uc3QgaT10aGlzLld4O2khPT10JiYoVS5qKHQsQ3ljbGVNb2RlLFwiQ3ljbGVNb2RlXCIpLHRoaXMuV3g9dCx0aGlzLnQoXCJ2YWxpZEN5Y2xlXCIsaSx0KSl9Z2V0IGxheWVycygpe3JldHVybiB0aGlzLld0Lml0ZXJhdG9yfWdldCBpc01vZGVsUmVhZE9ubHkoKXtjb25zdCB0PXRoaXMuQ2k7cmV0dXJuIHQ9PT1udWxsPyExOnQuaXNSZWFkT25seX1zZXQgaXNNb2RlbFJlYWRPbmx5KHQpe2NvbnN0IGk9dGhpcy5DaTtpIT09bnVsbCYmKGkuaXNSZWFkT25seT10KX1nZXQgaXNSZWFkT25seSgpe3JldHVybiB0aGlzLk9vfXNldCBpc1JlYWRPbmx5KHQpe2NvbnN0IGk9dGhpcy5PbztpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJpc1JlYWRPbmx5XCIpLHRoaXMuT289dCx0aGlzLnQoXCJpc1JlYWRPbmx5XCIsaSx0KSl9Z2V0IGlzRW5hYmxlZCgpe3JldHVybiB0aGlzLlhpfXNldCBpc0VuYWJsZWQodCl7Y29uc3QgaT10aGlzLlhpO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImlzRW5hYmxlZFwiKSx0aGlzLlhpPXQsdGhpcy50KFwiaXNFbmFibGVkXCIsaSx0KSl9Z2V0IGFsbG93Q2xpcGJvYXJkKCl7cmV0dXJuIHRoaXMuX3h9c2V0IGFsbG93Q2xpcGJvYXJkKHQpe2NvbnN0IGk9dGhpcy5feDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd0NsaXBib2FyZFwiKSx0aGlzLl94PXQsdGhpcy50KFwiYWxsb3dDbGlwYm9hcmRcIixpLHQpKX1nZXQgYWxsb3dDb3B5KCl7cmV0dXJuIHRoaXMuVmx9c2V0IGFsbG93Q29weSh0KXtjb25zdCBpPXRoaXMuVmw7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixEaWFncmFtLFwiYWxsb3dDb3B5XCIpLHRoaXMuVmw9dCx0aGlzLnQoXCJhbGxvd0NvcHlcIixpLHQpKX1nZXQgYWxsb3dEZWxldGUoKXtyZXR1cm4gdGhpcy56bH1zZXQgYWxsb3dEZWxldGUodCl7Y29uc3QgaT10aGlzLnpsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImFsbG93RGVsZXRlXCIpLHRoaXMuemw9dCx0aGlzLnQoXCJhbGxvd0RlbGV0ZVwiLGksdCkpfWdldCBhbGxvd0RyYWdPdXQoKXtyZXR1cm4gdGhpcy50MX1zZXQgYWxsb3dEcmFnT3V0KHQpe2NvbnN0IGk9dGhpcy50MTtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd0RyYWdPdXRcIiksdGhpcy50MT10LHRoaXMudChcImFsbG93RHJhZ091dFwiLGksdCkpfWdldCBhbGxvd0Ryb3AoKXtyZXR1cm4gdGhpcy5pMX1zZXQgYWxsb3dEcm9wKHQpe2NvbnN0IGk9dGhpcy5pMTtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd0Ryb3BcIiksdGhpcy5pMT10LHRoaXMudChcImFsbG93RHJvcFwiLGksdCkpfWdldCBhbGxvd1RleHRFZGl0KCl7cmV0dXJuIHRoaXMuWGx9c2V0IGFsbG93VGV4dEVkaXQodCl7Y29uc3QgaT10aGlzLlhsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImFsbG93VGV4dEVkaXRcIiksdGhpcy5YbD10LHRoaXMudChcImFsbG93VGV4dEVkaXRcIixpLHQpKX1nZXQgYWxsb3dHcm91cCgpe3JldHVybiB0aGlzLllsfXNldCBhbGxvd0dyb3VwKHQpe2NvbnN0IGk9dGhpcy5ZbDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd0dyb3VwXCIpLHRoaXMuWWw9dCx0aGlzLnQoXCJhbGxvd0dyb3VwXCIsaSx0KSl9Z2V0IGFsbG93VW5ncm91cCgpe3JldHVybiB0aGlzLktsfXNldCBhbGxvd1VuZ3JvdXAodCl7Y29uc3QgaT10aGlzLktsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImFsbG93VW5ncm91cFwiKSx0aGlzLktsPXQsdGhpcy50KFwiYWxsb3dVbmdyb3VwXCIsaSx0KSl9Z2V0IGFsbG93SW5zZXJ0KCl7cmV0dXJuIHRoaXMuZTF9c2V0IGFsbG93SW5zZXJ0KHQpe2NvbnN0IGk9dGhpcy5lMTtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd0luc2VydFwiKSx0aGlzLmUxPXQsdGhpcy50KFwiYWxsb3dJbnNlcnRcIixpLHQpKX1nZXQgYWxsb3dMaW5rKCl7cmV0dXJuIHRoaXMuVWx9c2V0IGFsbG93TGluayh0KXtjb25zdCBpPXRoaXMuVWw7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixEaWFncmFtLFwiYWxsb3dMaW5rXCIpLHRoaXMuVWw9dCx0aGlzLnQoXCJhbGxvd0xpbmtcIixpLHQpKX1nZXQgYWxsb3dSZWxpbmsoKXtyZXR1cm4gdGhpcy5HbH1zZXQgYWxsb3dSZWxpbmsodCl7Y29uc3QgaT10aGlzLkdsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImFsbG93UmVsaW5rXCIpLHRoaXMuR2w9dCx0aGlzLnQoXCJhbGxvd1JlbGlua1wiLGksdCkpfWdldCBhbGxvd01vdmUoKXtyZXR1cm4gdGhpcy5IbH1zZXQgYWxsb3dNb3ZlKHQpe2NvbnN0IGk9dGhpcy5IbDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd01vdmVcIiksdGhpcy5IbD10LHRoaXMudChcImFsbG93TW92ZVwiLGksdCkpfWdldCBhbGxvd1Jlc2hhcGUoKXtyZXR1cm4gdGhpcy5xbH1zZXQgYWxsb3dSZXNoYXBlKHQpe2NvbnN0IGk9dGhpcy5xbDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd1Jlc2hhcGVcIiksdGhpcy5xbD10LHRoaXMudChcImFsbG93UmVzaGFwZVwiLGksdCkpfWdldCBhbGxvd1Jlc2l6ZSgpe3JldHVybiB0aGlzLldsfXNldCBhbGxvd1Jlc2l6ZSh0KXtjb25zdCBpPXRoaXMuV2w7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixEaWFncmFtLFwiYWxsb3dSZXNpemVcIiksdGhpcy5XbD10LHRoaXMudChcImFsbG93UmVzaXplXCIsaSx0KSl9Z2V0IGFsbG93Um90YXRlKCl7cmV0dXJuIHRoaXMuamx9c2V0IGFsbG93Um90YXRlKHQpe2NvbnN0IGk9dGhpcy5qbDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd1JvdGF0ZVwiKSx0aGlzLmpsPXQsdGhpcy50KFwiYWxsb3dSb3RhdGVcIixpLHQpKX1nZXQgYWxsb3dTZWxlY3QoKXtyZXR1cm4gdGhpcy52bH1zZXQgYWxsb3dTZWxlY3QodCl7Y29uc3QgaT10aGlzLnZsO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImFsbG93U2VsZWN0XCIpLHRoaXMudmw9dCx0aGlzLnQoXCJhbGxvd1NlbGVjdFwiLGksdCkpfWdldCBhbGxvd1VuZG8oKXtyZXR1cm4gdGhpcy5zMX1zZXQgYWxsb3dVbmRvKHQpe2NvbnN0IGk9dGhpcy5zMTtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd1VuZG9cIiksdGhpcy5zMT10LHRoaXMudChcImFsbG93VW5kb1wiLGksdCkpfWdldCBhbGxvd1pvb20oKXtyZXR1cm4gdGhpcy5vMX1zZXQgYWxsb3dab29tKHQpe2NvbnN0IGk9dGhpcy5vMTtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJhbGxvd1pvb21cIiksdGhpcy5vMT10LHRoaXMudChcImFsbG93Wm9vbVwiLGksdCkpfWdldCBoYXNWZXJ0aWNhbFNjcm9sbGJhcigpe3JldHVybiB0aGlzLll1fXNldCBoYXNWZXJ0aWNhbFNjcm9sbGJhcih0KXtjb25zdCBpPXRoaXMuWXU7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixEaWFncmFtLFwiaGFzVmVydGljYWxTY3JvbGxiYXJcIiksdGhpcy5ZdT10LHRoaXMubWEoKSx0aGlzLkwoKSx0aGlzLnQoXCJoYXNWZXJ0aWNhbFNjcm9sbGJhclwiLGksdCksdGhpcy5HcyghMSkpfWdldCBoYXNIb3Jpem9udGFsU2Nyb2xsYmFyKCl7cmV0dXJuIHRoaXMuWHV9c2V0IGhhc0hvcml6b250YWxTY3JvbGxiYXIodCl7Y29uc3QgaT10aGlzLlh1O2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImhhc0hvcml6b250YWxTY3JvbGxiYXJcIiksdGhpcy5YdT10LHRoaXMubWEoKSx0aGlzLkwoKSx0aGlzLnQoXCJoYXNIb3Jpem9udGFsU2Nyb2xsYmFyXCIsaSx0KSx0aGlzLkdzKCExKSl9Z2V0IGFsbG93SG9yaXpvbnRhbFNjcm9sbCgpe3JldHVybiB0aGlzLmwxfXNldCBhbGxvd0hvcml6b250YWxTY3JvbGwodCl7Y29uc3QgaT10aGlzLmwxO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsRGlhZ3JhbSxcImFsbG93SG9yaXpvbnRhbFNjcm9sbFwiKSx0aGlzLmwxPXQsdGhpcy50KFwiYWxsb3dIb3Jpem9udGFsU2Nyb2xsXCIsaSx0KSx0aGlzLkdzKCExKSl9Z2V0IGFsbG93VmVydGljYWxTY3JvbGwoKXtyZXR1cm4gdGhpcy5oMX1zZXQgYWxsb3dWZXJ0aWNhbFNjcm9sbCh0KXtjb25zdCBpPXRoaXMuaDE7aSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixEaWFncmFtLFwiYWxsb3dWZXJ0aWNhbFNjcm9sbFwiKSx0aGlzLmgxPXQsdGhpcy50KFwiYWxsb3dWZXJ0aWNhbFNjcm9sbFwiLGksdCksdGhpcy5HcyghMSkpfWdldCBzY3JvbGxIb3Jpem9udGFsTGluZUNoYW5nZSgpe3JldHVybiB0aGlzLmExfXNldCBzY3JvbGxIb3Jpem9udGFsTGluZUNoYW5nZSh0KXtjb25zdCBpPXRoaXMuYTE7aSE9PXQmJihVLmkodCxcIm51bWJlclwiLERpYWdyYW0sXCJzY3JvbGxIb3Jpem9udGFsTGluZUNoYW5nZVwiKSx0PDAmJlUuVSh0LFwiPj0gMFwiLERpYWdyYW0sXCJzY3JvbGxIb3Jpem9udGFsTGluZUNoYW5nZVwiKSx0aGlzLmExPXQsdGhpcy50KFwic2Nyb2xsSG9yaXpvbnRhbExpbmVDaGFuZ2VcIixpLHQpKX1nZXQgc2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlKCl7cmV0dXJuIHRoaXMuZjF9c2V0IHNjcm9sbFZlcnRpY2FsTGluZUNoYW5nZSh0KXtjb25zdCBpPXRoaXMuZjE7aSE9PXQmJihVLmkodCxcIm51bWJlclwiLERpYWdyYW0sXCJzY3JvbGxWZXJ0aWNhbExpbmVDaGFuZ2VcIiksdDwwJiZVLlUodCxcIj49IDBcIixEaWFncmFtLFwic2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlXCIpLHRoaXMuZjE9dCx0aGlzLnQoXCJzY3JvbGxWZXJ0aWNhbExpbmVDaGFuZ2VcIixpLHQpKX1nZXQgbGFzdElucHV0KCl7cmV0dXJuIHRoaXMub2F9c2V0IGxhc3RJbnB1dCh0KXtEZWJ1ZyYmVS5lKHQsSW5wdXRFdmVudCxEaWFncmFtLFwibGFzdElucHV0XCIpLHRoaXMub2E9dH1nZXQgcHJldmlvdXNJbnB1dCgpe3JldHVybiB0aGlzLkhyfXNldCBwcmV2aW91c0lucHV0KHQpe0RlYnVnJiZVLmUodCxJbnB1dEV2ZW50LERpYWdyYW0sXCJwcmV2aW91c0lucHV0XCIpLHRoaXMuSHI9dH1nZXQgZmlyc3RJbnB1dCgpe3JldHVybiB0aGlzLkptfXNldCBmaXJzdElucHV0KHQpe0RlYnVnJiZVLmUodCxJbnB1dEV2ZW50LERpYWdyYW0sXCJmaXJzdElucHV0XCIpLHRoaXMuSm09dH1nZXQgY3VycmVudEN1cnNvcigpe3JldHVybiB0aGlzLmp4fXNldCBjdXJyZW50Q3Vyc29yKHQpe2lmKHQ9PT1cIlwiJiYodD10aGlzLkdtKSx0aGlzLmp4IT09dCl7VS5pKHQsXCJzdHJpbmdcIixEaWFncmFtLFwiY3VycmVudEN1cnNvclwiKTtjb25zdCBlPXRoaXMud3Qscz10aGlzLlR0O2lmKGU9PT1udWxsfHxzPT09bnVsbClyZXR1cm47dGhpcy5qeD10O2NvbnN0IG49ZS5zdHlsZS5jdXJzb3I7ZS5zdHlsZS5jdXJzb3I9dCxzLnN0eWxlLmN1cnNvcj10LGUuc3R5bGUuY3Vyc29yPT09biYmKGUuc3R5bGUuY3Vyc29yPVwiLXdlYmtpdC1cIit0LHMuc3R5bGUuY3Vyc29yPVwiLXdlYmtpdC1cIit0LGUuc3R5bGUuY3Vyc29yPT09biYmKGUuc3R5bGUuY3Vyc29yPVwiLW1vei1cIit0LHMuc3R5bGUuY3Vyc29yPVwiLW1vei1cIit0LGUuc3R5bGUuY3Vyc29yPT09biYmKGUuc3R5bGUuY3Vyc29yPXQscy5zdHlsZS5jdXJzb3I9dCkpKX19Z2V0IGRlZmF1bHRDdXJzb3IoKXtyZXR1cm4gdGhpcy5HbX1zZXQgZGVmYXVsdEN1cnNvcih0KXt0PT09XCJcIiYmKHQ9XCJhdXRvXCIpO2NvbnN0IGk9dGhpcy5HbTtpIT09dCYmKFUuaSh0LFwic3RyaW5nXCIsRGlhZ3JhbSxcImRlZmF1bHRDdXJzb3JcIiksdGhpcy5HbT10LHRoaXMudChcImRlZmF1bHRDdXJzb3JcIixpLHQpKX1nZXQgY2xpY2soKXtyZXR1cm4gdGhpcy5Scn1zZXQgY2xpY2sodCl7Y29uc3QgaT10aGlzLlJyO2khPT10JiYodCE9PW51bGwmJlUuUCh0LERpYWdyYW0sXCJjbGlja1wiKSx0aGlzLlJyPXQsdGhpcy50KFwiY2xpY2tcIixpLHQpKX1nZXQgZG91YmxlQ2xpY2soKXtyZXR1cm4gdGhpcy5Jcn1zZXQgZG91YmxlQ2xpY2sodCl7Y29uc3QgaT10aGlzLklyO2khPT10JiYodCE9PW51bGwmJlUuUCh0LERpYWdyYW0sXCJkb3VibGVDbGlja1wiKSx0aGlzLklyPXQsdGhpcy50KFwiZG91YmxlQ2xpY2tcIixpLHQpKX1nZXQgY29udGV4dENsaWNrKCl7cmV0dXJuIHRoaXMuT3J9c2V0IGNvbnRleHRDbGljayh0KXtjb25zdCBpPXRoaXMuT3I7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsRGlhZ3JhbSxcImNvbnRleHRDbGlja1wiKSx0aGlzLk9yPXQsdGhpcy50KFwiY29udGV4dENsaWNrXCIsaSx0KSl9Z2V0IG1vdXNlT3Zlcigpe3JldHVybiB0aGlzLkVyfXNldCBtb3VzZU92ZXIodCl7Y29uc3QgaT10aGlzLkVyO2khPT10JiYodCE9PW51bGwmJlUuUCh0LERpYWdyYW0sXCJtb3VzZU92ZXJcIiksdGhpcy5Fcj10LHRoaXMudChcIm1vdXNlT3ZlclwiLGksdCkpfWdldCBtb3VzZUhvdmVyKCl7cmV0dXJuIHRoaXMuQnJ9c2V0IG1vdXNlSG92ZXIodCl7Y29uc3QgaT10aGlzLkJyO2khPT10JiYodCE9PW51bGwmJlUuUCh0LERpYWdyYW0sXCJtb3VzZUhvdmVyXCIpLHRoaXMuQnI9dCx0aGlzLnQoXCJtb3VzZUhvdmVyXCIsaSx0KSl9Z2V0IG1vdXNlSG9sZCgpe3JldHVybiB0aGlzLlZyfXNldCBtb3VzZUhvbGQodCl7Y29uc3QgaT10aGlzLlZyO2khPT10JiYodCE9PW51bGwmJlUuUCh0LERpYWdyYW0sXCJtb3VzZUhvbGRcIiksdGhpcy5Wcj10LHRoaXMudChcIm1vdXNlSG9sZFwiLGksdCkpfWdldCBtb3VzZURyYWdPdmVyKCl7cmV0dXJuIHRoaXMudnh9c2V0IG1vdXNlRHJhZ092ZXIodCl7Y29uc3QgaT10aGlzLnZ4O2khPT10JiYodCE9PW51bGwmJlUuUCh0LERpYWdyYW0sXCJtb3VzZURyYWdPdmVyXCIpLHRoaXMudng9dCx0aGlzLnQoXCJtb3VzZURyYWdPdmVyXCIsaSx0KSl9Z2V0IG1vdXNlRHJvcCgpe3JldHVybiB0aGlzLnpyfXNldCBtb3VzZURyb3AodCl7Y29uc3QgaT10aGlzLnpyO2khPT10JiYoRGVidWcmJnQhPT1udWxsJiZVLlAodCxEaWFncmFtLFwibW91c2VEcm9wXCIpLHRoaXMuenI9dCx0aGlzLnQoXCJtb3VzZURyb3BcIixpLHQpKX1nZXQgaGFuZGxlc0RyYWdEcm9wRm9yVG9wTGV2ZWxQYXJ0cygpe3JldHVybiB0aGlzLkp4fXNldCBoYW5kbGVzRHJhZ0Ryb3BGb3JUb3BMZXZlbFBhcnRzKHQpe2NvbnN0IGk9dGhpcy5KeDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJoYW5kbGVzRHJhZ0Ryb3BGb3JUb3BMZXZlbFBhcnRzXCIpLHRoaXMuSng9dCx0aGlzLnQoXCJoYW5kbGVzRHJhZ0Ryb3BGb3JUb3BMZXZlbFBhcnRzXCIsaSx0KSl9Z2V0IG1vdXNlRW50ZXIoKXtyZXR1cm4gdGhpcy5Ycn1zZXQgbW91c2VFbnRlcih0KXtjb25zdCBpPXRoaXMuWHI7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsRGlhZ3JhbSxcIm1vdXNlRW50ZXJcIiksdGhpcy5Ycj10LHRoaXMudChcIm1vdXNlRW50ZXJcIixpLHQpKX1nZXQgbW91c2VMZWF2ZSgpe3JldHVybiB0aGlzLllyfXNldCBtb3VzZUxlYXZlKHQpe2NvbnN0IGk9dGhpcy5ZcjtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxEaWFncmFtLFwibW91c2VMZWF2ZVwiKSx0aGlzLllyPXQsdGhpcy50KFwibW91c2VMZWF2ZVwiLGksdCkpfWdldCB0b29sVGlwKCl7cmV0dXJuIHRoaXMuS3J9c2V0IHRvb2xUaXAodCl7Y29uc3QgaT10aGlzLktyO2khPT10JiYoRGVidWcmJnQhPT1udWxsJiYhKHQgaW5zdGFuY2VvZiBBZG9ybm1lbnR8fHQgaW5zdGFuY2VvZiBIVE1MSW5mbykmJlUubihcIkRpYWdyYW0udG9vbFRpcCBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksdGhpcy5Lcj10LHRoaXMudChcInRvb2xUaXBcIixpLHQpKX1nZXQgY29udGV4dE1lbnUoKXtyZXR1cm4gdGhpcy5Vcn1zZXQgY29udGV4dE1lbnUodCl7Y29uc3QgaT10aGlzLlVyO2khPT10JiYoRGVidWcmJiEodCBpbnN0YW5jZW9mIEFkb3JubWVudHx8dCBpbnN0YW5jZW9mIEhUTUxJbmZvKSYmVS5uKFwiRGlhZ3JhbS5jb250ZXh0TWVudSBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksdGhpcy5Vcj10LHRoaXMudChcImNvbnRleHRNZW51XCIsaSx0KSl9Z2V0IGNvbW1hbmRIYW5kbGVyKCl7cmV0dXJuIHRoaXMudTJ9c2V0IGNvbW1hbmRIYW5kbGVyKHQpe2NvbnN0IGk9dGhpcy51MjtpIT09dCYmKFUuZSh0LENvbW1hbmRIYW5kbGVyLERpYWdyYW0sXCJjb21tYW5kSGFuZGxlclwiKSxpJiZpLmRvU3RvcCgpLHRoaXMudTI9dCx0LkRvKHRoaXMpLHQuZG9TdGFydCgpKX1nZXQgdG9vbE1hbmFnZXIoKXtyZXR1cm4gdGhpcy5hMn1zZXQgdG9vbE1hbmFnZXIodCl7dGhpcy5hMiE9PXQmJihVLmUodCxUb29sTWFuYWdlcixEaWFncmFtLFwidG9vbE1hbmFnZXJcIiksdGhpcy5hMj10LHQuZGlhZ3JhbT10aGlzKX1nZXQgZGVmYXVsdFRvb2woKXtyZXR1cm4gdGhpcy5mMn1zZXQgZGVmYXVsdFRvb2wodCl7Y29uc3QgaT10aGlzLmYyO2khPT10JiYoVS5lKHQsVG9vbCxEaWFncmFtLFwiZGVmYXVsdFRvb2xcIiksdGhpcy5mMj10LHQuZGlhZ3JhbT10aGlzLHRoaXMuY3VycmVudFRvb2w9PT1pJiYodGhpcy5jdXJyZW50VG9vbD10KSl9Z2V0IGN1cnJlbnRUb29sKCl7cmV0dXJuIHRoaXMuYzJ9c2V0IGN1cnJlbnRUb29sKHQpe2NvbnN0IGk9dGhpcy5jMjtpJiYoaS5pc0FjdGl2ZSYmaS5kb0RlYWN0aXZhdGUoKSxpLmNhbmNlbFdhaXRBZnRlcigpLGkuZG9TdG9wKCkpLHQ9PT1udWxsJiYodD10aGlzLmRlZmF1bHRUb29sKSx0IT09bnVsbCYmKFUuZSh0LFRvb2wsRGlhZ3JhbSxcImN1cnJlbnRUb29sXCIpLHRoaXMuYzI9dCx0LmRpYWdyYW09dGhpcyx0LmRvU3RhcnQoKSl9Z2V0IHNlbGVjdGlvbigpe3JldHVybiB0aGlzLmsyfWdldCBtYXhTZWxlY3Rpb25Db3VudCgpe3JldHVybiB0aGlzLmcxfXNldCBtYXhTZWxlY3Rpb25Db3VudCh0KXtjb25zdCBpPXRoaXMuZzE7aWYoaSE9PXQpaWYoVS5pKHQsXCJudW1iZXJcIixEaWFncmFtLFwibWF4U2VsZWN0aW9uQ291bnRcIiksdD49MCYmIWlzTmFOKHQpKXtpZih0aGlzLmcxPXQsdGhpcy50KFwibWF4U2VsZWN0aW9uQ291bnRcIixpLHQpLCF0aGlzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpe2NvbnN0IGU9dGhpcy5zZWxlY3Rpb24uY291bnQtdDtpZihlPjApe3RoaXMuTyhcIkNoYW5naW5nU2VsZWN0aW9uXCIsdGhpcy5zZWxlY3Rpb24pO2NvbnN0IHM9dGhpcy5zZWxlY3Rpb24udG9BcnJheSgpO2ZvcihsZXQgbj0wO248ZTtuKyspc1tuXS5pc1NlbGVjdGVkPSExO3RoaXMuTyhcIkNoYW5nZWRTZWxlY3Rpb25cIix0aGlzLnNlbGVjdGlvbil9fX1lbHNlIFUuVSh0LFwiPj0gMFwiLERpYWdyYW0sXCJtYXhTZWxlY3Rpb25Db3VudFwiKX1nZXQgbm9kZVNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlKCl7cmV0dXJuIHRoaXMuam19c2V0IG5vZGVTZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZSh0KXtjb25zdCBpPXRoaXMuam07aSE9PXQmJihVLmUodCxBZG9ybm1lbnQsRGlhZ3JhbSxcIm5vZGVTZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZVwiKSx0aGlzLmptPXQuS3QoKSx0aGlzLnQoXCJub2RlU2VsZWN0aW9uQWRvcm5tZW50VGVtcGxhdGVcIixpLHQpKX1nZXQgZ3JvdXBTZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZSgpe3JldHVybiB0aGlzLncxfXNldCBncm91cFNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlKHQpe2NvbnN0IGk9dGhpcy53MTtpIT09dCYmKFUuZSh0LEFkb3JubWVudCxEaWFncmFtLFwiZ3JvdXBTZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZVwiKSx0aGlzLncxPXQuS3QoKSx0aGlzLnQoXCJncm91cFNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlXCIsaSx0KSl9Z2V0IGxpbmtTZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZSgpe3JldHVybiB0aGlzLmIxfXNldCBsaW5rU2VsZWN0aW9uQWRvcm5tZW50VGVtcGxhdGUodCl7Y29uc3QgaT10aGlzLmIxO2khPT10JiYoVS5lKHQsQWRvcm5tZW50LERpYWdyYW0sXCJsaW5rU2VsZWN0aW9uQWRvcm5tZW50VGVtcGxhdGVcIiksdGhpcy5iMT10Lkt0KCksdGhpcy50KFwibGlua1NlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlXCIsaSx0KSl9Z2V0IGhpZ2hsaWdodGVkcygpe3JldHVybiB0aGlzLlMyfWdldCBpc01vZGlmaWVkKCl7Y29uc3QgdD10aGlzLnVuZG9NYW5hZ2VyO3JldHVybiB0LmlzRW5hYmxlZD90LmN1cnJlbnRUcmFuc2FjdGlvbiE9PW51bGw/ITA6dGhpcy5IdSYmdGhpcy5YcyE9PXQuaGlzdG9yeUluZGV4OnRoaXMuSHV9c2V0IGlzTW9kaWZpZWQodCl7aWYodGhpcy5IdSE9PXQpe1UuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJpc01vZGlmaWVkXCIpLHRoaXMuSHU9dDtjb25zdCBlPXRoaXMudW5kb01hbmFnZXI7IXQmJmUuaXNFbmFibGVkJiYodGhpcy5Ycz1lLmhpc3RvcnlJbmRleCksdHx8dGhpcy5uTCgpfX1uTCgpe2NvbnN0IHQ9dGhpcy5pc01vZGlmaWVkO3RoaXMudzIhPT10JiYodGhpcy53Mj10LHRoaXMuTyhcIk1vZGlmaWVkXCIpKX1nZXQgbW9kZWwoKXtyZXR1cm4gdGhpcy5DaX1zZXQgbW9kZWwodCl7Y29uc3QgaT10aGlzLkNpO2lmKGkhPT10KXtVLmUodCxNb2RlbCxEaWFncmFtLFwibW9kZWxcIiksdGhpcy5jdXJyZW50VG9vbC5kb0NhbmNlbCgpLGkmJmkudW5kb01hbmFnZXIhPT10LnVuZG9NYW5hZ2VyJiZpLnVuZG9NYW5hZ2VyLmlzSW5UcmFuc2FjdGlvbiYmVS5uKFwiRG8gbm90IHJlcGxhY2UgYSBEaWFncmFtLm1vZGVsIHdoaWxlIGEgdHJhbnNhY3Rpb24gaXMgaW4gcHJvZ3Jlc3MuXCIpLHRoaXMuYW5pbWF0aW9uTWFuYWdlci5zdG9wQW5pbWF0aW9uKCEwKTtjb25zdCBlPXRoaXMuWEEoITApO3RoaXMuJG49ITEsdGhpcy56dT0hMCx0aGlzLlhzPS0yLHRoaXMuTnI9ITE7Y29uc3Qgcz10aGlzLlp0O3RoaXMuWnQ9ITAsdGhpcy5hbmltYXRpb25NYW5hZ2VyLkJsKFwiTW9kZWxcIiksaSYmKHRoaXMudm4hPT1udWxsJiZ0aGlzLnZuLmVhY2gobj0+aS5yZW1vdmVDaGFuZ2VkTGlzdGVuZXIobikpLGkucmVtb3ZlQ2hhbmdlZExpc3RlbmVyKHRoaXMucDIpKSx0aGlzLkNpPXQsdGhpcy5wYXJ0TWFuYWdlcj10aGlzLllSKHRoaXMuQ2kudHlwZSksdGhpcy5pbml0aWFsaXplUGFydE1hbmFnZXIodGhpcy5wYXJ0TWFuYWdlcik7Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspdGhpcy5hZGQoZVtuXSk7dC5hZGRDaGFuZ2VkTGlzdGVuZXIodGhpcy5tMiksdGhpcy5wYXJ0TWFuYWdlci5aMigpLHQucmVtb3ZlQ2hhbmdlZExpc3RlbmVyKHRoaXMubTIpLHQuYWRkQ2hhbmdlZExpc3RlbmVyKHRoaXMucDIpLHRoaXMudm4hPT1udWxsJiZ0aGlzLnZuLmVhY2gobj0+dC5hZGRDaGFuZ2VkTGlzdGVuZXIobikpLHRoaXMuWnQ9cyx0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLHRoaXMuWnR8fHRoaXMuTCgpLGkmJnQudW5kb01hbmFnZXIuY29weVByb3BlcnRpZXMoaS51bmRvTWFuYWdlcil9fWdldCB0aGVtZU1hbmFnZXIoKXtyZXR1cm4gdGhpcy5CMn1zZXQgdGhlbWVNYW5hZ2VyKHQpe2NvbnN0IGk9dGhpcy5CMjtpIT09dCYmKFUuZSh0LFRoZW1lTWFuYWdlcixNb2RlbCxcInRoZW1lTWFuYWdlclwiKSxpJiZpLnJlbW92ZURpYWdyYW0odGhpcyksdGhpcy5CMj10LHQhPT1udWxsJiZ0LmFkZERpYWdyYW0odGhpcykpfWluaXRpYWxpemVQYXJ0TWFuYWdlcih0KXt9c3RhdGljIFYyKHQsaSl7RGlhZ3JhbS5JQS5zZXQodCxpKX1zdGF0aWMgZ2V0IGxpY2Vuc2VLZXkoKXtyZXR1cm4gRGlhZ3JhbS5RMi5sYXN0KCl9c3RhdGljIHNldCBsaWNlbnNlS2V5KHQpe0RpYWdyYW0uUTIuYWRkKHQucmVwbGFjZSgvXFxzL2csXCJcIikpfXN0YXRpYyBnZXQgdmVyc2lvbigpe3JldHVybiBEaWFncmFtLktSfXN0YXRpYyBRMj1uZXcgTGlzdDtzdGF0aWMgS1I9XCIzLjAuMjZcIjtZUih0KXtjb25zdCBpPURpYWdyYW0uSUEuZ2V0KHQpO3JldHVybiBpIT09bnVsbD9uZXcgaTpuZXcgUGFydE1hbmFnZXJ9Z2V0IEgoKXtyZXR1cm4gdGhpcy5nMn1zZXQgSCh0KXt0aGlzLmcyPXR9Z2V0IFR4KCl7cmV0dXJuIHRoaXMuREF9VVIodCl7aWYodC5tb2RlbCE9PXRoaXMubW9kZWwpcmV0dXJuO2NvbnN0IGk9dC5jaGFuZ2UsZT10LnByb3BlcnR5TmFtZTtpZihpPT09MSYmZVswXT09PVwiU1wiKXtpZihlPT09XCJTdGFydGluZ0ZpcnN0VHJhbnNhY3Rpb25cIil7Y29uc3Qgcz10aGlzLG49dGhpcy50b29sTWFuYWdlcjtuLm1vdXNlRG93blRvb2xzLmVhY2gobz0+by5kaWFncmFtPXMpLG4ubW91c2VNb3ZlVG9vbHMuZWFjaChvPT5vLmRpYWdyYW09cyksbi5tb3VzZVVwVG9vbHMuZWFjaChvPT5vLmRpYWdyYW09cyksdGhpcy5yb3V0ZXJzLmVhY2gobz0+by5kaWFncmFtPXMpLCF0aGlzLlNzJiYhdGhpcy4kbiYmKHRoaXMuS2Y9ITAsdGhpcy56dSYmKHRoaXMuTnI9ITApKX1lbHNlIGlmKGU9PT1cIlN0YXJ0aW5nVW5kb1wifHxlPT09XCJTdGFydGluZ1JlZG9cIil7Y29uc3Qgcz10aGlzLmFuaW1hdGlvbk1hbmFnZXI7dGhpcy5za2lwc1VuZG9NYW5hZ2VyfHwocy5kZWZhdWx0QW5pbWF0aW9uLmlzQW5pbWF0aW5nJiZzLnN0b3BBbmltYXRpb24oKSxzLmdldEJ1bmRsZUFuaW1hdGlvbigpLmlzQW5pbWF0aW5nJiZzLmdldEJ1bmRsZUFuaW1hdGlvbigpLnN0b3AoKSksdGhpcy5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0aGlzLnNlbGVjdGlvbil9ZWxzZSBpZihlPT09XCJTdGFydGVkVHJhbnNhY3Rpb25cIil7Y29uc3Qgcz10aGlzLmFuaW1hdGlvbk1hbmFnZXI7cy5kZWZhdWx0QW5pbWF0aW9uLmlzQW5pbWF0aW5nJiYhdGhpcy5za2lwc1VuZG9NYW5hZ2VyJiZzLnN0b3BBbmltYXRpb24oKX1yZXR1cm59aWYodGhpcy5IKXt0aGlzLkg9ITE7dHJ5e2lmKHQubW9kZWxDaGFuZ2U9PT1cIlwiJiZpPT09MSl7KGU9PT1cIkZpbmlzaGVkVW5kb1wifHxlPT09XCJGaW5pc2hlZFJlZG9cIikmJih0aGlzLk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsdGhpcy5zZWxlY3Rpb24pLHRoaXMuVGkoKSk7Y29uc3Qgcz10aGlzLmFuaW1hdGlvbk1hbmFnZXI7ZT09PVwiUm9sbGVkQmFja1RyYW5zYWN0aW9uXCImJnMuc3RvcEFuaW1hdGlvbigpLHRoaXMuUEEoKSx0aGlzLktmPSEwLHRoaXMubWF5YmVVcGRhdGUoKSwodGhpcy51bmRvTWFuYWdlci50cmFuc2FjdGlvbkxldmVsPT09MHx8dGhpcy51bmRvTWFuYWdlci50cmFuc2FjdGlvbkxldmVsPT09MSkmJnMuS00oKSxlPT09XCJDb21taXR0ZWRUcmFuc2FjdGlvblwiJiZ0aGlzLnVuZG9NYW5hZ2VyLmlzSnVzdERpc2NhcmRlZCYmKHRoaXMuWHM9TWF0aC5taW4odGhpcy5Ycyx0aGlzLnVuZG9NYW5hZ2VyLmhpc3RvcnlJbmRleC0xKSksKGU9PT1cIkNvbW1pdHRlZFRyYW5zYWN0aW9uXCJ8fGU9PT1cIlJvbGxlZEJhY2tUcmFuc2FjdGlvblwiKSYmdGhpcy51bmRvTWFuYWdlci5XdyYmVS5scigoKT0+e3RoaXMuaXNNb2RpZmllZD0hMX0sMSk7Y29uc3Qgbj10LmlzVHJhbnNhY3Rpb25GaW5pc2hlZDtpZihuJiYodGhpcy5uTCgpLHRoaXMuVHguY2xlYXIoKSx0aGlzLmFuaW1hdGlvbk1hbmFnZXIuS0YoKSksIXRoaXMuJHgmJm4mJnRoaXMubGFzdElucHV0LnRhcmdldERpYWdyYW0pe3RoaXMuJHg9ITA7Y29uc3Qgbz10aGlzO1UubHIoKCk9PntvLmN1cnJlbnRUb29sLnN0YW5kYXJkTW91c2VPdmVyKCksby4keD0hMX0sMTApfX19ZmluYWxseXt0aGlzLkg9ITB9fX1nZXQgbWUoKXtyZXR1cm4gdGhpcy5kMn1zZXQgbWUodCl7dGhpcy5kMj10fWdldCBidSgpe3JldHVybiB0aGlzLlp4fXNldCBidSh0KXt0aGlzLlp4PXR9dkEodCl7Y29uc3QgaT10LlQuaDtmb3IoY29uc3QgZSBvZiBpKWUgaW5zdGFuY2VvZiBQaWN0dXJlJiZ0aGlzLl8yKGUpfV8yKHQpe2NvbnN0IGk9dC5lbGVtZW50O2lmKGk9PT1udWxsfHwhKGkgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50KXx8KGkub3MgaW5zdGFuY2VvZiBHU2V0JiZpLm9zLmFkZCh0aGlzKSx0LkdSKCksIWkudTApKXJldHVybjtjb25zdCBlPWkuZ2V0QXR0cmlidXRlKFwic3JjXCIpfHxcIlwiLHM9dGhpcy50aC5nZXQoZSk7aWYocz09PW51bGwpe1BpY3R1cmUub0wodCxpKTtjb25zdCBuPVtdO24ucHVzaCh0KSx0aGlzLnRoLnNldChlLG4pfWVsc2V7Zm9yKGxldCBuPTA7bjxzLmxlbmd0aDtuKyspaWYoc1tuXT09PXQpcmV0dXJuO3MucHVzaCh0KX19SFIodCl7Y29uc3QgaT10LlQuaCxlPWkubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspdGhpcy50UChpW3NdKX10UCh0KXtpZighKHQgaW5zdGFuY2VvZiBQaWN0dXJlKSlyZXR1cm47Y29uc3QgaT10LmVsZW1lbnQ7aWYoaT09PW51bGx8fCEoaSBpbnN0YW5jZW9mIEhUTUxJbWFnZUVsZW1lbnQpfHwhaS51MClyZXR1cm47Y29uc3QgZT1pLmdldEF0dHJpYnV0ZShcInNyY1wiKXx8XCJcIixzPXRoaXMudGguZ2V0KGUpO2lmKHMhPT1udWxsKXtmb3IobGV0IG49MDtuPHMubGVuZ3RoO24rKylpZihzW25dPT09dCl7cy5zcGxpY2UobiwxKSxzLmxlbmd0aD09PTAmJih0aGlzLnRoLmRlbGV0ZShlKSxQaWN0dXJlLnFSKGkpLGkub3MgaW5zdGFuY2VvZiBHU2V0JiZpLm9zLmRlbGV0ZSh0aGlzKSxQaWN0dXJlLmNsZWFyQ2FjaGUoZSkpO3JldHVybn19fVlBKCl7UGljdHVyZS5jbGVhckNhY2hlKCksdGhpcy50aC5jbGVhcigpfXJlYnVpbGRQYXJ0cygpe3RoaXMucGFydE1hbmFnZXIucmVidWlsZFBhcnRzKCl9RWYodCxpKXt0aGlzLndzLkVmKHQsaSl9T2YodCxpKXt0aGlzLndzLk9mKHQsaSl9ZmluZFBhcnRGb3JLZXkodCl7cmV0dXJuIHRoaXMucGFydE1hbmFnZXIuZmluZFBhcnRGb3JLZXkodCl9ZmluZE5vZGVGb3JLZXkodCl7cmV0dXJuIHRoaXMucGFydE1hbmFnZXIuZmluZE5vZGVGb3JLZXkodCl9ZmluZExpbmtGb3JLZXkodCl7cmV0dXJuIHRoaXMucGFydE1hbmFnZXIuZmluZExpbmtGb3JLZXkodCl9ZmluZFBhcnRGb3JEYXRhKHQpe3JldHVybiB0aGlzLnBhcnRNYW5hZ2VyLmZpbmRQYXJ0Rm9yRGF0YSh0KX1maW5kTm9kZUZvckRhdGEodCl7cmV0dXJuIHRoaXMucGFydE1hbmFnZXIuZmluZE5vZGVGb3JEYXRhKHQpfWZpbmRMaW5rRm9yRGF0YSh0KXtyZXR1cm4gdGhpcy5wYXJ0TWFuYWdlci5maW5kTGlua0ZvckRhdGEodCl9ZmluZE5vZGVzQnlFeGFtcGxlKC4uLnQpe3JldHVybiB0aGlzLnBhcnRNYW5hZ2VyLmZpbmROb2Rlc0J5RXhhbXBsZSguLi50KX1maW5kTGlua3NCeUV4YW1wbGUoLi4udCl7cmV0dXJuIHRoaXMucGFydE1hbmFnZXIuZmluZExpbmtzQnlFeGFtcGxlKC4uLnQpfWdldCBub2RlVGVtcGxhdGUoKXtyZXR1cm4gdGhpcy5Hci5nZXQoXCJcIil9c2V0IG5vZGVUZW1wbGF0ZSh0KXtjb25zdCBpPXRoaXMuR3IuZ2V0KFwiXCIpO2khPT10JiYoVS5lKHQsUGFydCxEaWFncmFtLFwibm9kZVRlbXBsYXRlXCIpLHRoaXMuR3Iuc2V0KFwiXCIsdCksdGhpcy50KFwibm9kZVRlbXBsYXRlXCIsaSx0KSx0aGlzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMucmVidWlsZFBhcnRzKCkpfWdldCBub2RlVGVtcGxhdGVNYXAoKXtyZXR1cm4gdGhpcy5Hcn1zZXQgbm9kZVRlbXBsYXRlTWFwKHQpe2NvbnN0IGk9dGhpcy5HcjtpIT09dCYmKFUuZSh0LEdNYXAsRGlhZ3JhbSxcIm5vZGVUZW1wbGF0ZU1hcFwiKSx0aGlzLkdyPXQsdGhpcy50KFwibm9kZVRlbXBsYXRlTWFwXCIsaSx0KSx0aGlzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMucmVidWlsZFBhcnRzKCkpfWdldCBncm91cFRlbXBsYXRlKCl7cmV0dXJuIHRoaXMubmEuZ2V0KFwiXCIpfXNldCBncm91cFRlbXBsYXRlKHQpe2NvbnN0IGk9dGhpcy5uYS5nZXQoXCJcIik7aSE9PXQmJihVLmUodCxHcm91cCxEaWFncmFtLFwiZ3JvdXBUZW1wbGF0ZVwiKSx0aGlzLm5hLnNldChcIlwiLHQpLHRoaXMudChcImdyb3VwVGVtcGxhdGVcIixpLHQpLHRoaXMudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZ3x8dGhpcy5yZWJ1aWxkUGFydHMoKSl9Z2V0IGdyb3VwVGVtcGxhdGVNYXAoKXtyZXR1cm4gdGhpcy5uYX1zZXQgZ3JvdXBUZW1wbGF0ZU1hcCh0KXtjb25zdCBpPXRoaXMubmE7aSE9PXQmJihVLmUodCxHTWFwLERpYWdyYW0sXCJncm91cFRlbXBsYXRlTWFwXCIpLHRoaXMubmE9dCx0aGlzLnQoXCJncm91cFRlbXBsYXRlTWFwXCIsaSx0KSx0aGlzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMucmVidWlsZFBhcnRzKCkpfWdldCBsaW5rVGVtcGxhdGUoKXtyZXR1cm4gdGhpcy5RbC5nZXQoXCJcIil9c2V0IGxpbmtUZW1wbGF0ZSh0KXtjb25zdCBpPXRoaXMuUWwuZ2V0KFwiXCIpO2khPT10JiYoVS5lKHQsTGluayxEaWFncmFtLFwibGlua1RlbXBsYXRlXCIpLHRoaXMuUWwuc2V0KFwiXCIsdCksdGhpcy50KFwibGlua1RlbXBsYXRlXCIsaSx0KSx0aGlzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMucmVidWlsZFBhcnRzKCkpfWdldCBsaW5rVGVtcGxhdGVNYXAoKXtyZXR1cm4gdGhpcy5RbH1zZXQgbGlua1RlbXBsYXRlTWFwKHQpe2NvbnN0IGk9dGhpcy5RbDtpIT09dCYmKFUuZSh0LEdNYXAsRGlhZ3JhbSxcImxpbmtUZW1wbGF0ZU1hcFwiKSx0aGlzLlFsPXQsdGhpcy50KFwibGlua1RlbXBsYXRlTWFwXCIsaSx0KSx0aGlzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMucmVidWlsZFBhcnRzKCkpfWdldCBpc01vdXNlQ2FwdHVyZWQoKXtyZXR1cm4gdGhpcy5iMn1zZXQgaXNNb3VzZUNhcHR1cmVkKHQpe2NvbnN0IGk9dGhpcy53dDtpZihpPT09bnVsbClyZXR1cm47Y29uc3QgZT1pLkV0O2UgaW5zdGFuY2VvZiBTVkdFbGVtZW50fHwodD8odGhpcy5sYXN0SW5wdXQuYnViYmxlcz0hMSx0aGlzLkFpKGUsXCJwb2ludGVybW92ZVwiLHRoaXMuZmEsITEpLHRoaXMuQWkoZSxcInBvaW50ZXJkb3duXCIsdGhpcy5laCwhMSksdGhpcy5BaShlLFwicG9pbnRlcnVwXCIsdGhpcy5jYSwhMSksdGhpcy5BaShlLFwicG9pbnRlcm91dFwiLHRoaXMudWEsITEpLHRoaXMuQWkoZSxcInBvaW50ZXJjYW5jZWxcIix0aGlzLmRhLCExKSx0aGlzLlV0KHJvb3QsXCJwb2ludGVybW92ZVwiLHRoaXMuZmEsITApLHRoaXMuVXQocm9vdCxcInBvaW50ZXJkb3duXCIsdGhpcy5laCwhMCksdGhpcy5VdChyb290LFwicG9pbnRlcnVwXCIsdGhpcy5jYSwhMCksdGhpcy5VdChyb290LFwicG9pbnRlcm91dFwiLHRoaXMudWEsITApLHRoaXMuVXQocm9vdCxcInBvaW50ZXJjYW5jZWxcIix0aGlzLmRhLCEwKSx0aGlzLkFpKGUsXCJ3aGVlbFwiLHRoaXMuYWEsITEpLHRoaXMuVXQocm9vdCxcIndoZWVsXCIsdGhpcy5hYSwhMCksdGhpcy5VdChyb290LFwic2VsZWN0c3RhcnRcIix0aGlzLlpoLCExKSk6KHRoaXMuQWkocm9vdCxcInBvaW50ZXJtb3ZlXCIsdGhpcy5mYSwhMCksdGhpcy5BaShyb290LFwicG9pbnRlcmRvd25cIix0aGlzLmVoLCEwKSx0aGlzLkFpKHJvb3QsXCJwb2ludGVydXBcIix0aGlzLmNhLCEwKSx0aGlzLkFpKHJvb3QsXCJwb2ludGVyb3V0XCIsdGhpcy51YSwhMCksdGhpcy5BaShyb290LFwicG9pbnRlcmNhbmNlbFwiLHRoaXMuZGEsITApLHRoaXMuVXQoZSxcInBvaW50ZXJtb3ZlXCIsdGhpcy5mYSwhMSksdGhpcy5VdChlLFwicG9pbnRlcmRvd25cIix0aGlzLmVoLCExKSx0aGlzLlV0KGUsXCJwb2ludGVydXBcIix0aGlzLmNhLCExKSx0aGlzLlV0KGUsXCJwb2ludGVyb3V0XCIsdGhpcy51YSwhMSksdGhpcy5VdChlLFwicG9pbnRlcmNhbmNlbFwiLHRoaXMuZGEsITEpLHRoaXMuQWkocm9vdCxcIndoZWVsXCIsdGhpcy5hYSwhMCksdGhpcy5BaShyb290LFwic2VsZWN0c3RhcnRcIix0aGlzLlpoLCExKSx0aGlzLlV0KGUsXCJ3aGVlbFwiLHRoaXMuYWEsITEpKSx0aGlzLmIyPXQpfWdldCBwb3NpdGlvbigpe3JldHVybiB0aGlzLmd0fXNldCBwb3NpdGlvbih0KXtpZih0aGlzLmd0LmVxdWFscyh0KSlyZXR1cm47Y29uc3QgaT1Qb2ludC5hKCkuYyh0aGlzLmd0KSxlPXRoaXMudmlld3BvcnRCb3VuZHMuY29weSgpO2lmKHRoaXMuZ3QuYyh0KSx0aGlzLmFuaW1hdGlvbk1hbmFnZXIua0EoaSx0aGlzLmd0KSwhdGhpcy5adCYmISh0aGlzLnd0PT09bnVsbCYmIXRoaXMuVXUuaXNSZWFsKCkpKXt0aGlzLlp0PSEwO2NvbnN0IHM9dGhpcy5zY2FsZSxuPXRoaXMuUHQvcyxvPXRoaXMuTnQvczt0aGlzLksyKHRoaXMuV20sbixvLHRoaXMuWGYsITEpLHRoaXMuWnQ9ITF9ZWxzZSB0aGlzLm5oKCksdGhpcy5yMCgpO2lmKCF0aGlzLlp0KXtjb25zdCBzPXRoaXMudmlld3BvcnRCb3VuZHM7dGhpcy5vblZpZXdwb3J0Qm91bmRzQ2hhbmdlZChlLHMsdGhpcy5vdCwhMSl9UG9pbnQubyhpKX1nZXQgaW5pdGlhbFBvc2l0aW9uKCl7cmV0dXJuIHRoaXMuSXh9c2V0IGluaXRpYWxQb3NpdGlvbih0KXt0aGlzLkl4LmVxdWFscyh0KXx8KFUuZSh0LFBvaW50LERpYWdyYW0sXCJpbml0aWFsUG9zaXRpb25cIiksdGhpcy5JeD10Lk4oKSl9Z2V0IGluaXRpYWxTY2FsZSgpe3JldHVybiB0aGlzLk94fXNldCBpbml0aWFsU2NhbGUodCl7dGhpcy5PeCE9PXQmJihVLmkodCxcIm51bWJlclwiLERpYWdyYW0sXCJpbml0aWFsU2NhbGVcIiksdGhpcy5PeD10KX1nZXQgZ3JpZCgpe3JldHVybiB0aGlzLmVzPT09bnVsbCYmKHRoaXMuZXM9dGhpcy5VQSgpKSx0aGlzLmVzfXNldCBncmlkKHQpe2xldCBpPXRoaXMuZXM7aWYoaSE9PXQpe2k9PT1udWxsJiYodGhpcy5lcz10aGlzLlVBKCksaT10aGlzLmVzKSxVLmUodCxQYW5lbCxEaWFncmFtLFwiZ3JpZFwiKSx0LnR5cGUhPT1QYW5lbC5HcmlkJiZVLm4oXCJEaWFncmFtLmdyaWQgbXVzdCBiZSBhIFBhbmVsIG9mIHR5cGUgUGFuZWwuR3JpZFwiKTtjb25zdCBlPWkucGFuZWw7ZSE9PW51bGwmJmUucmVtb3ZlKGkpLHRoaXMuZXM9dCx0Lm5hbWU9XCJHUklEXCIsZSE9PW51bGwmJmUuYWRkKHQpLHRoaXMuR3U9ITEsdGhpcy5MKCksdGhpcy50KFwiZ3JpZFwiLGksdCl9fWdldCB2aWV3cG9ydEJvdW5kcygpe3JldHVybiB0aGlzLm0xfW5oKCl7Y29uc3QgdD10aGlzLm0xLGk9dGhpcy5ndCxlPXRoaXMub3Q7dC5zKGkueCxpLnksTWF0aC5tYXgodGhpcy5QdCwwKS9lLE1hdGgubWF4KHRoaXMuTnQsMCkvZSksdGhpcy5vaCgpfWdldCB2aWV3U2l6ZSgpe3JldHVybiB0aGlzLlV1fXNldCB2aWV3U2l6ZSh0KXtjb25zdCBpPXRoaXMudmlld1NpemU7aWYoIWkuZXF1YWxzKHQpKXtVLmUodCxTaXplLERpYWdyYW0sXCJ2aWV3U2l6ZVwiKSx0PXQuTigpLHRoaXMuVXU9dDtsZXQgZT0wLHM9MDt0LmlzUmVhbCgpPyhlPXQud2lkdGgscz10LmhlaWdodCk6dGhpcy5UdCE9PW51bGwmJihlPXRoaXMuVHQuY2xpZW50V2lkdGh8fDEscz10aGlzLlR0LmNsaWVudEhlaWdodHx8MSksdGhpcy5QdD1lLHRoaXMuTnQ9cyx0aGlzLm5oKCksdGhpcy5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKSx0aGlzLnQoXCJ2aWV3U2l6ZVwiLGksdCksdGhpcy5MKCl9fWdldCBmaXhlZEJvdW5kcygpe3JldHVybiB0aGlzLnp4fXNldCBmaXhlZEJvdW5kcyh0KXtjb25zdCBpPXRoaXMueng7aS5lcXVhbHModCl8fChVLmUodCxSZWN0LERpYWdyYW0sXCJmaXhlZEJvdW5kc1wiKSwoRGVidWcmJnQud2lkdGg9PT0xLzB8fHQud2lkdGg9PT0tMS8wfHx0LmhlaWdodD09PTEvMHx8dC5oZWlnaHQ9PT0tMS8wKSYmVS5uKFwiZml4ZWRCb3VuZHMgd2lkdGgvaGVpZ2h0IG11c3Qgbm90IGJlIEluZmluaXR5XCIpLHQ9dC5OKCksdGhpcy56eD10LHRoaXMuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy50KFwiZml4ZWRCb3VuZHNcIixpLHQpKX1nZXQgc2Nyb2xsTWFyZ2luKCl7cmV0dXJuIHRoaXMuZWF9c2V0IHNjcm9sbE1hcmdpbih0KXt0eXBlb2YgdD09XCJudW1iZXJcIj90PW5ldyBNYXJnaW4odCk6VS5lKHQsTWFyZ2luLERpYWdyYW0sXCJzY3JvbGxNYXJnaW5cIik7Y29uc3QgaT10aGlzLmVhO2kuZXF1YWxzKHQpfHwodD10Lk4oKSx0aGlzLmVhPXQsdGhpcy50KFwic2Nyb2xsTWFyZ2luXCIsaSx0KSx0aGlzLlN1KCkpfWdldCBzY3JvbGxNb2RlKCl7cmV0dXJuIHRoaXMuX2h9c2V0IHNjcm9sbE1vZGUodCl7Y29uc3QgaT10aGlzLl9oO2khPT10JiYoVS5qKHQsU2Nyb2xsTW9kZSxcIlNjcm9sbE1vZGVcIiksdGhpcy5faD10LHQ9PT0xJiZ0aGlzLkdzKCExKSx0aGlzLnQoXCJzY3JvbGxNb2RlXCIsaSx0KSx0aGlzLm1hKCksdGhpcy5MKCkpfWdldCBzY3JvbGxzUGFnZU9uRm9jdXMoKXtyZXR1cm4gdGhpcy5YeH1zZXQgc2Nyb2xsc1BhZ2VPbkZvY3VzKHQpe2NvbnN0IGk9dGhpcy5YeDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJzY3JvbGxzUGFnZU9uRm9jdXNcIiksdGhpcy5YeD10LHRoaXMudChcInNjcm9sbHNQYWdlT25Gb2N1c1wiLGksdCkpfWdldCBwb3NpdGlvbkNvbXB1dGF0aW9uKCl7cmV0dXJuIHRoaXMuWXh9c2V0IHBvc2l0aW9uQ29tcHV0YXRpb24odCl7Y29uc3QgaT10aGlzLll4O2khPT10JiYodCE9PW51bGwmJlUuUCh0LERpYWdyYW0sXCJwb3NpdGlvbkNvbXB1dGF0aW9uXCIpLHRoaXMuWXg9dCx0aGlzLkdzKCExKSx0aGlzLnQoXCJwb3NpdGlvbkNvbXB1dGF0aW9uXCIsaSx0KSl9Z2V0IHNjYWxlQ29tcHV0YXRpb24oKXtyZXR1cm4gdGhpcy5LeH1zZXQgc2NhbGVDb21wdXRhdGlvbih0KXtjb25zdCBpPXRoaXMuS3g7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsRGlhZ3JhbSxcInNjYWxlQ29tcHV0YXRpb25cIiksdGhpcy5LeD10LHRoaXMuc0wodGhpcy5zY2FsZSx0aGlzLnNjYWxlKSx0aGlzLnQoXCJzY2FsZUNvbXB1dGF0aW9uXCIsaSx0KSl9Z2V0IGRvY3VtZW50Qm91bmRzKCl7cmV0dXJuIHRoaXMuV219ckwodCl7dGhpcy5yYT0hMTtsZXQgaT10aGlzLldtO2kuZXF1YWxzKHQpfHwoaT1pLmNvcHkoKSx0aGlzLldtLmModCksdGhpcy5HcyghMSksdGhpcy5PKFwiRG9jdW1lbnRCb3VuZHNDaGFuZ2VkXCIsdm9pZCAwLGkpLHRoaXMubWEoKSx0aGlzLkwoKSl9ZW5zdXJlQm91bmRzKCl7aWYodGhpcy5yYSl7Y29uc3QgdD1SZWN0LmEoKTt0aGlzLnJMKHRoaXMuY29tcHV0ZUJvdW5kcyh0KSksUmVjdC5vKHQpfX1nZXQgaXNWaXJ0dWFsaXplZCgpe3JldHVybiB0aGlzLnAxfXNldCBpc1ZpcnR1YWxpemVkKHQpe2NvbnN0IGk9dGhpcy5wMTtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJpc1ZpcnR1YWxpemVkXCIpLHRoaXMucDE9dCx0aGlzLnQoXCJpc1ZpcnR1YWxpemVkXCIsaSx0KSl9Z2V0IHNjYWxlKCl7cmV0dXJuIHRoaXMub3R9c2V0IHNjYWxlKHQpe2NvbnN0IGk9dGhpcy5vdDtVLnIodCxEaWFncmFtLFwic2NhbGVcIiksaSE9PXQmJnRoaXMuc0woaSx0KX1nZXQgZGVmYXVsdFNjYWxlKCl7cmV0dXJuIHRoaXMuJG19c2V0IGRlZmF1bHRTY2FsZSh0KXtEZWJ1ZyYmVS5yKHQsRGlhZ3JhbSxcImRlZmF1bHRTY2FsZVwiKSxEZWJ1ZyYmISh0PjApJiZVLm4oXCJkZWZhdWx0U2NhbGUgbXVzdCBiZSBsYXJnZXIgdGhhbiB6ZXJvLCBub3Q6IFwiK3QpLHRoaXMuJG09dH1nZXQgYXV0b1NjYWxlKCl7cmV0dXJuIHRoaXMuJGx9c2V0IGF1dG9TY2FsZSh0KXtjb25zdCBpPXRoaXMuJGw7aSE9PXQmJihVLmoodCxBdXRvU2NhbGUsXCJBdXRvU2NhbGVcIiksdGhpcy4kbD10LHRoaXMudChcImF1dG9TY2FsZVwiLGksdCksdCE9PTEmJnRoaXMuR3MoITEpKX1nZXQgaW5pdGlhbEF1dG9TY2FsZSgpe3JldHVybiB0aGlzLlRyfXNldCBpbml0aWFsQXV0b1NjYWxlKHQpe2NvbnN0IGk9dGhpcy5UcjtpIT09dCYmKFUuaih0LEF1dG9TY2FsZSxcIkF1dG9TY2FsZVwiKSx0aGlzLlRyPXQsdGhpcy50KFwiaW5pdGlhbEF1dG9TY2FsZVwiLGksdCkpfWdldCBpbml0aWFsVmlld3BvcnRTcG90KCl7cmV0dXJuIHRoaXMuR3h9c2V0IGluaXRpYWxWaWV3cG9ydFNwb3QodCl7Y29uc3QgaT10aGlzLkd4O2khPT10JiYoVS5lKHQsU3BvdCxEaWFncmFtLFwiaW5pdGlhbFZpZXdwb3J0U3BvdFwiKSx0LmlzU3BvdCgpfHxVLm4oXCJpbml0aWFsVmlld3BvcnRTcG90IG11c3QgYmUgYSBzcGVjaWZpYyBTcG90OiBcIit0KSx0aGlzLkd4PXQsdGhpcy50KFwiaW5pdGlhbFZpZXdwb3J0U3BvdFwiLGksdCkpfWdldCBpbml0aWFsRG9jdW1lbnRTcG90KCl7cmV0dXJuIHRoaXMuVXh9c2V0IGluaXRpYWxEb2N1bWVudFNwb3QodCl7Y29uc3QgaT10aGlzLlV4O2khPT10JiYoVS5lKHQsU3BvdCxEaWFncmFtLFwiaW5pdGlhbERvY3VtZW50U3BvdFwiKSx0LmlzU3BvdCgpfHxVLm4oXCJpbml0aWFsVmlld3BvcnRTcG90IG11c3QgYmUgYSBzcGVjaWZpYyBTcG90OiBcIit0KSx0aGlzLlV4PXQsdGhpcy50KFwiaW5pdGlhbERvY3VtZW50U3BvdFwiLGksdCkpfWdldCBtaW5TY2FsZSgpe3JldHVybiB0aGlzLkV4fXNldCBtaW5TY2FsZSh0KXtVLnIodCxEaWFncmFtLFwibWluU2NhbGVcIik7Y29uc3QgaT10aGlzLkV4O2khPT10JiYodD4wPyh0aGlzLkV4PXQsdGhpcy50KFwibWluU2NhbGVcIixpLHQpLHQ+dGhpcy5zY2FsZSYmKHRoaXMuc2NhbGU9dCkpOlUuVSh0LFwiPiAwXCIsRGlhZ3JhbSxcIm1pblNjYWxlXCIpKX1nZXQgbWF4U2NhbGUoKXtyZXR1cm4gdGhpcy5CeH1zZXQgbWF4U2NhbGUodCl7VS5yKHQsRGlhZ3JhbSxcIm1heFNjYWxlXCIpO2NvbnN0IGk9dGhpcy5CeDtpIT09dCYmKHQ+MD8odGhpcy5CeD10LHRoaXMudChcIm1heFNjYWxlXCIsaSx0KSx0PHRoaXMuc2NhbGUmJih0aGlzLnNjYWxlPXQpKTpVLlUodCxcIj4gMFwiLERpYWdyYW0sXCJtYXhTY2FsZVwiKSl9Z2V0IHpvb21Qb2ludCgpe3JldHVybiB0aGlzLlZ4fXNldCB6b29tUG9pbnQodCl7dGhpcy5WeC5lcXVhbHModCl8fChVLmUodCxQb2ludCxEaWFncmFtLFwiem9vbVBvaW50XCIpLHQ9dC5OKCksdGhpcy5WeD10KX1nZXQgY29udGVudEFsaWdubWVudCgpe3JldHVybiB0aGlzLlhmfXNldCBjb250ZW50QWxpZ25tZW50KHQpe2NvbnN0IGk9dGhpcy5YZjtpLmVxdWFscyh0KXx8KFUuZSh0LFNwb3QsRGlhZ3JhbSxcImNvbnRlbnRBbGlnbm1lbnRcIiksdD10Lk4oKSx0aGlzLlhmPXQsdGhpcy50KFwiY29udGVudEFsaWdubWVudFwiLGksdCksdGhpcy5HcyghMSkpfWdldCBpbml0aWFsQ29udGVudEFsaWdubWVudCgpe3JldHVybiB0aGlzLlltfXNldCBpbml0aWFsQ29udGVudEFsaWdubWVudCh0KXtjb25zdCBpPXRoaXMuWW07aS5lcXVhbHModCl8fChVLmUodCxTcG90LERpYWdyYW0sXCJpbml0aWFsQ29udGVudEFsaWdubWVudFwiKSx0PXQuTigpLHRoaXMuWW09dCx0aGlzLnQoXCJpbml0aWFsQ29udGVudEFsaWdubWVudFwiLGksdCkpfWdldCBwYWRkaW5nKCl7cmV0dXJuIHRoaXMuZWl9c2V0IHBhZGRpbmcodCl7dHlwZW9mIHQ9PVwibnVtYmVyXCI/dD1uZXcgTWFyZ2luKHQpOlUuZSh0LE1hcmdpbixEaWFncmFtLFwicGFkZGluZ1wiKTtjb25zdCBpPXRoaXMuZWk7aS5lcXVhbHModCl8fCh0PXQuTigpLHRoaXMuZWk9dCx0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLHRoaXMudChcInBhZGRpbmdcIixpLHQpKX1nZXQgcGFydE1hbmFnZXIoKXtyZXR1cm4gdGhpcy5BMn1zZXQgcGFydE1hbmFnZXIodCl7Y29uc3QgaT10aGlzLkEyO2khPT10JiYoVS5lKHQsUGFydE1hbmFnZXIsRGlhZ3JhbSxcInBhcnRNYW5hZ2VyXCIpLHQuZGlhZ3JhbSE9PW51bGwmJlUubihcIkNhbm5vdCBzaGFyZSBQYXJ0TWFuYWdlcnMgYmV0d2VlbiBEaWFncmFtczogXCIrdC50b1N0cmluZygpKSxpJiZpLkRvKG51bGwpLHRoaXMuQTI9dCx0LkRvKHRoaXMpKX1nZXQgbm9kZXMoKXtyZXR1cm4gdGhpcy5wYXJ0TWFuYWdlci5ub2Rlcy5pdGVyYXRvcn1nZXQgbGlua3MoKXtyZXR1cm4gdGhpcy5wYXJ0TWFuYWdlci5saW5rcy5pdGVyYXRvcn1nZXQgcGFydHMoKXtyZXR1cm4gdGhpcy5wYXJ0TWFuYWdlci5wYXJ0cy5pdGVyYXRvcn1maW5kVG9wTGV2ZWxOb2Rlc0FuZExpbmtzKCl7Y29uc3QgdD1uZXcgR1NldCxpPXRoaXMubm9kZXM7Zm9yKDtpLm5leHQoKTspe2NvbnN0IHM9aS52YWx1ZTtzLmlzVG9wTGV2ZWwmJnQuYWRkKHMpfWNvbnN0IGU9dGhpcy5saW5rcztmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO3MuaXNUb3BMZXZlbCYmdC5hZGQocyl9cmV0dXJuIHQuaXRlcmF0b3J9ZmluZFRvcExldmVsR3JvdXBzKCl7cmV0dXJuIHRoaXMuV3IuaXRlcmF0b3J9Z2V0IHJvdXRlcnMoKXtyZXR1cm4gdGhpcy5qZn1kb0xpbmtSb3V0aW5nKHQpe3RoaXMuUm89ITA7Y29uc3QgaT10aGlzLmpmLmg7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspaVtlXS5jYW5Sb3V0ZSh0KSYmaVtlXS5yb3V0ZUxpbmtzKHRoaXMuRHIsdCk7dGhpcy5Sbz0hMX1nZXQgbGF5b3V0KCl7cmV0dXJuIHRoaXMub2V9c2V0IGxheW91dCh0KXtjb25zdCBpPXRoaXMub2U7aSE9PXQmJihVLmUodCxMYXlvdXQsRGlhZ3JhbSxcImxheW91dFwiKSx0aGlzLm9lPXQsdC5kaWFncmFtPXRoaXMsdC5ncm91cD1udWxsLHRoaXMucXI9ITAsdGhpcy50KFwibGF5b3V0XCIsaSx0KSx0aGlzLnJlcXVlc3RVcGRhdGUoKSl9bGF5b3V0RGlhZ3JhbSh0KXt0aGlzLlRpKCksdCYmdGhpcy56MSghMCksdGhpcy5Tcz90aGlzLkgyKCExLHRoaXMuTmx8fHRoaXMuamYuY291bnQhPT0wJiZ0aGlzLmpuLnNpemUhPT0wKToodGhpcy5LZj0hMCx0aGlzLnhyKCkpfXoxKHQpe2NvbnN0IGk9dGhpcy5Xci5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl0aGlzLmxMKGkudmFsdWUsdCk7dGhpcy5sYXlvdXQmJih0P3RoaXMubGF5b3V0LmlzVmFsaWRMYXlvdXQ9ITE6dGhpcy5sYXlvdXQuaW52YWxpZGF0ZUxheW91dCgpKX1sTCh0LGkpe2lmKHQ9PT1udWxsKXJldHVybjtjb25zdCBlPXQucGEuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTt0aGlzLmxMKHMsaSl9dC5sYXlvdXQhPT1udWxsJiYoaT90LmxheW91dC5pc1ZhbGlkTGF5b3V0PSExOnQubGF5b3V0LmludmFsaWRhdGVMYXlvdXQoKSl9SDIodCxpKXtpZih0aGlzLlF4KXJldHVybjtjb25zdCBlPXRoaXMuSDt0aGlzLkg9ITA7Y29uc3Qgcz1cIkxheW91dFwiLG49dGhpcy51bmRvTWFuYWdlci50cmFuc2FjdGlvbkxldmVsLG89dGhpcy5sYXlvdXQscj10aGlzLmFuaW1hdGlvbk1hbmFnZXI7dHJ5e249PT0wJiYodGhpcy51bmRvTWFuYWdlci5NbD0hMCx0aGlzLnN0YXJ0VHJhbnNhY3Rpb24ocykpLG48PTEmJiFyLmRlZmF1bHRBbmltYXRpb24uaXNBbmltYXRpbmcmJiFyLmJpJiYodHx8ci5CbChzKSksdGhpcy5xcj0hMTtsZXQgbD10aGlzLldyLml0ZXJhdG9yO2Zvcig7bC5uZXh0KCk7KXRoaXMuaEwobC52YWx1ZSx0LG4saSk7bGV0IGg9ITE7aWYoby5pc1ZhbGlkTGF5b3V0fHwoIXR8fG8uaXNSZWFsdGltZXx8by5pc1JlYWx0aW1lPT09bnVsbHx8bj09PTA/KG8uZG9MYXlvdXQodGhpcyksdGhpcy5oMCh0aGlzKSxoPSEwLG8uaXNWYWxpZExheW91dD0hMCk6dGhpcy5xcj0hMCksaHx8dGhpcy5oMCh0aGlzKSx0aGlzLmRvTGlua1JvdXRpbmcodGhpcyksdGhpcy5Eci5jbGVhcigpLHRoaXMuc2Euc2l6ZSE9PTApe2ZvcihsZXQgZj0wO2Y8MjMmJnRoaXMuc2Euc2l6ZSE9PTA7ZisrKXtmb3IobD10aGlzLldyLml0ZXJhdG9yO2wubmV4dCgpOyl0aGlzLmFMKGwudmFsdWUpO2NvbnN0IGE9dGhpcy5Ecjt0aGlzLkRyPXRoaXMuc2EsdGhpcy5zYT1hLHRoaXMuaDAodGhpcyksdGhpcy5kb0xpbmtSb3V0aW5nKHRoaXMpfXRoaXMuRHIuY2xlYXIoKSx0aGlzLnNhLmNsZWFyKCl9fWZpbmFsbHl7Y29uc3QgbD10aGlzLnVuZG9NYW5hZ2VyLk1sO249PT0wJiYodGhpcy5jb21taXRUcmFuc2FjdGlvbihzKSx0aGlzLnVuZG9NYW5hZ2VyLk1sPSExKSxsJiYobj09PTB8fG49PT0xKSYmci5LTSgpLHRoaXMucXImJih0aGlzLnFyPSFvLmlzVmFsaWRMYXlvdXQpLHRoaXMuSD1lfX1oTCh0LGksZSxzKXtjb25zdCBuPXQucGEuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspdGhpcy5oTChuLnZhbHVlLGksZSxzKTtjb25zdCBvPXQubGF5b3V0O28hPT1udWxsJiYhby5pc1ZhbGlkTGF5b3V0PyFpfHxvLmlzUmVhbHRpbWV8fGU9PT0wPyh0LnlhPSF0LmxvY2F0aW9uLmlzUmVhbCgpLG8uZG9MYXlvdXQodCksdC5pbnZhbGlkYXRlTGF5b3V0KDMyKSx0aGlzLk8xKHQpLHRoaXMuaDAodCksdGhpcy5kb0xpbmtSb3V0aW5nKHQpLG8uaXNWYWxpZExheW91dD0hMCk6KHRoaXMuZG9MaW5rUm91dGluZyh0KSx0aGlzLnFyPSEwKTpzJiZ0aGlzLmRvTGlua1JvdXRpbmcodCl9YUwodCl7Y29uc3QgaT10LnBhLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXRoaXMuYUwoaS52YWx1ZSk7dGhpcy5oMCh0KSx0aGlzLmRvTGlua1JvdXRpbmcodCl9Z2V0IGlzVHJlZVBhdGhUb0NoaWxkcmVuKCl7cmV0dXJuIHRoaXMuSHh9c2V0IGlzVHJlZVBhdGhUb0NoaWxkcmVuKHQpe2NvbnN0IGk9dGhpcy5IeDtpZihpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLERpYWdyYW0sXCJpc1RyZWVQYXRoVG9DaGlsZHJlblwiKSx0aGlzLkh4PXQsdGhpcy50KFwiaXNUcmVlUGF0aFRvQ2hpbGRyZW5cIixpLHQpLCF0aGlzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpKXtjb25zdCBlPXRoaXMubm9kZXM7Zm9yKDtlLm5leHQoKTspZS52YWx1ZS5kMCgpfX1maW5kVHJlZVJvb3RzKCl7Y29uc3QgdD1uZXcgTGlzdCxpPXRoaXMubm9kZXM7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtlLmlzVG9wTGV2ZWwmJmUuZmluZFRyZWVQYXJlbnRMaW5rKCk9PT1udWxsJiZ0LmFkZChlKX1yZXR1cm4gdC5pdGVyYXRvcn1nZXQgdHJlZUNvbGxhcHNlUG9saWN5KCl7cmV0dXJuIHRoaXMucXh9c2V0IHRyZWVDb2xsYXBzZVBvbGljeSh0KXtjb25zdCBpPXRoaXMucXg7aSE9PXQmJih0IT09MSYmdCE9PTImJnQhPT0zJiZVLm4oXCJVbmtub3duIERpYWdyYW0udHJlZUNvbGxhcHNlUG9saWN5OiBcIit0KSx0aGlzLnF4PXQsdGhpcy50KFwidHJlZUNvbGxhcHNlUG9saWN5XCIsaSx0KSl9Z2V0IGlzQ29sbGFwc2luZ0V4cGFuZGluZygpe3JldHVybiB0aGlzLmgyfXNldCBpc0NvbGxhcHNpbmdFeHBhbmRpbmcodCl7dGhpcy5oMj10fWRSKCl7Y29uc3QgdD1uZXcgR01hcCxpPW5ldyBHTWFwO2Z1bmN0aW9uIGUocyl7Y29uc3Qgbj1zLnRvTG93ZXJDYXNlKCksbz1uZXcgTGlzdDt0LnNldChzLG8pLHQuc2V0KG4sbyksaS5zZXQocyxzKSxpLnNldChuLHMpfWUoXCJJbml0aWFsQW5pbWF0aW9uU3RhcnRpbmdcIiksZShcIkFuaW1hdGlvblN0YXJ0aW5nXCIpLGUoXCJBbmltYXRpb25GaW5pc2hlZFwiKSxlKFwiQmFja2dyb3VuZFNpbmdsZUNsaWNrZWRcIiksZShcIkJhY2tncm91bmREb3VibGVDbGlja2VkXCIpLGUoXCJCYWNrZ3JvdW5kQ29udGV4dENsaWNrZWRcIiksZShcIkNsaXBib2FyZENoYW5nZWRcIiksZShcIkNsaXBib2FyZFBhc3RlZFwiKSxlKFwiRG9jdW1lbnRCb3VuZHNDaGFuZ2VkXCIpLGUoXCJFeHRlcm5hbE9iamVjdHNEcm9wcGVkXCIpLGUoXCJHYWluZWRGb2N1c1wiKSxlKFwiSW5pdGlhbExheW91dENvbXBsZXRlZFwiKSxlKFwiTGF5b3V0Q29tcGxldGVkXCIpLGUoXCJMaW5rRHJhd25cIiksZShcIkxpbmtSZWxpbmtlZFwiKSxlKFwiTGlua1Jlc2hhcGVkXCIpLGUoXCJMb3N0Rm9jdXNcIiksZShcIk1vZGlmaWVkXCIpLGUoXCJPYmplY3RTaW5nbGVDbGlja2VkXCIpLGUoXCJPYmplY3REb3VibGVDbGlja2VkXCIpLGUoXCJPYmplY3RDb250ZXh0Q2xpY2tlZFwiKSxlKFwiUGFydENyZWF0ZWRcIiksZShcIlBhcnRSZXNpemVkXCIpLGUoXCJQYXJ0Um90YXRlZFwiKSxlKFwiU2VsZWN0aW9uTW92ZWRcIiksZShcIlNlbGVjdGlvbkNvcGllZFwiKSxlKFwiU2VsZWN0aW9uRGVsZXRpbmdcIiksZShcIlNlbGVjdGlvbkRlbGV0ZWRcIiksZShcIlNlbGVjdGlvbkdyb3VwZWRcIiksZShcIlNlbGVjdGlvblVuZ3JvdXBlZFwiKSxlKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIiksZShcIkNoYW5nZWRTZWxlY3Rpb25cIiksZShcIlN1YkdyYXBoQ29sbGFwc2VkXCIpLGUoXCJTdWJHcmFwaEV4cGFuZGVkXCIpLGUoXCJUZXh0RWRpdGVkXCIpLGUoXCJUaGVtZUNoYW5nZWRcIiksZShcIlRyZWVDb2xsYXBzZWRcIiksZShcIlRyZWVFeHBhbmRlZFwiKSxlKFwiVmlld3BvcnRCb3VuZHNDaGFuZ2VkXCIpLGUoXCJJbnZhbGlkYXRlRHJhd1wiKSx0aGlzLm8yPXQsdGhpcy5sMj1pfWpBKHQpe2NvbnN0IGk9dGhpcy5sMi5nZXQodCk7cmV0dXJuIGkhPT1udWxsP2k6dGhpcy5sMi5nZXQodC50b0xvd2VyQ2FzZSgpKX1pUCh0KXtsZXQgaT10aGlzLm8yLmdldCh0KTtpZihpIT09bnVsbClyZXR1cm4gaTtjb25zdCBlPXQudG9Mb3dlckNhc2UoKTtpZihpPXRoaXMubzIuZ2V0KGUpLGkhPT1udWxsKXJldHVybiBpO1UubihcIlVua25vd24gRGlhZ3JhbUV2ZW50IG5hbWU6IFwiK3QpfWFkZERpYWdyYW1MaXN0ZW5lcih0LGkpe1UuaSh0LFwic3RyaW5nXCIsRGlhZ3JhbSxcImFkZERpYWdyYW1MaXN0ZW5lcjpuYW1lXCIpLFUuUChpLERpYWdyYW0sXCJhZGREaWFncmFtTGlzdGVuZXI6bGlzdGVuZXJcIik7Y29uc3QgZT10aGlzLmlQKHQpO3JldHVybiBlIT09bnVsbCYmZS5hZGQoaSksdGhpc31yZW1vdmVEaWFncmFtTGlzdGVuZXIodCxpKXtVLmkodCxcInN0cmluZ1wiLERpYWdyYW0sXCJyZW1vdmVEaWFncmFtTGlzdGVuZXI6bmFtZVwiKSxVLlAoaSxEaWFncmFtLFwiYWRkRGlhZ3JhbUxpc3RlbmVyOmxpc3RlbmVyXCIpO2NvbnN0IGU9dGhpcy5pUCh0KTtlIT09bnVsbCYmZS5kZWxldGUoaSl9cmFpc2VEaWFncmFtRXZlbnQodCxpLGUpe3RoaXMuTyh0LGksZSl9Tyh0LGksZSl7RGVidWcmJlUuaSh0LFwic3RyaW5nXCIsRGlhZ3JhbSxcInJhaXNlRGlhZ3JhbUV2ZW50Om5hbWVcIik7Y29uc3Qgcz10aGlzLmlQKHQpLG49bmV3IERpYWdyYW1FdmVudDtuLmRpYWdyYW09dGhpcztjb25zdCBvPXRoaXMuakEodCk7byE9PW51bGwmJihuLm5hbWU9byksaSE9PXZvaWQgMCYmKG4uc3ViamVjdD1pKSxlIT09dm9pZCAwJiYobi5wYXJhbWV0ZXI9ZSk7Y29uc3Qgcj1zLmxlbmd0aDtpZihyPT09MSlzLmVsdCgwKShuKTtlbHNlIGlmKHIhPT0wKXtjb25zdCBsPXMudG9BcnJheSgpO2ZvcihsZXQgaD0wO2g8cjtoKyspe2NvbnN0IGY9bFtoXTtmKG4pfX19aXNVbm9jY3VwaWVkKHQsaSl7cmV0dXJuIHRoaXMuZ2V0UG9zaXRpb25zKCExLG51bGwsaXx8bnVsbCkuaXNVbm9jY3VwaWVkKHQueCx0LnksdC53aWR0aCx0LmhlaWdodCl9Y29tcHV0ZU9jY3VwaWVkQXJlYSh0KXtyZXR1cm4gdGhpcy5pc1ZpcnR1YWxpemVkP3RoaXMudmlld3BvcnRCb3VuZHMuY29weSgpOnRoaXMucmE/dGhpcy5IQSh0KTp0LmModGhpcy5kb2N1bWVudEJvdW5kcyl9Z2V0UG9zaXRpb25zKHQsaSxlKXtsZXQgcz10aGlzLlpsO3M9PT1udWxsJiYodGhpcy5abD1zPW5ldyBQb3NpdGlvbkFycmF5KHRoaXMuYXZvaWRhbmNlQ2VsbFNpemUpKTtsZXQgbj1pO2lmKHMuVm98fHMud2EhPT1ufHxzLmVQIT09ZSl7aWYocy5zUD1NYXRoLm1heChzLlpmKzEsTWF0aC5mbG9vcih0aGlzLmF2b2lkYW5jZUxpbWl0L3RoaXMuYXZvaWRhbmNlQ2VsbFNpemUud2lkdGgpKSxzLm5QPU1hdGgubWF4KHMuWmYrMSxNYXRoLmZsb29yKHRoaXMuYXZvaWRhbmNlTGltaXQvdGhpcy5hdm9pZGFuY2VDZWxsU2l6ZS5oZWlnaHQpKSxuIT09bnVsbCYmKG49dGhpcy5mTChuKSksbj09PW51bGwpe2NvbnN0IG89UmVjdC5hKCk7dGhpcy5jb21wdXRlT2NjdXBpZWRBcmVhKG8pLG8uaW5mbGF0ZSgxMDAsMTAwKSxzLlgxKG8pO2NvbnN0IHI9dGhpcy5ub2Rlcztmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlLGg9bC5sYXllcjtoPT09bnVsbHx8IWgudmlzaWJsZXx8aC5pc1RlbXBvcmFyeXx8dGhpcy5vUChsLGUsbyl9UmVjdC5vKG8pfWVsc2V7aWYobi5tZW1iZXJQYXJ0cy5jb3VudD4wKXtjb25zdCBsPXRoaXMuY29tcHV0ZVBhcnRzQm91bmRzKG4ubWVtYmVyUGFydHMsITEpO2wuaW5mbGF0ZSgyMCwyMCkscy5YMShsKX1jb25zdCBvPVJlY3QuYSgpLHI9bi5tZW1iZXJQYXJ0cztmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO2wgaW5zdGFuY2VvZiBOb2RlJiZ0aGlzLm9QKGwsZSxvKX1SZWN0Lm8obyl9cy53YT1uLHMuZVA9ZSxzLlZvPSExfWVsc2UgdCYmcy5jTCgpO3JldHVybiBzfWdldCBhdm9pZGFuY2VDZWxsU2l6ZSgpe3JldHVybiB0aGlzLk0yfXNldCBhdm9pZGFuY2VDZWxsU2l6ZSh0KXt0aGlzLlpsPW51bGwsdGhpcy5NMj1uZXcgU2l6ZShNYXRoLm1heCgxLHQud2lkdGgpLE1hdGgubWF4KDEsdC5oZWlnaHQpKX1nZXQgYXZvaWRhbmNlTGltaXQoKXtyZXR1cm4gdGhpcy5QMn1zZXQgYXZvaWRhbmNlTGltaXQodCl7dGhpcy5QMj1NYXRoLm1heCgxLHQpfWZMKHQpe3JldHVybiB0LmNhbkF2b2lkKCk/dDp0LmNvbnRhaW5pbmdHcm91cCE9PW51bGw/dGhpcy5mTCh0LmNvbnRhaW5pbmdHcm91cCk6bnVsbH1vUCh0LGksZSl7aWYodD09PWl8fCF0LmlzVmlzaWJsZSgpKXJldHVybjtjb25zdCBzPXQuY2FuQXZvaWQoKTtpZihzKXtjb25zdCBuPXQuZ2V0QXZvaWRhYmxlUmVjdChlKTt0aGlzLlpsLldSKG4ueCxuLnksbi53aWR0aCxuLmhlaWdodCl9aWYodCBpbnN0YW5jZW9mIEdyb3VwJiYoIXN8fHQuYXZvaWRhYmxlTWVtYmVycykpe2NvbnN0IG49dC5tZW1iZXJQYXJ0cztmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28gaW5zdGFuY2VvZiBOb2RlJiZ0aGlzLm9QKG8saSxlKX19fXJQKHQpe3RoaXMuWmwhPT1udWxsJiYhdGhpcy5abC5WbyYmKHQ9PT12b2lkIDB8fHQuY2FuQXZvaWQoKSkmJih0aGlzLlpsLlZvPSEwKX1nZXQgYXV0b1Njcm9sbEludGVydmFsKCl7cmV0dXJuIHRoaXMuS219c2V0IGF1dG9TY3JvbGxJbnRlcnZhbCh0KXtjb25zdCBpPXRoaXMuS207VS5yKHQsRGlhZ3JhbSxcImF1dG9TY3JvbGxJbnRlcnZhbFwiKSxpIT09dCYmKHRoaXMuS209dCx0aGlzLnQoXCJhdXRvU2Nyb2xsSW50ZXJ2YWxcIixpLHQpKX1nZXQgYXV0b1Njcm9sbFJlZ2lvbigpe3JldHVybiB0aGlzLlVtfXNldCBhdXRvU2Nyb2xsUmVnaW9uKHQpe3R5cGVvZiB0PT1cIm51bWJlclwiP3Q9bmV3IE1hcmdpbih0KTpVLmUodCxNYXJnaW4sRGlhZ3JhbSxcImF1dG9TY3JvbGxSZWdpb25cIik7Y29uc3QgaT10aGlzLlVtO2kuZXF1YWxzKHQpfHwodD10Lk4oKSx0aGlzLlVtPXQsdGhpcy5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKSx0aGlzLnQoXCJhdXRvU2Nyb2xsUmVnaW9uXCIsaSx0KSl9ZG9BdXRvU2Nyb2xsKHQpe3RoaXMudm0uYyh0KSx0aGlzLmNvbXB1dGVBdXRvU2Nyb2xsUG9zaXRpb24odGhpcy52bSkuZXF1YWxzQXBwcm94KHRoaXMucG9zaXRpb24pP3RoaXMuc3RvcEF1dG9TY3JvbGwoKTp0aGlzLnVMKCl9dUwoKXtpZih0aGlzLllmIT09LTEpcmV0dXJuO2NvbnN0IHQ9dGhpcy5LbSxpPXRoaXM7dGhpcy5ZZj1VLmxyKCgpPT57aWYoaS5ZZj09PS0xfHwoaS5zdG9wQXV0b1Njcm9sbCgpLGkubGFzdElucHV0LmV2ZW50PT09bnVsbCkpcmV0dXJuO2NvbnN0IHM9aS5jb21wdXRlQXV0b1Njcm9sbFBvc2l0aW9uKGkudm0pO2lmKHMuZXF1YWxzQXBwcm94KGkucG9zaXRpb24pKXJldHVybjtpLnBvc2l0aW9uPXMsaS5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludD1pLnRyYW5zZm9ybVZpZXdUb0RvYyhpLnZtKSxpLmRvTW91c2VNb3ZlKCksaS5yYT0hMDtjb25zdCBuPVJlY3QuYSgpO2kuY29tcHV0ZUJvdW5kcyhuKSxuLnVuaW9uUmVjdChpLmRvY3VtZW50Qm91bmRzKSxpLnJMKG4pLFJlY3QubyhuKSxpLlVlPSEwLGkubWF5YmVVcGRhdGUoKSxpLnVMKCl9LHQpfXN0b3BBdXRvU2Nyb2xsKCl7dGhpcy5ZZiE9PS0xJiYoVS5CZyh0aGlzLllmKSx0aGlzLllmPS0xKX1jb21wdXRlQXV0b1Njcm9sbFBvc2l0aW9uKHQpe2xldCBpPXRoaXMucG9zaXRpb247Y29uc3QgZT10aGlzLlVtO2lmKGUudG9wPD0wJiZlLmxlZnQ8PTAmJmUucmlnaHQ8PTAmJmUuYm90dG9tPD0wKXJldHVybiBpO2NvbnN0IHM9dGhpcy52aWV3cG9ydEJvdW5kcyxuPXRoaXMuc2NhbGUsbz1SZWN0LksoMCwwLHMud2lkdGgqbixzLmhlaWdodCpuKSxyPVBvaW50LksoMCwwKTtpZih0Lng+PW8ueCYmdC54PG8ueCtlLmxlZnQmJnRoaXMuYWxsb3dIb3Jpem9udGFsU2Nyb2xsKXtsZXQgbD1NYXRoLm1heCh0aGlzLnNjcm9sbEhvcml6b250YWxMaW5lQ2hhbmdlLDEpO2w9bHwwLHIueC09bCx0Lng8by54K2UubGVmdC8yJiYoci54LT1sKSx0Lng8by54K2UubGVmdC80JiYoci54LT00KmwpfWVsc2UgaWYodC54PD1vLngrby53aWR0aCYmdC54Pm8ueCtvLndpZHRoLWUucmlnaHQmJnRoaXMuYWxsb3dIb3Jpem9udGFsU2Nyb2xsKXtsZXQgbD1NYXRoLm1heCh0aGlzLnNjcm9sbEhvcml6b250YWxMaW5lQ2hhbmdlLDEpO2w9bHwwLHIueCs9bCx0Lng+by54K28ud2lkdGgtZS5yaWdodC8yJiYoci54Kz1sKSx0Lng+by54K28ud2lkdGgtZS5yaWdodC80JiYoci54Kz00KmwpfWlmKHQueT49by55JiZ0Lnk8by55K2UudG9wJiZ0aGlzLmFsbG93VmVydGljYWxTY3JvbGwpe2xldCBsPU1hdGgubWF4KHRoaXMuc2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlLDEpO2w9bHwwLHIueS09bCx0Lnk8by55K2UudG9wLzImJihyLnktPWwpLHQueTxvLnkrZS50b3AvNCYmKHIueS09NCpsKX1lbHNlIGlmKHQueTw9by55K28uaGVpZ2h0JiZ0Lnk+by55K28uaGVpZ2h0LWUuYm90dG9tJiZ0aGlzLmFsbG93VmVydGljYWxTY3JvbGwpe2xldCBsPU1hdGgubWF4KHRoaXMuc2Nyb2xsVmVydGljYWxMaW5lQ2hhbmdlLDEpO2w9bHwwLHIueSs9bCx0Lnk+by55K28uaGVpZ2h0LWUuYm90dG9tLzImJihyLnkrPWwpLHQueT5vLnkrby5oZWlnaHQtZS5ib3R0b20vNCYmKHIueSs9NCpsKX1yZXR1cm4gci5lcXVhbHNBcHByb3goUG9pbnQuTm8pfHwoaT1uZXcgUG9pbnQoaS54K3IueC9uLGkueStyLnkvbikpLFJlY3QubyhvKSxQb2ludC5vKHIpLGl9bWFrZVN2Zyh0KXt0aGlzLl9sLmhhcyhcIlNWR1wiKXx8dGhpcy5hZGRSZW5kZXJlcihcIlNWR1wiLG5ldyBTVkdTdXJmYWNlKHRoaXMscm9vdC5kb2N1bWVudCkpO2NvbnN0IGk9bmV3IFNWR1N1cmZhY2UodGhpcyxyb290LmRvY3VtZW50LCEwKTt0PT09dm9pZCAwJiYodD17fSk7Y29uc3QgZT10aGlzO2Z1bmN0aW9uIHMobixvKXtjb25zdCByPWUuZEwobixcIlNWR1wiLGkpLGw9ciE9PW51bGw/ci5zdmc6bnVsbDtyZXR1cm4gVS5ydChvKT8obyhsKSxudWxsKTpsfXJldHVybiB0aGlzLmdMKHMsdCl9bWFrZVNWRyh0KXtyZXR1cm4gdGhpcy5tYWtlU3ZnKHQpfWFkZFJlbmRlcmVyKHQsaSl7dGhpcy5fbC5zZXQodCxpKX1yZW1vdmVSZW5kZXJlcih0KXt0aGlzLl9sLmRlbGV0ZSh0KX1jYWNoZUdyb3VwRXh0ZXJuYWxMaW5rcyh0KXt0aGlzLkUyPXQsdHx8dGhpcy5ub2Rlcy5lYWNoKGk9PntpIGluc3RhbmNlb2YgR3JvdXAmJihpLmcwPW51bGwpfSl9Z0wodCxpKXtjb25zdCBlPWkuY2FsbGJhY2s7bGV0IHM9ITA7Y29uc3Qgbz10aGlzLnRoLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KWlmKCFvLnZhbHVlWzBdLmduKXtzPSExO2JyZWFrfWlmKCFVLnJ0KGUpfHxzKXJldHVybiB0KGksZSx0aGlzKTtjb25zdCByPXRoaXM7ZnVuY3Rpb24gbCgpe2NvbnN0IGE9K25ldyBEYXRlO2ZvcihzPSEwLG8ucmVzZXQoKTtvLm5leHQoKTspaWYoIW8udmFsdWVbMF0uZ24pe3M9ITE7YnJlYWt9aWYoc3x8YS1mPmgpe3QoaSxlLHIpO3JldHVybn1yb290LnJlcXVlc3RBbmltYXRpb25GcmFtZShsKX1jb25zdCBoPWkuY2FsbGJhY2tUaW1lb3V0fHwzMDAsZj0rbmV3IERhdGU7cmV0dXJuIHJvb3QucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpPT5sKCkpLG51bGx9bWFrZUltYWdlKHQpe3JldHVybiBEaWFncmFtLmlzVXNpbmdET00oKT8odD09PXZvaWQgMCYmKHQ9e30pLHQucmV0dXJuVHlwZT1cIkltYWdlXCIsdGhpcy5tYWtlSW1hZ2VEYXRhKHQpKTpudWxsfW1ha2VJbWFnZURhdGEodCl7cmV0dXJuIHQ9PT12b2lkIDAmJih0PXt9KSx0aGlzLmdMKHRoaXMualIsdCl9c3RhdGljIGltZz1cImltYWdlXCI7alIodCxpLGUpe2NvbnN0IHM9ZS5kTCh0LFwiY2FudmFzXCIsbnVsbCk7aWYocz09PW51bGwpcmV0dXJuIG51bGw7Y29uc3Qgbj1zLnouY2FudmFzO2xldCBvPW51bGw7aWYobiE9PW51bGwpe2xldCByPXQucmV0dXJuVHlwZTtzd2l0Y2gocj09PXZvaWQgMD9yPVwic3RyaW5nXCI6cj1yLnRvTG93ZXJDYXNlKCkscil7Y2FzZSBEaWFncmFtLmltZytcImRhdGFcIjpvPXMuZ2V0SW1hZ2VEYXRhKDAsMCxuLndpZHRoLG4uaGVpZ2h0KTticmVhaztjYXNlIERpYWdyYW0uaW1nOmNvbnN0IGg9KHQuZG9jdW1lbnR8fGRvY3VtZW50KS5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO2guc3JjPW4udG9EYXRhVVJMKHQudHlwZSx0LmRldGFpbHMpLG89aDticmVhaztjYXNlXCJibG9iXCI6e2NvbnN0IGY9bjtyZXR1cm4gVS5ydChpKXx8KG89XCJcIixVLm4oJ0Vycm9yOiBEaWFncmFtLm1ha2VJbWFnZURhdGEgY2FsbGVkIHdpdGggXCJyZXR1cm5UeXBlOiB0b0Jsb2JcIiwgYnV0IG5vIHJlcXVpcmVkIFwiY2FsbGJhY2tcIiBmdW5jdGlvbiBwcm9wZXJ0eSBkZWZpbmVkLicpKSxVLnJ0KGYudG9CbG9iKT8oZi50b0Jsb2IoaSx0LnR5cGUsdC5kZXRhaWxzKSxcInRvQmxvYlwiKTooaShudWxsKSxudWxsKX1jYXNlXCJzdHJpbmdcIjpkZWZhdWx0Om89bi50b0RhdGFVUkwodC50eXBlLHQuZGV0YWlscyl9fXJldHVybiBVLnJ0KGkpPyhpKG8pLG51bGwpOm99c3RhdGljIG1MPSExO2RMKHQsaSxlKXtpZih0aGlzLmFuaW1hdGlvbk1hbmFnZXIuc3RvcEFuaW1hdGlvbigpLHRoaXMubWF5YmVVcGRhdGUoKSx0aGlzLnd0PT09bnVsbClyZXR1cm4gbnVsbDtVLlcodCl8fFUubihcInByb3BlcnRpZXMgYXJndW1lbnQgbXVzdCBiZSBhbiBPYmplY3QuXCIpO2xldCBuPSExLG89dC5zaXplfHxudWxsLHI9dC5zY2FsZXx8bnVsbDt0LnNjYWxlIT09dm9pZCAwJiZpc05hTih0LnNjYWxlKSYmKHI9XCJOYU5cIik7bGV0IGw9dC5tYXhTaXplO3QubWF4U2l6ZT09PXZvaWQgMCYmKG49ITAsaT09PVwiU1ZHXCI/bD1uZXcgU2l6ZSgxLzAsMS8wKTpsPW5ldyBTaXplKDJlMywyZTMpKTtjb25zdCBoPXQucG9zaXRpb258fG51bGw7bGV0IGY9dC5wYXJ0c3x8bnVsbDtBcnJheS5pc0FycmF5KGYpJiYoZj1uZXcgTGlzdChmKSk7bGV0IGE9dC5wYWRkaW5nPT09dm9pZCAwPzE6dC5wYWRkaW5nO2NvbnN0IGM9dC5iYWNrZ3JvdW5kfHxudWxsO2xldCB1PXQub21pdFRlbXBvcmFyeTt1PT09dm9pZCAwJiYodT0hMCk7Y29uc3QgZD10LmRvY3VtZW50fHxkb2N1bWVudCxtPXQuZWxlbWVudEZpbmlzaGVkfHxudWxsO2xldCBnPXQuc2hvd1RlbXBvcmFyeTtnPT09dm9pZCAwJiYoZz0hdSk7bGV0IHA9dC5zaG93R3JpZDtwPT09dm9pZCAwJiYocD1nKSxvIT09bnVsbCYmaXNOYU4oby53aWR0aCkmJmlzTmFOKG8uaGVpZ2h0KSYmKG89bnVsbCksdHlwZW9mIGE9PVwibnVtYmVyXCI/YT1uZXcgTWFyZ2luKGEpOmEgaW5zdGFuY2VvZiBNYXJnaW58fFUubihcIk1ha2VJbWFnZSBwYWRkaW5nIG11c3QgYmUgYSBNYXJnaW4gb3IgYSBudW1iZXIuXCIpLGEubGVmdD1NYXRoLm1heChhLmxlZnQsMCksYS5yaWdodD1NYXRoLm1heChhLnJpZ2h0LDApLGEudG9wPU1hdGgubWF4KGEudG9wLDApLGEuYm90dG9tPU1hdGgubWF4KGEuYm90dG9tLDApLHRoaXMuc2kuY2xlYXJDb250ZXh0Q2FjaGUoITApO2NvbnN0IHc9bmV3IENhbnZhc1N1cmZhY2UobnVsbCxkLHZvaWQgMCwhMCkseD13LmNpO2lmKCEob3x8cnx8Znx8aCkpcmV0dXJuIHcud2lkdGg9dGhpcy5QdCtNYXRoLmNlaWwoYS5sZWZ0K2EucmlnaHQpLHcuaGVpZ2h0PXRoaXMuTnQrTWF0aC5jZWlsKGEudG9wK2EuYm90dG9tKSxpPT09XCJTVkdcIj9lPT09bnVsbD9udWxsOihlLnJlc2l6ZSh3LndpZHRoLHcuaGVpZ2h0LHcud2lkdGgsdy5oZWlnaHQpLGUuWnI9ZCxlLiR1PW0sdGhpcy5FMShlLmNpLGEsbmV3IFNpemUody53aWR0aCx3LmhlaWdodCksdGhpcy5vdCx0aGlzLmd0LGYsYyxnLHApLGUuY2kpOih0aGlzLnF1PSExLHRoaXMuRTEoeCxhLG5ldyBTaXplKHcud2lkdGgsdy5oZWlnaHQpLHRoaXMub3QsdGhpcy5ndCxmLGMsZyxwKSx0aGlzLnF1PSEwLHcuY2kpO2NvbnN0IGs9dGhpcy4kbSxiPXRoaXMuZG9jdW1lbnRCb3VuZHMuY29weSgpO2lmKGIuc3VidHJhY3RNYXJnaW4odGhpcy5laSksZyl7Y29uc3QgTD10aGlzLld0LmgsRD1MLmxlbmd0aDtmb3IobGV0IEY9MDtGPEQ7RisrKXtjb25zdCBJPUxbRl07aWYoIUkudmlzaWJsZXx8IUkuaXNUZW1wb3JhcnkpY29udGludWU7Y29uc3QgUj1JLkZ0LmgsTz1SLmxlbmd0aDtmb3IobGV0IFk9MDtZPE87WSsrKXtjb25zdCBLPVJbWV07aWYoIUsuaXNJbkRvY3VtZW50Qm91bmRzfHwhSy5pc1Zpc2libGUoKSljb250aW51ZTtjb25zdCBCPUsuYWN0dWFsQm91bmRzO0IuaXNSZWFsKCkmJmIudW5pb25SZWN0KEIpfX19bGV0IFM9bmV3IFBvaW50KGIueCxiLnkpO2lmKGYhPT1udWxsKXtjb25zdCBMPW5ldyBSZWN0KDAsMCwwLDApO2xldCBEPSEwO2NvbnN0IEY9Zi5pdGVyYXRvcjtmb3IoRi5yZXNldCgpO0YubmV4dCgpOyl7Y29uc3QgST1GLnZhbHVlO2lmKCEoSSBpbnN0YW5jZW9mIFBhcnQpKWNvbnRpbnVlO2NvbnN0IFI9SS5sYXllcjtpZihSIT09bnVsbCYmIVIudmlzaWJsZXx8UiE9PW51bGwmJiFnJiZSLmlzVGVtcG9yYXJ5fHwhSS5pc1Zpc2libGUoKSljb250aW51ZTtjb25zdCBPPUkuYWN0dWFsQm91bmRzO08uaXNSZWFsKCkmJihEPyhEPSExLEwuYyhPKSk6TC51bmlvblJlY3QoTykpfWIud2lkdGg9TC53aWR0aCxiLmhlaWdodD1MLmhlaWdodCxTLng9TC54LFMueT1MLnl9aCE9PW51bGwmJmguaXNSZWFsKCkmJihTPWgscnx8KHI9aykpO2xldCBNPTAsQT0wO2EhPT1udWxsJiYoTT1hLmxlZnQrYS5yaWdodCxBPWEudG9wK2EuYm90dG9tKTtsZXQgQz0wLFA9MDtvIT09bnVsbCYmKEM9by53aWR0aCxQPW8uaGVpZ2h0LGlzRmluaXRlKEMpJiYoQz1NYXRoLm1heCgwLEMtTSkpLGlzRmluaXRlKFApJiYoUD1NYXRoLm1heCgwLFAtQSkpKTtsZXQgTj0wLFQ9MDtpZihvIT09bnVsbCYmciE9PW51bGw/KHI9PT1cIk5hTlwiJiYocj1rKSxvLmlzUmVhbCgpPyhOPUMsVD1QKTppc05hTihQKT8oTj1DLFQ9Yi5oZWlnaHQqcik6KE49Yi53aWR0aCpyLFQ9UCkpOm8hPT1udWxsP28uaXNSZWFsKCk/KHI9TWF0aC5taW4oQy9iLndpZHRoLFAvYi5oZWlnaHQpLE49QyxUPVApOmlzTmFOKFApPyhyPUMvYi53aWR0aCxOPUMsVD1iLmhlaWdodCpyKToocj1QL2IuaGVpZ2h0LE49Yi53aWR0aCpyLFQ9UCk6ciE9PW51bGw/cj09PVwiTmFOXCImJmwuaXNSZWFsKCk/KHI9TWF0aC5taW4oKGwud2lkdGgtTSkvYi53aWR0aCwobC5oZWlnaHQtQSkvYi5oZWlnaHQpLHI+az8ocj1rLE49Yi53aWR0aCxUPWIuaGVpZ2h0KTooTj1sLndpZHRoLFQ9bC5oZWlnaHQpKTooTj1iLndpZHRoKnIsVD1iLmhlaWdodCpyKToocj1rLE49Yi53aWR0aCxUPWIuaGVpZ2h0KSxhIT09bnVsbD8oTis9TSxUKz1BKTphPW5ldyBNYXJnaW4oMCksbCE9PW51bGwpe2xldCBMPWwud2lkdGgsRD1sLmhlaWdodDtpIT09XCJTVkdcIiYmbiYmIURpYWdyYW0ubUwmJkRlYnVnJiYoTj5MfHxUPkQpJiYoVS5udChcIkRpYWdyYW0ubWFrZUltYWdlKGRhdGEpOiBEaWFncmFtIHdpZHRoIG9yIGhlaWdodCBpcyBsYXJnZXIgdGhhbiB0aGUgZGVmYXVsdCBtYXggc2l6ZS4gKFwiK01hdGguY2VpbChOKStcInhcIitNYXRoLmNlaWwoVCkrXCIgdnMgMjAwMHgyMDAwKSBDb25zaWRlciBpbmNyZWFzaW5nIHRoZSBtYXggc2l6ZS5cIiksRGlhZ3JhbS5tTD0hMCksaXNOYU4oTCkmJihMPTJlMyksaXNOYU4oRCkmJihEPTJlMyksaXNGaW5pdGUoTCkmJihOPU1hdGgubWluKE4sTCkpLGlzRmluaXRlKEQpJiYoVD1NYXRoLm1pbihULEQpKX1yZXR1cm4gdy53aWR0aD1NYXRoLmNlaWwoTiksdy5oZWlnaHQ9TWF0aC5jZWlsKFQpLGk9PT1cIlNWR1wiP2U9PT1udWxsP251bGw6KGUucmVzaXplKHcud2lkdGgsdy5oZWlnaHQsdy53aWR0aCx3LmhlaWdodCksZS5acj1kLGUuJHU9bSx0aGlzLkUxKGUuY2ksYSxuZXcgU2l6ZShNYXRoLmNlaWwoTiksTWF0aC5jZWlsKFQpKSxyLFMsZixjLGcscCksZS5jaSk6KHRoaXMucXU9ITEsdGhpcy5FMSh4LGEsbmV3IFNpemUoTWF0aC5jZWlsKE4pLE1hdGguY2VpbChUKSkscixTLGYsYyxnLHApLHRoaXMucXU9ITAsdy5jaSl9c3RhdGljIHZ1PW51bGw7c3RhdGljIHBMPVwiNWRhNzNjODBhMzY1NTVkNDAzOGU0OTcyMTg3YzNjYWU1MWZkMjJcIjtzdGF0aWMga3c9ITE7c3RhdGljIFprPSgpPT57aWYoRGlhZ3JhbS5wTFs1XT09PXZvaWQgMCYmKFRyYW5zZm9ybS5wcm90b3R5cGUuaXM9VHJhbnNmb3JtLnByb3RvdHlwZS5UdyksIURpYWdyYW0uaXNVc2luZ0RPTSgpKXJldHVybjtjb25zdCB0PVUuZHMoXCJjYW52YXNcIiksaT10LmdldENvbnRleHQoXCIyZFwiKSxlPVUuT3MoXCI3Y2ExMWFiZmQwMjIwMjg4NDZcIik7aVtlXT1VLk9zKFwiMzk4YzM1OTdjMDEyMzhcIik7Y29uc3Qgcz1cIjdjYTExYWJmZDczMzAzOTBcIixuPVtEaWFncmFtLnBMLFUua3crXCI0YWU2MjQ3NTkwZGE0YmIyMWMzMjRiYTNhODRlMzg1Nzc2XCIsVHJhbnNmb3JtLlprK1wiZmIyMzZjZGZkYTVkZTE0YzEzNGJhMWE5NWEyZDRjN2NjNmY5M2MxMzg3XCIsR2VvLnphXSxvPTEwLHI9MDtmb3IobGV0IGw9MTtsPDU7bCsrKWlbVS5PcyhzKV0oVS5PcyhuW2wtMV0pLG8sbCoxNStyKTtpW2VdPVUuT3MoXCIzOWYwNDZlYmIzNmU0YlwiKTtmb3IobGV0IGw9MTtsPDU7bCsrKWlbVS5PcyhzKV0oVS5PcyhuW2wtMV0pLG8sbCoxNStyKTsobi5sZW5ndGghPT00fHxuWzBdWzBdIT09XCI1XCJ8fG5bM11bMF0hPT1cIjdcIikmJihUcmFuc2Zvcm0ucHJvdG90eXBlLmlzPVRyYW5zZm9ybS5wcm90b3R5cGUuVHcpLERpYWdyYW0udnU9dH19Y2xhc3MgRGlhZ3JhbUhlbHBlcnt5TDt3TDtsUDtEZTtjb25zdHJ1Y3Rvcih0KXtpZih0aGlzLnlMPW51bGwsdGhpcy53TD1cIjYzYWQwNWJiZTIzYTE3ODY0NjhhNGM3NDFiNmQyXCIsdGhpcy5sUD1cIkBvbnpcIix0aGlzLndMPT09dGhpcy5fdGspe3RoaXMubFA9ITAsdGhpcy5EZT10aGlzLmxQO3JldHVybn10aGlzLkRlPW51bGx9dlIodCxpKXtsZXQgZT1cImZcIjtjb25zdCBzPXJvb3RbVS5PcyhcIjc2YTcxNWIyZjczZjE0OGFcIildW1UuT3MoXCI3MmJhMTNiNVwiKV18fFwiXCIsbj1VLk9zO2lmKHRoaXMuRGU9ITAsIURpYWdyYW0uaXNVc2luZ0RPTSgpKXJldHVybjtsZXQgbz1EaWFncmFtW24oXCI3NmExMTViNmVkMjUxZWFmNDY5MlwiKV07aWYoIW8pe2NvbnN0IGw9c1tuKFwiNzZhZDE4YjRmNzNlXCIpXTtmb3IobGV0IGY9c1tuKFwiNzNhNjEyYjZmYjE5MWRcIildKG4oXCIzNWU3XCIpKSsyO2Y8bDtmKyspZSs9c1tmXTtjb25zdCBoPWVbbihcIjczYTYxMmI2ZmIxOTFkXCIpXShuKFwiN2RhNzFjYTBhZDM4MWU5MFwiKSk7dGhpcy5EZT0hKGg+PTAmJmg8ZVtuKFwiNzNhNjEyYjZmYjE5MWRcIildKG4oXCIzNVwiKSkpO3JldHVybn1jb25zdCByPURpYWdyYW0uUTIuaXRlcmF0b3I7Zm9yKDtyLm5leHQoKTspe289ci52YWx1ZTtjb25zdCBsPW4obykuc3BsaXQobihcIjM5ZTlcIikpO2lmKGwubGVuZ3RoPDYpcmV0dXJuO2NvbnN0IGg9bihsWzFdKS5zcGxpdChcIi5cIik7aWYobFs0XSE9PVwiN2RhNzFjYTBcIilyZXR1cm47Y29uc3QgZj1uKFVbbihcIjZjYWUxOVwiKV0pLnNwbGl0KFwiLlwiKTtpZighKGhbMF0+ZlswXXx8aFswXT09PWZbMF0mJmhbMV0+PWZbMV0pKWNvbnRpbnVlO2NvbnN0IGE9XCI3M2E2MTJiNmZiMTkxZFwiLGM9cm9vdFtuKFwiNzRhOTAwYmFlNDM3MGY4YjUxXCIpXVtuKFwiNmZiYjEzYTFjMjMxMWU4YTU3XCIpXS50b0xvd2VyQ2FzZSgpLHU9Y1tuKGEpXShuKFwiM2FhZDFhYjZlMDIyMDk4YjRkYzRcIikpLGQ9bihsWzJdKTtpZih1Pi0xKXtjb25zdCBQPWNbbihhKV0oZC50b0xvd2VyQ2FzZSgpK1wiL1wiKTtpZih0aGlzLkRlPSEoUD4tMSYmUDx1KSwhdGhpcy5EZSlyZXR1cm59Y29uc3QgbT1zW24oXCI3NmFkMThiNGY3M2VcIildO2ZvcihsZXQgUD1zW24oYSldKG4oXCIzNWU3XCIpKSsyO1A8bTtQKyspZSs9c1tQXTtsZXQgZz1lW24oYSldKGQpO2lmKGc8MCYmZCE9PW4oXCI3ZGE3MWNhMGFkMzgxZTkwXCIpJiYoZz1lW24oYSldKG4oXCI3NmE3MTViMmVmM2UxNDk3NTdcIikpKSxnPDAmJihnPWVbbihhKV0obihcIjc2YTcxNWIyZWYzZTE0OTc1N1wiKSkpLGc8MCYmKGc9ZVtuKGEpXShuKFwiMmJmYTQxZmRiMzc4NGJjYTEyXCIpKSksZzwwJiYoZz1zW24oYSldKG4oXCI3YmFhMTlhNmY3NmMxOTg4NDI4NTU0XCIpKSksZzwwJiYoZz1zW24oYSldKG4oXCI3ZWE5MDJiMmI5MjIxZTljNTdjNDU3NjcxOTY1NjZcIikpKSx0aGlzLkRlPSEoZz49MCYmZzxlW24oYSldKG4oXCIzNVwiKSl8fGVbbihhKV0obihcIjM1XCIpKT09PS0xKSwhdGhpcy5EZXx8c1tuKGEpXShuKFwiN2ZiMDAyYjZlZDI1MTI4YjRkYTI1YjJlXCIpKSYmKHRoaXMuRGU9IShzW24oYSldKGQpPi0xKSwhdGhpcy5EZSkpcmV0dXJuO2NvbnN0IHA9cm9vdFtVLk9zKFwiNzZhNzE1YjJmNzNmMTQ4YVwiKV1bVS5PcyhcIjY5YWQxN2ExZTAzZVwiKV0sdz1wW24oYSldKG4oXCI3ZmIwMDJiNmVkMjUxMjhiNGRhMjViMmVcIikpO2lmKHc+LTEmJih0aGlzLkRlPSEocFtuKGEpXShkKT53KSwhdGhpcy5EZSkpcmV0dXJuO2NvbnN0IHg9ZDtpZih4WzBdIT09XCIjXCIpY29udGludWU7Y29uc3Qgaz1VLmRzKFwiZGl2XCIpO2xldCBiPWxbMF0ucmVwbGFjZSgvW0EtWmEtel0vZyxcIlwiKTtmb3IoO2IubGVuZ3RoPDQ7KWIrPVwiOVwiO2NvbnN0IFM9YjtiPWIuc3Vic3RyaW5nKGIubGVuZ3RoLTQpO2xldCBNPVwiXCI7Y29uc3QgQT1bXCJnc2hcIixcImdzZlwiXSxDPVtcIkhlYWRlclwiLFwiQmFja2dyb3VuZFwiLFwiRGlzcGxheVwiLFwiRmVlZGJhY2tcIl07aWYoTSs9QVtwYXJzZUludChiLnN1YnN0cmluZygwLDEpLDEwKSUyXSxNKz1DW3BhcnNlSW50KGIuc3Vic3RyaW5nKDAsMSksMTApJTRdLGtbbihcIjc5YTQxN2EwZjAxODFhODk0NlwiKV09TSxyb290LmRvY3VtZW50W24oXCI3OGE3MTJhYVwiKV0pe3Jvb3QuZG9jdW1lbnRbbihcIjc4YTcxMmFhXCIpXVtuKFwiN2JiODA2YjZlZDMyMzg4YzRhODc1YlwiKV0oayk7Y29uc3QgUD1yb290LmdldENvbXB1dGVkU3R5bGUoaykuZ2V0UHJvcGVydHlWYWx1ZShuKFwiNzhhNzA0YjdlNjI0NTY5MDRjOWIxMjcwMWI2NTMyYThcIikpLE49cm9vdC5nZXRDb21wdXRlZFN0eWxlKGspLmdldFByb3BlcnR5VmFsdWUobihcIjc1YjgxN2IwZWEyMjAyXCIpKTtpZihyb290LmRvY3VtZW50W24oXCI3OGE3MTJhYVwiKV1bbihcIjY4YWQxYmJjZjUzMzM4OGM0YTg3NWJcIildKGspLCFQKWNvbnRpbnVlO2NvbnN0IFQ9cm9vdFtuKFwiNzdhOTAyYjBlYjFiMWU4MDRhOGFcIildLEw9XCIwLlwiK3BhcnNlSW50KFMsMTApJTEwMDtpZihOPT09THx8UC5pbmRleE9mKHBhcnNlSW50KHhbMV0reFsyXSwxNikpIT09LTEmJlAuaW5kZXhPZihwYXJzZUludCh4WzNdK3hbNF0sMTYpKSE9PS0xKXt0aGlzLkRlPSExO3JldHVybn1lbHNlIGlmKFQmJlQobihcIjMyYWUxOWExZTAzMzFmYzk0MDg0NTM3YzA2N2E2N2ZhNTlmMTM4NmI4OWQwMDZcIikpLm1hdGNoZXMpe009XCIuXCIrTTtmb3IobGV0IEQ9MDtEPGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDtEKyspe2NvbnN0IEY9ZG9jdW1lbnQuc3R5bGVTaGVldHNbRF0ucnVsZXN8fGRvY3VtZW50LnN0eWxlU2hlZXRzW0RdLmNzc1J1bGVzO2Zvcihjb25zdCBJIGluIEYpaWYoTT09PUZbSV0uc2VsZWN0b3JUZXh0KXt0aGlzLkRlPSExO3JldHVybn19fX1lbHNlIHRoaXMuRGU9bnVsbCxpJiYodGhpcy5EZT0hMSl9fXZ1KHQpe3JldHVybiB0LnNpLnNldFRyYW5zZm9ybSh0LkhpLDAsMCx0LkhpLDAsMCksdC5zaS5jb21taXRUcmFuc2Zvcm0oKSx0aGlzLkRlPT09bnVsbCYmdGhpcy52Uih0LCEwKSwwPHRoaXMuRGUmJnRoaXMhPT10aGlzLnlMfX1jbGFzcyBEcmFnZ2luZ0luZm97aFA7YVA7Y29uc3RydWN0b3IodCl7dGhpcy5oUD10PT09dm9pZCAwP25ldyBQb2ludDp0LHRoaXMuYVA9bmV3IFBvaW50fWdldCBwb2ludCgpe3JldHVybiB0aGlzLmhQfXNldCBwb2ludCh0KXt0aGlzLmhQPXR9Z2V0IHNoaWZ0ZWQoKXtyZXR1cm4gdGhpcy5hUH1zZXQgc2hpZnRlZCh0KXt0aGlzLmFQPXR9fWNsYXNzIERyYWdnaW5nTm9kZUluZm9QYWlye1RlO1FBO1YxO2NvbnN0cnVjdG9yKHQsaSxlKXt0aGlzLlRlPXQsdGhpcy5RQT1pLHRoaXMuVjE9ZX19Y2xhc3MgRHJhZ2dpbmdPcHRpb25ze2lzR3JpZFNuYXBFbmFibGVkO2lzR3JpZFNuYXBSZWFsdGltZTtncmlkU25hcENlbGxTaXplO2dyaWRTbmFwQ2VsbFNwb3Q7Z3JpZFNuYXBPcmlnaW47ZHJhZ3NMaW5rO2RyYWdzVHJlZTtncm91cHNTbmFwTWVtYmVycztncm91cHNBbHdheXNNb3ZlO2RyYWdzTWVtYmVycztjb25zdHJ1Y3Rvcih0KXt0aGlzLlZpKCksdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfVZpKCl7dGhpcy5pc0dyaWRTbmFwRW5hYmxlZD0hMSx0aGlzLmlzR3JpZFNuYXBSZWFsdGltZT0hMCx0aGlzLmdyaWRTbmFwQ2VsbFNpemU9bmV3IFNpemUoTmFOLE5hTikucCgpLHRoaXMuZ3JpZFNuYXBDZWxsU3BvdD1TcG90LlRvcExlZnQsdGhpcy5ncmlkU25hcE9yaWdpbj1uZXcgUG9pbnQoTmFOLE5hTikucCgpLHRoaXMuZHJhZ3NMaW5rPSExLHRoaXMuZHJhZ3NUcmVlPSExLHRoaXMuZ3JvdXBzU25hcE1lbWJlcnM9ITEsdGhpcy5ncm91cHNBbHdheXNNb3ZlPSEwLHRoaXMuZHJhZ3NNZW1iZXJzPSEwfX1jbGFzcyBQYWxldHRlIGV4dGVuZHMgRGlhZ3JhbXtjb25zdHJ1Y3Rvcih0LGkpe2xldCBlO3JldHVybiB0PT09dm9pZCAwfHx0eXBlb2YgdD09XCJzdHJpbmdcInx8cm9vdC5FbGVtZW50JiZ0IGluc3RhbmNlb2YgRWxlbWVudD9lPXQ6VS5XKHQpJiYoaT10KSxzdXBlcihlKSx0aGlzLnhMKCksaSYmdGhpcy5zZXRQcm9wZXJ0aWVzKGkpLHRoaXN9eEwoKXt0aGlzLmFsbG93RHJhZ091dD0hMCx0aGlzLmFsbG93TW92ZT0hMSx0aGlzLmlzUmVhZE9ubHk9ITAsdGhpcy5jb250ZW50QWxpZ25tZW50PVNwb3QuVG9wQ2VudGVyLHRoaXMubGF5b3V0PW5ldyBHcmlkTGF5b3V0fXNldHVwUm91dGVycygpe31yZXNldCgpe3N1cGVyLnJlc2V0KCksdGhpcy54TCgpfX1jbGFzcyBPdmVydmlldyBleHRlbmRzIERpYWdyYW17WTE7SzE7VTE7RzE7bTA7UWY7SWw7ZlA7Y1A7SDE7dVA7Y29uc3RydWN0b3IodCxpKXtsZXQgZTtyZXR1cm4gdD09PXZvaWQgMHx8dHlwZW9mIHQ9PVwic3RyaW5nXCJ8fHJvb3QuRWxlbWVudCYmdCBpbnN0YW5jZW9mIEVsZW1lbnQ/ZT10OlUuVyh0KSYmKGk9dCksc3VwZXIoZSksdGhpcy5hbmltYXRpb25NYW5hZ2VyLmlzRW5hYmxlZD0hMSx0aGlzLlp0PSEwLHRoaXMuWTE9bnVsbCx0aGlzLlh1PSExLHRoaXMuWXU9ITEsdGhpcy5LMT0hMCx0aGlzLlUxPSEwLHRoaXMuRzE9MCx0aGlzLm0wPSExLHRoaXMuUWY9bnVsbCx0aGlzLnNldFJlbmRlcmluZ0hpbnQoXCJkcmF3U2hhZG93c1wiLCExKSx0aGlzLklsPW5ldyBQYXJ0KHtzZWxlY3RhYmxlOiEwLHNlbGVjdGlvbkFkb3JuZWQ6ITEsc2VsZWN0aW9uT2JqZWN0TmFtZTpcIkJPWFNIQVBFXCIsbG9jYXRpb25PYmplY3ROYW1lOlwiQk9YU0hBUEVcIixyZXNpemVPYmplY3ROYW1lOlwiQk9YU0hBUEVcIixjdXJzb3I6XCJtb3ZlXCJ9KS5hZGQobmV3IFNoYXBlKHtuYW1lOlwiQk9YU0hBUEVcIixmaWxsOlwidHJhbnNwYXJlbnRcIixzdHJva2U6XCJtYWdlbnRhXCIsc3Ryb2tlV2lkdGg6Mn0pLnRoZW1lKFwic3Ryb2tlXCIsXCJvdmVydmlld0JveFwiKSkuS3QoKSx0aGlzLmFsbG93Q29weT0hMSx0aGlzLmFsbG93RGVsZXRlPSExLHRoaXMuYWxsb3dEcm9wPSExLHRoaXMuYWxsb3dTZWxlY3Q9ITAsdGhpcy5hdXRvU2Nyb2xsUmVnaW9uPW5ldyBNYXJnaW4oMCwwLDAsMCksdGhpcy5ndC5zKDAsMCksdGhpcy50b29sTWFuYWdlci50aShcIkRyYWdnaW5nXCIsbmV3IE92ZXJ2aWV3RHJhZ2dpbmdUb29sLHRoaXMudG9vbE1hbmFnZXIubW91c2VNb3ZlVG9vbHMpLHRoaXMuY2xpY2s9KCk9Pntjb25zdCBzPXRoaXMub2JzZXJ2ZWQ7aWYocz09PW51bGwpcmV0dXJuO2NvbnN0IG49cy52aWV3cG9ydEJvdW5kcyxvPXRoaXMubGFzdElucHV0LmRvY3VtZW50UG9pbnQ7cy5wb3NpdGlvbj1uZXcgUG9pbnQoby54LW4ud2lkdGgvMixvLnktbi5oZWlnaHQvMil9LHRoaXMuZlA9cz0+e3RoaXMuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy5wMCgpfSx0aGlzLmNQPXM9Pnt0aGlzLm9ic2VydmVkIT09bnVsbCYmKHRoaXMuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy5MKCkpfSx0aGlzLkgxPXM9Pnt0aGlzLnVwZGF0ZURlbGF5PDE/dGhpcy5MKCk6dGhpcy5tMHx8KHRoaXMubTA9ITAsVS5scigoKT0+dGhpcy5yZWRyYXcoKSx0aGlzLnVwZGF0ZURlbGF5KSl9LHRoaXMudVA9cz0+e3RoaXMub2JzZXJ2ZWQhPT1udWxsJiZ0aGlzLnAwKCl9LHRoaXMuYXV0b1NjYWxlPTIsdGhpcy5adD0hMSxpJiZPYmplY3QuYXNzaWduKHRoaXMsaSksdGhpc31zZXR1cFJvdXRlcnMoKXt9Y29tcHV0ZVBpeGVsUmF0aW8oKXtyZXR1cm4gMX1yZWRyYXcoKXt0aGlzLm0wJiZ0aGlzLnVwZGF0ZURlbGF5Pj0xJiYodGhpcy5tMD0hMSx0aGlzLkpSKCkpLHN1cGVyLnJlZHJhdygpfVVpKCl7aWYodGhpcy5UdD09PW51bGwmJlUubihcIk5vIGRpdiBzcGVjaWZpZWRcIiksdGhpcy53dD09PW51bGwmJlUubihcIk5vIGNhbnZhcyBzcGVjaWZpZWRcIiksdGhpcy53dCBpbnN0YW5jZW9mIFNWR1N1cmZhY2V8fCh0aGlzLmJveC5lMigpLCF0aGlzLlVlKSlyZXR1cm47Y29uc3QgdD10aGlzLm9ic2VydmVkO2lmKHQ9PT1udWxsfHx0LmFuaW1hdGlvbk1hbmFnZXIuZGVmYXVsdEFuaW1hdGlvbi5pc0FuaW1hdGluZ3x8IXQucWgpcmV0dXJuO3RoaXMuYTAoKTtjb25zdCBpPXRoaXMud3QsZT10aGlzLnNpO2lmKGUuY2xlYXJDb250ZXh0Q2FjaGUoITApLGUuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSxlLmNsZWFyUmVjdCgwLDAsaS53aWR0aCxpLmhlaWdodCksdGhpcy51cGRhdGVEZWxheTwxKXRoaXMuYkwoKTtlbHNlIGlmKHRoaXMuUWYhPT1udWxsKXtlLmRyYXdJbWFnZSh0aGlzLlFmLkV0LDAsMCk7Y29uc3Qgbz10aGlzLkY7ZS5zY2FsZSh0aGlzLkhpLHRoaXMuSGkpLGUudHJhbnNmb3JtKG8ubTExLG8ubTEyLG8ubTIxLG8ubTIyLG8uZHgsby5keSksZS5jb21taXRUcmFuc2Zvcm0oKX1jb25zdCBzPXRoaXMuV3QuaCxuPXMubGVuZ3RoO2ZvcihsZXQgbz0wO288bjtvKyspc1tvXS5VaShlLHRoaXMpO3RoaXMuR2Y9ITEsdGhpcy5VZT0hMX1KUigpe2NvbnN0IHQ9dGhpcy53dCxpPXRoaXMuc2k7aWYoISh0PT09bnVsbHx8aT09PW51bGwpKXtpZih0aGlzLmEwKCksdGhpcy5RZj09PW51bGwpe2NvbnN0IGU9bmV3IENhbnZhc1N1cmZhY2UobnVsbCk7ZS53aWR0aD10LndpZHRoLGUuaGVpZ2h0PXQuaGVpZ2h0LHRoaXMuUWY9ZX10cnl7dGhpcy53dD10aGlzLlFmLHRoaXMuc2k9dGhpcy53dC5jaSx0aGlzLnNpLmNsZWFyQ29udGV4dENhY2hlKCEwKSx0aGlzLnNpLnNldFRyYW5zZm9ybSgxLDAsMCwxLDAsMCksdGhpcy5zaS5jbGVhclJlY3QoMCwwLHRoaXMud3Qud2lkdGgsdGhpcy53dC5oZWlnaHQpLHRoaXMuYkwoKX1maW5hbGx5e3RoaXMud3Q9dCx0aGlzLnNpPWl9fX1iTCgpe2NvbnN0IHQ9dGhpcy5vYnNlcnZlZDtpZih0PT09bnVsbClyZXR1cm47Y29uc3QgaT10aGlzLmRyYXdzVGVtcG9yYXJ5TGF5ZXJzLGU9dGhpcy5kcmF3c0dyaWQmJmkscz10LmdyaWQ7aWYoZSYmcyE9PW51bGwmJnMudmlzaWJsZSYmIShpc05hTihzLndpZHRoKXx8aXNOYU4ocy5oZWlnaHQpKSl7Y29uc3QgYT1SZWN0LmEoKS5jKHRoaXMudmlld3BvcnRCb3VuZHMpLnVuaW9uUmVjdCh0LnZpZXdwb3J0Qm91bmRzKTt0LmxoKGEpLFJlY3QubyhhKSx0LlRpKCl9Y29uc3Qgbj10aGlzLkYsbz10aGlzLnNpO28uc2NhbGUodGhpcy5IaSx0aGlzLkhpKSxvLnRyYW5zZm9ybShuLm0xMSxuLm0xMixuLm0yMSxuLm0yMixuLmR4LG4uZHkpLG8uY29tbWl0VHJhbnNmb3JtKCk7Y29uc3Qgcj10aGlzLnZpZXdwb3J0Qm91bmRzLGw9dC5XdC5oLGg9bC5sZW5ndGgsZj10aGlzLld0Lmg7dGhpcy5rcyhmLGYubGVuZ3RoLHRoaXMsdGhpcy52aWV3cG9ydEJvdW5kcyk7Zm9yKGxldCBhPTA7YTxoO2ErKylsW2FdLlpGKG8scix0aGlzLGksZSl9Z2V0IG9ic2VydmVkKCl7cmV0dXJuIHRoaXMuWTF9c2V0IG9ic2VydmVkKHQpe2NvbnN0IGk9dGhpcy5ZMTtpZih0IT09bnVsbCYmVS5lKHQsRGlhZ3JhbSxPdmVydmlldyxcIm9ic2VydmVkXCIpLHQgaW5zdGFuY2VvZiBPdmVydmlldyYmVS5uKFwiT3ZlcnZpZXcub2JzZXJ2ZWQgRGlhZ3JhbSBtYXkgbm90IGJlIGFuIE92ZXJ2aWV3IGl0c2VsZjogXCIrdCksaSE9PXQpe2lmKGkhPT1udWxsJiZ0aGlzLiRSKGkpLHRoaXMuWTE9dCx0IT09bnVsbCYmdGhpcy5aUih0KSx0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLHQ9PT1udWxsKXt0aGlzLlFmPW51bGw7Y29uc3QgZT10aGlzLnd0LHM9dGhpcy5zaTtlJiZzJiYocy5zZXRUcmFuc2Zvcm0oMSwwLDAsMSwwLDApLHMuY2xlYXJSZWN0KDAsMCxlLndpZHRoLGUuaGVpZ2h0KSl9ZWxzZSB0aGlzLkgxKG51bGwpLHRoaXMucDAoKSx0aGlzLkwoKTt0aGlzLnQoXCJvYnNlcnZlZFwiLGksdCl9fWdldCBib3goKXtyZXR1cm4gdGhpcy5JbH1zZXQgYm94KHQpe2NvbnN0IGk9dGhpcy5JbDtpIT09dCYmKFUuZSh0LFBhcnQsT3ZlcnZpZXcsXCJib3hcIiksdC5LdCgpLHRoaXMuSWw9dCx0aGlzLnJlbW92ZShpKSx0aGlzLmFkZCh0aGlzLklsKSx0aGlzLnAwKCksdGhpcy50KFwiYm94XCIsaSx0KSl9Z2V0IGRyYXdzVGVtcG9yYXJ5TGF5ZXJzKCl7cmV0dXJuIHRoaXMuSzF9c2V0IGRyYXdzVGVtcG9yYXJ5TGF5ZXJzKHQpe3RoaXMuSzEhPT10JiYodGhpcy5LMT10LHRoaXMucmVkcmF3KCkpfWdldCBkcmF3c0dyaWQoKXtyZXR1cm4gdGhpcy5VMX1zZXQgZHJhd3NHcmlkKHQpe3RoaXMuVTEhPT10JiYodGhpcy5VMT10LHRoaXMucmVkcmF3KCkpfWdldCB1cGRhdGVEZWxheSgpe3JldHVybiB0aGlzLkcxfXNldCB1cGRhdGVEZWxheSh0KXt0PDAmJih0PTApLHRoaXMuRzEhPT10JiYodGhpcy5HMT10KX1aUih0KXt0IT09bnVsbCYmKHQuYWRkRGlhZ3JhbUxpc3RlbmVyKFwiVmlld3BvcnRCb3VuZHNDaGFuZ2VkXCIsdGhpcy5mUCksdC5hZGREaWFncmFtTGlzdGVuZXIoXCJEb2N1bWVudEJvdW5kc0NoYW5nZWRcIix0aGlzLmNQKSx0LmFkZERpYWdyYW1MaXN0ZW5lcihcIkludmFsaWRhdGVEcmF3XCIsdGhpcy5IMSksdC5hZGREaWFncmFtTGlzdGVuZXIoXCJBbmltYXRpb25GaW5pc2hlZFwiLHRoaXMudVApLHRoaXMuYWRkKHRoaXMuYm94KSl9JFIodCl7dCE9PW51bGwmJih0aGlzLnJlbW92ZSh0aGlzLmJveCksdC5yZW1vdmVEaWFncmFtTGlzdGVuZXIoXCJWaWV3cG9ydEJvdW5kc0NoYW5nZWRcIix0aGlzLmZQKSx0LnJlbW92ZURpYWdyYW1MaXN0ZW5lcihcIkRvY3VtZW50Qm91bmRzQ2hhbmdlZFwiLHRoaXMuY1ApLHQucmVtb3ZlRGlhZ3JhbUxpc3RlbmVyKFwiSW52YWxpZGF0ZURyYXdcIix0aGlzLkgxKSx0LnJlbW92ZURpYWdyYW1MaXN0ZW5lcihcIkFuaW1hdGlvbkZpbmlzaGVkXCIsdGhpcy51UCkpfXAwKCl7Y29uc3QgdD10aGlzLmJveCxpPXRoaXMub2JzZXJ2ZWQ7aWYoaT09PW51bGwpcmV0dXJuO3RoaXMuVWU9ITA7Y29uc3QgZT1pLnZpZXdwb3J0Qm91bmRzLHM9dC5zZWxlY3Rpb25PYmplY3Qsbj1TaXplLmEoKTtuLnMoZS53aWR0aCxlLmhlaWdodCkscy5kZXNpcmVkU2l6ZT1uLFNpemUubyhuKTtjb25zdCBvPTIvdGhpcy5zY2FsZTtzIGluc3RhbmNlb2YgU2hhcGUmJihzLnN0cm9rZVdpZHRoPW8pLHQubG9jYXRpb249bmV3IFBvaW50KGUueC1vLzIsZS55LW8vMiksdC5pc1NlbGVjdGVkPSEwfWNvbXB1dGVCb3VuZHMoKXtjb25zdCB0PXRoaXMub2JzZXJ2ZWQ7aWYodD09PW51bGwpcmV0dXJuIFJlY3Quemc7Y29uc3QgaT10LmRvY3VtZW50Qm91bmRzLmNvcHkoKTtyZXR1cm4gaS51bmlvblJlY3QodC52aWV3cG9ydEJvdW5kcyksaX1pbnZhbGlkYXRlVmlld3BvcnQodCxpKXt0aGlzLlVlIT09ITAmJih0aGlzLlVlPSEwLHRoaXMucmVxdWVzdFVwZGF0ZSgpKX1vblZpZXdwb3J0Qm91bmRzQ2hhbmdlZCh0LGksZSxzKXt0aGlzLlp0fHwodGhpcy5vaCgpLHRoaXMuTCgpLHRoaXMubWEoKSx0aGlzLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpLHRoaXMucDAoKSx0aGlzLkdpLnNjYWxlPWUsdGhpcy5HaS5wb3NpdGlvbi54PXQueCx0aGlzLkdpLnBvc2l0aW9uLnk9dC55LHRoaXMuR2kuYm91bmRzLmModCksdGhpcy5HaS5pc1Njcm9sbD1zLHRoaXMuTyhcIlZpZXdwb3J0Qm91bmRzQ2hhbmdlZFwiLHRoaXMuR2ksdCkpfX1jbGFzcyBPdmVydmlld0RyYWdnaW5nVG9vbCBleHRlbmRzIERyYWdnaW5nVG9vbHthaDtjb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5haD1udWxsfWNhblN0YXJ0KCl7aWYoIXRoaXMuaXNFbmFibGVkKXJldHVybiExO2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHQ9PT1udWxsfHwhdC5hbGxvd01vdmV8fCF0LmFsbG93U2VsZWN0KXJldHVybiExO2NvbnN0IGk9dC5vYnNlcnZlZDtpZihpPT09bnVsbClyZXR1cm4hMTtjb25zdCBlPXQubGFzdElucHV0O2lmKCFlLmxlZnR8fHQuY3VycmVudFRvb2whPT10aGlzJiYoIXRoaXMuaXNCZXlvbmREcmFnU2l6ZSgpfHxlLmlzVG91Y2hFdmVudCYmZS50aW1lc3RhbXAtdC5maXJzdElucHV0LnRpbWVzdGFtcDx0aGlzLmRlbGF5KSlyZXR1cm4hMTtpZih0aGlzLmZpbmREcmFnZ2FibGVQYXJ0KCk9PT1udWxsKXtjb25zdCBuPWkudmlld3BvcnRCb3VuZHM7dGhpcy5haD1uZXcgUG9pbnQobi53aWR0aC8yLG4uaGVpZ2h0LzIpO2NvbnN0IG89dC5maXJzdElucHV0LmRvY3VtZW50UG9pbnQ7aS5wb3NpdGlvbj1uZXcgUG9pbnQoby54LXRoaXMuYWgueCxvLnktdGhpcy5haC55KX1yZXR1cm4hMH1kb0FjdGl2YXRlKCl7dGhpcy5haD1udWxsLHN1cGVyLmRvQWN0aXZhdGUoKX1kb1VwZGF0ZUN1cnNvcih0KXtjb25zdCBpPXRoaXMuZGlhZ3JhbSxlPWkuYm94O2UhPT1udWxsJiZlLmN1cnNvciYmKGkuY3VycmVudEN1cnNvcj1lLmN1cnNvcil9bW92ZVBhcnRzKHQsaSxlKXtlPT09dm9pZCAwJiYoZT0hMSk7Y29uc3Qgcz10aGlzLmRpYWdyYW0sbj1zLm9ic2VydmVkO2lmKG49PT1udWxsKXJldHVybjtjb25zdCBvPXMuYm94O2lmKG89PT1udWxsKXJldHVybjtpZih0aGlzLmFoPT09bnVsbCl7Y29uc3QgbD1zLmZpcnN0SW5wdXQuZG9jdW1lbnRQb2ludCxoPW8ubG9jYXRpb247dGhpcy5haD1uZXcgUG9pbnQobC54LWgueCxsLnktaC55KX1jb25zdCByPXMubGFzdElucHV0LmRvY3VtZW50UG9pbnQ7bi5wb3NpdGlvbj1uZXcgUG9pbnQoci54LXRoaXMuYWgueCxyLnktdGhpcy5haC55KX19Y2xhc3MgQ29tbWFuZEhhbmRsZXJ7QztkUDtnUDttUDtwUDt5UDt3UDt4UDtiUDtmaDtrUDtxMTtXMTtqMTt2MTtTUDt6bztNUDtjb25zdHJ1Y3Rvcih0KXtHU2V0LkppKHRoaXMpLHRoaXMuQz1EaWFncmFtLndtKCksdGhpcy5kUD0hMCx0aGlzLmdQPSEwLHRoaXMubVA9ITAsdGhpcy5wUD0hMSx0aGlzLnlQPSExLHRoaXMud1A9ITEsdGhpcy54UD0hMSx0aGlzLmJQPW51bGwsdGhpcy5maD1udWxsLHRoaXMua1A9MS4wNSx0aGlzLnExPU5hTix0aGlzLlcxPW51bGwsdGhpcy5qMT1OYU4sdGhpcy52MT1SZWN0LnpnLHRoaXMuU1A9ITEsdGhpcy56bz1udWxsLHRoaXMuTVA9MjAwLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX10b1N0cmluZygpe3JldHVyblwiQ29tbWFuZEhhbmRsZXJcIn1nZXQgZGlhZ3JhbSgpe3JldHVybiB0aGlzLkN9RG8odCl7dGhpcy5DPXR9ZG9TdGFydCgpe31kb1N0b3AoKXt9ZG9LZXlEb3duKCl7Y29uc3QgdD10aGlzLmRpYWdyYW0saT10Lmxhc3RJbnB1dCxlPVUucnI/aS5tZXRhOmkuY29udHJvbCxzPWkuc2hpZnQsbj1pLmFsdCxvPWkuY29tbWFuZEtleTtlJiYobz09PVwiSW5zZXJ0XCJ8fG89PT1cImNcIik/dGhpcy5jYW5Db3B5U2VsZWN0aW9uKCkmJnRoaXMuY29weVNlbGVjdGlvbigpOmUmJm89PT1cInhcInx8cyYmbz09PVwiRGVsZXRlXCI/dGhpcy5jYW5DdXRTZWxlY3Rpb24oKSYmdGhpcy5jdXRTZWxlY3Rpb24oKTplJiZvPT09XCJ2XCJ8fHMmJm89PT1cIkluc2VydFwiP3RoaXMuY2FuUGFzdGVTZWxlY3Rpb24oKSYmdGhpcy5wYXN0ZVNlbGVjdGlvbigpOmUmJm89PT1cInlcInx8ZSYmcyYmbz09PVwielwifHxuJiZzJiZvPT09XCJCYWNrc3BhY2VcIj90aGlzLmNhblJlZG8oKSYmdGhpcy5yZWRvKCk6ZSYmbz09PVwielwifHxuJiZvPT09XCJCYWNrc3BhY2VcIj90aGlzLmNhblVuZG8oKSYmdGhpcy51bmRvKCk6bz09PVwiRGVsZXRlXCJ8fG89PT1cIkJhY2tzcGFjZVwiP3RoaXMuY2FuRGVsZXRlU2VsZWN0aW9uKCkmJnRoaXMuZGVsZXRlU2VsZWN0aW9uKCk6ZSYmbz09PVwiYVwiP3RoaXMuY2FuU2VsZWN0QWxsKCkmJnRoaXMuc2VsZWN0QWxsKCk6bz09PVwiRXNjYXBlXCI/dGhpcy5jYW5TdG9wQ29tbWFuZCgpJiZ0aGlzLnN0b3BDb21tYW5kKCk6bz09PVwiQXJyb3dVcFwiP3QuYWxsb3dWZXJ0aWNhbFNjcm9sbCYmKGU/dC5zY3JvbGwoXCJwaXhlbFwiLFwidXBcIik6dC5zY3JvbGwoXCJsaW5lXCIsXCJ1cFwiKSk6bz09PVwiQXJyb3dEb3duXCI/dC5hbGxvd1ZlcnRpY2FsU2Nyb2xsJiYoZT90LnNjcm9sbChcInBpeGVsXCIsXCJkb3duXCIpOnQuc2Nyb2xsKFwibGluZVwiLFwiZG93blwiKSk6bz09PVwiQXJyb3dMZWZ0XCI/dC5hbGxvd0hvcml6b250YWxTY3JvbGwmJihlP3Quc2Nyb2xsKFwicGl4ZWxcIixcImxlZnRcIik6dC5zY3JvbGwoXCJsaW5lXCIsXCJsZWZ0XCIpKTpvPT09XCJBcnJvd1JpZ2h0XCI/dC5hbGxvd0hvcml6b250YWxTY3JvbGwmJihlP3Quc2Nyb2xsKFwicGl4ZWxcIixcInJpZ2h0XCIpOnQuc2Nyb2xsKFwibGluZVwiLFwicmlnaHRcIikpOm89PT1cIlBhZ2VVcFwiP3MmJnQuYWxsb3dIb3Jpem9udGFsU2Nyb2xsP3Quc2Nyb2xsKFwicGFnZVwiLFwibGVmdFwiKTp0LmFsbG93VmVydGljYWxTY3JvbGwmJnQuc2Nyb2xsKFwicGFnZVwiLFwidXBcIik6bz09PVwiUGFnZURvd25cIj9zJiZ0LmFsbG93SG9yaXpvbnRhbFNjcm9sbD90LnNjcm9sbChcInBhZ2VcIixcInJpZ2h0XCIpOnQuYWxsb3dWZXJ0aWNhbFNjcm9sbCYmdC5zY3JvbGwoXCJwYWdlXCIsXCJkb3duXCIpOm89PT1cIkhvbWVcIj9lJiZ0LmFsbG93VmVydGljYWxTY3JvbGw/dC5zY3JvbGwoXCJkb2N1bWVudFwiLFwidXBcIik6IWUmJnQuYWxsb3dIb3Jpem9udGFsU2Nyb2xsJiZ0LnNjcm9sbChcImRvY3VtZW50XCIsXCJsZWZ0XCIpOm89PT1cIkVuZFwiP2UmJnQuYWxsb3dWZXJ0aWNhbFNjcm9sbD90LnNjcm9sbChcImRvY3VtZW50XCIsXCJkb3duXCIpOiFlJiZ0LmFsbG93SG9yaXpvbnRhbFNjcm9sbCYmdC5zY3JvbGwoXCJkb2N1bWVudFwiLFwicmlnaHRcIik6bz09PVwiU3BhY2VcIj90aGlzLmNhblNjcm9sbFRvUGFydCgpJiZ0aGlzLnNjcm9sbFRvUGFydCgpOm89PT1cIk1pbnVzXCJ8fG89PT1cIk51bXBhZFN1YnRyYWN0XCI/dGhpcy5jYW5EZWNyZWFzZVpvb20oKSYmdGhpcy5kZWNyZWFzZVpvb20oKTpvPT09XCJFcXVhbFwifHxvPT09XCJOdW1wYWRBZGRcIj90aGlzLmNhbkluY3JlYXNlWm9vbSgpJiZ0aGlzLmluY3JlYXNlWm9vbSgpOmUmJm89PT1cIkRpZ2l0MFwiP3RoaXMuY2FuUmVzZXRab29tKCkmJnRoaXMucmVzZXRab29tKCk6cyYmbz09PVwielwiP3RoaXMuY2FuWm9vbVRvRml0KCkmJnRoaXMuem9vbVRvRml0KCk6ZSYmIXMmJm89PT1cImdcIj90aGlzLmNhbkdyb3VwU2VsZWN0aW9uKCkmJnRoaXMuZ3JvdXBTZWxlY3Rpb24oKTplJiZzJiZvPT09XCJnXCI/dGhpcy5jYW5Vbmdyb3VwU2VsZWN0aW9uKCkmJnRoaXMudW5ncm91cFNlbGVjdGlvbigpOm89PT1cIkYyXCI/dGhpcy5jYW5FZGl0VGV4dEJsb2NrKCkmJnRoaXMuZWRpdFRleHRCbG9jaygpOm89PT1cIkNvbnRleHRNZW51XCJ8fHMmJm89PT1cIkYxMFwifHxlJiZzJiZvPT09XCJCYWNrc2xhc2hcIj90aGlzLmNhblNob3dDb250ZXh0TWVudSgpJiZ0aGlzLnNob3dDb250ZXh0TWVudSgpOmkuYnViYmxlcz0hMH1kb0tleVVwKCl7Y29uc3QgaT10aGlzLmRpYWdyYW0ubGFzdElucHV0O2kuYnViYmxlcz0hMH1zdG9wQ29tbWFuZCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLGk9dC5jdXJyZW50VG9vbDtpIGluc3RhbmNlb2YgVG9vbE1hbmFnZXImJnQuYWxsb3dTZWxlY3QmJnQuY2xlYXJTZWxlY3Rpb24oKSxpIT09bnVsbCYmaS5kb0NhbmNlbCgpfWNhblN0b3BDb21tYW5kKCl7cmV0dXJuITB9c2VsZWN0QWxsKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dC5MKCk7dHJ5e3QuY3VycmVudEN1cnNvcj1cIndhaXRcIix0Lk8oXCJDaGFuZ2luZ1NlbGVjdGlvblwiLHQuc2VsZWN0aW9uKTtjb25zdCBpPXQucGFydHM7Zm9yKDtpLm5leHQoKTspe2NvbnN0IG49aS52YWx1ZTtuLmNhblNlbGVjdCgpJiYhbi5sYXllci5pc1RlbXBvcmFyeSYmKG4uaXNTZWxlY3RlZD0hMCl9Y29uc3QgZT10Lm5vZGVzO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBuPWUudmFsdWU7bi5jYW5TZWxlY3QoKSYmIW4ubGF5ZXIuaXNUZW1wb3JhcnkmJihuLmlzU2VsZWN0ZWQ9ITApfWNvbnN0IHM9dC5saW5rcztmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO24uY2FuU2VsZWN0KCkmJiFuLmxheWVyLmlzVGVtcG9yYXJ5JiYobi5pc1NlbGVjdGVkPSEwKX19ZmluYWxseXt0Lk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsdC5zZWxlY3Rpb24pLHQuY3VycmVudEN1cnNvcj1cIlwifX1jYW5TZWxlY3RBbGwoKXtyZXR1cm4gdGhpcy5kaWFncmFtLmFsbG93U2VsZWN0fWRlbGV0ZVNlbGVjdGlvbigpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3RyeXt0LmN1cnJlbnRDdXJzb3I9XCJ3YWl0XCIsdC5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIix0LnNlbGVjdGlvbiksdC5zdGFydFRyYW5zYWN0aW9uKFwiRGVsZXRlXCIpLHQuTyhcIlNlbGVjdGlvbkRlbGV0aW5nXCIsdC5zZWxlY3Rpb24pO2NvbnN0IGk9bmV3IEdTZXQsZT10LnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO1BhcnQuY2goaSxzLCEwLHRoaXMuZGVsZXRlc1RyZWU/MS8wOjAsdGhpcy5kZWxldGVzQ29ubmVjdGVkTGlua3M/bnVsbDohMSxuPT5uLmNhbkRlbGV0ZSgpKX10LnJlbW92ZVBhcnRzKGksITApLHQuTyhcIlNlbGVjdGlvbkRlbGV0ZWRcIixpKX1maW5hbGx5e3QuY29tbWl0VHJhbnNhY3Rpb24oXCJEZWxldGVcIiksdC5PKFwiQ2hhbmdlZFNlbGVjdGlvblwiLHQuc2VsZWN0aW9uKSx0LmN1cnJlbnRDdXJzb3I9XCJcIn19Y2FuRGVsZXRlU2VsZWN0aW9uKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07cmV0dXJuISh0LmlzUmVhZE9ubHl8fHQuaXNNb2RlbFJlYWRPbmx5fHwhdC5hbGxvd0RlbGV0ZXx8dC5zZWxlY3Rpb24uY291bnQ9PT0wKX1jb3B5U2VsZWN0aW9uKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dHJ5e2NvbnN0IGk9bmV3IEdTZXQsZT10LnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO1BhcnQuY2goaSxzLCEwLHRoaXMuY29waWVzVHJlZT8xLzA6MCx0aGlzLmNvcGllc0Nvbm5lY3RlZExpbmtzLG49Pm4uY2FuQ29weSgpKX10aGlzLmNvcHlUb0NsaXBib2FyZChpKX1maW5hbGx5e319Y2FuQ29weVNlbGVjdGlvbigpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3JldHVybiEoIXQuYWxsb3dDb3B5fHwhdC5hbGxvd0NsaXBib2FyZHx8dC5zZWxlY3Rpb24uY291bnQ9PT0wKX1jdXRTZWxlY3Rpb24oKXt0aGlzLmNvcHlTZWxlY3Rpb24oKSx0aGlzLmRlbGV0ZVNlbGVjdGlvbigpfWNhbkN1dFNlbGVjdGlvbigpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3JldHVybiEodC5pc1JlYWRPbmx5fHx0LmlzTW9kZWxSZWFkT25seXx8IXQuYWxsb3dDb3B5fHwhdC5hbGxvd0RlbGV0ZXx8IXQuYWxsb3dDbGlwYm9hcmR8fHQuc2VsZWN0aW9uLmNvdW50PT09MCl9Y29weVRvQ2xpcGJvYXJkKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtO2xldCBlPW51bGw7aWYodD09PW51bGwpRGlhZ3JhbS56QSgpO2Vsc2V7bGV0IHM9bnVsbDt0cnl7cz1pLmNvcHlQYXJ0cyh0LG51bGwsITApfWZpbmFsbHl7ZT1uZXcgTGlzdCxzIT09bnVsbCYmZS5hZGRBbGwocy5pdGVyYXRvclZhbHVlcyksRGlhZ3JhbS5zMD1lLERpYWdyYW0uUjE9aS5tb2RlbC5kYXRhRm9ybWF0fX1pLk8oXCJDbGlwYm9hcmRDaGFuZ2VkXCIsZSl9cGFzdGVGcm9tQ2xpcGJvYXJkKCl7Y29uc3QgdD1uZXcgR1NldCxpPURpYWdyYW0uczA7aWYoaT09PW51bGwpcmV0dXJuIHQ7Y29uc3QgZT10aGlzLmRpYWdyYW07aWYoRGlhZ3JhbS5SMSE9PWUubW9kZWwuZGF0YUZvcm1hdClyZXR1cm4gdDtsZXQgcz1udWxsO3RyeXtzPWUuY29weVBhcnRzKGksZSwhMSl9ZmluYWxseXtpZihzIT09bnVsbCl7Y29uc3Qgbj1zLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWUscj1uLmtleTtvLmxvY2F0aW9uLmlzUmVhbCgpfHwoci5sb2NhdGlvbi5pc1JlYWwoKT9vLmxvY2F0aW9uPXIubG9jYXRpb246IW8ucG9zaXRpb24uaXNSZWFsKCkmJnIucG9zaXRpb24uaXNSZWFsKCkmJihvLnBvc2l0aW9uPXIucG9zaXRpb24pKSx0LmFkZChvKX19fXJldHVybiB0fXBhc3RlU2VsZWN0aW9uKHQpe3Q9PT12b2lkIDAmJih0PW51bGwpO2NvbnN0IGk9dGhpcy5kaWFncmFtO3RyeXtpLmN1cnJlbnRDdXJzb3I9XCJ3YWl0XCIsaS5PKFwiQ2hhbmdpbmdTZWxlY3Rpb25cIixpLnNlbGVjdGlvbiksaS5zdGFydFRyYW5zYWN0aW9uKFwiUGFzdGVcIik7Y29uc3QgZT10aGlzLnBhc3RlRnJvbUNsaXBib2FyZCgpO2UuY291bnQ+MCYmaS5jbGVhclNlbGVjdGlvbighMCk7Y29uc3Qgcz1lLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7bi5pc1NlbGVjdGVkPSEwfWlmKHQhPT1udWxsKXtjb25zdCBuPWkuY29tcHV0ZVBhcnRzQm91bmRzKGkuc2VsZWN0aW9uKTtpZihuLmlzUmVhbCgpKXtjb25zdCBvPXRoaXMuY29tcHV0ZUVmZmVjdGl2ZUNvbGxlY3Rpb24oaS5zZWxlY3Rpb24saS5UMSk7aS5CUyhvLG5ldyBQb2ludCh0Lngtbi5jZW50ZXJYLHQueS1uLmNlbnRlclkpLGkuVDEsITEpfX1pLk8oXCJDbGlwYm9hcmRQYXN0ZWRcIixlKX1maW5hbGx5e2kuY29tbWl0VHJhbnNhY3Rpb24oXCJQYXN0ZVwiKSxpLk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsaS5zZWxlY3Rpb24pLGkuY3VycmVudEN1cnNvcj1cIlwifX1jYW5QYXN0ZVNlbGVjdGlvbih0KXtjb25zdCBpPXRoaXMuZGlhZ3JhbTtyZXR1cm4hKGkuaXNSZWFkT25seXx8aS5pc01vZGVsUmVhZE9ubHl8fCFpLmFsbG93SW5zZXJ0fHwhaS5hbGxvd0NsaXBib2FyZHx8RGlhZ3JhbS5zMD09PW51bGx8fERpYWdyYW0uczAuY291bnQ9PT0wfHxEaWFncmFtLlIxIT09aS5tb2RlbC5kYXRhRm9ybWF0KX11bmRvKCl7dGhpcy5kaWFncmFtLnVuZG9NYW5hZ2VyLnVuZG8oKX1jYW5VbmRvKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07cmV0dXJuIHQuaXNSZWFkT25seXx8dC5pc01vZGVsUmVhZE9ubHk/ITE6dC5hbGxvd1VuZG8mJnQudW5kb01hbmFnZXIuY2FuVW5kbygpfXJlZG8oKXt0aGlzLmRpYWdyYW0udW5kb01hbmFnZXIucmVkbygpfWNhblJlZG8oKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtyZXR1cm4gdC5pc1JlYWRPbmx5fHx0LmlzTW9kZWxSZWFkT25seT8hMTp0LmFsbG93VW5kbyYmdC51bmRvTWFuYWdlci5jYW5SZWRvKCl9ZGVjcmVhc2Vab29tKHQpe3Q9PT12b2lkIDAmJih0PTEvdGhpcy56b29tRmFjdG9yKSxVLnIodCxDb21tYW5kSGFuZGxlcixcImRlY3JlYXNlWm9vbTpmYWN0b3JcIik7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaS5hdXRvU2NhbGUhPT0xKXJldHVybjtjb25zdCBlPWkuc2NhbGUqdDtlPGkubWluU2NhbGV8fGU+aS5tYXhTY2FsZXx8KGkuc2NhbGU9ZSl9Y2FuRGVjcmVhc2Vab29tKHQpe3Q9PT12b2lkIDAmJih0PTEvdGhpcy56b29tRmFjdG9yKSxVLnIodCxDb21tYW5kSGFuZGxlcixcImNhbkRlY3JlYXNlWm9vbTpmYWN0b3JcIik7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaS5hdXRvU2NhbGUhPT0xKXJldHVybiExO2NvbnN0IGU9aS5zY2FsZSp0O3JldHVybiBlPGkubWluU2NhbGV8fGU+aS5tYXhTY2FsZT8hMTppLmFsbG93Wm9vbX1pbmNyZWFzZVpvb20odCl7dD09PXZvaWQgMCYmKHQ9dGhpcy56b29tRmFjdG9yKSxVLnIodCxDb21tYW5kSGFuZGxlcixcImluY3JlYXNlWm9vbTpmYWN0b3JcIik7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaS5hdXRvU2NhbGUhPT0xKXJldHVybjtjb25zdCBlPWkuc2NhbGUqdDtlPGkubWluU2NhbGV8fGU+aS5tYXhTY2FsZXx8KGkuc2NhbGU9ZSl9Y2FuSW5jcmVhc2Vab29tKHQpe3Q9PT12b2lkIDAmJih0PXRoaXMuem9vbUZhY3RvciksVS5yKHQsQ29tbWFuZEhhbmRsZXIsXCJjYW5JbmNyZWFzZVpvb206ZmFjdG9yXCIpO2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKGkuYXV0b1NjYWxlIT09MSlyZXR1cm4hMTtjb25zdCBlPWkuc2NhbGUqdDtyZXR1cm4gZTxpLm1pblNjYWxlfHxlPmkubWF4U2NhbGU/ITE6aS5hbGxvd1pvb219cmVzZXRab29tKHQpe3Q9PT12b2lkIDAmJih0PXRoaXMuZGVmYXVsdFNjYWxlKSxVLnIodCxDb21tYW5kSGFuZGxlcixcInJlc2V0Wm9vbTpuZXdzY2FsZVwiKTtjb25zdCBpPXRoaXMuZGlhZ3JhbTt0PGkubWluU2NhbGV8fHQ+aS5tYXhTY2FsZXx8KGkuc2NhbGU9dCl9Y2FuUmVzZXRab29tKHQpe3Q9PT12b2lkIDAmJih0PXRoaXMuZGVmYXVsdFNjYWxlKSxVLnIodCxDb21tYW5kSGFuZGxlcixcImNhblJlc2V0Wm9vbTpuZXdzY2FsZVwiKTtjb25zdCBpPXRoaXMuZGlhZ3JhbTtyZXR1cm4gdDxpLm1pblNjYWxlfHx0PmkubWF4U2NhbGU/ITE6aS5hbGxvd1pvb219em9vbVRvRml0KCl7Y29uc3QgdD10aGlzLmRpYWdyYW0saT10LmFuaW1hdGlvbk1hbmFnZXI7aS5zdG9wQW5pbWF0aW9uKCksdC5yZWRyYXcoKTtjb25zdCBlPXQucG9zaXRpb24scz10LnNjYWxlO2kuQmwoXCJab29tIFRvIEZpdFwiKSx0aGlzLmlzWm9vbVRvRml0UmVzdG9yZUVuYWJsZWQmJnM9PT10aGlzLmoxJiYhaXNOYU4odGhpcy5xMSkmJnRoaXMuVzEhPT1udWxsJiZ0LmRvY3VtZW50Qm91bmRzLmVxdWFscyh0aGlzLnYxKT8odC5zY2FsZT10aGlzLnExLHQucG9zaXRpb249dGhpcy5XMSx0aGlzLmoxPU5hTix0aGlzLnYxPVJlY3QuemcpOih0aGlzLnExPXMsdGhpcy5XMT1lLmNvcHkoKSx0Lnpvb21Ub0ZpdCgpLHRoaXMuajE9dC5zY2FsZSx0aGlzLnYxPXQuZG9jdW1lbnRCb3VuZHMuY29weSgpKSxpLktNKCl9Y2FuWm9vbVRvRml0KCl7cmV0dXJuIHRoaXMuZGlhZ3JhbS5hbGxvd1pvb219c2Nyb2xsVG9QYXJ0KHQpe3Q9PT12b2lkIDAmJih0PW51bGwpLHQhPT1udWxsJiZVLmUodCxQYXJ0LENvbW1hbmRIYW5kbGVyLFwicGFydFwiKTtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpZihpLmVuc3VyZUJvdW5kcygpLHQ9PT1udWxsKXt0cnl7dGhpcy56byE9PW51bGwmJih0aGlzLnpvLm5leHQoKT90PXRoaXMuem8udmFsdWU6dGhpcy56bz1udWxsKX1jYXRjaHt0aGlzLnpvPW51bGx9dD09PW51bGwmJihpLmhpZ2hsaWdodGVkcy5jb3VudD4wP3RoaXMuem89aS5oaWdobGlnaHRlZHMuaXRlcmF0b3I6aS5zZWxlY3Rpb24uY291bnQ+MCYmKHRoaXMuem89aS5zZWxlY3Rpb24uaXRlcmF0b3IpLHRoaXMuem8hPT1udWxsJiZ0aGlzLnpvLm5leHQoKSYmKHQ9dGhpcy56by52YWx1ZSkpfWlmKHQhPT1udWxsKXtjb25zdCBlPWkuYW5pbWF0aW9uTWFuYWdlcjtlLkJsKFwiU2Nyb2xsIFRvIFBhcnRcIik7Y29uc3Qgcz10aGlzLnNjcm9sbFRvUGFydFBhdXNlO2lmKHM+MCl7Y29uc3Qgbj10aGlzLl9mKHQsW3RdKTtpZihuLmxlbmd0aD09PTEpaS5zdGFydFRyYW5zYWN0aW9uKCksaS5jZW50ZXJSZWN0KHQuYWN0dWFsQm91bmRzKSxpLmNvbW1pdFRyYW5zYWN0aW9uKFwiU2Nyb2xsIFRvIFBhcnRcIik7ZWxzZXtjb25zdCBvPSgpPT57aS5zdGFydFRyYW5zYWN0aW9uKCk7bGV0IGw9bi5wb3AoKTtmb3IoO24ubGVuZ3RoPjAmJmwgaW5zdGFuY2VvZiBOb2RlJiZsLmlzVHJlZUV4cGFuZGVkJiYoIShsIGluc3RhbmNlb2YgR3JvdXApfHxsLmlzU3ViR3JhcGhFeHBhbmRlZCk7KWw9bi5wb3AoKTtuLmxlbmd0aD4wPyhsIGluc3RhbmNlb2YgUGFydCYmaS5zY3JvbGxUb1JlY3QobC5hY3R1YWxCb3VuZHMpLGwgaW5zdGFuY2VvZiBOb2RlJiYhbC5pc1RyZWVFeHBhbmRlZCYmKGwuaXNUcmVlRXhwYW5kZWQ9ITApLGwgaW5zdGFuY2VvZiBHcm91cCYmIWwuaXNTdWJHcmFwaEV4cGFuZGVkJiYobC5pc1N1YkdyYXBoRXhwYW5kZWQ9ITApKToobCBpbnN0YW5jZW9mIFBhcnQmJmkuY2VudGVyUmVjdChsLmFjdHVhbEJvdW5kcyksaS5yZW1vdmVEaWFncmFtTGlzdGVuZXIoXCJMYXlvdXRDb21wbGV0ZWRcIixyKSksaS5jb21taXRUcmFuc2FjdGlvbihcIlNjcm9sbCBUbyBQYXJ0XCIpfSxyPSgpPT57VS5scihvLChlLmlzRW5hYmxlZD9lLmR1cmF0aW9uOjApK3MpfTtpLmFkZERpYWdyYW1MaXN0ZW5lcihcIkxheW91dENvbXBsZXRlZFwiLHIpLG8oKX19ZWxzZXtjb25zdCBuPWkucG9zaXRpb24uY29weSgpO2kuY2VudGVyUmVjdCh0LmFjdHVhbEJvdW5kcyksbi5lcXVhbHNBcHByb3goaS5wb3NpdGlvbikmJmUuc3RvcEFuaW1hdGlvbigpfX19X2YodCxpKXtpZih0LmlzVmlzaWJsZSgpKXJldHVybiBpO2lmKHQgaW5zdGFuY2VvZiBBZG9ybm1lbnQpe2NvbnN0IGU9dC5hZG9ybmVkUGFydDtlIT09bnVsbCYmdGhpcy5fZihlLGkpfWVsc2UgaWYodCBpbnN0YW5jZW9mIExpbmspe2NvbnN0IGU9dC5mcm9tTm9kZTtlIT09bnVsbCYmdGhpcy5fZihlLGkpO2NvbnN0IHM9dC50b05vZGU7cyE9PW51bGwmJnRoaXMuX2YocyxpKX1lbHNle2lmKHQgaW5zdGFuY2VvZiBOb2RlKXtjb25zdCBzPXQubGFiZWxlZExpbms7cyE9PW51bGwmJnRoaXMuX2YocyxpKTtjb25zdCBuPXQuZmluZFRyZWVQYXJlbnROb2RlKCk7biE9PW51bGwmJighbi5pc1RyZWVFeHBhbmRlZCYmIW4ud2FzVHJlZUV4cGFuZGVkJiZpLnB1c2gobiksdGhpcy5fZihuLGkpKX1jb25zdCBlPXQuY29udGFpbmluZ0dyb3VwO2UhPT1udWxsJiYoIWUuaXNTdWJHcmFwaEV4cGFuZGVkJiYhZS53YXNTdWJHcmFwaEV4cGFuZGVkJiZpLnB1c2goZSksdGhpcy5fZihlLGkpKX1yZXR1cm4gaX1jYW5TY3JvbGxUb1BhcnQodCl7aWYodD09PXZvaWQgMCYmKHQ9bnVsbCksdCE9PW51bGwmJiEodCBpbnN0YW5jZW9mIFBhcnQpKXJldHVybiExO2NvbnN0IGk9dGhpcy5kaWFncmFtO3JldHVybiBpLnNlbGVjdGlvbi5jb3VudD09PTAmJmkuaGlnaGxpZ2h0ZWRzLmNvdW50PT09MD8hMTppLmFsbG93SG9yaXpvbnRhbFNjcm9sbCYmaS5hbGxvd1ZlcnRpY2FsU2Nyb2xsfWNvbGxhcHNlVHJlZSh0KXt0PT09dm9pZCAwJiYodD1udWxsKTtjb25zdCBpPXRoaXMuZGlhZ3JhbSxlPVwiQ29sbGFwc2UgVHJlZVwiO3RyeXtpLnN0YXJ0VHJhbnNhY3Rpb24oZSksaS5hbmltYXRpb25NYW5hZ2VyLkJsKGUpO2NvbnN0IG49bmV3IExpc3Q7aWYodCE9PW51bGwmJnQuaXNUcmVlRXhwYW5kZWQpdC5jb2xsYXBzZVRyZWUoKSxuLmFkZCh0KTtlbHNlIGlmKHQ9PT1udWxsKXtjb25zdCBvPWkuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KXtjb25zdCByPW8udmFsdWU7ciBpbnN0YW5jZW9mIE5vZGUmJnIuaXNUcmVlRXhwYW5kZWQmJihyLmNvbGxhcHNlVHJlZSgpLG4uYWRkKHIpKX19aS5PKFwiVHJlZUNvbGxhcHNlZFwiLG4pfWZpbmFsbHl7aS5jb21taXRUcmFuc2FjdGlvbihlKX19Y2FuQ29sbGFwc2VUcmVlKHQpe3Q9PT12b2lkIDAmJih0PW51bGwpO2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKGkuaXNSZWFkT25seSlyZXR1cm4hMTtpZih0IT09bnVsbCl7aWYoISh0IGluc3RhbmNlb2YgTm9kZSl8fCF0LmlzVHJlZUV4cGFuZGVkKXJldHVybiExO2lmKHQuZmluZFRyZWVDaGlsZHJlbkxpbmtzKCkuY291bnQ+MClyZXR1cm4hMH1lbHNle2NvbnN0IGU9aS5zZWxlY3Rpb24uaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtpZihzIGluc3RhbmNlb2YgTm9kZSl7aWYoIXMuaXNUcmVlRXhwYW5kZWQpY29udGludWU7aWYocy5maW5kVHJlZUNoaWxkcmVuTGlua3MoKS5jb3VudD4wKXJldHVybiEwfX19cmV0dXJuITF9ZXhwYW5kVHJlZSh0KXt0PT09dm9pZCAwJiYodD1udWxsKTtjb25zdCBpPXRoaXMuZGlhZ3JhbSxlPVwiRXhwYW5kIFRyZWVcIjt0cnl7aS5zdGFydFRyYW5zYWN0aW9uKGUpLGkuYW5pbWF0aW9uTWFuYWdlci5CbChlKTtjb25zdCBuPW5ldyBMaXN0O2lmKHQhPT1udWxsJiYhdC5pc1RyZWVFeHBhbmRlZCl0LmV4cGFuZFRyZWUoKSxuLmFkZCh0KTtlbHNlIGlmKHQ9PT1udWxsKXtjb25zdCBvPWkuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KXtjb25zdCByPW8udmFsdWU7ciBpbnN0YW5jZW9mIE5vZGUmJihyLmlzVHJlZUV4cGFuZGVkfHwoci5leHBhbmRUcmVlKCksbi5hZGQocikpKX19aS5PKFwiVHJlZUV4cGFuZGVkXCIsbil9ZmluYWxseXtpLmNvbW1pdFRyYW5zYWN0aW9uKGUpfX1jYW5FeHBhbmRUcmVlKHQpe3Q9PT12b2lkIDAmJih0PW51bGwpO2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKGkuaXNSZWFkT25seSlyZXR1cm4hMTtpZih0IT09bnVsbCl7aWYoISh0IGluc3RhbmNlb2YgTm9kZSl8fHQuaXNUcmVlRXhwYW5kZWQpcmV0dXJuITE7aWYodC5maW5kVHJlZUNoaWxkcmVuTGlua3MoKS5jb3VudD4wKXJldHVybiEwfWVsc2V7Y29uc3QgZT1pLnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO2lmKHMgaW5zdGFuY2VvZiBOb2RlKXtpZihzLmlzVHJlZUV4cGFuZGVkKWNvbnRpbnVlO2lmKHMuZmluZFRyZWVDaGlsZHJlbkxpbmtzKCkuY291bnQ+MClyZXR1cm4hMH19fXJldHVybiExfWdyb3VwU2VsZWN0aW9uKCl7Y29uc3QgdD10aGlzLmRpYWdyYW0saT10Lm1vZGVsO2lmKCFpLnhhKCkpcmV0dXJuO2NvbnN0IGU9dGhpcy5hcmNoZXR5cGVHcm91cERhdGE7aWYoZT09PW51bGwpcmV0dXJuO2xldCBzPW51bGw7dHJ5e3QuY3VycmVudEN1cnNvcj1cIndhaXRcIix0Lk8oXCJDaGFuZ2luZ1NlbGVjdGlvblwiLHQuc2VsZWN0aW9uKSx0LnN0YXJ0VHJhbnNhY3Rpb24oXCJHcm91cFwiKTtjb25zdCBuPW5ldyBMaXN0LG89dC5zZWxlY3Rpb24uaXRlcmF0b3I7Zm9yKDtvLm5leHQoKTspe2NvbnN0IGY9by52YWx1ZTtmLkNlKCkmJmYuY2FuR3JvdXAoKSYmbi5hZGQoZil9Y29uc3Qgcj1uZXcgTGlzdCxsPW4uaXRlcmF0b3I7Zm9yKDtsLm5leHQoKTspe2NvbnN0IGY9bC52YWx1ZTtsZXQgYT0hMTtjb25zdCBjPW4uaXRlcmF0b3I7Zm9yKDtjLm5leHQoKTspe2NvbnN0IHU9Yy52YWx1ZTtpZihmLmlzTWVtYmVyT2YodSkpe2E9ITA7YnJlYWt9fWF8fHIuYWRkKGYpfWNvbnN0IGg9ci5maXJzdCgpO2lmKGghPT1udWxsKXtsZXQgZj1oLmNvbnRhaW5pbmdHcm91cDtpZihmIT09bnVsbClmb3IoO2YhPT1udWxsOyl7bGV0IGE9ITE7Y29uc3QgYz1yLml0ZXJhdG9yO2Zvcig7Yy5uZXh0KCk7KWlmKCFjLnZhbHVlLmlzTWVtYmVyT2YoZikpe2E9ITA7YnJlYWt9aWYoYSlmPWYuY29udGFpbmluZ0dyb3VwO2Vsc2UgYnJlYWt9aWYoZSBpbnN0YW5jZW9mIEdyb3VwKWUuS3QoKSxzPWUuY29weSgpLHMhPT1udWxsJiZ0LmFkZChzKTtlbHNlIGlmKGkuaXNHcm91cEZvckRhdGEoZSkpe2NvbnN0IGE9aS5jb3B5Tm9kZURhdGEoZSk7VS5XKGEpJiYoaS5hZGROb2RlRGF0YShhKSxzPXQuZmluZE5vZGVGb3JEYXRhKGEpKX1pZihzIT09bnVsbCl7ZiE9PW51bGwmJnRoaXMuaXNWYWxpZE1lbWJlcihmLHMpJiYocy5jb250YWluaW5nR3JvdXA9Zik7Y29uc3QgYT1yLml0ZXJhdG9yO2Zvcig7YS5uZXh0KCk7KXtjb25zdCBjPWEudmFsdWU7dGhpcy5pc1ZhbGlkTWVtYmVyKHMsYykmJihjLmNvbnRhaW5pbmdHcm91cD1zKX10LmNsZWFyU2VsZWN0aW9uKCEwKSxzLmlzU2VsZWN0ZWQ9ITB9fXQuTyhcIlNlbGVjdGlvbkdyb3VwZWRcIixzKX1maW5hbGx5e3QuY29tbWl0VHJhbnNhY3Rpb24oXCJHcm91cFwiKSx0Lk8oXCJDaGFuZ2VkU2VsZWN0aW9uXCIsdC5zZWxlY3Rpb24pLHQuY3VycmVudEN1cnNvcj1cIlwifX1jYW5Hcm91cFNlbGVjdGlvbigpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHQuaXNSZWFkT25seXx8dC5pc01vZGVsUmVhZE9ubHl8fCF0LmFsbG93SW5zZXJ0fHwhdC5hbGxvd0dyb3VwfHwhdC5tb2RlbC54YSgpfHx0aGlzLmFyY2hldHlwZUdyb3VwRGF0YT09PW51bGwpcmV0dXJuITE7Y29uc3QgZT10LnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO2lmKHMuQ2UoKSYmcy5jYW5Hcm91cCgpKXJldHVybiEwfXJldHVybiExfVBQKHQpe2NvbnN0IGk9VS5sdCgpO2lmKEFycmF5LmlzQXJyYXkodCkpdC5mb3JFYWNoKG49PntuIGluc3RhbmNlb2YgTGlua3x8biBpbnN0YW5jZW9mIFBhcnQmJmkucHVzaChuKX0pO2Vsc2V7Y29uc3Qgbj10Lml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7byBpbnN0YW5jZW9mIExpbmt8fG8gaW5zdGFuY2VvZiBQYXJ0JiZpLnB1c2gobyl9fWNvbnN0IGU9bmV3IEdTZXQscz1pLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKXtjb25zdCBvPWlbbl07bGV0IHI9ITA7Zm9yKGxldCBsPTA7bDxzO2wrKylpZihvLmlzTWVtYmVyT2YoaVtsXSkpe3I9ITE7YnJlYWt9ciYmZS5hZGQobyl9cmV0dXJuIFUudHQoaSksZX1pc1ZhbGlkTWVtYmVyKHQsaSl7aWYoaT09PW51bGx8fHQ9PT1pfHxpIGluc3RhbmNlb2YgTGluaylyZXR1cm4hMTtsZXQgZTtyZXR1cm4gdCE9PW51bGwmJih0PT09aXx8dC5pc01lbWJlck9mKGkpfHwoZT10Lm1lbWJlclZhbGlkYXRpb24sZSE9PW51bGwmJiFlKHQsaSkpfHx0LmRhdGE9PT1udWxsJiZpLmRhdGEhPT1udWxsfHx0LmRhdGEhPT1udWxsJiZpLmRhdGE9PT1udWxsKT8hMTooZT10aGlzLm1lbWJlclZhbGlkYXRpb24sZSE9PW51bGw/ZSh0LGkpOiEwKX11bmdyb3VwU2VsZWN0aW9uKHQpe3Q9PT12b2lkIDAmJih0PW51bGwpO2NvbnN0IGk9dGhpcy5kaWFncmFtLGU9aS5tb2RlbDtpZihlLnhhKCkpdHJ5e2kuY3VycmVudEN1cnNvcj1cIndhaXRcIixpLk8oXCJDaGFuZ2luZ1NlbGVjdGlvblwiLGkuc2VsZWN0aW9uKSxpLnN0YXJ0VHJhbnNhY3Rpb24oXCJVbmdyb3VwXCIpO2NvbnN0IHM9bmV3IExpc3Q7aWYodCE9PW51bGwpcy5hZGQodCk7ZWxzZXtjb25zdCBvPWkuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KXtjb25zdCByPW8udmFsdWU7ciBpbnN0YW5jZW9mIEdyb3VwJiZyLmNhblVuZ3JvdXAoKSYmcy5hZGQocil9fWNvbnN0IG49bmV3IExpc3Q7aWYocy5jb3VudD4wKXtpLmNsZWFyU2VsZWN0aW9uKCEwKTtjb25zdCBvPXMuaXRlcmF0b3I7Zm9yKDtvLm5leHQoKTspe2NvbnN0IHI9by52YWx1ZTtyLmV4cGFuZFN1YkdyYXBoKCk7Y29uc3QgbD1yLmNvbnRhaW5pbmdHcm91cCxoPWwhPT1udWxsJiZsLmRhdGEhPT1udWxsP2UuZ2V0S2V5Rm9yTm9kZURhdGEobC5kYXRhKTp2b2lkIDA7bi5hZGRBbGwoci5tZW1iZXJQYXJ0cyk7Y29uc3QgZj1uLml0ZXJhdG9yO2Zvcig7Zi5uZXh0KCk7KXtjb25zdCBhPWYudmFsdWU7aWYoYS5pc1NlbGVjdGVkPSEwLGEgaW5zdGFuY2VvZiBMaW5rKWNvbnRpbnVlO2NvbnN0IGM9YS5kYXRhO2MhPT1udWxsP2Uuc2V0R3JvdXBGb3JEYXRhKGMsaCk6YS5jb250YWluaW5nR3JvdXA9bH1pLnJlbW92ZShyKX19aS5PKFwiU2VsZWN0aW9uVW5ncm91cGVkXCIscyxuKX1maW5hbGx5e2kuY29tbWl0VHJhbnNhY3Rpb24oXCJVbmdyb3VwXCIpLGkuTyhcIkNoYW5nZWRTZWxlY3Rpb25cIixpLnNlbGVjdGlvbiksaS5jdXJyZW50Q3Vyc29yPVwiXCJ9fWNhblVuZ3JvdXBTZWxlY3Rpb24odCl7dD09PXZvaWQgMCYmKHQ9bnVsbCk7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaS5pc1JlYWRPbmx5fHxpLmlzTW9kZWxSZWFkT25seXx8IWkuYWxsb3dEZWxldGV8fCFpLmFsbG93VW5ncm91cHx8IWkubW9kZWwueGEoKSlyZXR1cm4hMTtpZih0IT09bnVsbCl7aWYoISh0IGluc3RhbmNlb2YgR3JvdXApKXJldHVybiExO2lmKHQuY2FuVW5ncm91cCgpKXJldHVybiEwfWVsc2V7Y29uc3Qgcz1pLnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2lmKG4gaW5zdGFuY2VvZiBHcm91cCYmbi5jYW5Vbmdyb3VwKCkpcmV0dXJuITB9fXJldHVybiExfWFkZFRvcExldmVsUGFydHModCxpKXtjb25zdCBlPXRoaXMuUFAodCk7bGV0IHM9ITA7Y29uc3Qgbj1lLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7by5jb250YWluaW5nR3JvdXAhPT1udWxsJiYoIWl8fHRoaXMuaXNWYWxpZE1lbWJlcihudWxsLG8pP28uY29udGFpbmluZ0dyb3VwPW51bGw6cz0hMSl9cmV0dXJuIHN9Y29sbGFwc2VTdWJHcmFwaCh0KXt0PT09dm9pZCAwJiYodD1udWxsKTtjb25zdCBpPXRoaXMuZGlhZ3JhbSxlPVwiQ29sbGFwc2UgU3ViR3JhcGhcIjt0cnl7aS5zdGFydFRyYW5zYWN0aW9uKGUpLGkuYW5pbWF0aW9uTWFuYWdlci5CbChlKTtjb25zdCBuPW5ldyBMaXN0O2lmKHQhPT1udWxsJiZ0LmlzU3ViR3JhcGhFeHBhbmRlZCl0LmNvbGxhcHNlU3ViR3JhcGgoKSxuLmFkZCh0KTtlbHNlIGlmKHQ9PT1udWxsKXtjb25zdCBvPWkuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KXtjb25zdCByPW8udmFsdWU7ciBpbnN0YW5jZW9mIEdyb3VwJiZyLmlzU3ViR3JhcGhFeHBhbmRlZCYmKHIuY29sbGFwc2VTdWJHcmFwaCgpLG4uYWRkKHIpKX19aS5PKFwiU3ViR3JhcGhDb2xsYXBzZWRcIixuKX1maW5hbGx5e2kuY29tbWl0VHJhbnNhY3Rpb24oZSl9fWNhbkNvbGxhcHNlU3ViR3JhcGgodCl7dD09PXZvaWQgMCYmKHQ9bnVsbCk7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaS5pc1JlYWRPbmx5KXJldHVybiExO2lmKHQhPT1udWxsKXJldHVybiEoISh0IGluc3RhbmNlb2YgR3JvdXApfHwhdC5pc1N1YkdyYXBoRXhwYW5kZWQpO3tjb25zdCBlPWkuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBzPWUudmFsdWU7aWYocyBpbnN0YW5jZW9mIEdyb3VwJiZzLmlzU3ViR3JhcGhFeHBhbmRlZClyZXR1cm4hMH19cmV0dXJuITF9ZXhwYW5kU3ViR3JhcGgodCl7dD09PXZvaWQgMCYmKHQ9bnVsbCk7Y29uc3QgaT10aGlzLmRpYWdyYW0sZT1cIkV4cGFuZCBTdWJHcmFwaFwiLHM9bmV3IExpc3Q7dHJ5e2lmKGkuc3RhcnRUcmFuc2FjdGlvbihlKSxpLmFuaW1hdGlvbk1hbmFnZXIuQmwoZSksdCE9PW51bGwmJiF0LmlzU3ViR3JhcGhFeHBhbmRlZCl0LmV4cGFuZFN1YkdyYXBoKCkscy5hZGQodCk7ZWxzZSBpZih0PT09bnVsbCl7Y29uc3Qgbz1pLnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlO3IgaW5zdGFuY2VvZiBHcm91cCYmKHIuaXNTdWJHcmFwaEV4cGFuZGVkfHwoci5leHBhbmRTdWJHcmFwaCgpLHMuYWRkKHIpKSl9fWkuTyhcIlN1YkdyYXBoRXhwYW5kZWRcIixzKX1maW5hbGx5e2Zvcihjb25zdCBuIG9mIHMpdGhpcy5rTChpLG4pO3QmJnRoaXMua0woaSx0KSxpLmNvbW1pdFRyYW5zYWN0aW9uKGUpfX1rTCh0LGkpe2Zvcihjb25zdCBlIG9mIGkubWVtYmVyUGFydHMpZSBpbnN0YW5jZW9mIE5vZGUmJnQuT2YoZSxpKX1jYW5FeHBhbmRTdWJHcmFwaCh0KXt0PT09dm9pZCAwJiYodD1udWxsKTtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpZihpLmlzUmVhZE9ubHkpcmV0dXJuITE7aWYodCE9PW51bGwpcmV0dXJuISghKHQgaW5zdGFuY2VvZiBHcm91cCl8fHQuaXNTdWJHcmFwaEV4cGFuZGVkKTt7Y29uc3QgZT1pLnNlbGVjdGlvbi5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO2lmKHMgaW5zdGFuY2VvZiBHcm91cCYmIXMuaXNTdWJHcmFwaEV4cGFuZGVkKXJldHVybiEwfX1yZXR1cm4hMX1lZGl0VGV4dEJsb2NrKHQpe3Q9PT12b2lkIDAmJih0PW51bGwpLHQhPT1udWxsJiZVLmUodCxUZXh0QmxvY2ssQ29tbWFuZEhhbmRsZXIsXCJlZGl0VGV4dEJsb2NrXCIpO2NvbnN0IGk9dGhpcy5kaWFncmFtLGU9aS50b29sTWFuYWdlci5maW5kVG9vbChcIlRleHRFZGl0aW5nXCIpO2lmKGUhPT1udWxsKXtpZih0PT09bnVsbCl7bGV0IHM9bnVsbDtjb25zdCBuPWkuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7aWYoby5jYW5FZGl0KCkpe3M9bzticmVha319aWYocz09PW51bGwpcmV0dXJuO3Q9cy5maW5kSW5WaXN1YWxUcmVlKG89Pm8gaW5zdGFuY2VvZiBUZXh0QmxvY2smJm8uZWRpdGFibGUpfXQhPT1udWxsJiYoaS5jdXJyZW50VG9vbD1udWxsLGUudGV4dEJsb2NrPXQsaS5jdXJyZW50VG9vbD1lKX19Y2FuRWRpdFRleHRCbG9jayh0KXt0PT09dm9pZCAwJiYodD1udWxsKTtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpZihpLmlzUmVhZE9ubHl8fGkuaXNNb2RlbFJlYWRPbmx5fHwhaS5hbGxvd1RleHRFZGl0fHxpLnRvb2xNYW5hZ2VyLmZpbmRUb29sKFwiVGV4dEVkaXRpbmdcIik9PT1udWxsKXJldHVybiExO2lmKHQhPT1udWxsKXtpZighKHQgaW5zdGFuY2VvZiBUZXh0QmxvY2spKXJldHVybiExO2NvbnN0IGU9dC5wYXJ0O2lmKGUhPT1udWxsJiZlLmNhbkVkaXQoKSlyZXR1cm4hMH1lbHNle2NvbnN0IGU9aS5zZWxlY3Rpb24uaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtpZihzLmNhbkVkaXQoKSYmKHQ9cy5maW5kSW5WaXN1YWxUcmVlKG49Pm4gaW5zdGFuY2VvZiBUZXh0QmxvY2smJm4uZWRpdGFibGUpLHQhPT1udWxsKSlyZXR1cm4hMH19cmV0dXJuITF9c2hvd0NvbnRleHRNZW51KHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtLGU9aS50b29sTWFuYWdlci5maW5kVG9vbChcIkNvbnRleHRNZW51XCIpO2lmKGU9PT1udWxsKXJldHVybjt0PT09dm9pZCAwJiYodD1udWxsKSx0PT09bnVsbCYmKGkuc2VsZWN0aW9uLmNvdW50PjA/dD1pLnNlbGVjdGlvbi5maXJzdCgpOnQ9aSk7Y29uc3Qgcz1lLmZpbmRPYmplY3RXaXRoQ29udGV4dE1lbnUodCk7aWYocyE9PW51bGwpe2NvbnN0IG49aS5sYXN0SW5wdXQ7bGV0IG89bnVsbDtpZihzIGluc3RhbmNlb2YgR3JhcGhPYmplY3Qpbz1zLmdldERvY3VtZW50UG9pbnQoU3BvdC5DZW50ZXIpO2Vsc2UgaWYoIWkudmlld3BvcnRCb3VuZHMuY29udGFpbnNQb2ludChuLmRvY3VtZW50UG9pbnQpKXtjb25zdCByPWkudmlld3BvcnRCb3VuZHM7bz1uZXcgUG9pbnQoci54K3Iud2lkdGgvMixyLnkrci5oZWlnaHQvMil9aWYobyE9PW51bGwpe2NvbnN0IHI9bmV3IElucHV0RXZlbnQ7ci5kaWFncmFtPWksci52aWV3UG9pbnQ9aS50cmFuc2Zvcm1Eb2NUb1ZpZXcobyksci5kb2N1bWVudFBvaW50PW8sci5idXR0b249MixyLnVwPSEwLGkubGFzdElucHV0PXJ9aS5jdXJyZW50VG9vbD1lLGUub3Blbk1lbnUoITEscyl9fWNhblNob3dDb250ZXh0TWVudSh0KXtjb25zdCBpPXRoaXMuZGlhZ3JhbSxlPWkudG9vbE1hbmFnZXIuZmluZFRvb2woXCJDb250ZXh0TWVudVwiKTtyZXR1cm4hKGU9PT1udWxsfHwodD09PXZvaWQgMCYmKHQ9bnVsbCksdD09PW51bGwmJihpLnNlbGVjdGlvbi5jb3VudD4wP3Q9aS5zZWxlY3Rpb24uZmlyc3QoKTp0PWkpLGUuZmluZE9iamVjdFdpdGhDb250ZXh0TWVudSh0KT09PW51bGwpKX1nZXQgY29waWVzQ2xpcGJvYXJkRGF0YSgpe3JldHVybiB0aGlzLmRQfXNldCBjb3BpZXNDbGlwYm9hcmREYXRhKHQpe1UuaSh0LFwiYm9vbGVhblwiLENvbW1hbmRIYW5kbGVyLFwiY29waWVzQ2xpcGJvYXJkRGF0YVwiKSx0aGlzLmRQPXR9Z2V0IGNvcGllc0Nvbm5lY3RlZExpbmtzKCl7cmV0dXJuIHRoaXMuZ1B9c2V0IGNvcGllc0Nvbm5lY3RlZExpbmtzKHQpe1UuaSh0LFwiYm9vbGVhblwiLENvbW1hbmRIYW5kbGVyLFwiY29waWVzQ29ubmVjdGVkTGlua3NcIiksdGhpcy5nUD10fWdldCBkZWxldGVzQ29ubmVjdGVkTGlua3MoKXtyZXR1cm4gdGhpcy5tUH1zZXQgZGVsZXRlc0Nvbm5lY3RlZExpbmtzKHQpe1UuaSh0LFwiYm9vbGVhblwiLENvbW1hbmRIYW5kbGVyLFwiZGVsZXRlc0Nvbm5lY3RlZExpbmtzXCIpLHRoaXMubVA9dH1nZXQgY29waWVzVHJlZSgpe3JldHVybiB0aGlzLnBQfXNldCBjb3BpZXNUcmVlKHQpe1UuaSh0LFwiYm9vbGVhblwiLENvbW1hbmRIYW5kbGVyLFwiY29waWVzVHJlZVwiKSx0aGlzLnBQPXR9Z2V0IGRlbGV0ZXNUcmVlKCl7cmV0dXJuIHRoaXMueVB9c2V0IGRlbGV0ZXNUcmVlKHQpe1UuaSh0LFwiYm9vbGVhblwiLENvbW1hbmRIYW5kbGVyLFwiZGVsZXRlc1RyZWVcIiksdGhpcy55UD10fWdldCBjb3BpZXNQYXJlbnRLZXkoKXtyZXR1cm4gdGhpcy53UH1zZXQgY29waWVzUGFyZW50S2V5KHQpe1UuaSh0LFwiYm9vbGVhblwiLENvbW1hbmRIYW5kbGVyLFwiY29waWVzUGFyZW50S2V5XCIpLHRoaXMud1A9dH1nZXQgY29waWVzR3JvdXBLZXkoKXtyZXR1cm4gdGhpcy54UH1zZXQgY29waWVzR3JvdXBLZXkodCl7VS5pKHQsXCJib29sZWFuXCIsQ29tbWFuZEhhbmRsZXIsXCJjb3BpZXNHcm91cEtleVwiKSx0aGlzLnhQPXR9Z2V0IGFyY2hldHlwZUdyb3VwRGF0YSgpe3JldHVybiB0aGlzLmJQfXNldCBhcmNoZXR5cGVHcm91cERhdGEodCl7dCE9PW51bGwmJlUuTW8odCxDb21tYW5kSGFuZGxlcixcImFyY2hldHlwZUdyb3VwRGF0YVwiKTtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpZihEZWJ1ZyYmdCE9PW51bGwpe2NvbnN0IGU9aS5tb2RlbDtlLnhhKCkmJiEodCBpbnN0YW5jZW9mIEdyb3VwKSYmIWUuaXNHcm91cEZvckRhdGEodCkmJlUubihcIkNvbW1hbmRIYW5kbGVyLmFyY2hldHlwZUdyb3VwRGF0YSBtdXN0IGJlIGVpdGhlciBhIEdyb3VwIG9yIGEgZGF0YSBvYmplY3QgZm9yIHdoaWNoIEdyYXBoTGlua3NNb2RlbC5pc0dyb3VwRm9yTm9kZURhdGEgaXMgdHJ1ZTogXCIrdCl9dGhpcy5iUD10fWdldCBtZW1iZXJWYWxpZGF0aW9uKCl7cmV0dXJuIHRoaXMuZmh9c2V0IG1lbWJlclZhbGlkYXRpb24odCl7dCE9PW51bGwmJlUuUCh0LENvbW1hbmRIYW5kbGVyLFwibWVtYmVyVmFsaWRhdGlvblwiKSx0aGlzLmZoPXR9Z2V0IGRlZmF1bHRTY2FsZSgpe3JldHVybiB0aGlzLmRpYWdyYW0uZGVmYXVsdFNjYWxlfXNldCBkZWZhdWx0U2NhbGUodCl7dGhpcy5kaWFncmFtLmRlZmF1bHRTY2FsZT10fWdldCB6b29tRmFjdG9yKCl7cmV0dXJuIHRoaXMua1B9c2V0IHpvb21GYWN0b3IodCl7VS5yKHQsQ29tbWFuZEhhbmRsZXIsXCJ6b29tRmFjdG9yXCIpLHQ+MXx8VS5uKFwiem9vbUZhY3RvciBtdXN0IGJlIGxhcmdlciB0aGFuIDEuMCwgbm90OiBcIit0KSx0aGlzLmtQPXR9Z2V0IGlzWm9vbVRvRml0UmVzdG9yZUVuYWJsZWQoKXtyZXR1cm4gdGhpcy5TUH1zZXQgaXNab29tVG9GaXRSZXN0b3JlRW5hYmxlZCh0KXtVLmkodCxcImJvb2xlYW5cIixDb21tYW5kSGFuZGxlcixcImlzWm9vbVRvRml0UmVzdG9yZUVuYWJsZWRcIiksdGhpcy5TUD10fWdldCBzY3JvbGxUb1BhcnRQYXVzZSgpe3JldHVybiB0aGlzLk1QfXNldCBzY3JvbGxUb1BhcnRQYXVzZSh0KXtVLnIodCxDb21tYW5kSGFuZGxlcixcInNjcm9sbFRvUGFydFBhdXNlXCIpLHRoaXMuTVA9dH1jb21wdXRlRWZmZWN0aXZlQ29sbGVjdGlvbih0LGkpe2NvbnN0IGU9dGhpcy5kaWFncmFtLHM9ZS50b29sTWFuYWdlci5maW5kVG9vbChcIkRyYWdnaW5nXCIpLG49ZS5jdXJyZW50VG9vbD09PXM7aT09PXZvaWQgMCYmKGk9ZS5jMCgpKTtjb25zdCBvPW5ldyBHTWFwO2lmKHQ9PT1udWxsKXJldHVybiBvO2xldCByPXQuaXRlcmF0b3I7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtlLiRyKG8sbCxuLGkpfWlmKGUuZHJhZ2dlZExpbmshPT1udWxsJiZpLmRyYWdzTGluaylyZXR1cm4gbztmb3Iocj10Lml0ZXJhdG9yO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO2lmKGwgaW5zdGFuY2VvZiBMaW5rKXtjb25zdCBoPWwuZnJvbU5vZGU7aWYoaCE9PW51bGwmJiFvLmhhcyhoKSlvLmRlbGV0ZShsKTtlbHNle2NvbnN0IGY9bC50b05vZGU7ZiE9PW51bGwmJiFvLmhhcyhmKSYmby5kZWxldGUobCl9fX1yZXR1cm4gb319dmFyIFN0cmV0Y2g9KHk9Pih5W3kuTm9uZT0wXT1cIk5vbmVcIix5W3kuRGVmYXVsdD0xXT1cIkRlZmF1bHRcIix5W3kuVmVydGljYWw9NF09XCJWZXJ0aWNhbFwiLHlbeS5Ib3Jpem9udGFsPTVdPVwiSG9yaXpvbnRhbFwiLHlbeS5GaWxsPTJdPVwiRmlsbFwiLHkpKShTdHJldGNofHx7fSksT3JpZW50YXRpb249KHk9Pih5W3kuTm9uZT0wXT1cIk5vbmVcIix5W3kuQWxvbmc9MjFdPVwiQWxvbmdcIix5W3kuUGx1czkwPTIyXT1cIlBsdXM5MFwiLHlbeS5NaW51czkwPTIzXT1cIk1pbnVzOTBcIix5W3kuT3Bwb3NpdGU9MjRdPVwiT3Bwb3NpdGVcIix5W3kuVXByaWdodD0yNV09XCJVcHJpZ2h0XCIseVt5LlBsdXM5MFVwcmlnaHQ9MjZdPVwiUGx1czkwVXByaWdodFwiLHlbeS5NaW51czkwVXByaWdodD0yN109XCJNaW51czkwVXByaWdodFwiLHlbeS5VcHJpZ2h0NDU9MjhdPVwiVXByaWdodDQ1XCIseSkpKE9yaWVudGF0aW9ufHx7fSksRmxpcD0oeT0+KHlbeS5Ob25lPTBdPVwiTm9uZVwiLHlbeS5WZXJ0aWNhbD0xXT1cIlZlcnRpY2FsXCIseVt5Lkhvcml6b250YWw9Ml09XCJIb3Jpem9udGFsXCIseVt5LkJvdGg9M109XCJCb3RoXCIseSkpKEZsaXB8fHt9KTtjbGFzcyBHcmFwaE9iamVjdHtsO3kwO3cwO1FyO2I7dWg7eXQ7Z3Q7bGU7aWk7eDA7SHM7UnQ7cnM7X3I7ZGg7U2k7YmE7b3Q7anQ7dGw7RGk7cWk7WnU7dWk7UXU7WHQ7aGk7aWw7SjE7Z2g7X3U7Y29uc3RydWN0b3IoKXtHU2V0LkppKHRoaXMpLHRoaXMubD0zMDcyMyx0aGlzLmlpPTEsdGhpcy54MD1cIlwiLHRoaXMuSHM9bnVsbCx0aGlzLlJ0PW51bGwsdGhpcy5ndD1uZXcgUG9pbnQoTmFOLE5hTikucCgpLHRoaXMucnM9U2l6ZS5Qdyx0aGlzLl9yPW5ldyBUcmFuc2Zvcm0sdGhpcy5kaD1uZXcgVHJhbnNmb3JtLHRoaXMuU2k9bnVsbCx0aGlzLmJhPTEsdGhpcy5vdD0xLHRoaXMuanQ9MCx0aGlzLnRsPU1hcmdpbi5YZyx0aGlzLmxlPW5ldyBSZWN0KE5hTixOYU4sTmFOLE5hTikucCgpLHRoaXMuRGk9bmV3IFJlY3QoTmFOLE5hTixOYU4sTmFOKS5wKCksdGhpcy5xaT1uZXcgUmVjdCgwLDAsTmFOLE5hTikucCgpLHRoaXMuWnU9bnVsbCx0aGlzLnkwPW51bGwsdGhpcy55dD1udWxsLHRoaXMudWk9U3BvdC5EZWZhdWx0LHRoaXMuUXU9U3BvdC5EZWZhdWx0LHRoaXMudzA9MCx0aGlzLlFyPTAsdGhpcy5YdD1udWxsLHRoaXMuYj1udWxsLHRoaXMudWg9bnVsbCx0aGlzLmhpPW51bGwsdGhpcy5KMT1udWxsLHRoaXMuZ2g9bnVsbCx0aGlzLmlsPW51bGwsdGhpcy5fdT1udWxsfWNsb25lUHJvdGVjdGVkKHQpe3QubD0odGhpcy5sfDIwNDh8NDA5NikmLTMyNzY5LHQuaWk9dGhpcy5paSx0LngwPXRoaXMueDAsdC5SdD10aGlzLlJ0LHQuZ3QuYyh0aGlzLmd0KSx0LnJzPXRoaXMucnMuTigpLHRoaXMuU2khPT1udWxsP3QuU2k9dGhpcy5TaS5jb3B5KCk6dC5TaT1udWxsLHQub3Q9dGhpcy5vdCx0Lmp0PXRoaXMuanQsdC50bD10aGlzLnRsLk4oKSx0LmxlLmModGhpcy5sZSksdC5EaS5jKHRoaXMuRGkpLHQucWkuYyh0aGlzLnFpKSx0LnkwPXRoaXMueTAsdGhpcy55dCE9PW51bGwmJih0Lnl0PXRoaXMueXQuY29weSgpKSx0LnVpPXRoaXMudWkuTigpLHQuUXU9dGhpcy5RdS5OKCksdC53MD10aGlzLncwLHQuUXI9dGhpcy5Rcix0aGlzLlh0IT09bnVsbCYmKHQuWHQ9dGhpcy5YdC5jb3B5KCkpLHRoaXMuYiE9PW51bGwmJih0aGlzLmIubWk/dC5iPXRoaXMuYjp0LmI9dGhpcy5iLmNvcHkoKSksdGhpcy51aCE9PW51bGwmJih0LnVoPXRoaXMudWguc2xpY2UoKSksdGhpcy5oaSE9PW51bGwmJih0LmhpPXRoaXMuaGkuY29weSgpKX1hZGRDb3B5UHJvcGVydHkodCl7bGV0IGk9dGhpcy51aDtpZighQXJyYXkuaXNBcnJheShpKSlpPVtdLHRoaXMudWg9aTtlbHNlIGZvcihsZXQgZT0wO2U8aS5sZW5ndGg7ZSsrKWlmKGlbZV09PT10KXJldHVybjtpLnB1c2godCl9WG8odCl7dC5adT1udWxsLHQuaWw9bnVsbCx0LnUoKX1jbG9uZSgpe2NvbnN0IHQ9bmV3IHRoaXMuY29uc3RydWN0b3I7aWYodGhpcy5jbG9uZVByb3RlY3RlZCh0KSx0aGlzLnVoIT09bnVsbClmb3IobGV0IGk9MDtpPHRoaXMudWgubGVuZ3RoO2krKyl7Y29uc3QgZT10aGlzLnVoW2ldO3RbZV09dGhpc1tlXX1yZXR1cm4gdH1jb3B5KCl7cmV0dXJuIHRoaXMuY2xvbmUoKX1kTSgpe2NvbnN0IHQ9dGhpcy5GaTtpZih0IT09bnVsbCl7dGhpcy5GaT1udWxsO2Zvcihjb25zdCBpIG9mIHQpaS50ZCgpJiYoaS5pc1RvRGF0YT90aGlzLnRoZW1lRGF0YShpLnRhcmdldFByb3BlcnR5LGkuc291cmNlUHJvcGVydHksaS50aGVtZVNvdXJjZSxpLmNvbnZlcnRlcixpLnRoZW1lQ29udmVydGVyKTppLmlzVG9PYmplY3Q/dGhpcy50aGVtZU9iamVjdChpLnRhcmdldFByb3BlcnR5LGkuc291cmNlUHJvcGVydHksaS50aGVtZVNvdXJjZSxpLmNvbnZlcnRlcixpLnRoZW1lQ29udmVydGVyLGkuc291cmNlTmFtZSk6aS5pc1RvTW9kZWw/dGhpcy50aGVtZU1vZGVsKGkudGFyZ2V0UHJvcGVydHksaS5zb3VyY2VQcm9wZXJ0eSxpLnRoZW1lU291cmNlLGkuY29udmVydGVyLGkudGhlbWVDb252ZXJ0ZXIpOnRoaXMudGhlbWUoaS50YXJnZXRQcm9wZXJ0eSxpLnNvdXJjZVByb3BlcnR5LGkudGhlbWVTb3VyY2UsaS5jb252ZXJ0ZXIsaS50aGVtZUNvbnZlcnRlcikpfXJldHVybiB0aGlzfWFpKHQpe3QgaW4gT3JpZW50YXRpb24/dGhpcy5zZWdtZW50T3JpZW50YXRpb249dDp0IGluIFN0cmV0Y2g/dGhpcy5zdHJldGNoPXQ6VS5ocih0aGlzLHQpfXRvU3RyaW5nKCl7cmV0dXJuIFUuQm4odGhpcy5jb25zdHJ1Y3RvcikrXCIjXCIrR1NldC5ncyh0aGlzKX1zdGF0aWMgTm9uZT0wO3N0YXRpYyBEZWZhdWx0PTE7c3RhdGljIEZpbGw9MjtzdGF0aWMgVmVydGljYWw7c3RhdGljIEhvcml6b250YWw7c3RhdGljIFVuaWZvcm09NjtzdGF0aWMgVW5pZm9ybVRvRmlsbD03O3N0YXRpYyBGbGlwVmVydGljYWw9MTtzdGF0aWMgRmxpcEhvcml6b250YWw9MjtzdGF0aWMgRmxpcEJvdGg9MzttaCgpe3RoaXMuYiE9PW51bGwmJih0aGlzLmIubWk9ITApfUp0KCl7cmV0dXJuIHRoaXMuYj09PW51bGw/dGhpcy5iPW5ldyBHcmFwaE9iamVjdFRlbXBsYXRlU2V0dGluZ3M6dGhpcy5iLm1pJiYodGhpcy5iPXRoaXMuYi5jb3B5KCkpLHRoaXMuYn1HZSgpe2lmKHRoaXMueXQ9PT1udWxsKXtjb25zdCB0PW5ldyBMaW5rU2V0dGluZ3M7dC5rYT1TcG90Lk5vbmUsdC5TYT1TcG90Lk5vbmUsdC5NYT0xMCx0LlBhPTEwLHQuTmE9MCx0LkNhPTAsdGhpcy55dD10fXJldHVybiB0aGlzLnl0fXJhaXNlQ2hhbmdlZEV2ZW50KHQsaSxlLHMsbixvLHIpe2NvbnN0IGw9dGhpcy5wYXJ0O2lmKGwhPT1udWxsKXtsLnRjKHQsaSxlLHMsbixvLHIpLGU9PT10aGlzJiZ0PT09MiYmdGhpcy5pYygpJiZ0aGlzLkFhKGwsaSk7Y29uc3QgaD10aGlzLmRpYWdyYW07aWYodGhpcy5NcyE9PW51bGwmJmghPT1udWxsJiZoLnFoJiYhaC51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nJiYhaC5hbmltYXRpb25NYW5hZ2VyLk11KXtjb25zdCBmPXRoaXMuTXMuZ2V0KGkpO2lmKGYhPT1udWxsJiZoLmFuaW1hdGlvbk1hbmFnZXIuaXNFbmFibGVkJiYhaC5hbmltYXRpb25NYW5hZ2VyLmlzVGlja2luZyl7dGhpcy5fdT09PW51bGwmJih0aGlzLl91PW5ldyBHTWFwKTtsZXQgYT1oLnVuZG9NYW5hZ2VyLnRyYW5zYWN0aW9uTGV2ZWw9PT0wO2lmKGYuc3RhcnRDb25kaXRpb249PT0yP2E9ITA6Zi5zdGFydENvbmRpdGlvbj09PTMmJihhPSExKSxhKXtjb25zdCBjPW5ldyBBbmltYXRpb247Zi52RihjKTtjb25zdCB1PXRoaXMuX3UuZ2V0KGYpO3UhPT1udWxsJiZ1LnN0b3AoKSx0aGlzLl91LnNldChmLGMpLGMuTng9dGhpcyxjLnZNPWYsYy5hZGQodGhpcyxpLHMsbiksYy5zdGFydCgpfWVsc2UgaC5hbmltYXRpb25NYW5hZ2VyLmdldEJ1bmRsZUFuaW1hdGlvbigpLmFkZCh0aGlzLGkscyxuKX19aWYodGhpcyBpbnN0YW5jZW9mIFBhbmVsJiZlPT09bCYmbC5OUCgpJiZsLmRhdGEhPT1udWxsKXtjb25zdCBmPXRoaXMuVC5oLGE9Zi5sZW5ndGg7Zm9yKGxldCBjPTA7YzxhO2MrKyl7Y29uc3QgdT1mW2NdO3UgaW5zdGFuY2VvZiBQYW5lbCYmdS5KcihkPT57ZC5kYXRhIT09bnVsbCYmZC5OUCgpJiZkLnVwZGF0ZVRhcmdldEJpbmRpbmdzKGkpfSl9fX19SEYodCl7dGhpcy5fdS5kZWxldGUodCl9Qm8oKXtpZih0aGlzLmRpYWdyYW09PT1udWxsKXJldHVybjtpZih0aGlzLmZpbmRCaW5kaW5nUGFuZWwoKT09PW51bGwmJnRoaXMuRmkhPT1udWxsKXtjb25zdCBpPXRoaXMuZGlhZ3JhbS5tb2RlbCxlPXRoaXMuRmkuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtpZighcy5pc1RvVGhlbWUpY29udGludWU7bGV0IG49bnVsbDtjb25zdCBvPXMuc291cmNlTmFtZTtzLmlzVG9PYmplY3QmJihuPXRoaXMuU0wobykpO2xldCByPXRoaXM7Y29uc3QgbD1zLnRhcmdldElkO2whPT0tMSYmKHI9dGhpcy5iMChsKSxyPT09bnVsbCl8fChvPT09XCIvXCI/bj1yLnBhcnQ6bz09PVwiLlwiP249cjpvPT09XCIuLlwiJiYobj1yLnBhbmVsKSxzLnVwZGF0ZVRhcmdldChyLG4sdm9pZCAwLGkpKX19fUFhKHQsaSl7Y29uc3QgZT10aGlzLmZpbmRCaW5kaW5nUGFuZWwoKTtpZihlIT09bnVsbCl7Y29uc3Qgcz10LmRpYWdyYW0sbj10aGlzLkZpLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7bGV0IHI9bnVsbDtpZihvLmlzVG9PYmplY3Qpe2lmKHI9by5NTChlLHRoaXMpLHI9PT1udWxsKWNvbnRpbnVlO28udXBkYXRlU291cmNlKHRoaXMscixpLG51bGwpfWVsc2UgaWYoby5pc1RvTW9kZWwpcyE9PW51bGwmJiFzLm1lJiZvLnVwZGF0ZVNvdXJjZSh0aGlzLHMubW9kZWwubW9kZWxEYXRhLGksZSk7ZWxzZSBpZighby5pc1RvVGhlbWUpe2NvbnN0IGw9ZS5kYXRhO2lmKGw9PT1udWxsKWNvbnRpbnVlO3MhPT1udWxsJiYhcy5tZSYmby51cGRhdGVTb3VyY2UodGhpcyxsLGksZSl9aWYocj09PXRoaXMpe2NvbnN0IGw9by50YXJnZXRJZCxoPWUuYjAobCk7aCE9PW51bGwmJm8udXBkYXRlVGFyZ2V0KGgscixpLHM/Lm1vZGVsKX19fX1iMCh0KXtyZXR1cm4gdGhpcy5abj09PXQ/dGhpczpudWxsfVNMKHQpe2xldCBpO3JldHVybiB0PT09XCJcIj9pPXRoaXM6dD09PVwiL1wiP2k9dGhpczp0PT09XCIuXCI/aT10aGlzOnQ9PT1cIi4uXCI/aT10aGlzOihpPXRoaXMucGFydC5maW5kT2JqZWN0KHQpLGk9PT1udWxsJiZEZWJ1ZyYmVS5udChcIkJpbmRpbmcgZXJyb3I6IG1pc3NpbmcgR3JhcGhPYmplY3QgbmFtZWQgXCIrdCtcIiBpbiBcIit0aGlzLnBhcnQudG9TdHJpbmcoKSkpLGl9Z2V0IFpuKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLlpuOi0xfXNldCBabih0KXt0aGlzLlpuIT09dCYmKHRoaXMuYj09PW51bGwmJih0aGlzLmI9bmV3IEdyYXBoT2JqZWN0VGVtcGxhdGVTZXR0aW5ncyksdGhpcy5iLlpuPXQpfWdldCBGaSgpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5GaTpudWxsfXNldCBGaSh0KXt0aGlzLkZpIT09dCYmKHRoaXMuYj09PW51bGwmJih0aGlzLmI9bmV3IEdyYXBoT2JqZWN0VGVtcGxhdGVTZXR0aW5ncyksdGhpcy5iLkZpPXQpfWdldCBRbigpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5RbjpudWxsfXNldCBRbih0KXt0aGlzLlFuIT09dCYmKHRoaXMuYj09PW51bGwmJih0aGlzLmI9bmV3IEdyYXBoT2JqZWN0VGVtcGxhdGVTZXR0aW5ncyksdGhpcy5iLlFuPXQpfXJhaXNlQ2hhbmdlZCh0LGksZSl7dGhpcy5yYWlzZUNoYW5nZWRFdmVudCgyLHQsdGhpcyxpLGUpfXQodCxpLGUpe3RoaXMucmFpc2VDaGFuZ2VkRXZlbnQoMix0LHRoaXMsaSxlKX1fbih0LGksZSxzKXtjb25zdCBuPXRoaXMubGU7aWYobi5zKHQsaSxlLHMpLHRoaXMub3QhPT0xfHx0aGlzLmp0IT09MCl7dGhpcy5TaT09PW51bGwmJih0aGlzLlNpPW5ldyBUcmFuc2Zvcm0pO2NvbnN0IG89dGhpcy5TaTtvLlZpKCksdGhpcy5rMChvLHQsaSxlLHMpLG8uWWcobil9fVBMKHQsaSxlKXtyZXR1cm4gdGhpcy5waWNrYWJsZT09PSExPyExOihlLnVmKHRoaXMuRiksaT90aGlzLmludGVyc2VjdHNSZWN0KHQsZSk6dGhpcy5jb250YWluZWRJblJlY3QodCxlKSl9TkwodCxpLGUpe2lmKHRoaXMucGlja2FibGU9PT0hMSlyZXR1cm4hMTtjb25zdCBzPXRoaXMubmF0dXJhbEJvdW5kcyxuPXQuZGlzdGFuY2VTcXVhcmVkUG9pbnQoaSk7cmV0dXJuIGU/UG9pbnQuZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQodC54LHQueSwwLDAsMCxzLmhlaWdodCk8PW58fFBvaW50LmRpc3RhbmNlTGluZVNlZ21lbnRTcXVhcmVkKHQueCx0LnksMCxzLmhlaWdodCxzLndpZHRoLHMuaGVpZ2h0KTw9bnx8UG9pbnQuZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQodC54LHQueSxzLndpZHRoLHMuaGVpZ2h0LHMud2lkdGgsMCk8PW58fFBvaW50LmRpc3RhbmNlTGluZVNlZ21lbnRTcXVhcmVkKHQueCx0Lnkscy53aWR0aCwwLDAsMCk8PW46dC5kaXN0YW5jZVNxdWFyZWQoMCwwKTw9biYmdC5kaXN0YW5jZVNxdWFyZWQoMCxzLmhlaWdodCk8PW4mJnQuZGlzdGFuY2VTcXVhcmVkKHMud2lkdGgsMCk8PW4mJnQuZGlzdGFuY2VTcXVhcmVkKHMud2lkdGgscy5oZWlnaHQpPD1ufW1uKCl7cmV0dXJuITB9Y29udGFpbnNQb2ludCh0KXtEZWJ1ZyYmVS5lKHQsUG9pbnQsR3JhcGhPYmplY3QsXCJjb250YWluc1BvaW50OnBcIik7Y29uc3QgaT1Qb2ludC5hKCk7aS5jKHQpLHRoaXMuRi5rdChpKTtjb25zdCBlPXRoaXMuYWN0dWFsQm91bmRzO2lmKCFlLmlzUmVhbCgpKXJldHVybiBQb2ludC5vKGkpLCExO2NvbnN0IHM9dGhpcy5kaWFncmFtO2lmKHMhPT1udWxsJiZzLlFtKXtjb25zdCBvPXMuZ2V0SW5wdXRPcHRpb24oXCJleHRyYVRvdWNoVGhyZXNob2xkXCIpLHI9cy5nZXRJbnB1dE9wdGlvbihcImV4dHJhVG91Y2hBcmVhXCIpLGw9ci8yLGg9dGhpcy5uYXR1cmFsQm91bmRzLGY9dGhpcy5nZXREb2N1bWVudFNjYWxlKCkqcy5zY2FsZSxhPTEvZjtpZihoLndpZHRoKmY8byYmaC5oZWlnaHQqZjxvKXtjb25zdCBjPVJlY3QuY29udGFpbnMoZS54LWwqYSxlLnktbCphLGUud2lkdGgrciphLGUuaGVpZ2h0K3IqYSxpLngsaS55KTtyZXR1cm4gUG9pbnQubyhpKSxjfX1sZXQgbj0hMTtyZXR1cm4odGhpcyBpbnN0YW5jZW9mIEFkb3JubWVudHx8dGhpcyBpbnN0YW5jZW9mIFNoYXBlP1JlY3QuY29udGFpbnMoZS54LTUsZS55LTUsZS53aWR0aCsxMCxlLmhlaWdodCsxMCxpLngsaS55KTplLmNvbnRhaW5zUG9pbnQoaSkpJiYodGhpcy5oaSYmIXRoaXMuaGkuY29udGFpbnNQb2ludChpKT9uPSExOnRoaXMuUnQhPT1udWxsJiZ0aGlzLnFpLmNvbnRhaW5zUG9pbnQodCk/bj0hMDpuPXRoaXMucGgodCkpLFBvaW50Lm8oaSksbn1waCh0KXtjb25zdCBpPXRoaXMubmF0dXJhbEJvdW5kcztyZXR1cm4gUmVjdC5jb250YWlucygwLDAsaS53aWR0aCxpLmhlaWdodCx0LngsdC55KX1jb250YWluc1JlY3QodCl7aWYodGhpcy5hbmdsZT09PTApcmV0dXJuIHRoaXMuYWN0dWFsQm91bmRzLmNvbnRhaW5zUmVjdCh0KTtjb25zdCBpPXRoaXMubmF0dXJhbEJvdW5kcyxlPVJlY3QuSygwLDAsaS53aWR0aCxpLmhlaWdodCkscz10aGlzLkY7bGV0IG49ITE7Y29uc3Qgbz1Qb2ludC5LKHQueCx0LnkpO3JldHVybiBlLmNvbnRhaW5zUG9pbnQocy5pcyhvKSkmJihvLnModC54LHQuYm90dG9tKSxlLmNvbnRhaW5zUG9pbnQocy5pcyhvKSkmJihvLnModC5yaWdodCx0LmJvdHRvbSksZS5jb250YWluc1BvaW50KHMuaXMobykpJiYoby5zKHQucmlnaHQsdC55KSxlLmNvbnRhaW5zUG9pbnQocy5pcyhvKSkmJihuPSEwKSkpKSxQb2ludC5vKG8pLFJlY3QubyhlKSxufWNvbnRhaW5lZEluUmVjdCh0LGkpe2lmKERlYnVnJiZVLmUodCxSZWN0LEdyYXBoT2JqZWN0LFwiY29udGFpbmVkSW5SZWN0OnJcIiksaT09PXZvaWQgMClyZXR1cm4gdC5jb250YWluc1JlY3QodGhpcy5hY3R1YWxCb3VuZHMpO2NvbnN0IGU9dGhpcy5uYXR1cmFsQm91bmRzLHM9aTtsZXQgbj0hMTtjb25zdCBvPVBvaW50LksoMCwwKTtyZXR1cm4gdC5jb250YWluc1BvaW50KHMua3QobykpJiYoby5zKDAsZS5oZWlnaHQpLHQuY29udGFpbnNQb2ludChzLmt0KG8pKSYmKG8ucyhlLndpZHRoLGUuaGVpZ2h0KSx0LmNvbnRhaW5zUG9pbnQocy5rdChvKSkmJihvLnMoZS53aWR0aCwwKSx0LmNvbnRhaW5zUG9pbnQocy5rdChvKSkmJihuPSEwKSkpKSxQb2ludC5vKG8pLG59aW50ZXJzZWN0c1JlY3QodCxpKXtpZihEZWJ1ZyYmVS5lKHQsUmVjdCxHcmFwaE9iamVjdCxcImludGVyc2VjdHNSZWN0OnJcIiksaT09PXZvaWQgMCYmKGk9dGhpcy5GLHRoaXMuYW5nbGU9PT0wKSlyZXR1cm4gdC5pbnRlcnNlY3RzUmVjdCh0aGlzLmFjdHVhbEJvdW5kcyk7Y29uc3QgZT10aGlzLm5hdHVyYWxCb3VuZHMscz1pLG49UG9pbnQuSygwLDApLG89UG9pbnQuSygwLGUuaGVpZ2h0KSxyPVBvaW50LksoZS53aWR0aCxlLmhlaWdodCksbD1Qb2ludC5LKGUud2lkdGgsMCk7bGV0IGg9ITE7aWYodC5jb250YWluc1BvaW50KHMua3QobikpfHx0LmNvbnRhaW5zUG9pbnQocy5rdChvKSl8fHQuY29udGFpbnNQb2ludChzLmt0KHIpKXx8dC5jb250YWluc1BvaW50KHMua3QobCkpKWg9ITA7ZWxzZXtjb25zdCBmPVJlY3QuSygwLDAsZS53aWR0aCxlLmhlaWdodCksYT1Qb2ludC5LKHQueCx0LnkpO2YuY29udGFpbnNQb2ludChzLmlzKGEpKT9oPSEwOihhLnModC54LHQuYm90dG9tKSxmLmNvbnRhaW5zUG9pbnQocy5pcyhhKSk/aD0hMDooYS5zKHQucmlnaHQsdC5ib3R0b20pLGYuY29udGFpbnNQb2ludChzLmlzKGEpKT9oPSEwOihhLnModC5yaWdodCx0LnkpLGYuY29udGFpbnNQb2ludChzLmlzKGEpKSYmKGg9ITApKSkpLFBvaW50Lm8oYSksUmVjdC5vKGYpLGh8fChHZW8uUncodCxuLG8pfHxHZW8uUncodCxvLHIpfHxHZW8uUncodCxyLGwpfHxHZW8uUncodCxsLG4pKSYmKGg9ITApfXJldHVybiBQb2ludC5vKG4pLFBvaW50Lm8obyksUG9pbnQubyhyKSxQb2ludC5vKGwpLGh9Z2V0RG9jdW1lbnRQb2ludCh0LGkpe2lmKGk9PT12b2lkIDAmJihpPW5ldyBQb2ludCksdCBpbnN0YW5jZW9mIFNwb3Qpe2NvbnN0IGU9dDtEZWJ1ZyYmZS5pc05vU3BvdCgpJiZVLm4oXCJnZXREb2N1bWVudFBvaW50OnMgU3BvdCBtdXN0IGJlIHNwZWNpZmljOiBcIitlLnRvU3RyaW5nKCkpO2NvbnN0IHM9dGhpcy5uYXR1cmFsQm91bmRzO3JldHVybiBpLnMoZS54KnMud2lkdGgrZS5vZmZzZXRYLGUueSpzLmhlaWdodCtlLm9mZnNldFkpLHRoaXMuVXMua3QoaSksaX1lbHNlIHJldHVybiBpLnNldCh0KSx0aGlzLlVzLmt0KGkpLGl9Z2V0RG9jdW1lbnRCb3VuZHModCl7dD09PXZvaWQgMCYmKHQ9bmV3IFJlY3QpO2NvbnN0IGk9dGhpcy5uYXR1cmFsQm91bmRzLGU9dGhpcy5VcyxzPVBvaW50LksoMCwwKS5GKGUpO3JldHVybiB0LnMocy54LHMueSwwLDApLHMucyhpLndpZHRoLDApLkYoZSksdC51bmlvbk5vQ2hlY2socy54LHMueSwwLDApLHMucyhpLndpZHRoLGkuaGVpZ2h0KS5GKGUpLHQudW5pb25Ob0NoZWNrKHMueCxzLnksMCwwKSxzLnMoMCxpLmhlaWdodCkuRihlKSx0LnVuaW9uTm9DaGVjayhzLngscy55LDAsMCksUG9pbnQubyhzKSx0fWdldERvY3VtZW50QW5nbGUoKXtyZXR1cm4gdGhpcy5Vcy5uRigpfWdldERvY3VtZW50U2NhbGUoKXtpZih0aGlzLlMwKCk9PT0hMSlyZXR1cm4gdGhpcy5iYTtjb25zdCB0PXRoaXMub3Q7cmV0dXJuIHRoaXMucGFuZWwhPT1udWxsP3QqdGhpcy5wYW5lbC5nZXREb2N1bWVudFNjYWxlKCk6dH1nZXRMb2NhbFBvaW50KHQsaSl7cmV0dXJuIGk9PT12b2lkIDAmJihpPW5ldyBQb2ludCksaS5jKHQpLHRoaXMuVXMuaXMoaSksaX1nZXROZWFyZXN0SW50ZXJzZWN0aW9uUG9pbnQodCxpLGUpe3JldHVybiB0aGlzLmVjKHQueCx0LnksaS54LGkueSxlKX1lYyh0LGksZSxzLG4pe2NvbnN0IG89dGhpcy5GLHI9MS8oby5tMTEqby5tMjItby5tMTIqby5tMjEpLGw9by5tMjIqcixoPS1vLm0xMipyLGY9LW8ubTIxKnIsYT1vLm0xMSpyLGM9ciooby5tMjEqby5keS1vLm0yMipvLmR4KSx1PXIqKG8ubTEyKm8uZHgtby5tMTEqby5keSksZD10KmwraSpmK2MsbT10KmgraSphK3UsZz1lKmwrcypmK2MscD1lKmgrcyphK3U7bi5zKDAsMCk7Y29uc3Qgdz10aGlzLm5hdHVyYWxCb3VuZHMseD1HZW8uYmwoMCwwLHcud2lkdGgsdy5oZWlnaHQsZCxtLGcscCxuKTtyZXR1cm4gbi5GKG8pLHh9ZHQodCxpLGUscyl7aWYodGhpcy5FbygpPT09ITEpcmV0dXJuO2NvbnN0IG49dGhpcy50bCxvPW4ucmlnaHQrbi5sZWZ0LHI9bi50b3Arbi5ib3R0b207dD1NYXRoLm1heCh0LW8sMCksaT1NYXRoLm1heChpLXIsMCksZT1lfHwwLHM9c3x8MCxlPU1hdGgubWF4KGUtbywwKSxzPU1hdGgubWF4KHMtciwwKTtjb25zdCBsPXRoaXMuYW5nbGU7bGV0IGg9MDtjb25zdCBmPXRoaXMuZGVzaXJlZFNpemUsYT10aGlzLk0wKCk7bD09PTkwfHxsPT09MjcwPyh0PWlzRmluaXRlKGYuaGVpZ2h0KT9mLmhlaWdodCthOnQsaT1pc0Zpbml0ZShmLndpZHRoKT9mLndpZHRoK2E6aSk6KHQ9aXNGaW5pdGUoZi53aWR0aCk/Zi53aWR0aCthOnQsaT1pc0Zpbml0ZShmLmhlaWdodCk/Zi5oZWlnaHQrYTppKTtsZXQgYz1lfHwwLHU9c3x8MDtjb25zdCBkPXRoaXMgaW5zdGFuY2VvZiBQYW5lbDtzd2l0Y2godGhpcy5xcyghMCkpe2Nhc2UgMDpjPTAsdT0wLGQmJih0PTEvMCxpPTEvMCk7YnJlYWs7Y2FzZSAyOmlzRmluaXRlKHQpJiZ0PmUmJihjPXQpLGlzRmluaXRlKGkpJiZpPnMmJih1PWkpO2JyZWFrO2Nhc2UgNTppc0Zpbml0ZSh0KSYmdD5lJiYoYz10KSx1PTAsZCYmKGk9MS8wKTticmVhaztjYXNlIDQ6aXNGaW5pdGUoaSkmJmk+cyYmKHU9aSksYz0wLGQmJih0PTEvMCk7YnJlYWt9Y29uc3QgZz10aGlzLm1heFNpemUscD10aGlzLm1pblNpemU7Yz5nLndpZHRoJiZwLndpZHRoPGcud2lkdGgmJihjPWcud2lkdGgpLHU+Zy5oZWlnaHQmJnAuaGVpZ2h0PGcuaGVpZ2h0JiYodT1nLmhlaWdodCksZT1NYXRoLm1heChjLHAud2lkdGgpLHM9TWF0aC5tYXgodSxwLmhlaWdodCksZy53aWR0aDxlJiYoZT1NYXRoLm1pbihwLndpZHRoLGUpKSxnLmhlaWdodDxzJiYocz1NYXRoLm1pbihwLmhlaWdodCxzKSksdD1NYXRoLm1pbihnLndpZHRoLHQpLGk9TWF0aC5taW4oZy5oZWlnaHQsaSksdD1NYXRoLm1heChlLHQpLGk9TWF0aC5tYXgocyxpKSwobD09PTkwfHxsPT09MjcwKSYmKGg9dCx0PWksaT1oLGg9ZSxlPXMscz1oKSx0aGlzLmxlLkF0KCksdGhpcy5lZCh0LGksZSxzKSx0aGlzLmxlLnAoKSx0aGlzLmxlLmlzUmVhbCgpfHxVLm4oXCJOb24tcmVhbCBtZWFzdXJlZEJvdW5kcyBoYXMgYmVlbiBzZXQuIE9iamVjdCBcIit0aGlzK1wiLCBtZWFzdXJlZEJvdW5kczogXCIrdGhpcy5sZS50b1N0cmluZygpKSx0aGlzLnBlKCExKX1lZCh0LGksZSxzKXt9V3MoKXtyZXR1cm4hMX1HdCh0LGksZSxzLG4pe3RoaXMuc2MoKTtjb25zdCBvPVJlY3QuYSgpO28uYyh0aGlzLkRpKSx0aGlzLkRpLkF0KCksdGhpcy5ucygpPT09ITE/dGhpcy5EaS5zKHQsaSxlLHMpOnRoaXMueWgodCxpLGUscyksdGhpcy5EaS5wKCksbj09PXZvaWQgMD90aGlzLmhpPW51bGw6dGhpcy5oaT1uO2xldCByPSExO2lmKG4hPT12b2lkIDApcj0hMDtlbHNle2xldCBsPXRoaXMucGFuZWw7aWYobCE9PW51bGwmJmwuZWwoKSYmKGw9bC5wYW5lbCksbCE9PW51bGwpe2NvbnN0IGg9bC5xaSxmPXRoaXMubWVhc3VyZWRCb3VuZHMsYT1pK2YuaGVpZ2h0LGM9dCtmLndpZHRoO2lmKHI9ISgwPD10Ky4wNSYmYzw9aC53aWR0aCsuMDUmJjA8PWkrLjA1JiZhPD1oLmhlaWdodCsuMDUpLHRoaXMgaW5zdGFuY2VvZiBUZXh0QmxvY2spe2NvbnN0IHU9dGhpcy5uYXR1cmFsQm91bmRzOyh0aGlzLlAwPnUuaGVpZ2h0fHx0aGlzLnBpPnUud2lkdGgpJiYocj0hMCl9fX1yP3RoaXMubHw9MjU2OnRoaXMubCY9LTI1Nyx0aGlzLkRpLmlzUmVhbCgpfHxVLm4oXCJOb24tcmVhbCBhY3R1YWxCb3VuZHMgaGFzIGJlZW4gc2V0LiBPYmplY3QgXCIrdGhpcytcIiwgYWN0dWFsQm91bmRzOiBcIit0aGlzLkRpLnRvU3RyaW5nKCkpLHRoaXMuc2Qobyx0aGlzLkRpKSx0aGlzLnRvKCExKSxSZWN0Lm8obyl9eWgodCxpLGUscyl7fWNvbW1vbkFycmFuZ2UodCxpLGUscyl7aWYodGhpcy5EaS5zKHQsaSxlLHMpLHRoaXMuZGVzaXJlZFNpemUuaXNSZWFsKCkpcmV0dXJuO2NvbnN0IG49dGhpcy5sZSxvPXRoaXMudGwscj1vLnJpZ2h0K28ubGVmdCxsPW8udG9wK28uYm90dG9tLGg9bi53aWR0aCtyLGY9bi5oZWlnaHQrbDtlKz1yLHMrPWw7bGV0IGE9dGhpcy5xcyghMCk7c3dpdGNoKGg9PT1lJiZmPT09cyYmKGE9MCksYSl7Y2FzZSAwOihoPmV8fGY+cykmJih0aGlzLnBlKCEwKSx0aGlzLmR0KGg+ZT9lOmgsZj5zP3M6ZiwwLDApKTticmVhaztjYXNlIDI6dGhpcy5wZSghMCksdGhpcy5kdChlLHMsMCwwKTticmVhaztjYXNlIDU6dGhpcy5wZSghMCksdGhpcy5kdChlLGYsMCwwKTticmVhaztjYXNlIDQ6dGhpcy5wZSghMCksdGhpcy5kdChoLHMsMCwwKTticmVha319c2QodCxpKXtjb25zdCBlPXRoaXMucGFydDtlIT09bnVsbCYmZS5kaWFncmFtIT09bnVsbCYmKChlLnNlbGVjdGlvbk9iamVjdD09PXRoaXN8fGUucmVzaXplT2JqZWN0PT09dGhpc3x8ZS5yb3RhdGVPYmplY3Q9PT10aGlzKSYmZS5DUCghMCksdGhpcy5MKCksIXQuZXF1YWxzQXBwcm94Q2xvc2UoaSkmJihlLndoKCksdGhpcy5OMChlKSkpfU4wKHQpe3RoaXMucG9ydElkIT09bnVsbCYmKHQuQ1AoITApLHQgaW5zdGFuY2VvZiBOb2RlJiZ0LkNMKHRoaXMpKX1nZXQgc2hhZG93VmlzaWJsZSgpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5DMDpudWxsfXNldCBzaGFkb3dWaXNpYmxlKHQpe2NvbnN0IGk9dGhpcy5zaGFkb3dWaXNpYmxlO2khPT10JiYoRGVidWcmJnQhPT1udWxsJiZVLmkodCxcImJvb2xlYW5cIixHcmFwaE9iamVjdCxcInNoYWRvd1Zpc2libGVcIiksdGhpcy5KdCgpLkMwPXQsdGhpcy5IZSghMCksdGhpcy5MKCksdGhpcy50KFwic2hhZG93VmlzaWJsZVwiLGksdCkpfVFSKHQsaSl7Y29uc3QgZT10aGlzLm5hdHVyYWxCb3VuZHMscz10aGlzLmRoLG49cy5tMTEsbz1zLm0yMSxyPXMuZHgsbD1zLm0xMixoPXMubTIyLGY9cy5keTtsZXQgYT0wLGM9MCx1PWEsZD1jO2E9dSpuK2QqbytyLGM9dSpsK2QqaCtmO2xldCBtPWEsZz1jLHA9MCx3PTA7dT1lLndpZHRoK2ksZD0wLGE9dSpuK2QqbytyLGM9dSpsK2QqaCtmO2xldCB4PU1hdGgubWluKG0sYSksaz1NYXRoLm1pbihnLGMpO3A9TWF0aC5tYXgobStwLGEpLXgsdz1NYXRoLm1heChnK3csYyktayxtPXgsZz1rLHU9ZS53aWR0aCtpLGQ9ZS5oZWlnaHQraSxhPXUqbitkKm8rcixjPXUqbCtkKmgrZix4PU1hdGgubWluKG0sYSksaz1NYXRoLm1pbihnLGMpLHA9TWF0aC5tYXgobStwLGEpLXgsdz1NYXRoLm1heChnK3csYyktayxtPXgsZz1rLHU9MCxkPWUuaGVpZ2h0K2ksYT11Km4rZCpvK3IsYz11KmwrZCpoK2YseD1NYXRoLm1pbihtLGEpLGs9TWF0aC5taW4oZyxjKSxwPU1hdGgubWF4KG0rcCxhKS14LHc9TWF0aC5tYXgoZyt3LGMpLWssbT14LGc9aztjb25zdCBiPXQudmlld3BvcnRCb3VuZHMsUz1iLngsTT1iLnksQT1iLndpZHRoLEM9Yi5oZWlnaHQ7cmV0dXJuIG0+QStTfHxTPnArbXx8Zz5DK018fE0+dytnfVVpKHQsaSl7aWYodGhpcy5fUih0LGkpfHwhdGhpcy52aXNpYmxlKXJldHVybjtjb25zdCBlPXRoaXMub3BhY2l0eTtpZihlPT09MClyZXR1cm47bGV0IHM9MTtlIT09MSYmKHM9dC5nbG9iYWxBbHBoYSx0Lmdsb2JhbEFscGhhPXMqZSk7bGV0IG49XCJcIjt0aGlzLmZpbHRlciE9PVwiXCImJihuPXQuZmlsdGVyLHQuZmlsdGVyPXRoaXMuZmlsdGVyKTtjb25zdCBvPXRoaXMuRixyPXRoaXMucGFuZWw7dGhpcy5TMCgpPT09ITAmJnRoaXMuJDEoKTtjb25zdCBsPXRoaXMucGFydDtsZXQgaD0hMSxmPTA7aWYobCYmaS5nZXRSZW5kZXJpbmdIaW50KFwiZHJhd1NoYWRvd3NcIikmJihoPWwuaXNTaGFkb3dlZCxoKSl7Y29uc3QgZz1sLnNoYWRvd09mZnNldDtmPU1hdGgubWF4KGcueSxnLngpKmkuc2NhbGUqaS5IaX1jb25zdCBhPXRoaXMgaW5zdGFuY2VvZiBQYW5lbCYmdGhpcy5lbCgpLGM9dGhpcy5EaTtpZihhJiYodGhpcy5BTChoLHQsITEsciksdGhpcy50SSh0LGkpLHRoaXMuTEwoaCx0LCExLHIpLHRoaXMuVEwoaCx0LCExKSksYXx8IWEmJihjLndpZHRoPT09MHx8Yy5oZWlnaHQ9PT0wfHxpc05hTihjLngpfHxpc05hTihjLnkpKSl7ZSE9PTEmJih0Lmdsb2JhbEFscGhhPXMpLHRoaXMuZmlsdGVyIT09XCJcIiYmKHQuZmlsdGVyPW4pO3JldHVybn1jb25zdCB1PXRoaXMuV3MoKTtpZighaS5sYSYmdSYmdGhpcy5RUihpLGYpKXtlIT09MSYmKHQuZ2xvYmFsQWxwaGE9cyksdGhpcy5maWx0ZXIhPT1cIlwiJiYodC5maWx0ZXI9bik7cmV0dXJufWxldCBkPSh0aGlzLmwmMjU2KSE9PTA7aWYodC5jbGlwSW5zdGVhZE9mRmlsbCYmKGQ9ITEpLHRoaXMgaW5zdGFuY2VvZiBUZXh0QmxvY2smJih0LmZvbnQ9dGhpcy5mb250KSxkKXtjb25zdCBnPXIubW4oKT9yLm5hdHVyYWxCb3VuZHM6ci5hY3R1YWxCb3VuZHM7bGV0IHA9TWF0aC5tYXgoYy54LGcueCksdz1NYXRoLm1heChjLnksZy55KSx4PU1hdGgubWluKGMucmlnaHQsZy5yaWdodCktcCxrPU1hdGgubWluKGMuYm90dG9tLGcuYm90dG9tKS13O2NvbnN0IGI9dGhpcy5oaTtpZihiIT09bnVsbCYmKHA9Yi54LHc9Yi55LHg9Yi53aWR0aCxrPWIuaGVpZ2h0KSxwPmMud2lkdGgrYy54fHxjLng+Zy53aWR0aCtnLngpe2UhPT0xJiYodC5nbG9iYWxBbHBoYT1zKSx0aGlzLmZpbHRlciE9PVwiXCImJih0LmZpbHRlcj1uKTtyZXR1cm59dC5zYXZlKCksdC5iZWdpblBhdGgoKSx0LnJlY3QocCx3LHgsayksdC5jbGlwKCl9aWYodSl7aWYoIWwuaXNWaXNpYmxlKCkpe2UhPT0xJiYodC5nbG9iYWxBbHBoYT1zKSx0aGlzLmZpbHRlciE9PVwiXCImJih0LmZpbHRlcj1uKTtyZXR1cm59aWYoaCl7Y29uc3QgZz1sLnNoYWRvd09mZnNldDt0LnNoYWRvd3NTZXQoZy54Kmkuc2NhbGUqdGhpcy5zY2FsZSppLkhpLGcueSppLnNjYWxlKnRoaXMuc2NhbGUqaS5IaSxsLnNoYWRvd0JsdXIpLHQuc2hhZG93c09uKCksdC5zaGFkb3dDb2xvcj1sLnNoYWRvd0NvbG9yfX1jb25zdCBtPXRoaXMubmF0dXJhbEJvdW5kcztpZih0LnRyYW5zZm9ybShvLm0xMSxvLm0xMixvLm0yMSxvLm0yMixvLmR4LG8uZHkpLHRoaXMuQUwoaCx0LHUsciksdGhpcy5SdCE9PW51bGwmJih0LmNvbW1pdFRyYW5zZm9ybSgpLHRoaXMuWjEodCxtLGMpKSx0aGlzLkxMKGgsdCx1LHIpLHRoaXMueGgodCxpKSx0aGlzLlRMKGgsdCx1KSxkJiYodC5yZXN0b3JlKCksdC5jbGVhckNvbnRleHRDYWNoZSh0aGlzIGluc3RhbmNlb2YgUGFuZWwpKSwhby4kaygpKXtjb25zdCBnPTEvKG8ubTExKm8ubTIyLW8ubTEyKm8ubTIxKTt0LnRyYW5zZm9ybShvLm0yMipnLC1vLm0xMipnLC1vLm0yMSpnLG8ubTExKmcsZyooby5tMjEqby5keS1vLm0yMipvLmR4KSxnKihvLm0xMipvLmR4LW8ubTExKm8uZHkpKX1lIT09MSYmKHQuZ2xvYmFsQWxwaGE9cyksdGhpcy5maWx0ZXIhPT1cIlwiJiYodC5maWx0ZXI9bil9QUwodCxpLGUscyl7dCYmdGhpcy5zaGFkb3dWaXNpYmxlPT09ITA/aS5zaGFkb3dzT24oKTp0JiZ0aGlzLnNoYWRvd1Zpc2libGU9PT0hMSYmaS5zaGFkb3dzT2ZmKCksdCYmdGhpcy5RMShzKSYmdGhpcy5zaGFkb3dWaXNpYmxlPT09bnVsbCYmaS5zaGFkb3dzT2ZmKCl9TEwodCxpLGUscyl7dCYmKHRoaXMuUnQhPT1udWxsfHx0aGlzLlExKHMpKT8odGhpcy5fMSghMCksdGhpcy5zaGFkb3dWaXNpYmxlPT09bnVsbCYmaS5zaGFkb3dzT2ZmKCkpOnRoaXMuXzEoITEpfVRMKHQsaSxlKXt0JiZ0aGlzLkFQKCk9PT0hMCYmaS5zaGFkb3dzT24oKSxlJiZ0JiZpLnNoYWRvd3NPZmYoKX1pSSh0LGksZSl7Y29uc3Qgcz10aGlzLnBhcnQ7bGV0IG49ITE7cyYmdC5nZXRSZW5kZXJpbmdIaW50KFwiZHJhd1NoYWRvd3NcIikmJihuPXMuaXNTaGFkb3dlZCksaS5jbGlwSW5zdGVhZE9mRmlsbCYmKG49ITEpLHRoaXMuV3MoKSYmbiYmaS5zaGFkb3dzT24oKSxuJiZ0aGlzLnNoYWRvd1Zpc2libGU9PT0hMD9pLnNoYWRvd3NPbigpOm4mJnRoaXMuc2hhZG93VmlzaWJsZT09PSExJiZpLnNoYWRvd3NPZmYoKTtjb25zdCBvPXRoaXMucGFuZWw7aWYobiYmdGhpcy5RMShvKSYmdGhpcy5zaGFkb3dWaXNpYmxlPT09bnVsbCYmaS5zaGFkb3dzT2ZmKCksaS5zbCl7Y29uc3Qgcj10LmNvbXB1dGVQaXhlbFJhdGlvKCksbD1gZHJvcC1zaGFkb3coJHtpLnNoYWRvd09mZnNldFgvcn1weCAke2kuc2hhZG93T2Zmc2V0WS9yfXB4ICR7aS5zaGFkb3dCbHVyL3IvMn1weCAke2kuc2hhZG93Q29sb3J9KWA7dGhpcy5iYWNrZ3JvdW5kIT09bnVsbCYmZS5SdC5zZXRBdHRyaWJ1dGVOUyhudWxsLFwiZmlsdGVyXCIsbCl9cmV0dXJuIG4mJih0aGlzLlJ0IT09bnVsbHx8dGhpcy5RMShvKSk/KHRoaXMuXzEoITApLHRoaXMuc2hhZG93VmlzaWJsZT09PW51bGwmJmkuc2hhZG93c09mZigpKTp0aGlzLl8xKCExKSxufWVJKHQsaSxlLHMpe2lmKGUuc2wpe2NvbnN0IG49aS5jb21wdXRlUGl4ZWxSYXRpbygpLG89YGRyb3Atc2hhZG93KCR7ZS5zaGFkb3dPZmZzZXRYL259cHggJHtlLnNoYWRvd09mZnNldFkvbn1weCAke2Uuc2hhZG93Qmx1ci9uLzJ9cHggJHtlLnNoYWRvd0NvbG9yfSlgO3RoaXMuTFAodCxvKX1zJiZ0aGlzLkFQKCk9PT0hMCYmZS5zaGFkb3dzT24oKSx0aGlzLldzKCkmJmUuc2hhZG93c09mZigpfVExKHQpe3JldHVybiB0PT09bnVsbD8hMToodC5lbCgpJiYodD10LnBhbmVsKSx0LkFQKCl8fCh0LnR5cGU9PT1QYW5lbC5BdXRvfHx0LnR5cGU9PT1QYW5lbC5TcG90KSYmdC5maW5kTWFpbkVsZW1lbnQoKSE9PXRoaXMpfUxQKHQsaSl7fVoxKHQsaSxlKXtjb25zdCBzPXRoaXMuTTAoKSxuPWkueCxvPWkueSxyPWkud2lkdGgrcyxsPWkuaGVpZ2h0K3M7dGhpcy51bih0LHRoaXMuUnQsITAsITEsaSxlKSx0aGlzLlJ0IGluc3RhbmNlb2YgQnJ1c2gmJnRoaXMuUnQudHlwZT09PTM/KHQuYmVnaW5QYXRoKCksdC5yZWN0KG4tcy8yLG8tcy8yLHIsbCksdC5maWxsQ29udGV4dCh0aGlzLlJ0LCExLG51bGwpKTp0LmZpbGxSZWN0KG4tcy8yLG8tcy8yLHIsbCl9REwodCxpKXtsZXQgZT10LnNJKHRoaXMpO2NvbnN0IHM9dC5naCE9PW51bGw/dC5naDp0LnN2ZztpZihlIT09LTEpaWYoZT09PTApaWYocy5SdClzLlJ0LmFmdGVyKGkpO2Vsc2UgaWYodC50eXBlPT09UGFuZWwuVGFibGUpe2NvbnN0IG49cy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiZ29qcy10c1wiKSxvPW4ubGVuZ3RoIT09MD9uWzBdOm51bGw7byE9PW51bGwmJm8uYWZ0ZXIoaSl9ZWxzZSBzLnByZXBlbmQoaSk7ZWxzZXtmb3IoO2UhPT0wJiYhdC5lbHQoZS0xKS5pc1Zpc2libGVPYmplY3QoKTspZS0tO2lmKGU9PT0wKXMucHJlcGVuZChpKTtlbHNle2NvbnN0IG49dC5lbHQoZS0xKS5zdmc7biE9PW51bGw/bi5hZnRlcihpKTpzLmFwcGVuZENoaWxkKGkpfX19X1IodCxpKXtpZighKHQgaW5zdGFuY2VvZiBTVkdDb250ZXh0KSlyZXR1cm4hMTtpZighdGhpcy52aXNpYmxlfHx0aGlzLm9wYWNpdHk9PT0wKXJldHVybiB0aGlzLnN2ZyE9PW51bGwmJnRoaXMuc3ZnLnBhcmVudE5vZGUhPT1udWxsJiZ0aGlzLnN2Zy5yZW1vdmUoKSwhMDtjb25zdCBlPXRoaXMuRGk7aWYodGhpcy5XcygpJiYoIXRoaXMuaXNWaXNpYmxlKCl8fGUud2lkdGg9PT0wfHxlLmhlaWdodD09PTB8fGlzTmFOKGUueCl8fGlzTmFOKGUueSkpKXJldHVybiB0aGlzLnN2ZyE9PW51bGwmJnRoaXMuc3ZnLnBhcmVudE5vZGUhPT1udWxsJiZ0aGlzLnN2Zy5yZW1vdmUoKSwhMDtjb25zdCBzPXRoaXMucGFuZWwsbj10aGlzLm5kKHQpO2lmKHRoaXMubmModCxpLG4pKXJldHVybiB0aGlzLkZMKHRoaXMuc3ZnKSx0aGlzLnN2Zy5wYXJlbnRFbGVtZW50IT09bnVsbD8odGhpcy5XcygpJiYodC5sYXN0RHJhd25QYXJ0PXRoaXMuc3ZnKSwhMCk6KHRoaXMuV3MoKT8odC5sYXN0RHJhd25QYXJ0IT09bnVsbD90Lmxhc3REcmF3blBhcnQuYWZ0ZXIodGhpcy5zdmcpOnQuZGlhZ3JhbUdyb3VwLnByZXBlbmQodGhpcy5zdmcpLHQubGFzdERyYXduUGFydD10aGlzLnN2Zyk6cyYmdGhpcy5ETChzLHRoaXMuc3ZnKSwhMCk7aWYodGhpcy5IZSghMSksdGhpcy5XcygpJiZ0aGlzLmlzU2hhZG93ZWQpe2NvbnN0IG09dGhpcy5zaGFkb3dPZmZzZXQ7dC5zaGFkb3dzU2V0KG0ueCppLnNjYWxlKnRoaXMuc2NhbGUqaS5IaSxtLnkqaS5zY2FsZSp0aGlzLnNjYWxlKmkuSGksdGhpcy5zaGFkb3dCbHVyKSx0LnNoYWRvd3NPbigpLHQuc2hhZG93Q29sb3I9dGhpcy5zaGFkb3dDb2xvcn10aGlzIGluc3RhbmNlb2YgVGV4dEJsb2NrJiYodC5mb250PXRoaXMuZm9udCksdC5jdXJyZW50RWxlbWVudD1udWxsO2NvbnN0IG89dGhpcy5GLHI9dGhpcyBpbnN0YW5jZW9mIFBhbmVsLGw9dGhpcyBpbnN0YW5jZW9mIFBhbmVsP3RoaXMuZWwoKTohMSxoPXRoaXMuc3ZnO2lmKHRoaXMuUzAoKT09PSEwJiZ0aGlzLiQxKCksdC5zZXRDdXJyZW50VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSx0Lm91dGVyR3JvdXA9ITEsbilpZih0Lm91dGVyR3JvdXA9ITAsciYmbCl0Lm5ld0dyb3VwKDEsMCwwLDEsMCwwKSx0aGlzLnN2Zz10Lmxhc3RDcmVhdGVkRWxlbWVudDtlbHNlIGlmKHImJnRoaXMuaXNDbGlwcGluZyl7Y29uc3QgbT10aGlzLmZpbmRNYWluRWxlbWVudCgpO2xldCBnPTAscD0wO20hPT1udWxsJiYoZz1tLmFjdHVhbEJvdW5kcy54LHA9bS5hY3R1YWxCb3VuZHMueSksdC5uZXdHcm91cChvLm0xMSxvLm0xMixvLm0yMSxvLm0yMixvLmR4K2csby5keStwKSx0aGlzLnN2Zz10Lmxhc3RDcmVhdGVkRWxlbWVudCxtIT09bnVsbCYmdC5jcmVhdGVPclVwZGF0ZUNsaXBHcm91cCh0aGlzLG0uYWN0dWFsQm91bmRzKSx0LmN1cnJlbnRFbGVtZW50PXQubGFzdENyZWF0ZWRFbGVtZW50fWVsc2Ugcj8odC5uZXdHcm91cChvLm0xMSxvLm0xMixvLm0yMSxvLm0yMixvLmR4LG8uZHkpLHRoaXMuc3ZnPXQubGFzdENyZWF0ZWRFbGVtZW50KTp0Lm5ld0dyb3VwKDEsMCwwLDEsMCwwKTtjb25zdCBmPXRoaXMubmF0dXJhbEJvdW5kcztyfHx0LnNldEN1cnJlbnRUcmFuc2Zvcm0oby5tMTEsby5tMTIsby5tMjEsby5tMjIsby5keCxvLmR5KSx0aGlzLmJhY2tncm91bmQhPT1udWxsJiYocj8obCYmdC5zZXRDdXJyZW50VHJhbnNmb3JtKG8ubTExLG8ubTEyLG8ubTIxLG8ubTIyLG8uZHgsby5keSksdGhpcy5aMSh0LGYsZSksbCYmdC5zZXRDdXJyZW50VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSk6KHQuc2V0Q3VycmVudFRyYW5zZm9ybShvLm0xMSxvLm0xMixvLm0yMSxvLm0yMixvLmR4LG8uZHkpLHRoaXMuWjEodCxmLGUpKSx0LmN1cnJlbnRFbGVtZW50LlJ0PXQubGFzdENyZWF0ZWRFbGVtZW50LHQuY3VycmVudEVsZW1lbnQucHJlcGVuZCh0Lmxhc3RDcmVhdGVkRWxlbWVudCkpO2NvbnN0IGE9dGhpcy5pSShpLHQsdC5jdXJyZW50RWxlbWVudCk7dGhpcy54aCh0LGkpLHImJnQuZW5kR3JvdXAoKSx0Lm91dGVyR3JvdXAmJnQuZW5kR3JvdXAoKTtjb25zdCBjPXQuc3VyZmFjZS4kdSx1PXI/dGhpcy5zdmc6dC5jdXJyZW50RWxlbWVudDtpZihoIT09bnVsbCYmaC5wYXJlbnROb2RlIT09bnVsbCYmdSE9PWgmJmgucGFyZW50Tm9kZT09PXRoaXMucGFuZWwuc3ZnKXtjb25zdCBtPXRoaXMuc3ZnLmdldEF0dHJpYnV0ZShcImZpbHRlclwiKTtyZXR1cm4gbSE9PW51bGwmJnUuc2V0QXR0cmlidXRlKFwiZmlsdGVyXCIsbSksdGhpcy5maWx0ZXIhPT1cIlwiJiZ1LnNldEF0dHJpYnV0ZU5TKG51bGwsXCJmaWx0ZXJcIix0aGlzLmZpbHRlciksaC5yZXBsYWNlV2l0aCh1KSx0aGlzLnN2Zz11LHUhPT1udWxsJiZ0aGlzLkEwKHQscyxlLHUpLCEwfWlmKHRoaXMuc3ZnPXUsYyE9PW51bGwmJnU9PT1udWxsJiZ0LmR1bW15R3JvdXAoKSx1PT09bnVsbClyZXR1cm4hMDt0aGlzLkEwKHQscyxlLHUpLHRoaXMuZUkodSxpLHQsYSk7Y29uc3QgZD10aGlzLldzKCk/dGhpcy5vcGFjaXR5KnQuZ2xvYmFsQWxwaGE6dGhpcy5vcGFjaXR5O2lmKGQhPT0xJiZ1LnNldEF0dHJpYnV0ZU5TKG51bGwsXCJvcGFjaXR5XCIsZC50b1N0cmluZygpKSx0aGlzLmZpbHRlciE9PVwiXCImJnUuc2V0QXR0cmlidXRlTlMobnVsbCxcImZpbHRlclwiLHRoaXMuZmlsdGVyKSx0aGlzLldzKCkpe2lmKGghPT1udWxsJiZ1IT09aCYmaC5wYXJlbnROb2RlPT09dC5kaWFncmFtR3JvdXApe2NvbnN0IG09aC5nZXRBdHRyaWJ1dGUoXCJmaWx0ZXJcIik7bSE9PW51bGwmJnUuc2V0QXR0cmlidXRlKFwiZmlsdGVyXCIsbSksaC5yZXBsYWNlV2l0aCh1KX1lbHNlIHQubGFzdERyYXduUGFydD90Lmxhc3REcmF3blBhcnQuYWZ0ZXIodSk6dC5kaWFncmFtR3JvdXAucHJlcGVuZCh1KTt0Lmxhc3REcmF3blBhcnQ9dX1lbHNlIHMhPT1udWxsJiZ0aGlzLkRMKHMsdSk7cmV0dXJuIGMhPT1udWxsJiZjKHRoaXMsdSksdGhpcy5GTCh1KSwhMH1GTCh0KXtjb25zdCBpPXRoaXMsZT10LmRhdGFzZXQ7aSBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0JiYoaS5wb3J0SWQhPT1udWxsJiYoZS5wb3J0SWQ9aS5wb3J0SWQpLGkgaW5zdGFuY2VvZiBQYW5lbCYmKGlzTmFOKGkuaXRlbUluZGV4KXx8KGUuaXRlbUluZGV4PWkuaXRlbUluZGV4LnRvU3RyaW5nKCkpLGkgaW5zdGFuY2VvZiBQYXJ0JiYoZS5jbGFzc05hbWU9VS5CbihpKSxpLmtleSE9PXZvaWQgMCYmKGUua2V5PWkua2V5LnRvU3RyaW5nKCkpLGkuY29udGFpbmluZ0dyb3VwIT09bnVsbCYmKGUuZ3JvdXA9aS5jb250YWluaW5nR3JvdXAua2V5LnRvU3RyaW5nKCkpLGkgaW5zdGFuY2VvZiBMaW5rJiYoaS5mcm9tTm9kZSE9PW51bGwmJmkuZnJvbU5vZGUua2V5IT09dm9pZCAwJiYoZS5mcm9tS2V5PWkuZnJvbU5vZGUua2V5LnRvU3RyaW5nKCkpLGkuZnJvbVBvcnRJZCE9PVwiXCImJihlLmZyb21Qb3J0SWQ9aS5mcm9tUG9ydElkKSxpLnRvTm9kZSE9PW51bGwmJmkudG9Ob2RlLmtleSE9PXZvaWQgMCYmKGUudG9LZXk9aS50b05vZGUua2V5LnRvU3RyaW5nKCkpLGkudG9Qb3J0SWQhPT1cIlwiJiYoZS50b1BvcnRJZD1pLnRvUG9ydElkKSkpKSl9QTAodCxpLGUscyl7bGV0IG49KHRoaXMubCYyNTYpIT09MDtpZih0LmNsaXBJbnN0ZWFkT2ZGaWxsJiYobj0hMSksIW4pe3MucmVtb3ZlQXR0cmlidXRlTlMobnVsbCxcImNsaXAtcGF0aFwiKTtyZXR1cm59Y29uc3Qgbz1pLm1uKCk/aS5uYXR1cmFsQm91bmRzOmkuYWN0dWFsQm91bmRzO2xldCByPU1hdGgubWF4KGUueCxvLngpLGw9TWF0aC5tYXgoZS55LG8ueSksaD1NYXRoLm1pbihlLnJpZ2h0LG8ucmlnaHQpLXIsZj1NYXRoLm1pbihlLmJvdHRvbSxvLmJvdHRvbSktbDtjb25zdCBhPXRoaXMuaGk7YSE9PW51bGwmJihyPWEueCxsPWEueSxoPWEud2lkdGgsZj1hLmhlaWdodCk7Y29uc3QgYz1uZXcgUmVjdChyLGwsTWF0aC5tYXgoaCwwKSxNYXRoLm1heChmLDApKTt0aGlzIGluc3RhbmNlb2YgUGFuZWwmJnRoaXMuRi5jb3B5KCkuTHcoKS5ZZyhjKSxzLnNldEF0dHJpYnV0ZU5TKG51bGwsXCJjbGlwLXBhdGhcIixgcGF0aCgnICAgICAgTSAke2MueH0sJHtjLnl9ICAgICAgIEwgJHtjLndpZHRoK2MueH0gJHtjLnl9ICAgICAgIEwgJHtjLndpZHRoK2MueH0gJHtjLmhlaWdodCtjLnl9ICAgICAgIEwgJHtjLnh9ICR7Yy5oZWlnaHQrYy55fSB6Jykgdmlldy1ib3hgKX1uSSgpe2lmKHRoaXMuc3ZnPT09bnVsbClyZXR1cm47Y29uc3QgdD10aGlzLnN2Zy5pbm5lckhUTUwubWF0Y2goL3VybFxcKCMoKENMSVB8R1JBRCkuKz8pXFwpL2cpLGk9dGhpcy5zdmcub3duZXJEb2N1bWVudDtpZih0IT09bnVsbClmb3IoY29uc3QgZSBvZiB0KXtjb25zdCBzPWkuZ2V0RWxlbWVudEJ5SWQoZS5zcGxpdChcIiNcIilbMV0uc2xpY2UoMCwtMSkpO3MhPT1udWxsJiZzLnJlbW92ZSgpfXRoaXMuc3ZnLnJlbW92ZSgpfXRJKHQsaSl7Y29uc3QgZT10aGlzLkRpLHM9dGhpcy5xaSxuPXRoaXMuUnQ7biE9PW51bGwmJnQuY29tbWl0VHJhbnNmb3JtKCksbiE9PW51bGwmJih0aGlzLnVuKHQsbiwhMCwhMSxzLGUpLG4gaW5zdGFuY2VvZiBCcnVzaCYmbi50eXBlPT09Mz8odC5iZWdpblBhdGgoKSx0LnJlY3QoZS54LGUueSxlLndpZHRoLGUuaGVpZ2h0KSx0LmZpbGxDb250ZXh0KG4sITEsbnVsbCkpOnQuZmlsbFJlY3QoZS54LGUueSxlLndpZHRoLGUuaGVpZ2h0KSksdGhpcy54aCh0LGkpfXhoKHQsaSl7fW9jKCl7dGhpcy5IZSghMCl9bmModCxpLGUpe2NvbnN0IHM9dGhpcy5zdmc7aWYodGhpcy5vSSgpKXtpZih0aGlzLm9jKCksdGhpcy5IZSghMSkscz09PW51bGwpcmV0dXJuITE7Y29uc3QgYT1zLmdldEF0dHJpYnV0ZShcImNsaXAtcGF0aFwiKTtpZihhIT09bnVsbCYmYS5pbmNsdWRlcyhcInVybFwiKSl7Y29uc3QgdT10LnN2Zy5nZXRFbGVtZW50QnlJZChhLnNwbGl0KFwiI1wiKVsxXS5zbGljZSgwLC0xKSk7dSE9PW51bGwmJnUucmVtb3ZlKCl9cmV0dXJuIHMuZ2V0QXR0cmlidXRlKFwiZmlsdGVyXCIpJiZzLnJlbW92ZUF0dHJpYnV0ZShcImZpbHRlclwiKSwhMX1pZihzPT09bnVsbClyZXR1cm4hMTtpZighdGhpcy52aXNpYmxlKXJldHVybiBzLnJlbW92ZSgpLCExO2lmKHMubm9kZU5hbWUhPT1cImdcIiYmZXx8cy5ub2RlTmFtZT09PVwiZ1wiJiYhZSlyZXR1cm4hMTtjb25zdCBuPXRoaXMuRixvPVwibWF0cml4KFwiK24ubTExK1wiLCBcIituLm0xMitcIiwgXCIrbi5tMjErXCIsIFwiK24ubTIyK1wiLCBcIituLmR4K1wiLCBcIituLmR5K1wiKVwiLHI9dGhpcyBpbnN0YW5jZW9mIFBhbmVsLGw9cj90aGlzLmVsKCk6ITE7aWYoIShyJiZsKSlpZih0aGlzIGluc3RhbmNlb2YgUGljdHVyZSl7Y29uc3QgYT10aGlzLnRiO3Quc2V0Q3VycmVudFRyYW5zZm9ybShuLm0xMSxuLm0xMixuLm0yMSxuLm0yMixuLmR4LG4uZHkpLGEhPT1udWxsJiZ0LmFtZW5kSW1hZ2VUcmFuc2Zvcm0oYVswXSxhWzFdLGFbMl0sYVszXSxhWzRdLGFbNV0sYVs2XSxhWzddKSxlP3MubGFzdEVsZW1lbnRDaGlsZC5zZXRBdHRyaWJ1dGVOUyhudWxsLFwidHJhbnNmb3JtXCIsdC5nZXRDdXJyZW50VHJhbnNmb3JtKCkpOnMuc2V0QXR0cmlidXRlTlMobnVsbCxcInRyYW5zZm9ybVwiLHQuZ2V0Q3VycmVudFRyYW5zZm9ybSgpKX1lbHNlIGlmKGUmJiFyKWlmKHRoaXMgaW5zdGFuY2VvZiBTaGFwZSl7Y29uc3QgYT1zLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicGF0aFwiKTtmb3IobGV0IGM9MDtjPGEubGVuZ3RoO2MrKylhW2NdLnNldEF0dHJpYnV0ZU5TKG51bGwsXCJ0cmFuc2Zvcm1cIixvKX1lbHNlIGlmKHRoaXMgaW5zdGFuY2VvZiBUZXh0QmxvY2spe2NvbnN0IGE9cy5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRleHRcIiksYz10eXBlb2YgdGhpcy5zdHJva2U9PVwic3RyaW5nXCI/dGhpcy5zdHJva2U6bnVsbDtmb3IobGV0IHU9MDt1PGEubGVuZ3RoO3UrKylhW3VdLnNldEF0dHJpYnV0ZU5TKG51bGwsXCJ0cmFuc2Zvcm1cIixvKSxjJiZhW3VdLnNldEF0dHJpYnV0ZU5TKG51bGwsXCJmaWxsXCIsYyl9ZWxzZShzLmxhc3RFbGVtZW50Q2hpbGR8fHMpLnNldEF0dHJpYnV0ZU5TKG51bGwsXCJ0cmFuc2Zvcm1cIixvKTtlbHNlIGlmKHImJnRoaXMuaXNDbGlwcGluZyYmdGhpcy5naCl7Y29uc3QgYT10aGlzLmZpbmRNYWluRWxlbWVudCgpLGM9YSE9PW51bGw/YS5hY3R1YWxCb3VuZHMueDowLHU9YSE9PW51bGw/YS5hY3R1YWxCb3VuZHMueTowO3RoaXMuZ2guc2V0QXR0cmlidXRlTlMobnVsbCxcInRyYW5zZm9ybVwiLFwibWF0cml4KDEsMCwwLDEsXCIrLWMrXCIsIFwiKy11K1wiKVwiKSxzLnNldEF0dHJpYnV0ZU5TKG51bGwsXCJ0cmFuc2Zvcm1cIixcIm1hdHJpeChcIituLm0xMStcIiwgXCIrbi5tMTIrXCIsIFwiK24ubTIxK1wiLCBcIituLm0yMitcIiwgXCIrKG4uZHgrYykrXCIsIFwiKyhuLmR5K3UpK1wiKVwiKX1lbHNlIHMuc2V0QXR0cmlidXRlTlMobnVsbCxcInRyYW5zZm9ybVwiLG8pO2NvbnN0IGg9dGhpcy5XcygpP3RoaXMub3BhY2l0eSp0Lmdsb2JhbEFscGhhOnRoaXMub3BhY2l0eTtoPT09MT9zLnJlbW92ZUF0dHJpYnV0ZShcIm9wYWNpdHlcIik6cy5zZXRBdHRyaWJ1dGVOUyhudWxsLFwib3BhY2l0eVwiLGgudG9TdHJpbmcoKSksdC5zZXRDdXJyZW50VHJhbnNmb3JtKDEsMCwwLDEsMCwwKTtjb25zdCBmPXRoaXMuZ2g/dGhpcy5naDp0aGlzLkoxO2lmKHRoaXMuYmFja2dyb3VuZCE9PW51bGx8fGYuUnQhPT12b2lkIDApe2NvbnN0IGE9Zi5SdDtpZih0aGlzLmJhY2tncm91bmQ9PT1udWxsKXQucmVtb3ZlT2xkR3JhZGllbnQodGhpcyxmLlJ0LFwiZmlsbFwiKSxmLlJ0LnJlbW92ZSgpLGYuUnQ9dm9pZCAwO2Vsc2V7aWYoKGx8fGUmJiEodGhpcyBpbnN0YW5jZW9mIFBhbmVsKSkmJnQuc2V0Q3VycmVudFRyYW5zZm9ybShuLm0xMSxuLm0xMixuLm0yMSxuLm0yMixuLmR4LG4uZHkpLHRoaXMuWjEodCx0aGlzLm5hdHVyYWxCb3VuZHMsdGhpcy5hY3R1YWxCb3VuZHMpLGYuUnQpe3QucmVtb3ZlT2xkR3JhZGllbnQodGhpcyxmLlJ0LFwiZmlsbFwiKTtjb25zdCBjPWYuUnQuZ2V0QXR0cmlidXRlKFwiZmlsdGVyXCIpO2MhPT1udWxsJiZ0Lmxhc3RDcmVhdGVkRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJmaWx0ZXJcIixjKSxmLlJ0LnJlcGxhY2VXaXRoKHQubGFzdENyZWF0ZWRFbGVtZW50KX1lbHNlIGYucHJlcGVuZCh0Lmxhc3RDcmVhdGVkRWxlbWVudCk7Zi5SdD10Lmxhc3RDcmVhdGVkRWxlbWVudH1hJiZ0LnJlbW92ZU9sZEdyYWRpZW50KHRoaXMsYSxcImZpbGxcIil9cmV0dXJuIHRoaXMuQTAodCx0aGlzLnBhbmVsLHRoaXMuYWN0dWFsQm91bmRzLHMpLCEwfW5kKHQpe2lmKHRoaXMuYmFja2dyb3VuZCE9PW51bGwpcmV0dXJuITA7bGV0IGk9KHRoaXMubCYyNTYpIT09MDtyZXR1cm4gdC5jbGlwSW5zdGVhZE9mRmlsbCYmKGk9ITEpLCEhaX1zdGF0aWMgRkUodCxpLGUscyxuLG8scil7bGV0IGw9LjAwMTtjb25zdCBoPW8ubGVuZ3RoO3QubW92ZVRvKGksZSk7bGV0IGY9cy1pO2NvbnN0IGE9bi1lO2Y9PT0wJiYoZj0uMDAxKTtjb25zdCBjPWEvZjtsZXQgdT1NYXRoLnNxcnQoZipmK2EqYSksZD0wLG09ITA7bD1vW2QlaF07bGV0IGc9ciE9PTA7Zm9yKDt1Pj0uMTspe2lmKGcpe2ZvcihsPW9bZCsrJWhdLGwtPXI7bDwwOylsKz1vW2QrKyVoXSxtPSFtO2c9ITF9ZWxzZSBsPW9bZCsrJWhdO2w+dSYmKGw9dSk7bGV0IHA9TWF0aC5zcXJ0KGwqbC8oMStjKmMpKTtmPDAmJihwPS1wKSxpKz1wLGUrPWMqcCxtP3QubGluZVRvKGksZSk6dC5tb3ZlVG8oaSxlKSx1LT1sLG09IW19fXVuKHQsaSxlLHMsbixvKXtsZXQgcj0xLGw9MTtpZih0eXBlb2YgaT09XCJzdHJpbmdcIil7ZT90LmZpbGxTdHlsZT1pOnQuc3Ryb2tlU3R5bGU9aTtyZXR1cm59ZWxzZSBpZihpLnR5cGU9PT0xKXtlP3QuZmlsbFN0eWxlPWkuY29sb3I6dC5zdHJva2VTdHlsZT1pLmNvbG9yO3JldHVybn1sZXQgaDtjb25zdCBmPXRoaXMuTTAoKTtyPW4ud2lkdGgsbD1uLmhlaWdodCxzPyhyPW8ud2lkdGgsbD1vLmhlaWdodCk6ZXx8KHIrPWYsbCs9Zik7Y29uc3QgYT10IGluc3RhbmNlb2YgQ2FudmFzU3VyZmFjZUNvbnRleHQ7aWYoYSYmaS5wbiYmKGkudHlwZT09PTR8fGkucmM9PT1yJiZpLmliPT09bCkpaD1pLnBuO2Vsc2V7bGV0IGM9MCx1PTAsZD0wLG09MCxnPTAscD0wLHc9MCx4PTA7aWYocz8odz1vLngseD1vLnkpOmV8fCh3LT1mLzIseC09Zi8yKSxjPWkuc3RhcnQueCpyK2kuc3RhcnQub2Zmc2V0WCt3LHU9aS5zdGFydC55KmwraS5zdGFydC5vZmZzZXRZK3gsZD1pLmVuZC54KnIraS5lbmQub2Zmc2V0WCt3LG09aS5lbmQueSpsK2kuZW5kLm9mZnNldFkreCxpLnR5cGU9PT0yKWg9dC5jcmVhdGVMaW5lYXJHcmFkaWVudChjLHUsZCxtKTtlbHNlIGlmKGkudHlwZT09PTMpcD1pc05hTihpLmVuZFJhZGl1cyk/TWF0aC5tYXgocixsKS8yOmkuZW5kUmFkaXVzLGlzTmFOKGkuc3RhcnRSYWRpdXMpPyhnPTAscD1NYXRoLm1heChyLGwpLzIpOmc9aS5zdGFydFJhZGl1cyxoPXQuY3JlYXRlUmFkaWFsR3JhZGllbnQoYyx1LGcsZCxtLHApO2Vsc2UgaWYoaS50eXBlPT09NCl0cnl7aD10LmNyZWF0ZVBhdHRlcm4oaS5wYXR0ZXJuLFwicmVwZWF0XCIpfWNhdGNoe2g9bnVsbH1lbHNlIFUuUGkoaS50eXBlLFwiQnJ1c2ggdHlwZVwiKTtpZihpLnR5cGUhPT00KXtjb25zdCBrPWkuY29sb3JTdG9wcztpZihrIT09bnVsbCl7Y29uc3QgYj1rLml0ZXJhdG9yO2Zvcig7Yi5uZXh0KCk7KWguYWRkQ29sb3JTdG9wKGIua2V5LGIudmFsdWUpfX1pZihhJiYoaS5wbj1oLGghPT1udWxsJiYoaS5yYz1yLGkuaWI9bCksaD09PW51bGwmJmkudHlwZT09PTQmJmkucmMhPT0tMSkpe2kucmM9LTE7Y29uc3Qgaz10aGlzLmRpYWdyYW07ayE9PW51bGwmJmkucmM9PT0tMSYmVS5scigoKT0+e2sucmVkcmF3KCl9LDYwMCl9fWU/dC5maWxsU3R5bGU9aDp0LnN0cm9rZVN0eWxlPWh9aXNDb250YWluZWRCeSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFBhbmVsP3RoaXMuckkodGhpcyx0KTohMX1ySSh0LGkpe2lmKHQ9PT1pfHxpPT09bnVsbClyZXR1cm4hMTtsZXQgZT10LnBhbmVsO2Zvcig7ZSE9PW51bGw7KXtpZihlPT09aSlyZXR1cm4hMDtlPWUucGFuZWx9cmV0dXJuITF9aXNWaXNpYmxlT2JqZWN0KCl7aWYoIXRoaXMudmlzaWJsZSlyZXR1cm4hMTtjb25zdCB0PXRoaXMucGFuZWw7cmV0dXJuIHQhPT1udWxsP3QuaXNWaXNpYmxlT2JqZWN0KCk6ITB9aXNFbmFibGVkT2JqZWN0KCl7bGV0IHQ9dGhpcyBpbnN0YW5jZW9mIFBhbmVsP3RoaXM6dGhpcy5wYW5lbDtmb3IoO3QhPT1udWxsJiZ0LmlzRW5hYmxlZDspdD10LnBhbmVsO3JldHVybiB0PT09bnVsbH1nZXQgZW5hYmxlZENoYW5nZWQoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuTDA6bnVsbH1zZXQgZW5hYmxlZENoYW5nZWQodCl7Y29uc3QgaT10aGlzLmVuYWJsZWRDaGFuZ2VkO2khPT10JiYodCE9PW51bGwmJlUuUCh0LEdyYXBoT2JqZWN0LFwiZW5hYmxlZENoYW5nZWRcIiksdGhpcy5KdCgpLkwwPXQsdGhpcy50KFwiZW5hYmxlZENoYW5nZWRcIixpLHQpKX0kMSgpe2lmKHRoaXMuZWIoKT09PSEwKXtjb25zdCB0PXRoaXMuX3I7aWYodC5WaSgpLCF0aGlzLkRpLmlzUmVhbCgpfHwhdGhpcy5sZS5pc1JlYWwoKSl7dGhpcy5vZCghMSk7cmV0dXJufWlmKHQuQnModGhpcy5EaS54LXRoaXMubGUueCx0aGlzLkRpLnktdGhpcy5sZS55KSx0aGlzLnNjYWxlIT09MXx8dGhpcy5hbmdsZSE9PTApe2NvbnN0IGk9dGhpcy5uYXR1cmFsQm91bmRzO3RoaXMuazAodCxpLngsaS55LGkud2lkdGgsaS5oZWlnaHQpfXRoaXMub2QoITEpLHRoaXMuTGEoITApfWlmKHRoaXMuUzAoKT09PSEwKXtjb25zdCB0PXRoaXMucGFuZWw7aWYodD09PW51bGwpdGhpcy5kaC5zZXQodGhpcy5fciksdGhpcy5iYT10aGlzLnNjYWxlO2Vsc2UgaWYodC5VcyE9PW51bGwpe2NvbnN0IGk9dGhpcy5kaDtpLlZpKCksdC5tbigpP2kudWYodC5kaCk6dC5wYW5lbCE9PW51bGwmJmkudWYodC5wYW5lbC5kaCksaS51Zih0aGlzLl9yKSx0aGlzLmJhPXRoaXMuc2NhbGUqdC5iYX10aGlzLkxhKCExKX19azAodCxpLGUscyxuKXtpZih0aGlzLm90IT09MSYmdC5vdCh0aGlzLm90KSx0aGlzLmp0PT09MClyZXR1cm47Y29uc3Qgbz1Qb2ludC5hKCk7by5zZXRTcG90KGksZSxzLG4sU3BvdC5DZW50ZXIpLHQubXModGhpcy5qdCxvLngsby55KSxQb2ludC5vKG8pfXUodCl7aWYodGhpcy5FbygpKXJldHVybjt0PT09dm9pZCAwJiYodD0hMSksdGhpcy5wZSghMCksdGhpcy50byghMCk7Y29uc3QgaT10aGlzLnBhbmVsO2khPT1udWxsJiYhdCYmaS51KCl9bGMoKXt0aGlzLkVvKCl8fCh0aGlzLnBlKCEwKSx0aGlzLnRvKCEwKSl9aGModCl7aWYodGhpcy5ucygpKXJldHVybjtjb25zdCBpPXRoaXMucGFuZWw7IXQmJmkhPT1udWxsJiZpLnUoKSx0aGlzLnRvKCEwKX1zYygpe3RoaXMuZWIoKT09PSExJiYodGhpcy5vZCghMCksdGhpcy5MYSghMCkpfVRQKCl7dGhpcy5MYSghMCl9TCgpe2NvbnN0IHQ9dGhpcy5wYXJ0O3QhPT1udWxsJiZ0LkwoKX1xcyh0KXtjb25zdCBpPXRoaXMuc3RyZXRjaCxlPXRoaXMucGFuZWw7aWYoZT09PW51bGwpcmV0dXJuIHRoaXMuWW8oaT09PTE/MDppLHQpO2lmKGUudHlwZT09PVBhbmVsLlRhYmxlKXJldHVybiB0aGlzLlQwKGUuZ2V0Um93RGVmaW5pdGlvbih0aGlzLnJvdyksZS5nZXRDb2x1bW5EZWZpbml0aW9uKHRoaXMuY29sdW1uKSx0KTtpZihlLnR5cGU9PT1QYW5lbC5BdXRvJiZlLmZpbmRNYWluRWxlbWVudCgpPT09dGhpcylyZXR1cm4gdGhpcy5ZbygyLHQpO2lmKGk9PT0xKXtpZihlLnR5cGU9PT1QYW5lbC5TcG90JiZlLmZpbmRNYWluRWxlbWVudCgpPT09dGhpcylyZXR1cm4gdGhpcy5ZbygyLHQpO2NvbnN0IHM9ZS5kZWZhdWx0U3RyZXRjaDtyZXR1cm4gcz09PTE/dGhpcy5ZbygwLHQpOnRoaXMuWW8ocyx0KX1yZXR1cm4gdGhpcy5ZbyhpLHQpfVQwKHQsaSxlKXtjb25zdCBzPXRoaXMuc3RyZXRjaDtpZihzIT09MSlyZXR1cm4gdGhpcy5ZbyhzLGUpO2xldCBuPW51bGwsbz1udWxsO3N3aXRjaCh0LnN0cmV0Y2gpe2Nhc2UgMTpjYXNlIDU6YnJlYWs7Y2FzZSA0Om89ITA7YnJlYWs7Y2FzZSAyOm89ITA7YnJlYWt9c3dpdGNoKGkuc3RyZXRjaCl7Y2FzZSAxOmNhc2UgNDpicmVhaztjYXNlIDU6bj0hMDticmVhaztjYXNlIDI6bj0hMDticmVha31jb25zdCByPXRoaXMucGFuZWwuZGVmYXVsdFN0cmV0Y2g7cmV0dXJuIG49PT1udWxsJiYobj1yPT09NXx8cj09PTIpLG89PT1udWxsJiYobz1yPT09NHx8cj09PTIpLG49PT0hMCYmbz09PSEwP3RoaXMuWW8oMixlKTpuPT09ITA/dGhpcy5Zbyg1LGUpOm89PT0hMD90aGlzLllvKDQsZSk6dGhpcy5ZbygwLGUpfVlvKHQsaSl7aWYoaSlyZXR1cm4gdDtpZih0PT09MClyZXR1cm4gMDtjb25zdCBlPXRoaXMuZGVzaXJlZFNpemU7aWYoZS5pc1JlYWwoKSlyZXR1cm4gMDtjb25zdCBzPSFpc05hTihlLndpZHRoKSxuPSFpc05hTihlLmhlaWdodCksbz10aGlzLmFuZ2xlO2lmKHMpaWYobyE9PTkwJiZvIT09MjcwKXtpZih0PT09NSlyZXR1cm4gMDtpZih0PT09MilyZXR1cm4gNH1lbHNle2lmKHQ9PT00KXJldHVybiAwO2lmKHQ9PT0yKXJldHVybiA1fWlmKG4paWYobyE9PTkwJiZvIT09MjcwKXtpZih0PT09NClyZXR1cm4gMDtpZih0PT09MilyZXR1cm4gNX1lbHNle2lmKHQ9PT01KXJldHVybiAwO2lmKHQ9PT0yKXJldHVybiA0fXJldHVybiB0fWdldCBzZWdtZW50T3JpZW50YXRpb24oKXtyZXR1cm4gdGhpcy5YdCE9PW51bGw/dGhpcy5YdC5EMDowfXNldCBzZWdtZW50T3JpZW50YXRpb24odCl7Y29uc3QgaT10aGlzLnNlZ21lbnRPcmllbnRhdGlvbjtpIT09dCYmKERlYnVnJiZVLmoodCxPcmllbnRhdGlvbixcIk9yaWVudGF0aW9uXCIpLHRoaXMuWHQ9PT1udWxsJiYodGhpcy5YdD1uZXcgTGlua0VsZW1lbnRTZXR0aW5ncyksdGhpcy5YdC5EMD10LHRoaXMudSgpLHRoaXMudChcInNlZ21lbnRPcmllbnRhdGlvblwiLGksdCksdD09PTAmJih0aGlzLmFuZ2xlPTApKX1sSSgpe3RoaXMuc2VnbWVudE9yaWVudGF0aW9uPTIxfWdldCBzZWdtZW50SW5kZXgoKXtyZXR1cm4gdGhpcy5YdCE9PW51bGw/dGhpcy5YdC5GMDotMS8wfXNldCBzZWdtZW50SW5kZXgodCl7RGVidWcmJlUuaSh0LFwibnVtYmVyXCIsR3JhcGhPYmplY3QsXCJzZWdtZW50SW5kZXhcIiksdD1NYXRoLnJvdW5kKHQpO2NvbnN0IGk9dGhpcy5zZWdtZW50SW5kZXg7aSE9PXQmJih0aGlzLlh0PT09bnVsbCYmKHRoaXMuWHQ9bmV3IExpbmtFbGVtZW50U2V0dGluZ3MpLHRoaXMuWHQuRjA9dCx0aGlzLnUoKSx0aGlzLnQoXCJzZWdtZW50SW5kZXhcIixpLHQpKX1nZXQgc2VnbWVudEZyYWN0aW9uKCl7cmV0dXJuIHRoaXMuWHQhPT1udWxsP3RoaXMuWHQuUjA6MH1zZXQgc2VnbWVudEZyYWN0aW9uKHQpe0RlYnVnJiZVLnIodCxHcmFwaE9iamVjdCxcInNlZ21lbnRGcmFjdGlvblwiKSx0PDA/dD0wOnQ+MSYmKHQ9MSk7Y29uc3QgaT10aGlzLnNlZ21lbnRGcmFjdGlvbjtpIT09dCYmKHRoaXMuWHQ9PT1udWxsJiYodGhpcy5YdD1uZXcgTGlua0VsZW1lbnRTZXR0aW5ncyksdGhpcy5YdC5SMD10LHRoaXMudSgpLHRoaXMudChcInNlZ21lbnRGcmFjdGlvblwiLGksdCkpfWdldCBzZWdtZW50T2Zmc2V0KCl7cmV0dXJuIHRoaXMuWHQhPT1udWxsP3RoaXMuWHQuSTA6UG9pbnQuTm99c2V0IHNlZ21lbnRPZmZzZXQodCl7Y29uc3QgaT10aGlzLnNlZ21lbnRPZmZzZXQ7aS5lcXVhbHModCl8fChEZWJ1ZyYmVS5lKHQsUG9pbnQsR3JhcGhPYmplY3QsXCJzZWdtZW50T2Zmc2V0XCIpLHQ9dC5OKCksdGhpcy5YdD09PW51bGwmJih0aGlzLlh0PW5ldyBMaW5rRWxlbWVudFNldHRpbmdzKSx0aGlzLlh0LkkwPXQsdGhpcy51KCksdGhpcy50KFwic2VnbWVudE9mZnNldFwiLGksdCkpfWdldCBzdHJldGNoKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLmlvOjF9c2V0IHN0cmV0Y2godCl7Y29uc3QgaT10aGlzLnN0cmV0Y2g7aSE9PXQmJihEZWJ1ZyYmVS5qKHQsU3RyZXRjaCxcIlN0cmV0Y2hcIiksdGhpcy5KdCgpLmlvPXQsdGhpcy51KCksdGhpcy50KFwic3RyZXRjaFwiLGksdCkpfWdldCBuYW1lKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLkx0OlwiXCJ9c2V0IG5hbWUodCl7Y29uc3QgaT10aGlzLm5hbWU7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJzdHJpbmdcIixHcmFwaE9iamVjdCxcIm5hbWVcIiksdGhpcy5KdCgpLkx0PXQsdGhpcy5wYXJ0IT09bnVsbCYmdGhpcy5wYXJ0Lk8wKCksdGhpcy50KFwibmFtZVwiLGksdCkpfWdldCBvcGFjaXR5KCl7cmV0dXJuIHRoaXMuaWl9c2V0IG9wYWNpdHkodCl7RGVidWcmJlUucih0LEdyYXBoT2JqZWN0LFwib3BhY2l0eVwiKSx0PDA/dD0wOnQ+MSYmKHQ9MSk7Y29uc3QgaT10aGlzLm9wYWNpdHk7aWYoaSE9PXQpe3RoaXMuaWk9dCx0aGlzLnQoXCJvcGFjaXR5XCIsaSx0KTtjb25zdCBlPXRoaXMuZGlhZ3JhbSxzPXRoaXMucGFydDtlIT09bnVsbCYmcyE9PW51bGwmJmUuTChzLnRhKHMuYWN0dWFsQm91bmRzKSl9fWdldCBmaWx0ZXIoKXtyZXR1cm4gdGhpcy54MH1zZXQgZmlsdGVyKHQpe2NvbnN0IGk9dGhpcy5maWx0ZXI7aWYoaSE9PXQpe0RlYnVnJiZVLmkodCxcInN0cmluZ1wiLEdyYXBoT2JqZWN0LFwiZmlsdGVyXCIpLHRoaXMueDA9dCx0aGlzLkhlKCEwKSx0aGlzLnQoXCJmaWx0ZXJcIixpLHQpO2NvbnN0IGU9dGhpcy5kaWFncmFtLHM9dGhpcy5wYXJ0O2UhPT1udWxsJiZzIT09bnVsbCYmZS5MKHMudGEocy5hY3R1YWxCb3VuZHMpKX19Z2V0IHZpc2libGUoKXtyZXR1cm4odGhpcy5sJjEpIT09MH1zZXQgdmlzaWJsZSh0KXtjb25zdCBpPSh0aGlzLmwmMSkhPT0wO2lmKGkhPT10KXtEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsR3JhcGhPYmplY3QsXCJ2aXNpYmxlXCIpLHRoaXMubD10aGlzLmxeMSx0aGlzLm9jKCksdGhpcy50KFwidmlzaWJsZVwiLGksdCk7Y29uc3QgZT10aGlzLnBhbmVsO2UhPT1udWxsP2UudSgpOnRoaXMuV3MoKSYmdGhpcy5LaSh0KSx0aGlzLkwoKSx0aGlzLlJMKCl9fWdldCBwaWNrYWJsZSgpe3JldHVybih0aGlzLmwmMikhPT0wfXNldCBwaWNrYWJsZSh0KXtjb25zdCBpPSh0aGlzLmwmMikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyYXBoT2JqZWN0LFwicGlja2FibGVcIiksdGhpcy5sPXRoaXMubF4yLHRoaXMudChcInBpY2thYmxlXCIsaSx0KSl9Z2V0IGZyb21MaW5rYWJsZUR1cGxpY2F0ZXMoKXtyZXR1cm4odGhpcy5sJjQpIT09MH1zZXQgZnJvbUxpbmthYmxlRHVwbGljYXRlcyh0KXtjb25zdCBpPSh0aGlzLmwmNCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyYXBoT2JqZWN0LFwiZnJvbUxpbmthYmxlRHVwbGljYXRlc1wiKSx0aGlzLmw9dGhpcy5sXjQsdGhpcy50KFwiZnJvbUxpbmthYmxlRHVwbGljYXRlc1wiLGksdCkpfWdldCBmcm9tTGlua2FibGVTZWxmTm9kZSgpe3JldHVybih0aGlzLmwmOCkhPT0wfXNldCBmcm9tTGlua2FibGVTZWxmTm9kZSh0KXtjb25zdCBpPSh0aGlzLmwmOCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyYXBoT2JqZWN0LFwiZnJvbUxpbmthYmxlU2VsZk5vZGVcIiksdGhpcy5sPXRoaXMubF44LHRoaXMudChcImZyb21MaW5rYWJsZVNlbGZOb2RlXCIsaSx0KSl9Z2V0IHRvTGlua2FibGVEdXBsaWNhdGVzKCl7cmV0dXJuKHRoaXMubCYxNikhPT0wfXNldCB0b0xpbmthYmxlRHVwbGljYXRlcyh0KXtjb25zdCBpPSh0aGlzLmwmMTYpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixHcmFwaE9iamVjdCxcInRvTGlua2FibGVEdXBsaWNhdGVzXCIpLHRoaXMubD10aGlzLmxeMTYsdGhpcy50KFwidG9MaW5rYWJsZUR1cGxpY2F0ZXNcIixpLHQpKX1nZXQgdG9MaW5rYWJsZVNlbGZOb2RlKCl7cmV0dXJuKHRoaXMubCYzMikhPT0wfXNldCB0b0xpbmthYmxlU2VsZk5vZGUodCl7Y29uc3QgaT0odGhpcy5sJjMyKSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsR3JhcGhPYmplY3QsXCJ0b0xpbmthYmxlU2VsZk5vZGVcIiksdGhpcy5sPXRoaXMubF4zMix0aGlzLnQoXCJ0b0xpbmthYmxlU2VsZk5vZGVcIixpLHQpKX1nZXQgaXNQYW5lbE1haW4oKXtyZXR1cm4odGhpcy5sJjY0KSE9PTB9c2V0IGlzUGFuZWxNYWluKHQpe2NvbnN0IGk9KHRoaXMubCY2NCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyYXBoT2JqZWN0LFwiaXNQYW5lbE1haW5cIiksdGhpcy5sPXRoaXMubF42NCx0aGlzLnUoKSx0aGlzLnQoXCJpc1BhbmVsTWFpblwiLGksdCkpfWdldCBpc0FjdGlvbmFibGUoKXtyZXR1cm4odGhpcy5sJjEyOCkhPT0wfXNldCBpc0FjdGlvbmFibGUodCl7Y29uc3QgaT0odGhpcy5sJjEyOCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyYXBoT2JqZWN0LFwiaXNBY3Rpb25hYmxlXCIpLHRoaXMubD10aGlzLmxeMTI4LHRoaXMudChcImlzQWN0aW9uYWJsZVwiLGksdCkpfWdldCBiYWNrZ3JvdW5kKCl7cmV0dXJuIHRoaXMuUnR9c2V0IGJhY2tncm91bmQodCl7Y29uc3QgaT10aGlzLmJhY2tncm91bmQ7aSE9PXQmJih0IT09bnVsbCYmQnJ1c2gucmQodCxcIkdyYXBoT2JqZWN0LmJhY2tncm91bmRcIiksdCBpbnN0YW5jZW9mIEJydXNoJiZ0LnAoKSx0aGlzLlJ0PXQsdGhpcy5MKCksdGhpcy50KFwiYmFja2dyb3VuZFwiLGksdCkpfUFQKCl7cmV0dXJuKHRoaXMubCY1MTIpIT09MH1fMSh0KXt0P3RoaXMubHw9NTEyOnRoaXMubCY9LTUxM31pYygpe3JldHVybih0aGlzLmwmMTAyNCkhPT0wfURQKHQpe3Q/dGhpcy5sfD0xMDI0OnRoaXMubCY9LTEwMjV9ZWIoKXtyZXR1cm4odGhpcy5sJjIwNDgpIT09MH1vZCh0KXt0P3RoaXMubHw9MjA0ODp0aGlzLmwmPS0yMDQ5fVMwKCl7cmV0dXJuKHRoaXMubCY0MDk2KSE9PTB9TGEodCl7dD90aGlzLmx8PTQwOTY6dGhpcy5sJj0tNDA5N31Fbygpe3JldHVybih0aGlzLmwmODE5MikhPT0wfXBlKHQpe3Q/dGhpcy5sfD04MTkyOnRoaXMubCY9LTgxOTN9bnMoKXtyZXR1cm4odGhpcy5sJjE2Mzg0KSE9PTB9dG8odCl7dD90aGlzLmx8PTE2Mzg0OnRoaXMubCY9LTE2Mzg1fW9JKCl7cmV0dXJuKHRoaXMubCYzMjc2OCkhPT0wfUhlKHQpe3Q/dGhpcy5sfD0zMjc2ODp0aGlzLmwmPS0zMjc2OX1nZXQgcGFydCgpe2lmKHRoaXMuV3MoKSlyZXR1cm4gdGhpcztpZih0aGlzLmlsIT09bnVsbClyZXR1cm4gdGhpcy5pbDtsZXQgdD10aGlzO2Zvcih0PXQucGFuZWw7dDspe2lmKHQgaW5zdGFuY2VvZiBQYXJ0KXJldHVybiB0aGlzLmlsPXQsdDt0PXQucGFuZWx9cmV0dXJuIG51bGx9Z2V0IHN2Zygpe3JldHVybiB0aGlzLkoxfXNldCBzdmcodCl7dGhpcy5KMT10fUV1KCl7dGhpcy5zdmc9bnVsbH1nZXQgcGFuZWwoKXtyZXR1cm4gdGhpcy5Ic31UYSh0KXt0aGlzLkhzPXQsdGhpcy5zdmchPT1udWxsJiZ0aGlzLnN2Zy5yZW1vdmUoKX1nZXQgbGF5ZXIoKXtjb25zdCB0PXRoaXMucGFydDtyZXR1cm4gdCE9PW51bGw/dC5sYXllcjpudWxsfWdldCBkaWFncmFtKCl7Y29uc3QgdD10aGlzLnBhcnQ7cmV0dXJuIHQhPT1udWxsP3QuZGlhZ3JhbTpudWxsfWdldCBwb3NpdGlvbigpe3JldHVybiB0aGlzLmd0fXNldCBwb3NpdGlvbih0KXtEZWJ1ZyYmVS5lKHQsUG9pbnQsR3JhcGhPYmplY3QsXCJwb3NpdGlvblwiKTtjb25zdCBpPXQueCxlPXQueSxzPXRoaXMucG9zaXRpb24sbj1zLngsbz1zLnk7biE9PWkmJighaXNOYU4obil8fCFpc05hTihpKSl8fG8hPT1lJiYoIWlzTmFOKG8pfHwhaXNOYU4oZSkpPyh0PXQuY29weSgpLHRoaXMuRlAodCxuLG8pJiZ0aGlzLnQoXCJwb3NpdGlvblwiLG5ldyBQb2ludChuLG8pLHQuY29weSgpKSk6dGhpcy5SUCgpfVJQKCl7fUZQKHQsaSxlKXtyZXR1cm4gdGhpcy5ndD10LHRoaXMuaGMoKSwhMH1MZih0LGksZSl7dGhpcy5ndC54PT09dCYmdGhpcy5ndC55PT09aXx8KHRoaXMuZ3Qucyh0LGkpLHRoaXMuc2MoKSl9Z2V0IGFjdHVhbEJvdW5kcygpe3JldHVybiB0aGlzLkRpfWdldCBzY2FsZSgpe3JldHVybiB0aGlzLm90fXNldCBzY2FsZSh0KXtjb25zdCBpPXRoaXMuc2NhbGU7aSE9PXQmJihEZWJ1ZyYmVS5yKHQsR3JhcGhPYmplY3QsXCJzY2FsZVwiKSx0PD0wJiZVLm4oXCJHcmFwaE9iamVjdC5zY2FsZSBmb3IgXCIrdGhpcytcIiBtdXN0IGJlIGdyZWF0ZXIgdGhhbiB6ZXJvLCBub3Q6IFwiK3QpLHRoaXMub3Q9dCx0aGlzLnUoKSx0aGlzLnQoXCJzY2FsZVwiLGksdCkpfWdldCBhbmdsZSgpe3JldHVybiB0aGlzLmp0fXNldCBhbmdsZSh0KXtjb25zdCBpPXRoaXMuYW5nbGU7aWYoaSE9PXQpe2lmKERlYnVnJiZVLnIodCxHcmFwaE9iamVjdCxcImFuZ2xlXCIpLHQ9dCUzNjAsdDwwJiYodCs9MzYwKSxpPT09dClyZXR1cm47dGhpcy5qdD10LHRoaXMuUkwoKSx0aGlzLnUoKSx0aGlzLnQoXCJhbmdsZVwiLGksdCl9fWdldCBkZXNpcmVkU2l6ZSgpe3JldHVybiB0aGlzLnJzfXNldCBkZXNpcmVkU2l6ZSh0KXtEZWJ1ZyYmVS5lKHQsU2l6ZSxHcmFwaE9iamVjdCxcImRlc2lyZWRTaXplXCIpO2NvbnN0IGk9dC53aWR0aCxlPXQuaGVpZ2h0LHM9dGhpcy5kZXNpcmVkU2l6ZSxuPXMud2lkdGgsbz1zLmhlaWdodDtpZigobiE9PWkmJighaXNOYU4obil8fCFpc05hTihpKSl8fG8hPT1lJiYoIWlzTmFOKG8pfHwhaXNOYU4oZSkpKSYmKHQ9dC5OKCksdGhpcy5ycz10LHRoaXMudSgpLHRoaXMgaW5zdGFuY2VvZiBTaGFwZSYmdGhpcy5yZSgpLHRoaXMudChcImRlc2lyZWRTaXplXCIscyx0KSx0aGlzLmljKCkpKXtjb25zdCByPXRoaXMucGFydDtyIT09bnVsbCYmKHRoaXMuQWEocixcIndpZHRoXCIpLHRoaXMuQWEocixcImhlaWdodFwiKSl9fWdldCB3aWR0aCgpe3JldHVybiB0aGlzLnJzLndpZHRofXNldCB3aWR0aCh0KXtjb25zdCBpPXRoaXMucnMud2lkdGg7aWYoaSE9PXQmJighaXNOYU4oaSl8fCFpc05hTih0KSkpe0RlYnVnJiZVLmkodCxcIm51bWJlclwiLEdyYXBoT2JqZWN0LFwid2lkdGhcIik7Y29uc3QgZT10aGlzLnJzLHM9bmV3IFNpemUodCx0aGlzLnJzLmhlaWdodCkucCgpO2lmKHRoaXMucnM9cyx0aGlzLnUoKSx0aGlzIGluc3RhbmNlb2YgU2hhcGUmJnRoaXMucmUoKSx0aGlzLnQoXCJkZXNpcmVkU2l6ZVwiLGUscyksdGhpcy5pYygpKXtjb25zdCBuPXRoaXMucGFydDtuIT09bnVsbCYmdGhpcy5BYShuLFwid2lkdGhcIil9fX1nZXQgaGVpZ2h0KCl7cmV0dXJuIHRoaXMucnMuaGVpZ2h0fXNldCBoZWlnaHQodCl7Y29uc3QgaT10aGlzLnJzLmhlaWdodDtpZihpIT09dCYmKCFpc05hTihpKXx8IWlzTmFOKHQpKSl7RGVidWcmJlUuaSh0LFwibnVtYmVyXCIsR3JhcGhPYmplY3QsXCJoZWlnaHRcIik7Y29uc3QgZT10aGlzLnJzLHM9bmV3IFNpemUodGhpcy5ycy53aWR0aCx0KS5wKCk7aWYodGhpcy5ycz1zLHRoaXMudSgpLHRoaXMgaW5zdGFuY2VvZiBTaGFwZSYmdGhpcy5yZSgpLHRoaXMudChcImRlc2lyZWRTaXplXCIsZSxzKSx0aGlzLmljKCkpe2NvbnN0IG49dGhpcy5wYXJ0O24hPT1udWxsJiZ0aGlzLkFhKG4sXCJoZWlnaHRcIil9fX1nZXQgbWluU2l6ZSgpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5TcjpTaXplLkdofXNldCBtaW5TaXplKHQpe2NvbnN0IGk9dGhpcy5taW5TaXplO2kuZXF1YWxzKHQpfHwoRGVidWcmJlUuZSh0LFNpemUsR3JhcGhPYmplY3QsXCJtaW5TaXplXCIpLHQ9dC5jb3B5KCksaXNOYU4odC53aWR0aCkmJih0LndpZHRoPTApLGlzTmFOKHQuaGVpZ2h0KSYmKHQuaGVpZ2h0PTApLHQucCgpLHRoaXMuSnQoKS5Tcj10LHRoaXMudSgpLHRoaXMudChcIm1pblNpemVcIixpLHQpKX1nZXQgbWF4U2l6ZSgpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5NcjpTaXplLk13fXNldCBtYXhTaXplKHQpe2NvbnN0IGk9dGhpcy5tYXhTaXplO2kuZXF1YWxzKHQpfHwoRGVidWcmJlUuZSh0LFNpemUsR3JhcGhPYmplY3QsXCJtYXhTaXplXCIpLHQ9dC5jb3B5KCksaXNOYU4odC53aWR0aCkmJih0LndpZHRoPTEvMCksaXNOYU4odC5oZWlnaHQpJiYodC5oZWlnaHQ9MS8wKSx0LnAoKSx0aGlzLkp0KCkuTXI9dCx0aGlzLnUoKSx0aGlzLnQoXCJtYXhTaXplXCIsaSx0KSl9Z2V0IG1lYXN1cmVkQm91bmRzKCl7cmV0dXJuIHRoaXMubGV9Z2V0IG5hdHVyYWxCb3VuZHMoKXtyZXR1cm4gdGhpcy5xaX1NMCgpe3JldHVybiAwfWdldCBtYXJnaW4oKXtyZXR1cm4gdGhpcy50bH1zZXQgbWFyZ2luKHQpe3R5cGVvZiB0PT1cIm51bWJlclwiP3Q9bmV3IE1hcmdpbih0KTpEZWJ1ZyYmVS5lKHQsTWFyZ2luLEdyYXBoT2JqZWN0LFwibWFyZ2luXCIpO2NvbnN0IGk9dGhpcy50bDtpLmVxdWFscyh0KXx8KHQ9dC5OKCksdGhpcy50bD10LHRoaXMudSgpLHRoaXMudChcIm1hcmdpblwiLGksdCkpfWdldCBGKCl7cmV0dXJuIHRoaXMuZWIoKT09PSEwJiZ0aGlzLiQxKCksdGhpcy5fcn1nZXQgVXMoKXtyZXR1cm4gdGhpcy5TMCgpPT09ITAmJnRoaXMuJDEoKSx0aGlzLmRofXRyaWdnZXIodCxpLGUpe2xldCBzPW51bGw7cmV0dXJuIHR5cGVvZiB0PT1cInN0cmluZ1wiP3M9bmV3IEFuaW1hdGlvblRyaWdnZXIodCxpLGUpOnM9dCxzLk5lPXRoaXMsdGhpcy5Ncz09PW51bGwmJih0aGlzLk1zPW5ldyBHTWFwKSx0aGlzLk1zLnNldChzLnByb3BlcnR5TmFtZSxzKSx0aGlzfWdldCBNcygpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5NczpudWxsfXNldCBNcyh0KXt0aGlzLk1zIT09dCYmKHRoaXMuSnQoKS5Ncz10KX1nZXQga3IoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIua3I6MH1zZXQga3IodCl7dGhpcy5rciE9PXQmJih0aGlzLkp0KCkua3I9dCl9Z2V0IGFsaWdubWVudCgpe3JldHVybiB0aGlzLnVpfXNldCBhbGlnbm1lbnQodCl7Y29uc3QgaT10aGlzLmFsaWdubWVudDtpLmVxdWFscyh0KXx8KERlYnVnJiZVLmUodCxTcG90LEdyYXBoT2JqZWN0LFwiYWxpZ25tZW50XCIpLHQuaXNOb1Nwb3QoKSYmIXQuaXNEZWZhdWx0KCkmJlUubihcIkdyYXBoT2JqZWN0LmFsaWdubWVudCBmb3IgXCIrdGhpcytcIiBtdXN0IGJlIGEgcmVhbCBTcG90IG9yIFNwb3QuRGVmYXVsdCwgbm90OiBcIit0KSx0PXQuTigpLHRoaXMudWk9dCx0aGlzLmhjKCksdGhpcy50KFwiYWxpZ25tZW50XCIsaSx0KSl9Z2V0IGNvbHVtbigpe3JldHVybiB0aGlzLlFyfXNldCBjb2x1bW4odCl7RGVidWcmJlUucih0LEdyYXBoT2JqZWN0LFwiY29sdW1uXCIpLHQ9TWF0aC5yb3VuZCh0KTtjb25zdCBpPXRoaXMuY29sdW1uO2khPT10JiYodDwwJiZVLlUodCxcIj49IDBcIixHcmFwaE9iamVjdCxcImNvbHVtblwiKSx0aGlzLlFyPXQsdGhpcy51KCksdGhpcy50KFwiY29sdW1uXCIsaSx0KSx0aGlzLnN2ZyE9PW51bGwmJnRoaXMuc3ZnLnJlbW92ZSgpKX1nZXQgY29sdW1uU3Bhbigpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5FMDoxfXNldCBjb2x1bW5TcGFuKHQpe0RlYnVnJiZVLmkodCxcIm51bWJlclwiLEdyYXBoT2JqZWN0LFwiY29sdW1uU3BhblwiKSx0PU1hdGgucm91bmQodCk7Y29uc3QgaT10aGlzLmNvbHVtblNwYW47aSE9PXQmJih0PDEmJlUuVSh0LFwiPj0gMVwiLEdyYXBoT2JqZWN0LFwiY29sdW1uU3BhblwiKSx0aGlzLkp0KCkuRTA9dCx0aGlzLnUoKSx0aGlzLnQoXCJjb2x1bW5TcGFuXCIsaSx0KSl9Z2V0IHJvdygpe3JldHVybiB0aGlzLncwfXNldCByb3codCl7RGVidWcmJlUucih0LEdyYXBoT2JqZWN0LFwicm93XCIpLHQ9TWF0aC5yb3VuZCh0KTtjb25zdCBpPXRoaXMucm93O2khPT10JiYodDwwJiZVLlUodCxcIj49IDBcIixHcmFwaE9iamVjdCxcInJvd1wiKSx0aGlzLncwPXQsdGhpcy51KCksdGhpcy50KFwicm93XCIsaSx0KSx0aGlzLnN2ZyE9PW51bGwmJnRoaXMuc3ZnLnJlbW92ZSgpKX1nZXQgcm93U3Bhbigpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5CMDoxfXNldCByb3dTcGFuKHQpe0RlYnVnJiZVLmkodCxcIm51bWJlclwiLEdyYXBoT2JqZWN0LFwicm93U3BhblwiKSx0PU1hdGgucm91bmQodCk7Y29uc3QgaT10aGlzLnJvd1NwYW47aSE9PXQmJih0PDEmJlUuVSh0LFwiPj0gMVwiLEdyYXBoT2JqZWN0LFwicm93U3BhblwiKSx0aGlzLkp0KCkuQjA9dCx0aGlzLnUoKSx0aGlzLnQoXCJyb3dTcGFuXCIsaSx0KSl9Z2V0IHNwYW5BbGxvY2F0aW9uKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLlYwOm51bGx9c2V0IHNwYW5BbGxvY2F0aW9uKHQpe2NvbnN0IGk9dGhpcy5zcGFuQWxsb2NhdGlvbjtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxHcmFwaE9iamVjdCxcInNwYW5BbGxvY2F0aW9uXCIpLHRoaXMuSnQoKS5WMD10LHRoaXMudSgpLHRoaXMudChcInNwYW5BbGxvY2F0aW9uXCIsaSx0KSl9Z2V0IGFsaWdubWVudEZvY3VzKCl7cmV0dXJuIHRoaXMuUXV9c2V0IGFsaWdubWVudEZvY3VzKHQpe2NvbnN0IGk9dGhpcy5hbGlnbm1lbnRGb2N1cztpLmVxdWFscyh0KXx8KERlYnVnJiZVLmUodCxTcG90LEdyYXBoT2JqZWN0LFwiYWxpZ25tZW50Rm9jdXNcIiksRGVidWcmJnQuaXNOb1Nwb3QoKSYmIXQuaXNEZWZhdWx0KCkmJiEodC5pc05vbmUoKSYmdGhpcyBpbnN0YW5jZW9mIE5vZGUpJiZVLm4oXCJHcmFwaE9iamVjdC5hbGlnbm1lbnRGb2N1cyBtdXN0IGJlIGEgcmVhbCBTcG90IG9yIFNwb3QuRGVmYXVsdCwgbm90OiBcIit0KSx0PXQuTigpLHRoaXMuUXU9dCx0aGlzLnUoKSx0aGlzLnQoXCJhbGlnbm1lbnRGb2N1c1wiLGksdCkpfWdldCBwb3J0SWQoKXtyZXR1cm4gdGhpcy55MH1zZXQgcG9ydElkKHQpe2NvbnN0IGk9dGhpcy5wb3J0SWQ7aWYoaSE9PXQpe0RlYnVnJiZ0IT09bnVsbCYmVS5pKHQsXCJzdHJpbmdcIixHcmFwaE9iamVjdCxcInBvcnRJZFwiKTtjb25zdCBlPXRoaXMucGFydDtlIT09bnVsbCYmIShlIGluc3RhbmNlb2YgTm9kZSkmJlUubihcIkNhbm5vdCBzZXQgcG9ydElEIG9uIGEgTGluazogXCIrdCk7Y29uc3Qgcz1lO2khPT1udWxsJiZzIT09bnVsbCYmcy5JUCh0aGlzKSx0aGlzLnkwPXQsdCE9PW51bGwmJnMhPT1udWxsJiYocy55bj0hMCxzLklMKHRoaXMpKSx0aGlzLnQoXCJwb3J0SWRcIixpLHQpfX1EYSgpe2NvbnN0IHQ9dGhpcy5wYXJ0O2lmKHQgaW5zdGFuY2VvZiBOb2RlJiYodGhpcy5wb3J0SWQhPT1udWxsfHx0aGlzPT09dC5wb3J0KSl7Y29uc3QgaT10LmRpYWdyYW07aSE9PW51bGwmJiFpLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcmJnQuQ0wodGhpcyl9fVJMKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dD09PW51bGx8fHQudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZ3x8KHRoaXMgaW5zdGFuY2VvZiBQYW5lbD90aGlzIGluc3RhbmNlb2YgTm9kZT90aGlzLmludmFsaWRhdGVDb25uZWN0ZWRMaW5rcygpOnRoaXMud2Fsa1Zpc3VhbFRyZWVGcm9tKHRoaXMsaT0+e2kuRGEoKX0pOnRoaXMuRGEoKSl9Z2V0IHRvU3BvdCgpe3JldHVybiB0aGlzLnl0IT09bnVsbD90aGlzLnl0LlNhOlNwb3QuTm9uZX1zZXQgdG9TcG90KHQpe2NvbnN0IGk9dGhpcy50b1Nwb3Q7aS5lcXVhbHModCl8fChEZWJ1ZyYmVS5lKHQsU3BvdCxHcmFwaE9iamVjdCxcInRvU3BvdFwiKSx0PXQuTigpLHRoaXMuR2UoKS5TYT10LHRoaXMudChcInRvU3BvdFwiLGksdCksdGhpcy5EYSgpKX1nZXQgdG9FbmRTZWdtZW50TGVuZ3RoKCl7cmV0dXJuIHRoaXMueXQhPT1udWxsP3RoaXMueXQuUGE6MTB9c2V0IHRvRW5kU2VnbWVudExlbmd0aCh0KXtjb25zdCBpPXRoaXMudG9FbmRTZWdtZW50TGVuZ3RoO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsR3JhcGhPYmplY3QsXCJ0b0VuZFNlZ21lbnRMZW5ndGhcIiksdDwwJiZVLlUodCxcIj49IDBcIixHcmFwaE9iamVjdCxcInRvRW5kU2VnbWVudExlbmd0aFwiKSx0aGlzLkdlKCkuUGE9dCx0aGlzLnQoXCJ0b0VuZFNlZ21lbnRMZW5ndGhcIixpLHQpLHRoaXMuRGEoKSl9Z2V0IHRvU2hvcnRMZW5ndGgoKXtyZXR1cm4gdGhpcy55dCE9PW51bGw/dGhpcy55dC5DYTowfXNldCB0b1Nob3J0TGVuZ3RoKHQpe2NvbnN0IGk9dGhpcy50b1Nob3J0TGVuZ3RoO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsR3JhcGhPYmplY3QsXCJ0b1Nob3J0TGVuZ3RoXCIpLHRoaXMuR2UoKS5DYT10LHRoaXMudChcInRvU2hvcnRMZW5ndGhcIixpLHQpLHRoaXMuRGEoKSl9Z2V0IHRvTGlua2FibGUoKXtyZXR1cm4gdGhpcy55dCE9PW51bGw/dGhpcy55dC56MDpudWxsfXNldCB0b0xpbmthYmxlKHQpe2NvbnN0IGk9dGhpcy50b0xpbmthYmxlO2khPT10JiYoRGVidWcmJnQhPT1udWxsJiZVLmkodCxcImJvb2xlYW5cIixHcmFwaE9iamVjdCxcInRvTGlua2FibGVcIiksdGhpcy5HZSgpLnowPXQsdGhpcy50KFwidG9MaW5rYWJsZVwiLGksdCkpfWdldCB0b01heExpbmtzKCl7cmV0dXJuIHRoaXMueXQhPT1udWxsP3RoaXMueXQuWDA6MS8wfXNldCB0b01heExpbmtzKHQpe2NvbnN0IGk9dGhpcy50b01heExpbmtzO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsR3JhcGhPYmplY3QsXCJ0b01heExpbmtzXCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsR3JhcGhPYmplY3QsXCJ0b01heExpbmtzXCIpLHRoaXMuR2UoKS5YMD10LHRoaXMudChcInRvTWF4TGlua3NcIixpLHQpKX1nZXQgZnJvbVNwb3QoKXtyZXR1cm4gdGhpcy55dCE9PW51bGw/dGhpcy55dC5rYTpTcG90Lk5vbmV9c2V0IGZyb21TcG90KHQpe2NvbnN0IGk9dGhpcy5mcm9tU3BvdDtpLmVxdWFscyh0KXx8KERlYnVnJiZVLmUodCxTcG90LEdyYXBoT2JqZWN0LFwiZnJvbVNwb3RcIiksdD10Lk4oKSx0aGlzLkdlKCkua2E9dCx0aGlzLnQoXCJmcm9tU3BvdFwiLGksdCksdGhpcy5EYSgpKX1nZXQgZnJvbUVuZFNlZ21lbnRMZW5ndGgoKXtyZXR1cm4gdGhpcy55dCE9PW51bGw/dGhpcy55dC5NYToxMH1zZXQgZnJvbUVuZFNlZ21lbnRMZW5ndGgodCl7Y29uc3QgaT10aGlzLmZyb21FbmRTZWdtZW50TGVuZ3RoO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsR3JhcGhPYmplY3QsXCJmcm9tRW5kU2VnbWVudExlbmd0aFwiKSx0PDAmJlUuVSh0LFwiPj0gMFwiLEdyYXBoT2JqZWN0LFwiZnJvbUVuZFNlZ21lbnRMZW5ndGhcIiksdGhpcy5HZSgpLk1hPXQsdGhpcy50KFwiZnJvbUVuZFNlZ21lbnRMZW5ndGhcIixpLHQpLHRoaXMuRGEoKSl9Z2V0IGZyb21TaG9ydExlbmd0aCgpe3JldHVybiB0aGlzLnl0IT09bnVsbD90aGlzLnl0Lk5hOjB9c2V0IGZyb21TaG9ydExlbmd0aCh0KXtjb25zdCBpPXRoaXMuZnJvbVNob3J0TGVuZ3RoO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsR3JhcGhPYmplY3QsXCJmcm9tU2hvcnRMZW5ndGhcIiksdGhpcy5HZSgpLk5hPXQsdGhpcy50KFwiZnJvbVNob3J0TGVuZ3RoXCIsaSx0KSx0aGlzLkRhKCkpfWdldCBmcm9tTGlua2FibGUoKXtyZXR1cm4gdGhpcy55dCE9PW51bGw/dGhpcy55dC5ZMDpudWxsfXNldCBmcm9tTGlua2FibGUodCl7Y29uc3QgaT10aGlzLmZyb21MaW5rYWJsZTtpIT09dCYmKERlYnVnJiZ0IT09bnVsbCYmVS5pKHQsXCJib29sZWFuXCIsR3JhcGhPYmplY3QsXCJmcm9tTGlua2FibGVcIiksdGhpcy5HZSgpLlkwPXQsdGhpcy50KFwiZnJvbUxpbmthYmxlXCIsaSx0KSl9Z2V0IGZyb21NYXhMaW5rcygpe3JldHVybiB0aGlzLnl0IT09bnVsbD90aGlzLnl0LkswOjEvMH1zZXQgZnJvbU1heExpbmtzKHQpe2NvbnN0IGk9dGhpcy5mcm9tTWF4TGlua3M7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJudW1iZXJcIixHcmFwaE9iamVjdCxcImZyb21NYXhMaW5rc1wiKSx0PDAmJlUuVSh0LFwiPj0gMFwiLEdyYXBoT2JqZWN0LFwiZnJvbU1heExpbmtzXCIpLHRoaXMuR2UoKS5LMD10LHRoaXMudChcImZyb21NYXhMaW5rc1wiLGksdCkpfWdldCBjdXJzb3IoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuTGw6XCJcIn1zZXQgY3Vyc29yKHQpe2NvbnN0IGk9dGhpcy5jdXJzb3I7aSE9PXQmJihVLmkodCxcInN0cmluZ1wiLEdyYXBoT2JqZWN0LFwiY3Vyc29yXCIpLHRoaXMuSnQoKS5MbD10LHRoaXMudChcImN1cnNvclwiLGksdCkpfWdldCBjbGljaygpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5ScjpudWxsfXNldCBjbGljayh0KXtjb25zdCBpPXRoaXMuY2xpY2s7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJjbGlja1wiKSx0aGlzLkp0KCkuUnI9dCx0aGlzLnQoXCJjbGlja1wiLGksdCkpfWdldCBkb3VibGVDbGljaygpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5JcjpudWxsfXNldCBkb3VibGVDbGljayh0KXtjb25zdCBpPXRoaXMuZG91YmxlQ2xpY2s7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJkb3VibGVDbGlja1wiKSx0aGlzLkp0KCkuSXI9dCx0aGlzLnQoXCJkb3VibGVDbGlja1wiLGksdCkpfWdldCBjb250ZXh0Q2xpY2soKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuT3I6bnVsbH1zZXQgY29udGV4dENsaWNrKHQpe2NvbnN0IGk9dGhpcy5jb250ZXh0Q2xpY2s7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJjb250ZXh0Q2xpY2tcIiksdGhpcy5KdCgpLk9yPXQsdGhpcy50KFwiY29udGV4dENsaWNrXCIsaSx0KSl9Z2V0IG1vdXNlRW50ZXIoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuWHI6bnVsbH1zZXQgbW91c2VFbnRlcih0KXtjb25zdCBpPXRoaXMubW91c2VFbnRlcjtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxHcmFwaE9iamVjdCxcIm1vdXNlRW50ZXJcIiksdGhpcy5KdCgpLlhyPXQsdGhpcy50KFwibW91c2VFbnRlclwiLGksdCkpfWdldCBtb3VzZUxlYXZlKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLllyOm51bGx9c2V0IG1vdXNlTGVhdmUodCl7Y29uc3QgaT10aGlzLm1vdXNlTGVhdmU7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJtb3VzZUxlYXZlXCIpLHRoaXMuSnQoKS5Zcj10LHRoaXMudChcIm1vdXNlTGVhdmVcIixpLHQpKX1nZXQgbW91c2VPdmVyKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLkVyOm51bGx9c2V0IG1vdXNlT3Zlcih0KXtjb25zdCBpPXRoaXMubW91c2VPdmVyO2khPT10JiYodCE9PW51bGwmJlUuUCh0LEdyYXBoT2JqZWN0LFwibW91c2VPdmVyXCIpLHRoaXMuSnQoKS5Fcj10LHRoaXMudChcIm1vdXNlT3ZlclwiLGksdCkpfWdldCBtb3VzZUhvdmVyKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLkJyOm51bGx9c2V0IG1vdXNlSG92ZXIodCl7Y29uc3QgaT10aGlzLm1vdXNlSG92ZXI7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJtb3VzZUhvdmVyXCIpLHRoaXMuSnQoKS5Ccj10LHRoaXMudChcIm1vdXNlSG92ZXJcIixpLHQpKX1nZXQgbW91c2VIb2xkKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLlZyOm51bGx9c2V0IG1vdXNlSG9sZCh0KXtjb25zdCBpPXRoaXMubW91c2VIb2xkO2khPT10JiYodCE9PW51bGwmJlUuUCh0LEdyYXBoT2JqZWN0LFwibW91c2VIb2xkXCIpLHRoaXMuSnQoKS5Wcj10LHRoaXMudChcIm1vdXNlSG9sZFwiLGksdCkpfWdldCBtb3VzZURyYWdFbnRlcigpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5VMDpudWxsfXNldCBtb3VzZURyYWdFbnRlcih0KXtjb25zdCBpPXRoaXMubW91c2VEcmFnRW50ZXI7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJtb3VzZURyYWdFbnRlclwiKSx0aGlzLkp0KCkuVTA9dCx0aGlzLnQoXCJtb3VzZURyYWdFbnRlclwiLGksdCkpfWdldCBtb3VzZURyYWdMZWF2ZSgpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5HMDpudWxsfXNldCBtb3VzZURyYWdMZWF2ZSh0KXtjb25zdCBpPXRoaXMubW91c2VEcmFnTGVhdmU7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJtb3VzZURyYWdMZWF2ZVwiKSx0aGlzLkp0KCkuRzA9dCx0aGlzLnQoXCJtb3VzZURyYWdMZWF2ZVwiLGksdCkpfWdldCBtb3VzZURyb3AoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuenI6bnVsbH1zZXQgbW91c2VEcm9wKHQpe2NvbnN0IGk9dGhpcy5tb3VzZURyb3A7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJtb3VzZURyb3BcIiksdGhpcy5KdCgpLnpyPXQsdGhpcy50KFwibW91c2VEcm9wXCIsaSx0KSl9Z2V0IGFjdGlvbkRvd24oKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuSDA6bnVsbH1zZXQgYWN0aW9uRG93bih0KXtjb25zdCBpPXRoaXMuYWN0aW9uRG93bjtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxHcmFwaE9iamVjdCxcImFjdGlvbkRvd25cIiksdGhpcy5KdCgpLkgwPXQsdGhpcy50KFwiYWN0aW9uRG93blwiLGksdCkpfWdldCBhY3Rpb25Nb3ZlKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLnEwOm51bGx9c2V0IGFjdGlvbk1vdmUodCl7Y29uc3QgaT10aGlzLmFjdGlvbk1vdmU7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JhcGhPYmplY3QsXCJhY3Rpb25Nb3ZlXCIpLHRoaXMuSnQoKS5xMD10LHRoaXMudChcImFjdGlvbk1vdmVcIixpLHQpKX1nZXQgYWN0aW9uVXAoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuVzA6bnVsbH1zZXQgYWN0aW9uVXAodCl7Y29uc3QgaT10aGlzLmFjdGlvblVwO2khPT10JiYodCE9PW51bGwmJlUuUCh0LEdyYXBoT2JqZWN0LFwiYWN0aW9uVXBcIiksdGhpcy5KdCgpLlcwPXQsdGhpcy50KFwiYWN0aW9uVXBcIixpLHQpKX1nZXQgYWN0aW9uQ2FuY2VsKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLmowOm51bGx9c2V0IGFjdGlvbkNhbmNlbCh0KXtjb25zdCBpPXRoaXMuYWN0aW9uQ2FuY2VsO2khPT10JiYodCE9PW51bGwmJlUuUCh0LEdyYXBoT2JqZWN0LFwiYWN0aW9uQ2FuY2VsXCIpLHRoaXMuSnQoKS5qMD10LHRoaXMudChcImFjdGlvbkNhbmNlbFwiLGksdCkpfWdldCB0b29sVGlwKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLktyOm51bGx9c2V0IHRvb2xUaXAodCl7Y29uc3QgaT10aGlzLnRvb2xUaXA7aSE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJiEodCBpbnN0YW5jZW9mIEFkb3JubWVudHx8dCBpbnN0YW5jZW9mIEhUTUxJbmZvKSYmVS5uKFwiR3JhcGhPYmplY3QudG9vbFRpcCBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksdGhpcy5KdCgpLktyPXQsdGhpcy50KFwidG9vbFRpcFwiLGksdCkpfWdldCBjb250ZXh0TWVudSgpe3JldHVybiB0aGlzLmIhPT1udWxsP3RoaXMuYi5VcjpudWxsfXNldCBjb250ZXh0TWVudSh0KXtjb25zdCBpPXRoaXMuY29udGV4dE1lbnU7aSE9PXQmJihEZWJ1ZyYmISh0IGluc3RhbmNlb2YgQWRvcm5tZW50fHx0IGluc3RhbmNlb2YgSFRNTEluZm8pJiZVLm4oXCJHcmFwaE9iamVjdC5jb250ZXh0TWVudSBtdXN0IGJlIGFuIEFkb3JubWVudCBvciBIVE1MSW5mby5cIiksdGhpcy5KdCgpLlVyPXQsdGhpcy50KFwiY29udGV4dE1lbnVcIixpLHQpKX1maW5kQmluZGluZ1BhbmVsKCl7bGV0IHQ9dGhpcyBpbnN0YW5jZW9mIFBhbmVsP3RoaXM6dGhpcy5wYW5lbDtmb3IoO3QhPT1udWxsOyl7aWYodC5PUCgpKXJldHVybiB0O3Q9dC5wYW5lbH1yZXR1cm4gbnVsbH1iaW5kKHQsaSxlLHMpe3JldHVybiB0aGlzLmFjKHQsaSxlLHMpLHRoaXN9YmluZFR3b1dheSh0LGksZSxzKXtyZXR1cm4gdGhpcy5hYyh0LGksZSxzKS5tYWtlVHdvV2F5KCksdGhpc31iaW5kTW9kZWwodCxpLGUscyl7cmV0dXJuIHRoaXMuYWModCxpLGUscykub2ZNb2RlbCgpLHRoaXN9YmluZE9iamVjdCh0LGksZSxzLG4pe3JldHVybiB0aGlzLmFjKHQsaSxlLHMpLm9mT2JqZWN0KG4pLHRoaXN9dGhlbWUodCxpLGUscyxuKXtyZXR1cm4gdGhpcy5iaCh0LGksZSxzLG4pLHRoaXN9dGhlbWVEYXRhKHQsaSxlLHMsbil7cmV0dXJuIHRoaXMuYmgodCxpLGUscyxuKS5vZkRhdGEoKSx0aGlzfXRoZW1lT2JqZWN0KHQsaSxlLHMsbixvKXtyZXR1cm4gdGhpcy5iaCh0LGksZSxzLG4pLm9mT2JqZWN0KG8pLHRoaXN9dGhlbWVNb2RlbCh0LGksZSxzLG4pe3JldHVybiB0aGlzLmJoKHQsaSxlLHMsbikub2ZNb2RlbCgpLHRoaXN9YWModCxpLGUscyl7bGV0IG49bnVsbDtyZXR1cm4gdHlwZW9mIHQ9PVwic3RyaW5nXCI/bj1uZXcgQmluZGluZyh0LGksZSxzKTpuPXQsdGhpcy52MChuKSxufWJoKHQsaSxlLHMsbil7bGV0IG89bnVsbDtyZXR1cm4gdHlwZW9mIHQ9PVwic3RyaW5nXCI/bz1uZXcgVGhlbWVCaW5kaW5nKHQsaSxlLHMsbik6bz10LHRoaXMudjAobyksb312MCh0KXt0Lk5lPXRoaXM7Y29uc3QgaT10aGlzLmZpbmRCaW5kaW5nUGFuZWwoKTtpIT09bnVsbCYmaS5PTCgpJiZVLm4oXCJDYW5ub3QgYWRkIGEgQmluZGluZyB0byBhIHRlbXBsYXRlIHRoYXQgaGFzIGFscmVhZHkgYmVlbiBjb3BpZWQ6IFwiK3QpLHRoaXMuRmk9PT1udWxsJiYodGhpcy5GaT1uZXcgTGlzdCksdGhpcy5GaS5hZGQodCl9c2V0KHQpe2lmKERlYnVnKWZvcihjb25zdCBpIGluIHQpKGkuc3RhcnRzV2l0aChcIl9cIil8fGkuaW5kZXhPZihcIi5cIikhPT0tMSkmJlUubihcIlByb3BlcnR5IHdpdGggdW5kZXJzY29yZSBvciBwZXJpb2QgcGFzc2VkIHRvIEdyYXBoT2JqZWN0LnNldC4gRGlkIHlvdSBtZWFuIHRvIHVzZSBHcmFwaE9iamVjdC5hdHRhY2g/XCIpO3JldHVybiBPYmplY3QuYXNzaWduKHRoaXMsdCksdGhpc31hdHRhY2godCl7cmV0dXJuIEdyYXBoT2JqZWN0LkVQKHRoaXMsdCksdGhpc31hcHBseSh0KXtyZXR1cm4gdCh0aGlzKSx0aGlzfXNldFByb3BlcnRpZXModCl7cmV0dXJuIERpYWdyYW0uZjAodGhpcyx0KSx0aGlzfXN0YXRpYyBtYWtlKHQsLi4uaSl7bGV0IGU9YXJndW1lbnRzLHM9bnVsbCxuPW51bGw7aWYoVS5ydCh0KSluPXQ7ZWxzZSBpZih0eXBlb2YgdD09XCJzdHJpbmdcIil7Y29uc3Qgcj1HcmFwaE9iamVjdC5zYi5nZXQodCk7VS5ydChyKT8oZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKSxzPXIoZSksVS5XKHMpfHxVLm4oJ0dyYXBoT2JqZWN0Lm1ha2UgaW52b2tlZCBvYmplY3QgYnVpbGRlciBcIicrdCsnXCIsIGJ1dCBpdCBkaWQgbm90IHJldHVybiBhbiBPYmplY3QnKSk6bj1yb290LmdvW3RdfXM9PT1udWxsJiYoKG49PW51bGx8fCFuLmNvbnN0cnVjdG9yKSYmVS5uKFwiR3JhcGhPYmplY3QubWFrZSByZXF1aXJlcyBhIGNsYXNzIGZ1bmN0aW9uIG9yIEdvSlMgY2xhc3MgbmFtZSBvciBuYW1lIG9mIGFuIG9iamVjdCBidWlsZGVyLCBub3Q6IFwiK3QpLHM9bmV3IG4pO2xldCBvPTE7aWYocyBpbnN0YW5jZW9mIERpYWdyYW0mJmUubGVuZ3RoPjEpe2NvbnN0IHI9cyxsPWVbMV07KHR5cGVvZiBsPT1cInN0cmluZ1wifHxsIGluc3RhbmNlb2YgSFRNTERpdkVsZW1lbnQpJiYoci5YMihsKSxvKyspfWZvcihsZXQgcj1vO3I8ZS5sZW5ndGg7cisrKXtjb25zdCBsPWVbcl07bD09PXZvaWQgMD9VLm4oXCJVbmRlZmluZWQgdmFsdWUgYXQgYXJndW1lbnQgXCIrcitcIiBmb3Igb2JqZWN0IGJlaW5nIGNvbnN0cnVjdGVkIGJ5IEdyYXBoT2JqZWN0Lm1ha2U6IFwiK3MpOkdyYXBoT2JqZWN0LkVQKHMsbCl9cmV0dXJuIHN9c3RhdGljIEVQKHQsaSl7aWYodHlwZW9mIGk9PVwibnVtYmVyXCIpR3JhcGhPYmplY3QuaEkodCxpKTtlbHNlIGlmKHR5cGVvZiBpPT1cInN0cmluZ1wiKUdyYXBoT2JqZWN0LmFJKHQsaSk7ZWxzZSBpZihpIGluc3RhbmNlb2YgR3JhcGhPYmplY3QpdCBpbnN0YW5jZW9mIFBhbmVsfHxVLm4oXCJBIEdyYXBoT2JqZWN0IGNhbiBvbmx5IGJlIGFkZGVkIHRvIGEgUGFuZWwsIG5vdCB0bzogXCIrdCksdC5hZGQoaSk7ZWxzZSBpZihpIGluc3RhbmNlb2YgUm93Q29sdW1uRGVmaW5pdGlvbil7bGV0IGU7aS5pc1JvdyYmVS5ydCh0LmdldFJvd0RlZmluaXRpb24pP2U9dC5nZXRSb3dEZWZpbml0aW9uKGkuaW5kZXgpOiFpLmlzUm93JiZVLnJ0KHQuZ2V0Q29sdW1uRGVmaW5pdGlvbikmJihlPXQuZ2V0Q29sdW1uRGVmaW5pdGlvbihpLmluZGV4KSksZSBpbnN0YW5jZW9mIFJvd0NvbHVtbkRlZmluaXRpb24/ZS5uYihpKTpVLm4oXCJBIFJvd0NvbHVtbkRlZmluaXRpb24gY2FuIG9ubHkgYmUgYWRkZWQgdG8gYW4gb2JqZWN0IHRoYXQgaW1wbGVtZW50cyBnZXRSb3dEZWZpbml0aW9uL2dldENvbHVtbkRlZmluaXRpb24sIG5vdCB0bzogXCIrdCl9ZWxzZSBpZihpIGluc3RhbmNlb2YgUGFuZWxMYXlvdXQpe2NvbnN0IGU9dDtlLnR5cGU9aX1lbHNlIGlmKGkgaW5zdGFuY2VvZiBCaW5kaW5nKXQgaW5zdGFuY2VvZiBHcmFwaE9iamVjdHx8dCBpbnN0YW5jZW9mIFJvd0NvbHVtbkRlZmluaXRpb24/dC5iaW5kKGkpOlUubihcIkEgQmluZGluZyBjYW4gb25seSBiZSBhcHBsaWVkIHRvIGEgR3JhcGhPYmplY3Qgb3IgUm93Q29sdW1uRGVmaW5pdGlvbiwgbm90IHRvOiBcIit0KTtlbHNlIGlmKGkgaW5zdGFuY2VvZiBBbmltYXRpb25UcmlnZ2VyKXQgaW5zdGFuY2VvZiBHcmFwaE9iamVjdD90LnRyaWdnZXIoaSk6VS5uKFwiQW4gQW5pbWF0aW9uVHJpZ2dlciBjYW4gb25seSBiZSBhcHBsaWVkIHRvIGEgR3JhcGhPYmplY3QsIG5vdCB0bzogXCIrdCk7ZWxzZSBpZihpIGluc3RhbmNlb2YgUGF0aEZpZ3VyZSl0IGluc3RhbmNlb2YgR2VvbWV0cnkmJnQudHlwZT09PTQ/dC5maWd1cmVzLmFkZChpKTpVLm4oXCJBIFBhdGhGaWd1cmUgY2FuIG9ubHkgYmUgYWRkZWQgdG8gYSBQYXRoIEdlb21ldHJ5LCBub3QgdG86IFwiK3QpO2Vsc2UgaWYoaSBpbnN0YW5jZW9mIFBhdGhTZWdtZW50KXQgaW5zdGFuY2VvZiBQYXRoRmlndXJlP3Quc2VnbWVudHMuYWRkKGkpOlUubihcIkEgUGF0aFNlZ21lbnQgY2FuIG9ubHkgYmUgYWRkZWQgdG8gYSBQYXRoRmlndXJlLCBub3QgdG86IFwiK3QpO2Vsc2UgaWYoaSBpbnN0YW5jZW9mIExheW91dCl0IGluc3RhbmNlb2YgRGlhZ3JhbXx8dCBpbnN0YW5jZW9mIEdyb3VwP3QubGF5b3V0PWk6VS5uKFwiQSBMYXlvdXQgY2FuIG9ubHkgYmUgYXNzaWduZWQgdG8gYSBEaWFncmFtIG9yIGEgR3JvdXAsIG5vdCB0bzogXCIrdCk7ZWxzZSBpZihBcnJheS5pc0FycmF5KGkpKWZvcihsZXQgZT0wO2U8aS5sZW5ndGg7ZSsrKXtjb25zdCBzPWlbZV07R3JhcGhPYmplY3QuRVAodCxzKX1lbHNlIFUuVyhpKT9HcmFwaE9iamVjdC5mSSh0LGkpOlUubignVW5rbm93biBpbml0aWFsaXplciBcIicraSsnXCIgZm9yIG9iamVjdCBiZWluZyBjb25zdHJ1Y3RlZCBieSBHcmFwaE9iamVjdC5tYWtlOiAnK3QpfXN0YXRpYyBhSSh0LGkpe2lmKHQgaW5zdGFuY2VvZiBUZXh0QmxvY2spdC50ZXh0PWk7ZWxzZSBpZih0IGluc3RhbmNlb2YgU2hhcGUpdC5maWd1cmU9aTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBQaWN0dXJlKXQuc291cmNlPWk7ZWxzZSBpZih0IGluc3RhbmNlb2YgUGFuZWwpe2NvbnN0IGU9UGFuZWxMYXlvdXQubHMuZ2V0KGkpO2UhPT1udWxsP3QudHlwZT1lOkRlYnVnJiZVLm4oXCJVbmtub3duIFBhbmVsIHR5cGUgYXMgYW4gYXJndW1lbnQgdG8gR3JhcGhPYmplY3QubWFrZTogXCIraStcIi4gSWYgYnVpbGRpbmcgZnJvbSBzb3VyY2UsIHlvdSBtYXkgbmVlZCB0byBjYWxsIFBhbmVsLmRlZmluZVBhbmVsTGF5b3V0LlwiKX1lbHNlIGlmKHQgaW5zdGFuY2VvZiBCcnVzaCl7Y29uc3QgZT1VLlVoKEJydXNoVHlwZSxpKTtlIT09bnVsbD90LnR5cGU9ZTpVLm4oXCJVbmtub3duIEJydXNoIHR5cGUgYXMgYW4gYXJndW1lbnQgdG8gR3JhcGhPYmplY3QubWFrZTogXCIraSl9ZWxzZSBpZih0IGluc3RhbmNlb2YgR2VvbWV0cnkpe2NvbnN0IGU9VS5VaChHZW9tZXRyeVR5cGUsaSk7ZSE9PW51bGw/dC50eXBlPWU6RGVidWcmJlUubihcIlVua25vd24gR2VvbWV0cnkgdHlwZSBhcyBhbiBhcmd1bWVudCB0byBHcmFwaE9iamVjdC5tYWtlOiBcIitpKX1lbHNlIGlmKHQgaW5zdGFuY2VvZiBQYXRoU2VnbWVudCl7Y29uc3QgZT1VLlVoKFNlZ21lbnRUeXBlLGkpO2UhPT1udWxsP3QudHlwZT1lOkRlYnVnJiZVLm4oXCJVbmtub3duIFBhdGhTZWdtZW50IHR5cGUgYXMgYW4gYXJndW1lbnQgdG8gR3JhcGhPYmplY3QubWFrZTogXCIraSl9ZWxzZSBEZWJ1ZyYmVS5uKFwiVW5hYmxlIHRvIHVzZSBhIHN0cmluZyBhcyBhbiBhcmd1bWVudCB0byBHcmFwaE9iamVjdC5tYWtlOiBcIitpKX1zdGF0aWMgaEkodCxpKXtVLnJ0KHQuYWkpP3QuYWkoaSk6VS5ocih0LGkpfXN0YXRpYyBmSSh0LGkpe2lmKHQgaW5zdGFuY2VvZiBCcnVzaCl7Y29uc3QgZT1uZXcgUHJvcGVydHlDb2xsZWN0aW9uO2Zvcihjb25zdCBzIGluIGkpe2NvbnN0IG49cGFyc2VGbG9hdChzKTtpc05hTihuKT9lW3NdPWlbc106dC5hZGRDb2xvclN0b3AobixpW3NdKX1EaWFncmFtLmYwKHQsZSl9ZWxzZSBpZih0IGluc3RhbmNlb2YgUm93Q29sdW1uRGVmaW5pdGlvbil7aWYoaS5yb3chPT12b2lkIDApe2NvbnN0IHM9aS5yb3c7KHM9PW51bGx8fHM9PT0xLzB8fGlzTmFOKHMpfHxzPDApJiZVLm4oXCJNdXN0IHNwZWNpZnkgbm9uLW5lZ2F0aXZlIGludGVnZXIgcm93IGZvciBSb3dDb2x1bW5EZWZpbml0aW9uIFwiK2krXCIsIG5vdDogXCIrcyksdC5pc1Jvdz0hMCx0LmluZGV4PXN9ZWxzZSBpZihpLmNvbHVtbiE9PXZvaWQgMCl7Y29uc3Qgcz1pLmNvbHVtbjsocz09bnVsbHx8cz09PTEvMHx8aXNOYU4ocyl8fHM8MCkmJlUubihcIk11c3Qgc3BlY2lmeSBub24tbmVnYXRpdmUgaW50ZWdlciBjb2x1bW4gZm9yIFJvd0NvbHVtbkRlZmluaXRpb24gXCIraStcIiwgbm90OiBcIitzKSx0LmlzUm93PSExLHQuaW5kZXg9c31jb25zdCBlPW5ldyBQcm9wZXJ0eUNvbGxlY3Rpb247Zm9yKGNvbnN0IHMgaW4gaSlzPT09XCJyb3dcInx8cz09PVwiY29sdW1uXCJ8fChlW3NdPWlbc10pO0RpYWdyYW0uZjAodCxlKX1lbHNlIERpYWdyYW0uZjAodCxpKX1zdGF0aWMgYnVpbGQodCxpLC4uLmUpe2NvbnN0IHM9R3JhcGhPYmplY3Quc2IuZ2V0KHQpO2lmKFUucnQocykpe2NvbnN0IG49cyhbdF0uY29uY2F0KGUpKTtpZihuIGluc3RhbmNlb2YgR3JhcGhPYmplY3QpcmV0dXJuIGkmJm4uc2V0UHJvcGVydGllcyhpKSxufVUubignR3JhcGhPYmplY3QuYnVpbGQgaW52b2tlZCBvYmplY3QgYnVpbGRlciBcIicrdCsnXCIsIGJ1dCBpdCBkaWQgbm90IHJldHVybiBhbiBPYmplY3QnKX1zdGF0aWMgZGVmaW5lQnVpbGRlcih0LGkpe1UuaSh0LFwic3RyaW5nXCIsR3JhcGhPYmplY3QsXCJkZWZpbmVCdWlsZGVyOm5hbWVcIiksVS5QKGksR3JhcGhPYmplY3QsXCJkZWZpbmVCdWlsZGVyOmZ1bmNcIik7Y29uc3QgZT10LnRvTG93ZXJDYXNlKCk7RGVidWcmJih0PT09XCJcInx8ZT09PVwibm9uZVwifHx0PT09ZSkmJlUubihcIlNoYXBlLmRlZmluZUZpZ3VyZUdlbmVyYXRvciBuYW1lIG11c3Qgbm90IGJlIGVtcHR5IG9yIE5vbmUgb3IgYWxsLWxvd2VyLWNhc2U6IFwiK3QpLEdyYXBoT2JqZWN0LnNiLnNldCh0LGkpfXN0YXRpYyBpc0J1aWxkZXJEZWZpbmVkKHQpe3JldHVybiBHcmFwaE9iamVjdC5zYi5oYXModCl9c3RhdGljIHRha2VCdWlsZGVyQXJndW1lbnQodCxpLGUpe2U9PT12b2lkIDAmJihlPW51bGwpO2NvbnN0IHM9dFsxXTtyZXR1cm4oVS5ydChlKT9lKHMpOnR5cGVvZiBzPT1cInN0cmluZ1wiKT8odC5zcGxpY2UoMSwxKSxzKTooaT09PXZvaWQgMCYmVS5uKFwibm8gXCIrKFUucnQoZSk/XCJzYXRpc2ZhY3RvcnlcIjpcInN0cmluZ1wiKStcIiBhcmd1bWVudCBmb3IgR3JhcGhPYmplY3QgYnVpbGRlciBcIit0WzBdKSxpKX1zdGF0aWMgc2I9bmV3IEdNYXB9R3JhcGhPYmplY3QuVmVydGljYWw9NCxHcmFwaE9iamVjdC5Ib3Jpem9udGFsPTUsR3JhcGhPYmplY3QuZGVmaW5lQnVpbGRlcihcIkJ1dHRvblwiLHk9Pntjb25zdCB0PVwiI2Y1ZjVmNVwiLGk9XCIjNzM3MzczXCIsZT1cIiNkNGQ0ZDRcIixzPVwiIzczNzM3M1wiLG49XCIjYTNhM2EzXCIsbz0yLjc2MTQyMzc0OTE1Mzk3LHI9Mi43NjE0MjM3NDkxNTM5NjksbD1uZXcgUGFuZWwoUGFuZWwuQXV0byx7aXNBY3Rpb25hYmxlOiEwLGVuYWJsZWRDaGFuZ2VkOihoLGYpPT57aWYoaCBpbnN0YW5jZW9mIFBhbmVsKXtjb25zdCBhPWguZmluZE9iamVjdChcIkJ1dHRvbkJvcmRlclwiKTtpZihhIT09bnVsbClpZihoLl9idXR0b25GaWxsTm9ybWFsPT09dm9pZCAwJiYoaC5fYnV0dG9uRmlsbE5vcm1hbD1hLmZpbGwpLGYpe2xldCBjPW51bGw7aC5sYXllciE9PW51bGwmJmguZGlhZ3JhbSE9PW51bGwmJmguaXNWaXNpYmxlT2JqZWN0KCkmJihjPWgubGF5ZXIuZmluZE9iamVjdEF0KGguZGlhZ3JhbS5sYXN0SW5wdXQuZG9jdW1lbnRQb2ludCkpLGM9PT1ofHxjIT09bnVsbCYmYy5pc0NvbnRhaW5lZEJ5KGgpP2EuZmlsbD1oLl9idXR0b25GaWxsT3ZlcjphLmZpbGw9aC5fYnV0dG9uRmlsbE5vcm1hbH1lbHNlIGEuZmlsbD1oLl9idXR0b25GaWxsRGlzYWJsZWR9fSxjdXJzb3I6XCJwb2ludGVyXCJ9KS5hdHRhY2goe19idXR0b25GaWxsTm9ybWFsOnZvaWQgMCxfYnV0dG9uU3Ryb2tlTm9ybWFsOnZvaWQgMCxfYnV0dG9uRmlsbE92ZXI6ZSxfYnV0dG9uU3Ryb2tlT3ZlcjpzLF9idXR0b25GaWxsRGlzYWJsZWQ6bn0pLmFkZChuZXcgU2hhcGUoXCJSb3VuZGVkUmVjdGFuZ2xlXCIse25hbWU6XCJCdXR0b25Cb3JkZXJcIixzcG90MTpuZXcgU3BvdCgwLDAsbyxyKSxzcG90MjpuZXcgU3BvdCgxLDEsLW8sLXIpLHBhcmFtZXRlcjE6MixmaWxsOnQsc3Ryb2tlOml9KSk7cmV0dXJuIGwubW91c2VFbnRlcj0oaCxmLGEpPT57aWYoIWYuaXNFbmFibGVkT2JqZWN0KCl8fCEoZiBpbnN0YW5jZW9mIFBhbmVsKSlyZXR1cm47Y29uc3QgYz1mLmZpbmRPYmplY3QoXCJCdXR0b25Cb3JkZXJcIik7YyBpbnN0YW5jZW9mIFNoYXBlJiYoZi5fYnV0dG9uRmlsbE5vcm1hbD09PXZvaWQgMCYmKGYuX2J1dHRvbkZpbGxOb3JtYWw9Yy5maWxsKSxjLmZpbGw9Zi5fYnV0dG9uRmlsbE92ZXIsZi5fYnV0dG9uU3Ryb2tlTm9ybWFsPT09dm9pZCAwJiYoZi5fYnV0dG9uU3Ryb2tlTm9ybWFsPWMuc3Ryb2tlKSxjLnN0cm9rZT1mLl9idXR0b25TdHJva2VPdmVyKX0sbC5tb3VzZUxlYXZlPShoLGYsYSk9PntpZighZi5pc0VuYWJsZWRPYmplY3QoKXx8IShmIGluc3RhbmNlb2YgUGFuZWwpKXJldHVybjtjb25zdCBjPWYuZmluZE9iamVjdChcIkJ1dHRvbkJvcmRlclwiKTtjIGluc3RhbmNlb2YgU2hhcGUmJihmLl9idXR0b25GaWxsTm9ybWFsIT09dm9pZCAwJiYoYy5maWxsPWYuX2J1dHRvbkZpbGxOb3JtYWwpLGYuX2J1dHRvblN0cm9rZU5vcm1hbCE9PXZvaWQgMCYmKGMuc3Ryb2tlPWYuX2J1dHRvblN0cm9rZU5vcm1hbCkpfSxsfSksR3JhcGhPYmplY3QuZGVmaW5lQnVpbGRlcihcIlRyZWVFeHBhbmRlckJ1dHRvblwiLHk9Pntjb25zdCB0PUdyYXBoT2JqZWN0LmJ1aWxkKFwiQnV0dG9uXCIpO3JldHVybiB0LmF0dGFjaCh7X3RyZWVFeHBhbmRlZEZpZ3VyZTpcIk1pbnVzTGluZVwiLF90cmVlQ29sbGFwc2VkRmlndXJlOlwiUGx1c0xpbmVcIix2aXNpYmxlOiExfSksdC5hZGQobmV3IFNoYXBlKFwiTWludXNMaW5lXCIse25hbWU6XCJCdXR0b25JY29uXCIsc3Ryb2tlOlwiIzBhMGEwYVwiLHN0cm9rZVdpZHRoOjIsZGVzaXJlZFNpemU6U2l6ZS5mdX0pLmJpbmRPYmplY3QoXCJmaWd1cmVcIixcImlzVHJlZUV4cGFuZGVkXCIsKGksZSk9Pntjb25zdCBzPWUucGFuZWw7cmV0dXJuIGk/cy5fdHJlZUV4cGFuZGVkRmlndXJlOnMuX3RyZWVDb2xsYXBzZWRGaWd1cmV9KSksdC5iaW5kT2JqZWN0KFwidmlzaWJsZVwiLFwiaXNUcmVlTGVhZlwiLGk9PiFpKSx0LmNsaWNrPShpLGUpPT57bGV0IHM9ZS5wYXJ0O2lmKHMgaW5zdGFuY2VvZiBBZG9ybm1lbnQmJihzPXMuYWRvcm5lZFBhcnQpLCEocyBpbnN0YW5jZW9mIE5vZGUpKXJldHVybjtjb25zdCBuPXMuZGlhZ3JhbTtpZihuPT09bnVsbClyZXR1cm47Y29uc3Qgbz1uLmNvbW1hbmRIYW5kbGVyO2lmKHMuaXNUcmVlRXhwYW5kZWQpe2lmKCFvLmNhbkNvbGxhcHNlVHJlZShzKSlyZXR1cm59ZWxzZSBpZighby5jYW5FeHBhbmRUcmVlKHMpKXJldHVybjtpLmhhbmRsZWQ9ITAscy5pc1RyZWVFeHBhbmRlZD9vLmNvbGxhcHNlVHJlZShzKTpvLmV4cGFuZFRyZWUocyl9LHR9KSxHcmFwaE9iamVjdC5kZWZpbmVCdWlsZGVyKFwiU3ViR3JhcGhFeHBhbmRlckJ1dHRvblwiLHk9Pntjb25zdCB0PUdyYXBoT2JqZWN0LmJ1aWxkKFwiQnV0dG9uXCIpO3JldHVybiB0LmF0dGFjaCh7X3N1YkdyYXBoRXhwYW5kZWRGaWd1cmU6XCJNaW51c0xpbmVcIixfc3ViR3JhcGhDb2xsYXBzZWRGaWd1cmU6XCJQbHVzTGluZVwifSksdC5hZGQobmV3IFNoYXBlKFwiTWludXNMaW5lXCIse25hbWU6XCJCdXR0b25JY29uXCIsc3Ryb2tlOlwiIzBhMGEwYVwiLHN0cm9rZVdpZHRoOjIsZGVzaXJlZFNpemU6U2l6ZS5mdX0pLmJpbmRPYmplY3QoXCJmaWd1cmVcIixcImlzU3ViR3JhcGhFeHBhbmRlZFwiLChpLGUpPT57Y29uc3Qgcz1lLnBhbmVsO3JldHVybiBpP3MuX3N1YkdyYXBoRXhwYW5kZWRGaWd1cmU6cy5fc3ViR3JhcGhDb2xsYXBzZWRGaWd1cmV9KSksdC5jbGljaz0oaSxlKT0+e2xldCBzPWUucGFydDtpZihzIGluc3RhbmNlb2YgQWRvcm5tZW50JiYocz1zLmFkb3JuZWRQYXJ0KSwhKHMgaW5zdGFuY2VvZiBHcm91cCkpcmV0dXJuO2NvbnN0IG49cy5kaWFncmFtO2lmKG49PT1udWxsKXJldHVybjtjb25zdCBvPW4uY29tbWFuZEhhbmRsZXI7aWYocy5pc1N1YkdyYXBoRXhwYW5kZWQpe2lmKCFvLmNhbkNvbGxhcHNlU3ViR3JhcGgocykpcmV0dXJufWVsc2UgaWYoIW8uY2FuRXhwYW5kU3ViR3JhcGgocykpcmV0dXJuO2kuaGFuZGxlZD0hMCxzLmlzU3ViR3JhcGhFeHBhbmRlZD9vLmNvbGxhcHNlU3ViR3JhcGgocyk6by5leHBhbmRTdWJHcmFwaChzKX0sdH0pLEdyYXBoT2JqZWN0LmRlZmluZUJ1aWxkZXIoXCJUb29sVGlwXCIseT0+bmV3IEFkb3JubWVudChQYW5lbC5BdXRvLHtpc1NoYWRvd2VkOiEwLHNoYWRvd0NvbG9yOlwicmdiYSgwLCAwLCAwLCAuNClcIixzaGFkb3dPZmZzZXQ6bmV3IFBvaW50KDAsMil9KS5hZGQobmV3IFNoYXBlKFwiUm91bmRlZFJlY3RhbmdsZVwiLHtuYW1lOlwiQm9yZGVyXCIscGFyYW1ldGVyMToxLGZpbGw6XCIjZjVmNWY1XCIsc3Ryb2tlV2lkdGg6MCxzcG90MTpuZXcgU3BvdCgwLDAsNCw2KSxzcG90MjpuZXcgU3BvdCgxLDEsLTQsLTQpfSkpKSxHcmFwaE9iamVjdC5kZWZpbmVCdWlsZGVyKFwiQ29udGV4dE1lbnVcIix5PT5uZXcgQWRvcm5tZW50KFBhbmVsLlZlcnRpY2FsLHtiYWNrZ3JvdW5kOlwiI2Y1ZjVmNVwiLGlzU2hhZG93ZWQ6ITAsc2hhZG93Q29sb3I6XCJyZ2JhKDAsIDAsIDAsIC40KVwiLHNoYWRvd09mZnNldDpuZXcgUG9pbnQoMCwyKX0pLmJpbmRPYmplY3QoXCJiYWNrZ3JvdW5kXCIsXCJcIix0PT50LmFkb3JuZWRQYXJ0IT09bnVsbCYmdC5oYXNQbGFjZWhvbGRlcigpP251bGw6XCIjZjVmNWY1XCIpKSxHcmFwaE9iamVjdC5kZWZpbmVCdWlsZGVyKFwiQ29udGV4dE1lbnVCdXR0b25cIix5PT57Y29uc3QgdD1HcmFwaE9iamVjdC5idWlsZChcIkJ1dHRvblwiKTt0LnN0cmV0Y2g9NTtjb25zdCBpPXQuZmluZE9iamVjdChcIkJ1dHRvbkJvcmRlclwiKTtyZXR1cm4gaSBpbnN0YW5jZW9mIFNoYXBlJiYoaS5maWd1cmU9XCJSZWN0YW5nbGVcIixpLnN0cm9rZVdpZHRoPTAsaS5zcG90MT1uZXcgU3BvdCgwLDAsNCw2KSxpLnNwb3QyPW5ldyBTcG90KDEsMSwtNCwtNCkpLHR9KSxHcmFwaE9iamVjdC5kZWZpbmVCdWlsZGVyKFwiUGFuZWxFeHBhbmRlckJ1dHRvblwiLHk9Pntjb25zdCB0PUdyYXBoT2JqZWN0LnRha2VCdWlsZGVyQXJndW1lbnQoeSxcIkNPTExBUFNJQkxFXCIpLGk9R3JhcGhPYmplY3QuYnVpbGQoXCJCdXR0b25cIik7aS5hdHRhY2goe19idXR0b25FeHBhbmRlZEZpZ3VyZTpcIk0wIDAgTTAgNiBMNCAyIDggNiBNOCA4XCIsX2J1dHRvbkNvbGxhcHNlZEZpZ3VyZTpcIk0wIDAgTTAgMiBMNCA2IDggMiBNOCA4XCIsXCJCdXR0b25Cb3JkZXIuZmlsbFwiOlwicmdiYSgwLCAwLCAwLCAwKVwiLF9idXR0b25GaWxsTm9ybWFsOlwicmdiYSgwLCAwLCAwLCAwKVwiLFwiQnV0dG9uQm9yZGVyLnN0cm9rZVwiOm51bGwsX2J1dHRvblN0cm9rZU5vcm1hbDpudWxsLF9idXR0b25GaWxsT3ZlcjpcInJnYmEoMCwgMCwgMCwgLjIpXCIsX2J1dHRvblN0cm9rZU92ZXI6bnVsbH0pLGkuYWRkKG5ldyBTaGFwZSh7bmFtZTpcIkJ1dHRvbkljb25cIixzdHJva2VXaWR0aDoyfSkuYmluZE9iamVjdChcImdlb21ldHJ5U3RyaW5nXCIsXCJ2aXNpYmxlXCIscz0+cz9pLl9idXR0b25FeHBhbmRlZEZpZ3VyZTppLl9idXR0b25Db2xsYXBzZWRGaWd1cmUsdm9pZCAwLHQpKTtjb25zdCBlPWkuZmluZE9iamVjdChcIkJ1dHRvbkJvcmRlclwiKTtyZXR1cm4gZSBpbnN0YW5jZW9mIFNoYXBlJiYoZS5zdHJva2U9bnVsbCxlLmZpbGw9XCJyZ2JhKDAsIDAsIDAsIDApXCIpLGkuY2xpY2s9KHMsbik9PntpZighKG4gaW5zdGFuY2VvZiBQYW5lbCkpcmV0dXJuO2NvbnN0IG89bi5kaWFncmFtO2lmKG89PT1udWxsfHxvLmlzUmVhZE9ubHkpcmV0dXJuO2xldCByPW4uZmluZEJpbmRpbmdQYW5lbCgpO2lmKHI9PT1udWxsJiYocj1uLnBhcnQpLHIhPT1udWxsKXtjb25zdCBsPXIuZmluZE9iamVjdCh0KTtsIT09bnVsbCYmKHMuaGFuZGxlZD0hMCxvLnN0YXJ0VHJhbnNhY3Rpb24oXCJDb2xsYXBzZS9FeHBhbmQgUGFuZWxcIiksbC52aXNpYmxlPSFsLnZpc2libGUsby5jb21taXRUcmFuc2FjdGlvbihcIkNvbGxhcHNlL0V4cGFuZCBQYW5lbFwiKSl9fSxpfSksR3JhcGhPYmplY3QuZGVmaW5lQnVpbGRlcihcIkNoZWNrQm94QnV0dG9uXCIseT0+e2NvbnN0IHQ9R3JhcGhPYmplY3QudGFrZUJ1aWxkZXJBcmd1bWVudCh5KSxpPUdyYXBoT2JqZWN0LmJ1aWxkKFwiQnV0dG9uXCIse2Rlc2lyZWRTaXplOm5ldyBTaXplKDE0LDE0KX0pO2kuYXR0YWNoKHtcIkJ1dHRvbkJvcmRlci5zcG90MVwiOm5ldyBTcG90KDAsMCwxLDEpLFwiQnV0dG9uQm9yZGVyLnNwb3QyXCI6bmV3IFNwb3QoMSwxLC0xLC0xKX0pO2NvbnN0IGU9bmV3IFNoYXBlKHtuYW1lOlwiQnV0dG9uSWNvblwiLGdlb21ldHJ5U3RyaW5nOlwiTTAgMCBNMCA4Ljg1IEw0LjkgMTMuNzUgMTYuMiAyLjQ1IE0xNi4yIDE2LjJcIixzdHJva2VXaWR0aDoyLHN0cmV0Y2g6MixnZW9tZXRyeVN0cmV0Y2g6Nix2aXNpYmxlOiExfSk7cmV0dXJuIHQhPT1cIlwiJiZlLmJpbmRUd29XYXkoXCJ2aXNpYmxlXCIsdCksaS5hZGQoZSksaS5jbGljaz0ocyxuKT0+e2lmKCEobiBpbnN0YW5jZW9mIFBhbmVsKSlyZXR1cm47Y29uc3Qgbz1zLmRpYWdyYW07aWYobz09PW51bGx8fG8uaXNSZWFkT25seXx8dCE9PVwiXCImJm8ubW9kZWwuaXNSZWFkT25seSlyZXR1cm47cy5oYW5kbGVkPSEwO2NvbnN0IHI9bi5maW5kT2JqZWN0KFwiQnV0dG9uSWNvblwiKTtvLnN0YXJ0VHJhbnNhY3Rpb24oXCJjaGVja2JveFwiKSxyIT09bnVsbCYmKHIudmlzaWJsZT0hci52aXNpYmxlKSxVLnJ0KG4uX2RvQ2xpY2spJiZuLl9kb0NsaWNrKHMsbiksby5jb21taXRUcmFuc2FjdGlvbihcImNoZWNrYm94XCIpfSxpfSksR3JhcGhPYmplY3QuZGVmaW5lQnVpbGRlcihcIkNoZWNrQm94XCIseT0+e2NvbnN0IHQ9R3JhcGhPYmplY3QudGFrZUJ1aWxkZXJBcmd1bWVudCh5KSxpPUdyYXBoT2JqZWN0LmJ1aWxkKFwiQ2hlY2tCb3hCdXR0b25cIix7bmFtZTpcIkJ1dHRvblwiLGlzQWN0aW9uYWJsZTohMSxtYXJnaW46bmV3IE1hcmdpbigwLDEsMCwwKX0sdCksZT1uZXcgUGFuZWwoXCJIb3Jpem9udGFsXCIse2lzQWN0aW9uYWJsZTohMCxjdXJzb3I6aS5jdXJzb3IsbWFyZ2luOm5ldyBNYXJnaW4oMSksbW91c2VFbnRlcjppLm1vdXNlRW50ZXIsbW91c2VMZWF2ZTppLm1vdXNlTGVhdmUsY2xpY2s6aS5jbGlja30pLmF0dGFjaCh7X2J1dHRvbkZpbGxOb3JtYWw6aS5fYnV0dG9uRmlsbE5vcm1hbCxfYnV0dG9uU3Ryb2tlTm9ybWFsOmkuX2J1dHRvblN0cm9rZU5vcm1hbCxfYnV0dG9uRmlsbE92ZXI6aS5fYnV0dG9uRmlsbE92ZXIsX2J1dHRvblN0cm9rZU92ZXI6aS5fYnV0dG9uU3Ryb2tlT3ZlcixfYnV0dG9uRmlsbERpc2FibGVkOmkuX2J1dHRvbkZpbGxEaXNhYmxlZCxfYnV0dG9uQ2xpY2s6aS5jbGlja30pO3JldHVybiBlLmFkZChpKSxpLm1vdXNlRW50ZXI9bnVsbCxpLm1vdXNlTGVhdmU9bnVsbCxpLmNsaWNrPW51bGwsZX0pO2NsYXNzIEdyYXBoT2JqZWN0VGVtcGxhdGVTZXR0aW5nc3ttaTtMdDtabjtGaTtRbjtqcztMbDtScjtJcjtPcjtYcjtZcjtFcjtCcjtWcjtVMDtHMDt6cjtIMDtxMDtXMDtqMDtLcjtVcjtMMDtWMDtNcztTcjtNcjtpbztCMDtFMDtrcjtDMDtKMDskMDtjb25zdHJ1Y3Rvcigpe3RoaXMubWk9ITEsdGhpcy5MdD1cIlwiLHRoaXMuWm49LTEsdGhpcy5GaT1udWxsLHRoaXMuUW49bnVsbCx0aGlzLmpzPW51bGwsdGhpcy5MbD1cIlwiLHRoaXMuUnI9bnVsbCx0aGlzLklyPW51bGwsdGhpcy5Pcj1udWxsLHRoaXMuWHI9bnVsbCx0aGlzLllyPW51bGwsdGhpcy5Fcj1udWxsLHRoaXMuQnI9bnVsbCx0aGlzLlZyPW51bGwsdGhpcy5VMD1udWxsLHRoaXMuRzA9bnVsbCx0aGlzLnpyPW51bGwsdGhpcy5IMD1udWxsLHRoaXMucTA9bnVsbCx0aGlzLlcwPW51bGwsdGhpcy5qMD1udWxsLHRoaXMuS3I9bnVsbCx0aGlzLlVyPW51bGwsdGhpcy5MMD1udWxsLHRoaXMuVjA9bnVsbCx0aGlzLk1zPW51bGwsdGhpcy5Tcj1TaXplLkdoLHRoaXMuTXI9U2l6ZS5Ndyx0aGlzLmlvPTEsdGhpcy5CMD0xLHRoaXMuRTA9MSx0aGlzLmtyPTAsdGhpcy5DMD1udWxsLHRoaXMuSjA9bnVsbCx0aGlzLiQwPVwiY2F0ZWdvcnlcIn1jb3B5KCl7Y29uc3QgdD1uZXcgR3JhcGhPYmplY3RUZW1wbGF0ZVNldHRpbmdzO3JldHVybiB0Lkx0PXRoaXMuTHQsdC5abj10aGlzLlpuLHQuRmk9dGhpcy5GaSx0LmpzPXRoaXMuanMsdC5MbD10aGlzLkxsLHQuUnI9dGhpcy5Scix0LklyPXRoaXMuSXIsdC5Pcj10aGlzLk9yLHQuWHI9dGhpcy5Ycix0LllyPXRoaXMuWXIsdC5Fcj10aGlzLkVyLHQuQnI9dGhpcy5Ccix0LlZyPXRoaXMuVnIsdC5VMD10aGlzLlUwLHQuRzA9dGhpcy5HMCx0LnpyPXRoaXMuenIsdC5IMD10aGlzLkgwLHQucTA9dGhpcy5xMCx0LlcwPXRoaXMuVzAsdC5qMD10aGlzLmowLHQuS3I9dGhpcy5Lcix0LlVyPXRoaXMuVXIsdC5MMD10aGlzLkwwLHQuVjA9dGhpcy5WMCx0Lk1zPXRoaXMuTXMsdC5Tcj10aGlzLlNyLk4oKSx0Lk1yPXRoaXMuTXIuTigpLHQuaW89dGhpcy5pbyx0LkIwPXRoaXMuQjAsdC5FMD10aGlzLkUwLHQua3I9dGhpcy5rcix0LkMwPXRoaXMuQzAsdC5KMD10aGlzLkowLHQuJDA9dGhpcy4kMCx0fX1jbGFzcyBTVHJhbnNmb3Jte207Y29uc3RydWN0b3IoKXt0aGlzLm09WzEsMCwwLDEsMCwwXX1jb3B5KCl7Y29uc3QgdD1uZXcgU1RyYW5zZm9ybTtyZXR1cm4gdC5tWzBdPXRoaXMubVswXSx0Lm1bMV09dGhpcy5tWzFdLHQubVsyXT10aGlzLm1bMl0sdC5tWzNdPXRoaXMubVszXSx0Lm1bNF09dGhpcy5tWzRdLHQubVs1XT10aGlzLm1bNV0sdH10cmFuc2xhdGUodCxpKXt0aGlzLm1bNF0rPXRoaXMubVswXSp0K3RoaXMubVsyXSppLHRoaXMubVs1XSs9dGhpcy5tWzFdKnQrdGhpcy5tWzNdKml9c2NhbGUodCxpKXt0aGlzLm1bMF0qPXQsdGhpcy5tWzFdKj10LHRoaXMubVsyXSo9aSx0aGlzLm1bM10qPWl9cm90YXRlKHQsaSxlKXtpZih0Pj0zNjA/dC09MzYwOnQ8MCYmKHQrPTM2MCksdD09PTApcmV0dXJuO3RoaXMudHJhbnNsYXRlKGksZSk7bGV0IHM9MCxuPTA7aWYodD09PTkwKXM9MCxuPTE7ZWxzZSBpZih0PT09MTgwKXM9LTEsbj0wO2Vsc2UgaWYodD09PTI3MClzPTAsbj0tMTtlbHNle2NvbnN0IGY9dCpNYXRoLlBJLzE4MDtzPU1hdGguY29zKGYpLG49TWF0aC5zaW4oZil9Y29uc3Qgbz10aGlzLm1bMF0qcyt0aGlzLm1bMl0qbixyPXRoaXMubVsxXSpzK3RoaXMubVszXSpuLGw9dGhpcy5tWzBdKi1uK3RoaXMubVsyXSpzLGg9dGhpcy5tWzFdKi1uK3RoaXMubVszXSpzO3RoaXMubVswXT1vLHRoaXMubVsxXT1yLHRoaXMubVsyXT1sLHRoaXMubVszXT1oLHRoaXMudHJhbnNsYXRlKC1pLC1lKX19Y2xhc3MgU0dyYWRpZW50e3R5cGU7eDE7eTE7cjE7eDI7eTI7cjI7Y29sb3JzO3BhdHRlcm47Y29uc3RydWN0b3IodCl7dGhpcy50eXBlPXQsdGhpcy54MT0wLHRoaXMueTE9MCx0aGlzLnIxPTAsdGhpcy54Mj0wLHRoaXMueTI9MCx0aGlzLnIyPTAsdGhpcy5jb2xvcnM9W10sdGhpcy5wYXR0ZXJuPW51bGx9YWRkQ29sb3JTdG9wKHQsaSl7dGhpcy5jb2xvcnMucHVzaCh7b2Zmc2V0OnQsY29sb3I6aX0pfX1jbGFzcyBTVkdTdXJmYWNle0V0O2NpO1pyOyR1O0JQO2NvbnN0cnVjdG9yKHQsaSxlKXtjb25zdCBzPWk9PT12b2lkIDA/cm9vdC5kb2N1bWVudDppO3RoaXMuWnI9cyx0aGlzLkJQPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjb25zdCBuPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cIjtzIT09dm9pZCAwJiYodGhpcy5FdD10aGlzLm1ha2VFbGVtZW50KFwic3ZnXCIse3dpZHRoOlwiMXB4XCIsaGVpZ2h0OlwiMXB4XCIsdmlld0JveDpcIjAgMCAxIDFcIn0pLHRoaXMuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsdGhpcy5zdHlsZS5sZXR0ZXJTcGFjaW5nPVwibm9ybWFsXCIsdGhpcy5zdHlsZS53b3JkU3BhY2luZz1cIm5vcm1hbFwiLGV8fCh0aGlzLnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIiksdGhpcy5FdC5zZXRBdHRyaWJ1dGVOUyhuLFwieG1sbnNcIix0aGlzLkJQKSx0aGlzLkV0LnNldEF0dHJpYnV0ZU5TKG4sXCJ4bWxuczp4bGlua1wiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKSksdGhpcy4kdT1udWxsLHRoaXMuY2k9bmV3IFNWR0NvbnRleHQodGhpcyxlKX1yZXNpemUodCxpLGUscyl7cmV0dXJuIHRoaXMud2lkdGghPT10fHx0aGlzLmhlaWdodCE9PWk/KHRoaXMud2lkdGg9dCx0aGlzLmhlaWdodD1pLHRoaXMuc3R5bGUud2lkdGg9ZStcInB4XCIsdGhpcy5zdHlsZS5oZWlnaHQ9cytcInB4XCIsdGhpcy5FdC5zZXRBdHRyaWJ1dGVOUyhudWxsLFwid2lkdGhcIixlK1wicHhcIiksdGhpcy5FdC5zZXRBdHRyaWJ1dGVOUyhudWxsLFwiaGVpZ2h0XCIscytcInB4XCIpLHRoaXMuRXQuc2V0QXR0cmlidXRlTlMobnVsbCxcInZpZXdCb3hcIixcIjAgMCBcIitlK1wiIFwiK3MpLHRoaXMuY2kuVlAuZmlyc3RFbGVtZW50Q2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCxcIndpZHRoXCIsZStcInB4XCIpLHRoaXMuY2kuVlAuZmlyc3RFbGVtZW50Q2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCxcImhlaWdodFwiLHMrXCJweFwiKSwhMCk6ITF9bWFrZUVsZW1lbnQodCxpLGUpe2NvbnN0IHM9dGhpcy5aci5jcmVhdGVFbGVtZW50TlModGhpcy5CUCx0KTtpZihVLlcoaSkpZm9yKGNvbnN0IG4gaW4gaSlzLnNldEF0dHJpYnV0ZU5TKG49PT1cImhyZWZcIj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIjpcIlwiLG4saVtuXSk7cmV0dXJuIGUhPT12b2lkIDAmJihzLnRleHRDb250ZW50PWUpLHN9Z2V0Qm91bmRpbmdDbGllbnRSZWN0KCl7cmV0dXJuIHRoaXMuRXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCl9Zm9jdXMoKXt0aGlzLkV0LmZvY3VzKCl9Z2V0IHdpZHRoKCl7cmV0dXJuIHRoaXMuRXQud2lkdGguYmFzZVZhbC52YWx1ZX1zZXQgd2lkdGgodCl7dGhpcy5FdC5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLHQrXCJweFwiKX1nZXQgaGVpZ2h0KCl7cmV0dXJuIHRoaXMuRXQuaGVpZ2h0LmJhc2VWYWwudmFsdWV9c2V0IGhlaWdodCh0KXt0aGlzLkV0LnNldEF0dHJpYnV0ZShcImhlaWdodFwiLHQrXCJweFwiKX1kaXNwb3NlKCl7dGhpcy5acj1udWxsfWdldCBzdHlsZSgpe3JldHVybiB0aGlzLkV0LnN0eWxlfX1jbGFzcyBTVkdDb250ZXh0e2ZjO2NjO3duO1JpO3FlO2ZpbGxTdHlsZTtmb250O2dsb2JhbEFscGhhO2xpbmVDYXA7bGluZURhc2hPZmZzZXQ7bGluZUpvaW47bGluZVdpZHRoO21pdGVyTGltaXQ7c2hhZG93Qmx1cjtzaGFkb3dDb2xvcjtzaGFkb3dPZmZzZXRYO3NoYWRvd09mZnNldFk7c3Ryb2tlU3R5bGU7dGV4dEFsaWduO2ltYWdlU21vb3RoaW5nRW5hYmxlZDtjbGlwSW5zdGVhZE9mRmlsbDtsYXN0Q3JlYXRlZEVsZW1lbnQ7dWM7ZGM7c3VyZmFjZTtzdmc7VlA7RUw7b2I7S287a2g7RmE7Y3VycmVudEVsZW1lbnQ7Y2xpcFBhdGhHcm91cDtkaWFncmFtR3JvdXA7bGFzdERyYXduUGFydDtjdXJyZW50UGF0aDtvdXRlckdyb3VwO3BhdGhBdHRyaWJ1dGVzO3NsO0FyO2ZpbHRlcjtwYXJ0Q2xpcFJlY3Q7Y29uc3RydWN0b3IodCxpKXtpZih0aGlzLnN1cmZhY2U9dCx0aGlzLnN2Zz10LkV0LHRoaXMudWM9W10sdGhpcy5kYz1bXSx0aGlzLmZpbGxTdHlsZT1cIiMwMDAwMDBcIix0aGlzLmZvbnQ9XCIxMHB4IHNhbnMtc2VyaWZcIix0aGlzLmdsb2JhbEFscGhhPTEsdGhpcy5saW5lQ2FwPVwiYnV0dFwiLHRoaXMubGluZURhc2hPZmZzZXQ9MCx0aGlzLmxpbmVKb2luPVwibWl0ZXJcIix0aGlzLmxpbmVXaWR0aD0xLHRoaXMubWl0ZXJMaW1pdD0xMCx0aGlzLnNoYWRvd0JsdXI9MCx0aGlzLnNoYWRvd0NvbG9yPVwicmdiYSgwLCAwLCAwLCAwKVwiLHRoaXMuc2hhZG93T2Zmc2V0WD0wLHRoaXMuc2hhZG93T2Zmc2V0WT0wLHRoaXMuc2w9ITEsdGhpcy5zdHJva2VTdHlsZT1cIiMwMDAwMDBcIix0aGlzLnRleHRBbGlnbj1cInN0YXJ0XCIsdGhpcy5jbGlwSW5zdGVhZE9mRmlsbD0hMSx0aGlzLmZjPTAsdGhpcy5jYz0wLHRoaXMud249MCx0aGlzLmxhc3RDcmVhdGVkRWxlbWVudD1udWxsLHRoaXMuY3VycmVudEVsZW1lbnQ9bnVsbCx0aGlzLlJpPVtdLHRoaXMucGF0aEF0dHJpYnV0ZXM9e30sdGhpcy5vYj0hMSx0aGlzLktvPW51bGwsdGhpcy5raD0wLHRoaXMucWU9bmV3IFNUcmFuc2Zvcm0sdC5acj09PW51bGx8fHQuWnI9PT12b2lkIDApcmV0dXJuO3RoaXMuY2xpcFBhdGhHcm91cD10aGlzLm5ld0dyb3VwMigpLHRoaXMuZGlhZ3JhbUdyb3VwPXRoaXMubmV3R3JvdXAyKFwiZ29qcy1kaWFncmFtXCIpLHRoaXMubGFzdERyYXduUGFydD1udWxsLHRoaXMuY3VycmVudFBhdGg9bnVsbDtjb25zdCBlPUdTZXQuU3crKyxzPXRoaXMubWFrZUVsZW1lbnQoXCJjbGlwUGF0aFwiLHtpZDpcIm1haW5DbGlwXCIrZX0pLG49e3g6MCx5OjAsd2lkdGg6dC53aWR0aCxoZWlnaHQ6dC5oZWlnaHR9O3MuYXBwZW5kQ2hpbGQodGhpcy5tYWtlRWxlbWVudChcInJlY3RcIixuKSksdGhpcy5WUD1zLHRoaXMuc3ZnLmFwcGVuZENoaWxkKHRoaXMuY2xpcFBhdGhHcm91cCksdGhpcy5jbGlwUGF0aEdyb3VwLmFwcGVuZENoaWxkKHRoaXMuZGlhZ3JhbUdyb3VwKSx0aGlzLnN2Zy5hcHBlbmRDaGlsZChzKSx0aGlzLmNsaXBQYXRoR3JvdXAuc2V0QXR0cmlidXRlTlMobnVsbCxcImNsaXAtcGF0aFwiLFwidXJsKCNtYWluQ2xpcFwiK2UrXCIpXCIpLHRoaXMuRUw9e30sdGhpcy5Bcj0hIWksdGhpcy5maWx0ZXI9XCJcIix0aGlzLnBhcnRDbGlwUmVjdD1udWxsfXNldERpYWdyYW1Qb3NTY2FsZSh0LGksZSxzLG4sbyl7dGhpcy5kaWFncmFtR3JvdXA9PT12b2lkIDA/dGhpcy5uZXdHcm91cCh0LGksZSxzLG4sbyk6dGhpcy5kaWFncmFtR3JvdXAuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsXCJtYXRyaXgoXCIrdCtcIiwgXCIraStcIiwgXCIrZStcIiwgXCIrcytcIiwgXCIrbitcIiwgXCIrbytcIilcIil9cmVzZXRJbm5lclNWRygpe3RoaXMuZGlhZ3JhbUdyb3VwIT09bnVsbCYmKHRoaXMuZGlhZ3JhbUdyb3VwLmlubmVySFRNTD1cIlwiKX1hcmModCxpLGUscyxuLG8scixsKXtjb25zdCBoPTIqTWF0aC5QSSxmPTFlLTYsYT1oLWYsYz1lKk1hdGguY29zKHMpLHU9ZSpNYXRoLnNpbihzKSxkPXQrYyxtPWkrdSxnPW8/MDoxO2xldCBwPW8/cy1uOm4tczsoTWF0aC5hYnMoci1kKT5mfHxNYXRoLmFicyhsLW0pPmYpJiZ0aGlzLlJpLnB1c2goW1wiTFwiLGQsK21dKSxwPDAmJihwPXAlaCtoKSxwPmE/KHRoaXMuUmkucHVzaChbXCJBXCIsZSxlLDAsMSxnLHQtYyxpLXVdKSx0aGlzLlJpLnB1c2goW1wiQVwiLGUsZSwwLDEsZyxkLG1dKSk6cD5mJiZ0aGlzLlJpLnB1c2goW1wiQVwiLGUsZSwwLCsocD49TWF0aC5QSSksZyx0K2UqTWF0aC5jb3MobiksaStlKk1hdGguc2luKG4pXSl9YmVnaW5QYXRoKCl7dGhpcy5SaT1bXSx0aGlzLnBhdGhBdHRyaWJ1dGVzPXtzdHJva2U6XCJub25lXCIsZmlsbDpcIm5vbmVcIn19ZW5kUGF0aCh0KXt0aGlzLmNJKHRoaXMuUmksdGhpcy5xZSx0fHwwKX1iZXppZXJDdXJ2ZVRvKHQsaSxlLHMsbixvKXt0aGlzLlJpLnB1c2goW1wiQ1wiLHQsaSxlLHMsbixvXSl9Y2xlYXJSZWN0KHQsaSxlLHMpe31jbGlwKCl7dGhpcy5wYXRoQXR0cmlidXRlcy5jbGlwUGF0aD0hMH1jbG9zZVBhdGgoKXt0aGlzLlJpLnB1c2goW1wielwiXSl9Y3JlYXRlTGluZWFyR3JhZGllbnQodCxpLGUscyl7Y29uc3Qgbj1uZXcgU0dyYWRpZW50KFwibGluZWFyXCIpO3JldHVybiBuLngxPXQsbi55MT1pLG4ueDI9ZSxuLnkyPXMsbn1jcmVhdGVQYXR0ZXJuKHQsaSl7bGV0IGU9XCJcIjt0IGluc3RhbmNlb2YgSFRNTENhbnZhc0VsZW1lbnQmJihlPXQudG9EYXRhVVJMKCkpLHQgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50JiYoZT10LmdldEF0dHJpYnV0ZShcInNyY1wiKSk7Y29uc3Qgcz10aGlzLkVMO2lmKHNbZV0pcmV0dXJuXCJ1cmwoI1wiK3NbZV0rXCIpXCI7Y29uc3Qgbj1cIlBBVFRFUk5cIitHU2V0LlN3Kyssbz17d2lkdGg6dC53aWR0aCxoZWlnaHQ6dC5oZWlnaHQsaWQ6bixwYXR0ZXJuVW5pdHM6XCJ1c2VyU3BhY2VPblVzZVwifSxyPXt4OjAseTowLHdpZHRoOnQud2lkdGgsaGVpZ2h0OnQuaGVpZ2h0LGhyZWY6ZX0sbD10aGlzLm1ha2VFbGVtZW50KFwicGF0dGVyblwiLG8pO3JldHVybiBsLmFwcGVuZENoaWxkKHRoaXMubWFrZUVsZW1lbnQoRGlhZ3JhbS5pbWcscikpLHRoaXMuc3ZnLmFwcGVuZENoaWxkKGwpLHNbZV09bixcInVybCgjXCIrbitcIilcIn1jcmVhdGVSYWRpYWxHcmFkaWVudCh0LGksZSxzLG4sbyl7Y29uc3Qgcj1uZXcgU0dyYWRpZW50KFwicmFkaWFsXCIpO3JldHVybiByLngxPXQsci55MT1pLHIucjE9ZSxyLngyPXMsci55Mj1uLHIucjI9byxyfWFtZW5kSW1hZ2VUcmFuc2Zvcm0odCxpLGUscyxuLG8scixsKXtjb25zdCBoPXIvZSxmPWwvczsobiE9PTB8fG8hPT0wKSYmdGhpcy5xZS50cmFuc2xhdGUobixvKSwoaCE9PTF8fGYhPT0xKSYmdGhpcy5xZS5zY2FsZShoLGYpLCh0IT09MHx8aSE9PTApJiZ0aGlzLnFlLnRyYW5zbGF0ZSgtdCwtaSl9ZHJhd0ltYWdlKHQsaSxlLHMsbixvLHIsbCxoKXtsZXQgZj1cIlwiO3QgaW5zdGFuY2VvZiBIVE1MQ2FudmFzRWxlbWVudCYmKGY9dC50b0RhdGFVUkwoKSksdCBpbnN0YW5jZW9mIEhUTUxJbWFnZUVsZW1lbnQmJihmPXQuZ2V0QXR0cmlidXRlKFwic3JjXCIpKTtjb25zdCBhPXQgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50P3QubmF0dXJhbFdpZHRoOnQud2lkdGgsYz10IGluc3RhbmNlb2YgSFRNTEltYWdlRWxlbWVudD90Lm5hdHVyYWxIZWlnaHQ6dC5oZWlnaHQ7cz09PXZvaWQgMCYmKG89aSxyPWUsbD1zPWEsaD1uPWMpLHM9c3x8MCxuPW58fDAsbz1vfHwwLHI9cnx8MCxsPWx8fDAsaD1ofHwwLHRoaXMuYW1lbmRJbWFnZVRyYW5zZm9ybShpLGUscyxuLG8scixsLGgpO2NvbnN0IHU9e3g6MCx5OjAsd2lkdGg6YXx8cyxoZWlnaHQ6Y3x8bixocmVmOmZ9OyFHZW8uRyhzLGwpfHwhR2VvLkcobixoKT91LnByZXNlcnZlQXNwZWN0UmF0aW89XCJub25lXCI6Zi50b0xvd2VyQ2FzZSgpLmluZGV4T2YoXCIuc3ZnXCIpPT09LTEmJmYudG9Mb3dlckNhc2UoKS5pbmRleE9mKFwiZGF0YTppbWFnZS9zdmdcIik9PT0tMSYmKHUucHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIHNsaWNlXCIpLChpIT09MHx8ZSE9PTB8fHMhPT1hfHxuIT09YykmJihzKz1pLG4rPWUsdVtcImNsaXAtcGF0aFwiXT1gcGF0aCgnTSAke2l9LCR7ZX0gTCAke3N9ICR7ZX0gTCAke3N9ICR7bn0gTCAke2l9ICR7bn0geicpYCksdGhpcy5wcm9jZXNzQ29tbW9uKERpYWdyYW0uaW1nLHUsdGhpcy5xZSksdGhpcy5sZChEaWFncmFtLmltZyx1KX1maWxsKHQsaSl7dCYmKHRoaXMucGF0aEF0dHJpYnV0ZXNbXCJmaWxsLXJ1bGVcIl09XCJldmVub2RkXCIpLHRoaXMuc2V0RmlsbCh0aGlzLnBhdGhBdHRyaWJ1dGVzKX1maWxsQ29udGV4dCh0LGksZSl7dGhpcy5jbGlwSW5zdGVhZE9mRmlsbD90aGlzLmNsaXAoKTp0aGlzLmZpbGwoaSxlKX1jcmVhdGVPclVwZGF0ZUNsaXBHcm91cCh0LGkpe2NvbnN0IGU9dGhpcy5uZXdHcm91cCgxLDAsMCwxLC1pLngsLWkueSk7ZS5zZXRBdHRyaWJ1dGVOUyhudWxsLFwiY2xhc3NcIixcInNwb3RDbGlwXCIpLHQuZ2g9ZX1maWxsUmVjdCh0LGksZSxzKXt0aGlzLmFkZFJlY3QoXCJmaWxsXCIsW3QsaSxlLHNdLHRoaXMucWUpfWZpbGxCYWNrZ3JvdW5kKHQsaSxlLHMpe2NvbnN0IG49e3g6dCx5Omksd2lkdGg6ZSxoZWlnaHQ6c307dGhpcy5wcm9jZXNzQ29tbW9uKFwiZmlsbFwiLG4sdGhpcy5xZSksdGhpcy5zZXRGaWxsKG4pLHRoaXMuc3ZnLnByZXBlbmQodGhpcy5tYWtlRWxlbWVudChcInJlY3RcIixuKSl9ZmlsbFRleHQodCxpLGUpe3RoaXMuYWRkVGV4dChcImZpbGxcIixbdCxpLGVdLHRoaXMucWUpfWxpbmVUbyh0LGkpe3RoaXMuUmkucHVzaChbXCJMXCIsdCxpXSl9bW92ZVRvKHQsaSl7dGhpcy5SaS5wdXNoKFtcIk1cIix0LGldKX1xdWFkcmF0aWNDdXJ2ZVRvKHQsaSxlLHMpe3RoaXMuUmkucHVzaChbXCJRXCIsdCxpLGUsc10pfXJlY3QodCxpLGUscyl7dGhpcy5SaS5wdXNoKFtcIk1cIix0LGldLFtcIkxcIix0K2UsaV0sW1wiTFwiLHQrZSxpK3NdLFtcIkxcIix0LGkrc10sW1wielwiXSl9cmVzdG9yZSgpe3RoaXMucWU9dGhpcy51Yy5wb3AoKSx0aGlzLlJpPXRoaXMudWMucG9wKCk7Y29uc3QgdD10aGlzLnVjLnBvcCgpO3RoaXMuZmlsbFN0eWxlPXQuZmlsbFN0eWxlLHRoaXMuZm9udD10LmZvbnQsdGhpcy5nbG9iYWxBbHBoYT10Lmdsb2JhbEFscGhhLHRoaXMubGluZUNhcD10LmxpbmVDYXAsdGhpcy5saW5lRGFzaE9mZnNldD10LmxpbmVEYXNoT2Zmc2V0LHRoaXMubGluZUpvaW49dC5saW5lSm9pbix0aGlzLmxpbmVXaWR0aD10LmxpbmVXaWR0aCx0aGlzLm1pdGVyTGltaXQ9dC5taXRlckxpbWl0LHRoaXMuc2hhZG93Qmx1cj10LnNoYWRvd0JsdXIsdGhpcy5zaGFkb3dDb2xvcj10LnNoYWRvd0NvbG9yLHRoaXMuc2hhZG93T2Zmc2V0WD10LnNoYWRvd09mZnNldFgsdGhpcy5zaGFkb3dPZmZzZXRZPXQuc2hhZG93T2Zmc2V0WSx0aGlzLnN0cm9rZVN0eWxlPXQuc3Ryb2tlU3R5bGUsdGhpcy50ZXh0QWxpZ249dC50ZXh0QWxpZ24sdGhpcy5wYXJ0Q2xpcFJlY3Q9dC5wYXJ0Q2xpcFJlY3R9c2F2ZSgpe2NvbnN0IHQ9e2ZpbGxTdHlsZTp0aGlzLmZpbGxTdHlsZSxmb250OnRoaXMuZm9udCxnbG9iYWxBbHBoYTp0aGlzLmdsb2JhbEFscGhhLGxpbmVDYXA6dGhpcy5saW5lQ2FwLGxpbmVEYXNoT2Zmc2V0OnRoaXMubGluZURhc2hPZmZzZXQsbGluZUpvaW46dGhpcy5saW5lSm9pbixsaW5lV2lkdGg6dGhpcy5saW5lV2lkdGgsbWl0ZXJMaW1pdDp0aGlzLm1pdGVyTGltaXQsc2hhZG93Qmx1cjp0aGlzLnNoYWRvd0JsdXIsc2hhZG93Q29sb3I6dGhpcy5zaGFkb3dDb2xvcixzaGFkb3dPZmZzZXRYOnRoaXMuc2hhZG93T2Zmc2V0WCxzaGFkb3dPZmZzZXRZOnRoaXMuc2hhZG93T2Zmc2V0WSxzdHJva2VTdHlsZTp0aGlzLnN0cm9rZVN0eWxlLHRleHRBbGlnbjp0aGlzLnRleHRBbGlnbixwYXJ0Q2xpcFJlY3Q6dGhpcy5wYXJ0Q2xpcFJlY3R9O3RoaXMudWMucHVzaCh0KTtjb25zdCBpPVtdO2ZvcihsZXQgZT0wO2U8dGhpcy5SaS5sZW5ndGg7ZSsrKWkucHVzaCh0aGlzLlJpW2VdKTt0aGlzLnVjLnB1c2goaSksdGhpcy51Yy5wdXNoKHRoaXMucWUuY29weSgpKX1zZXRUcmFuc2Zvcm0odCxpLGUscyxuLG8pe3Q9PT0xJiZpPT09MCYmZT09PTAmJnM9PT0xJiZuPT09MCYmbz09PTB8fHRoaXMubmV3R3JvdXAodCxpLGUscyxuLG8pfXNldEN1cnJlbnRUcmFuc2Zvcm0odCxpLGUscyxuLG8pe3RoaXMucWUubT1bdCxpLGUscyxuLG9dfWdldEN1cnJlbnRUcmFuc2Zvcm0oKXtjb25zdCB0PXRoaXMucWUubTtyZXR1cm5cIm1hdHJpeChcIit0WzBdK1wiLCBcIit0WzFdK1wiLCBcIit0WzJdK1wiLCBcIit0WzNdK1wiLCBcIit0WzRdK1wiLCBcIit0WzVdK1wiKVwifXNjYWxlKHQsaSl7dGhpcy5xZS5zY2FsZSh0LGkpfXRyYW5zbGF0ZSh0LGkpe3RoaXMucWUudHJhbnNsYXRlKHQsaSl9dHJhbnNmb3JtKHQsaSxlLHMsbixvKXt9Y29tbWl0VHJhbnNmb3JtKCl7fXN0cm9rZSgpe3RoaXMuc2V0U3Ryb2tlKHRoaXMucGF0aEF0dHJpYnV0ZXMpfXN0cm9rZUNvbnRleHQoKXt0aGlzLmNsaXBJbnN0ZWFkT2ZGaWxsfHx0aGlzLnN0cm9rZSgpfXN0cm9rZVJlY3QodCxpLGUscyl7dGhpcy5hZGRSZWN0KFwic3Ryb2tlXCIsW3QsaSxlLHNdLHRoaXMucWUpfW1ha2VFbGVtZW50KHQsaSxlKXtyZXR1cm4gdGhpcy5zdXJmYWNlLm1ha2VFbGVtZW50KHQsaSxlKX1sZCh0LGksZSl7Y29uc3Qgcz10aGlzLm1ha2VFbGVtZW50KHQsaSxlKTtyZXR1cm4gdGhpcy5jdXJyZW50RWxlbWVudCE9PW51bGw/dGhpcy5jdXJyZW50RWxlbWVudC5hcHBlbmRDaGlsZChzKTp0aGlzLmN1cnJlbnRFbGVtZW50PXMsdGhpcy5sYXN0Q3JlYXRlZEVsZW1lbnQ9cyxzfXByb2Nlc3NDb21tb24odCxpLGUpe2lmKHQ9PT1cImZpbGxcIj90aGlzLnNldEZpbGwoaSk6dD09PVwic3Ryb2tlXCImJnRoaXMuc2V0U3Ryb2tlKGkpLGUhPT1udWxsKXtjb25zdCBzPWUubTtpLnRyYW5zZm9ybT1cIm1hdHJpeChcIitzWzBdK1wiLCBcIitzWzFdK1wiLCBcIitzWzJdK1wiLCBcIitzWzNdK1wiLCBcIitzWzRdK1wiLCBcIitzWzVdK1wiKVwifX1zZXRGaWxsKHQpe2lmKHRoaXMuZmlsbFN0eWxlIGluc3RhbmNlb2YgU0dyYWRpZW50KXt0LmZpbGw9dGhpcy5hZGRHcmFkaWVudCh0aGlzLmZpbGxTdHlsZSwhMCk7cmV0dXJufWlmKC9ecmdiYVxcKC8udGVzdCh0aGlzLmZpbGxTdHlsZSkpe2NvbnN0IGU9L15cXHMqcmdiYVxccypcXCgoW14sXFxzXSspXFxzKixcXHMqKFteLFxcc10rKVxccyosXFxzKihbXixcXHNdKylcXHMqLFxccyooW14sXFxzXSspXFwpXFxzKiQvaS5leGVjKHRoaXMuZmlsbFN0eWxlKTt0LmZpbGw9XCJyZ2IoXCIrZVsxXStcIixcIitlWzJdK1wiLFwiK2VbM10rXCIpXCIsdFtcImZpbGwtb3BhY2l0eVwiXT1lWzRdfWVsc2UgdC5maWxsPXRoaXMuZmlsbFN0eWxlfXNldEZpbGxPclN0cm9rZUluUGxhY2UodCxpKXtjb25zdCBlPWk/XCJmaWxsXCI6XCJzdHJva2VcIjtpZih0aGlzLmZpbGxTdHlsZSBpbnN0YW5jZW9mIFNHcmFkaWVudCl7dC5zZXRBdHRyaWJ1dGVOUyhudWxsLFwiZmlsbFwiLHRoaXMuYWRkR3JhZGllbnQodGhpcy5maWxsU3R5bGUsITApKTtyZXR1cm59aWYoL15yZ2JhXFwoLy50ZXN0KHRoaXMuZmlsbFN0eWxlKSl7Y29uc3Qgbj0vXlxccypyZ2JhXFxzKlxcKChbXixcXHNdKylcXHMqLFxccyooW14sXFxzXSspXFxzKixcXHMqKFteLFxcc10rKVxccyosXFxzKihbXixcXHNdKylcXClcXHMqJC9pLmV4ZWModGhpcy5maWxsU3R5bGUpO3Quc2V0QXR0cmlidXRlTlMobnVsbCxlLFwicmdiKFwiK25bMV0rXCIsXCIrblsyXStcIixcIituWzNdK1wiKVwiKSx0LnNldEF0dHJpYnV0ZU5TKG51bGwsZStcIi1vcGFjaXR5XCIsbls0XSl9ZWxzZSB0LnNldEF0dHJpYnV0ZU5TKG51bGwsZSx0aGlzLmZpbGxTdHlsZSl9c2V0U3Ryb2tlKHQpe2lmKHRoaXMuc3Ryb2tlU3R5bGUgaW5zdGFuY2VvZiBTR3JhZGllbnQpdC5zdHJva2U9dGhpcy5hZGRHcmFkaWVudCh0aGlzLnN0cm9rZVN0eWxlLCExKTtlbHNlIGlmKC9ecmdiYVxcKC8udGVzdCh0aGlzLnN0cm9rZVN0eWxlKSl7Y29uc3QgZT0vXlxccypyZ2JhXFxzKlxcKChbXixcXHNdKylcXHMqLFxccyooW14sXFxzXSspXFxzKixcXHMqKFteLFxcc10rKVxccyosXFxzKihbXixcXHNdKylcXClcXHMqJC9pLmV4ZWModGhpcy5zdHJva2VTdHlsZSk7dC5zdHJva2U9XCJyZ2IoXCIrZVsxXStcIixcIitlWzJdK1wiLFwiK2VbM10rXCIpXCIsdFtcInN0cm9rZS1vcGFjaXR5XCJdPWVbNF19ZWxzZSB0LnN0cm9rZT10aGlzLnN0cm9rZVN0eWxlO3RbXCJzdHJva2Utd2lkdGhcIl09dGhpcy5saW5lV2lkdGgsdFtcInN0cm9rZS1saW5lY2FwXCJdPXRoaXMubGluZUNhcCx0W1wic3Ryb2tlLWxpbmVqb2luXCJdPXRoaXMubGluZUpvaW4sdFtcInN0cm9rZS1taXRlcmxpbWl0XCJdPXRoaXMubWl0ZXJMaW1pdCx0aGlzLm9iJiYodFtcInN0cm9rZS1kYXNoYXJyYXlcIl09dGhpcy5Lby50b1N0cmluZygpLHRbXCJzdHJva2UtZGFzaG9mZnNldFwiXT10aGlzLmtoKX1hZGRHcmFkaWVudCh0LGkpe2xldCBlPVwiXCI7Y29uc3Qgcz10aGlzLmN1cnJlbnRQYXRoIT09bnVsbD90aGlzLmN1cnJlbnRQYXRoLmdldEF0dHJpYnV0ZShpP1wiZmlsbFwiOlwic3Ryb2tlXCIpOm51bGw7aWYocyE9PW51bGwmJnMuaW5kZXhPZihcIkdSQURcIikhPT0tMSl7ZT1zLnNwbGl0KFwiI1wiKVsxXS5zbGljZSgwLC0xKTtjb25zdCBoPXRoaXMuc3ZnLmdldEVsZW1lbnRCeUlkKGUpO2ghPT1udWxsJiZoLnJlbW92ZSgpfWVsc2UgZT1cIkdSQURcIitHU2V0LlN3Kys7bGV0IG47aWYodC50eXBlPT09XCJsaW5lYXJcIil7Y29uc3QgaD17eDE6dC54MSx4Mjp0LngyLHkxOnQueTEseTI6dC55MixpZDplLGdyYWRpZW50VW5pdHM6XCJ1c2VyU3BhY2VPblVzZVwifTtuPXRoaXMubWFrZUVsZW1lbnQoXCJsaW5lYXJHcmFkaWVudFwiLGgpfWVsc2UgaWYodC50eXBlPT09XCJyYWRpYWxcIil7Y29uc3QgaD17eDE6dC54MSx4Mjp0LngyLHkxOnQueTEseTI6dC55MixyMTp0LnIxLHIyOnQucjIsaWQ6ZX07bj10aGlzLm1ha2VFbGVtZW50KFwicmFkaWFsR3JhZGllbnRcIixoKX1lbHNlIFUubihcImludmFsaWQgZ3JhZGllbnRcIik7Y29uc3Qgbz10LmNvbG9ycyxyPW8ubGVuZ3RoLGw9W107Zm9yKGxldCBoPTA7aDxyO2grKyl7Y29uc3QgZj1vW2hdLGE9Zi5jb2xvcixjPXtvZmZzZXQ6Zi5vZmZzZXQsXCJzdG9wLWNvbG9yXCI6YX07aWYoL15yZ2JhXFwoLy50ZXN0KGEpKXtjb25zdCBkPS9eXFxzKnJnYmFcXHMqXFwoKFteLFxcc10rKVxccyosXFxzKihbXixcXHNdKylcXHMqLFxccyooW14sXFxzXSspXFxzKixcXHMqKFteLFxcc10rKVxcKVxccyokL2kuZXhlYyhhKTtjW1wic3RvcC1jb2xvclwiXT1cInJnYihcIitkWzFdK1wiLFwiK2RbMl0rXCIsXCIrZFszXStcIilcIixjW1wic3RvcC1vcGFjaXR5XCJdPWRbNF19bC5wdXNoKGMpfWwuc29ydCgoaCxmKT0+aC5vZmZzZXQ+Zi5vZmZzZXQ/MTotMSk7Zm9yKGxldCBoPTA7aDxyO2grKyluLmFwcGVuZENoaWxkKHRoaXMubWFrZUVsZW1lbnQoXCJzdG9wXCIsbFtoXSkpO3JldHVybiB0aGlzLnN2Zy5hcHBlbmRDaGlsZChuKSxcInVybCgjXCIrZStcIilcIn1hZGRSZWN0KHQsaSxlKXtjb25zdCBzPXt4OmlbMF0seTppWzFdLHdpZHRoOmlbMl0saGVpZ2h0OmlbM119O3RoaXMucHJvY2Vzc0NvbW1vbih0LHMsZSksdGhpcy5sZChcInJlY3RcIixzKX1hZGRUZXh0KHQsaSxlKXtsZXQgcz10aGlzLnRleHRBbGlnbjtzPT09XCJsZWZ0XCI/cz1cInN0YXJ0XCI6cz09PVwicmlnaHRcIj9zPVwiZW5kXCI6cz09PVwiY2VudGVyXCImJihzPVwibWlkZGxlXCIpO2NvbnN0IG49e3g6aVsxXSx5OmlbMl0sc3R5bGU6XCJmb250OiBcIit0aGlzLmZvbnQsXCJ0ZXh0LWFuY2hvclwiOnN9O3RoaXMucHJvY2Vzc0NvbW1vbih0LG4sZSksdGhpcy5sZChcInRleHRcIixuLGlbMF0pfWNJKHQsaSxlKXtjb25zdCBzPXRoaXMudUkodCksbj10aGlzLnBhdGhBdHRyaWJ1dGVzO2lmKG4uY2xpcFBhdGgpe3RoaXMuZGMubGVuZ3RoPjEmJnRoaXMuZGNbdGhpcy5kYy5sZW5ndGgtMl0uc2V0QXR0cmlidXRlTlMobnVsbCxcImNsaXAtcGF0aFwiLCdwYXRoKFwiJytzKydcIikgdmlldy1ib3gnKTtyZXR1cm59aWYobi5kPXMsdGhpcy5wcm9jZXNzQ29tbW9uKFwiXCIsbixpKSx0aGlzLmN1cnJlbnRQYXRoIT09bnVsbCl7Y29uc3Qgcj10aGlzLmN1cnJlbnRQYXRoO2lmKHIubm9kZU5hbWUhPT1cImdcIilmb3IoY29uc3QgbCBpbiBuKWwhPT1cInRyYW5zZm9ybVwiJiZyLnNldEF0dHJpYnV0ZU5TKG51bGwsbCxuW2xdKTtlbHNle2NvbnN0IGw9ci5nZXRFbGVtZW50c0J5VGFnTmFtZShcInBhdGhcIik7Zm9yKGNvbnN0IGggaW4gbiloIT09XCJ0cmFuc2Zvcm1cIiYmbFtlXS5zZXRBdHRyaWJ1dGVOUyhudWxsLGgsbltoXSl9fWVsc2UgdGhpcy5sZChcInBhdGhcIixuKX11SSh0KXtjb25zdCBpPVtdO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKXtjb25zdCBzPXRbZV0uc2xpY2UoKSxuPVtzLnNoaWZ0KCldO2lmKG5bMF09PT1cIkFcIiluLnB1c2gocy5zaGlmdCgpK1wiLFwiK3Muc2hpZnQoKSxzLnNoaWZ0KCkscy5zaGlmdCgpK1wiLFwiK3Muc2hpZnQoKSxzLnNoaWZ0KCkrXCIsXCIrcy5zaGlmdCgpKTtlbHNlIGZvcig7cy5sZW5ndGg7KW4ucHVzaChzLnNoaWZ0KCkrXCIsXCIrcy5zaGlmdCgpKTtpLnB1c2gobi5qb2luKFwiIFwiKSl9cmV0dXJuIGkuam9pbihcIiBcIil9bmV3R3JvdXAodCxpLGUscyxuLG8pe2NvbnN0IHI9bmV3IFNUcmFuc2Zvcm07ci5tPVt0LGksZSxzLG4sb107Y29uc3QgbD17fTt0aGlzLnByb2Nlc3NDb21tb24oXCJnXCIsbCxyKTtjb25zdCBoPXRoaXMubGQoXCJnXCIsbCk7cmV0dXJuIHRoaXMuZGMucHVzaChoKSxofW5ld0dyb3VwMih0KXtjb25zdCBpPXt9O3QmJihpLmNsYXNzPXQpO2NvbnN0IGU9dGhpcy5sZChcImdcIixpKTtyZXR1cm4gdGhpcy5kYy5wdXNoKGUpLGV9ZW5kR3JvdXAoKXtyZXR1cm4gdGhpcy5kYy5wb3AoKX1kdW1teUdyb3VwKCl7cmV0dXJuIHRoaXMubmV3R3JvdXAyKCksdGhpcy5lbmRHcm91cCgpfXNoYWRvd3NTZXQodCxpLGUpe3RoaXMuZmM9dCx0aGlzLmNjPWksdGhpcy53bj1lfXNoYWRvd3NPZmYoKXt0aGlzLnNsPSExLHRoaXMuc2hhZG93T2Zmc2V0WD0wLHRoaXMuc2hhZG93T2Zmc2V0WT0wLHRoaXMuc2hhZG93Qmx1cj0wfXNoYWRvd3NPbigpe3RoaXMuc2w9ITAsdGhpcy5zaGFkb3dPZmZzZXRYPXRoaXMuZmMsdGhpcy5zaGFkb3dPZmZzZXRZPXRoaXMuY2MsdGhpcy5zaGFkb3dCbHVyPXRoaXMud259ZW5hYmxlRGFzaCh0LGkpe3RoaXMub2I9ITAsdGhpcy5Lbz10LHRoaXMua2g9aX1kaXNhYmxlRGFzaCgpe3RoaXMub2I9ITF9Y2xlYXJDb250ZXh0Q2FjaGUodCl7fXNldEltYWdlU21vb3RoaW5nRW5hYmxlZCh0KXt9cm90YXRlKHQpe3RoaXMucWUucm90YXRlKHQqNTcuMjk1OCwwLDApfWdldEltYWdlRGF0YSh0LGksZSxzKXtyZXR1cm4gbnVsbH1tZWFzdXJlVGV4dCh0KXtyZXR1cm4gbnVsbH1yZW1vdmVPbGRHcmFkaWVudCh0LGksZSl7Y29uc3Qgcz1pLmdldEF0dHJpYnV0ZShlKTtpZihzPT09bnVsbClyZXR1cm47Y29uc3Qgbj1zLnNwbGl0KFwiI1wiKTtpZihuLmxlbmd0aD09PTEpcmV0dXJuO2NvbnN0IG89dGhpcy5zdmcuZ2V0RWxlbWVudEJ5SWQoblsxXS5zbGljZSgwLC0xKSk7aWYobyE9PW51bGwpe2NvbnN0IHI9bmV3IFJlZ0V4cChvLmlkLFwiZ1wiKTt0aGlzLnN2Zy5pbm5lckhUTUwubWF0Y2gocikubGVuZ3RoPT09MSYmby5yZW1vdmUoKX19cmVtb3ZlUGFydEZyb21WaWV3KHQpe3Quc3ZnIT09bnVsbCYmdC5zdmcucGFyZW50Tm9kZT09PXRoaXMuZGlhZ3JhbUdyb3VwJiZ0LnN2Zy5yZW1vdmUoKX19Y2xhc3MgQ2FudmFzU3VyZmFjZXtFdDtjaTtacjskdTtjb25zdHJ1Y3Rvcih0LGksZSxzKXtjb25zdCBuPWk9PT12b2lkIDA/cm9vdC5kb2N1bWVudDppO3RoaXMuWnI9bix0aGlzLiR1PW51bGw7Y29uc3Qgbz1uLmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7by50YWJJbmRleD0wLHRoaXMuRXQ9byx0aGlzLmNpPW5ldyBDYW52YXNTdXJmYWNlQ29udGV4dChvLGUscyksRGlhZ3JhbS5zcy5zZXQobyx0KX1yZXNpemUodCxpLGUscyl7cmV0dXJuIHRoaXMud2lkdGghPT10fHx0aGlzLmhlaWdodCE9PWk/KHRoaXMud2lkdGg9dCx0aGlzLmhlaWdodD1pLHRoaXMuc3R5bGUud2lkdGg9ZStcInB4XCIsdGhpcy5zdHlsZS5oZWlnaHQ9cytcInB4XCIsITApOiExfXRvRGF0YVVSTCh0LGkpe3JldHVybiB0aGlzLkV0LnRvRGF0YVVSTCh0LGkpfWdldEJvdW5kaW5nQ2xpZW50UmVjdCgpe3JldHVybiB0aGlzLkV0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpfWZvY3VzKCl7dGhpcy5FdC5mb2N1cygpfWdldCB3aWR0aCgpe3JldHVybiB0aGlzLkV0LndpZHRofXNldCB3aWR0aCh0KXt0aGlzLkV0LndpZHRoPXR9Z2V0IGhlaWdodCgpe3JldHVybiB0aGlzLkV0LmhlaWdodH1zZXQgaGVpZ2h0KHQpe3RoaXMuRXQuaGVpZ2h0PXR9ZGlzcG9zZSgpe0RpYWdyYW0uc3MuZGVsZXRlKHRoaXMuRXQpLHRoaXMuWnI9bnVsbH1nZXQgc3R5bGUoKXtyZXR1cm4gdGhpcy5FdC5zdHlsZX19Y2xhc3MgQ2FudmFzU3VyZmFjZUNvbnRleHR7ejtyYjtsYjtoYjtjbGlwSW5zdGVhZE9mRmlsbDtmYztjYzt3bjtGYTtzbDtBcjtjb25zdHJ1Y3Rvcih0LGksZSl7dGhpcy56PXQuZ2V0Q29udGV4dD90LmdldENvbnRleHQoXCIyZFwiLGkpOm51bGwsdGhpcy56PT09bnVsbCYmVS5uKFwiQnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IEhUTUwgQ2FudmFzIEVsZW1lbnRcIiksdGhpcy5yYj1cIlwiLHRoaXMubGI9XCJcIix0aGlzLmhiPVwiXCIsdGhpcy5jbGlwSW5zdGVhZE9mRmlsbD0hMSx0aGlzLmZjPTAsdGhpcy5jYz0wLHRoaXMud249MCx0aGlzLnNsPSExLHRoaXMuRmE9bmV3IFRyYW5zZm9ybSx0aGlzLkFyPSEhZX1jcmVhdGVPclVwZGF0ZUNsaXBHcm91cCh0LGkpe31zZXRJbWFnZVNtb290aGluZ0VuYWJsZWQodCl7dGhpcy56LmltYWdlU21vb3RoaW5nRW5hYmxlZD10fWdldCBmaWxsU3R5bGUoKXtyZXR1cm4gdGhpcy56LmZpbGxTdHlsZX1zZXQgZmlsbFN0eWxlKHQpe3RoaXMuaGIhPT10JiYodGhpcy56LmZpbGxTdHlsZT10LHRoaXMuaGI9dCl9Z2V0IGZvbnQoKXtyZXR1cm4gdGhpcy56LmZvbnR9c2V0IGZvbnQodCl7dGhpcy5yYiE9PXQmJih0aGlzLnouZm9udD10LHRoaXMucmI9dCl9Z2V0IGdsb2JhbEFscGhhKCl7cmV0dXJuIHRoaXMuei5nbG9iYWxBbHBoYX1zZXQgZ2xvYmFsQWxwaGEodCl7dGhpcy56Lmdsb2JhbEFscGhhPXR9Z2V0IGxpbmVDYXAoKXtyZXR1cm4gdGhpcy56LmxpbmVDYXB9c2V0IGxpbmVDYXAodCl7dGhpcy56LmxpbmVDYXA9dH1nZXQgbGluZURhc2hPZmZzZXQoKXtyZXR1cm4gdGhpcy56LmxpbmVEYXNoT2Zmc2V0fXNldCBsaW5lRGFzaE9mZnNldCh0KXt0aGlzLnoubGluZURhc2hPZmZzZXQ9dH1nZXQgbGluZUpvaW4oKXtyZXR1cm4gdGhpcy56LmxpbmVKb2lufXNldCBsaW5lSm9pbih0KXt0aGlzLnoubGluZUpvaW49dH1nZXQgbGluZVdpZHRoKCl7cmV0dXJuIHRoaXMuei5saW5lV2lkdGh9c2V0IGxpbmVXaWR0aCh0KXt0aGlzLnoubGluZVdpZHRoPXR9Z2V0IG1pdGVyTGltaXQoKXtyZXR1cm4gdGhpcy56Lm1pdGVyTGltaXR9c2V0IG1pdGVyTGltaXQodCl7dGhpcy56Lm1pdGVyTGltaXQ9dH1nZXQgc2hhZG93Qmx1cigpe3JldHVybiB0aGlzLnouc2hhZG93Qmx1cn1zZXQgc2hhZG93Qmx1cih0KXt0aGlzLnouc2hhZG93Qmx1cj10fWdldCBzaGFkb3dDb2xvcigpe3JldHVybiB0aGlzLnouc2hhZG93Q29sb3J9c2V0IHNoYWRvd0NvbG9yKHQpe3RoaXMuei5zaGFkb3dDb2xvcj10fWdldCBzaGFkb3dPZmZzZXRYKCl7cmV0dXJuIHRoaXMuei5zaGFkb3dPZmZzZXRYfXNldCBzaGFkb3dPZmZzZXRYKHQpe3RoaXMuei5zaGFkb3dPZmZzZXRYPXR9Z2V0IHNoYWRvd09mZnNldFkoKXtyZXR1cm4gdGhpcy56LnNoYWRvd09mZnNldFl9c2V0IHNoYWRvd09mZnNldFkodCl7dGhpcy56LnNoYWRvd09mZnNldFk9dH1nZXQgc3Ryb2tlU3R5bGUoKXtyZXR1cm4gdGhpcy56LnN0cm9rZVN0eWxlfXNldCBzdHJva2VTdHlsZSh0KXt0aGlzLmxiIT09dCYmKHRoaXMuei5zdHJva2VTdHlsZT10LHRoaXMubGI9dCl9Z2V0IHRleHRBbGlnbigpe3JldHVybiB0aGlzLnoudGV4dEFsaWdufXNldCB0ZXh0QWxpZ24odCl7dGhpcy56LnRleHRBbGlnbj10fWdldCBpbWFnZVNtb290aGluZ0VuYWJsZWQoKXtyZXR1cm4gdGhpcy56LmltYWdlU21vb3RoaW5nRW5hYmxlZH1zZXQgaW1hZ2VTbW9vdGhpbmdFbmFibGVkKHQpe3RoaXMuei5pbWFnZVNtb290aGluZ0VuYWJsZWQ9dH1nZXQgZmlsdGVyKCl7cmV0dXJuIHRoaXMuei5maWx0ZXJ9c2V0IGZpbHRlcih0KXt0PT09XCJcIj90aGlzLnouZmlsdGVyPVwibm9uZVwiOnRoaXMuei5maWx0ZXI9dH1hcmModCxpLGUscyxuLG8scixsKXt0aGlzLnouYXJjKHQsaSxlLHMsbixvKX1iZWdpblBhdGgoKXt0aGlzLnouYmVnaW5QYXRoKCl9ZW5kUGF0aCgpe31iZXppZXJDdXJ2ZVRvKHQsaSxlLHMsbixvKXt0aGlzLnouYmV6aWVyQ3VydmVUbyh0LGksZSxzLG4sbyl9Y2xlYXJSZWN0KHQsaSxlLHMpe3RoaXMuY29tbWl0VHJhbnNmb3JtKCksdGhpcy56LmNsZWFyUmVjdCh0LGksZSxzKX1jbGlwKHQpe3Q/dGhpcy56LmNsaXAodCk6dGhpcy56LmNsaXAoKX1jbG9zZVBhdGgoKXt0aGlzLnouY2xvc2VQYXRoKCl9Y3JlYXRlTGluZWFyR3JhZGllbnQodCxpLGUscyl7cmV0dXJuIHRoaXMuei5jcmVhdGVMaW5lYXJHcmFkaWVudCh0LGksZSxzKX1jcmVhdGVQYXR0ZXJuKHQsaSl7cmV0dXJuIHRoaXMuei5jcmVhdGVQYXR0ZXJuKHQsaSl9Y3JlYXRlUmFkaWFsR3JhZGllbnQodCxpLGUscyxuLG8pe3JldHVybiB0aGlzLnouY3JlYXRlUmFkaWFsR3JhZGllbnQodCxpLGUscyxuLG8pfWRyYXdJbWFnZSh0LGksZSxzLG4sbyxyLGwsaCl7cz09PXZvaWQgMD90aGlzLnouZHJhd0ltYWdlKHQsaSxlKTp0aGlzLnouZHJhd0ltYWdlKHQsaSxlLHMsbixvLHIsbCxoKX1maWxsKHQsaSl7aT90aGlzLnouZmlsbChpLHQ/XCJldmVub2RkXCI6XCJub256ZXJvXCIpOnRoaXMuei5maWxsKHQ/XCJldmVub2RkXCI6XCJub256ZXJvXCIpfWZpbGxSZWN0KHQsaSxlLHMpe3RoaXMuei5maWxsUmVjdCh0LGksZSxzKX1maWxsQmFja2dyb3VuZCh0LGksZSxzKXt0aGlzLnouZmlsbFJlY3QodCxpLGUscyl9ZmlsbFRleHQodCxpLGUpe3RoaXMuei5maWxsVGV4dCh0LGksZSl9Z2V0SW1hZ2VEYXRhKHQsaSxlLHMpe3JldHVybiB0aGlzLnouZ2V0SW1hZ2VEYXRhKHQsaSxlLHMpfWxpbmVUbyh0LGkpe3RoaXMuei5saW5lVG8odCxpKX1tZWFzdXJlVGV4dCh0KXtyZXR1cm4gdGhpcy56Lm1lYXN1cmVUZXh0KHQpfW1vdmVUbyh0LGkpe3RoaXMuei5tb3ZlVG8odCxpKX1xdWFkcmF0aWNDdXJ2ZVRvKHQsaSxlLHMpe3RoaXMuei5xdWFkcmF0aWNDdXJ2ZVRvKHQsaSxlLHMpfXJlY3QodCxpLGUscyl7dGhpcy56LnJlY3QodCxpLGUscyl9cmVzdG9yZSgpe3RoaXMuei5yZXN0b3JlKCl9c2F2ZSgpe3RoaXMuY29tbWl0VHJhbnNmb3JtKCksdGhpcy56LnNhdmUoKX1yb3RhdGUodCl7dGhpcy5GYS5tcyh0KjU3LjI5NTgsMCwwKX1zZXRUcmFuc2Zvcm0odCxpLGUscyxuLG8pe3RoaXMuRmEuc2V0VG8odCxpLGUscyxuLG8pfXNjYWxlKHQsaSl7dGhpcy5GYS5vdCh0LGkpfXRyYW5zbGF0ZSh0LGkpe3RoaXMuRmEuQnModCxpKX1zdHJva2UodCl7dD90aGlzLnouc3Ryb2tlKHQpOnRoaXMuei5zdHJva2UoKX10cmFuc2Zvcm0odCxpLGUscyxuLG8pe2lmKHQ9PT0xJiZpPT09MCYmZT09PTAmJnM9PT0xJiZuPT09MCYmbz09PTApcmV0dXJuO2NvbnN0IHI9dGhpcy5GYSxsPXIubTExKnQrci5tMjEqaSxoPXIubTEyKnQrci5tMjIqaSxmPXIubTExKmUrci5tMjEqcyxhPXIubTEyKmUrci5tMjIqcztyLmR4PXIubTExKm4rci5tMjEqbytyLmR4LHIuZHk9ci5tMTIqbityLm0yMipvK3IuZHksci5tMTE9bCxyLm0xMj1oLHIubTIxPWYsci5tMjI9YX1jb21taXRUcmFuc2Zvcm0oKXtjb25zdCB0PXRoaXMuRmE7dGhpcy56LnNldFRyYW5zZm9ybSh0Lm0xMSx0Lm0xMix0Lm0yMSx0Lm0yMix0LmR4LHQuZHkpfWZpbGxDb250ZXh0KHQsaSxlKXt0aGlzLnJhZGlhbEZpbGwodCxpLGUpfHx0aGlzLmZpbGxPckNsaXAoaSxlKX1yYWRpYWxGaWxsKHQsaSxlKXtpZighKHQgaW5zdGFuY2VvZiBCcnVzaCl8fHQudHlwZSE9PTMpcmV0dXJuITE7Y29uc3Qgcz10LnJjLG49dC5pYjtyZXR1cm4gbj5zPyh0aGlzLnNjYWxlKHMvbiwxKSx0aGlzLnRyYW5zbGF0ZSgobi1zKS8yLDApKTpzPm4mJih0aGlzLnNjYWxlKDEsbi9zKSx0aGlzLnRyYW5zbGF0ZSgwLChzLW4pLzIpKSx0aGlzLmZpbGxPckNsaXAoaSxlKSxuPnM/KHRoaXMudHJhbnNsYXRlKC0obi1zKS8yLDApLHRoaXMuc2NhbGUoMS8ocy9uKSwxKSk6cz5uJiYodGhpcy50cmFuc2xhdGUoMCwtKHMtbikvMiksdGhpcy5zY2FsZSgxLDEvKG4vcykpKSwhMH1zdHJva2VDb250ZXh0KCl7dGhpcy5jbGlwSW5zdGVhZE9mRmlsbHx8dGhpcy5zdHJva2UoKX1maWxsT3JDbGlwKHQsaSl7dGhpcy5jbGlwSW5zdGVhZE9mRmlsbD90aGlzLmNsaXAoaSk6dGhpcy5maWxsKHQsaSl9c2hhZG93c1NldCh0LGksZSl7dGhpcy5mYz10LHRoaXMuY2M9aSx0aGlzLnduPWV9c2hhZG93c09mZigpe3RoaXMuc2w9ITEsdGhpcy5zaGFkb3dPZmZzZXRYPTAsdGhpcy5zaGFkb3dPZmZzZXRZPTAsdGhpcy5zaGFkb3dCbHVyPTB9c2hhZG93c09uKCl7dGhpcy5zbD0hMCx0aGlzLnNoYWRvd09mZnNldFg9dGhpcy5mYyx0aGlzLnNoYWRvd09mZnNldFk9dGhpcy5jYyx0aGlzLnNoYWRvd0JsdXI9dGhpcy53bn1lbmFibGVEYXNoKHQsaSl7Y29uc3QgZT10aGlzLno7ZS5zZXRMaW5lRGFzaCE9PXZvaWQgMCYmKGUuc2V0TGluZURhc2godCksZS5saW5lRGFzaE9mZnNldD1pKX1kaXNhYmxlRGFzaCgpe2NvbnN0IHQ9dGhpcy56O3Quc2V0TGluZURhc2ghPT12b2lkIDAmJih0LnNldExpbmVEYXNoKENhbnZhc1N1cmZhY2VDb250ZXh0LkVtcHR5QXJyYXkpLHQubGluZURhc2hPZmZzZXQ9MCl9Y2xlYXJDb250ZXh0Q2FjaGUodCl7dCYmKHRoaXMucmI9XCJcIiksdGhpcy5sYj1cIlwiLHRoaXMuaGI9XCJcIn1yZW1vdmVQYXJ0RnJvbVZpZXcodCl7fXN0YXRpYyBFbXB0eUFycmF5PU9iamVjdC5mcmVlemUoW10pfXZhciBCcnVzaFR5cGU9KHk9Pih5W3kuU29saWQ9MV09XCJTb2xpZFwiLHlbeS5MaW5lYXI9Ml09XCJMaW5lYXJcIix5W3kuUmFkaWFsPTNdPVwiUmFkaWFsXCIseVt5LlBhdHRlcm49NF09XCJQYXR0ZXJuXCIseSkpKEJydXNoVHlwZXx8e30pLENvbG9yU3BhY2U9KHk9Pih5W3kuTGFiPTFdPVwiTGFiXCIseVt5LkhTTD0yXT1cIkhTTFwiLHlbeS5Pa2xjaD0zXT1cIk9rbGNoXCIseSkpKENvbG9yU3BhY2V8fHt9KTtjbGFzcyBDb2xvck51bWJlcnN7bjA7bjE7bjI7bjM7Y29uc3RydWN0b3IoKXt0aGlzLm4wPTAsdGhpcy5uMT0wLHRoaXMubjI9MCx0aGlzLm4zPTB9fWNsYXNzIEJydXNoe2Y7JDtSYTtsaTt4cztaMDtRMDtVbztfMDtwbjtyYztpYjtjb25zdHJ1Y3Rvcih0LGkpe2lmKEdTZXQuSmkodGhpcyksdGhpcy5mPSExLHQ9PT12b2lkIDApdGhpcy4kPTEsdGhpcy5SYT1cImJsYWNrXCI7ZWxzZSBpZih0eXBlb2YgdD09XCJzdHJpbmdcIil7Y29uc3Qgcz1VLlVoKEJydXNoVHlwZSx0KTtzIT09bnVsbD8odGhpcy4kPXMsdGhpcy5SYT1cImJsYWNrXCIpOih0aGlzLiQ9MSxEZWJ1ZyYmIUJydXNoLmlzVmFsaWRDb2xvcih0KSYmVS5uKCdDb2xvciBcIicrdCsnXCIgaXMgbm90IGEgdmFsaWQgY29sb3Igc3RyaW5nIGZvciBCcnVzaCBjb25zdHJ1Y3RvcicpLHRoaXMuUmE9dCl9ZWxzZSBPYmplY3Qua2V5cyhCcnVzaFR5cGUpLmhhc093blByb3BlcnR5KHQpPyhEZWJ1ZyYmVS5qKHQsQnJ1c2hUeXBlLFwiQnJ1c2hUeXBlXCIpLHRoaXMuJD10LHRoaXMuUmE9XCJibGFja1wiKTp0eXBlb2YgdD09XCJvYmplY3RcIiYmKHRoaXMuJD0xLGk9dCk7Y29uc3QgZT10aGlzLiQ7aWYoZT09PTI/KHRoaXMubGk9U3BvdC5Ub3BDZW50ZXIsdGhpcy54cz1TcG90LkJvdHRvbUNlbnRlcik6ZT09PTM/KHRoaXMubGk9U3BvdC5DZW50ZXIsdGhpcy54cz1TcG90LkNlbnRlcik6KHRoaXMubGk9U3BvdC5Ob25lLHRoaXMueHM9U3BvdC5Ob25lKSx0aGlzLlowPTAsdGhpcy5RMD1OYU4sdGhpcy5Vbz1udWxsLHRoaXMuXzA9bnVsbCx0aGlzLnBuPW51bGwsdGhpcy5yYz0wLHRoaXMuaWI9MCxpKXtjb25zdCBzPXt9O2Zvcihjb25zdCBuIGluIGkpaXNGaW5pdGUocGFyc2VGbG9hdChuKSk/dGhpcy5hZGRDb2xvclN0b3AocGFyc2VGbG9hdChuKSxpW25dKTpzW25dPWlbbl07T2JqZWN0LmFzc2lnbih0aGlzLHMpfX1jb3B5KCl7Y29uc3QgdD1uZXcgQnJ1c2g7cmV0dXJuIHQuJD10aGlzLiQsdC5SYT10aGlzLlJhLHQubGk9dGhpcy5saS5OKCksdC54cz10aGlzLnhzLk4oKSx0LlowPXRoaXMuWjAsdC5RMD10aGlzLlEwLHRoaXMuVW8hPT1udWxsJiYodC5Vbz10aGlzLlVvLmNvcHkoKSksdC5fMD10aGlzLl8wLHR9cCgpe3JldHVybiB0aGlzLmY9ITAsdGhpcy5VbyE9PW51bGwmJnRoaXMuVW8ucCgpLHRoaXN9YWkodCl7dCBpbiBCcnVzaFR5cGU/dGhpcy50eXBlPXQ6VS5ocih0aGlzLHQpfXRvU3RyaW5nKCl7bGV0IHQ9XCJCcnVzaChcIjtpZih0aGlzLnR5cGU9PT0xKXQrPXRoaXMuY29sb3I7ZWxzZSBpZih0aGlzLnR5cGU9PT0yP3QrPVwiTGluZWFyIFwiOnRoaXMudHlwZT09PTM/dCs9XCJSYWRpYWwgXCI6dGhpcy50eXBlPT09ND90Kz1cIlBhdHRlcm4gXCI6dCs9XCIodW5rbm93bikgXCIsdCs9dGhpcy5zdGFydCtcIiBcIit0aGlzLmVuZCx0aGlzLmNvbG9yU3RvcHMhPT1udWxsKXtjb25zdCBpPXRoaXMuY29sb3JTdG9wcy5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLmtleSxzPWkudmFsdWU7dCs9XCIgXCIrZStcIjpcIitzfX1yZXR1cm4gdCs9XCIpXCIsdH1hZGRDb2xvclN0b3AodCxpKXtyZXR1cm4gdGhpcy5mJiZVLkQodGhpcyksKHR5cGVvZiB0IT1cIm51bWJlclwifHwhaXNGaW5pdGUodCl8fHQ+MXx8dDwwKSYmVS5VKHQsXCIwIDw9IGxvYyA8PSAxXCIsQnJ1c2gsXCJhZGRDb2xvclN0b3A6bG9jXCIpLFUuaShpLFwic3RyaW5nXCIsQnJ1c2gsXCJhZGRDb2xvclN0b3A6Y29sb3JcIiksRGVidWcmJiFCcnVzaC5pc1ZhbGlkQ29sb3IoaSkmJlUubignQ29sb3IgXCInK2krJ1wiIGlzIG5vdCBhIHZhbGlkIGNvbG9yIHN0cmluZyBmb3IgQnJ1c2guYWRkQ29sb3JTdG9wJyksdGhpcy5Vbz09PW51bGwmJih0aGlzLlVvPW5ldyBHTWFwKSx0aGlzLlVvLnNldCh0LGkpLHRoaXMuJD09PTEmJih0aGlzLnR5cGU9MiksdGhpcy5wbj1udWxsLHRoaXN9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy4kfXNldCB0eXBlKHQpe3RoaXMuZiYmVS5EKHRoaXMsdCksRGVidWcmJlUuaih0LEJydXNoVHlwZSxcIkJydXNoVHlwZVwiKSx0aGlzLiQ9dCx0aGlzLnN0YXJ0LmlzTm9TcG90KCkmJih0PT09Mj90aGlzLnN0YXJ0PVNwb3QuVG9wQ2VudGVyOnQ9PT0zJiYodGhpcy5zdGFydD1TcG90LkNlbnRlcikpLHRoaXMuZW5kLmlzTm9TcG90KCkmJih0PT09Mj90aGlzLmVuZD1TcG90LkJvdHRvbUNlbnRlcjp0PT09MyYmKHRoaXMuZW5kPVNwb3QuQ2VudGVyKSksdGhpcy5wbj1udWxsfWdldCBjb2xvcigpe3JldHVybiB0aGlzLlJhfXNldCBjb2xvcih0KXt0aGlzLmYmJlUuRCh0aGlzLHQpLERlYnVnJiYhQnJ1c2guaXNWYWxpZENvbG9yKHQpJiZVLm4oJ0NvbG9yIFwiJyt0KydcIiBpcyBub3QgYSB2YWxpZCBjb2xvciBzdHJpbmcgZm9yIEJydXNoLmNvbG9yJyksdGhpcy5SYT10LHRoaXMucG49bnVsbH1nZXQgc3RhcnQoKXtyZXR1cm4gdGhpcy5saX1zZXQgc3RhcnQodCl7dGhpcy5mJiZVLkQodGhpcyx0KSxEZWJ1ZyYmVS5lKHQsU3BvdCxCcnVzaCxcInN0YXJ0XCIpLHRoaXMubGk9dC5OKCksdGhpcy5wbj1udWxsfWdldCBlbmQoKXtyZXR1cm4gdGhpcy54c31zZXQgZW5kKHQpe3RoaXMuZiYmVS5EKHRoaXMsdCksRGVidWcmJlUuZSh0LFNwb3QsQnJ1c2gsXCJlbmRcIiksdGhpcy54cz10Lk4oKSx0aGlzLnBuPW51bGx9Z2V0IHN0YXJ0UmFkaXVzKCl7cmV0dXJuIHRoaXMuWjB9c2V0IHN0YXJ0UmFkaXVzKHQpe3RoaXMuZiYmVS5EKHRoaXMsdCksRGVidWcmJlUucih0LEJydXNoLFwic3RhcnRSYWRpdXNcIiksdDwwJiZVLlUodCxcIj49IHplcm9cIixCcnVzaCxcInN0YXJ0UmFkaXVzXCIpLHRoaXMuWjA9dCx0aGlzLnBuPW51bGx9Z2V0IGVuZFJhZGl1cygpe3JldHVybiB0aGlzLlEwfXNldCBlbmRSYWRpdXModCl7dGhpcy5mJiZVLkQodGhpcyx0KSxEZWJ1ZyYmVS5yKHQsQnJ1c2gsXCJlbmRSYWRpdXNcIiksdDwwJiZVLlUodCxcIj49IHplcm9cIixCcnVzaCxcImVuZFJhZGl1c1wiKSx0aGlzLlEwPXQsdGhpcy5wbj1udWxsfWdldCBjb2xvclN0b3BzKCl7cmV0dXJuIHRoaXMuVW99c2V0IGNvbG9yU3RvcHModCl7dGhpcy5mJiZVLkQodGhpcyx0KSxEZWJ1ZyYmVS5lKHQsR01hcCxCcnVzaCxcImNvbG9yU3RvcHNcIiksdGhpcy5Vbz10LHRoaXMucG49bnVsbH1nZXQgcGF0dGVybigpe3JldHVybiB0aGlzLl8wfXNldCBwYXR0ZXJuKHQpe3RoaXMuZiYmVS5EKHRoaXMsdCksdGhpcy5fMD10LHRoaXMucG49bnVsbH1zdGF0aWMgcmFuZG9tQ29sb3IodCxpKXt0PT09dm9pZCAwJiYodD0xMjgpLERlYnVnJiYoVS5yKHQsQnJ1c2gsXCJyYW5kb21Db2xvcjptaW5cIiksKHQ8MHx8dD4yNTUpJiZVLlUodCxcIjAgPD0gbWluIDw9IDI1NVwiLEJydXNoLFwicmFuZG9tQ29sb3I6bWluXCIpKSxpPT09dm9pZCAwJiYoaT1NYXRoLm1heCh0LDI1NSkpLERlYnVnJiYoVS5yKGksQnJ1c2gsXCJyYW5kb21Db2xvcjptYXhcIiksKGk8dHx8aT4yNTUpJiZVLlUoaSxcIm1pbiA8PSBtYXggPD0gMjU1XCIsQnJ1c2gsXCJyYW5kb21Db2xvcjptYXhcIikpO2NvbnN0IGU9TWF0aC5hYnMoaS10KTtsZXQgcz1NYXRoLmZsb29yKHQrTWF0aC5yYW5kb20oKSplKS50b1N0cmluZygxNiksbj1NYXRoLmZsb29yKHQrTWF0aC5yYW5kb20oKSplKS50b1N0cmluZygxNiksbz1NYXRoLmZsb29yKHQrTWF0aC5yYW5kb20oKSplKS50b1N0cmluZygxNik7cmV0dXJuIHMubGVuZ3RoPDImJihzPVwiMFwiK3MpLG4ubGVuZ3RoPDImJihuPVwiMFwiK24pLG8ubGVuZ3RoPDImJihvPVwiMFwiK28pLFwiI1wiK3MrbitvfXN0YXRpYyBpc1ZhbGlkQ29sb3IodCl7cmV0dXJuIHJvb3QuQ1NTP3Jvb3QuQ1NTLnN1cHBvcnRzKFwiY29sb3JcIix0KTohMH1zdGF0aWMgbGlnaHRlbih0KXtyZXR1cm4gQnJ1c2gubGlnaHRlbkJ5KHQpfWxpZ2h0ZW5CeSh0LGkpe3RoaXMuZiYmVS5EKHRoaXMpO2NvbnN0IGU9dD09PXZvaWQgMHx8dHlwZW9mIHQhPVwibnVtYmVyXCI/LjI6dCxzPWk9PT12b2lkIDA/MzppO2lmKHRoaXMudHlwZT09PTEpQnJ1c2guRm8odGhpcy5jb2xvciksdGhpcy5jb2xvcj1CcnVzaC5oZChlLHMpO2Vsc2UgaWYoKHRoaXMudHlwZT09PTJ8fHRoaXMudHlwZT09PTMpJiZ0aGlzLmNvbG9yU3RvcHMhPT1udWxsKXtjb25zdCBuPXRoaXMuY29sb3JTdG9wcy5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOylCcnVzaC5GbyhuLnZhbHVlKSx0aGlzLmFkZENvbG9yU3RvcChuLmtleSxCcnVzaC5oZChlLHMpKX1yZXR1cm4gdGhpc31zdGF0aWMgbGlnaHRlbkJ5KHQsaSxlKXtjb25zdCBzPWk9PT12b2lkIDB8fHR5cGVvZiBpIT1cIm51bWJlclwiPy4yOmksbj1lPT09dm9pZCAwPzM6ZTtyZXR1cm4gQnJ1c2guRm8odCksQnJ1c2guaGQocyxuKX1zdGF0aWMgZGFya2VuKHQpe3JldHVybiBCcnVzaC5kYXJrZW5CeSh0KX1kYXJrZW5CeSh0LGkpe3RoaXMuZiYmVS5EKHRoaXMpO2NvbnN0IGU9dD09PXZvaWQgMHx8dHlwZW9mIHQhPVwibnVtYmVyXCI/LjI6dCxzPWk9PT12b2lkIDA/MzppO2lmKHRoaXMudHlwZT09PTEpQnJ1c2guRm8odGhpcy5jb2xvciksdGhpcy5jb2xvcj1CcnVzaC5oZCgtZSxzKTtlbHNlIGlmKCh0aGlzLnR5cGU9PT0yfHx0aGlzLnR5cGU9PT0zKSYmdGhpcy5jb2xvclN0b3BzIT09bnVsbCl7Y29uc3Qgbj10aGlzLmNvbG9yU3RvcHMuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspQnJ1c2guRm8obi52YWx1ZSksdGhpcy5hZGRDb2xvclN0b3Aobi5rZXksQnJ1c2guaGQoLWUscykpfXJldHVybiB0aGlzfXN0YXRpYyBkYXJrZW5CeSh0LGksZSl7Y29uc3Qgcz1pPT09dm9pZCAwfHx0eXBlb2YgaSE9XCJudW1iZXJcIj8uMjppLG49ZT09PXZvaWQgMD8zOmU7cmV0dXJuIEJydXNoLkZvKHQpLEJydXNoLmhkKC1zLG4pfXN0YXRpYyBtaXgodCxpLGUpe0JydXNoLkZvKHQpO2NvbnN0IHM9QnJ1c2gucS5uMCxuPUJydXNoLnEubjEsbz1CcnVzaC5xLm4yLHI9QnJ1c2gucS5uMztCcnVzaC5GbyhpKSxlPT09dm9pZCAwJiYoZT0uNSk7Y29uc3QgbD1NYXRoLnJvdW5kKChCcnVzaC5xLm4wLXMpKmUrcyksaD1NYXRoLnJvdW5kKChCcnVzaC5xLm4xLW4pKmUrbiksZj1NYXRoLnJvdW5kKChCcnVzaC5xLm4yLW8pKmUrbyksYT1NYXRoLnJvdW5kKChCcnVzaC5xLm4zLXIpKmUrcik7cmV0dXJuYHJnYmEoJHtsfSwgJHtofSwgJHtmfSwgJHthfSlgfWlzRGFyaygpe2lmKHRoaXMudHlwZT09PTEpcmV0dXJuIEJydXNoLmlzRGFyayh0aGlzLmNvbG9yKTtpZigodGhpcy50eXBlPT09Mnx8dGhpcy50eXBlPT09MykmJnRoaXMuY29sb3JTdG9wcyE9PW51bGwpe2NvbnN0IHQ9dGhpcy5jb2xvclN0b3BzO2lmKHRoaXMudHlwZT09PTMpcmV0dXJuIEJydXNoLmlzRGFyayh0LmZpcnN0KCkudmFsdWUpO2lmKHQuZ2V0KC41KSE9PW51bGwpcmV0dXJuIEJydXNoLmlzRGFyayh0LmdldCguNSkpO2lmKHQuY291bnQ9PT0yKXtjb25zdCBsPXQudG9BcnJheSgpO3JldHVybiBCcnVzaC5pc0RhcmsoQnJ1c2gubWl4KGxbMF0udmFsdWUsbFsxXS52YWx1ZSkpfWNvbnN0IGk9dC5pdGVyYXRvcjtsZXQgZT0tMSxzPS0xLG49MSxvPTE7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGw9aS5rZXksaD1NYXRoLmFicyguNS1pLmtleSk7bj5vJiZoPG4/KGU9bCxuPWgpOm8+PW4mJmg8byYmKHM9bCxvPWgpfWlmKGU+cyl7bGV0IGw9ZTtlPXMscz1sLGw9bixuPW8sbz1sfWNvbnN0IHI9cy1lO3JldHVybiBCcnVzaC5pc0RhcmsoQnJ1c2gubWl4KHQuZ2V0KGUpLHQuZ2V0KHMpLDEtby9yKSl9cmV0dXJuITF9c3RhdGljIGlzRGFyayh0KXtyZXR1cm4gdD90IGluc3RhbmNlb2YgQnJ1c2g/dC5pc0RhcmsoKTooQnJ1c2guRm8odCksKDI5OSpCcnVzaC5xLm4wKzU4NypCcnVzaC5xLm4xKzExNCpCcnVzaC5xLm4yKS8xZTM8MTI4KTohMX1zdGF0aWMgaGQodCxpKXtzd2l0Y2goaSl7Y2FzZSAxOnJldHVybiBCcnVzaC5kSSgpLEJydXNoLmVvLm4wPU1hdGgubWluKDEwMCxNYXRoLm1heCgwLEJydXNoLmVvLm4wKzEwMCp0KSksQnJ1c2guZ0koKSxcInJnYmEoXCIrQnJ1c2gucS5uMCtcIiwgXCIrQnJ1c2gucS5uMStcIiwgXCIrQnJ1c2gucS5uMitcIiwgXCIrQnJ1c2gucS5uMytcIilcIjtjYXNlIDI6cmV0dXJuIEJydXNoLlFNKCksQnJ1c2guWWkubjI9TWF0aC5taW4oMTAwLE1hdGgubWF4KDAsQnJ1c2guWWkubjIrMTAwKnQpKSxcImhzbGEoXCIrQnJ1c2guWWkubjArXCIsIFwiK0JydXNoLllpLm4xK1wiJSwgXCIrQnJ1c2guWWkubjIrXCIlLCBcIitCcnVzaC5ZaS5uMytcIilcIjtjYXNlIDM6cmV0dXJuIEJydXNoLm1JKCksQnJ1c2guc28ubjA9TWF0aC5taW4oMTAwLE1hdGgubWF4KDAsQnJ1c2guc28ubjArMTAwKnQpKSxCcnVzaC5wSSgpLFwicmdiYShcIitCcnVzaC5xLm4wK1wiLCBcIitCcnVzaC5xLm4xK1wiLCBcIitCcnVzaC5xLm4yK1wiLCBcIitCcnVzaC5xLm4zK1wiKVwiO2RlZmF1bHQ6VS5uKFwiVW5rbm93biBjb2xvciBzcGFjZTogXCIraSl9fXN0YXRpYyBGbyh0KXtCcnVzaC50cD09PSExJiYoQnJ1c2gudHA9ITAsQnJ1c2gubm89RGlhZ3JhbS5pc1VzaW5nRE9NKCk/bmV3IENhbnZhc1N1cmZhY2UobnVsbCx2b2lkIDAse3dpbGxSZWFkRnJlcXVlbnRseTohMH0pLmNpOm51bGwpO2NvbnN0IGk9QnJ1c2gubm87aWYoaT09PW51bGwpcmV0dXJuO2kuY2xlYXJSZWN0KDAsMCwxLDEpLGkuZmlsbFN0eWxlPVwiIzAwMDAwMFwiO2NvbnN0IGU9aS5maWxsU3R5bGU7aWYoaS5maWxsU3R5bGU9dCxpLmZpbGxTdHlsZSE9PWUpe2kuZmlsbFJlY3QoMCwwLDEsMSk7Y29uc3Qgcz1pLmdldEltYWdlRGF0YSgwLDAsMSwxKS5kYXRhO0JydXNoLnEubjA9c1swXSxCcnVzaC5xLm4xPXNbMV0sQnJ1c2gucS5uMj1zWzJdLEJydXNoLnEubjM9c1szXS8yNTV9ZWxzZXtpLmZpbGxTdHlsZT1cIiNGRkZGRkZcIjtjb25zdCBzPWkuZmlsbFN0eWxlO2kuZmlsbFN0eWxlPXQsaS5maWxsU3R5bGU9PT1zJiZEZWJ1ZyYmVS5uKCdDb2xvciBcIicrdCsnXCIgaXMgbm90IGEgdmFsaWQgY29sb3Igc3RyaW5nIGZvciBSR0JBIGNvbG9yIGNvbnZlcnNpb24nKSxCcnVzaC5xLm4wPTAsQnJ1c2gucS5uMT0wLEJydXNoLnEubjI9MCxCcnVzaC5xLm4zPTF9fXN0YXRpYyBRTSgpe2NvbnN0IHQ9QnJ1c2gucS5uMC8yNTUsaT1CcnVzaC5xLm4xLzI1NSxlPUJydXNoLnEubjIvMjU1LHM9TWF0aC5tYXgodCxpLGUpLG49TWF0aC5taW4odCxpLGUpLG89cy1uO2xldCByLGw7Y29uc3QgaD0ocytuKS8yO2lmKG89PT0wKXI9bD0wO2Vsc2V7c3dpdGNoKHMpe2Nhc2UgdDpyPShpLWUpL28lNjticmVhaztjYXNlIGk6cj0oZS10KS9vKzI7YnJlYWs7Y2FzZSBlOnI9KHQtaSkvbys0O2JyZWFrfXIqPTYwLHI8MCYmKHIrPTM2MCksbD1vLygxLU1hdGguYWJzKDIqaC0xKSl9QnJ1c2guWWkubjA9TWF0aC5yb3VuZChyKSxCcnVzaC5ZaS5uMT1NYXRoLnJvdW5kKGwqMTAwKSxCcnVzaC5ZaS5uMj1NYXRoLnJvdW5kKGgqMTAwKSxCcnVzaC5ZaS5uMz1CcnVzaC5xLm4zfXN0YXRpYyBSRSgpe2NvbnN0IHQ9QnJ1c2guWWkubjAsaT1CcnVzaC5ZaS5uMS8xMDAsZT1CcnVzaC5ZaS5uMi8xMDA7bGV0IHMsbixvO2NvbnN0IHI9KDEtTWF0aC5hYnMoMiplLTEpKSppLGw9dC82MCxoPXIqKDEtTWF0aC5hYnMobCUyLTEpKTtsPj0wJiZsPDE/KHM9cixuPWgsbz0wKTpsPj0xJiZsPDI/KHM9aCxuPXIsbz0wKTpsPj0yJiZsPDM/KHM9MCxuPXIsbz1oKTpsPj0zJiZsPDQ/KHM9MCxuPWgsbz1yKTpsPj00JiZsPDU/KHM9aCxuPTAsbz1yKTpsPj01JiZsPDYmJihzPXIsbj0wLG89aCk7Y29uc3QgZj1lLS41KnI7cys9ZixuKz1mLG8rPWYsQnJ1c2gucS5uMD1NYXRoLnJvdW5kKHMqMjU1KSxCcnVzaC5xLm4xPU1hdGgucm91bmQobioyNTUpLEJydXNoLnEubjI9TWF0aC5yb3VuZChvKjI1NSksQnJ1c2gucS5uMz1CcnVzaC5ZaS5uM31zdGF0aWMgZEkoKXtCcnVzaC5CTCgpLEJydXNoLnlJKCl9c3RhdGljIGdJKCl7QnJ1c2gud0koKSxCcnVzaC5WTCgpfXN0YXRpYyB6UCh0KXtyZXR1cm4gdC89MjU1LHQ8PS4wNDA0NT90LzEyLjkyOk1hdGgucG93KCh0Ky4wNTUpLzEuMDU1LDIuNCl9c3RhdGljIFhQKHQpe3JldHVybiB0PD0uMDAzMTMwOD90KjEyLjkyOjEuMDU1Kk1hdGgucG93KHQsMS8yLjQpLS4wNTV9c3RhdGljIEJMKCl7Y29uc3QgdD1CcnVzaC56UChCcnVzaC5xLm4wKSxpPUJydXNoLnpQKEJydXNoLnEubjEpLGU9QnJ1c2guelAoQnJ1c2gucS5uMik7QnJ1c2guQnQubjA9LjQxMjQ1NjQqdCsuMzU3NTc2MSppKy4xODA0Mzc1KmUsQnJ1c2guQnQubjE9LjIxMjY3MjkqdCsuNzE1MTUyMippKy4wNzIxNzUqZSxCcnVzaC5CdC5uMj0uMDE5MzMzOSp0Ky4xMTkxOTIqaSsuOTUwMzA0MSplLEJydXNoLkJ0Lm4zPUJydXNoLnEubjN9c3RhdGljIFZMKCl7Y29uc3QgdD0zLjI0MDQ1NDIqQnJ1c2guQnQubjArLTEuNTM3MTM4NSpCcnVzaC5CdC5uMSstLjQ5ODUzMTQqQnJ1c2guQnQubjIsaT0tLjk2OTI2NipCcnVzaC5CdC5uMCsxLjg3NjAxMDgqQnJ1c2guQnQubjErLjA0MTU1NipCcnVzaC5CdC5uMixlPS4wNTU2NDM0KkJydXNoLkJ0Lm4wKy0uMjA0MDI1OSpCcnVzaC5CdC5uMSsxLjA1NzIyNTIqQnJ1c2guQnQubjI7QnJ1c2gucS5uMD1CcnVzaC5YUCh0KSoyNTUsQnJ1c2gucS5uMT1CcnVzaC5YUChpKSoyNTUsQnJ1c2gucS5uMj1CcnVzaC5YUChlKSoyNTUsQnJ1c2gucS5uMz1CcnVzaC5CdC5uMyxCcnVzaC5xLm4wPU1hdGgucm91bmQoQnJ1c2gucS5uMCksQnJ1c2gucS5uMD4yNTU/QnJ1c2gucS5uMD0yNTU6QnJ1c2gucS5uMDwwJiYoQnJ1c2gucS5uMD0wKSxCcnVzaC5xLm4xPU1hdGgucm91bmQoQnJ1c2gucS5uMSksQnJ1c2gucS5uMT4yNTU/QnJ1c2gucS5uMT0yNTU6QnJ1c2gucS5uMTwwJiYoQnJ1c2gucS5uMT0wKSxCcnVzaC5xLm4yPU1hdGgucm91bmQoQnJ1c2gucS5uMiksQnJ1c2gucS5uMj4yNTU/QnJ1c2gucS5uMj0yNTU6QnJ1c2gucS5uMjwwJiYoQnJ1c2gucS5uMj0wKX1zdGF0aWMgWVA9MjE2LzI0Mzg5O3N0YXRpYyBhYj0yNDM4OS8yNztzdGF0aWMgYWQ9Wzk1LjA0NywxMDAsMTA4Ljg4M107c3RhdGljIEtQKHQpe3JldHVybiB0PkJydXNoLllQP01hdGgucG93KHQsMS8zKTooQnJ1c2guYWIqdCsxNikvMTE2fXN0YXRpYyB5SSgpe2NvbnN0IHQ9QnJ1c2guS1AoQnJ1c2guQnQubjAqMTAwL0JydXNoLmFkWzBdKSxpPUJydXNoLktQKEJydXNoLkJ0Lm4xKjEwMC9CcnVzaC5hZFsxXSksZT1CcnVzaC5LUChCcnVzaC5CdC5uMioxMDAvQnJ1c2guYWRbMl0pO0JydXNoLmVvLm4wPTExNippLTE2LEJydXNoLmVvLm4xPTUwMCoodC1pKSxCcnVzaC5lby5uMj0yMDAqKGktZSksQnJ1c2guZW8ubjM9QnJ1c2guQnQubjN9c3RhdGljIHpMKHQpe2NvbnN0IGk9dCp0KnQ7cmV0dXJuIGk+QnJ1c2guWVA/aTooMTE2KnQtMTYpL0JydXNoLmFifXN0YXRpYyB3SSgpe2NvbnN0IHQ9KEJydXNoLmVvLm4wKzE2KS8xMTYsaT1CcnVzaC5lby5uMS81MDArdCxlPXQtQnJ1c2guZW8ubjIvMjAwO0JydXNoLkJ0Lm4wPUJydXNoLmFkWzBdLzEwMCpCcnVzaC56TChpKSxCcnVzaC5CdC5uMT1CcnVzaC5hZFsxXS8xMDAqKEJydXNoLmVvLm4wPkJydXNoLmFiKkJydXNoLllQP01hdGgucG93KHQsMyk6QnJ1c2guZW8ubjAvQnJ1c2guYWIpLEJydXNoLkJ0Lm4yPUJydXNoLmFkWzJdLzEwMCpCcnVzaC56TChlKSxCcnVzaC5CdC5uMz1CcnVzaC5lby5uM31zdGF0aWMgeEkoKXtsZXQgdD0uODE5MDIyNCpCcnVzaC5CdC5uMCsuMzYxOTA2MipCcnVzaC5CdC5uMSstLjEyODg3MzcqQnJ1c2guQnQubjIsaT0uMDMyOTgzNjYqQnJ1c2guQnQubjArLjkyOTI4NjgqQnJ1c2guQnQubjErLjAzNjE0NDY2KkJydXNoLkJ0Lm4yLGU9LjA0ODE3NzE5KkJydXNoLkJ0Lm4wKy4yNjQyMzk1KkJydXNoLkJ0Lm4xKy42MzM1NDc4KkJydXNoLkJ0Lm4yO3Q9TWF0aC5jYnJ0KHQpLGk9TWF0aC5jYnJ0KGkpLGU9TWF0aC5jYnJ0KGUpLEJydXNoLmRpLm4wPS4yMTA0NTQyKnQrLjc5MzYxNzcqaSstLjAwNDA3MjA0NiplLEJydXNoLmRpLm4xPTEuOTc3OTk4KnQrLTIuNDI4NTkyKmkrLjQ1MDU5MzcqZSxCcnVzaC5kaS5uMj0uMDI1OTA0MDMqdCsuNzgyNzcxNyppKy0uODA4Njc1NyplLEJydXNoLmRpLm4zPUJydXNoLkJ0Lm4zLEJydXNoLmRpLm4wKj0xMDB9c3RhdGljIGJJKCl7QnJ1c2guZGkubjAvPTEwMDtsZXQgdD0uOTk5OTk5OSpCcnVzaC5kaS5uMCsuMzk2MzM3NypCcnVzaC5kaS5uMSsuMjE1ODAzNypCcnVzaC5kaS5uMixpPTEuMDAwMDAwMDA5KkJydXNoLmRpLm4wKy0uMTA1NTYxMypCcnVzaC5kaS5uMSstLjA2Mzg1NDE3KkJydXNoLmRpLm4yLGU9MS4wMDAwMDAwNSpCcnVzaC5kaS5uMCstLjA4OTQ4NDE4KkJydXNoLmRpLm4xKy0xLjI5MTQ4NSpCcnVzaC5kaS5uMjt0PXQqKjMsaT1pKiozLGU9ZSoqMyxCcnVzaC5CdC5uMD0xLjIyNjg3OTgqdCstLjU1NzgxNDkqaSsuMjgxMzkxKmUsQnJ1c2guQnQubjE9LS4wNDA1NzU3Nip0KzEuMTEyMjg2KmkrLS4wNzE3MTEwNiplLEJydXNoLkJ0Lm4yPS0uMDc2MzcyOTQqdCstLjQyMTQ5MzMqaSsxLjU4NjkyNCplLEJydXNoLkJ0Lm4zPUJydXNoLmRpLm4zfXN0YXRpYyBrSSgpe2NvbnN0IHQ9TWF0aC5hdGFuMihCcnVzaC5kaS5uMixCcnVzaC5kaS5uMSkqMTgwL01hdGguUEk7QnJ1c2guc28ubjA9QnJ1c2guZGkubjAsQnJ1c2guc28ubjE9TWF0aC5zcXJ0KEJydXNoLmRpLm4xKioyK0JydXNoLmRpLm4yKioyKSxCcnVzaC5zby5uMj10Pj0wP3Q6dCszNjAsQnJ1c2guc28ubjM9QnJ1c2guZGkubjN9c3RhdGljIFNJKCl7QnJ1c2guZGkubjA9QnJ1c2guc28ubjAsQnJ1c2guZGkubjE9QnJ1c2guc28ubjEqTWF0aC5jb3MoQnJ1c2guc28ubjIqTWF0aC5QSS8xODApLEJydXNoLmRpLm4yPUJydXNoLnNvLm4xKk1hdGguc2luKEJydXNoLnNvLm4yKk1hdGguUEkvMTgwKSxCcnVzaC5kaS5uMz1CcnVzaC5zby5uM31zdGF0aWMgbUkoKXtCcnVzaC5CTCgpLEJydXNoLnhJKCksQnJ1c2gua0koKX1zdGF0aWMgcEkoKXtCcnVzaC5TSSgpLEJydXNoLmJJKCksQnJ1c2guVkwoKX1zdGF0aWMgcmQodCxpKXt0eXBlb2YgdD09XCJzdHJpbmdcIj9EZWJ1ZyYmIUJydXNoLmlzVmFsaWRDb2xvcih0KSYmVS5uKCdDb2xvciBcIicrdCsnXCIgaXMgbm90IGEgdmFsaWQgY29sb3Igc3RyaW5nIGZvciAnK2kpOnQgaW5zdGFuY2VvZiBCcnVzaHx8VS5uKFwiVmFsdWUgZm9yIFwiK2krXCIgbXVzdCBiZSBhIGNvbG9yIHN0cmluZyBvciBhIEJydXNoLCBub3QgXCIrdCl9c3RhdGljIFNvbGlkPTE7c3RhdGljIExpbmVhcj0yO3N0YXRpYyBSYWRpYWw9MztzdGF0aWMgUGF0dGVybj00O3N0YXRpYyBMYWI9MTtzdGF0aWMgSFNMPTI7c3RhdGljIG5vPW51bGw7c3RhdGljIHRwPSExO3N0YXRpYyBxPW5ldyBDb2xvck51bWJlcnM7c3RhdGljIFlpPW5ldyBDb2xvck51bWJlcnM7c3RhdGljIEJ0PW5ldyBDb2xvck51bWJlcnM7c3RhdGljIGVvPW5ldyBDb2xvck51bWJlcnM7c3RhdGljIGRpPW5ldyBDb2xvck51bWJlcnM7c3RhdGljIHNvPW5ldyBDb2xvck51bWJlcnN9Y2xhc3MgUGFuZWxMYXlvdXR7THQ9XCJCYXNlXCI7c3RhdGljIGxzPW5ldyBHTWFwO3N0YXRpYyB4bih0LGkpe2kubmFtZT10LFBhbmVsTGF5b3V0LmxzLnNldCh0LGkpfWdldCBuYW1lKCl7cmV0dXJuIHRoaXMuTHR9c2V0IG5hbWUodCl7dGhpcy5MdD10fWNvbnN0cnVjdG9yKCl7fWdldCBjbGFzc1R5cGUoKXtyZXR1cm4gUGFuZWx9bWVhc3VyZSh0LGksZSxzLG4sbyxyKXt9bWVhc3VyZUVsZW1lbnQodCxpLGUscyxuKXt0LmR0KGksZSxzLG4pfWFycmFuZ2UodCxpLGUpe31hcnJhbmdlRWxlbWVudCh0LGksZSxzLG4sbyl7dC5HdChpLGUscyxuLG8pfXJlbWVhc3VyZU9iamVjdCh0KXt0LmxjKCl9VWkodCxpLGUpe319Y2xhc3MgUGFuZWxMYXlvdXRQb3NpdGlvbiBleHRlbmRzIFBhbmVsTGF5b3V0e2NvbnN0cnVjdG9yKCl7c3VwZXIoKX1tZWFzdXJlKHQsaSxlLHMsbixvLHIpe2NvbnN0IGw9cy5sZW5ndGgsaD10LkdvKCk7Zm9yKGxldCBmPTA7ZjxsO2YrKyl7Y29uc3QgYT1zW2ZdO2lmKCFhLnZpc2libGUmJmEhPT1oKWNvbnRpbnVlO2NvbnN0IGM9YS5tYXJnaW4sdT1jLnJpZ2h0K2MubGVmdCxkPWMudG9wK2MuYm90dG9tO2EuZHQoaSxlLG8scik7Y29uc3QgbT1hLm1lYXN1cmVkQm91bmRzLGc9TWF0aC5tYXgobS53aWR0aCt1LDApLHA9TWF0aC5tYXgobS5oZWlnaHQrZCwwKTtsZXQgdz1hLnBvc2l0aW9uLngseD1hLnBvc2l0aW9uLnk7aWYoaXNGaW5pdGUodyl8fCh3PTApLGlzRmluaXRlKHgpfHwoeD0wKSxhIGluc3RhbmNlb2YgU2hhcGUmJmEuaXNHZW9tZXRyeVBvc2l0aW9uZWQpe2NvbnN0IGs9YS5zdHJva2VXaWR0aC8yO3ctPWsseC09a31uLnVuaW9uTm9DaGVjayh3LHgsZyxwKX19YXJyYW5nZSh0LGksZSl7Y29uc3Qgcz1pLmxlbmd0aCxuPXQucGFkZGluZyxvPWUueC1uLmxlZnQscj1lLnktbi50b3A7Zm9yKGxldCBsPTA7bDxzO2wrKyl7Y29uc3QgaD1pW2xdLGY9aC5tZWFzdXJlZEJvdW5kcyxhPWgubWFyZ2luLGM9aC5wb3NpdGlvbi54LHU9aC5wb3NpdGlvbi55O2xldCBkPWlzTmFOKGMpPy1vOmMtbyxtPWlzTmFOKHUpPy1yOnUtcjtpZihoIGluc3RhbmNlb2YgU2hhcGUmJmguaXNHZW9tZXRyeVBvc2l0aW9uZWQpe2NvbnN0IGc9aC5zdHJva2VXaWR0aC8yO2QtPWcsbS09Z31oLnZpc2libGUmJmguR3QoZCthLmxlZnQsbSthLnRvcCxmLndpZHRoLGYuaGVpZ2h0KX19fVBhbmVsTGF5b3V0LnhuKFwiUG9zaXRpb25cIixuZXcgUGFuZWxMYXlvdXRQb3NpdGlvbik7Y2xhc3MgUGFuZWxMYXlvdXRIb3Jpem9udGFsIGV4dGVuZHMgUGFuZWxMYXlvdXR7Y29uc3RydWN0b3IoKXtzdXBlcigpfW1lYXN1cmUodCxpLGUscyxuLG8scil7Y29uc3QgbD1zLmxlbmd0aCxoPVUubHQoKSxmPXQuR28oKTtmb3IobGV0IGM9MDtjPGw7YysrKXtjb25zdCB1PXNbY107aWYoIXUudmlzaWJsZSYmdSE9PWYpY29udGludWU7Y29uc3QgZD11LnFzKCExKTtpZihkIT09MCYmZCE9PTUpe2gucHVzaCh1KTtjb250aW51ZX11LmR0KDEvMCxlLDAscik7Y29uc3QgbT11Lm1hcmdpbixnPXUubWVhc3VyZWRCb3VuZHMscD1NYXRoLm1heChnLndpZHRoK20ucmlnaHQrbS5sZWZ0LDApLHc9TWF0aC5tYXgoZy5oZWlnaHQrbS50b3ArbS5ib3R0b20sMCk7bi5WbihuLndpZHRoK3AsTWF0aC5tYXgobi5oZWlnaHQsdykpfWNvbnN0IGE9aC5sZW5ndGg7dC5kZXNpcmVkU2l6ZS5oZWlnaHQ/ZT1NYXRoLm1pbih0LmRlc2lyZWRTaXplLmhlaWdodCx0Lm1heFNpemUuaGVpZ2h0KTpuLmhlaWdodCE9PTAmJihlPU1hdGgubWluKG4uaGVpZ2h0LHQubWF4U2l6ZS5oZWlnaHQpKTtmb3IobGV0IGM9MDtjPGE7YysrKXtjb25zdCB1PWhbY107aWYoIXUudmlzaWJsZSYmdSE9PWYpY29udGludWU7Y29uc3QgZD11Lm1hcmdpbixtPWQucmlnaHQrZC5sZWZ0LGc9ZC50b3ArZC5ib3R0b207dS5kdCgxLzAsZSwwLHIpO2NvbnN0IHA9dS5tZWFzdXJlZEJvdW5kcyx3PU1hdGgubWF4KHAud2lkdGgrbSwwKSx4PU1hdGgubWF4KHAuaGVpZ2h0K2csMCk7bi53aWR0aCs9dyxuLmhlaWdodD1NYXRoLm1heChuLmhlaWdodCx4KX1VLnR0KGgpfWFycmFuZ2UodCxpLGUpe2NvbnN0IHM9aS5sZW5ndGgsbj10LnBhZGRpbmcsbz1uLnRvcCxyPXQuaXNPcHBvc2l0ZTtsZXQgbD1yP2Uud2lkdGg6bi5sZWZ0O2ZvcihsZXQgaD0wO2g8cztoKyspe2NvbnN0IGY9byxhPWlbaF07aWYoIWEudmlzaWJsZSljb250aW51ZTtjb25zdCBjPWEubWVhc3VyZWRCb3VuZHMsdT1hLm1hcmdpbixkPXUudG9wK3UuYm90dG9tLG09bytuLmJvdHRvbTtsZXQgZz1jLmhlaWdodDtjb25zdCBwPWEucXMoITEpOyhpc05hTihhLmRlc2lyZWRTaXplLmhlaWdodCkmJnA9PT0yfHxwPT09NCkmJihnPU1hdGgubWF4KGUuaGVpZ2h0LWQtbSwwKSk7Y29uc3Qgdz1nK2QrbTtsZXQgeD1hLmFsaWdubWVudDt4LmlzRGVmYXVsdCgpJiYoeD10LmRlZmF1bHRBbGlnbm1lbnQpLHguaXNTcG90KCl8fCh4PVNwb3QuQ2VudGVyKSxyJiYobC09Yy53aWR0aCt1LmxlZnQrdS5yaWdodCksYS5HdChsK3gub2Zmc2V0WCt1LmxlZnQsZit4Lm9mZnNldFkrdS50b3ArKGUuaGVpZ2h0KngueS13KngueSksYy53aWR0aCxnKSxyfHwobCs9Yy53aWR0aCt1LmxlZnQrdS5yaWdodCl9fX1QYW5lbExheW91dC54bihcIkhvcml6b250YWxcIixuZXcgUGFuZWxMYXlvdXRIb3Jpem9udGFsKTtjbGFzcyBQYW5lbExheW91dFZlcnRpY2FsIGV4dGVuZHMgUGFuZWxMYXlvdXR7Y29uc3RydWN0b3IoKXtzdXBlcigpfW1lYXN1cmUodCxpLGUscyxuLG8scil7Y29uc3QgbD1zLmxlbmd0aCxoPVUubHQoKSxmPXQuR28oKTtmb3IobGV0IGM9MDtjPGw7YysrKXtjb25zdCB1PXNbY107aWYoIXUudmlzaWJsZSYmdSE9PWYpY29udGludWU7Y29uc3QgZD11LnFzKCExKTtpZihkIT09MCYmZCE9PTQpe2gucHVzaCh1KTtjb250aW51ZX11LmR0KGksMS8wLG8sMCk7Y29uc3QgbT11Lm1hcmdpbixnPXUubWVhc3VyZWRCb3VuZHMscD1NYXRoLm1heChnLndpZHRoK20ucmlnaHQrbS5sZWZ0LDApLHc9TWF0aC5tYXgoZy5oZWlnaHQrbS50b3ArbS5ib3R0b20sMCk7bi5WbihNYXRoLm1heChuLndpZHRoLHApLG4uaGVpZ2h0K3cpfWNvbnN0IGE9aC5sZW5ndGg7dC5kZXNpcmVkU2l6ZS53aWR0aD9pPU1hdGgubWluKHQuZGVzaXJlZFNpemUud2lkdGgsdC5tYXhTaXplLndpZHRoKTpuLndpZHRoIT09MCYmKGk9TWF0aC5taW4obi53aWR0aCx0Lm1heFNpemUud2lkdGgpKTtmb3IobGV0IGM9MDtjPGE7YysrKXtjb25zdCB1PWhbY107aWYoIXUudmlzaWJsZSYmdSE9PWYpY29udGludWU7Y29uc3QgZD11Lm1hcmdpbixtPWQucmlnaHQrZC5sZWZ0LGc9ZC50b3ArZC5ib3R0b207dS5kdChpLDEvMCxvLDApO2NvbnN0IHA9dS5tZWFzdXJlZEJvdW5kcyx3PU1hdGgubWF4KHAud2lkdGgrbSwwKSx4PU1hdGgubWF4KHAuaGVpZ2h0K2csMCk7bi53aWR0aD1NYXRoLm1heChuLndpZHRoLHcpLG4uaGVpZ2h0Kz14fVUudHQoaCl9YXJyYW5nZSh0LGksZSl7Y29uc3Qgcz1pLmxlbmd0aCxuPXQucGFkZGluZyxvPW4ubGVmdCxyPXQuaXNPcHBvc2l0ZTtsZXQgbD1yP2UuaGVpZ2h0Om4udG9wO2ZvcihsZXQgaD0wO2g8cztoKyspe2NvbnN0IGY9byxhPWlbaF07aWYoIWEudmlzaWJsZSljb250aW51ZTtjb25zdCBjPWEubWVhc3VyZWRCb3VuZHMsdT1hLm1hcmdpbixkPXUubGVmdCt1LnJpZ2h0LG09bytuLnJpZ2h0O2xldCBnPWMud2lkdGg7Y29uc3QgcD1hLnFzKCExKTsoaXNOYU4oYS5kZXNpcmVkU2l6ZS53aWR0aCkmJnA9PT0yfHxwPT09NSkmJihnPU1hdGgubWF4KGUud2lkdGgtZC1tLDApKTtjb25zdCB3PWcrZCttO2xldCB4PWEuYWxpZ25tZW50O3guaXNEZWZhdWx0KCkmJih4PXQuZGVmYXVsdEFsaWdubWVudCkseC5pc1Nwb3QoKXx8KHg9U3BvdC5DZW50ZXIpLHImJihsLT1jLmhlaWdodCt1LmJvdHRvbSt1LnRvcCksYS5HdChmK3gub2Zmc2V0WCt1LmxlZnQrKGUud2lkdGgqeC54LXcqeC54KSxsK3gub2Zmc2V0WSt1LnRvcCxnLGMuaGVpZ2h0KSxyfHwobCs9Yy5oZWlnaHQrdS5ib3R0b20rdS50b3ApfX19UGFuZWxMYXlvdXQueG4oXCJWZXJ0aWNhbFwiLG5ldyBQYW5lbExheW91dFZlcnRpY2FsKTtjbGFzcyBQYW5lbExheW91dFNwb3QgZXh0ZW5kcyBQYW5lbExheW91dHtjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9c3RhdGljIFhMPSExO21lYXN1cmUodCxpLGUscyxuLG8scil7Y29uc3QgbD1zLmxlbmd0aDtpZihsPT09MClyZXR1cm47Y29uc3QgaD10LmZpbmRNYWluRWxlbWVudCgpO2xldCBmPWgubWFyZ2luLGE9MCxjPTA7Y29uc3QgdT1mLnJpZ2h0K2YubGVmdCxkPWYudG9wK2YuYm90dG9tO2guZHQoaSxlLG8scik7bGV0IG09aC5tZWFzdXJlZEJvdW5kcyxnPW0ud2lkdGgscD1tLmhlaWdodCx3PU1hdGgubWF4KGcrdSwwKSx4PU1hdGgubWF4KHArZCwwKTtjb25zdCBrPXQuaXNDbGlwcGluZztrJiZoLk0wKCkhPT0wJiYhUGFuZWxMYXlvdXRTcG90LlhMJiYoUGFuZWxMYXlvdXRTcG90LlhMPSEwLFUubnQoXCJNYWluIFNoYXBlIGZvciBTcG90IFBhbmVsIHdpdGggaXNDbGlwcGluZyA9IHRydWUgbXVzdCBoYXZlIGEgemVybyBzdHJva2VXaWR0aDogXCIrdC50b1N0cmluZygpKSk7Y29uc3QgYj1SZWN0LksoLWYubGVmdCwtZi50b3Asdyx4KTtsZXQgUz1SZWN0LksoMCwwLGcscCk7dGhpcy5VUChoLFMsITApLGc9Uy53aWR0aCxwPVMuaGVpZ2h0O2xldCBNPSEwO2NvbnN0IEE9dC5HbygpO2xldCBDO2ZvcihsZXQgUD0wO1A8bDtQKyspe2NvbnN0IE49c1tQXTtsZXQgVD1pLEw9ZTtpZihOPT09aHx8IU4udmlzaWJsZSYmTiE9PUEpY29udGludWU7Zj1OLm1hcmdpbjtsZXQgRD1mLmxlZnQsRj1mLnRvcDtzd2l0Y2goYT1mLnJpZ2h0K2YubGVmdCxjPWYudG9wK2YuYm90dG9tLEM9Ti5xcyghMSksQyl7Y2FzZSAyOlQ9ZyxMPXAsYT0wLGM9MCxEPTAsRj0wO2JyZWFrO2Nhc2UgNTpUPWcsYT0wLEQ9MDticmVhaztjYXNlIDQ6TD1wLGM9MCxGPTA7YnJlYWt9Ti5kdChULEwsMCwwKSxtPU4ubWVhc3VyZWRCb3VuZHMsdz1NYXRoLm1heChtLndpZHRoK2EsMCkseD1NYXRoLm1heChtLmhlaWdodCtjLDApO2xldCBJPU4uYWxpZ25tZW50O0kuaXNEZWZhdWx0KCkmJihJPXQuZGVmYXVsdEFsaWdubWVudCksSS5pc1Nwb3QoKXx8KEk9U3BvdC5DZW50ZXIpO2xldCBSPU4uYWxpZ25tZW50Rm9jdXM7Ui5pc0RlZmF1bHQoKSYmKFI9U3BvdC5DZW50ZXIpO2xldCBPPW51bGw7TiBpbnN0YW5jZW9mIFBhbmVsJiZOLm9vIT09XCJcIiYmKE89Ti5maW5kT2JqZWN0KE4ub28pLE89PT1OJiYoTz1udWxsKSk7bGV0IFk9Uy54LUQsSz1TLnktRjtpZihPIT09bnVsbCl7Ti5HdCgwLDAsbS53aWR0aCxtLmhlaWdodCk7Y29uc3QgQj1PLmFjdHVhbEJvdW5kcyx6PVBvaW50LksoQi54KyhSLngqQi53aWR0aC1SLm9mZnNldFgpLEIueSsoUi55KkIuaGVpZ2h0LVIub2Zmc2V0WSkpO2ZvcihPPU8ucGFuZWw7TyE9PU47KU8uRi5rdCh6KSxPPU8ucGFuZWw7WSs9SS54KmcrSS5vZmZzZXRYLXoueCxLKz1JLnkqcCtJLm9mZnNldFktei55LFBvaW50Lm8oeil9ZWxzZSBZKz1JLngqZytJLm9mZnNldFgtKFIueCptLndpZHRoK1Iub2Zmc2V0WCksSys9SS55KnArSS5vZmZzZXRZLShSLnkqbS5oZWlnaHQrUi5vZmZzZXRZKTtNPyhNPSExLG4ucyhZLEssdyx4KSk6bi51bmlvbk5vQ2hlY2soWSxLLHcseCl9c3dpdGNoKE0/bi5jKGIpOms/bi5pbnRlcnNlY3QoUy54LFMueSxTLndpZHRoLFMuaGVpZ2h0KTpuLnVuaW9uTm9DaGVjayhiLngsYi55LGIud2lkdGgsYi5oZWlnaHQpLFJlY3QubyhiKSxSZWN0Lm8oUyksQz1oLnN0cmV0Y2gsQz09PTEmJihDPWgucXMoITEpKSxDKXtjYXNlIDA6cmV0dXJuO2Nhc2UgMjppZighaXNGaW5pdGUoaSkmJiFpc0Zpbml0ZShlKSlyZXR1cm47YnJlYWs7Y2FzZSA1OmlmKCFpc0Zpbml0ZShpKSlyZXR1cm47YnJlYWs7Y2FzZSA0OmlmKCFpc0Zpbml0ZShlKSlyZXR1cm47YnJlYWt9bT1oLm1lYXN1cmVkQm91bmRzLGc9bS53aWR0aCxwPW0uaGVpZ2h0LHc9TWF0aC5tYXgoZyt1LDApLHg9TWF0aC5tYXgocCtkLDApLGY9aC5tYXJnaW4sUz1SZWN0LksoLWYubGVmdCwtZi50b3Asdyx4KSx0aGlzLlVQKGgsUywhMCksZz1TLndpZHRoLHA9Uy5oZWlnaHQ7Zm9yKGxldCBQPTA7UDxsO1ArKyl7Y29uc3QgTj1zW1BdO2lmKE49PT1ofHwhTi52aXNpYmxlJiZOIT09QSljb250aW51ZTtmPU4ubWFyZ2luLGE9Zi5yaWdodCtmLmxlZnQsYz1mLnRvcCtmLmJvdHRvbSxtPU4ubWVhc3VyZWRCb3VuZHMsdz1NYXRoLm1heChtLndpZHRoK2EsMCkseD1NYXRoLm1heChtLmhlaWdodCtjLDApO2xldCBUPU4uYWxpZ25tZW50O1QuaXNEZWZhdWx0KCkmJihUPXQuZGVmYXVsdEFsaWdubWVudCksVC5pc1Nwb3QoKXx8KFQ9U3BvdC5DZW50ZXIpO2xldCBMPU4uYWxpZ25tZW50Rm9jdXM7TC5pc0RlZmF1bHQoKSYmKEw9U3BvdC5DZW50ZXIpLE0/KE09ITEsbi5zKFQueCpnK1Qub2Zmc2V0WC0oTC54Km0ud2lkdGgrTC5vZmZzZXRYKS1mLmxlZnQsVC55KnArVC5vZmZzZXRZLShMLnkqbS5oZWlnaHQrTC5vZmZzZXRZKS1mLnRvcCx3LHgpKTpuLnVuaW9uTm9DaGVjayhULngqZytULm9mZnNldFgtKEwueCptLndpZHRoK0wub2Zmc2V0WCktZi5sZWZ0LFQueSpwK1Qub2Zmc2V0WS0oTC55Km0uaGVpZ2h0K0wub2Zmc2V0WSktZi50b3Asdyx4KX1NP24uYyhiKTprP24uaW50ZXJzZWN0KFMueCxTLnksUy53aWR0aCxTLmhlaWdodCk6bi51bmlvbk5vQ2hlY2soYi54LGIueSxiLndpZHRoLGIuaGVpZ2h0KSxSZWN0Lm8oUyl9YXJyYW5nZSh0LGksZSl7Y29uc3Qgcz1pLmxlbmd0aDtpZihzPT09MClyZXR1cm47Y29uc3Qgbj10LmZpbmRNYWluRWxlbWVudCgpLG89bi5tZWFzdXJlZEJvdW5kcyxyPW8ud2lkdGgsbD1vLmhlaWdodCxoPXQucGFkZGluZyxmPWgubGVmdCxhPWgudG9wO2xldCBjPWYtZS54LHU9YS1lLnk7bi5HdChjLHUscixsKTtjb25zdCBkPVJlY3QuSygwLDAscixsKTt0aGlzLlVQKG4sZCwhMSk7Zm9yKGxldCBtPTA7bTxzO20rKyl7Y29uc3QgZz1pW21dO2lmKGc9PT1uKWNvbnRpbnVlO2NvbnN0IHA9Zy5tZWFzdXJlZEJvdW5kcyx3PXAud2lkdGgseD1wLmhlaWdodDtsZXQgaz1nLmFsaWdubWVudDtrLmlzRGVmYXVsdCgpJiYoaz10LmRlZmF1bHRBbGlnbm1lbnQpLGsuaXNTcG90KCl8fChrPVNwb3QuQ2VudGVyKTtsZXQgYj1nLmFsaWdubWVudEZvY3VzO2IuaXNEZWZhdWx0KCkmJihiPVNwb3QuQ2VudGVyKTtsZXQgUz1udWxsO2lmKGcgaW5zdGFuY2VvZiBQYW5lbCYmZy5vbyE9PVwiXCImJihTPWcuZmluZE9iamVjdChnLm9vKSxTPT09ZyYmKFM9bnVsbCkpLFMhPT1udWxsKXtjb25zdCBNPVMuYWN0dWFsQm91bmRzLEE9UG9pbnQuSyhNLngrKGIueCpNLndpZHRoLWIub2Zmc2V0WCksTS55KyhiLnkqTS5oZWlnaHQtYi5vZmZzZXRZKSk7Zm9yKFM9Uy5wYW5lbDtTIT09ZzspUy5GLmt0KEEpLFM9Uy5wYW5lbDtjPWsueCpkLndpZHRoK2sub2Zmc2V0WC1BLngsdT1rLnkqZC5oZWlnaHQray5vZmZzZXRZLUEueSxQb2ludC5vKEEpfWVsc2UgYz1rLngqZC53aWR0aCtrLm9mZnNldFgtKGIueCp3K2Iub2Zmc2V0WCksdT1rLnkqZC5oZWlnaHQray5vZmZzZXRZLShiLnkqeCtiLm9mZnNldFkpO2MrPWQueC1lLngsdSs9ZC55LWUueSxnLnZpc2libGUmJmcuR3QoZitjLGErdSx3LHgpfVJlY3QubyhkKX1VUCh0LGksZSl7bGV0IHM9bnVsbDtpZih0IGluc3RhbmNlb2YgUGFuZWwmJnQub28hPT1cIlwiJiYocz10LmZpbmRPYmplY3QodC5vbykscz09PXQmJihzPW51bGwpKSxzIT09bnVsbClmb3IoZSYmdC5HdCgwLDAsaS53aWR0aCxpLmhlaWdodCksaS5jKHMuYWN0dWFsQm91bmRzKSxzPXMucGFuZWw7cyE9PXQ7KXMuRi5ZZyhpKSxzPXMucGFuZWx9fVBhbmVsTGF5b3V0LnhuKFwiU3BvdFwiLG5ldyBQYW5lbExheW91dFNwb3QpO2NsYXNzIFBhbmVsTGF5b3V0QXV0byBleHRlbmRzIFBhbmVsTGF5b3V0e2NvbnN0cnVjdG9yKCl7c3VwZXIoKX1tZWFzdXJlKHQsaSxlLHMsbixvLHIpe2NvbnN0IGw9cy5sZW5ndGg7aWYobD09PTApcmV0dXJuO2NvbnN0IGg9dC5maW5kTWFpbkVsZW1lbnQoKTtsZXQgZj1oLm1hcmdpbixhPWksYz1lO2NvbnN0IHU9Zi5yaWdodCtmLmxlZnQsZD1mLnRvcCtmLmJvdHRvbTtoLmR0KGksZSxvLHIpO2xldCBtPWgubWVhc3VyZWRCb3VuZHMsZz0wLHA9bnVsbDtoIGluc3RhbmNlb2YgU2hhcGUmJihwPWgsZz1wLnN0cm9rZVdpZHRoKnAuc2NhbGUpO2xldCB3PU1hdGgubWF4KG0ud2lkdGgrdSwwKSx4PU1hdGgubWF4KG0uaGVpZ2h0K2QsMCksaz10LkdQKGgpO2NvbnN0IGI9ay54Kncray5vZmZzZXRYLFM9ay55Kngray5vZmZzZXRZO2xldCBNPXQuSFAoaCk7Y29uc3QgQT1NLngqdytNLm9mZnNldFgsQz1NLnkqeCtNLm9mZnNldFk7aXNGaW5pdGUoaSkmJihhPU1hdGgubWF4KE1hdGguYWJzKGItQSktZywwKSksaXNGaW5pdGUoZSkmJihjPU1hdGgubWF4KE1hdGguYWJzKFMtQyktZywwKSk7bGV0IFA9MCxOPTA7bz4wJiYoUD1NYXRoLm1heChNYXRoLmFicyhrLngqbytrLm9mZnNldFgtKE0ueCpvK00ub2Zmc2V0WCkpLWcsMCkpLHI+MCYmKE49TWF0aC5tYXgoTWF0aC5hYnMoay55KnIray5vZmZzZXRZLShNLnkqcitNLm9mZnNldFkpKS1nLDApKTtjb25zdCBUPVNpemUuYSgpO1QucygwLDApO2NvbnN0IEw9dC5HbygpO2ZvcihsZXQgUj0wO1I8bDtSKyspe2NvbnN0IE89c1tSXTtpZihPPT09aHx8IU8udmlzaWJsZSYmTyE9PUwpY29udGludWU7Zj1PLm1hcmdpbjtjb25zdCBZPWYucmlnaHQrZi5sZWZ0LEs9Zi50b3ArZi5ib3R0b207Ty5kdChhLGMsUCxOKSxtPU8ubWVhc3VyZWRCb3VuZHMsdz1NYXRoLm1heChtLndpZHRoK1ksMCkseD1NYXRoLm1heChtLmhlaWdodCtLLDApLFQucyhNYXRoLm1heCh3LFQud2lkdGgpLE1hdGgubWF4KHgsVC5oZWlnaHQpKX1pZihsPT09MSl7bT1oLm1lYXN1cmVkQm91bmRzLG4ud2lkdGg9dyxuLmhlaWdodD14LFNpemUubyhUKTtyZXR1cm59az10LkdQKGgpLE09dC5IUChoKTtsZXQgRD0wLEY9MDtNLnghPT1rLngmJk0ueSE9PWsueSYmKEQ9VC53aWR0aC9NYXRoLmFicyhNLngtay54KSxGPVQuaGVpZ2h0L01hdGguYWJzKE0ueS1rLnkpKSxTaXplLm8oVCksZz0wLHAhPT1udWxsJiYoZz1wLnN0cm9rZVdpZHRoKnAuc2NhbGUscC5wTSgpPT09NiYmKEQ9Rj1NYXRoLm1heChELEYpKSksRCs9TWF0aC5hYnMoay5vZmZzZXRYKStNYXRoLmFicyhNLm9mZnNldFgpK2csRis9TWF0aC5hYnMoay5vZmZzZXRZKStNYXRoLmFicyhNLm9mZnNldFkpK2c7bGV0IEk9aC5zdHJldGNoO3N3aXRjaChJPT09MSYmKEk9aC5xcyghMSkpLEkpe2Nhc2UgMDpvPTAscj0wO2JyZWFrO2Nhc2UgMjppc0Zpbml0ZShpKSYmKEQ9aSksaXNGaW5pdGUoZSkmJihGPWUpO2JyZWFrO2Nhc2UgNTppc0Zpbml0ZShpKSYmKEQ9aSkscj0wO2JyZWFrO2Nhc2UgNDpvPTAsaXNGaW5pdGUoZSkmJihGPWUpO2JyZWFrfWgubGMoKSxoLmR0KEQsRixvLHIpLG4ud2lkdGg9aC5tZWFzdXJlZEJvdW5kcy53aWR0aCt1LG4uaGVpZ2h0PWgubWVhc3VyZWRCb3VuZHMuaGVpZ2h0K2R9YXJyYW5nZSh0LGksZSl7Y29uc3Qgcz1pLmxlbmd0aDtpZihzPT09MClyZXR1cm47Y29uc3Qgbj10LmZpbmRNYWluRWxlbWVudCgpLG89bi5tZWFzdXJlZEJvdW5kcyxyPVJlY3QuYSgpO3IucygwLDAsMSwxKTtsZXQgbD1uLm1hcmdpbjtjb25zdCBoPWwubGVmdCxmPWwudG9wLGE9dC5wYWRkaW5nLGM9YS5sZWZ0LHU9YS50b3A7bGV0IGQ9aCxtPWYsZz1vLndpZHRoLHA9by5oZWlnaHQ7bi5HdChjK2QsdSttLGcscCk7Y29uc3Qgdz10LkdQKG4pLHg9dC5IUChuKSxrPTArdy54Km8ud2lkdGgrdy5vZmZzZXRYLGI9MCt3Lnkqby5oZWlnaHQrdy5vZmZzZXRZLFM9MCt4Lngqby53aWR0aCt4Lm9mZnNldFgsTT0wK3gueSpvLmhlaWdodCt4Lm9mZnNldFk7ci54PWssci55PWIsci51bmlvbk5vQ2hlY2soUyxNLDAsMCksci54Kz1oK2Msci55Kz1mK3U7Zm9yKGxldCBBPTA7QTxzO0ErKyl7Y29uc3QgQz1pW0FdO2lmKEM9PT1uKWNvbnRpbnVlO2NvbnN0IFA9Qy5tZWFzdXJlZEJvdW5kcztsPUMubWFyZ2luO2NvbnN0IE49TWF0aC5tYXgoUC53aWR0aCtsLnJpZ2h0K2wubGVmdCwwKSxUPU1hdGgubWF4KFAuaGVpZ2h0K2wudG9wK2wuYm90dG9tLDApO2xldCBMPUMuYWxpZ25tZW50O0wuaXNEZWZhdWx0KCkmJihMPXQuZGVmYXVsdEFsaWdubWVudCksTC5pc1Nwb3QoKXx8KEw9U3BvdC5DZW50ZXIpLGQ9ci53aWR0aCpMLngrTC5vZmZzZXRYLU4qTC54K2wubGVmdCtyLngsbT1yLmhlaWdodCpMLnkrTC5vZmZzZXRZLVQqTC55K2wudG9wK3IueSxnPXIud2lkdGgscD1yLmhlaWdodCxDLnZpc2libGUmJihSZWN0LmNvbnRhaW5zKHIueCxyLnksci53aWR0aCxyLmhlaWdodCxkLG0sUC53aWR0aCxQLmhlaWdodCk/Qy5HdChkLG0sUC53aWR0aCxQLmhlaWdodCk6Qy5HdChkLG0sUC53aWR0aCxQLmhlaWdodCxuZXcgUmVjdChyLngsci55LHIud2lkdGgsci5oZWlnaHQpKSl9UmVjdC5vKHIpfX1QYW5lbExheW91dC54bihcIkF1dG9cIixuZXcgUGFuZWxMYXlvdXRBdXRvKTtjbGFzcyBQYW5lbExheW91dFRhYmxlIGV4dGVuZHMgUGFuZWxMYXlvdXR7Y29uc3RydWN0b3IoKXtzdXBlcigpLHRoaXMubmFtZT1cIlRhYmxlXCJ9bWVhc3VyZSh0LGksZSxzLG4sbyxyKXtsZXQgbD1zLmxlbmd0aDtjb25zdCBoPVUubHQoKSxmPVUubHQoKTtmb3IobGV0IEc9MDtHPGw7RysrKXtjb25zdCBFPXNbR10scT1FIGluc3RhbmNlb2YgUGFuZWw/RTpudWxsO2lmKHEhPT1udWxsJiZxLmVsKCkmJkUudmlzaWJsZSl7RGVidWcmJihxLmRlc2lyZWRTaXplLmlzUmVhbCgpJiZVLm4ocS50b1N0cmluZygpK1wiIFRhYmxlUm93L1RhYmxlQ29sdW1uIFBhbmVscyBjYW5ub3Qgc2V0IGEgZGVzaXJlZFNpemU6IFwiK3EuZGVzaXJlZFNpemUudG9TdHJpbmcoKSkscS5taW5TaXplLmVxdWFscyhTaXplLkdoKXx8VS5uKHEudG9TdHJpbmcoKStcIiBUYWJsZVJvdy9UYWJsZUNvbHVtbiBQYW5lbHMgY2Fubm90IHNldCBhIG1pblNpemU6IFwiK3EubWluU2l6ZS50b1N0cmluZygpKSxxLm1heFNpemUuZXF1YWxzKFNpemUuTXcpfHxVLm4ocS50b1N0cmluZygpK1wiIFRhYmxlUm93L1RhYmxlQ29sdW1uIFBhbmVscyBjYW5ub3Qgc2V0IGEgbWF4U2l6ZTogXCIrcS5tYXhTaXplLnRvU3RyaW5nKCkpKSxmLnB1c2gocSk7Y29uc3QgWj1xLlQuaCxzdD1aLmxlbmd0aDtmb3IobGV0IHR0PTA7dHQ8c3Q7dHQrKyl7Y29uc3QgaXQ9Wlt0dF07cS50eXBlPT09UGFuZWwuVGFibGVSb3c/aXQucm93PUUucm93OnEudHlwZT09PVBhbmVsLlRhYmxlQ29sdW1uJiYoaXQuY29sdW1uPUUuY29sdW1uKSxoLnB1c2goaXQpfX1lbHNlIGgucHVzaChFKX1sPWgubGVuZ3RoLGw9PT0wJiYodC5nZXRSb3dEZWZpbml0aW9uKDApLHQuZ2V0Q29sdW1uRGVmaW5pdGlvbigwKSk7Y29uc3QgYT1bXTtmb3IobGV0IEc9MDtHPGw7RysrKXtjb25zdCBFPWhbR107RS52aXNpYmxlJiYoRS5wZSghMCksRS50byghMCksYVtFLnJvd118fChhW0Uucm93XT1bXSksYVtFLnJvd11bRS5jb2x1bW5dfHwoYVtFLnJvd11bRS5jb2x1bW5dPVtdKSxhW0Uucm93XVtFLmNvbHVtbl0ucHVzaChFKSl9VS50dChoKTtjb25zdCBjPVUubHQoKSx1PVUubHQoKSxkPVUubHQoKSxtPXtjb3VudDowfSxnPXtjb3VudDowfTtsZXQgcD1pLHc9ZTtjb25zdCB4PXQuV2Usaz10LmplO2xldCBiPW51bGw7bD14Lmxlbmd0aDtmb3IobGV0IEc9MDtHPGw7RysrKWI9eFtHXSxiIT09dm9pZCAwJiYoYi5hY3R1YWw9MCxiLklpPTApO2w9ay5sZW5ndGg7Zm9yKGxldCBHPTA7RzxsO0crKyliPWtbR10sYiE9PXZvaWQgMCYmKGIuYWN0dWFsPTAsYi5JaT0wKTtsZXQgUz1hLmxlbmd0aCxNPTA7Zm9yKGxldCBHPTA7RzxTO0crKylhW0ddJiYoTT1NYXRoLm1heChNLGFbR10ubGVuZ3RoKSk7Y29uc3QgQT1NYXRoLm1pbih0LnRvcEluZGV4LFMtMSksQz1NYXRoLm1pbih0LmxlZnRJbmRleCxNLTEpO2xldCBQPTAsTjtTPWEubGVuZ3RoO2NvbnN0IFQ9dC5HbygpO2ZvcihsZXQgRz0wO0c8UztHKyspe2lmKCFhW0ddKWNvbnRpbnVlO009YVtHXS5sZW5ndGg7Y29uc3QgRT10LmdldFJvd0RlZmluaXRpb24oRyk7RS5hY3R1YWw9MCxFLklpPTA7Zm9yKGxldCBxPTA7cTxNO3ErKyl7aWYoIWFbR11bcV0pY29udGludWU7Y29uc3QgWj10LmdldENvbHVtbkRlZmluaXRpb24ocSk7Y1txXT09PXZvaWQgMCYmKFouYWN0dWFsPTAsWi5JaT0wLGNbcV09ITApO2NvbnN0IHN0PWFbR11bcV0sdHQ9c3QubGVuZ3RoO2ZvcihsZXQgaXQ9MDtpdDx0dDtpdCsrKXtjb25zdCBldD1zdFtpdF07aWYoIWV0LnZpc2libGUmJmV0IT09VCljb250aW51ZTtjb25zdCBjdD1ldC5yb3dTcGFuPjEscnQ9ZXQuY29sdW1uU3Bhbj4xOyhjdHx8cnQpJiYhKEc8QSkmJiEocTxDKSYmdS5wdXNoKGV0KTtjb25zdCBodD1ldC5tYXJnaW4sbnQ9aHQucmlnaHQraHQubGVmdCxvdD1odC50b3AraHQuYm90dG9tO049ZXQuVDAoRSxaLCExKTtjb25zdCBhdD1ldC5kZXNpcmVkU2l6ZSxRPSFpc05hTihhdC53aWR0aCksdXQ9IWlzTmFOKGF0LmhlaWdodCk7aWYoTiE9PTAmJiEoUSYmdXQpJiYhKEc8QSkmJiEocTxDKSYmKCFydCYmbVtxXT09PXZvaWQgMCYmKE49PT0yfHxOPT09NSkmJihtW3FdPS0xLG0uY291bnQrKyksIWN0JiZnW0ddPT09dm9pZCAwJiYoTj09PTJ8fE49PT00KSYmKGdbR109LTEsZy5jb3VudCsrKSwhY3QmJiFydCYmZC5wdXNoKGV0KSksZXQuZHQoMS8wLDEvMCwwLDApLEc8QXx8cTxDKWNvbnRpbnVlO2NvbnN0IGZ0PWV0Lm1lYXN1cmVkQm91bmRzLGR0PU1hdGgubWF4KGZ0LndpZHRoK250LDApLGd0PU1hdGgubWF4KGZ0LmhlaWdodCtvdCwwKTtpZihldC5yb3dTcGFuPT09MSYmKE49PT0wfHxOPT09NSkpe2I9dC5nZXRSb3dEZWZpbml0aW9uKEcpO2NvbnN0IG10PWIuY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmcoKSxwdD1iLnN0PT09MDtQPU1hdGgubWF4KGd0LWIuYWN0dWFsLDApLFArKHB0P210OjApPncmJihQPU1hdGgubWF4KHctbXQsMCkpLGIuSWk9Yi5JaStQLGIuYWN0dWFsPWIuc3QrUCx3PU1hdGgubWF4KHctKFArKHB0P210OjApKSwwKX1pZihldC5jb2x1bW5TcGFuPT09MSYmKE49PT0wfHxOPT09NCkpe2I9dC5nZXRDb2x1bW5EZWZpbml0aW9uKHEpO2NvbnN0IG10PWIuY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmcoKSxwdD1iLnN0PT09MDtQPU1hdGgubWF4KGR0LWIuYWN0dWFsLDApLFArKHB0P210OjApPnAmJihQPU1hdGgubWF4KHAtbXQsMCkpLGIuSWk9Yi5JaStQLGIuYWN0dWFsPWIuc3QrUCxwPU1hdGgubWF4KHAtKFArKHB0P210OjApKSwwKX0oY3R8fHJ0KSYmZXQubGMoKX19fVUudHQoYyk7bGV0IEw9MCxEPTA7bD10LmNvbHVtbkNvdW50O2ZvcihsZXQgRz0wO0c8bDtHKyspe2NvbnN0IEU9a1tHXTtFIT09dm9pZCAwJiYoTCs9aXNOYU4oRS55ZSk/RS5JaTpFLnllLEUuSWkhPT0wJiYoTCs9RS5jb21wdXRlRWZmZWN0aXZlU3BhY2luZygpKSl9bD10LnJvd0NvdW50O2ZvcihsZXQgRz0wO0c8bDtHKyspe2NvbnN0IEU9eFtHXTtFIT09dm9pZCAwJiYoRCs9aXNOYU4oRS55ZSk/RS5JaTpFLnllLEUuSWkhPT0wJiYoRCs9RS5jb21wdXRlRWZmZWN0aXZlU3BhY2luZygpKSl9cD1NYXRoLm1heChpLUwsMCksdz1NYXRoLm1heChlLUQsMCk7bGV0IEY9dyxJPXA7bD1kLmxlbmd0aDtmb3IobGV0IEc9MDtHPGw7RysrKXtjb25zdCBFPWRbR10scT10LmdldFJvd0RlZmluaXRpb24oRS5yb3cpLFo9dC5nZXRDb2x1bW5EZWZpbml0aW9uKEUuY29sdW1uKSxzdD1FLm1lYXN1cmVkQm91bmRzLHR0PUUubWFyZ2luLGl0PXR0LnJpZ2h0K3R0LmxlZnQsZXQ9dHQudG9wK3R0LmJvdHRvbTtaLklpPT09MCYmbVtFLmNvbHVtbl0hPT12b2lkIDA/bVtFLmNvbHVtbl09TWF0aC5tYXgoc3Qud2lkdGgraXQsbVtFLmNvbHVtbl0pOm1bRS5jb2x1bW5dPW51bGwscS5JaT09PTAmJmdbRS5yb3ddIT09dm9pZCAwP2dbRS5yb3ddPU1hdGgubWF4KHN0LmhlaWdodCtldCxnW0Uucm93XSk6Z1tFLnJvd109bnVsbH1sZXQgUj0wLE89MCxZO2ZvcihZIGluIGcpWSE9PVwiY291bnRcIiYmKFIrPWdbWV0pO2ZvcihZIGluIG0pWSE9PVwiY291bnRcIiYmKE8rPW1bWV0pO2NvbnN0IEs9U2l6ZS5hKCk7Zm9yKGxldCBHPTA7RzxsO0crKyl7Y29uc3QgRT1kW0ddO2lmKCFFLnZpc2libGUmJkUhPT1UKWNvbnRpbnVlO2NvbnN0IHE9dC5nZXRSb3dEZWZpbml0aW9uKEUucm93KSxaPXQuZ2V0Q29sdW1uRGVmaW5pdGlvbihFLmNvbHVtbik7bGV0IHN0PTA7aXNGaW5pdGUoWi53aWR0aCk/c3Q9Wi53aWR0aDooaXNGaW5pdGUocCkmJm1bRS5jb2x1bW5dIT09bnVsbD9PPT09MD9zdD1aLmFjdHVhbCtwOnN0PW1bRS5jb2x1bW5dL08qSTptW0UuY29sdW1uXSE9PW51bGw/c3Q9cDpzdD1aLmFjdHVhbHx8cCxzdD1NYXRoLm1heCgwLHN0LVouY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmcoKSkpO2xldCB0dD0wO3N3aXRjaChpc0Zpbml0ZShxLmhlaWdodCk/dHQ9cS5oZWlnaHQ6KGlzRmluaXRlKHcpJiZnW0Uucm93XSE9PW51bGw/Uj09PTA/dHQ9cS5hY3R1YWwrdzp0dD1nW0Uucm93XS9SKkY6Z1tFLnJvd10hPT1udWxsP3R0PXc6dHQ9cS5hY3R1YWx8fHcsdHQ9TWF0aC5tYXgoMCx0dC1xLmNvbXB1dGVFZmZlY3RpdmVTcGFjaW5nKCkpKSxLLnMoTWF0aC5tYXgoWi5taW5pbXVtLE1hdGgubWluKHN0LFoubWF4aW11bSkpLE1hdGgubWF4KHEubWluaW11bSxNYXRoLm1pbih0dCxxLm1heGltdW0pKSksTj1FLlQwKHEsWiwhMSksTil7Y2FzZSA1OksuaGVpZ2h0PU1hdGgubWF4KEsuaGVpZ2h0LHEuYWN0dWFsK3cpO2JyZWFrO2Nhc2UgNDpLLndpZHRoPU1hdGgubWF4KEsud2lkdGgsWi5hY3R1YWwrcCk7YnJlYWt9Y29uc3QgaXQ9RS5tYXJnaW4sZXQ9aXQucmlnaHQraXQubGVmdCxjdD1pdC50b3AraXQuYm90dG9tO0UubGMoKTtsZXQgcnQ9Wi5taW5pbXVtLGh0PXEubWluaW11bTtjb25zdCBudD1FLm1lYXN1cmVkQm91bmRzO250LndpZHRoPT09MCYmbVtFLmNvbHVtbl0hPT1udWxsJiYocnQ9TWF0aC5tYXgocnQsbVtFLmNvbHVtbl0pKSxudC5oZWlnaHQ9PT0wJiZnW0Uucm93XSE9PW51bGwmJihodD1NYXRoLm1heChydCxnW0Uucm93XSkpLEUuZHQoSy53aWR0aCxLLmhlaWdodCxydCxodCk7Y29uc3Qgb3Q9RS5tZWFzdXJlZEJvdW5kcztsZXQgYXQ9TWF0aC5tYXgob3Qud2lkdGgrZXQsMCksUT1NYXRoLm1heChvdC5oZWlnaHQrY3QsMCk7aXNGaW5pdGUocCkmJihhdD1NYXRoLm1pbihhdCxLLndpZHRoKSksaXNGaW5pdGUodykmJihRPU1hdGgubWluKFEsSy5oZWlnaHQpKTtsZXQgdXQ9MDt1dD1xLmFjdHVhbCxxLmFjdHVhbD1NYXRoLm1heChxLmFjdHVhbCxRKSxxLklpPU1hdGgubWF4KHEuSWksUSksUD1xLmFjdHVhbC11dCx3PU1hdGgubWF4KHctUCwwKSxnW0Uucm93XT09PW51bGwmJihGPU1hdGgubWF4KEYtUCwwKSksdXQ9Wi5hY3R1YWwsWi5hY3R1YWw9TWF0aC5tYXgoWi5hY3R1YWwsYXQpLFouSWk9TWF0aC5tYXgoWi5JaSxhdCksUD1aLmFjdHVhbC11dCxwPU1hdGgubWF4KHAtUCwwKSxtW0UuY29sdW1uXT09PW51bGwmJihJPU1hdGgubWF4KEktUCwwKSl9VS50dChkKTtjb25zdCBCPVNpemUuYSgpLHo9VS5sdCgpLFY9VS5sdCgpO2lmKGw9dS5sZW5ndGgsbCE9PTApZm9yKGxldCBHPTA7RzxTO0crKyl7aWYoIWFbR10pY29udGludWU7TT1hW0ddLmxlbmd0aDtjb25zdCBFPXQuZ2V0Um93RGVmaW5pdGlvbihHKTt6W0ddPUUuYWN0dWFsO2ZvcihsZXQgcT0wO3E8TTtxKyspe2lmKCFhW0ddW3FdKWNvbnRpbnVlO2NvbnN0IFo9dC5nZXRDb2x1bW5EZWZpbml0aW9uKHEpO1ZbcV09Wi5hY3R1YWx9fWZvcihsZXQgRz0wO0c8bDtHKyspe2NvbnN0IEU9dVtHXTtpZighRS52aXNpYmxlJiZFIT09VCljb250aW51ZTtjb25zdCBxPXQuZ2V0Um93RGVmaW5pdGlvbihFLnJvdyksWj10LmdldENvbHVtbkRlZmluaXRpb24oRS5jb2x1bW4pO3N3aXRjaChLLnMoTWF0aC5tYXgoWi5taW5pbXVtLE1hdGgubWluKGksWi5tYXhpbXVtKSksTWF0aC5tYXgocS5taW5pbXVtLE1hdGgubWluKGUscS5tYXhpbXVtKSkpLE49RS5UMChxLFosITEpLE4pe2Nhc2UgMjpWW1ouaW5kZXhdIT09MCYmKEsud2lkdGg9TWF0aC5taW4oSy53aWR0aCxWW1ouaW5kZXhdKSkseltxLmluZGV4XSE9PTAmJihLLmhlaWdodD1NYXRoLm1pbihLLmhlaWdodCx6W3EuaW5kZXhdKSk7YnJlYWs7Y2FzZSA1OlZbWi5pbmRleF0hPT0wJiYoSy53aWR0aD1NYXRoLm1pbihLLndpZHRoLFZbWi5pbmRleF0pKTticmVhaztjYXNlIDQ6eltxLmluZGV4XSE9PTAmJihLLmhlaWdodD1NYXRoLm1pbihLLmhlaWdodCx6W3EuaW5kZXhdKSk7YnJlYWt9aXNGaW5pdGUoWi53aWR0aCkmJihLLndpZHRoPVoud2lkdGgpLGlzRmluaXRlKHEuaGVpZ2h0KSYmKEsuaGVpZ2h0PXEuaGVpZ2h0KSxCLnMoMCwwKTtsZXQgc3Q9Wi5taW5pbXVtLHR0PXEubWluaW11bTtmb3IobGV0IFE9MTtRPEUucm93U3BhbiYmIShFLnJvdytRPj10LnJvd0NvdW50KTtRKyspYj10LmdldFJvd0RlZmluaXRpb24oRS5yb3crUSksUD0wLE49PT0yfHxOPT09ND9QPU1hdGgubWF4KGIubWluaW11bSx6W0Uucm93K1FdPT09MD9iLm1heGltdW06TWF0aC5taW4oeltFLnJvdytRXSxiLm1heGltdW0pKTpQPU1hdGgubWF4KGIubWluaW11bSxpc05hTihiLnllKT9iLm1heGltdW06TWF0aC5taW4oYi55ZSxiLm1heGltdW0pKSxCLmhlaWdodCs9UCx0dCs9Yi5taW5pbXVtO2ZvcihsZXQgUT0xO1E8RS5jb2x1bW5TcGFuJiYhKEUuY29sdW1uK1E+PXQuY29sdW1uQ291bnQpO1ErKyliPXQuZ2V0Q29sdW1uRGVmaW5pdGlvbihFLmNvbHVtbitRKSxQPTAsTj09PTJ8fE49PT01P1A9TWF0aC5tYXgoYi5taW5pbXVtLFZbRS5jb2x1bW4rUV09PT0wP2IubWF4aW11bTpNYXRoLm1pbihWW0UuY29sdW1uK1FdLGIubWF4aW11bSkpOlA9TWF0aC5tYXgoYi5taW5pbXVtLGlzTmFOKGIueWUpP2IubWF4aW11bTpNYXRoLm1pbihiLnllLGIubWF4aW11bSkpLEIud2lkdGgrPVAsc3QrPWIubWluaW11bTtLLndpZHRoKz1CLndpZHRoLEsuaGVpZ2h0Kz1CLmhlaWdodDtjb25zdCBpdD1FLm1hcmdpbixldD1pdC5yaWdodCtpdC5sZWZ0LGN0PWl0LnRvcCtpdC5ib3R0b207RS5kdChLLndpZHRoLEsuaGVpZ2h0LHN0LHR0KTtjb25zdCBydD1FLm1lYXN1cmVkQm91bmRzLGh0PU1hdGgubWF4KHJ0LndpZHRoK2V0LDApLG50PU1hdGgubWF4KHJ0LmhlaWdodCtjdCwwKTtsZXQgb3Q9MDtmb3IobGV0IFE9MDtRPEUucm93U3BhbiYmIShFLnJvdytRPj10LnJvd0NvdW50KTtRKyspYj10LmdldFJvd0RlZmluaXRpb24oRS5yb3crUSksb3QrPWIudG90YWx8fDA7aWYob3Q8bnQpe2xldCBRPW50LW90O2NvbnN0IHV0PW50LW90O2lmKEUuc3BhbkFsbG9jYXRpb24hPT1udWxsKXtjb25zdCBsdD1FLnNwYW5BbGxvY2F0aW9uO2ZvcihsZXQgZnQ9MDtmdDxFLnJvd1NwYW4mJiEoUTw9MHx8RS5yb3crZnQ+PXQucm93Q291bnQpO2Z0Kyspe2I9dC5nZXRSb3dEZWZpbml0aW9uKEUucm93K2Z0KTtjb25zdCBkdD1iLnN0fHwwLGd0PWx0KEUsYix1dCk7RGVidWcmJnR5cGVvZiBndCE9XCJudW1iZXJcIiYmVS5uKEUrXCIgc3BhbkFsbG9jYXRpb24gZG9lcyBub3QgcmV0dXJuIGEgbnVtYmVyOiBcIitndCksYi5hY3R1YWw9TWF0aC5taW4oYi5tYXhpbXVtLGR0K2d0KSxiLnN0IT09ZHQmJihRLT1iLnN0LWR0KX19Zm9yKDtRPjA7KXtjb25zdCBsdD1iLnN0fHwwO2lmKGlzTmFOKGIuaGVpZ2h0KSYmYi5tYXhpbXVtPmx0JiYoYi5hY3R1YWw9TWF0aC5taW4oYi5tYXhpbXVtLGx0K1EpLGIuc3QhPT1sdCYmKFEtPWIuc3QtbHQpKSxiLmluZGV4PT09MClicmVhaztiPXQuZ2V0Um93RGVmaW5pdGlvbihiLmluZGV4LTEpfX1sZXQgYXQ9MDtmb3IobGV0IFE9MDtRPEUuY29sdW1uU3BhbiYmIShFLmNvbHVtbitRPj10LmNvbHVtbkNvdW50KTtRKyspYj10LmdldENvbHVtbkRlZmluaXRpb24oRS5jb2x1bW4rUSksYXQrPWIudG90YWx8fDA7aWYoYXQ8aHQpe2xldCBRPWh0LWF0O2NvbnN0IHV0PWh0LWF0O2lmKEUuc3BhbkFsbG9jYXRpb24hPT1udWxsKXtjb25zdCBsdD1FLnNwYW5BbGxvY2F0aW9uO2ZvcihsZXQgZnQ9MDtmdDxFLmNvbHVtblNwYW4mJiEoUTw9MHx8RS5jb2x1bW4rZnQ+PXQuY29sdW1uQ291bnQpO2Z0Kyspe2I9dC5nZXRDb2x1bW5EZWZpbml0aW9uKEUuY29sdW1uK2Z0KTtjb25zdCBkdD1iLnN0fHwwLGd0PWx0KEUsYix1dCk7RGVidWcmJnR5cGVvZiBndCE9XCJudW1iZXJcIiYmVS5uKEUrXCIgc3BhbkFsbG9jYXRpb24gZG9lcyBub3QgcmV0dXJuIGEgbnVtYmVyOiBcIitndCksYi5hY3R1YWw9TWF0aC5taW4oYi5tYXhpbXVtLGR0K2d0KSxiLnN0IT09ZHQmJihRLT1iLnN0LWR0KX19Zm9yKDtRPjA7KXtjb25zdCBsdD1iLnN0fHwwO2lmKGlzTmFOKGIud2lkdGgpJiZiLm1heGltdW0+bHQmJihiLmFjdHVhbD1NYXRoLm1pbihiLm1heGltdW0sbHQrUSksYi5zdCE9PWx0JiYoUS09Yi5zdC1sdCkpLGIuaW5kZXg9PT0wKWJyZWFrO2I9dC5nZXRDb2x1bW5EZWZpbml0aW9uKGIuaW5kZXgtMSl9fX1VLnR0KHUpLFNpemUubyhCKSxTaXplLm8oSykseiE9PXZvaWQgMCYmVS50dCh6KSxWIT09dm9pZCAwJiZVLnR0KFYpO2xldCBIPTAsVz0wO2NvbnN0IGo9dC5kZXNpcmVkU2l6ZSwkPXQubWF4U2l6ZTtOPXQucXMoITApLEw9MCxEPTA7bGV0IFg9MCxKPTA7bD10LmNvbHVtbkNvdW50O2ZvcihsZXQgRz0wO0c8bDtHKyspaWYoa1tHXSE9PXZvaWQgMCl7aWYoYj10LmdldENvbHVtbkRlZmluaXRpb24oRyksaXNGaW5pdGUoYi53aWR0aCkpe1grPWIud2lkdGgsWCs9Yi5jb21wdXRlRWZmZWN0aXZlU3BhY2luZygpO2NvbnRpbnVlfWVsc2UgaWYoYi5mYigpPT09Mil7WCs9Yi5zdCxYKz1iLmNvbXB1dGVFZmZlY3RpdmVTcGFjaW5nKCk7Y29udGludWV9Yi5zdCE9PTAmJihMKz1iLnN0LEwrPWIuY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmcoKSl9aXNGaW5pdGUoai53aWR0aCk/SD1NYXRoLm1pbihqLndpZHRoLCQud2lkdGgpOk4hPT0wJiZpc0Zpbml0ZShpKT9IPWk6SD1MLEg9TWF0aC5tYXgoSCxpc0Zpbml0ZShpKT9NYXRoLm1pbihvLGkpOm8pLEg9TWF0aC5tYXgoSC1YLDApO2NvbnN0IHY9TD09PTA/MTpNYXRoLm1heChIL0wsMSk7Zm9yKGxldCBHPTA7RzxsO0crKylrW0ddIT09dm9pZCAwJiYoYj10LmdldENvbHVtbkRlZmluaXRpb24oRyksIWlzRmluaXRlKGIud2lkdGgpJiZiLmZiKCkhPT0yJiYoYi5hY3R1YWw9Yi5zdCp2KSxiLnBvc2l0aW9uPW4ud2lkdGgsYi5zdCE9PTAmJihuLndpZHRoKz1iLnN0LG4ud2lkdGgrPWIuY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmcoKSkpO2w9dC5yb3dDb3VudDtmb3IobGV0IEc9MDtHPGw7RysrKWlmKHhbR10hPT12b2lkIDApe2lmKGI9dC5nZXRSb3dEZWZpbml0aW9uKEcpLGlzRmluaXRlKGIuaGVpZ2h0KSl7Sis9Yi5oZWlnaHQsSis9Yi5jb21wdXRlRWZmZWN0aXZlU3BhY2luZygpO2NvbnRpbnVlfWVsc2UgaWYoYi5mYigpPT09Mil7Sis9Yi5zdCxKKz1iLmNvbXB1dGVFZmZlY3RpdmVTcGFjaW5nKCk7Y29udGludWV9Yi5zdCE9PTAmJihEKz1iLnN0LEQrPWIuY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmcoKSl9aXNGaW5pdGUoai5oZWlnaHQpP1c9TWF0aC5taW4oai5oZWlnaHQsJC5oZWlnaHQpOk4hPT0wJiZpc0Zpbml0ZShlKT9XPWU6Vz1ELFc9TWF0aC5tYXgoVyxpc0Zpbml0ZShlKT9NYXRoLm1pbihyLGUpOnIpLFc9TWF0aC5tYXgoVy1KLDApO2NvbnN0IF89RD09PTA/MTpNYXRoLm1heChXL0QsMSk7Zm9yKGxldCBHPTA7RzxsO0crKyl4W0ddIT09dm9pZCAwJiYoYj10LmdldFJvd0RlZmluaXRpb24oRyksIWlzRmluaXRlKGIuaGVpZ2h0KSYmYi5mYigpIT09MiYmKGIuYWN0dWFsPWIuc3QqXyksYi5wb3NpdGlvbj1uLmhlaWdodCxiLnN0IT09MCYmKG4uaGVpZ2h0Kz1iLnN0LG4uaGVpZ2h0Kz1iLmNvbXB1dGVFZmZlY3RpdmVTcGFjaW5nKCkpKTtsPWYubGVuZ3RoO2ZvcihsZXQgRz0wO0c8bDtHKyspe2NvbnN0IEU9ZltHXTtsZXQgcT0wLFo9MDtFLnR5cGU9PT1QYW5lbC5UYWJsZVJvdz8ocT1uLndpZHRoLGI9dC5nZXRSb3dEZWZpbml0aW9uKEUucm93KSxaPWIuYWN0dWFsKTooYj10LmdldENvbHVtbkRlZmluaXRpb24oRS5jb2x1bW4pLHE9Yi5hY3R1YWwsWj1uLmhlaWdodCksRS5tZWFzdXJlZEJvdW5kcy5zKDAsMCxxLFopLEUucGUoITEpfVUudHQoZiksdC5TaD1hfWFycmFuZ2UodCxpLGUpe2NvbnN0IHM9aS5sZW5ndGgsbj10LnBhZGRpbmcsbz1uLmxlZnQscj1uLnRvcCxsPXQuU2g7aWYobD09PW51bGwpcmV0dXJuO2xldCBoPTAsZj0wO2NvbnN0IGE9bC5sZW5ndGg7bGV0IGM9MDtmb3IobGV0IEM9MDtDPGE7QysrKWxbQ10mJihjPU1hdGgubWF4KGMsbFtDXS5sZW5ndGgpKTtjb25zdCB1PXQuV2UsZD10LmplO2xldCBtPTAsZz0wLHA9TWF0aC5taW4odC50b3BJbmRleCxhLTEpO2lmKHUubGVuZ3RoPjApe2Zvcig7cCE9PWEmJih1W3BdPT09dm9pZCAwfHx1W3BdLnN0PT09MCk7KXArKztwPU1hdGgubWF4KE1hdGgubWluKHAsYS0xKSwwKSxtPS11W3BdLnBvc2l0aW9ufWxldCB3PU1hdGgubWluKHQubGVmdEluZGV4LGMtMSk7aWYoZC5sZW5ndGg+MCl7Zm9yKDt3IT09YyYmKGRbd109PT12b2lkIDB8fGRbd10uc3Q9PT0wKTspdysrO3c9TWF0aC5tYXgoTWF0aC5taW4odyxjLTEpLDApLGc9LWRbd10ucG9zaXRpb259bGV0IHg9MCxrPTA7Zm9yKDt4IT09YSYmdVt4XT09PXZvaWQgMDspeCsrO2Zvcig7ayE9PWEmJmRba109PT12b2lkIDA7KWsrKztjb25zdCBiPXQucGFydDtsZXQgUz10LmdldFJvd0RlZmluaXRpb24oeCksTT10LmdldENvbHVtbkRlZmluaXRpb24oayk7Zm9yKGxldCBDPTA7QzxpLmxlbmd0aDtDKyspe2NvbnN0IFA9aVtDXTtpZighKFAgaW5zdGFuY2VvZiBQYW5lbCYmUC52aXNpYmxlJiZQLmVsKCkpKWNvbnRpbnVlO1AudHlwZT09PVBhbmVsLlRhYmxlUm93PyhTPXQuZ2V0Um93RGVmaW5pdGlvbihQLnJvdyksTT10LmdldENvbHVtbkRlZmluaXRpb24oaykpOihTPXQuZ2V0Um93RGVmaW5pdGlvbih4KSxNPXQuZ2V0Q29sdW1uRGVmaW5pdGlvbihQLmNvbHVtbikpLGY9Uy5wb3NpdGlvbittK3IsUy5zdCE9PTAmJihmKz1TLmNvbXB1dGVFZmZlY3RpdmVTcGFjaW5nVG9wKE1hdGgubWF4KHgscCkpKSxoPU0ucG9zaXRpb24rZytvLE0uc3QhPT0wJiYoaCs9TS5jb21wdXRlRWZmZWN0aXZlU3BhY2luZ1RvcChNYXRoLm1heChrLHcpKSk7Y29uc3QgTj1QLm1lYXN1cmVkQm91bmRzO1Auc2MoKSxQLmFjdHVhbEJvdW5kcy5BdCgpO2NvbnN0IFQ9UC5hY3R1YWxCb3VuZHMsTD1SZWN0LksoVC54LFQueSxULndpZHRoLFQuaGVpZ2h0KTtpZihULng9UC50eXBlPT09UGFuZWwuVGFibGVSb3c/bzpoLFQueT1QLnR5cGU9PT1QYW5lbC5UYWJsZUNvbHVtbj9yOmYsVC53aWR0aD1OLndpZHRoLFQuaGVpZ2h0PU4uaGVpZ2h0LFAuYWN0dWFsQm91bmRzLnAoKSxQLnRvKCExKSxMLmVxdWFsc0FwcHJveENsb3NlKFQpKXtSZWN0Lm8oTCk7Y29udGludWV9YiE9PW51bGwmJihiLndoKCksUC5OMChiKSksUmVjdC5vKEwpfWNvbnN0IEE9U2l6ZS5hKCk7Zm9yKGxldCBDPTA7QzxhO0MrKyl7aWYoIWxbQ10pY29udGludWU7Yz1sW0NdLmxlbmd0aDtjb25zdCBQPXQuZ2V0Um93RGVmaW5pdGlvbihDKTtmPVAucG9zaXRpb24rbStyLFAuc3QhPT0wJiYoZis9UC5jb21wdXRlRWZmZWN0aXZlU3BhY2luZ1RvcChNYXRoLm1heCh4LHApKSk7Zm9yKGxldCBOPTA7TjxjO04rKyl7aWYoIWxbQ11bTl0pY29udGludWU7Y29uc3QgVD10LmdldENvbHVtbkRlZmluaXRpb24oTik7aD1ULnBvc2l0aW9uK2crbyxULnN0IT09MCYmKGgrPVQuY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmdUb3AoTWF0aC5tYXgoayx3KSkpO2NvbnN0IEw9bFtDXVtOXSxEPUwubGVuZ3RoO2ZvcihsZXQgRj0wO0Y8RDtGKyspe2NvbnN0IEk9TFtGXSxSPUkubWVhc3VyZWRCb3VuZHM7QS5zKDAsMCk7Zm9yKGxldCBudD0xO250PEkucm93U3BhbiYmIShDK250Pj10LnJvd0NvdW50KTtudCsrKXtjb25zdCBvdD10LmdldFJvd0RlZmluaXRpb24oQytudCk7b3Quc3QhPT0wJiYoQS5oZWlnaHQrPW90LnRvdGFsKX1mb3IobGV0IG50PTE7bnQ8SS5jb2x1bW5TcGFuJiYhKE4rbnQ+PXQuY29sdW1uQ291bnQpO250Kyspe2NvbnN0IG90PXQuZ2V0Q29sdW1uRGVmaW5pdGlvbihOK250KTtvdC5zdCE9PTAmJihBLndpZHRoKz1vdC50b3RhbCl9Y29uc3QgTz1ULnN0K0Eud2lkdGgsWT1QLnN0K0EuaGVpZ2h0O2xldCBLPWgsQj1mO2NvbnN0IHo9TyxWPVksSD1oLFc9ZjtsZXQgaj1PLCQ9WTtoK08+ZS53aWR0aCYmKGo9TWF0aC5tYXgoZS53aWR0aC1oLDApKSxmK1k+ZS5oZWlnaHQmJigkPU1hdGgubWF4KGUuaGVpZ2h0LWYsMCkpO2xldCBYPUkuYWxpZ25tZW50LEo9MCx2PTAsXz0wLEc9MDtpZihYLmlzRGVmYXVsdCgpKXtYPXQuZGVmYXVsdEFsaWdubWVudCxYLmlzU3BvdCgpfHwoWD1TcG90LkNlbnRlciksSj1YLngsdj1YLnksXz1YLm9mZnNldFgsRz1YLm9mZnNldFk7Y29uc3QgbnQ9VC5hbGlnbm1lbnQsb3Q9UC5hbGlnbm1lbnQ7bnQuaXNTcG90KCkmJihKPW50LngsXz1udC5vZmZzZXRYKSxvdC5pc1Nwb3QoKSYmKHY9b3QueSxHPW90Lm9mZnNldFkpfWVsc2UgSj1YLngsdj1YLnksXz1YLm9mZnNldFgsRz1YLm9mZnNldFk7KGlzTmFOKEopfHxpc05hTih2KSkmJihKPS41LHY9LjUsXz0wLEc9MCk7bGV0IEU9Ui53aWR0aCxxPVIuaGVpZ2h0O2NvbnN0IFo9SS5tYXJnaW4sc3Q9Wi5sZWZ0K1oucmlnaHQsdHQ9Wi50b3ArWi5ib3R0b20saXQ9SS5UMChQLFQsITEpO2lzTmFOKEkuZGVzaXJlZFNpemUud2lkdGgpJiYoaXQ9PT0yfHxpdD09PTUpJiYoRT1NYXRoLm1heChPLXN0LDApKSxpc05hTihJLmRlc2lyZWRTaXplLmhlaWdodCkmJihpdD09PTJ8fGl0PT09NCkmJihxPU1hdGgubWF4KFktdHQsMCkpO2NvbnN0IGV0PUkubWF4U2l6ZSxjdD1JLm1pblNpemU7RT1NYXRoLm1pbihldC53aWR0aCxFKSxxPU1hdGgubWluKGV0LmhlaWdodCxxKSxFPU1hdGgubWF4KGN0LndpZHRoLEUpLHE9TWF0aC5tYXgoY3QuaGVpZ2h0LHEpO2NvbnN0IHJ0PUUrc3QsaHQ9cSt0dDtLKz16KkotcnQqSitfK1oubGVmdCxCKz1WKnYtaHQqditHK1oudG9wLEkudmlzaWJsZSYmKFJlY3QuY29udGFpbnMoSCxXLGosJCxLLEIsUi53aWR0aCxSLmhlaWdodCk/SS5HdChLLEIsRSxxKTpJLkd0KEssQixFLHEsbmV3IFJlY3QoSCxXLGosJCkpKX19fVNpemUubyhBKTtmb3IobGV0IEM9MDtDPHM7QysrKXtjb25zdCBQPWlbQ10sTj1QIGluc3RhbmNlb2YgUGFuZWw/UDpudWxsO2lmKE4hPT1udWxsJiZOLmVsKCkpe2NvbnN0IFQ9UC5hY3R1YWxCb3VuZHM7UC5uYXR1cmFsQm91bmRzLkF0KCksUC5uYXR1cmFsQm91bmRzLnMoMCwwLFQud2lkdGgsVC5oZWlnaHQpLFAubmF0dXJhbEJvdW5kcy5wKCl9fX19UGFuZWxMYXlvdXQueG4oXCJUYWJsZVwiLG5ldyBQYW5lbExheW91dFRhYmxlKTtjbGFzcyBQYW5lbExheW91dFRhYmxlUm93IGV4dGVuZHMgUGFuZWxMYXlvdXR7Y29uc3RydWN0b3IoKXtzdXBlcigpfW1lYXN1cmUodCxpLGUscyxuLG8scil7fWFycmFuZ2UodCxpLGUpe319UGFuZWxMYXlvdXQueG4oXCJUYWJsZVJvd1wiLG5ldyBQYW5lbExheW91dFRhYmxlUm93KTtjbGFzcyBQYW5lbExheW91dFRhYmxlQ29sdW1uIGV4dGVuZHMgUGFuZWxMYXlvdXR7Y29uc3RydWN0b3IoKXtzdXBlcigpfW1lYXN1cmUodCxpLGUscyxuLG8scil7fWFycmFuZ2UodCxpLGUpe319UGFuZWxMYXlvdXQueG4oXCJUYWJsZUNvbHVtblwiLG5ldyBQYW5lbExheW91dFRhYmxlQ29sdW1uKTtjbGFzcyBQYW5lbExheW91dFZpZXdib3ggZXh0ZW5kcyBQYW5lbExheW91dHtjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9bWVhc3VyZSh0LGksZSxzLG4sbyxyKXtzLmxlbmd0aCE9PTEmJlUubihcIlZpZXdib3ggUGFuZWwgbXVzdCBjb250YWluIGV4YWN0bHkgb25lIEdyYXBoT2JqZWN0LlwiKTtjb25zdCBoPXNbMF07aC5vdD0xLGgubGMoKSxoLmR0KDEvMCwxLzAsbyxyKTtsZXQgZj1oLm1lYXN1cmVkQm91bmRzO2NvbnN0IGE9aC5tYXJnaW4sYz1hLnJpZ2h0K2EubGVmdCx1PWEudG9wK2EuYm90dG9tO2lmKGlzRmluaXRlKGkpfHxpc0Zpbml0ZShlKSl7Y29uc3QgZD1oLnNjYWxlLG09Zi53aWR0aCxnPWYuaGVpZ2h0LHA9TWF0aC5tYXgoaS1jLDApLHc9TWF0aC5tYXgoZS11LDApO2xldCB4PTE7dC52aWV3Ym94U3RyZXRjaD09PTY/KG0hPT0wJiZnIT09MCYmKHg9TWF0aC5taW4ocC9tLHcvZykpLHg9PT0wJiYoeD0xZS00KSxoLm90Kj14KToobSE9PTAmJmchPT0wJiYoeD1NYXRoLm1heChwL20sdy9nKSkseD09PTAmJih4PTFlLTQpLGgub3QqPXgpLGQhPT1oLnNjYWxlJiYoaC5wZSghMCksaC5kdCgxLzAsMS8wLG8scikpfWY9aC5tZWFzdXJlZEJvdW5kcyxuLndpZHRoPWlzRmluaXRlKGkpP2k6TWF0aC5tYXgoZi53aWR0aCtjLDApLG4uaGVpZ2h0PWlzRmluaXRlKGUpP2U6TWF0aC5tYXgoZi5oZWlnaHQrdSwwKX1hcnJhbmdlKHQsaSxlKXtjb25zdCBzPWlbMF0sbj1zLm1lYXN1cmVkQm91bmRzLG89cy5tYXJnaW4scj1vLnJpZ2h0K28ubGVmdCxsPW8udG9wK28uYm90dG9tLGg9TWF0aC5tYXgobi53aWR0aCtyLDApLGY9TWF0aC5tYXgobi5oZWlnaHQrbCwwKTtsZXQgYT1zLmFsaWdubWVudDthLmlzRGVmYXVsdCgpJiYoYT10LmRlZmF1bHRBbGlnbm1lbnQpLGEuaXNTcG90KCl8fChhPVNwb3QuQ2VudGVyKSxzLkd0KGUud2lkdGgqYS54LWgqYS54K2Eub2Zmc2V0WCxlLmhlaWdodCphLnktZiphLnkrYS5vZmZzZXRZLG4ud2lkdGgsbi5oZWlnaHQpfX1QYW5lbExheW91dC54bihcIlZpZXdib3hcIixuZXcgUGFuZWxMYXlvdXRWaWV3Ym94KTtjbGFzcyBQYW5lbExheW91dEdyaWQgZXh0ZW5kcyBQYW5lbExheW91dHtjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9bWVhc3VyZSh0LGksZSxzLG4sbyxyKXt0LmtpPT09bnVsbCYmKHQua2k9bmV3IEdyaWRQYW5lbFNldHRpbmdzKSx0aGlzLk1JKHQpLHRoaXMuTkkodCl9YXJyYW5nZSh0LGksZSl7fVVpKHQsaSxlKXtjb25zdCBzPXQubmF0dXJhbEJvdW5kcyxuPXMud2lkdGgsbz1zLmhlaWdodDtpLnNhdmUoKSxpLmJlZ2luUGF0aCgpLGkucmVjdCgwLDAsbixvKSxpLmNsaXAoKSxpLmVuZFBhdGgoKSx0aGlzLkNJKHQsaSxlKSxpLnJlc3RvcmUoKSxpLmNsZWFyQ29udGV4dENhY2hlKCExKX1DSSh0LGksZSl7bGV0IHM9dC5nZXREb2N1bWVudFNjYWxlKCkqZS5zY2FsZTtzPD0wJiYocz0xKTtjb25zdCBuPXQuZ3JpZENlbGxTaXplLG89bi53aWR0aCxyPW4uaGVpZ2h0LGw9dC5uYXR1cmFsQm91bmRzLGg9dC5hY3R1YWxCb3VuZHMsZj1sLndpZHRoLGE9bC5oZWlnaHQsYz1NYXRoLmNlaWwoZi9vKSx1PU1hdGguY2VpbChhL3IpLGQ9dC5ncmlkT3JpZ2luLG09ZC54LGc9ZC55LHA9dC5raS5pcCx3PXQuVC5oLHg9dy5sZW5ndGg7Zm9yKGxldCBrPTA7azx4O2srKyl7Y29uc3QgYj13W2tdO2lmKCFiLnZpc2libGUpY29udGludWU7Y29uc3QgUz1iLmludGVydmFsfHwxLE09TWF0aC5hYnMoUyk7aWYobypNKnM8Miljb250aW51ZTtsZXQgQT1iLnNlZ21lbnRJbmRleDsoIWlzRmluaXRlKEEpfHxpc05hTihBKSkmJihBPTApLEE8MCYmKEE9TS1NYXRoLm1pbigtQSxNKSksQT1NYXRoLnJvdW5kKEElTSk7Y29uc3QgQz1iLm9wYWNpdHk7bGV0IFA9MTtpZihDIT09MSl7aWYoQz09PTApY29udGludWU7UD1pLmdsb2JhbEFscGhhLGkuZ2xvYmFsQWxwaGE9UCpDfWNvbnN0IE49cFtrXTtsZXQgVD0hMTtjb25zdCBMPWIuc3Ryb2tlRGFzaEFycmF5O2lmKEwhPT1udWxsJiYoVD0hMCxpLmVuYWJsZURhc2goTCxiLnN0cm9rZURhc2hPZmZzZXQpKSxiLnN0cm9rZSE9PW51bGwmJmIuc3Ryb2tlV2lkdGg+MCYmKGIuZmlndXJlPT09XCJMaW5lVlwifHxiLmZpZ3VyZT09PVwiTGluZUhcIikpe2lmKGkubGluZVdpZHRoPWIuc3Ryb2tlV2lkdGgsdC51bihpLGIuc3Ryb2tlLCExLCExLGwsaCksaS5iZWdpblBhdGgoKSxiLmZpZ3VyZT09PVwiTGluZVZcIil7Y29uc3QgRD1NYXRoLmZsb29yKChtLW8pL28pO2ZvcihsZXQgRj1EO0Y8PUQrYztGKyspe2NvbnN0IEk9RipvK207MDw9SSYmSTw9ZiYmdGhpcy5jYihGLFMsQSxOKSYmKGkubW92ZVRvKEksMCksaS5saW5lVG8oSSxhKSl9fWVsc2UgaWYoYi5maWd1cmU9PT1cIkxpbmVIXCIpe2NvbnN0IEQ9TWF0aC5mbG9vcigoZy1yKS9yKTtmb3IobGV0IEY9RDtGPD1EK3U7RisrKXtjb25zdCBJPUYqcitnOzA8PUkmJkk8PWEmJnRoaXMuY2IoRixTLEEsTikmJihpLm1vdmVUbygwLEkpLGkubGluZVRvKGYsSSkpfX1pLnN0cm9rZSgpLGkuZW5kUGF0aCgpfWVsc2UgaWYoYi5maWxsIT09bnVsbCl7aWYodC51bihpLGIuZmlsbCwhMCwhMSxsLGgpLGIuZmlndXJlPT09XCJCYXJWXCIpe2xldCBEPWIud2lkdGg7aXNOYU4oRCkmJihEPW8pO2NvbnN0IEY9TWF0aC5mbG9vcigobS1vKS9vKTtmb3IobGV0IEk9RjtJPD1GK2M7SSsrKXtjb25zdCBSPUkqbyttOzA8PVIrRCYmUjw9ZiYmdGhpcy5jYihJLFMsQSxOKSYmaS5maWxsUmVjdChSLDAsRCxhKX19ZWxzZSBpZihiLmZpZ3VyZT09PVwiQmFySFwiKXtsZXQgRD1iLmhlaWdodDtpc05hTihEKSYmKEQ9cik7Y29uc3QgRj1NYXRoLmZsb29yKChnLXIpL3IpO2ZvcihsZXQgST1GO0k8PUYrdTtJKyspe2NvbnN0IFI9SSpyK2c7MDw9UitEJiZSPD1hJiZ0aGlzLmNiKEksUyxBLE4pJiZpLmZpbGxSZWN0KDAsUixmLEQpfX19VCYmaS5kaXNhYmxlRGFzaCgpLEMhPT0xJiYoaS5nbG9iYWxBbHBoYT1QKX19Y2IodCxpLGUscyl7aWYoaTwwKXJldHVybiB0JWk9PT1lO2lmKHQlaSE9PWUpcmV0dXJuITE7Y29uc3Qgbj1zLmxlbmd0aDtmb3IobGV0IG89MDtvPG47bysrKXtjb25zdCByPXNbb107aWYodCVyPT09ZSlyZXR1cm4hMX1yZXR1cm4hMH1OSSh0KXtjb25zdCBpPVtdLGU9dC5ULmgscz1lLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKXtjb25zdCBvPWVbbl0scj1bXTtpZihpLnB1c2gociksIW8udmlzaWJsZSljb250aW51ZTtjb25zdCBsPW8uaW50ZXJ2YWw7aWYobDwwKWNvbnRpbnVlO2NvbnN0IGg9by5maWd1cmUsZj10aGlzLnFQKGgpO2ZvcihsZXQgYT0wO2E8czthKyspe2lmKGE9PT1uKWNvbnRpbnVlO2NvbnN0IGM9ZVthXTtpZighYy52aXNpYmxlKWNvbnRpbnVlO2NvbnN0IHU9Yy5maWd1cmU7aWYodGhpcy5xUCh1KSE9PWYpY29udGludWU7Y29uc3QgZD1jLmludGVydmFsO2Q+bCYmci5wdXNoKGQpfX10LmtpLmlwPWl9cVAodCl7cmV0dXJuIHQ9PT1cIkxpbmVWXCJ8fHQ9PT1cIkJhclZcIn1NSSh0KXtsZXQgaT0xLGU9MTtjb25zdCBzPXQuVC5oLG49cy5sZW5ndGg7Zm9yKGxldCBsPTA7bDxuO2wrKyl7Y29uc3QgaD1zW2xdLGY9TWF0aC5hYnMoaC5pbnRlcnZhbCk7ZjwyfHwodGhpcy5xUChoLmZpZ3VyZSk/ZT1lKmYvR2VvLkVDKGUsZik6aT1pKmYvR2VvLkVDKGksZikpfWNvbnN0IG89dC5ncmlkQ2VsbFNpemUscj10LmtpO3IuJGYuaXNSZWFsKCk/ci4kZi5zKGUqby53aWR0aCxpKm8uaGVpZ2h0KTpyLiRmPW5ldyBTaXplKGUqby53aWR0aCxpKm8uaGVpZ2h0KX19UGFuZWxMYXlvdXQueG4oXCJHcmlkXCIsbmV3IFBhbmVsTGF5b3V0R3JpZCk7Y2xhc3MgUGFuZWxMYXlvdXRMaW5rIGV4dGVuZHMgUGFuZWxMYXlvdXR7Y29uc3RydWN0b3IoKXtzdXBlcigpfW1lYXN1cmUodCxpLGUscyxuLG8scil7Y29uc3QgbD1zLmxlbmd0aDtpZighKHQgaW5zdGFuY2VvZiBBZG9ybm1lbnR8fHQgaW5zdGFuY2VvZiBMaW5rKSlyZXR1cm47bGV0IGg9bnVsbCxmPW51bGw7aWYodCBpbnN0YW5jZW9mIExpbmsmJihoPXQpLHQgaW5zdGFuY2VvZiBBZG9ybm1lbnQmJihmPXQsaD1mLmFkb3JuZWRQYXJ0LHQuZ2M9PT1udWxsJiYodC5nYz1bXSkpLCEoaCBpbnN0YW5jZW9mIExpbmspKXJldHVybjtjb25zdCBhPWg7aWYobD09PTApe3QubmF0dXJhbEJvdW5kcy5WbigwLDApLHQubWVhc3VyZWRCb3VuZHMucygwLDAsMCwwKTtyZXR1cm59Y29uc3QgYz10IGluc3RhbmNlb2YgQWRvcm5tZW50P251bGw6aC5wYXRoLHU9aC5yb3V0ZUJvdW5kcyxkPXQuSG87ZC5zKDAsMCx1LndpZHRoLHUuaGVpZ2h0KTtjb25zdCBtPWEucG9pbnRzLGc9aC5wb2ludHNDb3VudDtmIT09bnVsbD9mLmZkKCExKTpoIT09bnVsbCYmaC5mZCghMSk7Y29uc3QgcD11LndpZHRoLHc9dS5oZWlnaHQseD10LmdjO2lmKHgubGVuZ3RoPTAsYyE9PW51bGwpe3RoaXMubWVhc3VyZUxpbmtQYXRoKHQscCx3LGMpO2NvbnN0IE09Yy5tZWFzdXJlZEJvdW5kcztkLnVuaW9uUmVjdChNKSx4LnB1c2goTSl9Y29uc3Qgaz1UcmFuc2Zvcm0uYSgpLGI9UG9pbnQuYSgpLFM9UG9pbnQuYSgpO2ZvcihsZXQgTT0wO008bDtNKyspe2NvbnN0IEE9c1tNXTtpZihBPT09Yyljb250aW51ZTtsZXQgQz1BLm1lYXN1cmVkQm91bmRzO2lmKEEuaXNQYW5lbE1haW4mJkEgaW5zdGFuY2VvZiBTaGFwZSl7dGhpcy5tZWFzdXJlTGlua1BhdGgodCxwLHcsQSksQz1BLm1lYXN1cmVkQm91bmRzLGQudW5pb25SZWN0KEMpLHgucHVzaChDKTtjb250aW51ZX1pZihnPDIpe0EuZHQoMS8wLDEvMCwwLDApLEM9QS5tZWFzdXJlZEJvdW5kcyxkLnVuaW9uUmVjdChDKSx4LnB1c2goQyk7Y29udGludWV9Y29uc3QgUD1BLnNlZ21lbnRJbmRleCxOPUEuc2VnbWVudEZyYWN0aW9uO2xldCBUPUEuYWxpZ25tZW50Rm9jdXM7VC5pc05vU3BvdCgpJiYoVD1TcG90LkNlbnRlcik7Y29uc3QgTD1BLnNlZ21lbnRPcmllbnRhdGlvbixEPUEuc2VnbWVudE9mZnNldDtsZXQgRj0wLEk9MCxSPTAsTz0wO2lmKGlzTmFOKFApKXtjb25zdCBYPWEuZnQsSj1VLmx0KCk7WC5nZXRQb2ludEFuZEFuZ2xlQWxvbmdQYXRoKE4sSik7Y29uc3Qgdj1Qb2ludC5LKEpbMF0sSlsxXSk7Tz1KWzJdLEwhPT0wJiYoUj1hLmNvbXB1dGVBbmdsZShBLEwsTyksQS5qdD1SLEEucGUoITApLEEudG8oITApKSxGPXYueCxJPXYueSxQb2ludC5vKHYpLFUudHQoSil9ZWxzZSBpZihQPC1nfHxQPj1nKXtjb25zdCBYPVBvaW50LmEoKTthLllMKFgpLE89YS5taWRBbmdsZSxMIT09MCYmKFI9YS5jb21wdXRlQW5nbGUoQSxMLE8pLEEuanQ9UixBLnBlKCEwKSxBLnRvKCEwKSksRj1YLngtdS54LEk9WC55LXUueSxQb2ludC5vKFgpfWVsc2V7bGV0IFgsSix2PTA7aWYoUD49MD8oWD1tLmVsdChQKSxKPVA8Zy0xP20uZWx0KFArMSk6WCk6KHY9ZytQLFg9bS5lbHQodiksSj12PjA/bS5lbHQodi0xKTpYKSxPPTAsWC5lcXVhbHNBcHByb3goSikpe2xldCBfLEc7UD49MD8oXz1QPjA/bS5lbHQoUC0xKTpYLEc9UDxnLTI/bS5lbHQoUCsyKTpKKTooXz12PGctMT9tLmVsdCh2KzEpOlgsRz12PjE/bS5lbHQodi0yKTpKKTtjb25zdCBFPV8uZGlzdGFuY2VTcXVhcmVkUG9pbnQoWCkscT1KLmRpc3RhbmNlU3F1YXJlZFBvaW50KEcpO0U+cSsxMD9PPVA+PTA/Xy5kaXJlY3Rpb25Qb2ludChYKTpYLmRpcmVjdGlvblBvaW50KF8pOnE+RSsxMD9PPVA+PTA/Si5kaXJlY3Rpb25Qb2ludChHKTpHLmRpcmVjdGlvblBvaW50KEopOk89UD49MD9fLmRpcmVjdGlvblBvaW50KEcpOkcuZGlyZWN0aW9uUG9pbnQoXyl9ZWxzZSBPPVA+PTA/WC5kaXJlY3Rpb25Qb2ludChKKTpKLmRpcmVjdGlvblBvaW50KFgpO0whPT0wJiYoUj1hLmNvbXB1dGVBbmdsZShBLEwsTyksQS5qdD1SLEEucGUoITApLEEudG8oITApKSxGPVgueCsoSi54LVgueCkqTi11LngsST1YLnkrKEoueS1YLnkpKk4tdS55fUEuZHQoMS8wLDEvMCwwLDApLEM9QS5tZWFzdXJlZEJvdW5kcztjb25zdCBZPUEubmF0dXJhbEJvdW5kcztsZXQgSz0wO0EgaW5zdGFuY2VvZiBTaGFwZSYmKEs9QS5zdHJva2VXaWR0aCk7Y29uc3QgQj1ZLndpZHRoK0ssej1ZLmhlaWdodCtLO2suVmkoKSxrLkJzKC1DLngsLUMueSksay5vdChBLnNjYWxlLEEuc2NhbGUpLGsubXMoTD09PTA/QS5hbmdsZTpPLEIvMix6LzIpLChMPT09MjJ8fEw9PT0yNikmJmsubXMoOTAsQi8yLHovMiksKEw9PT0yM3x8TD09PTI3KSYmay5tcygtOTAsQi8yLHovMiksTD09PTI4JiYoTz40NSYmTzwxMzV8fE8+MjI1JiZPPDMxNSkmJmsubXMoLU8sQi8yLHovMik7Y29uc3QgVj1uZXcgUmVjdCgwLDAsQix6KTtiLnNldFJlY3RTcG90KFYsVCksay5rdChiKTtjb25zdCBIPS1iLngrSy8yKkEuc2NhbGUsVz0tYi55K0svMipBLnNjYWxlO1MuYyhEKTtjb25zdCBqPWlzTmFOKEQueCksJD1pc05hTihELnkpO2lmKGp8fCQpe2NvbnN0IFg9Qi8yKzMsSj16LzIrMyx2PU8+PTQ1JiZPPD0xMzUsXz1PPj0yMjUmJk88PTMxNTtMPT09MCYmKHZ8fF8pPyhTLng9JD9YOkQueSxTLnk9aj9KOkQueCx2P1A+PTB8fGlzTmFOKFApJiZOPC41fHxqJiYoUy55PS1KKTpfJiYoKFA+PTB8fGlzTmFOKFApJiZOPC41KSYmaiYmKFMueT0tSiksJCYmKFMueD0tWCkpKTooaiYmKFA+PTB8fGlzTmFOKFApJiZOPC41P1MueD1YOlMueD0tWCksJCYmKFMueT0tSiksUy5yb3RhdGUoTykpfWVsc2UgUy5yb3RhdGUoTyk7Ris9Uy54LEkrPVMueSxWLnMoRitILEkrVyxDLndpZHRoLEMuaGVpZ2h0KSx4LnB1c2goViksZC51bmlvblJlY3QoVil9aWYoaCE9PW51bGwpe2NvbnN0IE09aC5sYWJlbE5vZGVzO2Zvcig7TS5uZXh0KCk7KU0udmFsdWUuZHQoMS8wLDEvMCl9dC5Ibz1kLHQucG9zaXRpb24ucyh1LngrZC54LHUueStkLnkpLG4uVm4oZC53aWR0aHx8MCxkLmhlaWdodHx8MCksVHJhbnNmb3JtLm8oayksUG9pbnQubyhiKSxQb2ludC5vKFMpfWFycmFuZ2UodCxpLGUpe2NvbnN0IHM9aS5sZW5ndGg7aWYoISh0IGluc3RhbmNlb2YgQWRvcm5tZW50fHx0IGluc3RhbmNlb2YgTGluaykpcmV0dXJuO2xldCBuPXQsbz1udWxsO3QgaW5zdGFuY2VvZiBBZG9ybm1lbnQmJihvPXQsbj1vLmFkb3JuZWRQYXJ0KTtjb25zdCByPXQsbD10IGluc3RhbmNlb2YgQWRvcm5tZW50P251bGw6bi5wYXRoLGg9dC5nYztpZihoLmxlbmd0aCE9PTApe2xldCB1PTA7aWYobCE9PW51bGwmJnU8aC5sZW5ndGgpe2NvbnN0IGQ9aFt1XTt1KyssbC5HdChkLngtci5Iby54LGQueS1yLkhvLnksZC53aWR0aCxkLmhlaWdodCl9Zm9yKGxldCBkPTA7ZDxzO2QrKyl7Y29uc3QgbT1pW2RdO2lmKG0hPT1sJiZ1PGgubGVuZ3RoKXtjb25zdCBnPWhbdV07dSsrLG0uR3QoZy54LXIuSG8ueCxnLnktci5Iby55LGcud2lkdGgsZy5oZWlnaHQpfX19Y29uc3QgZj1uLnBvaW50cyxhPWYuY291bnQ7aWYoYT49MiYmciBpbnN0YW5jZW9mIExpbmspe2NvbnN0IHU9ci5sYWJlbE5vZGVzO2Zvcig7dS5uZXh0KCk7KXtjb25zdCBkPXUudmFsdWU7ci5BSShkLGEsZil9fW8hPT1udWxsP28uZmQoITEpOm4uZmQoITEpO2NvbnN0IGM9dC5LTChQb2ludC5hKCkpO3QubG9jYXRpb24ucyh0LnBvc2l0aW9uLngrYy54LHQucG9zaXRpb24ueStjLnkpLFBvaW50Lm8oYyl9bWVhc3VyZUxpbmtQYXRoKHQsaSxlLHMpe2lmKHMuRW8oKT09PSExKXJldHVybjtsZXQgbj1zLnN0cm9rZVdpZHRoO2lmKG49PT0wJiZ0IGluc3RhbmNlb2YgQWRvcm5tZW50JiZ0LnR5cGU9PT1QYW5lbC5MaW5rJiZ0LmFkb3JuZWRPYmplY3QgaW5zdGFuY2VvZiBTaGFwZSYmKG49dC5hZG9ybmVkT2JqZWN0LnN0cm9rZVdpZHRoKSxuPW4qcy5vdCx0IGluc3RhbmNlb2YgTGluayYmdC5mdCE9PW51bGwpe2NvbnN0IG89dC5nZW9tZXRyeS5ib3VuZHM7cy5fbihvLngtbi8yLG8ueS1uLzIsby53aWR0aCtuLG8uaGVpZ2h0K24pfWVsc2UgaWYodCBpbnN0YW5jZW9mIEFkb3JubWVudCYmdC5hZG9ybmVkUGFydC5mdCE9PW51bGwpe2NvbnN0IG89dC5hZG9ybmVkUGFydC5mdC5ib3VuZHM7cy5fbihvLngtbi8yLG8ueS1uLzIsby53aWR0aCtuLG8uaGVpZ2h0K24pfWVsc2Ugcy5fbigtKG4vMiksLShuLzIpLGkrbixlK24pO3MuTEkoKSxzLnBlKCExKX19UGFuZWxMYXlvdXQueG4oXCJMaW5rXCIsbmV3IFBhbmVsTGF5b3V0TGluayk7Y2xhc3MgUGFuZWxMYXlvdXRHcmFkdWF0ZWQgZXh0ZW5kcyBQYW5lbExheW91dHtjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9bWVhc3VyZSh0LGksZSxzLG4sbyxyKXtjb25zdCBsPXQuZmluZE1haW5FbGVtZW50KCk7dC52ZT1bXTtjb25zdCBoPWwubWFyZ2luLGY9aC5yaWdodCtoLmxlZnQsYT1oLnRvcCtoLmJvdHRvbTtsLmR0KGksZSxvLHIpO2NvbnN0IGM9bC5tZWFzdXJlZEJvdW5kcyx1PWMud2lkdGgsZD1jLmhlaWdodCxtPU1hdGgubWF4KHUrZiwwKSxnPU1hdGgubWF4KGQrYSwwKSxwPW5ldyBSZWN0KC1oLmxlZnQsLWgudG9wLG0sZyk7dC52ZS5wdXNoKHApLG4uYyhwKSx0aGlzLmRldGVybWluZUdyYWR1YXRlZE1hcmtzKHQsbCk7Y29uc3Qgdz10LlBzO2lmKHc9PT1udWxsKXJldHVybjtjb25zdCB4PXMubGVuZ3RoO2ZvcihsZXQgaz0wO2s8eDtrKyspe2NvbnN0IGI9c1trXSxTPXdba107IWIudmlzaWJsZXx8Yj09PWx8fFMubGVuZ3RoPT09MHx8KGIgaW5zdGFuY2VvZiBTaGFwZT90aGlzLm1lYXN1cmVHcmFkdWF0ZWRUaWNrcyh0LGIsUyxuKTpiIGluc3RhbmNlb2YgVGV4dEJsb2NrJiZ0aGlzLm1lYXN1cmVHcmFkdWF0ZWRMYWJlbHModCxiLFMsbiksYi5wZSghMSkpfX1hcnJhbmdlKHQsaSxlKXtpZih0LnZlPT09bnVsbClyZXR1cm47Y29uc3Qgcz10LmZpbmRNYWluRWxlbWVudCgpLG49dC5QcztpZihuPT09bnVsbClyZXR1cm47Y29uc3Qgbz10LnZlO2xldCByPTAsbD1vW3JdO3IrKyxzIT09bnVsbCYmcy5HdChsLngtZS54LGwueS1lLnksbC53aWR0aCxsLmhlaWdodCk7Y29uc3QgaD1pLmxlbmd0aDtmb3IobGV0IGY9MDtmPGg7ZisrKXtjb25zdCBhPWlbZl0sYz1uW2ZdOyFhLnZpc2libGV8fGE9PT1zfHxjLmxlbmd0aD09PTB8fChsPW9bcl0scisrLGEuR3QobC54LWUueCxsLnktZS55LGwud2lkdGgsbC5oZWlnaHQpKX10LnZlPW51bGx9bWVhc3VyZUdyYWR1YXRlZFRpY2tzKHQsaSxlLHMpe2xldCBuPWkuYWxpZ25tZW50Rm9jdXM7bi5pc05vU3BvdCgpJiYobj1TcG90LlRvcENlbnRlcik7Y29uc3Qgbz1pLmFuZ2xlO2kuanQ9MCxpLmR0KDEvMCwxLzAsMCwwKSxpLmp0PW87Y29uc3Qgcj1pLm1lYXN1cmVkQm91bmRzLGw9ci53aWR0aCxoPXIuaGVpZ2h0LGY9UmVjdC5LKDAsMCxsLGgpLGE9UG9pbnQuYSgpO2Euc2V0UmVjdFNwb3QoZixuKSxSZWN0Lm8oZik7Y29uc3QgYz0tYS54LHU9LWEueSxkPW5ldyBSZWN0LG09ZS5sZW5ndGg7Zm9yKGxldCBnPTA7ZzxtO2crKyl7Y29uc3QgcD1lW2ddLHc9cC5wdC54LHg9cC5wdC55LGs9cC5hbmdsZTtmb3IobGV0IGI9MDtiPDQ7YisrKXtzd2l0Y2goYil7Y2FzZSAwOmEucyhjLHUpO2JyZWFrO2Nhc2UgMTphLnMoYytsLHUpO2JyZWFrO2Nhc2UgMjphLnMoYyx1K2gpO2JyZWFrO2Nhc2UgMzphLnMoYytsLHUraCk7YnJlYWt9YS5yb3RhdGUoaytpLmFuZ2xlKSxhLm9mZnNldCh3LHgpLGc9PT0wJiZiPT09MD9kLnMoYS54LGEueSwwLDApOmQudW5pb25Qb2ludChhKSxhLm9mZnNldCgtdywteCksYS5yb3RhdGUoLWstaS5hbmdsZSl9fVBvaW50Lm8oYSksdC52ZSE9PW51bGwmJnQudmUucHVzaChkKSxzLnVuaW9uTm9DaGVjayhkLngsZC55LGQud2lkdGgsZC5oZWlnaHQpfW1lYXN1cmVHcmFkdWF0ZWRMYWJlbHModCxpLGUscyl7dC5BZT09PW51bGwmJih0LkFlPW5ldyBUZXh0QmxvY2spO2NvbnN0IG49dC5BZTt0aGlzLlVMKGksbik7bGV0IG89aS5hbGlnbm1lbnRGb2N1cztvLmlzTm9TcG90KCkmJihvPVNwb3QuVG9wQ2VudGVyKTtjb25zdCByPWkuc2VnbWVudE9yaWVudGF0aW9uLGw9aS5zZWdtZW50T2Zmc2V0LGg9bmV3IFJlY3Q7bGV0IGY9MCxhPTAsYz0wLHU9MCxkPTA7Y29uc3QgbT1lLmxlbmd0aDtmb3IobGV0IGc9MDtnPG07ZysrKXtjb25zdCBwPWVbZ107Zj1wLnB0LngsYT1wLnB0LnksYz1wLmFuZ2xlLHU9aS5hbmdsZSxkPWkuYW5nbGUsciE9PTAmJihyPT09MjF8fHI9PT0yNT9kPWMraS5hbmdsZTpkPWMsdT1MaW5rLmNvbXB1dGVBbmdsZShyLGQpKSxuLmp0PXUsbi50ZXh0PXAudGV4dHx8XCJcIixuLmR0KDEvMCwxLzAsMCwwKTtjb25zdCB3PW4ubWVhc3VyZWRCb3VuZHMseD1uLm5hdHVyYWxCb3VuZHMsaz14LndpZHRoLGI9eC5oZWlnaHQsUz1UcmFuc2Zvcm0uYSgpO1MuVmkoKSxTLkJzKC13LngsLXcueSksUy5vdChuLnNjYWxlLG4uc2NhbGUpLFMubXMoZCxrLzIsYi8yKSwocj09PTIyfHxyPT09MjYpJiZTLm1zKDkwLGsvMixiLzIpLChyPT09MjN8fHI9PT0yNykmJlMubXMoLTkwLGsvMixiLzIpLHI9PT0yOCYmKGM+NDUmJmM8MTM1fHxjPjIyNSYmYzwzMTUpJiZTLm1zKC1jLGsvMixiLzIpO2NvbnN0IE09UmVjdC5LKDAsMCxrLGIpLEE9UG9pbnQuYSgpO0Euc2V0UmVjdFNwb3QoTSxvKSxTLmt0KEEpO2NvbnN0IEM9LUEueCxQPS1BLnksTj1Qb2ludC5hKCk7Ti5jKGwpLGlzTmFOKE4ueCkmJihOLng9ay8yKzMpLGlzTmFOKE4ueSkmJihOLnk9LShiLzIrMykpLE4ucm90YXRlKGMpLGYrPU4ueCtDLGErPU4ueStQO2NvbnN0IFQ9bmV3IFJlY3QoZixhLHcud2lkdGgsdy5oZWlnaHQpLEw9bmV3IFJlY3Qody54LHcueSx3LndpZHRoLHcuaGVpZ2h0KSxEPW5ldyBSZWN0KHgueCx4LnkseC53aWR0aCx4LmhlaWdodCk7cC5sYWJlbEFuZ2xlPXUscC5saW5lQ291bnQ9bi5saW5lQ291bnQscC5saW5lcz1uLmdldE1ldHJpY3MoKSxwLmFjdHVhbEJvdW5kcz1ULHAubWVhc3VyZWRCb3VuZHM9TCxwLm5hdHVyYWxCb3VuZHM9RCxnPT09MD9oLmMoVCk6aC51bmlvblJlY3QoVCksUG9pbnQubyhOKSxQb2ludC5vKEEpLFJlY3QubyhNKSxUcmFuc2Zvcm0ubyhTKX10LnZlIT09bnVsbCYmdC52ZS5wdXNoKGgpLHMudW5pb25Ob0NoZWNrKGgueCxoLnksaC53aWR0aCxoLmhlaWdodCl9ZGV0ZXJtaW5lR3JhZHVhdGVkTWFya3ModCxpKXtjb25zdCBlPWkuZ2VvbWV0cnkscz1pLnN0cm9rZVdpZHRoLG49ZS5mbGF0dGVuZWRTZWdtZW50cyxvPWUuZmxhdHRlbmVkTGVuZ3RocyxyPWUuZmxhdHRlbmVkVG90YWxMZW5ndGgsbD1uLmxlbmd0aDtsZXQgaD0wLGY9MDtjb25zdCBhPVUubHQoKTtmb3IobGV0IHg9MDt4PGw7eCsrKXtjb25zdCBrPW5beF0sYj1bXTtoPTAsZj0wO2NvbnN0IFM9ay5sZW5ndGg7Zm9yKGxldCBNPTA7TTxTO00rPTIpe2NvbnN0IEE9a1tNXSxDPWtbTSsxXTtpZihNPT09MCl7aD1BLGY9Qztjb250aW51ZX1sZXQgUD1NYXRoLmF0YW4yKEMtZixBLWgpKjE4MC9NYXRoLlBJO1A8MCYmKFArPTM2MCksYi5wdXNoKFApLGg9QSxmPUN9YS5wdXNoKGIpfWNvbnN0IGM9dGhpcy5USSh0KSx1PXQuVC5oLGQ9dS5sZW5ndGg7bGV0IG09MCxnPTAscD1yO3QuUHM9W107bGV0IHc7Zm9yKGxldCB4PTA7eDxkO3grKyl7Y29uc3Qgaz11W3hdO2lmKHc9W10sIWsudmlzaWJsZXx8az09PWkpe3QuUHMucHVzaCh3KTtjb250aW51ZX1jb25zdCBiPU1hdGguYWJzKGsuaW50ZXJ2YWwpLFM9dC5ncmFkdWF0ZWRUaWNrVW5pdDtpZihTKmIqci90LmdyYWR1YXRlZFJhbmdlPDImJmsuZ3JhZHVhdGVkU2tpcD09PW51bGwpe3QuUHMucHVzaCh3KTtjb250aW51ZX1sZXQgTT1vWzBdWzBdLEE9MCxDPTA7Zz1yKmsuZ3JhZHVhdGVkU3RhcnQtMWUtNCxwPXIqay5ncmFkdWF0ZWRFbmQrMWUtNDtjb25zdCBQPVMqYjtsZXQgTj10LmdyYWR1YXRlZFRpY2tCYXNlO2lmKE48dC5ncmFkdWF0ZWRNaW4pe2xldCBGPSh0LmdyYWR1YXRlZE1pbi1OKS9QO0Y9RiUxPT09MD9GOk1hdGguZmxvb3IoRisxKSxOKz1GKlB9ZWxzZSBpZihOPnQuZ3JhZHVhdGVkTWluK1Ape2NvbnN0IEY9TWF0aC5mbG9vcigoTi10LmdyYWR1YXRlZE1pbikvUCk7Ti09RipQfWNvbnN0IFQ9Y1t4XSxMPU4sRD10LmdyYWR1YXRlZE1heCoxZS02O2ZvcihsZXQgRj0xO048PXQuZ3JhZHVhdGVkTWF4K0Q7RisrKXtpZih0aGlzLkRJKHQsTi10LmdyYWR1YXRlZFRpY2tCYXNlLFQpJiYoTj50LmdyYWR1YXRlZE1heCYmKE49dC5ncmFkdWF0ZWRNYXgpLChrLmdyYWR1YXRlZFNraXA9PT1udWxsfHxrIGluc3RhbmNlb2YgVGV4dEJsb2NrJiYhay5ncmFkdWF0ZWRTa2lwKE4sayl8fGsgaW5zdGFuY2VvZiBTaGFwZSYmIWsuZ3JhZHVhdGVkU2tpcChOLGspKSYmKG09KE4tdC5ncmFkdWF0ZWRNaW4pKnIvdC5ncmFkdWF0ZWRSYW5nZSxtPnImJihtPXIpLGc8PW0mJm08PXApKSl7bGV0IEk9YVtBXVtDXSxSPW9bQV1bQ107Zm9yKDtBPG8ubGVuZ3RoOyl7Zm9yKDttPk0mJkM8b1tBXS5sZW5ndGgtMTspQysrLEk9YVtBXVtDXSxSPW9bQV1bQ10sTSs9UjtpZihtPD1NKWJyZWFrO0ErKyxDPTAsST1hW0FdW0NdLFI9b1tBXVtDXSxNKz1SfWNvbnN0IE89bltBXSxZPU9bQyoyXSxLPU9bQyoyKzFdLEI9T1tDKjIrMl0sej1PW0MqMiszXSxWPShtLShNLVIpKS9SLEg9bmV3IFBvaW50KFkrKEItWSkqVitzLzItZS5ib3VuZHMueCxLKyh6LUspKlYrcy8yLWUuYm91bmRzLnkpO2lmKEguc2NhbGUoaS5zY2FsZSxpLnNjYWxlKSxJPXRoaXMuRkkoSSxWLE8sYVtBXSxDKSxrIGluc3RhbmNlb2YgVGV4dEJsb2NrKXtsZXQgVz1cIlwiO2suZ3JhZHVhdGVkRnVuY3Rpb24hPT1udWxsPyhXPWsuZ3JhZHVhdGVkRnVuY3Rpb24oTixrKSxXPVchPW51bGw/Vy50b1N0cmluZygpOlwiXCIpOlc9KCtOLnRvRml4ZWQoMikpLnRvU3RyaW5nKCksVyE9PVwiXCImJncucHVzaCh7cHQ6SCxhbmdsZTpJLHRleHQ6V30pfWVsc2Ugdy5wdXNoKHtwdDpILGFuZ2xlOkl9KX1OPUwrRipQfXQuUHMucHVzaCh3KX1VLnR0KGEpfUZJKHQsaSxlLHMsbil7aWYoaTwuNTAwNSYmaT4uNDk5NSlyZXR1cm4gdDtsZXQgbz10O2lmKGk8LjU/bj4wP289c1tuLTFdOkdlby5HKGVbMF0sZVtlLmxlbmd0aC0yXSkmJkdlby5HKGVbMV0sZVtlLmxlbmd0aC0xXSkmJihvPXNbcy5sZW5ndGgtMV0pOmk+LjUmJihuKzE8cy5sZW5ndGg/bz1zW24rMV06R2VvLkcoZVswXSxlW2UubGVuZ3RoLTJdKSYmR2VvLkcoZVsxXSxlW2UubGVuZ3RoLTFdKSYmKG89c1swXSkpLHQhPT1vKXtsZXQgcj1NYXRoLmFicyh0LW8pO2lmKHI+MTgwJiYodDxvP3QrPTM2MDpvKz0zNjAscj1NYXRoLmFicyh0LW8pKSxpPDVlLTR8fGk+Ljk5OTUpcmV0dXJuKHQrbykvMiUzNjA7aWYocjwxMCl7Y29uc3QgbD0xLU1hdGguYWJzKC41LWkpO3JldHVybih0KmwrbyooMS1sKSklMzYwfX1yZXR1cm4gdH1USSh0KXtpZih0LmhzPT09bnVsbCl7Y29uc3QgaT1bXSxlPXQuVC5oLHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl7Y29uc3Qgbz1lW25dLHI9W107aWYoaS5wdXNoKHIpLCFvLnZpc2libGUpY29udGludWU7Y29uc3QgbD1vLmludGVydmFsO2lmKCEobDwwKSlmb3IobGV0IGg9MDtoPHM7aCsrKXtpZihoPT09biljb250aW51ZTtjb25zdCBmPWVbaF07aWYoIWYudmlzaWJsZXx8by5jb25zdHJ1Y3RvciE9PWYuY29uc3RydWN0b3IpY29udGludWU7Y29uc3QgYT1mLmludGVydmFsO2E+bCYmci5wdXNoKGEpfX10LmhzPWl9cmV0dXJuIHQuaHN9REkodCxpLGUpe2NvbnN0IHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl7Y29uc3Qgbz1lW25dKnQuZ3JhZHVhdGVkVGlja1VuaXQscj1pJW8sbD10LmdyYWR1YXRlZFRpY2tVbml0KjFlLTY7aWYocjxsJiZyPi1sKXJldHVybiExfXJldHVybiEwfVVpKHQsaSxlKXtjb25zdCBzPWUubGE7ZS5sYT0hMDtjb25zdCBuPXQubmF0dXJhbEJvdW5kcyxvPW4ud2lkdGgscj1uLmhlaWdodCxsPWkgaW5zdGFuY2VvZiBTVkdDb250ZXh0O2kuc2F2ZSgpLGkuYmVnaW5QYXRoKCksaS5yZWN0KC0xLC0xLG8rMSxyKzEpLGkuY2xpcCgpLGkuZW5kUGF0aCgpO2NvbnN0IGg9dC5maW5kTWFpbkVsZW1lbnQoKTtoLlVpKGksZSk7bGV0IGY9dC5nZXREb2N1bWVudFNjYWxlKCkqZS5zY2FsZTtmPD0wJiYoZj0xKTtjb25zdCBhPWguYWN0dWFsQm91bmRzLGM9dC5ULmgsdT10LlBzLGQ9Yy5sZW5ndGg7Zm9yKGxldCBtPTA7bTxkO20rKyl7Y29uc3QgZz1jW21dLHA9dVttXSx3PXAubGVuZ3RoO2lmKCEoIWcudmlzaWJsZXx8Zz09PWh8fHAubGVuZ3RoPT09MCkpe2lmKGcgaW5zdGFuY2VvZiBTaGFwZSl7aWYodC5ncmFkdWF0ZWRUaWNrVW5pdCpnLmludGVydmFsKmguZ2VvbWV0cnkuZmxhdHRlbmVkVG90YWxMZW5ndGgvdC5ncmFkdWF0ZWRSYW5nZSpmPDImJmcuZ3JhZHVhdGVkU2tpcD09PW51bGwpY29udGludWU7Y29uc3QgeD1nLm1lYXN1cmVkQm91bmRzLGs9Zy5zdHJva2VXaWR0aCpnLnNjYWxlO2xldCBiPWcuYWxpZ25tZW50Rm9jdXM7Yi5pc05vU3BvdCgpJiYoYj1TcG90LlRvcENlbnRlcik7Zm9yKGxldCBTPTA7Uzx3O1MrKyl7Y29uc3QgTT1wW1NdLnB0LEE9cFtTXS5hbmdsZTt0aGlzLlJJKGcsTSxhLEEseCxrLGIpLGcuVWkoaSxlKSxsJiYodC5zdmcuYXBwZW5kQ2hpbGQoZy5zdmcpLGcuc3ZnPW51bGwpLGcuX3IuVmkoKX19ZWxzZSBpZihnIGluc3RhbmNlb2YgVGV4dEJsb2NrKXt0LkFlPT09bnVsbCYmKHQuQWU9bmV3IFRleHRCbG9jayk7Y29uc3QgeD10LkFlO3RoaXMuVUwoZyx4KSx4LldQPSEwO2ZvcihsZXQgaz0wO2s8dztrKyspe2NvbnN0IGI9cFtrXTtpZihiLmFjdHVhbEJvdW5kcyYmYi5tZWFzdXJlZEJvdW5kcyYmYi5uYXR1cmFsQm91bmRzKXt4LklJKGIpO2NvbnN0IFM9Yi5hY3R1YWxCb3VuZHM7eC5HdChTLngsUy55LFMud2lkdGgsUy5oZWlnaHQpLHRoaXMuT0koeCxhLFMsYi5tZWFzdXJlZEJvdW5kcyxiLm5hdHVyYWxCb3VuZHMpLHguaWw9Zy5wYXJ0LHguSHM9Zy5wYW5lbCx4LlVpKGksZSkseC5Icz1udWxsLHguaWw9bnVsbCxsJiYodC5zdmcuYXBwZW5kQ2hpbGQoeC5zdmcpLHguc3ZnPW51bGwpfX19fX1lLmxhPXMsaS5yZXN0b3JlKCksaS5jbGVhckNvbnRleHRDYWNoZSghMCl9UkkodCxpLGUscyxuLG8scil7Y29uc3QgbD10Ll9yO2wuVmkoKSxsLkJzKGkueCtlLngsaS55K2UueSksbC5tcyhzK3QuYW5nbGUsMCwwKSxsLkJzKC1uLndpZHRoKnIueCtyLm9mZnNldFgrby8yLC1uLmhlaWdodCpyLnkrci5vZmZzZXRZK28vMiksbC5vdCh0LnNjYWxlLHQuc2NhbGUpLHQub2QoITEpLHQuZGguc2V0KHQuX3IpLHQuYmE9dC5zY2FsZSx0LkxhKCExKX1PSSh0LGksZSxzLG4pe2NvbnN0IG89dC5fcjtvLlZpKCksby5CcyhlLngraS54LGUueStpLnkpLG8uQnMoLXMueCwtcy55KSx0LmswKG8sbi54LG4ueSxuLndpZHRoLG4uaGVpZ2h0KSx0Lm9kKCExKSx0LmRoLnNldCh0Ll9yKSx0LmJhPXQuc2NhbGUsdC5MYSghMSl9VUwodCxpKXtpLkVJKHQpfX1QYW5lbExheW91dC54bihcIkdyYWR1YXRlZFwiLG5ldyBQYW5lbExheW91dEdyYWR1YXRlZCk7dmFyIFZpZXdib3hTdHJldGNoPSh5PT4oeVt5LlVuaWZvcm09Nl09XCJVbmlmb3JtXCIseVt5LlVuaWZvcm1Ub0ZpbGw9N109XCJVbmlmb3JtVG9GaWxsXCIseSkpKFZpZXdib3hTdHJldGNofHx7fSk7Y2xhc3MgUGFuZWwgZXh0ZW5kcyBHcmFwaE9iamVjdHskO1Q7ZWk7Y2Q7R247bmw7b287SG87alA7RTt1ZDtodDtraTtuaTtkZDtNaDt2cztjb25zdHJ1Y3Rvcih0LGkpe2lmKHN1cGVyKCksdGhpcy4kPW51bGwsdD09PXZvaWQgMCl0aGlzLiQ9UGFuZWwuUG9zaXRpb247ZWxzZSBpZih0eXBlb2YgdD09XCJzdHJpbmdcIil7Y29uc3QgZT1QYW5lbExheW91dC5scy5nZXQodCk7ZSE9PW51bGwmJih0aGlzLiQ9ZSl9ZWxzZSB0IGluc3RhbmNlb2YgUGFuZWxMYXlvdXQ/dGhpcy4kPXQ6dCYmKHRoaXMuJD1QYW5lbC5Qb3NpdGlvbixpPXQpO3RoaXMuJD09PW51bGwmJlUubihcIlBhbmVsIHR5cGUgbm90IHNwZWNpZmllZCBvciBQYW5lbExheW91dCBub3QgbG9hZGVkOiBcIit0KSx0aGlzLmx8PTQxOTQzMDR8KHRoaXMuJD09PVBhbmVsLkdyaWQ/MTA0ODU3NjowKSx0aGlzLlQ9bmV3IExpc3QsdGhpcy5laT1NYXJnaW4uWGcsdGhpcy5jZD1TcG90LkRlZmF1bHQsdGhpcy5Hbj0xLHRoaXMubmw9bnVsbCx0aGlzLm9vPVwiXCIsdGhpcy5Ibz1uZXcgUmVjdChOYU4sTmFOLE5hTixOYU4pLHRoaXMualA9bnVsbCx0aGlzLkU9bnVsbCx0aGlzLnVkPTYsdGhpcy5raT1udWxsLHRoaXMuaHQ9bnVsbCx0aGlzLm5pPW51bGwsdGhpcy5kZD1OYU4sdGhpcy5NaD1udWxsLHRoaXMudnM9bnVsbCxpJiZPYmplY3QuYXNzaWduKHRoaXMsaSl9Y2xvbmVQcm90ZWN0ZWQodCl7c3VwZXIuY2xvbmVQcm90ZWN0ZWQodCksdC4kPXRoaXMuJCx0LmVpPXRoaXMuZWkuTigpLHQuY2Q9dGhpcy5jZC5OKCksdC5Hbj10aGlzLkduLHQub289dGhpcy5vbyx0LkhvLmModGhpcy5IbyksdGhpcy5FIT09bnVsbCYmKHQuRT10aGlzLkUuY29weSh0KSksdC51ZD10aGlzLnVkLHRoaXMuaHQhPT1udWxsJiYodC5odD10aGlzLmh0LmNvcHkoKSksdGhpcy5raSE9PW51bGwmJih0LmtpPXRoaXMua2kuY29weSgpKSx0Lm5pPXRoaXMubmksdC5kZD10aGlzLmRkLHQuTWg9dGhpcy5NaH1Ybyh0KXtzdXBlci5Ybyh0KSx0LlQ9dGhpcy5UO2NvbnN0IGk9dC5ULmgsZT1pLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPWlbc107bi5Icz10fXQubmw9bnVsbH1jb3B5KCl7Y29uc3QgdD1zdXBlci5jb3B5KCk7aWYodCE9PW51bGwpe2NvbnN0IGk9dGhpcy5ULmgsZT1pLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBvPWlbc10uY29weSgpO3QuQkkobyl9cmV0dXJuIHR9ZWxzZSByZXR1cm4gbnVsbH10b1N0cmluZygpe3JldHVyblwiUGFuZWwoXCIrdGhpcy50eXBlLm5hbWUrXCIpI1wiK0dTZXQuZ3ModGhpcyl9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy4kfXNldCB0eXBlKHQpe2NvbnN0IGk9dGhpcy4kO2khPT10JiYoRGVidWcmJlUuZSh0LFBhbmVsTGF5b3V0LFwiUGFuZWxMYXlvdXRcIiksdGhpcy4kPXQsdGhpcy5tYz10aGlzLiQ9PT1QYW5lbC5HcmlkLHRoaXMudSgpLHRoaXMudChcInR5cGVcIixpLHQpKX1nZXQgZWxlbWVudHMoKXtyZXR1cm4gdGhpcy5ULml0ZXJhdG9yfWdldCBuYXR1cmFsQm91bmRzKCl7cmV0dXJuIHRoaXMucWl9Z2V0IHBhZGRpbmcoKXtyZXR1cm4gdGhpcy5laX1zZXQgcGFkZGluZyh0KXt0eXBlb2YgdD09XCJudW1iZXJcIj8odDwwJiZVLlUodCxcIj49IDBcIixQYW5lbCxcInBhZGRpbmdcIiksdD1uZXcgTWFyZ2luKHQpKTooVS5lKHQsTWFyZ2luLFBhbmVsLFwicGFkZGluZ1wiKSx0LmxlZnQ8MCYmVS5VKHQubGVmdCxcIj49IDBcIixQYW5lbCxcInBhZGRpbmc6dmFsdWUubGVmdFwiKSx0LnJpZ2h0PDAmJlUuVSh0LnJpZ2h0LFwiPj0gMFwiLFBhbmVsLFwicGFkZGluZzp2YWx1ZS5yaWdodFwiKSx0LnRvcDwwJiZVLlUodC50b3AsXCI+PSAwXCIsUGFuZWwsXCJwYWRkaW5nOnZhbHVlLnRvcFwiKSx0LmJvdHRvbTwwJiZVLlUodC5ib3R0b20sXCI+PSAwXCIsUGFuZWwsXCJwYWRkaW5nOnZhbHVlLmJvdHRvbVwiKSk7Y29uc3QgaT10aGlzLmVpO2kuZXF1YWxzKHQpfHwodD10Lk4oKSx0aGlzLmVpPXQsdGhpcy51KCksdGhpcy50KFwicGFkZGluZ1wiLGksdCkpfWdldCBkZWZhdWx0QWxpZ25tZW50KCl7cmV0dXJuIHRoaXMuY2R9c2V0IGRlZmF1bHRBbGlnbm1lbnQodCl7Y29uc3QgaT10aGlzLmNkO2kuZXF1YWxzKHQpfHwoRGVidWcmJlUuZSh0LFNwb3QsUGFuZWwsXCJkZWZhdWx0QWxpZ25tZW50XCIpLHQ9dC5OKCksdGhpcy5jZD10LHRoaXMudSgpLHRoaXMudChcImRlZmF1bHRBbGlnbm1lbnRcIixpLHQpKX1nZXQgZGVmYXVsdFN0cmV0Y2goKXtyZXR1cm4gdGhpcy5Hbn1zZXQgZGVmYXVsdFN0cmV0Y2godCl7Y29uc3QgaT10aGlzLkduO2khPT10JiYoRGVidWcmJlUuaih0LFN0cmV0Y2gsXCJTdHJldGNoXCIpLHRoaXMuR249dCx0aGlzLnUoKSx0aGlzLnQoXCJkZWZhdWx0U3RyZXRjaFwiLGksdCkpfWdldCBkZWZhdWx0U2VwYXJhdG9yUGFkZGluZygpe3JldHVybiB0aGlzLkUhPT1udWxsP3RoaXMuRS5lcDpNYXJnaW4uWGd9c2V0IGRlZmF1bHRTZXBhcmF0b3JQYWRkaW5nKHQpe3R5cGVvZiB0PT1cIm51bWJlclwiP3Q9bmV3IE1hcmdpbih0KTpEZWJ1ZyYmVS5lKHQsTWFyZ2luLFBhbmVsLFwiZGVmYXVsdFNlcGFyYXRvclBhZGRpbmdcIik7Y29uc3QgaT10aGlzLmRlZmF1bHRTZXBhcmF0b3JQYWRkaW5nO2kuZXF1YWxzKHQpfHwodD10Lk4oKSx0aGlzLkU9PT1udWxsJiYodGhpcy5FPW5ldyBUYWJsZVBhbmVsU2V0dGluZ3MpLHRoaXMuRS5lcD10LHRoaXMudSgpLHRoaXMudChcImRlZmF1bHRTZXBhcmF0b3JQYWRkaW5nXCIsaSx0KSl9Z2V0IGRlZmF1bHRSb3dTZXBhcmF0b3JTdHJva2UoKXtyZXR1cm4gdGhpcy5FIT09bnVsbD90aGlzLkUuc3A6bnVsbH1zZXQgZGVmYXVsdFJvd1NlcGFyYXRvclN0cm9rZSh0KXtjb25zdCBpPXRoaXMuZGVmYXVsdFJvd1NlcGFyYXRvclN0cm9rZTtpIT09dCYmKHQ9PT1udWxsfHx0eXBlb2YgdD09XCJzdHJpbmdcInx8dCBpbnN0YW5jZW9mIEJydXNoKSYmKHQgaW5zdGFuY2VvZiBCcnVzaCYmdC5wKCksdGhpcy5FPT09bnVsbCYmKHRoaXMuRT1uZXcgVGFibGVQYW5lbFNldHRpbmdzKSx0aGlzLkUuc3A9dCx0aGlzLkwoKSx0aGlzLnQoXCJkZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlXCIsaSx0KSl9Z2V0IGRlZmF1bHRSb3dTZXBhcmF0b3JTdHJva2VXaWR0aCgpe3JldHVybiB0aGlzLkUhPT1udWxsP3RoaXMuRS5ucDoxfXNldCBkZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlV2lkdGgodCl7Y29uc3QgaT10aGlzLmRlZmF1bHRSb3dTZXBhcmF0b3JTdHJva2VXaWR0aDtpIT09dCYmaXNGaW5pdGUodCkmJnQ+PTAmJih0aGlzLkU9PT1udWxsJiYodGhpcy5FPW5ldyBUYWJsZVBhbmVsU2V0dGluZ3MpLHRoaXMuRS5ucD10LHRoaXMudSgpLHRoaXMudChcImRlZmF1bHRSb3dTZXBhcmF0b3JTdHJva2VXaWR0aFwiLGksdCkpfWdldCBkZWZhdWx0Um93U2VwYXJhdG9yRGFzaEFycmF5KCl7cmV0dXJuIHRoaXMuRSE9PW51bGw/dGhpcy5FLm9wOm51bGx9c2V0IGRlZmF1bHRSb3dTZXBhcmF0b3JEYXNoQXJyYXkodCl7Y29uc3QgaT10aGlzLmRlZmF1bHRSb3dTZXBhcmF0b3JEYXNoQXJyYXk7aWYoaSE9PXQpe2lmKHQhPT1udWxsJiYhQXJyYXkuaXNBcnJheSh0KSYmVS5QaSh0LFwiQXJyYXlcIixQYW5lbCxcImRlZmF1bHRSb3dTZXBhcmF0b3JEYXNoQXJyYXk6dmFsdWVcIiksdCE9PW51bGwpe2NvbnN0IGU9dC5sZW5ndGg7bGV0IHM9MDtmb3IobGV0IG49MDtuPGU7bisrKXtjb25zdCBvPXRbbl07KHR5cGVvZiBvIT1cIm51bWJlclwifHwhKG8+PTApfHwhaXNGaW5pdGUobykpJiZVLm4oXCJkZWZhdWx0Um93U2VwYXJhdG9yRGFzaEFycmF5IHZhbHVlIFwiK28rXCIgYXQgaW5kZXggXCIrbitcIiBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIG9yIHplcm8uXCIpLHMrPW99aWYocz09PTApe2lmKGk9PT1udWxsKXJldHVybjt0PW51bGx9fXRoaXMuRT09PW51bGwmJih0aGlzLkU9bmV3IFRhYmxlUGFuZWxTZXR0aW5ncyksdGhpcy5FLm9wPXQsdGhpcy5MKCksdGhpcy50KFwiZGVmYXVsdFJvd1NlcGFyYXRvckRhc2hBcnJheVwiLGksdCl9fWdldCBkZWZhdWx0Q29sdW1uU2VwYXJhdG9yU3Ryb2tlKCl7cmV0dXJuIHRoaXMuRSE9PW51bGw/dGhpcy5FLnJwOm51bGx9c2V0IGRlZmF1bHRDb2x1bW5TZXBhcmF0b3JTdHJva2UodCl7Y29uc3QgaT10aGlzLmRlZmF1bHRDb2x1bW5TZXBhcmF0b3JTdHJva2U7aSE9PXQmJih0PT09bnVsbHx8dHlwZW9mIHQ9PVwic3RyaW5nXCJ8fHQgaW5zdGFuY2VvZiBCcnVzaCkmJih0IGluc3RhbmNlb2YgQnJ1c2gmJnQucCgpLHRoaXMuRT09PW51bGwmJih0aGlzLkU9bmV3IFRhYmxlUGFuZWxTZXR0aW5ncyksdGhpcy5FLnJwPXQsdGhpcy5MKCksdGhpcy50KFwiZGVmYXVsdENvbHVtblNlcGFyYXRvclN0cm9rZVwiLGksdCkpfWdldCBkZWZhdWx0Q29sdW1uU2VwYXJhdG9yU3Ryb2tlV2lkdGgoKXtyZXR1cm4gdGhpcy5FIT09bnVsbD90aGlzLkUubHA6MX1zZXQgZGVmYXVsdENvbHVtblNlcGFyYXRvclN0cm9rZVdpZHRoKHQpe2NvbnN0IGk9dGhpcy5kZWZhdWx0Q29sdW1uU2VwYXJhdG9yU3Ryb2tlV2lkdGg7aSE9PXQmJmlzRmluaXRlKHQpJiZ0Pj0wJiYodGhpcy5FPT09bnVsbCYmKHRoaXMuRT1uZXcgVGFibGVQYW5lbFNldHRpbmdzKSx0aGlzLkUubHA9dCx0aGlzLnUoKSx0aGlzLnQoXCJkZWZhdWx0Q29sdW1uU2VwYXJhdG9yU3Ryb2tlV2lkdGhcIixpLHQpKX1nZXQgZGVmYXVsdENvbHVtblNlcGFyYXRvckRhc2hBcnJheSgpe3JldHVybiB0aGlzLkUhPT1udWxsP3RoaXMuRS5ocDpudWxsfXNldCBkZWZhdWx0Q29sdW1uU2VwYXJhdG9yRGFzaEFycmF5KHQpe2NvbnN0IGk9dGhpcy5kZWZhdWx0Q29sdW1uU2VwYXJhdG9yRGFzaEFycmF5O2lmKGkhPT10KXtpZih0IT09bnVsbCYmIUFycmF5LmlzQXJyYXkodCkmJlUuUGkodCxcIkFycmF5XCIsUGFuZWwsXCJkZWZhdWx0Q29sdW1uU2VwYXJhdG9yRGFzaEFycmF5OnZhbHVlXCIpLHQhPT1udWxsKXtjb25zdCBlPXQubGVuZ3RoO2xldCBzPTA7Zm9yKGxldCBuPTA7bjxlO24rKyl7Y29uc3Qgbz10W25dOyh0eXBlb2YgbyE9XCJudW1iZXJcInx8IShvPj0wKXx8IWlzRmluaXRlKG8pKSYmVS5uKFwiZGVmYXVsdENvbHVtblNlcGFyYXRvckRhc2hBcnJheSB2YWx1ZSBcIitvK1wiIGF0IGluZGV4IFwiK24rXCIgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBvciB6ZXJvLlwiKSxzKz1vfWlmKHM9PT0wKXtpZihpPT09bnVsbClyZXR1cm47dD1udWxsfX10aGlzLkU9PT1udWxsJiYodGhpcy5FPW5ldyBUYWJsZVBhbmVsU2V0dGluZ3MpLHRoaXMuRS5ocD10LHRoaXMuTCgpLHRoaXMudChcImRlZmF1bHRDb2x1bW5TZXBhcmF0b3JEYXNoQXJyYXlcIixpLHQpfX1nZXQgU2goKXtyZXR1cm4gdGhpcy5FIT09bnVsbD90aGlzLkUuU2g6bnVsbH1zZXQgU2godCl7dGhpcy5FPT09bnVsbCYmKHRoaXMuRT1uZXcgVGFibGVQYW5lbFNldHRpbmdzKSx0aGlzLkUuU2g9dH1nZXQgdmlld2JveFN0cmV0Y2goKXtyZXR1cm4gdGhpcy51ZH1zZXQgdmlld2JveFN0cmV0Y2godCl7Y29uc3QgaT10aGlzLnVkO2khPT10JiYoRGVidWcmJlUuaih0LFZpZXdib3hTdHJldGNoLFwiVmlld2JveFN0cmV0Y2hcIiksdGhpcy51ZD10LHRoaXMudSgpLHRoaXMudChcInZpZXdib3hTdHJldGNoXCIsaSx0KSl9Z2V0IGdyaWRDZWxsU2l6ZSgpe3JldHVybiB0aGlzLmtpIT09bnVsbD90aGlzLmtpLmdkOlNpemUuTUN9c2V0IGdyaWRDZWxsU2l6ZSh0KXt0aGlzLmtpPT09bnVsbCYmKHRoaXMua2k9bmV3IEdyaWRQYW5lbFNldHRpbmdzKTtjb25zdCBpPXRoaXMua2kuZ2Q7aWYoIWkuZXF1YWxzKHQpKXsoIXQuaXNSZWFsKCl8fHQud2lkdGg9PT0wfHx0LmhlaWdodD09PTApJiZVLm4oXCJJbnZhbGlkIFBhbmVsLmdyaWRDZWxsU2l6ZTogXCIrdCksdGhpcy5raS5nZD10Lk4oKTtjb25zdCBlPXRoaXMuZGlhZ3JhbTtlIT09bnVsbCYmdGhpcz09PWUuZ3JpZCYmZS5saCgpLHRoaXMuTCgpLHRoaXMudChcImdyaWRDZWxsU2l6ZVwiLGksdCl9fWdldCBncmlkT3JpZ2luKCl7cmV0dXJuIHRoaXMua2khPT1udWxsP3RoaXMua2kubWQ6UG9pbnQuTm99c2V0IGdyaWRPcmlnaW4odCl7dGhpcy5raT09PW51bGwmJih0aGlzLmtpPW5ldyBHcmlkUGFuZWxTZXR0aW5ncyk7Y29uc3QgaT10aGlzLmtpLm1kO2lmKCFpLmVxdWFscyh0KSl7dC5pc1JlYWwoKXx8VS5uKFwiSW52YWxpZCBQYW5lbC5ncmlkT3JpZ2luOiBcIit0KSx0aGlzLmtpLm1kPXQuTigpO2NvbnN0IGU9dGhpcy5kaWFncmFtO2UhPT1udWxsJiZ0aGlzPT09ZS5ncmlkJiZlLmxoKCksdGhpcy5MKCksdGhpcy50KFwiZ3JpZE9yaWdpblwiLGksdCl9fWdldCBncmFkdWF0ZWRNaW4oKXtyZXR1cm4gdGhpcy5odCE9PW51bGw/dGhpcy5odC5hcDowfXNldCBncmFkdWF0ZWRNaW4odCl7Y29uc3QgaT10aGlzLmdyYWR1YXRlZE1pbjtpZihpIT09dCYmKERlYnVnJiZVLnIodCxQYW5lbCxcImdyYWR1YXRlZE1pblwiKSx0aGlzLmh0PT09bnVsbCYmKHRoaXMuaHQ9bmV3IEdyYWRQYW5lbFNldHRpbmdzKSx0aGlzLmh0LmFwPXQsdGhpcy51KCksdGhpcy50KFwiZ3JhZHVhdGVkTWluXCIsaSx0KSx0aGlzLmljKCkpKXtjb25zdCBlPXRoaXMucGFydDtlIT09bnVsbCYmdGhpcy5BYShlLFwiZ3JhZHVhdGVkUmFuZ2VcIil9fWdldCBncmFkdWF0ZWRNYXgoKXtyZXR1cm4gdGhpcy5odCE9PW51bGw/dGhpcy5odC5mcDoxMDB9c2V0IGdyYWR1YXRlZE1heCh0KXtjb25zdCBpPXRoaXMuZ3JhZHVhdGVkTWF4O2lmKGkhPT10JiYoRGVidWcmJlUucih0LFBhbmVsLFwiZ3JhZHVhdGVkTWF4XCIpLHRoaXMuaHQ9PT1udWxsJiYodGhpcy5odD1uZXcgR3JhZFBhbmVsU2V0dGluZ3MpLHRoaXMuaHQuZnA9dCx0aGlzLnUoKSx0aGlzLnQoXCJncmFkdWF0ZWRNYXhcIixpLHQpLHRoaXMuaWMoKSkpe2NvbnN0IGU9dGhpcy5wYXJ0O2UhPT1udWxsJiZ0aGlzLkFhKGUsXCJncmFkdWF0ZWRSYW5nZVwiKX19Z2V0IGdyYWR1YXRlZFJhbmdlKCl7cmV0dXJuIHRoaXMuZ3JhZHVhdGVkTWF4LXRoaXMuZ3JhZHVhdGVkTWlufWdldCBncmFkdWF0ZWRUaWNrVW5pdCgpe3JldHVybiB0aGlzLmh0IT09bnVsbD90aGlzLmh0LmNwOjEwfXNldCBncmFkdWF0ZWRUaWNrVW5pdCh0KXtjb25zdCBpPXRoaXMuZ3JhZHVhdGVkVGlja1VuaXQ7aSE9PXQmJnQ+MCYmKERlYnVnJiZVLnIodCxQYW5lbCxcImdyYWR1YXRlZFRpY2tVbml0XCIpLHRoaXMuaHQ9PT1udWxsJiYodGhpcy5odD1uZXcgR3JhZFBhbmVsU2V0dGluZ3MpLHRoaXMuaHQuY3A9dCx0aGlzLnUoKSx0aGlzLnQoXCJncmFkdWF0ZWRUaWNrVW5pdFwiLGksdCkpfWdldCBncmFkdWF0ZWRUaWNrQmFzZSgpe3JldHVybiB0aGlzLmh0IT09bnVsbD90aGlzLmh0LmRwOjB9c2V0IGdyYWR1YXRlZFRpY2tCYXNlKHQpe2NvbnN0IGk9dGhpcy5ncmFkdWF0ZWRUaWNrQmFzZTtpIT09dCYmKERlYnVnJiZVLnIodCxQYW5lbCxcImdyYWR1YXRlZFRpY2tCYXNlXCIpLHRoaXMuaHQ9PT1udWxsJiYodGhpcy5odD1uZXcgR3JhZFBhbmVsU2V0dGluZ3MpLHRoaXMuaHQuZHA9dCx0aGlzLnUoKSx0aGlzLnQoXCJncmFkdWF0ZWRUaWNrQmFzZVwiLGksdCkpfWdldCBQcygpe3JldHVybiB0aGlzLmh0IT09bnVsbD90aGlzLmh0LlBzOm51bGx9c2V0IFBzKHQpe3RoaXMuaHQhPT1udWxsP3RoaXMuaHQuUHM9dDp0IT09bnVsbCYmKHRoaXMuaHQ9bmV3IEdyYWRQYW5lbFNldHRpbmdzLHRoaXMuaHQuUHM9dCl9Z2V0IHZlKCl7cmV0dXJuIHRoaXMuaHQhPT1udWxsP3RoaXMuaHQudmU6bnVsbH1zZXQgdmUodCl7dGhpcy5odCE9PW51bGw/dGhpcy5odC52ZT10OnQhPT1udWxsJiYodGhpcy5odD1uZXcgR3JhZFBhbmVsU2V0dGluZ3MsdGhpcy5odC52ZT10KX1nZXQgaHMoKXtyZXR1cm4gdGhpcy5odCE9PW51bGw/dGhpcy5odC5oczpudWxsfXNldCBocyh0KXt0aGlzLmh0IT09bnVsbD90aGlzLmh0LmhzPXQ6dCE9PW51bGwmJih0aGlzLmh0PW5ldyBHcmFkUGFuZWxTZXR0aW5ncyx0aGlzLmh0LmhzPXQpfWdldCBBZSgpe3JldHVybiB0aGlzLmh0IT09bnVsbD90aGlzLmh0LkFlOm51bGx9c2V0IEFlKHQpe3RoaXMuaHQhPT1udWxsP3RoaXMuaHQuQWU9dDp0IT09bnVsbCYmKHRoaXMuaHQ9bmV3IEdyYWRQYW5lbFNldHRpbmdzLHRoaXMuaHQuQWU9dCl9TjAodCl7c3VwZXIuTjAodCk7Y29uc3QgaT10aGlzLlQuaCxlPWkubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspaVtzXS5OMCh0KX14aCh0LGkpe2lmKHRoaXMuJD09PVBhbmVsLkdyaWQpe3QuY29tbWl0VHJhbnNmb3JtKCksdGhpcy4kLlVpKHRoaXMsdCxpKTtyZXR1cm59aWYodGhpcy4kPT09UGFuZWwuR3JhZHVhdGVkKXt0LmNvbW1pdFRyYW5zZm9ybSgpLHRoaXMuJC5VaSh0aGlzLHQsaSk7cmV0dXJufWlmKHRoaXMuJD09PVBhbmVsLlRhYmxlKWlmKHQuY29tbWl0VHJhbnNmb3JtKCksdCBpbnN0YW5jZW9mIFNWR0NvbnRleHQpe2NvbnN0IHI9dC5jdXJyZW50RWxlbWVudDt0LmN1cnJlbnRFbGVtZW50PXQubmV3R3JvdXAyKFwiZ29qcy10c1wiKSx0aGlzLnZQKHQsaSksdC5lbmRHcm91cCgpLHQuY3VycmVudEVsZW1lbnQ9cn1lbHNlIHRoaXMudlAodCxpKTtjb25zdCBlPXRoaXMuaXNDbGlwcGluZyYmdGhpcy4kPT09UGFuZWwuU3BvdDtlJiZ0LnNhdmUoKTtjb25zdCBzPXRoaXMuZmluZE1haW5FbGVtZW50KCksbj10aGlzLlQuaCxvPW4ubGVuZ3RoO2ZvcihsZXQgcj0wO3I8bztyKyspe2NvbnN0IGw9bltyXTtlJiZsPT09cyYmKHQuY2xpcEluc3RlYWRPZkZpbGw9ITApLGwuVWkodCxpKSxlJiZsPT09cyYmKHQuY2xpcEluc3RlYWRPZkZpbGw9ITEpfWUmJih0LnJlc3RvcmUoKSx0LmNsZWFyQ29udGV4dENhY2hlKCEwKSl9dlAodCxpKXt0LmxpbmVDYXA9XCJidXR0XCI7Y29uc3QgZT10aGlzLnJvd0NvdW50PjA/dGhpcy5XZTpudWxsLHM9dGhpcy5jb2x1bW5Db3VudD4wP3RoaXMuamU6bnVsbDtlIT09bnVsbCYmdGhpcy51Yih0LGksITAsZSwhMCkscyE9PW51bGwmJnRoaXMudWIodCxpLCExLHMsITApLGUhPT1udWxsJiZ0aGlzLkdMKHQsITAsZSkscyE9PW51bGwmJnRoaXMuR0wodCwhMSxzKSxlIT09bnVsbCYmdGhpcy51Yih0LGksITAsZSwhMSkscyE9PW51bGwmJnRoaXMudWIodCxpLCExLHMsITEpfUdMKHQsaSxlKXtjb25zdCBzPWUubGVuZ3RoLG49dGhpcy5hY3R1YWxCb3VuZHMsbz10aGlzLm5hdHVyYWxCb3VuZHM7bGV0IHI9ITA7Zm9yKGxldCBsPTA7bDxzO2wrKyl7Y29uc3QgaD1lW2xdO2lmKGg9PT12b2lkIDB8fGguYWN0dWFsPT09MCljb250aW51ZTtpZihyKXtyPSExO2NvbnRpbnVlfWlmKGkpe2lmKGgucG9zaXRpb24+by5oZWlnaHQpY29udGludWV9ZWxzZSBpZihoLnBvc2l0aW9uPm8ud2lkdGgpY29udGludWU7bGV0IGY9aC5zZXBhcmF0b3JTdHJva2VXaWR0aDtpc05hTihmKSYmKGY9aT90aGlzLmRlZmF1bHRSb3dTZXBhcmF0b3JTdHJva2VXaWR0aDp0aGlzLmRlZmF1bHRDb2x1bW5TZXBhcmF0b3JTdHJva2VXaWR0aCk7bGV0IGE9aC5zZXBhcmF0b3JTdHJva2U7aWYoYT09PW51bGwmJihhPWk/dGhpcy5kZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlOnRoaXMuZGVmYXVsdENvbHVtblNlcGFyYXRvclN0cm9rZSksZj09PTB8fGE9PT1udWxsKWNvbnRpbnVlO3RoaXMudW4odCxhLCExLCExLG8sbik7bGV0IGM9ITEsdT1oLnNlcGFyYXRvckRhc2hBcnJheTt1PT09bnVsbCYmKHU9aT90aGlzLmRlZmF1bHRSb3dTZXBhcmF0b3JEYXNoQXJyYXk6dGhpcy5kZWZhdWx0Q29sdW1uU2VwYXJhdG9yRGFzaEFycmF5KSx1IT09bnVsbCYmKGM9ITAsdC5lbmFibGVEYXNoKHUsMCkpLHQuYmVnaW5QYXRoKCk7Y29uc3QgZD1oLnBvc2l0aW9uK2Y7aT9kPm8uaGVpZ2h0JiYoZi09ZC1vLmhlaWdodCk6ZD5vLndpZHRoJiYoZi09ZC1vLndpZHRoKTtsZXQgbT1oLnBvc2l0aW9uK2YvMjt0LmxpbmVXaWR0aD1mO2NvbnN0IGc9dGhpcy5laTtpZihpKXttKz1nLnRvcDtjb25zdCBwPWcubGVmdCx3PW8ud2lkdGgtZy5yaWdodDt0Lm1vdmVUbyhwLG0pLHQubGluZVRvKHcsbSl9ZWxzZXttKz1nLmxlZnQ7Y29uc3QgcD1nLnRvcCx3PW8uaGVpZ2h0LWcuYm90dG9tO3QubW92ZVRvKG0scCksdC5saW5lVG8obSx3KX10LnN0cm9rZSgpLHQuZW5kUGF0aCgpLGMmJnQuZGlzYWJsZURhc2goKX19dWIodCxpLGUscyxuKXtjb25zdCBvPXMubGVuZ3RoLHI9dGhpcy5hY3R1YWxCb3VuZHMsbD10aGlzLm5hdHVyYWxCb3VuZHMsaD10aGlzLkhMKCEwKSxmPXRoaXMuSEwoITEpO2ZvcihsZXQgYT0wO2E8bzthKyspe2NvbnN0IGM9c1thXTtpZihjPT09dm9pZCAwfHxjLmJhY2tncm91bmQ9PT1udWxsfHxjLmNvdmVyc1NlcGFyYXRvcnM9PT1ufHxjLmFjdHVhbD09PTApY29udGludWU7Y29uc3QgdT1lP3IuaGVpZ2h0OnIud2lkdGg7aWYoYy5wb3NpdGlvbj51KWNvbnRpbnVlO2xldCBkPWMuY29tcHV0ZUVmZmVjdGl2ZVNwYWNpbmcoKSxtPWMuc2VwYXJhdG9yU3Ryb2tlV2lkdGg7aXNOYU4obSkmJihtPWU/dGhpcy5kZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlV2lkdGg6dGhpcy5kZWZhdWx0Q29sdW1uU2VwYXJhdG9yU3Ryb2tlV2lkdGgpO2xldCBnPWMuc2VwYXJhdG9yU3Ryb2tlO2c9PT1udWxsJiYoZz1lP3RoaXMuZGVmYXVsdFJvd1NlcGFyYXRvclN0cm9rZTp0aGlzLmRlZmF1bHRDb2x1bW5TZXBhcmF0b3JTdHJva2UpLChnPT09bnVsbHx8Yy5pbmRleD09PShlP2g6ZikpJiYobT0wKSxkLT1tO2NvbnN0IHA9Yy5wb3NpdGlvbittO2xldCB3PWQrYy5hY3R1YWw7aWYocCt3PnUmJih3PXUtcCksdzw9MCljb250aW51ZTtjb25zdCB4PXRoaXMuZWk7dGhpcy51bih0LGMuYmFja2dyb3VuZCwhMCwhMSxsLHIpLGU/dC5maWxsUmVjdCh4LmxlZnQscCt4LnRvcCxyLndpZHRoLSh4LmxlZnQreC5yaWdodCksdyk6dC5maWxsUmVjdChwK3gubGVmdCx4LnRvcCx3LHIuaGVpZ2h0LSh4LnRvcCt4LmJvdHRvbSkpfX1ITCh0KXtjb25zdCBpPXQ/dGhpcy5yb3dDb3VudDp0aGlzLmNvbHVtbkNvdW50O2ZvcihsZXQgZT0wO2U8aTtlKyspe2NvbnN0IHM9dD90aGlzLldlW2VdOnRoaXMuamVbZV07aWYocyE9PXZvaWQgMClyZXR1cm4gcy5pbmRleH1yZXR1cm4gMH1vYygpe2NvbnN0IHQ9dGhpcy5ULmgsaT10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPGk7ZSsrKXRbZV0ub2MoKTt0aGlzLkhlKCEwKX1uYyh0LGksZSl7Y29uc3Qgcz10aGlzLnN2ZztpZihzPT09bnVsbClyZXR1cm4hMTtpZih0aGlzLnR5cGU9PT1QYW5lbC5UYWJsZSl7Y29uc3Qgcj1zLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJnb2pzLXRzXCIpLGw9ci5sZW5ndGghPT0wP3JbMF06bnVsbDtsIT09bnVsbCYmKGwuaW5uZXJIVE1MPVwiXCIpLHQuY3VycmVudEVsZW1lbnQ9bCx0aGlzLnZQKHQsaSksdC5jdXJyZW50RWxlbWVudD1udWxsfWVsc2V7aWYodGhpcy4kPT09UGFuZWwuR3JpZClyZXR1cm4gcy5pbm5lckhUTUw9XCJcIixzLnJlbW92ZSgpLCExO2lmKHRoaXMuJD09PVBhbmVsLkdyYWR1YXRlZClyZXR1cm4gcy5pbm5lckhUTUw9XCJcIixzLnJlbW92ZSgpLCExO2lmKHRoaXMuJD09PVBhbmVsLlNwb3QmJnRoaXMuaXNDbGlwcGluZylyZXR1cm4gcy5pbm5lckhUTUw9XCJcIixzLnJlbW92ZSgpLHRoaXMuZ2g9bnVsbCx0aGlzLm9jKCksITF9aWYoIXN1cGVyLm5jKHQsaSxlKSlyZXR1cm4hMTtjb25zdCBuPXRoaXMuVC5oLG89bi5sZW5ndGg7Zm9yKGxldCByPTA7cjxvO3IrKyluW3JdLlVpKHQsaSk7cmV0dXJuITB9bmQodCl7cmV0dXJuITB9QTAodCxpLGUscyl7aWYoIXRoaXMuaXNDbGlwcGluZyl7aWYodGhpcy5XcygpJiZ0LnBhcnRDbGlwUmVjdCE9PW51bGwpe2NvbnN0IG49dC5wYXJ0Q2xpcFJlY3Qsbz10aGlzLlQuaDtsZXQgcj0wLGw9MDtmb3IobGV0IGg9MDtoPG8ubGVuZ3RoO2grKyl7aWYoIW9baF0uaXNWaXNpYmxlT2JqZWN0KCkpY29udGludWU7Y29uc3QgZj1vW2hdLmFjdHVhbEJvdW5kcztyPWg9PT0wP2YueDpNYXRoLm1pbihmLngsciksbD1oPT09MD9mLnk6TWF0aC5taW4oZi55LGwpfXMuc2V0QXR0cmlidXRlTlMobnVsbCxcImNsaXAtcGF0aFwiLGBwYXRoKCdNICR7bi54LWUueC1yfSwke24ueS1lLnktbH0gbCAke24ud2lkdGh9IDAgbCAwICR7bi5oZWlnaHR9IGwgLSR7bi53aWR0aH0gMCB6JylgKTtyZXR1cm59c3VwZXIuQTAodCxpLGUscyl9fWVjKHQsaSxlLHMsbil7Y29uc3Qgbz10aGlzLm1uKCkscj10aGlzLkYsbD0xLyhyLm0xMSpyLm0yMi1yLm0xMipyLm0yMSk7bGV0IGg9ci5tMjIqbCxmPS1yLm0xMipsLGE9LXIubTIxKmwsYz1yLm0xMSpsLHU9bCooci5tMjEqci5keS1yLm0yMipyLmR4KSxkPWwqKHIubTEyKnIuZHgtci5tMTEqci5keSk7aWYodGhpcy5iYWNrZ3JvdW5kIT09bnVsbCl7Y29uc3QgbT10KmgraSphK3UsZz10KmYraSpjK2QscD1lKmgrcyphK3Usdz1lKmYrcypjK2Q7bi5zKDAsMCk7Y29uc3QgeD10aGlzLm5hdHVyYWxCb3VuZHMsaz1HZW8uYmwoMCwwLHgud2lkdGgseC5oZWlnaHQsbSxnLHAsdyxuKTtyZXR1cm4gbi5GKHIpLGt9ZWxzZXtvfHwoaD0xLGY9MCxhPTAsYz0xLHU9MCxkPTApO2NvbnN0IG09dCpoK2kqYSt1LGc9dCpmK2kqYytkLHA9ZSpoK3MqYSt1LHc9ZSpmK3MqYytkO24ucyhwLHcpO2xldCB4PShwLW0pKioyKyh3LWcpKioyLGs9ITE7Y29uc3QgYj10aGlzLlQuaCxTPWIubGVuZ3RoLE09UG9pbnQuYSgpO2xldCBBPW51bGwsQz0xLzAsUD1udWxsO2NvbnN0IE49dGhpcy5pc0NsaXBwaW5nJiZ0aGlzLiQ9PT1QYW5lbC5TcG90O04mJihQPVBvaW50LmEoKSxBPXRoaXMuZmluZE1haW5FbGVtZW50KCksaz1BLmVjKG0sZyxwLHcsUCksayYmKEM9KG0tUC54KSoqMisoZy1QLnkpKioyKSk7Zm9yKGxldCBUPTA7VDxTO1QrKyl7Y29uc3QgTD1iW1RdO2lmKCFMLnZpc2libGV8fEw9PT1BfHwhTC5lYyhtLGcscCx3LE0pKWNvbnRpbnVlO2s9ITA7Y29uc3QgRD0obS1NLngpKioyKyhnLU0ueSkqKjI7RDx4JiYoeD1ELG4uc2V0KE0pKX1yZXR1cm4gTiYmKEM+eCYmbi5zZXQoUCksUG9pbnQubyhQKSksUG9pbnQubyhNKSxvJiZuLkYociksa319RXUoKXtjb25zdCB0PXRoaXMuVC5oLGk9dC5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl0W2VdLkV1KCk7c3VwZXIuRXUoKX11KHQpe2lmKHRoaXMuRW8oKSlyZXR1cm47c3VwZXIudSh0KTtsZXQgaT1udWxsOyh0aGlzLiQ9PT1QYW5lbC5BdXRvfHx0aGlzLiQ9PT1QYW5lbC5MaW5rKSYmKGk9dGhpcy5maW5kTWFpbkVsZW1lbnQoKSk7Y29uc3QgZT10aGlzLlQuaCxzPWUubGVuZ3RoO2ZvcihsZXQgbj0wO248cztuKyspe2NvbnN0IG89ZVtuXTtpZigobz09PWl8fG8uaXNQYW5lbE1haW4pJiZvLnUoITApLG8uZGVzaXJlZFNpemUuaXNSZWFsKCkpY29udGludWU7Y29uc3Qgcj1vLnFzKCExKTshKG8gaW5zdGFuY2VvZiBQbGFjZWhvbGRlcikmJiEobyBpbnN0YW5jZW9mIFBhbmVsKSYmIShvIGluc3RhbmNlb2YgVGV4dEJsb2NrKSYmcj09PTB8fG8udSghMCl9fWxjKCl7aWYodGhpcy5FbygpKXJldHVybjt0aGlzLnBlKCEwKSx0aGlzLnRvKCEwKTtjb25zdCB0PXRoaXMuVC5oLGk9dC5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl0W2VdLmxjKCl9c2MoKXtpZih0aGlzLmViKCk9PT0hMSl7dGhpcy5vZCghMCksdGhpcy5MYSghMCk7Y29uc3QgdD10aGlzLlQuaCxpPXQubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspdFtlXS5UUCgpfX1UUCgpe3RoaXMuTGEoITApO2NvbnN0IHQ9dGhpcy5ULmgsaT10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPGk7ZSsrKXRbZV0uVFAoKX1lZCh0LGksZSxzKXtjb25zdCBuPXRoaXMuSG87bi5zKDAsMCwwLDApO2NvbnN0IG89dGhpcy5kZXNpcmVkU2l6ZSxyPXRoaXMubWluU2l6ZTtlPT09dm9pZCAwJiYoZT1yLndpZHRoLHM9ci5oZWlnaHQpLGU9TWF0aC5tYXgoZSxyLndpZHRoKSxzPU1hdGgubWF4KHMsci5oZWlnaHQpO2NvbnN0IGw9dGhpcy5tYXhTaXplO2lzTmFOKG8ud2lkdGgpfHwodD1NYXRoLm1pbihvLndpZHRoLGwud2lkdGgpKSxpc05hTihvLmhlaWdodCl8fChpPU1hdGgubWluKG8uaGVpZ2h0LGwuaGVpZ2h0KSksdD1NYXRoLm1heChlLHQpLGk9TWF0aC5tYXgocyxpKTtjb25zdCBoPXRoaXMuZWk7dD1NYXRoLm1heCh0LWgubGVmdC1oLnJpZ2h0LDApLGk9TWF0aC5tYXgoaS1oLnRvcC1oLmJvdHRvbSwwKTtjb25zdCBmPXRoaXMuVC5oO3RoaXMuJC5tZWFzdXJlKHRoaXMsdCxpLGYsbixlLHMpO2xldCBhPW4ud2lkdGgraC5sZWZ0K2gucmlnaHQsYz1uLmhlaWdodCtoLnRvcCtoLmJvdHRvbTtpc0Zpbml0ZShvLndpZHRoKSYmKGE9by53aWR0aCksaXNGaW5pdGUoby5oZWlnaHQpJiYoYz1vLmhlaWdodCksYT1NYXRoLm1pbihsLndpZHRoLGEpLGM9TWF0aC5taW4obC5oZWlnaHQsYyksYT1NYXRoLm1heChyLndpZHRoLGEpLGM9TWF0aC5tYXgoci5oZWlnaHQsYyksYT1NYXRoLm1heChlLGEpLGM9TWF0aC5tYXgocyxjKSxuLlZuKGEsYyksdGhpcy5uYXR1cmFsQm91bmRzLlZuKGEsYyksdGhpcy5fbigwLDAsYSxjKX1maW5kTWFpbkVsZW1lbnQoKXtpZih0aGlzLm5sPT09bnVsbCl7Y29uc3QgdD10aGlzLlQuaCxpPXQubGVuZ3RoO2lmKGk9PT0wKXJldHVybiBudWxsO2ZvcihsZXQgZT0wO2U8aTtlKyspe2NvbnN0IHM9dFtlXTtpZihzLmlzUGFuZWxNYWluPT09ITApcmV0dXJuIHRoaXMubmw9cyxzfXRoaXMubmw9dFswXX1yZXR1cm4gdGhpcy5ubH1Hbygpe3JldHVybiB0aGlzLnBhcnQhPT1udWxsP3RoaXMucGFydC5sb2NhdGlvbk9iamVjdDpudWxsfWdldCBwYW5lbExheW91dFN0YXRlKCl7cmV0dXJuIHRoaXMualB9c2V0IHBhbmVsTGF5b3V0U3RhdGUodCl7dGhpcy5qUD10fXloKHQsaSxlLHMpe2NvbnN0IG49dGhpcy5ULmg7aWYodGhpcy5hY3R1YWxCb3VuZHMucyh0LGksZSxzKSwhdGhpcy5kZXNpcmVkU2l6ZS5pc1JlYWwoKSl7bGV0IG89dGhpcy5xcyghMCk7Y29uc3Qgcj10aGlzLm1lYXN1cmVkQm91bmRzLGw9ci53aWR0aCxoPXIuaGVpZ2h0LGY9dGhpcy50bCxhPWYubGVmdCtmLnJpZ2h0LGM9Zi50b3ArZi5ib3R0b207c3dpdGNoKGw9PT1lJiZoPT09cyYmKG89MCksbyl7Y2FzZSAwOihsPmV8fGg+cykmJih0aGlzLnUoKSx0aGlzLmR0KGw+ZT9lOmwsaD5zP3M6aCwwLDApKTticmVhaztjYXNlIDI6dGhpcy51KCEwKSx0aGlzLmR0KGUrYSxzK2MsMCwwKTticmVhaztjYXNlIDU6dGhpcy51KCEwKSx0aGlzLmR0KGUrYSxoK2MsMCwwKTticmVhaztjYXNlIDQ6dGhpcy51KCEwKSx0aGlzLmR0KGwrYSxzK2MsMCwwKTticmVha319dGhpcy4kLmFycmFuZ2UodGhpcyxuLHRoaXMuSG8pfXBoKHQpe2NvbnN0IGk9dGhpcy5uYXR1cmFsQm91bmRzLGU9dGhpcy5HbygpO2lmKFJlY3QuY29udGFpbnMoMCwwLGkud2lkdGgsaS5oZWlnaHQsdC54LHQueSkpe2NvbnN0IHM9dGhpcy5ULmgsbj1zLmxlbmd0aCxvPVBvaW50LksoMCwwKTtmb3IobGV0IHI9bjtyLS07KXtjb25zdCBsPXNbcl07aWYoISghbC52aXNpYmxlJiZsIT09ZSkmJihvLnNldCh0KS5YZShsLkYpLGwuY29udGFpbnNQb2ludChvKSkpcmV0dXJuIFBvaW50Lm8obyksITB9cmV0dXJuIFBvaW50Lm8obyksdGhpcy5SdCE9PW51bGx9cmV0dXJuITF9YjAodCl7aWYodGhpcy5abj09PXQpcmV0dXJuIHRoaXM7Y29uc3QgaT10aGlzLlQuaCxlPWkubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspe2NvbnN0IG89aVtzXS5iMCh0KTtpZihvIT09bnVsbClyZXR1cm4gb31yZXR1cm4gbnVsbH13YWxrVmlzdWFsVHJlZUZyb20odCxpKXtpZihpKHRoaXMsdCksdCBpbnN0YW5jZW9mIFBhbmVsKXtjb25zdCBlPXQuVC5oLHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl0aGlzLndhbGtWaXN1YWxUcmVlRnJvbShlW25dLGkpfX1Kcih0KXt0aGlzLnFMKHRoaXMsdCl9cUwodCxpKXtpKHQpO2NvbnN0IGU9dC5ULmgscz1lLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKXtjb25zdCBvPWVbbl07byBpbnN0YW5jZW9mIFBhbmVsJiZ0aGlzLnFMKG8saSl9fVZJKHQpe3RoaXMuV0wodGhpcyx0KX1XTCh0LGkpe2lmKGkodCksdCBpbnN0YW5jZW9mIFBhbmVsKXtjb25zdCBlPXQuVC5oLHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl0aGlzLldMKGVbbl0saSl9fWZpbmRJblZpc3VhbFRyZWUodCl7cmV0dXJuIHRoaXMuakwodGhpcyx0KX1qTCh0LGkpe2lmKGkodCkpcmV0dXJuIHQ7aWYodCBpbnN0YW5jZW9mIFBhbmVsKXtjb25zdCBlPXQuVC5oLHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl7Y29uc3Qgbz10aGlzLmpMKGVbbl0saSk7aWYobyE9PW51bGwpcmV0dXJuIG99fXJldHVybiBudWxsfWZpbmRPYmplY3QodCl7aWYodGhpcy5uYW1lPT09dClyZXR1cm4gdGhpcztjb25zdCBpPXRoaXMuVC5oO2xldCBlPWkubGVuZ3RoO3RoaXMuekkoKSYmKGU9dGhpcy5ncCgpKTtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPWlbc107aWYobiBpbnN0YW5jZW9mIFBhbmVsKXtjb25zdCBvPW4uZmluZE9iamVjdCh0KTtpZihvIT09bnVsbClyZXR1cm4gb31pZihuLm5hbWU9PT10KXJldHVybiBufXJldHVybiBudWxsfXZMKCl7Y29uc3QgdD10aGlzLlQuaCxpPXQubGVuZ3RoO2xldCBlPTA7Zm9yKGxldCBzPTA7czxpO3MrKyl7Y29uc3Qgbj10W3NdO24gaW5zdGFuY2VvZiBQYW5lbD9lPU1hdGgubWF4KGUsbi52TCgpKTpuIGluc3RhbmNlb2YgU2hhcGUmJihlPU1hdGgubWF4KGUsbi5YSSgpKSl9cmV0dXJuIGV9bW4oKXtyZXR1cm4hKHRoaXMudHlwZT09PVBhbmVsLlRhYmxlUm93fHx0aGlzLnR5cGU9PT1QYW5lbC5UYWJsZUNvbHVtbil9ZWwoKXtyZXR1cm4gdGhpcy50eXBlPT09UGFuZWwuVGFibGVSb3d8fHRoaXMudHlwZT09PVBhbmVsLlRhYmxlQ29sdW1ufU5BKHQsaSxlKXtpZih0aGlzLnBpY2thYmxlPT09ITF8fChpPT09dm9pZCAwJiYoaT1udWxsKSxlPT09dm9pZCAwJiYoZT1udWxsKSx0aGlzLm5zKCkpKXJldHVybiBudWxsO2NvbnN0IHM9dGhpcy5uYXR1cmFsQm91bmRzLG49MS90aGlzLmdldERvY3VtZW50U2NhbGUoKSxvPXRoaXMubW4oKSxyPW8/dDpQb2ludC5LKHQueCx0LnkpLlhlKHRoaXMuRiksbD10aGlzLmRpYWdyYW07bGV0IGg9MTAsZj01O2lmKGwhPT1udWxsJiYoaD1sLmdldElucHV0T3B0aW9uKFwiZXh0cmFUb3VjaEFyZWFcIiksZj1oLzIpLFJlY3QuY29udGFpbnMoLShmKm4pLC0oZipuKSxzLndpZHRoK2gqbixzLmhlaWdodCtoKm4sci54LHIueSkpe2lmKCF0aGlzLm1jKXtjb25zdCBjPXRoaXMuVC5oLHU9Yy5sZW5ndGgsZD1Qb2ludC5hKCksbT10aGlzLmlzQ2xpcHBpbmcmJnRoaXMuJD09PVBhbmVsLlNwb3QsZz1tP3RoaXMuZmluZE1haW5FbGVtZW50KCk6bnVsbDtpZihtJiYoZy5tbigpP2Quc2V0KHQpLlhlKGcuRik6ZC5zZXQodCksIWcuY29udGFpbnNQb2ludChkKSkpcmV0dXJuIFBvaW50Lm8oZCksb3x8UG9pbnQubyhyKSxudWxsO2NvbnN0IHA9dGhpcy5HbygpO2ZvcihsZXQgdz11O3ctLTspe2NvbnN0IHg9Y1t3XTtpZigheC52aXNpYmxlJiZ4IT09cHx8KHgubW4oKT9kLnNldCh0KS5YZSh4LkYpOmQuc2V0KHQpLG0mJng9PT1nKSljb250aW51ZTtsZXQgaz1udWxsO2lmKHggaW5zdGFuY2VvZiBQYW5lbD9rPXguTkEoZCxpLGUpOngucGlja2FibGU9PT0hMCYmeC5jb250YWluc1BvaW50KGQpJiYoaz14KSxrIT09bnVsbCYmKGkhPT1udWxsJiYoaz1pKGspKSxrIT09bnVsbCYmKGU9PT1udWxsfHxlKGspKSkpcmV0dXJuIFBvaW50Lm8oZCksb3x8UG9pbnQubyhyKSxrfVBvaW50Lm8oZCl9aWYodGhpcy5iYWNrZ3JvdW5kPT09bnVsbClyZXR1cm4gb3x8UG9pbnQubyhyKSxudWxsO2NvbnN0IGE9UmVjdC5jb250YWlucygwLDAscy53aWR0aCxzLmhlaWdodCxyLngsci55KT90aGlzOm51bGw7cmV0dXJuIG98fFBvaW50Lm8ociksYX1yZXR1cm4gb3x8UG9pbnQubyhyKSxudWxsfUNBKHQsaSxlLHMpe2lmKHRoaXMucGlja2FibGU9PT0hMSlyZXR1cm4hMTtpPT09dm9pZCAwJiYoaT1udWxsKSxlPT09dm9pZCAwJiYoZT1udWxsKTtjb25zdCBuPXRoaXMubmF0dXJhbEJvdW5kcyxvPXRoaXMubW4oKSxyPW8/dDpQb2ludC5LKHQueCx0LnkpLlhlKHRoaXMuRiksbD10aGlzLmVsKCksaD1SZWN0LmNvbnRhaW5zKDAsMCxuLndpZHRoLG4uaGVpZ2h0LHIueCxyLnkpO2lmKGx8fGgpe2lmKCF0aGlzLm1jKXtjb25zdCBmPXRoaXMuVC5oLGE9Zi5sZW5ndGgsYz1Qb2ludC5hKCksdT10aGlzLkdvKCk7Zm9yKGxldCBkPWE7ZC0tOyl7Y29uc3QgbT1mW2RdO2lmKCFtLnZpc2libGUmJm0hPT11KWNvbnRpbnVlO20ubW4oKT9jLnNldCh0KS5YZShtLkYpOmMuc2V0KHQpO2xldCBnPW07Y29uc3QgcD1tIGluc3RhbmNlb2YgUGFuZWw/bTpudWxsO2lmKHAhPT1udWxsP3AuQ0EoYyxpLGUscyk6Zy5jb250YWluc1BvaW50KGMpKXtpZihnLnBpY2thYmxlPT09ITEpY29udGludWU7aSE9PW51bGwmJihnPWkoZykpLGchPT1udWxsJiYoZT09PW51bGx8fGUoZykpJiZzLmFkZChnKX19UG9pbnQubyhjKX1yZXR1cm4gb3x8UG9pbnQubyhyKSxoJiZ0aGlzLmJhY2tncm91bmQhPT1udWxsfXJldHVybiBvfHxQb2ludC5vKHIpLCExfUVtKHQsaSxlLHMsbixvKXtpZih0aGlzLnBpY2thYmxlPT09ITEpcmV0dXJuITE7aT09PXZvaWQgMCYmKGk9bnVsbCksZT09PXZvaWQgMCYmKGU9bnVsbCk7bGV0IHI9bztpZihyPT09dm9pZCAwJiYocj1UcmFuc2Zvcm0uYSgpLHIuVmkoKSksci51Zih0aGlzLkYpLHRoaXMuY29udGFpbmVkSW5SZWN0KHQscikpcmV0dXJuIHRoaXMuSlAoaSxlLG4pLG89PT12b2lkIDAmJlRyYW5zZm9ybS5vKHIpLCEwO2lmKHRoaXMuaW50ZXJzZWN0c1JlY3QodCxyKSl7aWYoIXRoaXMubWMpe2NvbnN0IGw9dGhpcy5HbygpLGg9dGhpcy5ULmgsZj1oLmxlbmd0aDtmb3IobGV0IGE9ZjthLS07KXtjb25zdCBjPWhbYV07aWYoIWMudmlzaWJsZSYmYyE9PWwpY29udGludWU7Y29uc3QgdT1jLmFjdHVhbEJvdW5kcyxkPXRoaXMubmF0dXJhbEJvdW5kcztpZih1Lng+ZC53aWR0aHx8dS55PmQuaGVpZ2h0fHx1LngrdS53aWR0aDwwfHx1LnkrdS5oZWlnaHQ8MCljb250aW51ZTtsZXQgbT1jO2NvbnN0IGc9YyBpbnN0YW5jZW9mIFBhbmVsP2M6bnVsbCxwPVRyYW5zZm9ybS5hKCk7cC5zZXQociksKGchPT1udWxsP2cuRW0odCxpLGUscyxuLHApOm0uUEwodCxzLHApKSYmKGkhPT1udWxsJiYobT1pKG0pKSxtIT09bnVsbCYmKGU9PT1udWxsfHxlKG0pKSYmbi5hZGQobSkpLFRyYW5zZm9ybS5vKHApfX1yZXR1cm4gbz09PXZvaWQgMCYmVHJhbnNmb3JtLm8ociksc31yZXR1cm4gbz09PXZvaWQgMCYmVHJhbnNmb3JtLm8ociksITF9SlAodCxpLGUpe2NvbnN0IHM9dGhpcy5ULmgsbj1zLmxlbmd0aDtmb3IobGV0IG89bjtvLS07KXtjb25zdCByPXNbb107aWYoIXIudmlzaWJsZSljb250aW51ZTtjb25zdCBsPXIuYWN0dWFsQm91bmRzLGg9dGhpcy5uYXR1cmFsQm91bmRzO2lmKGwueD5oLndpZHRofHxsLnk+aC5oZWlnaHR8fGwueCtsLndpZHRoPDB8fGwueStsLmhlaWdodDwwKWNvbnRpbnVlO3IgaW5zdGFuY2VvZiBQYW5lbCYmci5KUCh0LGksZSk7bGV0IGY9cjt0IT09bnVsbCYmKGY9dChmKSksZiE9PW51bGwmJihpPT09bnVsbHx8aShmKSkmJmUuYWRkKGYpfX1BQSh0LGksZSxzLG4sbyl7aWYodGhpcy5waWNrYWJsZT09PSExKXJldHVybiExO2U9PT12b2lkIDAmJihlPW51bGwpLHM9PT12b2lkIDAmJihzPW51bGwpO2NvbnN0IHI9dGhpcy5uYXR1cmFsQm91bmRzLGw9dGhpcy5tbigpLGg9bD90OlBvaW50LksodC54LHQueSkuWGUodGhpcy5GKSxmPWw/aTpQb2ludC5LKGkueCxpLnkpLlhlKHRoaXMuRiksYT1oLmRpc3RhbmNlU3F1YXJlZFBvaW50KGYpLGM9aC54PjAmJmgueDxyLndpZHRoJiZoLnk+MCYmaC55PHIuaGVpZ2h0fHxQb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZChoLngsaC55LDAsMCwwLHIuaGVpZ2h0KTw9YXx8UG9pbnQuZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQoaC54LGgueSwwLHIuaGVpZ2h0LHIud2lkdGgsci5oZWlnaHQpPD1hfHxQb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZChoLngsaC55LHIud2lkdGgsci5oZWlnaHQsci53aWR0aCwwKTw9YXx8UG9pbnQuZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQoaC54LGgueSxyLndpZHRoLDAsMCwwKTw9YSx1PWguZGlzdGFuY2VTcXVhcmVkKDAsMCk8PWEmJmguZGlzdGFuY2VTcXVhcmVkKDAsci5oZWlnaHQpPD1hJiZoLmRpc3RhbmNlU3F1YXJlZChyLndpZHRoLDApPD1hJiZoLmRpc3RhbmNlU3F1YXJlZChyLndpZHRoLHIuaGVpZ2h0KTw9YTtpZihsfHwoUG9pbnQubyhoKSxQb2ludC5vKGYpKSxjKXtpZighdGhpcy5tYyl7Y29uc3QgZD1Qb2ludC5hKCksbT1Qb2ludC5hKCksZz10aGlzLkdvKCkscD10aGlzLlQuaCx3PXAubGVuZ3RoO2ZvcihsZXQgeD13O3gtLTspe2NvbnN0IGs9cFt4XTtpZighay52aXNpYmxlJiZrIT09Zyljb250aW51ZTtjb25zdCBiPWsuYWN0dWFsQm91bmRzLFM9dGhpcy5uYXR1cmFsQm91bmRzO2lmKGwmJihiLng+Uy53aWR0aHx8Yi55PlMuaGVpZ2h0fHxiLngrYi53aWR0aDwwfHxiLnkrYi5oZWlnaHQ8MCkpY29udGludWU7aWYoay5tbigpKXtjb25zdCBDPWsuRjtkLnNldCh0KS5YZShDKSxtLnNldChpKS5YZShDKX1lbHNlIGQuc2V0KHQpLG0uc2V0KGkpO2xldCBNPWs7Y29uc3QgQT1rIGluc3RhbmNlb2YgUGFuZWw/azpudWxsOyhBIT09bnVsbD9BLkFBKGQsbSxlLHMsbixvKTpNLk5MKGQsbSxuKSkmJihlIT09bnVsbCYmKE09ZShNKSksTSE9PW51bGwmJihzPT09bnVsbHx8cyhNKSkmJm8uYWRkKE0pKX1Qb2ludC5vKGQpLFBvaW50Lm8obSl9cmV0dXJuIG4/Yzp1fXJldHVybiExfUdQKHQpe2xldCBpPW51bGw7aWYodCBpbnN0YW5jZW9mIFNoYXBlKXtpPXQuc3BvdDEsaT09PVNwb3QuRGVmYXVsdCYmKGk9bnVsbCk7Y29uc3QgZT10Lmdlb21ldHJ5O2UhPT1udWxsJiZpPT09bnVsbCYmKGk9ZS5zcG90MSl9cmV0dXJuIGk9PT1udWxsJiYoaT1TcG90LlRvcExlZnQpLGl9SFAodCl7bGV0IGk9bnVsbDtpZih0IGluc3RhbmNlb2YgU2hhcGUpe2k9dC5zcG90MixpPT09U3BvdC5EZWZhdWx0JiYoaT1udWxsKTtjb25zdCBlPXQuZ2VvbWV0cnk7ZSE9PW51bGwmJmk9PT1udWxsJiYoaT1lLnNwb3QyKX1yZXR1cm4gaT09PW51bGwmJihpPVNwb3QuQm90dG9tUmlnaHQpLGl9YWRkKC4uLnQpe2ZvcihsZXQgaT0wO2k8dC5sZW5ndGg7aSsrKXRoaXMuaW5zZXJ0QXQodGhpcy5ULmNvdW50LHRbaV0pO3JldHVybiB0aGlzfWVsdCh0KXtyZXR1cm4gdGhpcy5ULmVsdCh0KX1pbnNlcnRBdCh0LGkpe0RlYnVnJiZVLmUoaSxHcmFwaE9iamVjdCxQYW5lbCxcImluc2VydEF0XCIpLGkgaW5zdGFuY2VvZiBQYXJ0JiZVLm4oXCJDYW5ub3QgYWRkIGEgUGFydCB0byBhIFBhbmVsOiBcIitpK1wiOyB1c2UgYSBQYW5lbCBpbnN0ZWFkXCIpLCh0aGlzPT09aXx8dGhpcy5pc0NvbnRhaW5lZEJ5KGkpKSYmKHRoaXM9PT1pJiZVLm4oXCJDYW5ub3QgbWFrZSBhIFBhbmVsIGNvbnRhaW4gaXRzZWxmOiBcIit0aGlzLnRvU3RyaW5nKCkpLFUubihcIkNhbm5vdCBtYWtlIGEgUGFuZWwgaW5kaXJlY3RseSBjb250YWluIGl0c2VsZjogXCIrdGhpcy50b1N0cmluZygpK1wiIGFscmVhZHkgY29udGFpbnMgXCIraS50b1N0cmluZygpKSk7Y29uc3QgZT1pLnBhbmVsO2lmKGUhPT1udWxsJiZlIT09dGhpcyYmVS5uKFwiQ2Fubm90IGFkZCBhIEdyYXBoT2JqZWN0IHRoYXQgYWxyZWFkeSBiZWxvbmdzIHRvIGFub3RoZXIgUGFuZWwgdG8gdGhpcyBQYW5lbDogXCIraS50b1N0cmluZygpK1wiLCBhbHJlYWR5IGNvbnRhaW5lZCBieSBcIitlLnRvU3RyaW5nKCkrXCIsIGNhbm5vdCBiZSBzaGFyZWQgYnkgdGhpcyBQYW5lbDogXCIrdGhpcy50b1N0cmluZygpKSx0aGlzLiQ9PT1QYW5lbC5HcmlkJiYhKGkgaW5zdGFuY2VvZiBTaGFwZSkmJlUubihcIkNhbiBvbmx5IGFkZCBTaGFwZXMgdG8gYSBHcmlkIFBhbmVsLCBub3Q6IFwiK2kpLHRoaXMuJD09PVBhbmVsLkdyYWR1YXRlZCYmIShpIGluc3RhbmNlb2YgU2hhcGV8fGkgaW5zdGFuY2VvZiBUZXh0QmxvY2spJiZVLm4oXCJDYW4gb25seSBhZGQgU2hhcGVzIG9yIFRleHRCbG9ja3MgdG8gYSBHcmFkdWF0ZWQgUGFuZWwsIG5vdDogXCIraSksaS5UYSh0aGlzKSxpLmlsPW51bGwsdGhpcy5pdGVtQXJyYXkhPT1udWxsKXtjb25zdCByPWkuZGF0YTtVLlcocikmJih0aGlzLnZzPT09bnVsbCYmKHRoaXMudnM9bmV3IEdNYXApLHRoaXMudnMuc2V0KHIsaSkpfWNvbnN0IHM9dGhpcy5UO2xldCBuPS0xO2lmKGU9PT10aGlzKXtsZXQgcj0tMTtjb25zdCBsPXRoaXMuVC5oLGg9bC5sZW5ndGg7Zm9yKGxldCBmPTA7ZjxoO2YrKylpZihsW2ZdPT09aSl7cj1mO2JyZWFrfWlmKHIhPT0tMSl7aWYocj09PXR8fHIrMT49cy5jb3VudCYmdD49cy5jb3VudClyZXR1cm47cy5yZW1vdmVBdChyKSxuPXJ9ZWxzZSBVLm4oXCJlbGVtZW50IFwiK2kudG9TdHJpbmcoKStcIiBoYXMgcGFuZWwgXCIrZS50b1N0cmluZygpK1wiIGJ1dCBpcyBub3QgY29udGFpbmVkIGJ5IGl0LlwiKX0odDwwfHx0PnMuY291bnQpJiYodD1zLmNvdW50KSxzLmluc2VydEF0KHQsaSksKHQ9PT0wfHxpLmlzUGFuZWxNYWluKSYmKHRoaXMubmw9bnVsbCksdGhpcy5FbygpfHx0aGlzLnUoKSxpLnUoITEpLGkucG9ydElkIT09bnVsbD90aGlzLnluPSEwOmkgaW5zdGFuY2VvZiBQYW5lbCYmaS55bj09PSEwJiYodGhpcy55bj0hMCksdGhpcy5ocz1udWxsLHRoaXMuaXNFbmFibGVkT2JqZWN0KCl8fHRoaXMuZGIoaSwhMSk7Y29uc3Qgbz10aGlzLnBhcnQ7aWYobyE9PW51bGwpe28uTzAoKSxvLnBjKCksdGhpcy55biYmbyBpbnN0YW5jZW9mIE5vZGUmJihvLnluPSEwKSxvLnluJiZvIGluc3RhbmNlb2YgTm9kZSYmKG8uaGU9bnVsbCk7Y29uc3Qgcj10aGlzLmRpYWdyYW07aWYociE9PW51bGwmJnIudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZylyZXR1cm47biE9PS0xJiZvLnJhaXNlQ2hhbmdlZEV2ZW50KDQsXCJlbGVtZW50c1wiLHRoaXMsaSxudWxsLG4sbnVsbCksby5yYWlzZUNoYW5nZWRFdmVudCgzLFwiZWxlbWVudHNcIix0aGlzLG51bGwsaSxudWxsLHQpfX1nZXQgeW4oKXtyZXR1cm4odGhpcy5sJjgzODg2MDgpIT09MH1zZXQgeW4odCl7KHRoaXMubCY4Mzg4NjA4KSE9PTAhPT10JiYodGhpcy5sPXRoaXMubF44Mzg4NjA4KX1OUCgpe3JldHVybih0aGlzLmwmMTY3NzcyMTYpIT09MH0kUCh0KXt0P3RoaXMubHw9MTY3NzcyMTY6dGhpcy5sJj0tMTY3NzcyMTd9QkkodCl7dC5UYSh0aGlzKSx0LmlsPW51bGw7Y29uc3QgaT10aGlzLlQsZT1pLmNvdW50O2kuaW5zZXJ0QXQoZSx0KTtjb25zdCBzPXRoaXMucGFydDtpZihzIT09bnVsbCl7cy5PMCgpLHQucG9ydElkIT09bnVsbCYmcyBpbnN0YW5jZW9mIE5vZGUmJihzLnluPSEwKTtjb25zdCBuPXRoaXMuZGlhZ3JhbTtpZihuIT09bnVsbCYmbi51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nKXJldHVybjtzLnJhaXNlQ2hhbmdlZEV2ZW50KDMsXCJlbGVtZW50c1wiLHRoaXMsbnVsbCx0LG51bGwsZSl9fXNJKHQpe2NvbnN0IGk9dGhpcy5ULmgsZT1pLmxlbmd0aDtsZXQgcz0tMTtmb3IobGV0IG49MDtuPGU7bisrKWlmKGlbbl09PT10KXtzPW47YnJlYWt9cmV0dXJuIHN9cmVtb3ZlKHQpe0RlYnVnJiZVLmUodCxHcmFwaE9iamVjdCxQYW5lbCxcInJlbW92ZTplbGVtZW50XCIpO2NvbnN0IGk9dGhpcy5ULmgsZT1pLmxlbmd0aDtsZXQgcz0tMTtmb3IobGV0IG49MDtuPGU7bisrKWlmKGlbbl09PT10KXtzPW47YnJlYWt9cyE9PS0xJiZ0aGlzLm5lKHMsITApfXJlbW92ZUF0KHQpe0RlYnVnJiZVLnIodCxQYW5lbCxcInJlbW92ZUF0OmlkeFwiKSx0Pj0wJiZ0aGlzLm5lKHQsITApfW5lKHQsaSl7Y29uc3QgZT10aGlzLlQscz1lLmVsdCh0KTtpZihzLmlsPW51bGwscy5UYShudWxsKSx0aGlzLnZzIT09bnVsbCl7Y29uc3Qgbz1zLmRhdGE7VS5XKG8pJiZ0aGlzLnZzLmRlbGV0ZShvKX1lLnJlbW92ZUF0KHQpLHRoaXMucGUoITEpLHRoaXMudSgpLHRoaXMubmw9PT1zJiYodGhpcy5ubD1udWxsKSx0aGlzLmhzPW51bGw7Y29uc3Qgbj10aGlzLnBhcnQ7aWYobiE9PW51bGwpe24uTzAoKSxuLnBjKCksbi5pbnZhbGlkYXRlQWRvcm5tZW50cygpLG4gaW5zdGFuY2VvZiBOb2RlJiYocyBpbnN0YW5jZW9mIFBhbmVsP3Mud2Fsa1Zpc3VhbFRyZWVGcm9tKHMsKHIsbCk9Pm4uSVAobCxpKSk6bi5JUChzLGkpKTtjb25zdCBvPXRoaXMuZGlhZ3JhbTtpZihvIT09bnVsbCYmby51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nKXJldHVybjtuLnJhaXNlQ2hhbmdlZEV2ZW50KDQsXCJlbGVtZW50c1wiLHRoaXMscyxudWxsLHQsbnVsbCl9fWdldCBXZSgpe3JldHVybiB0aGlzLkU9PT1udWxsJiYodGhpcy5FPW5ldyBUYWJsZVBhbmVsU2V0dGluZ3MpLHRoaXMuRS5XZX1nZXQgcm93Q291bnQoKXtyZXR1cm4gdGhpcy5FPT09bnVsbD8wOnRoaXMuV2UubGVuZ3RofWdldFJvd0RlZmluaXRpb24odCl7RGVidWcmJlUucih0LFBhbmVsLFwiZ2V0Um93RGVmaW5pdGlvbjppZHhcIiksdDwwJiZVLlUodCxcIj49IDBcIixQYW5lbCxcImdldFJvd0RlZmluaXRpb246aWR4XCIpLHQ9TWF0aC5yb3VuZCh0KTtjb25zdCBpPXRoaXMuV2U7aWYoaVt0XT09PXZvaWQgMCl7Y29uc3QgZT1uZXcgUm93Q29sdW1uRGVmaW5pdGlvbjtlLlRhKHRoaXMpLGUuaXNSb3c9ITAsZS5pbmRleD10LGlbdF09ZSx0aGlzLnJhaXNlQ2hhbmdlZEV2ZW50KDMsXCJyb3dkZWZzXCIsdGhpcyxudWxsLGUsbnVsbCx0KX1yZXR1cm4gaVt0XX1yZW1vdmVSb3dEZWZpbml0aW9uKHQpe2lmKERlYnVnJiZVLnIodCxQYW5lbCxcInJlbW92ZVJvd0RlZmluaXRpb246aWR4XCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsUGFuZWwsXCJyZW1vdmVSb3dEZWZpbml0aW9uOmlkeFwiKSx0aGlzLnJvd0NvdW50PT09MClyZXR1cm47dD1NYXRoLnJvdW5kKHQpO2NvbnN0IGk9dGhpcy5XZSxlPWlbdF07aWYoZSl7aVt0XT12b2lkIDA7bGV0IHM9aS5sZW5ndGgtMTtmb3IoO3M+PTAmJmlbcy0tXT09PXZvaWQgMDspaS5sZW5ndGgtLTt0aGlzLnJhaXNlQ2hhbmdlZEV2ZW50KDQsXCJyb3dkZWZzXCIsdGhpcyxlLG51bGwsdCxudWxsKSx0aGlzLnUoKX19aUwodCxpKXtjb25zdCBlPXRoaXMuV2U7aWYoISh0PDApKXtpZihlW3RdPWkgaW5zdGFuY2VvZiBSb3dDb2x1bW5EZWZpbml0aW9uP2k6dm9pZCAwLCFpKXtsZXQgcz1lLmxlbmd0aC0xO2Zvcig7cz49MCYmZVtzLS1dPT09dm9pZCAwOyllLmxlbmd0aC0tfXRoaXMudSgpfX1nZXQgamUoKXtyZXR1cm4gdGhpcy5FPT09bnVsbCYmKHRoaXMuRT1uZXcgVGFibGVQYW5lbFNldHRpbmdzKSx0aGlzLkUuamV9Z2V0IGNvbHVtbkNvdW50KCl7cmV0dXJuIHRoaXMuRT09PW51bGw/MDp0aGlzLmplLmxlbmd0aH1nZXRDb2x1bW5EZWZpbml0aW9uKHQpe0RlYnVnJiZVLnIodCxQYW5lbCxcImdldENvbHVtbkRlZmluaXRpb246aWR4XCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsUGFuZWwsXCJnZXRDb2x1bW5EZWZpbml0aW9uOmlkeFwiKSx0PU1hdGgucm91bmQodCk7Y29uc3QgaT10aGlzLmplO2lmKGlbdF09PT12b2lkIDApe2NvbnN0IGU9bmV3IFJvd0NvbHVtbkRlZmluaXRpb247ZS5UYSh0aGlzKSxlLmlzUm93PSExLGUuaW5kZXg9dCxpW3RdPWUsdGhpcy5yYWlzZUNoYW5nZWRFdmVudCgzLFwiY29sZGVmc1wiLHRoaXMsbnVsbCxlLG51bGwsdCl9cmV0dXJuIGlbdF19cmVtb3ZlQ29sdW1uRGVmaW5pdGlvbih0KXtpZihEZWJ1ZyYmVS5yKHQsUGFuZWwsXCJyZW1vdmVDb2x1bW5EZWZpbml0aW9uOmlkeFwiKSx0PDAmJlUuVSh0LFwiPj0gMFwiLFBhbmVsLFwicmVtb3ZlQ29sdW1uRGVmaW5pdGlvbjppZHhcIiksdGhpcy5jb2x1bW5Db3VudD09PTApcmV0dXJuO3Q9TWF0aC5yb3VuZCh0KTtjb25zdCBpPXRoaXMuamUsZT1pW3RdO2lmKGUpe2lbdF09dm9pZCAwO2xldCBzPWkubGVuZ3RoLTE7Zm9yKDtzPj0wJiZpW3MtLV09PT12b2lkIDA7KWkubGVuZ3RoLS07dGhpcy5yYWlzZUNoYW5nZWRFdmVudCg0LFwiY29sZGVmc1wiLHRoaXMsZSxudWxsLHQsbnVsbCksdGhpcy51KCl9fWVMKHQsaSl7Y29uc3QgZT10aGlzLmplO2lmKCEodDwwKSl7aWYoZVt0XT1pIGluc3RhbmNlb2YgUm93Q29sdW1uRGVmaW5pdGlvbj9pOnZvaWQgMCwhaSl7bGV0IHM9ZS5sZW5ndGgtMTtmb3IoO3M+PTAmJmVbcy0tXT09PXZvaWQgMDspZS5sZW5ndGgtLX10aGlzLnUoKX19YWRkUm93Q29sdW1uRGVmaW5pdGlvbih0KXtsZXQgaT1udWxsO3JldHVybiB0LmlzUm93P2k9dGhpcy5nZXRSb3dEZWZpbml0aW9uKHQuaW5kZXgpOnQuaXNSb3d8fChpPXRoaXMuZ2V0Q29sdW1uRGVmaW5pdGlvbih0LmluZGV4KSksaSYmaS5uYih0KSx0aGlzfWFkZFJvd0RlZmluaXRpb24odCxpKXtjb25zdCBlPXRoaXMuZ2V0Um93RGVmaW5pdGlvbih0KTtyZXR1cm4gZSYmZS5uYihuZXcgUm93Q29sdW1uRGVmaW5pdGlvbihpKSksdGhpc31hZGRDb2x1bW5EZWZpbml0aW9uKHQsaSl7Y29uc3QgZT10aGlzLmdldENvbHVtbkRlZmluaXRpb24odCk7cmV0dXJuIGUmJmUubmIobmV3IFJvd0NvbHVtbkRlZmluaXRpb24oaSkpLHRoaXN9Z2V0IHJvd1NpemluZygpe3JldHVybiB0aGlzLkUhPT1udWxsP3RoaXMuRS5tcDozfXNldCByb3dTaXppbmcodCl7Y29uc3QgaT10aGlzLnJvd1NpemluZztpIT09dCYmKERlYnVnJiZ0IT09MyYmdCE9PTImJlUubihcIlBhbmVsLnJvd1NpemluZyBtdXN0IGJlIFByb3BvcnRpb25hbEV4dHJhIG9yIE5vbmUsIG5vdDogXCIrdCksdGhpcy5FPT09bnVsbCYmKHRoaXMuRT1uZXcgVGFibGVQYW5lbFNldHRpbmdzKSx0aGlzLkUubXA9dCx0aGlzLnUoKSx0aGlzLnQoXCJyb3dTaXppbmdcIixpLHQpKX1nZXQgY29sdW1uU2l6aW5nKCl7cmV0dXJuIHRoaXMuRSE9PW51bGw/dGhpcy5FLnBwOjN9c2V0IGNvbHVtblNpemluZyh0KXtjb25zdCBpPXRoaXMuY29sdW1uU2l6aW5nO2khPT10JiYoRGVidWcmJnQhPT0zJiZ0IT09MiYmVS5uKFwiUGFuZWwuY29sdW1uU2l6aW5nIG11c3QgYmUgUHJvcG9ydGlvbmFsRXh0cmEgb3IgTm9uZSwgbm90OiBcIit0KSx0aGlzLkU9PT1udWxsJiYodGhpcy5FPW5ldyBUYWJsZVBhbmVsU2V0dGluZ3MpLHRoaXMuRS5wcD10LHRoaXMudSgpLHRoaXMudChcImNvbHVtblNpemluZ1wiLGksdCkpfWdldCB0b3BJbmRleCgpe3JldHVybiB0aGlzLkUhPT1udWxsP3RoaXMuRS55cDowfXNldCB0b3BJbmRleCh0KXtjb25zdCBpPXRoaXMudG9wSW5kZXg7aSE9PXQmJigoIWlzRmluaXRlKHQpfHx0PDApJiZVLm4oXCJQYW5lbC50b3BJbmRleCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiB6ZXJvIGFuZCBhIHJlYWwgbnVtYmVyLCBub3Q6IFwiK3QpLHRoaXMuRT09PW51bGwmJih0aGlzLkU9bmV3IFRhYmxlUGFuZWxTZXR0aW5ncyksdGhpcy5FLnlwPXQsdGhpcy51KCksdGhpcy50KFwidG9wSW5kZXhcIixpLHQpKX1nZXQgbGVmdEluZGV4KCl7cmV0dXJuIHRoaXMuRSE9PW51bGw/dGhpcy5FLndwOjB9c2V0IGxlZnRJbmRleCh0KXtjb25zdCBpPXRoaXMubGVmdEluZGV4O2khPT10JiYoKCFpc0Zpbml0ZSh0KXx8dDwwKSYmVS5uKFwiUGFuZWwubGVmdEluZGV4IG11c3QgYmUgZ3JlYXRlciB0aGFuIHplcm8gYW5kIGEgcmVhbCBudW1iZXIsIG5vdDogXCIrdCksdGhpcy5FPT09bnVsbCYmKHRoaXMuRT1uZXcgVGFibGVQYW5lbFNldHRpbmdzKSx0aGlzLkUud3A9dCx0aGlzLnUoKSx0aGlzLnQoXCJsZWZ0SW5kZXhcIixpLHQpKX1maW5kUm93Rm9yTG9jYWxZKHQpe2lmKHQ8MHx8dGhpcy50eXBlIT09UGFuZWwuVGFibGV8fHRoaXMucm93Q291bnQ9PT0wKXJldHVybi0xO2xldCBpPTA7Y29uc3QgZT10aGlzLldlLHM9ZS5sZW5ndGg7bGV0IG49dGhpcy50b3BJbmRleDtmb3IoO248cztuKyspe2NvbnN0IG89ZVtuXTtpZihvIT09dm9pZCAwJiYoaSs9by50b3RhbCx0PGkpKXJldHVybiBufXJldHVybiBufWZpbmRDb2x1bW5Gb3JMb2NhbFgodCl7aWYodDwwfHx0aGlzLnR5cGUhPT1QYW5lbC5UYWJsZXx8dGhpcy5jb2x1bW5Db3VudD09PTApcmV0dXJuLTE7bGV0IGk9MDtjb25zdCBlPXRoaXMuamUscz1lLmxlbmd0aDtsZXQgbj10aGlzLmxlZnRJbmRleDtmb3IoO248cztuKyspe2NvbnN0IG89ZVtuXTtpZihvIT09dm9pZCAwJiYoaSs9by50b3RhbCx0PGkpKXJldHVybiBufXJldHVybiBufWdyYWR1YXRlZFBvaW50Rm9yVmFsdWUodCxpKXtpZihpPT09dm9pZCAwJiYoaT1uZXcgUG9pbnQoTmFOLE5hTikpLHRoaXMudHlwZSE9PVBhbmVsLkdyYWR1YXRlZClyZXR1cm4gaS5zKE5hTixOYU4pLGk7dD1NYXRoLm1pbihNYXRoLm1heCh0LHRoaXMuZ3JhZHVhdGVkTWluKSx0aGlzLmdyYWR1YXRlZE1heCk7Y29uc3QgZT10aGlzLmZpbmRNYWluRWxlbWVudCgpO3JldHVybiBlLmdlb21ldHJ5LmdldFBvaW50QWxvbmdQYXRoKCh0LXRoaXMuZ3JhZHVhdGVkTWluKS90aGlzLmdyYWR1YXRlZFJhbmdlLGkpLGUuRi5rdChpKX1ncmFkdWF0ZWRWYWx1ZUZvclBvaW50KHQpe2lmKHRoaXMudHlwZSE9PVBhbmVsLkdyYWR1YXRlZClyZXR1cm4gTmFOO2NvbnN0IGk9dGhpcy5maW5kTWFpbkVsZW1lbnQoKTtyZXR1cm4gaS5GLmlzKHQpLGkuZ2VvbWV0cnkuZ2V0RnJhY3Rpb25Gb3JQb2ludCh0KSp0aGlzLmdyYWR1YXRlZFJhbmdlK3RoaXMuZ3JhZHVhdGVkTWlufWdldCBkYXRhKCl7cmV0dXJuIHRoaXMubml9c2V0IGRhdGEodCl7Y29uc3QgaT10aGlzLm5pO2lmKGkhPT10KXtjb25zdCBlPXRoaXMgaW5zdGFuY2VvZiBQYXJ0JiYhKHRoaXMgaW5zdGFuY2VvZiBBZG9ybm1lbnQpO2UmJlUuaSh0LFwib2JqZWN0XCIsUGFuZWwsXCJkYXRhXCIpLHRoaXMuS3QoKSx0aGlzLm5pPXQ7Y29uc3Qgcz10aGlzLmRpYWdyYW07aWYocyE9PW51bGwpaWYoZSlzLnBhcnRNYW5hZ2VyLllJKHRoaXMsaSx0KTtlbHNle2NvbnN0IG49dGhpcy5wYW5lbDtuIT09bnVsbCYmbi52cyE9PW51bGwmJihpIT09bnVsbCYmbi52cy5kZWxldGUoaSksdCE9PW51bGwmJm4udnMuc2V0KHQsdGhpcykpfWlmKHRoaXMudChcImRhdGFcIixpLHQpLHMhPT1udWxsJiZzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpcmV0dXJuO3QhPT1udWxsJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKCl9fWdldCBpdGVtSW5kZXgoKXtyZXR1cm4gdGhpcy5kZH1zZXQgaXRlbUluZGV4KHQpe2NvbnN0IGk9dGhpcy5kZDtpIT09dCYmKERlYnVnJiZVLmkodCxcIm51bWJlclwiLFBhbmVsLFwiaXRlbUluZGV4XCIpLHRoaXMuZGQ9dCx0aGlzLnQoXCJpdGVtSW5kZXhcIixpLHQpKX1nZXQganMoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuanM6bnVsbH1zZXQganModCl7dGhpcy5GaSE9PXQmJih0aGlzLmI9PT1udWxsJiYodGhpcy5iPW5ldyBHcmFwaE9iamVjdFRlbXBsYXRlU2V0dGluZ3MpLHRoaXMuYi5qcz10KX1PUCgpe3JldHVybiB0aGlzLmpzIT09bnVsbH1PTCgpe2NvbnN0IHQ9dGhpcy5qcztyZXR1cm4gdCE9PW51bGwmJnQuZn1mcmVlemVCaW5kaW5ncygpe3JldHVybiB0aGlzLkt0KCl9S3QoKXtsZXQgdD10aGlzLmpzO2lmKHQ9PT1udWxsKXRoaXMuZGF0YSE9PW51bGwmJlUubihcIlRlbXBsYXRlIGNhbm5vdCBoYXZlIC5kYXRhIGJlIG5vbi1udWxsOiBcIit0aGlzKSx0aGlzLmpzPXQ9bmV3IExpc3Q7ZWxzZSBpZih0LmYpcmV0dXJuIHRoaXM7Y29uc3QgaT1uZXcgTGlzdDt0aGlzLiRQKCExKSx0aGlzLndhbGtWaXN1YWxUcmVlRnJvbSh0aGlzLChuLG8pPT57by5taCgpO2NvbnN0IHI9by5GaTtpZihyIT09bnVsbCl7by5EUCghMSk7Y29uc3QgbD1yLml0ZXJhdG9yO2Zvcig7bC5uZXh0KCk7KXtjb25zdCBoPWwudmFsdWU7aC5tb2RlPT09MiYmby5EUCghMCk7Y29uc3QgZj1oLnNvdXJjZU5hbWU7aWYoaC5pc1RvT2JqZWN0KXtmPT09XCIvXCImJm4uJFAoITApO2NvbnN0IGE9aC5NTChuLG8pO2EhPT1udWxsJiYoaS5hZGQoYSksYS5Rbj09PW51bGwmJihhLlFuPW5ldyBMaXN0KSxhLlFuLmFkZChoKSl9dC5hZGQoaCl9fWlmKG8gaW5zdGFuY2VvZiBQYW5lbCYmby50eXBlPT09UGFuZWwuVGFibGUpe2lmKG8ucm93Q291bnQ+MCl7Y29uc3QgbD1vLldlLGg9bC5sZW5ndGg7Zm9yKGxldCBmPTA7ZjxoO2YrKyl7Y29uc3QgYT1sW2ZdO2lmKGEhPT12b2lkIDAmJmEuTnMhPT1udWxsKXtjb25zdCBjPWEuTnMuaXRlcmF0b3I7Zm9yKDtjLm5leHQoKTspe2NvbnN0IHU9Yy52YWx1ZTt1Lk5lPWEsdS5wZD0yLHUueWM9YS5pbmRleCx0LmFkZCh1KX19fX1pZihvLmNvbHVtbkNvdW50PjApe2NvbnN0IGw9by5qZSxoPWwubGVuZ3RoO2ZvcihsZXQgZj0wO2Y8aDtmKyspe2NvbnN0IGE9bFtmXTtpZihhIT09dm9pZCAwJiZhLk5zIT09bnVsbCl7Y29uc3QgYz1hLk5zLml0ZXJhdG9yO2Zvcig7Yy5uZXh0KCk7KXtjb25zdCB1PWMudmFsdWU7dS5OZT1hLHUucGQ9MSx1LnljPWEuaW5kZXgsdC5hZGQodSl9fX19fX0pO2NvbnN0IGU9aS5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgbj1lLnZhbHVlO2lmKG4uUW4hPT1udWxsKXtuLkRQKCEwKTtjb25zdCBvPW4uUW4uaXRlcmF0b3I7Zm9yKDtvLm5leHQoKTspe2NvbnN0IHI9by52YWx1ZTtuLkZpPT09bnVsbCYmKG4uRmk9bmV3IExpc3QpLG4uRmkuYWRkKHIpfX1uLlFuPW51bGx9bGV0IHM9dC5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2xldCBvPW4uTmU7aWYobyE9PW51bGwpe24uTmU9bnVsbDtjb25zdCByPW4udGFyZ2V0UHJvcGVydHksbD1yLmluZGV4T2YoXCIuXCIpO2lmKGw+MCYmbyBpbnN0YW5jZW9mIFBhbmVsKXtjb25zdCBoPXIuc3Vic3RyaW5nKDAsbCksZj1yLnN1YnN0cmluZyhsKzEpLGE9by5maW5kT2JqZWN0KGgpO2EhPT1udWxsPyhvPWEsbi50YXJnZXRQcm9wZXJ0eT1mKTooVS5udCgnV2FybmluZzogdW5hYmxlIHRvIGZpbmQgR3JhcGhPYmplY3QgbmFtZWQgXCInK2grJ1wiIGZvciBCaW5kaW5nOiAnK24udG9TdHJpbmcoKSksbz1udWxsKX1pZihvIGluc3RhbmNlb2YgUm93Q29sdW1uRGVmaW5pdGlvbil7Y29uc3QgaD1HU2V0LmdzKG8ucGFuZWwpO24udGFyZ2V0SWQ9aD09PXZvaWQgMD8tMTpoLG8ucGFuZWwuWm49bi50YXJnZXRJZH1lbHNlIGlmKG8gaW5zdGFuY2VvZiBHcmFwaE9iamVjdCl7Y29uc3QgaD1HU2V0LmdzKG8pO24udGFyZ2V0SWQ9aD09PXZvaWQgMD8tMTpoLG8uWm49bi50YXJnZXRJZH1lbHNlIFUubihcIlVua25vd24gdHlwZSBvZiBiaW5kaW5nIHRhcmdldDogXCIrbyk7bi5jaGVjayhvKX19cmV0dXJuIHQucCgpLHRoaXMgaW5zdGFuY2VvZiBQYXJ0JiYodGhpcy5DZSgpJiZ0aGlzLmVuc3VyZUJvdW5kcygpLERlYnVnJiYhUGFuZWwuSkwmJnRoaXMud2Fsa1Zpc3VhbFRyZWVGcm9tKHRoaXMsKG4sbyk9PntpZihvIGluc3RhbmNlb2YgUGFuZWwmJihvLnR5cGU9PT1QYW5lbC5BdXRvfHxvLnR5cGU9PT1QYW5lbC5TcG90fHxvLnR5cGU9PT1QYW5lbC5HcmFkdWF0ZWQpJiZvLmVsZW1lbnRzLmNvdW50PD0xJiYhKG8gaW5zdGFuY2VvZiBQYXJ0KSl7bGV0IHI9ITE7aWYoby5lbGVtZW50cy5jb3VudD09PTEmJihyPW8uaXRlbUFycmF5IT09bnVsbCwhcikpe2ZvcihzPXQuaXRlcmF0b3I7cy5uZXh0KCk7KWlmKHMudmFsdWUudGFyZ2V0UHJvcGVydHk9PT1cIml0ZW1BcnJheVwiKXtyPSEwO2JyZWFrfX1yfHwoVS5udChcIkF1dG8sIFNwb3QsIG9yIEdyYWR1YXRlZCBQYW5lbCBzaG91bGQgbm90IGhhdmUgemVybyBvciBvbmUgZWxlbWVudHM6IFwiK28udG9TdHJpbmcoKStcIiBpbiBcIituLnRvU3RyaW5nKCkpLFBhbmVsLkpMPSEwKX19KSksdGhpc31zdGF0aWMgSkw9ITE7Y29weVRlbXBsYXRlKHQpe3Q9PT12b2lkIDAmJih0PSExKTtjb25zdCBpPXRoaXMuY29weSgpO3JldHVybiBpLlZJKGU9PntlIGluc3RhbmNlb2YgUGFuZWwmJihlLmpzPW51bGwsZS5uaT1udWxsKTtjb25zdCBzPWUuRmk7cyE9PW51bGwmJihlLkZpPW51bGwscy5lYWNoKG89PmUuYmluZChvLmNvcHkoKSkpKTtjb25zdCBuPWUuTXM7biE9PW51bGwmJihlLk1zPW51bGwsbi5lYWNoKG89PmUudHJpZ2dlcihvLnZhbHVlLmNvcHkoKSkpKX0pLHQmJmkuS3QoKSxpfXVwZGF0ZVRhcmdldEJpbmRpbmdzKHQpe2NvbnN0IGk9dGhpcy5qcztpZihpPT09bnVsbClyZXR1cm47dD09PXZvaWQgMCYmKHQ9XCJcIik7Y29uc3QgZT10aGlzLmRpYWdyYW0/Lm1vZGVsLHM9aS5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlLG89dGhpcy4kTChuLHQpO2lmKG89PT1udWxsKWNvbnRpbnVlO2NvbnN0e2RhdGE6cixlbHQ6bH09bztuLmlzVG9UaGVtZSYmdGhpcy5kaWFncmFtPT09bnVsbHx8bCE9PXZvaWQgMCYmbi51cGRhdGVUYXJnZXQobCxyLHZvaWQgMCxlKX19Qm8oKXtpZih0aGlzLmRpYWdyYW0hPT1udWxsKWlmKHRoaXMuT1AoKSl7Y29uc3QgdD10aGlzLmRpYWdyYW0ubW9kZWwsaT10aGlzLmpzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7aWYoIWUuaXNUb1RoZW1lKWNvbnRpbnVlO2NvbnN0IHM9dGhpcy4kTChlKTtpZihzPT09bnVsbCljb250aW51ZTtjb25zdHtkYXRhOm4sZWx0Om99PXM7byE9PXZvaWQgMCYmZS51cGRhdGVUYXJnZXQobyxuLHZvaWQgMCx0KX19ZWxzZXtjb25zdCB0PXRoaXMuVC5oLGk9dC5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl0W2VdLkJvKCl9fSRMKHQsaT1cIlwiKXtjb25zdCBlPXQuc291cmNlUHJvcGVydHk7aWYoaSE9PVwiXCImJmUhPT1cIlwiJiZlIT09aSlyZXR1cm4gbnVsbDtjb25zdCBzPXQudGFyZ2V0UHJvcGVydHk7aWYodC5jb252ZXJ0ZXI9PT1udWxsJiZzPT09XCJcIilyZXR1cm4gbnVsbDtsZXQgbz10aGlzLmRhdGE7Y29uc3Qgcj10LnNvdXJjZU5hbWU7aWYodC5pc1RvT2JqZWN0KXtpZihvPXRoaXMuU0wociksbz09PW51bGwpcmV0dXJuIG51bGx9ZWxzZSBpZih0LmlzVG9Nb2RlbCl7Y29uc3QgYT10aGlzLmRpYWdyYW07aWYoYT09PW51bGwpcmV0dXJuIG51bGw7bz1hLm1vZGVsLm1vZGVsRGF0YX1sZXQgbD10aGlzO2NvbnN0IGg9dC50YXJnZXRJZDtpZihoIT09LTEpe2lmKGw9dGhpcy5iMChoKSxsPT09bnVsbClyZXR1cm4gbnVsbH1lbHNlIHQuTmUhPT1udWxsJiYobD10Lk5lKTtyPT09XCIvXCI/bz1sLnBhcnQ6cj09PVwiLlwiP289bDpyPT09XCIuLlwiJiYobz1sLnBhbmVsKTtjb25zdCBmPXQucGQ7aWYoZiE9PTApe2lmKCEobCBpbnN0YW5jZW9mIFBhbmVsKSlyZXR1cm4gbnVsbDtmPT09MT9sPWwuZ2V0Q29sdW1uRGVmaW5pdGlvbih0LnljKTpmPT09MiYmKGw9bC5nZXRSb3dEZWZpbml0aW9uKHQueWMpKX1yZXR1cm57ZGF0YTpvLGVsdDpsfX1nZXQgaXRlbUFycmF5KCl7cmV0dXJuIHRoaXMuTWh9c2V0IGl0ZW1BcnJheSh0KXtEZWJ1ZyYmdCE9PW51bGwmJiFBcnJheS5pc0FycmF5KHQpJiZVLm4oXCJQYW5lbC5pdGVtQXJyYXkgbXVzdCBiZSBhbiBBcnJheS1saWtlIG9iamVjdCBvciBudWxsLCBub3Q6IFwiK3QpO2NvbnN0IGk9dGhpcy5NaDtpZihpIT09dHx8dCE9PW51bGwmJnRoaXMuS0kodCkpe2NvbnN0IGU9dGhpcy5kaWFncmFtO2lmKGkhPT10JiYoZSE9PW51bGwmJmkhPT1udWxsJiZlLnBhcnRNYW5hZ2VyLmoyKHRoaXMsZSksdGhpcy5NaD10LGUhPT1udWxsJiZ0IT09bnVsbCYmZS5wYXJ0TWFuYWdlci5XMih0aGlzLGUpKSx0aGlzLnQoXCJpdGVtQXJyYXlcIixpLHQpLGUhPT1udWxsJiZlLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpcmV0dXJuO3RoaXMuWkwoaSx0KX19ZmluZEl0ZW1QYW5lbEZvckRhdGEodCl7cmV0dXJuIHQ9PW51bGx8fHRoaXMudnM9PT1udWxsP251bGw6KFUuTW8odCxQYW5lbCxcImZpbmRJdGVtUGFuZWxGb3JEYXRhXCIpLHRoaXMudnMuZ2V0KHQpKX1LSSh0KXtjb25zdCBpPXRoaXMuVC5oLGU9aS5sZW5ndGgscz10Lmxlbmd0aDtsZXQgbj0wLG89bnVsbDtmb3IoO248ZSYmKG89aVtuXSwhKG8gaW5zdGFuY2VvZiBQYW5lbCl8fG8uZGF0YT09PW51bGwpOyluKyssbz1pW25dO2lmKGUtbiE9PXMpcmV0dXJuITA7aWYobz09PW51bGwpcmV0dXJuIHM+MDtsZXQgcj0wO2Zvcig7bjxlJiZyPHM7KXtpZihvPWlbbl0sIShvIGluc3RhbmNlb2YgUGFuZWwpfHxvLmRhdGEhPT10W3JdKXJldHVybiEwO24rKyxyKyt9cmV0dXJuITF9Z3AoKXtpZih0aGlzLnR5cGU9PT1QYW5lbC5TcG90fHx0aGlzLnR5cGU9PT1QYW5lbC5BdXRvKXJldHVybiBNYXRoLm1pbih0aGlzLlQubGVuZ3RoLDEpO2lmKHRoaXMudHlwZT09PVBhbmVsLkxpbmspe2NvbnN0IHQ9dGhpcy5ULGk9dC5sZW5ndGg7bGV0IGU9MDtmb3IoO2U8aTtlKyspe2NvbnN0IHM9dC5lbHQoZSk7aWYoIShzIGluc3RhbmNlb2YgU2hhcGUpfHwhcy5pc1BhbmVsTWFpbilyZXR1cm4gZX1yZXR1cm4gZX1pZih0aGlzLnR5cGU9PT1QYW5lbC5UYWJsZSYmdGhpcy5ULmxlbmd0aD4wKXtjb25zdCBpPXRoaXMuVC5lbHQoMCk7aWYoaS5pc1BhbmVsTWFpbiYmaSBpbnN0YW5jZW9mIFBhbmVsJiZpLmVsKCkpcmV0dXJuIDF9cmV0dXJuIDB9cmVidWlsZEl0ZW1FbGVtZW50cygpe2NvbnN0IHQ9dGhpcy5ncCgpO2Zvcig7dGhpcy5ULmxlbmd0aD50Oyl0aGlzLm5lKHRoaXMuVC5sZW5ndGgtMSwhMSk7dGhpcy5aTChudWxsLHRoaXMuaXRlbUFycmF5KX1aTCh0LGkpe2NvbnN0IGU9dGhpcy5ncCgpLHM9aTtpZihzPT09bnVsbHx8cy5sZW5ndGg9PT0wKXtmb3IoO3RoaXMuVC5sZW5ndGg+ZTspdGhpcy5uZSh0aGlzLlQubGVuZ3RoLTEsITEpO3JldHVybn1pZih0aGlzLlQubGVuZ3RoPD1lKXtjb25zdCBuPXMubGVuZ3RoO2ZvcihsZXQgbz0wO288bjtvKyspdGhpcy5nYihzW29dLG8sITApfWVsc2V7bGV0IG49ZTtmb3IobGV0IHI9MDtyPHMubGVuZ3RoO3IrKyxuKyspe2NvbnN0IGw9c1tyXSxoPW48dGhpcy5ULmxlbmd0aD90aGlzLlQuZWx0KG4pOm51bGw7aWYoaCBpbnN0YW5jZW9mIFBhbmVsKXtpZihoLmRhdGEhPT1sKXtjb25zdCBmPXRoaXMuWlAoaC5kYXRhLHIpLGE9dGhpcy5aUChsLHIpO2xldCBjPWEhPT1mO2lmKCFjKXtjb25zdCB1PXRoaXMuUVAoaC5kYXRhLHIsZik7Yz10aGlzLlFQKGwscixhKSE9PXV9Yz8odGhpcy5uZShuLCExKSx0aGlzLmdiKGwsciwhMSkpOmguZGF0YT1sfX1lbHNlIHRoaXMuZ2IobCxyLCExKX1mb3IoO248dGhpcy5ULmxlbmd0aDspdGhpcy5uZShuLCExKTt0aGlzLm5sPW51bGwsdGhpcy5fUChlLDApLHRoaXMuRW8oKXx8dGhpcy51KCksdGhpcy5ocz1udWxsLHRoaXMuaXNFbmFibGVkT2JqZWN0KCl8fHRoaXMuZGIodGhpcywhMSk7Y29uc3Qgbz10aGlzLnBhcnQ7byE9PW51bGwmJihvLk8wKCksby5wYygpLHRoaXMueW4mJm8gaW5zdGFuY2VvZiBOb2RlJiYoby55bj0hMCksby55biYmbyBpbnN0YW5jZW9mIE5vZGUmJihvLmhlPW51bGwpKX19Z2IodCxpLGUpe2lmKHQ9PW51bGx8fGk8MClyZXR1cm4gbnVsbDtjb25zdCBzPXRoaXMuWlAodCxpKSxuPXRoaXMuUVAodCxpLHMpO2lmKG4hPT1udWxsKXtuLkt0KCk7Y29uc3Qgbz1uLmNvcHkoKTtpZihvLk5QKCkpe2NvbnN0IGw9dGhpcy5maW5kQmluZGluZ1BhbmVsKCk7bCE9PW51bGwmJmwuJFAoITApfVUuVyh0KSYmKHRoaXMudnM9PT1udWxsJiYodGhpcy52cz1uZXcgR01hcCksdGhpcy52cy5zZXQodCxvKSk7Y29uc3Qgcj1pK3RoaXMuZ3AoKTtyZXR1cm4gdGhpcy5pbnNlcnRBdChyLG8pLGUmJihvLm5pPXQsdGhpcy5fUChyLGkpLG8ubmk9bnVsbCksby5kYXRhPXQsb31yZXR1cm4gbnVsbH1VSSh0KXtpZih0PDApcmV0dXJuO2NvbnN0IGk9dCt0aGlzLmdwKCk7dGhpcy5uZShpLCEwKSx0aGlzLl9QKGksdCl9X1AodCxpKXtjb25zdCBlPXRoaXMuVDtsZXQgcz10LG49aTtmb3IoO3M8ZS5sZW5ndGg7KXtjb25zdCBvPWUuZWx0KHMpO28gaW5zdGFuY2VvZiBQYW5lbCYmby5HSShzLG4pLHMrKyxuKyt9fUdJKHQsaSl7dGhpcy50eXBlPT09UGFuZWwuVGFibGVSb3c/dGhpcy5yb3c9dDp0aGlzLnR5cGU9PT1QYW5lbC5UYWJsZUNvbHVtbiYmKHRoaXMuY29sdW1uPXQpLHRoaXMuaXRlbUluZGV4PWl9ekkoKXtyZXR1cm4gdGhpcy5NaCE9PW51bGx8fHRoaXMuaXRlbVRlbXBsYXRlTWFwIT09bnVsbH1nZXQgaXRlbVRlbXBsYXRlKCl7cmV0dXJuIHRoaXMuaXRlbVRlbXBsYXRlTWFwPT09bnVsbD9udWxsOnRoaXMuaXRlbVRlbXBsYXRlTWFwLmdldChcIlwiKX1zZXQgaXRlbVRlbXBsYXRlKHQpe2lmKHRoaXMuaXRlbVRlbXBsYXRlTWFwPT09bnVsbCl7aWYodD09PW51bGwpcmV0dXJuO3RoaXMuaXRlbVRlbXBsYXRlTWFwPW5ldyBHTWFwfWNvbnN0IGk9dGhpcy5pdGVtVGVtcGxhdGVNYXAuZ2V0KFwiXCIpO2lmKGkhPT10KXtVLmUodCxQYW5lbCxQYW5lbCxcIml0ZW1UZW1wbGF0ZVwiKSwodCBpbnN0YW5jZW9mIFBhcnR8fHQuaXNQYW5lbE1haW4pJiZVLm4oXCJQYW5lbC5pdGVtVGVtcGxhdGUgbXVzdCBub3QgYmUgYSBQYXJ0IG9yIGJlIFBhbmVsLmlzUGFuZWxNYWluOiBcIit0KSx0aGlzLml0ZW1UZW1wbGF0ZU1hcC5zZXQoXCJcIix0KSx0aGlzLnQoXCJpdGVtVGVtcGxhdGVcIixpLHQpO2NvbnN0IGU9dGhpcy5kaWFncmFtO2lmKGUhPT1udWxsJiZlLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpcmV0dXJuO3RoaXMucmVidWlsZEl0ZW1FbGVtZW50cygpfX1nZXQgaXRlbVRlbXBsYXRlTWFwKCl7cmV0dXJuIHRoaXMuYiE9PW51bGw/dGhpcy5iLkowOm51bGx9c2V0IGl0ZW1UZW1wbGF0ZU1hcCh0KXtjb25zdCBpPXRoaXMuaXRlbVRlbXBsYXRlTWFwO2lmKGkhPT10KXtVLmUodCxHTWFwLFBhbmVsLFwiaXRlbVRlbXBsYXRlTWFwXCIpO2NvbnN0IGU9dC5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgbj1lLnZhbHVlO0RlYnVnJiYobiBpbnN0YW5jZW9mIFBhcnR8fG4uaXNQYW5lbE1haW4pJiZVLm4oXCJUZW1wbGF0ZSBpbiBQYW5lbC5pdGVtVGVtcGxhdGVNYXAgbXVzdCBub3QgYmUgYSBQYXJ0IG9yIGJlIFBhbmVsLmlzUGFuZWxNYWluOiBcIituKX10aGlzLkp0KCkuSjA9dCx0aGlzLnQoXCJpdGVtVGVtcGxhdGVNYXBcIixpLHQpO2NvbnN0IHM9dGhpcy5kaWFncmFtO2lmKHMhPT1udWxsJiZzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpcmV0dXJuO3RoaXMucmVidWlsZEl0ZW1FbGVtZW50cygpfX1nZXQgaXRlbUNhdGVnb3J5UHJvcGVydHkoKXtyZXR1cm4gdGhpcy5iIT09bnVsbD90aGlzLmIuJDA6XCJjYXRlZ29yeVwifXNldCBpdGVtQ2F0ZWdvcnlQcm9wZXJ0eSh0KXtjb25zdCBpPXRoaXMuaXRlbUNhdGVnb3J5UHJvcGVydHk7aSE9PXQmJih0eXBlb2YgdCE9XCJzdHJpbmdcIiYmIVUucnQodCkmJlUuUGkodCxcInN0cmluZyBvciBmdW5jdGlvblwiLFBhbmVsLFwiaXRlbUNhdGVnb3J5UHJvcGVydHlcIiksdGhpcy5KdCgpLiQwPXQsdGhpcy50KFwiaXRlbUNhdGVnb3J5UHJvcGVydHlcIixpLHQpKX1aUCh0LGkpe2lmKHQ9PT1udWxsKXJldHVyblwiXCI7Y29uc3QgZT10aGlzLml0ZW1DYXRlZ29yeVByb3BlcnR5O2xldCBzPVwiXCI7aWYoVS5ydChlKSlzPWUodCk7ZWxzZSBpZih0eXBlb2YgZT09XCJzdHJpbmdcIiYmVS5XKHQpKXtpZihlPT09XCJcIilyZXR1cm5cIlwiO2NvbnN0IG49dGhpcy5kaWFncmFtLG89biE9PW51bGw/bi5tb2RlbDpudWxsO28/cz1vLlN0KHQsZSk6cz1Nb2RlbC5TdCh0LGUpfWVsc2UgcmV0dXJuXCJcIjtpZihzPT09dm9pZCAwKXJldHVyblwiXCI7aWYodHlwZW9mIHM9PVwic3RyaW5nXCIpcmV0dXJuIHM7VS5uKFwiUGFuZWwuZ2V0Q2F0ZWdvcnlGb3JJdGVtRGF0YSBmb3VuZCBhIG5vbi1zdHJpbmcgY2F0ZWdvcnkgZm9yIFwiK3QrXCI6IFwiK3MpfXN0YXRpYyBRTD0hMTtzdGF0aWMgX0w9bnVsbDtRUCh0LGksZSl7Y29uc3Qgcz10aGlzLml0ZW1UZW1wbGF0ZU1hcDtsZXQgbj1udWxsO3JldHVybiBzIT09bnVsbCYmKG49cy5nZXQoZSkpLG49PT1udWxsJiYocyE9PW51bGwmJihuPXMuZ2V0KFwiXCIpKSxuPT09bnVsbCYmKFBhbmVsLlFMfHwoUGFuZWwuUUw9ITAsVS5udCgnTm8gaXRlbSB0ZW1wbGF0ZSBQYW5lbCBmb3VuZCBmb3IgY2F0ZWdvcnkgXCInK2UrJ1wiIG9uICcrdGhpcyksVS5udChcIiAgVXNpbmcgZGVmYXVsdCBpdGVtIHRlbXBsYXRlLlwiKSxQYW5lbC5fTD1uZXcgUGFuZWwoKS5hZGQobmV3IFRleHRCbG9jaygpLmJpbmQoXCJ0ZXh0XCIsXCJcIixVLnRvU3RyaW5nKS50aGVtZShcInN0cm9rZVwiLFwidGV4dFwiKSkpLG49UGFuZWwuX0wpKSxufWdldCBtYygpe3JldHVybih0aGlzLmwmMTA0ODU3NikhPT0wfXNldCBtYyh0KXtjb25zdCBpPSh0aGlzLmwmMTA0ODU3NikhPT0wO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsUGFuZWwsXCJpc0F0b21pY1wiKSx0aGlzLmw9dGhpcy5sXjEwNDg1NzYsdGhpcy50KFwiaXNBdG9taWNcIixpLHQpKX1nZXQgaXNDbGlwcGluZygpe3JldHVybih0aGlzLmwmMjA5NzE1MikhPT0wfXNldCBpc0NsaXBwaW5nKHQpe2NvbnN0IGk9KHRoaXMubCYyMDk3MTUyKSE9PTA7aSE9PXQmJih0aGlzLm9jKCksRGVidWcmJihVLmkodCxcImJvb2xlYW5cIixQYW5lbCxcImlzQ2xpcHBpbmdcIiksdCYmdGhpcy50eXBlIT09UGFuZWwuU3BvdCYmISh0aGlzIGluc3RhbmNlb2YgR3JvdXApJiZVLm50KFwiV2FybmluZzogUGFuZWwuaXNDbGlwcGluZyBzZXQgb24gbm9uLVNwb3QgUGFuZWw6IFwiK3RoaXMudG9TdHJpbmcoKSkpLHRoaXMubD10aGlzLmxeMjA5NzE1Mix0aGlzIGluc3RhbmNlb2YgR3JvdXAmJih0aGlzLmhpPW51bGwpLHRoaXMudSgpLHRoaXMudChcImlzQ2xpcHBpbmdcIixpLHQpKX1nZXQgaXNPcHBvc2l0ZSgpe3JldHVybih0aGlzLmwmMzM1NTQ0MzIpIT09MH1zZXQgaXNPcHBvc2l0ZSh0KXtjb25zdCBpPSh0aGlzLmwmMzM1NTQ0MzIpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixQYW5lbCxcImlzT3Bwb3NpdGVcIiksdGhpcy5sPXRoaXMubF4zMzU1NDQzMix0aGlzLnUoKSx0aGlzLnQoXCJpc09wcG9zaXRlXCIsaSx0KSl9Z2V0IGlzRW5hYmxlZCgpe3JldHVybih0aGlzLmwmNDE5NDMwNCkhPT0wfXNldCBpc0VuYWJsZWQodCl7Y29uc3QgaT0odGhpcy5sJjQxOTQzMDQpIT09MDtpZihpIT09dCl7RGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhbmVsLFwiaXNFbmFibGVkXCIpO2NvbnN0IGU9dGhpcy5wYW5lbD09PW51bGx8fHRoaXMucGFuZWwuaXNFbmFibGVkT2JqZWN0KCk7dGhpcy5sPXRoaXMubF40MTk0MzA0LHRoaXMudChcImlzRW5hYmxlZFwiLGksdCk7Y29uc3Qgcz10aGlzLmRpYWdyYW07aWYocyE9PW51bGwmJnMudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZylyZXR1cm47ZSYmdGhpcy5kYih0aGlzLHQpfX1kYih0LGkpe2NvbnN0IGU9dC5lbmFibGVkQ2hhbmdlZDtpZihlIT09bnVsbCYmZSh0LGkpLHQgaW5zdGFuY2VvZiBQYW5lbCl7Y29uc3Qgcz10LlQuaCxuPXMubGVuZ3RoO2ZvcihsZXQgbz0wO288bjtvKyspe2NvbnN0IHI9c1tvXTtpJiZyIGluc3RhbmNlb2YgUGFuZWwmJiFyLmlzRW5hYmxlZHx8dGhpcy5kYihyLGkpfX19Z2V0IGFsaWdubWVudEZvY3VzTmFtZSgpe3JldHVybiB0aGlzLm9vfXNldCBhbGlnbm1lbnRGb2N1c05hbWUodCl7Y29uc3QgaT10aGlzLm9vO2khPT10JiYoRGVidWcmJlUuaSh0LFwic3RyaW5nXCIsUGFuZWwsXCJhbGlnbm1lbnRGb2N1c05hbWVcIiksdGhpcy5vbz10LHRoaXMudSgpLHRoaXMudChcImFsaWdubWVudEZvY3VzTmFtZVwiLGksdCkpfXN0YXRpYyBkZWZpbmVQYW5lbExheW91dCh0LGkpe1BhbmVsTGF5b3V0LnhuKHQsaSl9c3RhdGljIGlzQnVpbGRlckRlZmluZWQodCl7cmV0dXJuIFBhbmVsTGF5b3V0LmxzLmhhcyh0KX1zdGF0aWMgUG9zaXRpb249UGFuZWxMYXlvdXQubHMuZ2V0KFwiUG9zaXRpb25cIik7c3RhdGljIEhvcml6b250YWw9UGFuZWxMYXlvdXQubHMuZ2V0KFwiSG9yaXpvbnRhbFwiKTtzdGF0aWMgVmVydGljYWw9UGFuZWxMYXlvdXQubHMuZ2V0KFwiVmVydGljYWxcIik7c3RhdGljIFNwb3Q9UGFuZWxMYXlvdXQubHMuZ2V0KFwiU3BvdFwiKTtzdGF0aWMgQXV0bz1QYW5lbExheW91dC5scy5nZXQoXCJBdXRvXCIpO3N0YXRpYyBUYWJsZT1QYW5lbExheW91dC5scy5nZXQoXCJUYWJsZVwiKTtzdGF0aWMgVmlld2JveD1QYW5lbExheW91dC5scy5nZXQoXCJWaWV3Ym94XCIpO3N0YXRpYyBUYWJsZVJvdz1QYW5lbExheW91dC5scy5nZXQoXCJUYWJsZVJvd1wiKTtzdGF0aWMgVGFibGVDb2x1bW49UGFuZWxMYXlvdXQubHMuZ2V0KFwiVGFibGVDb2x1bW5cIik7c3RhdGljIExpbms9UGFuZWxMYXlvdXQubHMuZ2V0KFwiTGlua1wiKTtzdGF0aWMgR3JpZD1QYW5lbExheW91dC5scy5nZXQoXCJHcmlkXCIpO3N0YXRpYyBHcmFkdWF0ZWQ9UGFuZWxMYXlvdXQubHMuZ2V0KFwiR3JhZHVhdGVkXCIpfVBhbmVsLmRlZmluZVBhbmVsTGF5b3V0PVBhbmVsLmRlZmluZVBhbmVsTGF5b3V0O2NsYXNzIEdyYWRQYW5lbFNldHRpbmdze2FwO2ZwO2NwO2RwO1BzO3ZlO2hzO0FlO2NvbnN0cnVjdG9yKCl7dGhpcy5hcD0wLHRoaXMuZnA9MTAwLHRoaXMuY3A9MTAsdGhpcy5kcD0wLHRoaXMuUHM9bnVsbCx0aGlzLnZlPW51bGwsdGhpcy5ocz1udWxsLHRoaXMuQWU9bnVsbH1jb3B5KCl7Y29uc3QgdD1uZXcgR3JhZFBhbmVsU2V0dGluZ3M7cmV0dXJuIHQuYXA9dGhpcy5hcCx0LmZwPXRoaXMuZnAsdC5jcD10aGlzLmNwLHQuZHA9dGhpcy5kcCx0LlBzPXRoaXMuUHMsdC52ZT10aGlzLnZlLHQuaHM9dGhpcy5ocyx0LkFlPXRoaXMuQWUsdH19Y2xhc3MgR3JpZFBhbmVsU2V0dGluZ3N7Z2Q7bWQ7JGY7aXA7Y29uc3RydWN0b3IoKXt0aGlzLmdkPVNpemUuTUMsdGhpcy5tZD1Qb2ludC5Obyx0aGlzLiRmPVNpemUuUHcsdGhpcy5pcD1bXX1jb3B5KCl7Y29uc3QgdD1uZXcgR3JpZFBhbmVsU2V0dGluZ3M7cmV0dXJuIHQuZ2Q9dGhpcy5nZC5jb3B5KCksdC5tZD10aGlzLm1kLmNvcHkoKSx0LiRmPXRoaXMuJGYuY29weSgpLHQuaXA9dGhpcy5pcCx0fX1jbGFzcyBUYWJsZVBhbmVsU2V0dGluZ3N7V2U7amU7bXA7cHA7eXA7d3A7ZXA7bnA7c3A7b3A7bHA7cnA7aHA7U2g7Y29uc3RydWN0b3IoKXt0aGlzLldlPVtdLHRoaXMuamU9W10sdGhpcy5tcD0zLHRoaXMucHA9Myx0aGlzLnlwPTAsdGhpcy53cD0wLHRoaXMuZXA9TWFyZ2luLlhnLHRoaXMubnA9MSx0aGlzLnNwPW51bGwsdGhpcy5vcD1udWxsLHRoaXMubHA9MSx0aGlzLnJwPW51bGwsdGhpcy5ocD1udWxsLHRoaXMuU2g9bnVsbH1jb3B5KHQpe2NvbnN0IGk9bmV3IFRhYmxlUGFuZWxTZXR0aW5ncyxlPXRoaXMuV2Uscz1lLmxlbmd0aCxuPWkuV2U7Zm9yKGxldCBoPTA7aDxzO2grKyl7aWYoZVtoXT09PXZvaWQgMCljb250aW51ZTtjb25zdCBmPWVbaF0uY29weSgpO2YuVGEodCksbltoXT1mfWNvbnN0IG89dGhpcy5qZSxyPW8ubGVuZ3RoLGw9aS5qZTtmb3IobGV0IGg9MDtoPHI7aCsrKXtpZihvW2hdPT09dm9pZCAwKWNvbnRpbnVlO2NvbnN0IGY9b1toXS5jb3B5KCk7Zi5UYSh0KSxsW2hdPWZ9cmV0dXJuIGkubXA9dGhpcy5tcCxpLnBwPXRoaXMucHAsaS55cD10aGlzLnlwLGkud3A9dGhpcy53cCxpLmVwPXRoaXMuZXAuTigpLGkubnA9dGhpcy5ucCxpLnNwPXRoaXMuc3AsaS5vcD10aGlzLm9wLGkubHA9dGhpcy5scCxpLnJwPXRoaXMucnAsaS5ocD10aGlzLmhwLGkuU2g9dGhpcy5TaCxpfX12YXIgU2l6aW5nPSh5PT4oeVt5LkRlZmF1bHQ9MV09XCJEZWZhdWx0XCIseVt5Lk5vbmU9Ml09XCJOb25lXCIseVt5LlByb3BvcnRpb25hbEV4dHJhPTNdPVwiUHJvcG9ydGlvbmFsRXh0cmFcIix5KSkoU2l6aW5nfHx7fSk7Y2xhc3MgUm93Q29sdW1uRGVmaW5pdGlvbntIczt4cDtPdDtJYTtPYTt1aTtndDt5ZDtpbztvbDt3ZDt4ZDtFYTtSdDtiZDtOcztzdDtJaTt5ZTtjb25zdHJ1Y3Rvcih0KXtHU2V0LkppKHRoaXMpLHRoaXMuSHM9bnVsbCx0aGlzLnhwPSEwLHRoaXMuT3Q9MCx0aGlzLnllPU5hTix0aGlzLklhPTAsdGhpcy5PYT0xLzAsdGhpcy51aT1TcG90LkRlZmF1bHQsdGhpcy5zdD0wLHRoaXMuSWk9MCx0aGlzLmd0PTAsdGhpcy5Ocz1udWxsLHRoaXMueWQ9MSx0aGlzLmlvPTEsdGhpcy5vbD1udWxsLHRoaXMud2Q9bnVsbCx0aGlzLnhkPU5hTix0aGlzLkVhPW51bGwsdGhpcy5SdD1udWxsLHRoaXMuYmQ9ITEsdCYmKE9iamVjdC5hc3NpZ24odGhpcyx0KSx0LmNvbHVtbiE9PXZvaWQgMD8odGhpcy5pc1Jvdz0hMSx0aGlzLmluZGV4PXQuY29sdW1uKTp0LnJvdyE9PXZvaWQgMCYmKHRoaXMuaXNSb3c9ITAsdGhpcy5pbmRleD10LnJvdykpfWNvcHkoKXtjb25zdCB0PW5ldyBSb3dDb2x1bW5EZWZpbml0aW9uO3JldHVybiB0LnhwPXRoaXMueHAsdC5PdD10aGlzLk90LHQueWU9dGhpcy55ZSx0LklhPXRoaXMuSWEsdC5PYT10aGlzLk9hLHQudWk9dGhpcy51aSx0LnN0PXRoaXMuc3QsdC5JaT10aGlzLklpLHQuZ3Q9dGhpcy5ndCx0LmlvPXRoaXMuaW8sdC55ZD10aGlzLnlkLHRoaXMub2w9PT1udWxsP3Qub2w9bnVsbDp0Lm9sPXRoaXMub2wuTigpLHQud2Q9dGhpcy53ZCx0LnhkPXRoaXMueGQsdC5FYT1udWxsLHRoaXMuRWEhPT1udWxsJiYodC5zZXBhcmF0b3JEYXNoQXJyYXk9dGhpcy5FYS5zbGljZSgpKSx0LlJ0PXRoaXMuUnQsdC5iZD10aGlzLmJkLHQuTnM9dGhpcy5Ocyx0fW5iKHQpe3QuaXNSb3c/dC5oZWlnaHQhPT12b2lkIDAmJih0aGlzLmhlaWdodD10LmhlaWdodCk6dC53aWR0aCE9PXZvaWQgMCYmKHRoaXMud2lkdGg9dC53aWR0aCksdC5taW5pbXVtIT09dm9pZCAwJiYodGhpcy5taW5pbXVtPXQubWluaW11bSksdC5tYXhpbXVtIT09dm9pZCAwJiYodGhpcy5tYXhpbXVtPXQubWF4aW11bSksdC5hbGlnbm1lbnQhPT12b2lkIDAmJih0aGlzLmFsaWdubWVudD10LmFsaWdubWVudCksdC5zdHJldGNoIT09dm9pZCAwJiYodGhpcy5zdHJldGNoPXQuc3RyZXRjaCksdC5zaXppbmchPT12b2lkIDAmJih0aGlzLnNpemluZz10LnNpemluZyksdC5zZXBhcmF0b3JQYWRkaW5nIT09dm9pZCAwJiYodGhpcy5zZXBhcmF0b3JQYWRkaW5nPXQuc2VwYXJhdG9yUGFkZGluZyksdC5zZXBhcmF0b3JTdHJva2UhPT12b2lkIDAmJih0aGlzLnNlcGFyYXRvclN0cm9rZT10LnNlcGFyYXRvclN0cm9rZSksdC5zZXBhcmF0b3JTdHJva2VXaWR0aCE9PXZvaWQgMCYmKHRoaXMuc2VwYXJhdG9yU3Ryb2tlV2lkdGg9dC5zZXBhcmF0b3JTdHJva2VXaWR0aCksdC5zZXBhcmF0b3JEYXNoQXJyYXkhPT12b2lkIDAmJih0aGlzLkVhPXQuc2VwYXJhdG9yRGFzaEFycmF5KSx0LmJhY2tncm91bmQhPT12b2lkIDAmJih0aGlzLmJhY2tncm91bmQ9dC5iYWNrZ3JvdW5kKSx0LmNvdmVyc1NlcGFyYXRvcnMhPT12b2lkIDAmJih0aGlzLmNvdmVyc1NlcGFyYXRvcnM9dC5jb3ZlcnNTZXBhcmF0b3JzKSx0Lk5zIT09dm9pZCAwJiYodGhpcy5Ocz10Lk5zKX1haSh0KXt0IGluIFNpemluZz90aGlzLnNpemluZz10OlUuaHIodGhpcyx0KX10b1N0cmluZygpe3JldHVyblwiUm93Q29sdW1uRGVmaW5pdGlvbiBcIisodGhpcy5pc1Jvdz9cIihSb3cgXCI6XCIoQ29sdW1uIFwiKSt0aGlzLmluZGV4K1wiKSAjXCIrR1NldC5ncyh0aGlzKX1zdGF0aWMgRGVmYXVsdD0xO3N0YXRpYyBOb25lPTI7c3RhdGljIFByb3BvcnRpb25hbEV4dHJhPTM7VGEodCl7dGhpcy5Icz10fWNvbXB1dGVFZmZlY3RpdmVTcGFjaW5nVG9wKHQpe2xldCBpPTA7Y29uc3QgZT10aGlzLkhzO2lmKHRoaXMuaW5kZXghPT10KXtsZXQgbj10aGlzLnNlcGFyYXRvclN0cm9rZTtuPT09bnVsbCYmZSE9PW51bGwmJihuPXRoaXMuaXNSb3c/ZS5kZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlOmUuZGVmYXVsdENvbHVtblNlcGFyYXRvclN0cm9rZSksbiE9PW51bGwmJihpPXRoaXMuc2VwYXJhdG9yU3Ryb2tlV2lkdGgsaXNOYU4oaSkmJihlIT09bnVsbD9pPXRoaXMuaXNSb3c/ZS5kZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlV2lkdGg6ZS5kZWZhdWx0Q29sdW1uU2VwYXJhdG9yU3Ryb2tlV2lkdGg6aT0wKSl9bGV0IHM9dGhpcy5vbDtpZihzPT09bnVsbClpZihlIT09bnVsbClzPWUuZGVmYXVsdFNlcGFyYXRvclBhZGRpbmc7ZWxzZSByZXR1cm4gaTtyZXR1cm4gaSsodGhpcy5pc1Jvdz9zLnRvcDpzLmxlZnQpfWNvbXB1dGVFZmZlY3RpdmVTcGFjaW5nKCl7bGV0IHQ9MDtjb25zdCBpPXRoaXMuSHM7bGV0IGU9MDtjb25zdCBzPXRoaXMuaXNSb3c7aWYoaSE9PW51bGwmJmkudHlwZT09PVBhbmVsLlRhYmxlKXtjb25zdCBvPXM/aS5XZS5sZW5ndGg6aS5qZS5sZW5ndGg7Zm9yKGxldCByPTA7cjxvO3IrKyl7Y29uc3QgbD1zP2kuV2Vbcl06aS5qZVtyXTtpZihsIT09dm9pZCAwJiZsLnN0IT09MCl7ZT1sLmluZGV4O2JyZWFrfX19aWYodGhpcy5pbmRleCE9PWUpe2xldCBvPXRoaXMuc2VwYXJhdG9yU3Ryb2tlO289PT1udWxsJiZpIT09bnVsbCYmKG89cz9pLmRlZmF1bHRSb3dTZXBhcmF0b3JTdHJva2U6aS5kZWZhdWx0Q29sdW1uU2VwYXJhdG9yU3Ryb2tlKSxvIT09bnVsbCYmKHQ9dGhpcy5zZXBhcmF0b3JTdHJva2VXaWR0aCxpc05hTih0KSYmKGkhPT1udWxsP3Q9cz9pLmRlZmF1bHRSb3dTZXBhcmF0b3JTdHJva2VXaWR0aDppLmRlZmF1bHRDb2x1bW5TZXBhcmF0b3JTdHJva2VXaWR0aDp0PTApKX1sZXQgbj10aGlzLm9sO2lmKG49PT1udWxsKWlmKGkhPT1udWxsKW49aS5kZWZhdWx0U2VwYXJhdG9yUGFkZGluZztlbHNlIHJldHVybiB0O3JldHVybiB0Kyh0aGlzLmlzUm93P24udG9wK24uYm90dG9tOm4ubGVmdCtuLnJpZ2h0KX10KHQsaSxlLHMsbil7Y29uc3Qgbz10aGlzLkhzO2lmKG8hPT1udWxsJiYoby5yYWlzZUNoYW5nZWRFdmVudCgyLHQsdGhpcyxpLGUscyxuKSx0aGlzLk5zIT09bnVsbCkpe2NvbnN0IHI9by5kaWFncmFtO2lmKHIhPT1udWxsJiYhci5tZSl7Y29uc3QgbD1vLmZpbmRCaW5kaW5nUGFuZWwoKTtpZihsIT09bnVsbCl7Y29uc3QgaD1sLmRhdGE7aWYoaCE9PW51bGwpe2NvbnN0IGY9dGhpcy5Ocy5pdGVyYXRvcjtmb3IoO2YubmV4dCgpOylmLnZhbHVlLnVwZGF0ZVNvdXJjZSh0aGlzLGgsdCxsKX19fX19Z2V0IHBhbmVsKCl7cmV0dXJuIHRoaXMuSHN9Z2V0IGlzUm93KCl7cmV0dXJuIHRoaXMueHB9c2V0IGlzUm93KHQpe3RoaXMueHA9dH1nZXQgaW5kZXgoKXtyZXR1cm4gdGhpcy5PdH1zZXQgaW5kZXgodCl7dGhpcy5PdD10fWdldCBoZWlnaHQoKXtyZXR1cm4gdGhpcy55ZX1zZXQgaGVpZ2h0KHQpe2NvbnN0IGk9dGhpcy55ZTtpIT09dCYmKERlYnVnJiZVLmkodCxcIm51bWJlclwiLFJvd0NvbHVtbkRlZmluaXRpb24sXCJoZWlnaHRcIiksdDwwJiZVLlUodCxcIj49IDBcIixSb3dDb2x1bW5EZWZpbml0aW9uLFwiaGVpZ2h0XCIpLHRoaXMueWU9dCx0aGlzLmFjdHVhbD10aGlzLnN0LHRoaXMucGFuZWwhPT1udWxsJiZ0aGlzLnBhbmVsLnUoKSx0aGlzLnQoXCJoZWlnaHRcIixpLHQpKX1nZXQgd2lkdGgoKXtyZXR1cm4gdGhpcy55ZX1zZXQgd2lkdGgodCl7Y29uc3QgaT10aGlzLnllO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsUm93Q29sdW1uRGVmaW5pdGlvbixcIndpZHRoXCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsUm93Q29sdW1uRGVmaW5pdGlvbixcIndpZHRoXCIpLHRoaXMueWU9dCx0aGlzLmFjdHVhbD10aGlzLnN0LHRoaXMucGFuZWwhPT1udWxsJiZ0aGlzLnBhbmVsLnUoKSx0aGlzLnQoXCJ3aWR0aFwiLGksdCkpfWdldCBtaW5pbXVtKCl7cmV0dXJuIHRoaXMuSWF9c2V0IG1pbmltdW0odCl7Y29uc3QgaT10aGlzLklhO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsUm93Q29sdW1uRGVmaW5pdGlvbixcIm1pbmltdW1cIiksKHQ8MHx8IWlzRmluaXRlKHQpKSYmVS5VKHQsXCI+PSAwXCIsUm93Q29sdW1uRGVmaW5pdGlvbixcIm1pbmltdW1cIiksdGhpcy5JYT10LHRoaXMuYWN0dWFsPXRoaXMuc3QsdGhpcy5wYW5lbCE9PW51bGwmJnRoaXMucGFuZWwudSgpLHRoaXMudChcIm1pbmltdW1cIixpLHQpKX1nZXQgbWF4aW11bSgpe3JldHVybiB0aGlzLk9hfXNldCBtYXhpbXVtKHQpe2NvbnN0IGk9dGhpcy5PYTtpIT09dCYmKERlYnVnJiZVLmkodCxcIm51bWJlclwiLFJvd0NvbHVtbkRlZmluaXRpb24sXCJtYXhpbXVtXCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsUm93Q29sdW1uRGVmaW5pdGlvbixcIm1heGltdW1cIiksdGhpcy5PYT10LHRoaXMuYWN0dWFsPXRoaXMuc3QsdGhpcy5wYW5lbCE9PW51bGwmJnRoaXMucGFuZWwudSgpLHRoaXMudChcIm1heGltdW1cIixpLHQpKX1nZXQgYWxpZ25tZW50KCl7cmV0dXJuIHRoaXMudWl9c2V0IGFsaWdubWVudCh0KXtjb25zdCBpPXRoaXMudWk7aS5lcXVhbHModCl8fChEZWJ1ZyYmVS5lKHQsU3BvdCxSb3dDb2x1bW5EZWZpbml0aW9uLFwiYWxpZ25tZW50XCIpLHRoaXMudWk9dC5OKCksdGhpcy5wYW5lbCE9PW51bGwmJnRoaXMucGFuZWwudSgpLHRoaXMudChcImFsaWdubWVudFwiLGksdCkpfWdldCBzdHJldGNoKCl7cmV0dXJuIHRoaXMuaW99c2V0IHN0cmV0Y2godCl7Y29uc3QgaT10aGlzLmlvO2khPT10JiYodGhpcy5pbz10LHRoaXMucGFuZWwhPT1udWxsJiZ0aGlzLnBhbmVsLnUoKSx0aGlzLnQoXCJzdHJldGNoXCIsaSx0KSl9Z2V0IHNlcGFyYXRvclBhZGRpbmcoKXtyZXR1cm4gdGhpcy5vbH1zZXQgc2VwYXJhdG9yUGFkZGluZyh0KXt0eXBlb2YgdD09XCJudW1iZXJcIj90PW5ldyBNYXJnaW4odCk6dCE9PW51bGwmJkRlYnVnJiZVLmUodCxNYXJnaW4sUm93Q29sdW1uRGVmaW5pdGlvbixcInNlcGFyYXRvclBhZGRpbmdcIik7Y29uc3QgaT10aGlzLm9sOyh0PT09bnVsbHx8aT09PW51bGx8fCFpLmVxdWFscyh0KSkmJih0IT09bnVsbCYmKHQ9dC5OKCkpLHRoaXMub2w9dCx0aGlzLnBhbmVsIT09bnVsbCYmdGhpcy5wYW5lbC51KCksdGhpcy50KFwic2VwYXJhdG9yUGFkZGluZ1wiLGksdCkpfWdldCBzZXBhcmF0b3JTdHJva2UoKXtyZXR1cm4gdGhpcy53ZH1zZXQgc2VwYXJhdG9yU3Ryb2tlKHQpe2NvbnN0IGk9dGhpcy53ZDtpIT09dCYmKHQhPT1udWxsJiZCcnVzaC5yZCh0LFwiUm93Q29sdW1uRGVmaW5pdGlvbi5zZXBhcmF0b3JTdHJva2VcIiksdCBpbnN0YW5jZW9mIEJydXNoJiZ0LnAoKSx0aGlzLndkPXQsdGhpcy5wYW5lbCE9PW51bGwmJnRoaXMucGFuZWwudSgpLHRoaXMudChcInNlcGFyYXRvclN0cm9rZVwiLGksdCkpfWdldCBzZXBhcmF0b3JTdHJva2VXaWR0aCgpe3JldHVybiB0aGlzLnhkfXNldCBzZXBhcmF0b3JTdHJva2VXaWR0aCh0KXtjb25zdCBpPXRoaXMueGQ7aSE9PXQmJih0aGlzLnhkPXQsdGhpcy5wYW5lbCE9PW51bGwmJnRoaXMucGFuZWwudSgpLHRoaXMudChcInNlcGFyYXRvclN0cm9rZVdpZHRoXCIsaSx0KSl9Z2V0IHNlcGFyYXRvckRhc2hBcnJheSgpe3JldHVybiB0aGlzLkVhfXNldCBzZXBhcmF0b3JEYXNoQXJyYXkodCl7Y29uc3QgaT10aGlzLkVhO2lmKGkhPT10KXtpZih0IT09bnVsbCYmIUFycmF5LmlzQXJyYXkodCkmJlUuUGkodCxcIkFycmF5XCIsUm93Q29sdW1uRGVmaW5pdGlvbixcInNlcGFyYXRvckRhc2hBcnJheTp2YWx1ZVwiKSx0IT09bnVsbCl7Y29uc3QgZT10Lmxlbmd0aDtsZXQgcz0wO2ZvcihsZXQgbj0wO248ZTtuKyspe2NvbnN0IG89dFtuXTsodHlwZW9mIG8hPVwibnVtYmVyXCJ8fCEobz49MCl8fCFpc0Zpbml0ZShvKSkmJlUubihcInNlcGFyYXRvckRhc2hBcnJheSB2YWx1ZSBcIitvK1wiIGF0IGluZGV4IFwiK24rXCIgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlciBvciB6ZXJvLlwiKSxzKz1vfWlmKHM9PT0wKXtpZihpPT09bnVsbClyZXR1cm47dD1udWxsfX10aGlzLkVhPXQsdGhpcy5wYW5lbCE9PW51bGwmJnRoaXMucGFuZWwuTCgpLHRoaXMudChcInNlcGFyYXRvckRhc2hBcnJheVwiLGksdCl9fWdldCBiYWNrZ3JvdW5kKCl7cmV0dXJuIHRoaXMuUnR9c2V0IGJhY2tncm91bmQodCl7Y29uc3QgaT10aGlzLlJ0O2khPT10JiYodCE9PW51bGwmJkJydXNoLnJkKHQsXCJSb3dDb2x1bW5EZWZpbml0aW9uLmJhY2tncm91bmRcIiksdCBpbnN0YW5jZW9mIEJydXNoJiZ0LnAoKSx0aGlzLlJ0PXQsdGhpcy5wYW5lbCE9PW51bGwmJnRoaXMucGFuZWwuTCgpLHRoaXMudChcImJhY2tncm91bmRcIixpLHQpKX1nZXQgY292ZXJzU2VwYXJhdG9ycygpe3JldHVybiB0aGlzLmJkfXNldCBjb3ZlcnNTZXBhcmF0b3JzKHQpe2NvbnN0IGk9dGhpcy5iZDtpIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLFJvd0NvbHVtbkRlZmluaXRpb24sXCJjb3ZlcnNTZXBhcmF0b3JzXCIpLHRoaXMuYmQ9dCx0aGlzLnBhbmVsIT09bnVsbCYmdGhpcy5wYW5lbC5MKCksdGhpcy50KFwiY292ZXJzU2VwYXJhdG9yc1wiLGksdCkpfWdldCBzaXppbmcoKXtyZXR1cm4gdGhpcy55ZH1zZXQgc2l6aW5nKHQpe2NvbnN0IGk9dGhpcy55ZDtpIT09dCYmKERlYnVnJiZVLmoodCxTaXppbmcsXCJTaXppbmdcIiksdGhpcy55ZD10LHRoaXMucGFuZWwhPT1udWxsJiZ0aGlzLnBhbmVsLnUoKSx0aGlzLnQoXCJzaXppbmdcIixpLHQpKX1mYigpe2lmKHRoaXMuc2l6aW5nPT09MSl7Y29uc3QgdD10aGlzLkhzO3JldHVybiB0aGlzLmlzUm93P3Qucm93U2l6aW5nOnQuY29sdW1uU2l6aW5nfXJldHVybiB0aGlzLnNpemluZ31nZXQgYWN0dWFsKCl7cmV0dXJuIHRoaXMuc3R9c2V0IGFjdHVhbCh0KXtpc05hTih0aGlzLnllKT90aGlzLnN0PU1hdGgubWF4KE1hdGgubWluKHRoaXMuT2EsdCksdGhpcy5JYSk6dGhpcy5zdD1NYXRoLm1heChNYXRoLm1pbih0aGlzLk9hLHRoaXMueWUpLHRoaXMuSWEpfWdldCBtZWFzdXJlZCgpe3JldHVybiB0aGlzLklpfXNldCBtZWFzdXJlZCh0KXt0aGlzLklpPXR9Z2V0IHRvdGFsKCl7cmV0dXJuIHRoaXMuc3QrdGhpcy5jb21wdXRlRWZmZWN0aXZlU3BhY2luZygpfWdldCBwb3NpdGlvbigpe3JldHVybiB0aGlzLmd0fXNldCBwb3NpdGlvbih0KXt0aGlzLmd0PXR9YmluZCh0LGksZSxzKXtyZXR1cm4gdGhpcy5hYyh0LGksZSxzKSx0aGlzfWJpbmRUd29XYXkodCxpLGUscyl7Y29uc3Qgbj10aGlzLmFjKHQsaSxlLHMpO3JldHVybiBzPT09dm9pZCAwJiZuLm1ha2VUd29XYXkoKSx0aGlzfXRoZW1lKHQsaSxlLHMsbil7cmV0dXJuIHRoaXMuYmgodCxpLGUscyxuKSx0aGlzfXRoZW1lRGF0YSh0LGksZSxzLG4pe3JldHVybiB0aGlzLmJoKHQsaSxlLHMsbikub2ZEYXRhKCksdGhpc310aGVtZU9iamVjdCh0LGksZSxzLG4sbyl7cmV0dXJuIHRoaXMuYmgodCxpLGUscyxuKS5vZk9iamVjdChvKSx0aGlzfXRoZW1lTW9kZWwodCxpLGUscyxuKXtyZXR1cm4gdGhpcy5iaCh0LGksZSxzLG4pLm9mTW9kZWwoKSx0aGlzfWFjKHQsaSxlLHMpe2xldCBuO3JldHVybiB0eXBlb2YgdD09XCJzdHJpbmdcIj9uPW5ldyBCaW5kaW5nKHQsaSxlLHMpOm49dCx0aGlzLnYwKG4pLG59YmgodCxpLGUscyxuKXtsZXQgbztyZXR1cm4gdHlwZW9mIHQ9PVwic3RyaW5nXCI/bz1uZXcgVGhlbWVCaW5kaW5nKHQsaSxlLHMsbik6bz10LHRoaXMudjAobyksb312MCh0KXt0Lk5lPXRoaXM7Y29uc3QgaT10aGlzLnBhbmVsO2lmKGkhPT1udWxsKXtjb25zdCBlPWkuZmluZEJpbmRpbmdQYW5lbCgpO2UhPT1udWxsJiZlLk9MKCkmJlUubihcIkNhbm5vdCBhZGQgYSBCaW5kaW5nIHRvIGEgUm93Q29sdW1uRGVmaW5pdGlvbiB0aGF0IGlzIGFscmVhZHkgZnJvemVuOiBcIit0K1wiIG9uIFwiK2kpfXRoaXMuTnM9PT1udWxsJiYodGhpcy5Ocz1uZXcgTGlzdCksdGhpcy5Ocy5hZGQodCl9fWNsYXNzIFNoYXBlIGV4dGVuZHMgR3JhcGhPYmplY3R7ZnQ7Q3M7a2Q7QmE7JGk7cW87S287JHQ7U2Q7TWQ7djtjb25zdHJ1Y3Rvcih0LGkpe3N1cGVyKCksdGhpcy5mdD1udWxsLHRoaXMuQ3M9bnVsbCx0aGlzLmtkPVwiTm9uZVwiLHRoaXMuQmE9XCJibGFja1wiLHRoaXMuJGk9XCJibGFja1wiLHRoaXMucW89MSx0aGlzLktvPW51bGwsdGhpcy4kdD1udWxsLHRoaXMuU2Q9TmFOLHRoaXMuTWQ9TmFOLHRoaXMudj1udWxsLHR5cGVvZiB0PT1cInN0cmluZ1wiP3RoaXMuZmlndXJlPXQ6dCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpLGkmJk9iamVjdC5hc3NpZ24odGhpcyxpKX1jbG9uZVByb3RlY3RlZCh0KXtzdXBlci5jbG9uZVByb3RlY3RlZCh0KSx0LmZ0PXRoaXMuZnQsdC5Dcz10aGlzLkNzLHQua2Q9dGhpcy5rZCx0LkJhPXRoaXMuQmEsdC4kaT10aGlzLiRpLHQucW89dGhpcy5xbyx0aGlzLktvIT09bnVsbCYmKHQuS289dGhpcy5Lby5zbGljZSgpKSx0aGlzLiR0IT09bnVsbCYmKHRoaXMuJHQubWk/dC4kdD10aGlzLiR0OnQuJHQ9dGhpcy4kdC5jb3B5KCkpLHQuU2Q9dGhpcy5TZCx0Lk1kPXRoaXMuTWQsdGhpcy52IT09bnVsbCYmKHQudj10aGlzLnYuY29weSgpKX1WYSgpe3JldHVybiB0aGlzLiR0PT09bnVsbD90aGlzLiR0PW5ldyBTaGFwZVRlbXBsYXRlU2V0dGluZ3M6dGhpcy4kdC5taSYmKHRoaXMuJHQ9dGhpcy4kdC5jb3B5KCkpLHRoaXMuJHR9bWgoKXtzdXBlci5taCgpLHRoaXMuJHQhPT1udWxsJiYodGhpcy4kdC5taT0hMCl9YWkodCl7dCBpbiBHZW9tZXRyeVN0cmV0Y2g/dGhpcy5nZW9tZXRyeVN0cmV0Y2g9dDpzdXBlci5haSh0KX10b1N0cmluZygpe3JldHVyblwiU2hhcGUoXCIrKHRoaXMuZmlndXJlIT09XCJOb25lXCI/dGhpcy5maWd1cmU6dGhpcy50b0Fycm93IT09XCJOb25lXCI/dGhpcy50b0Fycm93OnRoaXMuZnJvbUFycm93KStcIikjXCIrR1NldC5ncyh0aGlzKX1ISSh0LGkpe2NvbnN0IGU9dGhpcy5wYXRoUGF0dGVybjtlLmR0KDEvMCwxLzApO2NvbnN0IHM9ZS5tZWFzdXJlZEJvdW5kcztlLkd0KDAsMCxzLndpZHRoLHMuaGVpZ2h0KTtjb25zdCBuPXRoaXMuZ2VvbWV0cnk7dC5zYXZlKCksdC5iZWdpblBhdGgoKTtjb25zdCBvPVUubHQoKTtpZihuLnR5cGU9PT0xKW8ucHVzaChuLnN0YXJ0WCksby5wdXNoKG4uc3RhcnRZKSxvLnB1c2gobi5lbmRYKSxvLnB1c2gobi5lbmRZKSx0aGlzLlBkKHQsaSxvLGUpO2Vsc2UgaWYobi50eXBlPT09NCl7Y29uc3Qgcj1uLmZpZ3VyZXMuaXRlcmF0b3I7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtvLmxlbmd0aD0wLG8ucHVzaChsLnN0YXJ0WCksby5wdXNoKGwuc3RhcnRZKTtsZXQgaD1sLnN0YXJ0WCxmPWwuc3RhcnRZLGE9aCxjPWY7Y29uc3QgdT1sLnNlZ21lbnRzLmgsZD11Lmxlbmd0aDtmb3IobGV0IG09MDttPGQ7bSsrKXtjb25zdCBnPXVbbV07c3dpdGNoKGcudHlwZSl7Y2FzZSAxOnRoaXMuUGQodCxpLG8sZSksby5sZW5ndGg9MCxvLnB1c2goZy5lbmRYKSxvLnB1c2goZy5lbmRZKSxoPWcuZW5kWCxmPWcuZW5kWSxhPWgsYz1mO2JyZWFrO2Nhc2UgMjpvLnB1c2goZy5lbmRYKSxvLnB1c2goZy5lbmRZKSxoPWcuZW5kWCxmPWcuZW5kWTticmVhaztjYXNlIDM6R2VvLlhuKGgsZixnLnBvaW50MVgsZy5wb2ludDFZLGcucG9pbnQyWCxnLnBvaW50MlksZy5lbmRYLGcuZW5kWSwuNSxvKSxoPWcuZW5kWCxmPWcuZW5kWTticmVhaztjYXNlIDQ6R2VvLktnKGgsZixnLnBvaW50MVgsZy5wb2ludDFZLGcuZW5kWCxnLmVuZFksLjUsbyksaD1nLmVuZFgsZj1nLmVuZFk7YnJlYWs7Y2FzZSA1Ontjb25zdCBwPWcuQ28obCksdz1wLmxlbmd0aDtpZih3PT09MCl7by5wdXNoKGcuY2VudGVyWCksby5wdXNoKGcuY2VudGVyWSksaD1nLmNlbnRlclgsZj1nLmNlbnRlclk7YnJlYWt9Zm9yKGxldCB4PTA7eDx3O3grKyl7Y29uc3Qgaz1wW3hdO0dlby5YbihoLGYsa1syXSxrWzNdLGtbNF0sa1s1XSxrWzZdLGtbN10sLjUsbyksaD1rWzZdLGY9a1s3XX1icmVha31jYXNlIDY6e2NvbnN0IHA9Zy5IaChsLGgsZiksdz1wLmxlbmd0aDtpZih3PT09MCl7by5wdXNoKGcuZW5kWCksby5wdXNoKGcuZW5kWSksaD1nLmVuZFgsZj1nLmVuZFk7YnJlYWt9Zm9yKGxldCB4PTA7eDx3O3grKyl7Y29uc3Qgaz1wW3hdO0dlby5YbihoLGYsa1syXSxrWzNdLGtbNF0sa1s1XSxrWzZdLGtbN10sLjUsbyksaD1rWzZdLGY9a1s3XX1icmVha31kZWZhdWx0OlUubihcIlNlZ21lbnQgbm90IG9mIHZhbGlkIHR5cGU6IFwiK2cudHlwZSl9Zy5pc0Nsb3NlZCYmKG8ucHVzaChhKSxvLnB1c2goYyksdGhpcy5QZCh0LGksbyxlKSl9dGhpcy5QZCh0LGksbyxlKX19ZWxzZSBpZihuLnR5cGU9PT0yKW8ucHVzaChuLnN0YXJ0WCksby5wdXNoKG4uc3RhcnRZKSxvLnB1c2gobi5lbmRYKSxvLnB1c2gobi5zdGFydFkpLG8ucHVzaChuLmVuZFgpLG8ucHVzaChuLmVuZFkpLG8ucHVzaChuLnN0YXJ0WCksby5wdXNoKG4uZW5kWSksby5wdXNoKG4uc3RhcnRYKSxvLnB1c2gobi5zdGFydFkpLHRoaXMuUGQodCxpLG8sZSk7ZWxzZSBpZihuLnR5cGU9PT0zKXtjb25zdCByPW5ldyBQYXRoRmlndXJlO3Iuc3RhcnRYPW4uZW5kWCxyLnN0YXJ0WT0obi5zdGFydFkrbi5lbmRZKS8yO2NvbnN0IGw9bmV3IFBhdGhTZWdtZW50KDUpO2wuc3RhcnRBbmdsZT0wLGwuc3dlZXBBbmdsZT0zNjAsbC5jZW50ZXJYPShuLnN0YXJ0WCtuLmVuZFgpLzIsbC5jZW50ZXJZPShuLnN0YXJ0WStuLmVuZFkpLzIsbC5yYWRpdXNYPU1hdGguYWJzKG4uc3RhcnRYLW4uZW5kWCkvMixsLnJhZGl1c1k9TWF0aC5hYnMobi5zdGFydFktbi5lbmRZKS8yLHIuYWRkKGwpO2NvbnN0IGg9bC5DbyhyKSxmPWgubGVuZ3RoO2lmKGY9PT0wKW8ucHVzaChsLmNlbnRlclgpLG8ucHVzaChsLmNlbnRlclkpO2Vsc2V7bGV0IGE9ci5zdGFydFgsYz1yLnN0YXJ0WTtmb3IobGV0IHU9MDt1PGY7dSsrKXtjb25zdCBkPWhbdV07R2VvLlhuKGEsYyxkWzJdLGRbM10sZFs0XSxkWzVdLGRbNl0sZFs3XSwuNSxvKSxhPWRbNl0sYz1kWzddfX10aGlzLlBkKHQsaSxvLGUpfVUudHQobyksdC5yZXN0b3JlKCksdC5jbGVhckNvbnRleHRDYWNoZSghMSl9cUkodCl7bGV0IGk9dC5tZWFzdXJlZEJvdW5kcy53aWR0aDtyZXR1cm4gdCBpbnN0YW5jZW9mIFNoYXBlJiYoaS09dC5zdHJva2VXaWR0aCksaTwxJiYoaT0xKSxpfVBkKHQsaSxlLHMpe2NvbnN0IG49ZS5sZW5ndGg7aWYobjw0KXJldHVybjtjb25zdCBvPXMubWVhc3VyZWRCb3VuZHMscj1NYXRoLm1heCgxLG8ud2lkdGgpLGw9by5oZWlnaHQ7bGV0IGg9ZVswXSxmPWVbMV0sYT0wLGM9MCx1PTAsZD0wLG09MCxnPTAscD0wLHc9MDtjb25zdCB4PVUubHQoKTtmb3IobGV0IE49MjtOPG47Tis9MilhPWVbTl0sYz1lW04rMV0sdT1hLWgsZD1jLWYsdT09PTAmJih1PS4wMDEpLG09ZC91LGc9TWF0aC5hdGFuMihkLHUpLHA9TWF0aC5zcXJ0KHUqdStkKmQpLHgucHVzaChbdSxnLG0scF0pLHcrPXAsaD1hLGY9YztoPWVbMF0sZj1lWzFdO2NvbnN0IGs9dGhpcy5xSShzKTtsZXQgYj1rO2NvbnN0IFM9ci8yO2xldCBNPVMhPT0wLEE9MCxDPXhbQV07dT1DWzBdLGc9Q1sxXSxtPUNbMl0scD1DWzNdO2xldCBQPTA7Zm9yKDt3Pj0uMTspe2lmKFA9PT0wJiYoTT8oYj1rLGItPVMsdy09UyxNPSExKTpiPWssYj09PTAmJihiPTEpKSxiPncpe2I9dyxVLnR0KHgpO3JldHVybn1iPnA/KFA9Yi1wLGI9cCk6UD0wO2xldCBOPU1hdGguc3FydChiKmIvKDErbSptKSk7aWYodTwwJiYoTj0tTiksaCs9TixmKz1tKk4sdC50cmFuc2xhdGUoaCxmKSx0LnJvdGF0ZShnKSx0LnRyYW5zbGF0ZSgtKHIvMiksLShsLzIpKSxQPT09MCYmcy54aCh0LGkpLHQudHJhbnNsYXRlKHIvMixsLzIpLHQucm90YXRlKC1nKSx0LnRyYW5zbGF0ZSgtaCwtZiksdy09YixwLT1iLFAhPT0wKXtpZihBKyssQT09PXgubGVuZ3RoKXtVLnR0KHgpO3JldHVybn1DPXhbQV0sdT1DWzBdLGc9Q1sxXSxtPUNbMl0scD1DWzNdLGI9UH19VS50dCh4KX14aCh0LGkpe2NvbnN0IGU9dCBpbnN0YW5jZW9mIFNWR0NvbnRleHQ7bGV0IHM9dGhpcy4kaTtjb25zdCBuPXRoaXMuQmE7aWYocz09PW51bGwmJm49PT1udWxsKXJldHVybjtjb25zdCBvPXRoaXMuZnQ7aWYobz09PW51bGwpcmV0dXJuO3QuY29tbWl0VHJhbnNmb3JtKCk7Y29uc3Qgcj10aGlzLmFjdHVhbEJvdW5kcyxsPXRoaXMubmF0dXJhbEJvdW5kcztuIT09bnVsbCYmdGhpcy51bih0LG4sITAsITEsbCxyKTtjb25zdCBoPXRoaXMucGFydDtsZXQgZj10aGlzLnFvO3MhPT1udWxsJiZmPT09MCYmaCE9PW51bGwmJih0aGlzLmlzUGFuZWxNYWlufHxoLmZpbmRNYWluRWxlbWVudCgpPT09dGhpcykmJihmPWguV0koKSksZj09PTAmJihzPW51bGwpLHMhPT1udWxsJiZmIT09MCYmKHRoaXMudW4odCxzLCExLCExLGwsciksdC5saW5lV2lkdGg9Zix0LmxpbmVKb2luPXRoaXMuc3Ryb2tlSm9pbix0LmxpbmVDYXA9dGhpcy5zdHJva2VDYXAsdC5taXRlckxpbWl0PXRoaXMuc3Ryb2tlTWl0ZXJMaW1pdCk7bGV0IGE9ITE7aCYmaS5nZXRSZW5kZXJpbmdIaW50KFwiZHJhd1NoYWRvd3NcIikmJihhPWguaXNTaGFkb3dlZCksdC5zbD09PSExJiYoYT0hMSk7bGV0IGM9ITA7cyE9PW51bGwmJihuPT09bnVsbHx8bj09PVwidHJhbnNwYXJlbnRcIikmJihjPSExKTtsZXQgdT0hMTtjb25zdCBkPXRoaXMuc3Ryb2tlRGFzaEFycmF5O2lmKGQhPT1udWxsJiYodT0hMCx0LmVuYWJsZURhc2goZCx0aGlzLnN0cm9rZURhc2hPZmZzZXQpKSxvLnR5cGU9PT0xKXQuYmVnaW5QYXRoKCksdC5tb3ZlVG8oby5zdGFydFgsby5zdGFydFkpLHQubGluZVRvKG8uZW5kWCxvLmVuZFkpLHMhPT1udWxsJiZ0LnN0cm9rZUNvbnRleHQoKSx0LmVuZFBhdGgoKTtlbHNlIGlmKG8udHlwZT09PTIpe2NvbnN0IG09by5zdGFydFgsZz1vLnN0YXJ0WSxwPW8uZW5kWCx3PW8uZW5kWSx4PU1hdGgubWluKG0scCksaz1NYXRoLm1pbihnLHcpLGI9TWF0aC5hYnMocC1tKSxTPU1hdGguYWJzKHctZyk7dC5iZWdpblBhdGgoKSx0LnJlY3QoeCxrLGIsUyksbiE9PW51bGwmJnQuZmlsbENvbnRleHQobiwhMSxudWxsKSxzIT09bnVsbCYmKGMmJmEmJnQuc2hhZG93c09mZigpLHQuc3Ryb2tlQ29udGV4dCgpLGMmJmEmJnQuc2hhZG93c09uKCkpLHQuZW5kUGF0aCgpfWVsc2UgaWYoby50eXBlPT09Myl7Y29uc3QgbT1vLnN0YXJ0WCxnPW8uc3RhcnRZLHA9by5lbmRYLHc9by5lbmRZLHg9TWF0aC5hYnMocC1tKS8yLGs9TWF0aC5hYnMody1nKS8yLGI9TWF0aC5taW4obSxwKSt4LFM9TWF0aC5taW4oZyx3KStrO3QuYmVnaW5QYXRoKCksdC5tb3ZlVG8oYixTLWspLHQuYmV6aWVyQ3VydmVUbyhiK0dlby56bip4LFMtayxiK3gsUy1HZW8uem4qayxiK3gsUyksdC5iZXppZXJDdXJ2ZVRvKGIreCxTK0dlby56biprLGIrR2VvLnpuKngsUytrLGIsUytrKSx0LmJlemllckN1cnZlVG8oYi1HZW8uem4qeCxTK2ssYi14LFMrR2VvLnpuKmssYi14LFMpLHQuYmV6aWVyQ3VydmVUbyhiLXgsUy1HZW8uem4qayxiLUdlby56bip4LFMtayxiLFMtayksdC5jbG9zZVBhdGgoKSxuIT09bnVsbCYmdC5maWxsQ29udGV4dChuLCExLG51bGwpLHMhPT1udWxsJiYoYyYmYSYmdC5zaGFkb3dzT2ZmKCksdC5zdHJva2VDb250ZXh0KCksYyYmYSYmdC5zaGFkb3dzT24oKSksdC5lbmRQYXRoKCl9ZWxzZSBpZihvLnR5cGU9PT00KXtjb25zdCBtPW8uZmlndXJlcyxnPW0ubGVuZ3RoO2ZvcihsZXQgcD0wO3A8ZztwKyspe2NvbnN0IHc9bS5oW3BdO2U/KHQuYmVnaW5QYXRoKCksdGhpcy5idWlsZFBhdGgodCx3KSk6dy5LZT09PW51bGwmJih3LktlPW5ldyBQYXRoMkQsdGhpcy5idWlsZFBhdGgody5LZSx3KSk7Y29uc3QgeD13LmlzRmlsbGVkO2E/dy5pc1NoYWRvd2VkPyh4PT09ITAmJm4hPT1cInRyYW5zcGFyZW50XCImJm4hPT1udWxsJiZ0LmZpbGxDb250ZXh0KG4sdy5pc0V2ZW5PZGQsdy5LZSkscyE9PW51bGwmJih4JiZjJiZ0LnNoYWRvd3NPZmYoKSx0LnN0cm9rZSh3LktlKSx4JiZjJiZ0LnNoYWRvd3NPbigpKSk6KHQuc2hhZG93c09mZigpLHgmJm4hPT1cInRyYW5zcGFyZW50XCImJm4hPT1udWxsJiZ0LmZpbGxDb250ZXh0KG4sdy5pc0V2ZW5PZGQsdy5LZSkscyE9PW51bGwmJnQuc3Ryb2tlKHcuS2UpLHQuc2hhZG93c09uKCkpOih4JiZuIT09bnVsbCYmdC5maWxsQ29udGV4dChuLHcuaXNFdmVuT2RkLHcuS2UpLHMhPT1udWxsJiZ0LnN0cm9rZSh3LktlKSksdC5lbmRQYXRoKHApfX11JiZ0LmRpc2FibGVEYXNoKCksdGhpcy5wYXRoUGF0dGVybiE9PW51bGwmJnRoaXMuSEkodCxpKX1idWlsZFBhdGgodCxpKXt0Lm1vdmVUbyhpLnN0YXJ0WCxpLnN0YXJ0WSk7Y29uc3QgZT1pLnNlZ21lbnRzLmgscz1lLmxlbmd0aDtsZXQgbj1udWxsO2ZvcihsZXQgbz0wO288cztvKyspe2NvbnN0IHI9ZVtvXTtzd2l0Y2goci50eXBlKXtjYXNlIDE6dC5tb3ZlVG8oci5lbmRYLHIuZW5kWSk7YnJlYWs7Y2FzZSAyOnQubGluZVRvKHIuZW5kWCxyLmVuZFkpO2JyZWFrO2Nhc2UgMzp0LmJlemllckN1cnZlVG8oci5wb2ludDFYLHIucG9pbnQxWSxyLnBvaW50Mlgsci5wb2ludDJZLHIuZW5kWCxyLmVuZFkpO2JyZWFrO2Nhc2UgNDp0LnF1YWRyYXRpY0N1cnZlVG8oci5wb2ludDFYLHIucG9pbnQxWSxyLmVuZFgsci5lbmRZKTticmVhaztjYXNlIDU6aWYoci5yYWRpdXNYPT09ci5yYWRpdXNZKXtjb25zdCBsPW4hPT1udWxsP24uZW5kWDppLnN0YXJ0WCxoPW4hPT1udWxsP24uZW5kWTppLnN0YXJ0WSxmPU1hdGguUEkvMTgwO3QuYXJjKHIucG9pbnQxWCxyLnBvaW50MVksci5yYWRpdXNYLHIuc3RhcnRBbmdsZSpmLChyLnN0YXJ0QW5nbGUrci5zd2VlcEFuZ2xlKSpmLHIuc3dlZXBBbmdsZTwwLGwsaCl9ZWxzZXtjb25zdCBsPXIuQ28oaSksaD1sLmxlbmd0aDtpZihoPT09MCl7dC5saW5lVG8oci5jZW50ZXJYLHIuY2VudGVyWSk7YnJlYWt9Zm9yKGxldCBmPTA7ZjxoO2YrKyl7Y29uc3QgYT1sW2ZdO2Y9PT0wJiZ0LmxpbmVUbyhhWzBdLGFbMV0pLHQuYmV6aWVyQ3VydmVUbyhhWzJdLGFbM10sYVs0XSxhWzVdLGFbNl0sYVs3XSl9fWJyZWFrO2Nhc2UgNjp7bGV0IGw9MCxoPTAsZjtpZihuIT09bnVsbCYmbi50eXBlPT09NSl7Zj1uLkNvKGkpO2NvbnN0IGM9Zi5sZW5ndGg7aWYoYz09PTApe3QubGluZVRvKHIuZW5kWCxyLmVuZFkpO2JyZWFrfWNvbnN0IHU9ZltjLTFdfHxudWxsO3UhPT1udWxsJiYobD11WzZdLGg9dVs3XSl9ZWxzZSBsPW4hPT1udWxsP24uZW5kWDppLnN0YXJ0WCxoPW4hPT1udWxsP24uZW5kWTppLnN0YXJ0WTtmPXIuSGgoaSxsLGgpO2NvbnN0IGE9Zi5sZW5ndGg7aWYoYT09PTApe3QubGluZVRvKHIuZW5kWCxyLmVuZFkpO2JyZWFrfWZvcihsZXQgYz0wO2M8YTtjKyspe2NvbnN0IHU9ZltjXTt0LmJlemllckN1cnZlVG8odVsyXSx1WzNdLHVbNF0sdVs1XSx1WzZdLHVbN10pfWJyZWFrfX1yLmlzQ2xvc2VkJiZ0LmNsb3NlUGF0aCgpLG49cn19bmModCxpLGUpe2lmKCFzdXBlci5uYyh0LGksZSl8fHRoaXMuJGk9PT1udWxsJiZ0aGlzLkJhPT09bnVsbHx8dGhpcy5mdD09PW51bGx8fHRoaXMucGF0aFBhdHRlcm4hPT1udWxsKXJldHVybiExO2NvbnN0IHM9dGhpcy5zdmcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJwYXRoXCIpO3JldHVybiB0aGlzLmdlb21ldHJ5LmZpZ3VyZXMubGVuZ3RoIT09cy5sZW5ndGg/ITE6KHQuY3VycmVudFBhdGg9dGhpcy5zdmcsdGhpcy54aCh0LGkpLHQuY3VycmVudFBhdGg9bnVsbCwhMCl9bmQodCl7cmV0dXJuIHRoaXMuZ2VvbWV0cnkhPT1udWxsJiZ0aGlzLmdlb21ldHJ5LmZpZ3VyZXMubGVuZ3RoPjF8fHRoaXMucGF0aFBhdHRlcm4hPT1udWxsPyEwOnN1cGVyLm5kKHQpfUxQKHQsaSl7aWYodC5ub2RlTmFtZSE9PVwiZ1wiKXQuc2V0QXR0cmlidXRlTlMobnVsbCxcImZpbHRlclwiLGkpO2Vsc2V7Y29uc3QgZT10LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicGF0aFwiKTtmb3IobGV0IHM9MDtzPGUubGVuZ3RoO3MrKyllW3NdLnNldEF0dHJpYnV0ZU5TKG51bGwsXCJmaWx0ZXJcIixpKX19Z2V0RG9jdW1lbnRQb2ludCh0LGkpe2lmKGk9PT12b2lkIDAmJihpPW5ldyBQb2ludCksdCBpbnN0YW5jZW9mIFNwb3Qpe2NvbnN0IGU9dDtlLmlzTm9TcG90KCkmJlUubihcImdldERvY3VtZW50UG9pbnQgU3BvdCBtdXN0IGJlIGEgcmVhbCwgc3BlY2lmaWMgU3BvdCwgbm90OiBcIitlLnRvU3RyaW5nKCkpO2NvbnN0IHM9dGhpcy5uYXR1cmFsQm91bmRzLG49dGhpcy5zdHJva2VXaWR0aDtyZXR1cm4gaS5zKGUueCoocy53aWR0aCtuKS1uLzIrcy54K2Uub2Zmc2V0WCxlLnkqKHMuaGVpZ2h0K24pLW4vMitzLnkrZS5vZmZzZXRZKSx0aGlzLlVzLmt0KGkpLGl9ZWxzZSByZXR1cm4gaS5zZXQodCksdGhpcy5Vcy5rdChpKSxpfWdldERvY3VtZW50Qm91bmRzKHQpe3Q9PT12b2lkIDAmJih0PW5ldyBSZWN0KTtjb25zdCBpPXRoaXMubmF0dXJhbEJvdW5kcyxlPXRoaXMuVXMscz1SZWN0LksoaS54LGkueSxpLndpZHRoLGkuaGVpZ2h0KSxuPXRoaXMuc3Ryb2tlV2lkdGg7cy5pbmZsYXRlKG4vMixuLzIpO2NvbnN0IG89UG9pbnQuSyhzLngscy55KS5GKGUpO3JldHVybiB0LnMoby54LG8ueSwwLDApLG8ucyhzLnJpZ2h0LHMueSkuRihlKSx0LnVuaW9uTm9DaGVjayhvLngsby55LDAsMCksby5zKHMucmlnaHQscy5ib3R0b20pLkYoZSksdC51bmlvbk5vQ2hlY2soby54LG8ueSwwLDApLG8ucyhzLngscy5ib3R0b20pLkYoZSksdC51bmlvbk5vQ2hlY2soby54LG8ueSwwLDApLFJlY3QubyhzKSxQb2ludC5vKG8pLHR9cGgodCxpKXtjb25zdCBlPXRoaXMuZ2VvbWV0cnk7aWYoZT09PW51bGx8fHRoaXMuZmlsbD09PW51bGwmJnRoaXMuc3Ryb2tlPT09bnVsbClyZXR1cm4hMTtjb25zdCBzPWUuYm91bmRzO2xldCBuPXRoaXMuc3Ryb2tlV2lkdGgvMjtlLnR5cGU9PT0xJiYhaSYmKG4rPTIpO2NvbnN0IG89UmVjdC5hKCk7aWYoby5jKHMpLG8uaW5mbGF0ZShuKzIsbisyKSwhby5jb250YWluc1BvaW50KHQpKXJldHVybiBSZWN0Lm8obyksITE7Y29uc3Qgcj1uKzFlLTQ7aWYoZS50eXBlPT09MSl7aWYodGhpcy5zdHJva2U9PT1udWxsKXJldHVybiExO2NvbnN0IGw9KGUuc3RhcnRYLWUuZW5kWCkqKHQueC1lLmVuZFgpKyhlLnN0YXJ0WS1lLmVuZFkpKih0LnktZS5lbmRZKSxoPShlLmVuZFgtZS5zdGFydFgpKih0LngtZS5zdGFydFgpKyhlLmVuZFktZS5zdGFydFkpKih0LnktZS5zdGFydFkpO3JldHVybiBsPDB8fGg8MD8hMTooUmVjdC5vKG8pLEdlby56aShlLnN0YXJ0WCxlLnN0YXJ0WSxlLmVuZFgsZS5lbmRZLG4sdC54LHQueSkpfWVsc2UgaWYoZS50eXBlPT09Mil7Y29uc3QgbD1lLnN0YXJ0WCxoPWUuc3RhcnRZLGY9ZS5lbmRYLGE9ZS5lbmRZO2lmKG8ueD1NYXRoLm1pbihsLGYpLG8ueT1NYXRoLm1pbihoLGEpLG8ud2lkdGg9TWF0aC5hYnMoZi1sKSxvLmhlaWdodD1NYXRoLmFicyhhLWgpLHRoaXMuZmlsbD09PW51bGwpe2lmKG8uaW5mbGF0ZSgtciwtciksby5jb250YWluc1BvaW50KHQpKXJldHVybiBSZWN0Lm8obyksITE7by5pbmZsYXRlKHIscil9dGhpcy5zdHJva2UhPT1udWxsJiZvLmluZmxhdGUobixuKTtjb25zdCBjPW8uY29udGFpbnNQb2ludCh0KTtyZXR1cm4gUmVjdC5vKG8pLGN9ZWxzZSBpZihlLnR5cGU9PT0zKXtjb25zdCBsPWUuc3RhcnRYLGg9ZS5zdGFydFksZj1lLmVuZFgsYT1lLmVuZFk7bGV0IGM9TWF0aC5taW4obCxmKSx1PU1hdGgubWluKGgsYSk7Y29uc3QgZD1NYXRoLmFicyhmLWwpLG09TWF0aC5hYnMoYS1oKTtsZXQgZz1kLzIscD1tLzI7aWYoYz10LngtKGMrZyksdT10LnktKHUrcCksdGhpcy5maWxsPT09bnVsbCl7aWYoZy09cixwLT1yLGc8PTB8fHA8PTApcmV0dXJuIFJlY3QubyhvKSwhMTtpZihjKmMvKGcqZykrdSp1LyhwKnApPD0xKXJldHVybiBSZWN0Lm8obyksITE7Zys9cixwKz1yfXJldHVybiB0aGlzLnN0cm9rZSE9PW51bGwmJihnKz1yLHArPXIpLFJlY3QubyhvKSxnPD0wfHxwPD0wPyExOmMqYy8oZypnKSt1KnUvKHAqcCk8PTF9ZWxzZXtpZihlLnR5cGU9PT00KXJldHVybiBSZWN0Lm8obyksdGhpcy5maWxsPT09bnVsbD9lLktDKHQueCx0Lnksbik6ZS5pUyh0LG4sdGhpcy5zdHJva2VXaWR0aD4xLGkpO1UubihcIlVua25vd24gR2VvbWV0cnkgdHlwZTogXCIrZS50eXBlKX19ZWQodCxpLGUscyl7Y29uc3Qgbj10aGlzLmRlc2lyZWRTaXplLG89dGhpcy5xbzt0PU1hdGgubWF4KHQsMCksaT1NYXRoLm1heChpLDApO2xldCByO2lmKHRoaXMuQ3MhPT1udWxsKXI9dGhpcy5nZW9tZXRyeS5ib3VuZHM7ZWxzZXtjb25zdCBnPXRoaXMuZmlndXJlO2xldCBwPVNoYXBlLnROW2ddO2lmKHA9PT12b2lkIDApe2xldCB3PUdlby5ybltnXTt0eXBlb2Ygdz09XCJzdHJpbmdcIiYmKHc9R2VvLnJuW3ddKSxVLnJ0KHcpPyhwPXcobnVsbCwxMDAsMTAwKSxTaGFwZS50TltnXT1wKTpVLm4oXCJVbnN1cHBvcnRlZCBGaWd1cmU6IFwiK2cpfXI9cC5ib3VuZHN9bGV0IGw9ci53aWR0aCxoPXIuaGVpZ2h0LGY9ci53aWR0aCxhPXIuaGVpZ2h0O3N3aXRjaCh0aGlzLnFzKCEwKSl7Y2FzZSAwOmU9MCxzPTA7YnJlYWs7Y2FzZSAyOmY9TWF0aC5tYXgodC1vLDApLGE9TWF0aC5tYXgoaS1vLDApO2JyZWFrO2Nhc2UgNTpmPU1hdGgubWF4KHQtbywwKSxzPTA7YnJlYWs7Y2FzZSA0OmU9MCxhPU1hdGgubWF4KGktbywwKTticmVha31pc0Zpbml0ZShuLndpZHRoKSYmKGY9bi53aWR0aCksaXNGaW5pdGUobi5oZWlnaHQpJiYoYT1uLmhlaWdodCk7Y29uc3QgdT10aGlzLm1heFNpemUsZD10aGlzLm1pblNpemU7ZT1NYXRoLm1heChlLW8sZC53aWR0aCkscz1NYXRoLm1heChzLW8sZC5oZWlnaHQpLGY9TWF0aC5taW4odS53aWR0aCxmKSxhPU1hdGgubWluKHUuaGVpZ2h0LGEpLGY9aXNGaW5pdGUoZik/TWF0aC5tYXgoZSxmKTpNYXRoLm1heChsLGUpLGE9aXNGaW5pdGUoYSk/TWF0aC5tYXgocyxhKTpNYXRoLm1heChoLHMpO2NvbnN0IG09dGhpcy5wTSgpO3N3aXRjaChtKXtjYXNlIDA6YnJlYWs7Y2FzZSAyOmw9ZixoPWE7YnJlYWs7Y2FzZSA2OntsZXQgZz1NYXRoLm1pbihmL2wsYS9oKTtpc0Zpbml0ZShnKXx8KGc9MSksbD1sKmcsaD1oKmc7YnJlYWt9ZGVmYXVsdDpVLm4obStcIiBpcyBub3QgYSB2YWxpZCBnZW9tZXRyeVN0cmV0Y2guXCIpfWlmKHRoaXMuQ3MhPT1udWxsKXtsPT09MCYmKGw9LjAwMSksaD09PTAmJihoPS4wMDEpO2NvbnN0IHA9KHRoaXMuQ3MhPT1udWxsP3RoaXMuQ3M6dGhpcy5mdCkueUYobCxoKTtEZWJ1ZyYmcC5wKCksdGhpcy5mdD1wfWVsc2UodGhpcy5mdD09PW51bGx8fCFHZW8uRyh0aGlzLmZ0LmdmLHQtbyl8fCFHZW8uRyh0aGlzLmZ0Lm1mLGktbykpJiYodGhpcy5mdD1TaGFwZS5qSSh0aGlzLGwsaCkpO3I9dGhpcy5mdC5ib3VuZHMsdD09PTEvMHx8aT09PTEvMD90aGlzLl9uKHIueC1vLzIsci55LW8vMix0PT09MCYmbD09PTA/MDpyLndpZHRoK28saT09PTAmJmg9PT0wPzA6ci5oZWlnaHQrbyk6dGhpcy5fbigtKG8vMiksLShvLzIpLGYrbyxhK28pLG4uaXNSZWFsKCk/KGY9bi53aWR0aCxhPW4uaGVpZ2h0LGY9TWF0aC5taW4odS53aWR0aCxmKSxhPU1hdGgubWluKHUuaGVpZ2h0LGEpLGY9TWF0aC5tYXgoZC53aWR0aCxmKSxhPU1hdGgubWF4KGQuaGVpZ2h0LGEpLHRoaXMucWkucygwLDAsZixhKSk6dGhpcy5xaS5jKHIpfXBNKCl7Y29uc3QgdD10aGlzLmdlb21ldHJ5U3RyZXRjaDtyZXR1cm4gdGhpcy5DcyE9PW51bGw/dD09PTE/Mjp0OnQ9PT0xP1NoYXBlLnROW3RoaXMuZmlndXJlXS5kZWZhdWx0U3RyZXRjaDp0fXloKHQsaSxlLHMpe3RoaXMuY29tbW9uQXJyYW5nZSh0LGksZSxzKX1nZXROZWFyZXN0SW50ZXJzZWN0aW9uUG9pbnQodCxpLGUpe3JldHVybiB0aGlzLmVjKHQueCx0LnksaS54LGkueSxlKX1lYyh0LGksZSxzLG4pe2NvbnN0IG89dGhpcy5GLHI9MS8oby5tMTEqby5tMjItby5tMTIqby5tMjEpLGw9by5tMjIqcixoPS1vLm0xMipyLGY9LW8ubTIxKnIsYT1vLm0xMSpyLGM9ciooby5tMjEqby5keS1vLm0yMipvLmR4KSx1PXIqKG8ubTEyKm8uZHgtby5tMTEqby5keSksZD10KmwraSpmK2MsbT10KmgraSphK3UsZz1lKmwrcypmK2MscD1lKmgrcyphK3Usdz10aGlzLnFvLzI7bGV0IHg9dGhpcy5mdDt4PT09bnVsbCYmKHRoaXMuZHQoMS8wLDEvMCkseD10aGlzLmZ0KTtjb25zdCBrPXguYm91bmRzO2xldCBiPSExO2lmKHgudHlwZT09PTEpaWYodGhpcy5zdHJva2VXaWR0aDw9MS41KWI9R2VvLlluKHguc3RhcnRYLHguc3RhcnRZLHguZW5kWCx4LmVuZFksZCxtLGcscCxuKTtlbHNle2xldCBTPTAsTT0wO2lmKHguc3RhcnRYPT09eC5lbmRYKVM9dyxNPTA7ZWxzZXtjb25zdCBUPSh4LmVuZFkteC5zdGFydFkpLyh4LmVuZFgteC5zdGFydFgpO009dy9NYXRoLnNxcnQoMStUKlQpLFM9TSpUfWNvbnN0IEE9VS5sdCgpO2xldCBDPW5ldyBQb2ludDtHZW8uWW4oeC5zdGFydFgrUyx4LnN0YXJ0WStNLHguZW5kWCtTLHguZW5kWStNLGQsbSxnLHAsQykmJkEucHVzaChDKSxDPW5ldyBQb2ludCxHZW8uWW4oeC5zdGFydFgtUyx4LnN0YXJ0WS1NLHguZW5kWC1TLHguZW5kWS1NLGQsbSxnLHAsQykmJkEucHVzaChDKSxDPW5ldyBQb2ludCxHZW8uWW4oeC5zdGFydFgrUyx4LnN0YXJ0WStNLHguc3RhcnRYLVMseC5zdGFydFktTSxkLG0sZyxwLEMpJiZBLnB1c2goQyksQz1uZXcgUG9pbnQsR2VvLlluKHguZW5kWCtTLHguZW5kWStNLHguZW5kWC1TLHguZW5kWS1NLGQsbSxnLHAsQykmJkEucHVzaChDKTtjb25zdCBQPUEubGVuZ3RoO2lmKFA9PT0wKXJldHVybiBVLnR0KEEpLCExO2I9ITA7bGV0IE49MS8wO2ZvcihsZXQgVD0wO1Q8UDtUKyspe2NvbnN0IEw9QVtUXSxEPShMLngtZCkqKjIrKEwueS1tKSoqMjtEPE4mJihOPUQsbi54PUwueCxuLnk9TC55KX1VLnR0KEEpfWVsc2UgaWYoeC50eXBlPT09MiliPUdlby5ibChrLngtdyxrLnktdyxrLngray53aWR0aCt3LGsueStrLmhlaWdodCt3LGQsbSxnLHAsbik7ZWxzZSBpZih4LnR5cGU9PT0zKXtjb25zdCBTPVJlY3QuSyhrLngsay55LGsud2lkdGgsay5oZWlnaHQpLmluZmxhdGUodyx3KTtiPXRoaXMudkkoUyxkLG0sZyxwLG4pLFJlY3QubyhTKX1lbHNlIGlmKHgudHlwZT09PTQpe2xldCBTPTAsTT0wLEE9MCxDPTA7Y29uc3QgUD1Qb2ludC5hKCk7bGV0IE49Zy1kLFQ9cC1tLEw9TipOK1QqVCxEPWQsRj1tO2lmKEw+MCYmay5jb250YWlucyhELEYpJiYoUC54PUQsUC55PUYsdGhpcy5jb250YWluc1BvaW50KFApKSlmb3IoTiE9PTAmJk1hdGguYWJzKE4pPC41PyhUKj0uNS9OLE49LjUpOlQhPT0wJiZNYXRoLmFicyhUKTwuNSYmKE4qPS41L1QsVD0uNSksRC09TixGLT1UO2suY29udGFpbnMoRCxGKTspRC09TixGLT1UO2NvbnN0IEk9LjY7bi54PWcsbi55PXA7Zm9yKGxldCBLPTA7Szx4LmZpZ3VyZXMuY291bnQ7SysrKXtjb25zdCBCPXguZmlndXJlcy5oW0tdLHo9Qi5pc0ZpbGxlZD9EOmQsVj1CLmlzRmlsbGVkP0Y6bSxIPUIuc2VnbWVudHM7Uz1CLnN0YXJ0WCxNPUIuc3RhcnRZO2xldCBXPVMsaj1NO2ZvcihsZXQgJD0wOyQ8SC5jb3VudDskKyspe2NvbnN0IFg9SC5oWyRdLEo9WC50eXBlO0E9WC5lbmRYLEM9WC5lbmRZO2xldCB2PSExO3N3aXRjaChKKXtjYXNlIDE6Vz1BLGo9QzticmVhaztjYXNlIDI6dj10aGlzLnBiKFMsTSxBLEMseixWLGcscCxQKTticmVhaztjYXNlIDM6e3Y9R2VvLlVnKFMsTSxYLnBvaW50MVgsWC5wb2ludDFZLFgucG9pbnQyWCxYLnBvaW50MlksQSxDLHosVixnLHAsSSxQKTticmVha31jYXNlIDQ6e3Y9R2VvLlVnKFMsTSxTKzIvMyooWC5wb2ludDFYLVMpLE0rMi8zKihYLnBvaW50MVktTSksQSsyLzMqKFgucG9pbnQxWC1BKSxDKzIvMyooWC5wb2ludDFZLUMpLEEsQyx6LFYsZyxwLEksUCk7YnJlYWt9Y2FzZSA1OmNhc2UgNjp7Y29uc3QgXz1YLnR5cGU9PT01P1guQ28oQik6WC5IaChCLFMsTSksRz1fLmxlbmd0aDtpZihHPT09MCl7dj10aGlzLnBiKFMsTSxYLnR5cGU9PT01P1guY2VudGVyWDpYLmVuZFgsWC50eXBlPT09NT9YLmNlbnRlclk6WC5lbmRZLHosVixnLHAsUCk7YnJlYWt9bGV0IEU9bnVsbDtmb3IobGV0IHE9MDtxPEc7cSsrKXtpZihFPV9bcV0scT09PTAmJnRoaXMucGIoUyxNLEVbMF0sRVsxXSx6LFYsZyxwLFApKXtjb25zdCBaPXRoaXMueWIoeixWLFAsTCxuKTtaPEwmJihMPVosYj0hMCl9aWYoR2VvLlVnKEVbMF0sRVsxXSxFWzJdLEVbM10sRVs0XSxFWzVdLEVbNl0sRVs3XSx6LFYsZyxwLEksUCkpe2NvbnN0IFo9dGhpcy55Yih6LFYsUCxMLG4pO1o8TCYmKEw9WixiPSEwKX19QT1FWzZdLEM9RVs3XTticmVha31kZWZhdWx0OlUubihcIlVua25vd24gU2VnbWVudCB0eXBlOiBcIitKKX1pZihTPUEsTT1DLHYpe2NvbnN0IF89dGhpcy55Yih6LFYsUCxMLG4pO188TCYmKEw9XyxiPSEwKX1pZihYLmlzQ2xvc2VkJiYoQT1XLEM9aix0aGlzLnBiKFMsTSxBLEMseixWLGcscCxQKSkpe2NvbnN0IF89dGhpcy55Yih6LFYsUCxMLG4pO188TCYmKEw9XyxiPSEwKX19fWxldCBSPWUtdCxPPXMtaTtjb25zdCBZPU1hdGguc3FydChSKlIrTypPKTtZIT09MCYmKFIvPVksTy89WSksbi54LT1SKncsbi55LT1PKncsUG9pbnQubyhQKX1lbHNlIFUubihcIlVua25vd24gR2VvbWV0cnkgdHlwZTogXCIreC50eXBlKTtyZXR1cm4gYj8odGhpcy5GLmt0KG4pLCEwKTohMX15Yih0LGksZSxzLG4pe2NvbnN0IG89ZS54LXQscj1lLnktaSxsPW8qbytyKnI7cmV0dXJuIGw8cz8obi54PWUueCxuLnk9ZS55LGwpOnN9cGIodCxpLGUscyxuLG8scixsLGgpe2lmKEdlby5HKHQsZSkmJkdlby5HKGkscyl8fEdlby5HKG4scikmJkdlby5HKG8sbCkpcmV0dXJuITE7bGV0IGY9ITE7Y29uc3QgYT0obi1yKSooaS1zKS0oby1sKSoodC1lKTtpZihhPT09MClyZXR1cm4hMTtpZihoLng9KChuKmwtbypyKSoodC1lKS0obi1yKSoodCpzLWkqZSkpL2EsaC55PSgobipsLW8qcikqKGktcyktKG8tbCkqKHQqcy1pKmUpKS9hLCh0PmU/dC1lOmUtdCk8KGk+cz9pLXM6cy1pKSl7Y29uc3QgYz1pPHM/aTpzLHU9aTxzP3M6aTsoaC55PmN8fEdlby5HKGgueSxjKSkmJihoLnk8dXx8R2VvLkcoaC55LHUpKSYmKGY9ITApfWVsc2V7Y29uc3QgYz10PGU/dDplLHU9dDxlP2U6dDsoaC54PmN8fEdlby5HKGgueCxjKSkmJihoLng8dXx8R2VvLkcoaC54LHUpKSYmKGY9ITApfXJldHVybiBmfUpJKHQsaSxlKXtyZXR1cm4gdGhpcy5waWNrYWJsZT09PSExPyExOihlLnVmKHRoaXMuRiksaT90aGlzLiRJKHQsZSk6dGhpcy5jb250YWluZWRJblJlY3QodCxlKSl9Y29udGFpbmVkSW5SZWN0KHQsaSl7aWYoaT09PXZvaWQgMClyZXR1cm4gdC5jb250YWluc1JlY3QodGhpcy5hY3R1YWxCb3VuZHMpO2xldCBlPXRoaXMuZnQ7ZT09PW51bGwmJih0aGlzLmR0KDEvMCwxLzApLGU9dGhpcy5mdCk7Y29uc3Qgcz1lLmJvdW5kcyxuPXRoaXMuc3Ryb2tlV2lkdGgvMjtsZXQgbz0hMTtjb25zdCByPVBvaW50LmEoKTtyZXR1cm4gci5zKHMueC1uLHMueS1uKSx0LmNvbnRhaW5zUG9pbnQoaS5rdChyKSkmJihyLnMocy54LW4scy5ib3R0b20rbiksdC5jb250YWluc1BvaW50KGkua3QocikpJiYoci5zKHMucmlnaHQrbixzLmJvdHRvbStuKSx0LmNvbnRhaW5zUG9pbnQoaS5rdChyKSkmJihyLnMocy5yaWdodCtuLHMueS1uKSx0LmNvbnRhaW5zUG9pbnQoaS5rdChyKSkmJihvPSEwKSkpKSxQb2ludC5vKHIpLG99aW50ZXJzZWN0c1JlY3QodCxpKXtpZih0aGlzLmNvbnRhaW5lZEluUmVjdCh0LGkpfHxpPT09dm9pZCAwJiYoaT10aGlzLkYsdC5jb250YWluc1JlY3QodGhpcy5hY3R1YWxCb3VuZHMpKSlyZXR1cm4hMDtjb25zdCBlPVRyYW5zZm9ybS5hKCk7ZS5zZXQoaSksZS5MdygpO2NvbnN0IHM9dC5sZWZ0LG49dC5yaWdodCxvPXQudG9wLHI9dC5ib3R0b20sbD1Qb2ludC5hKCk7aWYobC5zKHMsbyksZS5rdChsKSx0aGlzLnBoKGwsITApKXJldHVybiBQb2ludC5vKGwpLCEwO2lmKGwucyhuLG8pLGUua3QobCksdGhpcy5waChsLCEwKSlyZXR1cm4gUG9pbnQubyhsKSwhMDtpZihsLnMocyxyKSxlLmt0KGwpLHRoaXMucGgobCwhMCkpcmV0dXJuIFBvaW50Lm8obCksITA7aWYobC5zKG4sciksZS5rdChsKSx0aGlzLnBoKGwsITApKXJldHVybiBQb2ludC5vKGwpLCEwO2NvbnN0IGg9UG9pbnQuYSgpLGY9UG9pbnQuYSgpO2Uuc2V0KGkpLGUuREModGhpcy5GKSxlLkx3KCksaC54PW4saC55PW8saC5GKGUpLGwueD1zLGwueT1vLGwuRihlKTtsZXQgYT0hMTtyZXR1cm4gdGhpcy56YShsLGgsZik/YT0hMDoobC54PW4sbC55PXIsbC5GKGUpLHRoaXMuemEobCxoLGYpP2E9ITA6KGgueD1zLGgueT1yLGguRihlKSx0aGlzLnphKGwsaCxmKT9hPSEwOihsLng9cyxsLnk9byxsLkYoZSksdGhpcy56YShsLGgsZikmJihhPSEwKSkpKSxQb2ludC5vKGwpLFRyYW5zZm9ybS5vKGUpLFBvaW50Lm8oaCksUG9pbnQubyhmKSxhfXphKHQsaSxlKXtpZighdGhpcy5nZXROZWFyZXN0SW50ZXJzZWN0aW9uUG9pbnQodCxpLGUpKXJldHVybiExO2NvbnN0IHM9dC54LG49dC55LG89aS54LHI9aS55LGw9ZS54LGg9ZS55O2lmKHM9PT1vKXtsZXQgZj0wLGE9MDtyZXR1cm4gbjxyPyhmPW4sYT1yKTooZj1yLGE9biksaD49ZiYmaDw9YX1lbHNle2xldCBmPTAsYT0wO3JldHVybiBzPG8/KGY9cyxhPW8pOihmPW8sYT1zKSxsPj1mJiZsPD1hfX0kSSh0LGkpe2lmKHRoaXMuY29udGFpbmVkSW5SZWN0KHQsaSl8fGk9PT12b2lkIDAmJihpPXRoaXMuRix0LmNvbnRhaW5zUmVjdCh0aGlzLmFjdHVhbEJvdW5kcykpKXJldHVybiEwO2NvbnN0IGU9dC5sZWZ0LHM9dC5yaWdodCxuPXQudG9wLG89dC5ib3R0b20scj1Qb2ludC5hKCksbD1Qb2ludC5hKCksaD1Qb2ludC5hKCksZj1UcmFuc2Zvcm0uYSgpO2Yuc2V0KGkpLGYuREModGhpcy5GKSxmLkx3KCksbC54PXMsbC55PW4sbC5GKGYpLHIueD1lLHIueT1uLHIuRihmKTtsZXQgYT0hMTtyZXR1cm4gdGhpcy56YShyLGwsaCk/YT0hMDooci54PXMsci55PW8sci5GKGYpLHRoaXMuemEocixsLGgpP2E9ITA6KGwueD1lLGwueT1vLGwuRihmKSx0aGlzLnphKHIsbCxoKT9hPSEwOihyLng9ZSxyLnk9bixyLkYoZiksdGhpcy56YShyLGwsaCkmJihhPSEwKSkpKSxUcmFuc2Zvcm0ubyhmKSxQb2ludC5vKHIpLFBvaW50Lm8obCksUG9pbnQubyhoKSxhfU5MKHQsaSxlKXtpZihlJiZ0aGlzLmZpbGwhPT1udWxsJiZ0aGlzLnBoKHQsITApKXJldHVybiEwO2xldCBzPXQuZGlzdGFuY2VTcXVhcmVkUG9pbnQoaSk7Y29uc3Qgbj1zO3RoaXMuc3Ryb2tlV2lkdGg+MS41JiYocz10aGlzLnN0cm9rZVdpZHRoLzIrTWF0aC5zcXJ0KHMpLHMqPXMpO2xldCBvPXRoaXMuZnQ7aWYobz09PW51bGwmJih0aGlzLmR0KDEvMCwxLzApLG89dGhpcy5mdCxvPT09bnVsbCkpcmV0dXJuITE7aWYoIWUpe2NvbnN0IGM9by5ib3VuZHMsdT1jLngsZD1jLnksbT1jLngrYy53aWR0aCxnPWMueStjLmhlaWdodDtpZihQb2ludC5kaXN0YW5jZVNxdWFyZWQodC54LHQueSx1LGQpPD1zJiZQb2ludC5kaXN0YW5jZVNxdWFyZWQodC54LHQueSxtLGQpPD1zJiZQb2ludC5kaXN0YW5jZVNxdWFyZWQodC54LHQueSx1LGcpPD1zJiZQb2ludC5kaXN0YW5jZVNxdWFyZWQodC54LHQueSxtLGcpPD1zKXJldHVybiEwfWZ1bmN0aW9uIHIoYyx1KXtjb25zdCBkPWMubGVuZ3RoO2ZvcihsZXQgbT0wO208ZDttKz0yKWlmKHUuZGlzdGFuY2VTcXVhcmVkKGNbbV0sY1ttKzFdKT5zKXJldHVybiEwO3JldHVybiExfWNvbnN0IGw9by5zdGFydFgsaD1vLnN0YXJ0WSxmPW8uZW5kWCxhPW8uZW5kWTtpZihvLnR5cGU9PT0xKXtjb25zdCBjPVBvaW50LmRpc3RhbmNlTGluZVNlZ21lbnRTcXVhcmVkKHQueCx0LnksbCxoLGYsYSksdT0oZi1sKSoodC54LWwpKyhhLWgpKih0LnktaCksZD0obC1mKSoodC54LWYpKyhoLWEpKih0LnktYSksbT11Pj0wJiZkPj0wP3M6bjtyZXR1cm4gYzw9bX1lbHNlIGlmKG8udHlwZT09PTIpe2xldCBjPSExO3JldHVybiBlJiYoYz1Qb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZCh0LngsdC55LGwsaCxsLGEpPD1zfHxQb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZCh0LngsdC55LGwsaCxmLGgpPD1zfHxQb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZCh0LngsdC55LGYsaCxmLGEpPD1zfHxQb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZCh0LngsdC55LGwsYSxmLGEpPD1zKSxjfWVsc2UgaWYoby50eXBlPT09Myl7Y29uc3QgYz0obCtmKS8yLHU9KGgrYSkvMixkPXQueC1jLG09dC55LXUsZz1NYXRoLmFicyhmLWwpLzIscD1NYXRoLmFicyhhLWgpLzI7aWYoZz09PTB8fHA9PT0wKXJldHVybiBQb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZCh0LngsdC55LGwsaCxmLGEpPD1zO2lmKGUpe2NvbnN0IHc9R2VvLmhGKGcscCxkLG0pO3JldHVybiB3Knc8PXN9ZWxzZSByZXR1cm4hKFBvaW50LmRpc3RhbmNlU3F1YXJlZChkLG0sLWcsMCk+PXN8fFBvaW50LmRpc3RhbmNlU3F1YXJlZChkLG0sMCwtcCk+PXN8fFBvaW50LmRpc3RhbmNlU3F1YXJlZChkLG0sMCxwKT49c3x8UG9pbnQuZGlzdGFuY2VTcXVhcmVkKGQsbSxnLDApPj1zKX1lbHNlIGlmKG8udHlwZT09PTQpe2NvbnN0IGM9by5ib3VuZHMsdT1jLngsZD1jLnksbT1jLngrYy53aWR0aCxnPWMueStjLmhlaWdodDtpZih0Lng+bSYmdC54PHUmJnQueT5nJiZ0Lnk8ZCYmUG9pbnQuZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQodC54LHQueSx1LGQsdSxnKT5zJiZQb2ludC5kaXN0YW5jZUxpbmVTZWdtZW50U3F1YXJlZCh0LngsdC55LHUsZCxtLGQpPnMmJlBvaW50LmRpc3RhbmNlTGluZVNlZ21lbnRTcXVhcmVkKHQueCx0LnksbSxnLHUsZyk+cyYmUG9pbnQuZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQodC54LHQueSxtLGcsbSxkKT5zKXJldHVybiExO2NvbnN0IHA9TWF0aC5zcXJ0KHMpO2lmKGUpe2lmKHRoaXMuZmlsbD09PW51bGw/by5LQyh0LngsdC55LHApOm8uaVModCxwLCEwLCExKSlyZXR1cm4hMH1lbHNle2NvbnN0IHc9by5maWd1cmVzO2ZvcihsZXQgeD0wO3g8dy5jb3VudDt4Kyspe2NvbnN0IGs9dy5oW3hdO2xldCBiPWsuc3RhcnRYLFM9ay5zdGFydFk7aWYodC5kaXN0YW5jZVNxdWFyZWQoYixTKT5zKXJldHVybiExO2NvbnN0IE09ay5zZWdtZW50cy5oLEE9TS5sZW5ndGg7Zm9yKGxldCBDPTA7QzxBO0MrKyl7Y29uc3QgUD1NW0NdO3N3aXRjaChQLnR5cGUpe2Nhc2UgMTpjYXNlIDI6aWYoYj1QLmVuZFgsUz1QLmVuZFksdC5kaXN0YW5jZVNxdWFyZWQoYixTKT5zKXJldHVybiExO2JyZWFrO2Nhc2UgMzp7Y29uc3QgTj1VLmx0KCk7R2VvLlhuKGIsUyxQLnBvaW50MVgsUC5wb2ludDFZLFAucG9pbnQyWCxQLnBvaW50MlksUC5lbmRYLFAuZW5kWSwuOCxOKTtjb25zdCBUPXIoTix0KTtpZihVLnR0KE4pLFR8fChiPVAuZW5kWCxTPVAuZW5kWSx0LmRpc3RhbmNlU3F1YXJlZChiLFMpPnMpKXJldHVybiExO2JyZWFrfWNhc2UgNDp7Y29uc3QgTj1VLmx0KCk7R2VvLktnKGIsUyxQLnBvaW50MVgsUC5wb2ludDFZLFAuZW5kWCxQLmVuZFksLjgsTik7Y29uc3QgVD1yKE4sdCk7aWYoVS50dChOKSxUfHwoYj1QLmVuZFgsUz1QLmVuZFksdC5kaXN0YW5jZVNxdWFyZWQoYixTKT5zKSlyZXR1cm4hMTticmVha31jYXNlIDU6Y2FzZSA2Ontjb25zdCBOPVAudHlwZT09PTU/UC5DbyhrKTpQLkhoKGssYixTKSxUPU4ubGVuZ3RoO2lmKFQ9PT0wKXtpZihiPVAudHlwZT09PTU/UC5jZW50ZXJYOlAuZW5kWCxTPVAudHlwZT09PTU/UC5jZW50ZXJZOlAuZW5kWSx0LmRpc3RhbmNlU3F1YXJlZChiLFMpPnMpcmV0dXJuITE7YnJlYWt9bGV0IEw9bnVsbDtjb25zdCBEPVUubHQoKTtmb3IobGV0IEY9MDtGPFQ7RisrKWlmKEw9TltGXSxELmxlbmd0aD0wLEdlby5YbihMWzBdLExbMV0sTFsyXSxMWzNdLExbNF0sTFs1XSxMWzZdLExbN10sLjgsRCkscihELHQpKXJldHVybiBVLnR0KEQpLCExO1UudHQoRCksTCE9PW51bGwmJihiPUxbNl0sUz1MWzddKTticmVha31kZWZhdWx0OlUubihcIlVua25vd24gU2VnbWVudCB0eXBlOiBcIitQLnR5cGUpfX19cmV0dXJuITB9fXJldHVybiExfXZJKHQsaSxlLHMsbixvKXtpZih0LndpZHRoPT09MClyZXR1cm4gR2VvLlluKHQueCx0LnksdC54LHQueSt0LmhlaWdodCxpLGUscyxuLG8pO2lmKHQuaGVpZ2h0PT09MClyZXR1cm4gR2VvLlluKHQueCx0LnksdC54K3Qud2lkdGgsdC55LGksZSxzLG4sbyk7e2NvbnN0IHI9dC53aWR0aC8yLGw9dC5oZWlnaHQvMixoPXQueCtyLGY9dC55K2w7bGV0IGE9OTk5OTtpZihpIT09cyYmKGE9KGUtbikvKGktcykpLE1hdGguYWJzKGEpPDk5OTkpe2NvbnN0IGM9ZS1mLWEqKGktaCk7aWYocipyKihhKmEpK2wqbC1jKmM8MClyZXR1cm4gby54PU5hTixvLnk9TmFOLCExO2NvbnN0IHU9TWF0aC5zcXJ0KHIqciooYSphKStsKmwtYypjKSxkPSgtKHIqciphKmMpK3IqbCp1KS8obCpsK3IqciooYSphKSkraCxtPSgtKHIqciphKmMpLXIqbCp1KS8obCpsK3IqciooYSphKSkraCxnPWEqKGQtaCkrYytmLHA9YSoobS1oKStjK2Ysdz1NYXRoLmFicygoaS1kKSoqMikrTWF0aC5hYnMoKGUtZykqKjIpLHg9TWF0aC5hYnMoKGktbSkqKjIpK01hdGguYWJzKChlLXApKioyKTt3PHg/KG8ueD1kLG8ueT1nKTooby54PW0sby55PXApfWVsc2V7Y29uc3QgYz1sKmwsdT1yKnIsZD1pLWgsbT1jLWMvdSooZCpkKTtpZihtPDApcmV0dXJuIG8ueD1OYU4sby55PU5hTiwhMTtjb25zdCBnPU1hdGguc3FydChtKSxwPWYrZyx3PWYtZyx4PU1hdGguYWJzKHAtZSksaz1NYXRoLmFicyh3LWUpO3g8az8oby54PWksby55PXApOihvLng9aSxvLnk9dyl9cmV0dXJuITB9fVhJKCl7cmV0dXJuIHRoaXMucW8vMip0aGlzLnN0cm9rZU1pdGVyTGltaXQqdGhpcy5nZXREb2N1bWVudFNjYWxlKCl9Z2V0IGdlb21ldHJ5KCl7cmV0dXJuIHRoaXMuZnQhPT1udWxsP3RoaXMuZnQ6dGhpcy5Dc31zZXQgZ2VvbWV0cnkodCl7Y29uc3QgaT10aGlzLmZ0LGU9dGhpcy5DcztpZihpPT09dClyZXR1cm47dCE9PW51bGw/KERlYnVnJiZVLmUodCxHZW9tZXRyeSxTaGFwZSxcImdlb21ldHJ5XCIpLHRoaXMuZnQ9dC5wKCksdGhpcy5Dcz10aGlzLmZ0KToodGhpcy5mdD1udWxsLHRoaXMuQ3M9bnVsbCk7Y29uc3Qgcz10aGlzLnBhcnQ7aWYocyE9PW51bGwmJnMucGMoKSx0aGlzLnUoKSx0aGlzLnQoXCJnZW9tZXRyeVwiLGl8fGUsdCksdGhpcy5pYygpKXtjb25zdCBuPXRoaXMucGFydDtuIT09bnVsbCYmdGhpcy5BYShuLFwiZ2VvbWV0cnlTdHJpbmdcIil9fWdldCBnZW9tZXRyeVN0cmluZygpe3JldHVybiB0aGlzLmdlb21ldHJ5PT09bnVsbD9cIlwiOnRoaXMuZ2VvbWV0cnkudG9TdHJpbmcoKX1zZXQgZ2VvbWV0cnlTdHJpbmcodCl7Y29uc3QgaT1HZW9tZXRyeS5wYXJzZSh0KSxlPWkubm9ybWFsaXplKCk7dGhpcy5nZW9tZXRyeT1pO2NvbnN0IHM9UG9pbnQuSygtZS54LC1lLnkpO3RoaXMucG9zaXRpb249cyxQb2ludC5vKHMpfWdldCBpc0dlb21ldHJ5UG9zaXRpb25lZCgpe3JldHVybih0aGlzLmwmMTA0ODU3NikhPT0wfXNldCBpc0dlb21ldHJ5UG9zaXRpb25lZCh0KXtjb25zdCBpPSh0aGlzLmwmMTA0ODU3NikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFNoYXBlLFwiaXNHZW9tZXRyeVBvc2l0aW9uZWRcIiksdGhpcy5sPXRoaXMubF4xMDQ4NTc2LHRoaXMudSgpLHRoaXMudChcImlzR2VvbWV0cnlQb3NpdGlvbmVkXCIsaSx0KSl9cmUoKXt0aGlzLmZ0PW51bGx9Z2V0IGZpbGwoKXtyZXR1cm4gdGhpcy5CYX1zZXQgZmlsbCh0KXtjb25zdCBpPXRoaXMuQmE7aSE9PXQmJih0IT09bnVsbCYmQnJ1c2gucmQodCxcIlNoYXBlLmZpbGxcIiksdCBpbnN0YW5jZW9mIEJydXNoJiZ0LnAoKSx0aGlzLkJhPXQsdGhpcy5MKCksdGhpcy50KFwiZmlsbFwiLGksdCkpfWdldCBzdHJva2UoKXtyZXR1cm4gdGhpcy4kaX1zZXQgc3Ryb2tlKHQpe2NvbnN0IGk9dGhpcy4kaTtpIT09dCYmKHQhPT1udWxsJiZCcnVzaC5yZCh0LFwiU2hhcGUuc3Ryb2tlXCIpLHQgaW5zdGFuY2VvZiBCcnVzaCYmdC5wKCksdGhpcy4kaT10LHRoaXMuTCgpLHRoaXMudChcInN0cm9rZVwiLGksdCkpfWdldCBzdHJva2VXaWR0aCgpe3JldHVybiB0aGlzLnFvfXNldCBzdHJva2VXaWR0aCh0KXtjb25zdCBpPXRoaXMucW87aWYoaSE9PXQpaWYoRGVidWcmJlUucih0LFNoYXBlLFwic3Ryb2tlV2lkdGhcIiksdD49MCl7dGhpcy5xbz10LHRoaXMudSgpO2NvbnN0IGU9dGhpcy5wYXJ0O2UhPT1udWxsJiZlLnBjKCksdGhpcy50KFwic3Ryb2tlV2lkdGhcIixpLHQpfWVsc2UgVS5VKHQsXCJ2YWx1ZSA+PSAwXCIsU2hhcGUsXCJzdHJva2VXaWR0aDp2YWx1ZVwiKX1NMCgpe3JldHVybiB0aGlzLnFvfWdldCBzdHJva2VDYXAoKXtyZXR1cm4gdGhpcy4kdCE9PW51bGw/dGhpcy4kdC5icDpcImJ1dHRcIn1zZXQgc3Ryb2tlQ2FwKHQpe2NvbnN0IGk9dGhpcy5zdHJva2VDYXA7aSE9PXQmJih0eXBlb2YgdD09XCJzdHJpbmdcIiYmKHQ9PT1cImJ1dHRcInx8dD09PVwicm91bmRcInx8dD09PVwic3F1YXJlXCIpPyh0aGlzLlZhKCkuYnA9dCx0aGlzLkwoKSx0aGlzLnQoXCJzdHJva2VDYXBcIixpLHQpKTpVLlUodCwnXCJidXR0XCIsIFwicm91bmRcIiwgb3IgXCJzcXVhcmVcIicsU2hhcGUsXCJzdHJva2VDYXBcIikpfWdldCBzdHJva2VKb2luKCl7cmV0dXJuIHRoaXMuJHQhPT1udWxsP3RoaXMuJHQua3A6XCJtaXRlclwifXNldCBzdHJva2VKb2luKHQpe2NvbnN0IGk9dGhpcy5zdHJva2VKb2luO2khPT10JiYodHlwZW9mIHQ9PVwic3RyaW5nXCImJih0PT09XCJtaXRlclwifHx0PT09XCJiZXZlbFwifHx0PT09XCJyb3VuZFwiKT8odGhpcy5WYSgpLmtwPXQsdGhpcy5MKCksdGhpcy50KFwic3Ryb2tlSm9pblwiLGksdCkpOlUuVSh0LCdcIm1pdGVyXCIsIFwiYmV2ZWxcIiwgb3IgXCJyb3VuZFwiJyxTaGFwZSxcInN0cm9rZUpvaW5cIikpfWdldCBzdHJva2VNaXRlckxpbWl0KCl7cmV0dXJuIHRoaXMuJHQhPT1udWxsP3RoaXMuJHQuU3A6MTB9c2V0IHN0cm9rZU1pdGVyTGltaXQodCl7Y29uc3QgaT10aGlzLnN0cm9rZU1pdGVyTGltaXQ7aWYoaSE9PXQpaWYoRGVidWcmJlUucih0LFNoYXBlLFwic3Ryb2tlTWl0ZXJMaW1pdFwiKSx0Pj0xKXt0aGlzLlZhKCkuU3A9dCx0aGlzLkwoKTtjb25zdCBlPXRoaXMucGFydDtlIT09bnVsbCYmZS5wYygpLHRoaXMudChcInN0cm9rZU1pdGVyTGltaXRcIixpLHQpfWVsc2UgRGVidWcmJlUuVSh0LFwidmFsdWUgPj0gMVwiLFNoYXBlLFwic3Ryb2tlV2lkdGg6dmFsdWVcIil9Z2V0IHN0cm9rZURhc2hBcnJheSgpe3JldHVybiB0aGlzLktvfXNldCBzdHJva2VEYXNoQXJyYXkodCl7Y29uc3QgaT10aGlzLktvO2lmKGkhPT10KXtpZih0IT09bnVsbCYmIUFycmF5LmlzQXJyYXkodCkmJlUuUGkodCxcIkFycmF5XCIsU2hhcGUsXCJzdHJva2VEYXNoQXJyYXk6dmFsdWVcIiksdCE9PW51bGwpe2NvbnN0IGU9dC5sZW5ndGg7bGV0IHM9MDtmb3IobGV0IG49MDtuPGU7bisrKXtjb25zdCBvPXRbbl07KERlYnVnJiZ0eXBlb2YgbyE9XCJudW1iZXJcInx8IShvPj0wKXx8IWlzRmluaXRlKG8pKSYmVS5uKFwic3Ryb2tlRGFzaEFycmF5OnZhbHVlIFwiK28rXCIgYXQgaW5kZXggXCIrbitcIiBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIG9yIHplcm8uXCIpLHMrPW99aWYocz09PTApe2lmKGk9PT1udWxsKXJldHVybjt0PW51bGx9fXRoaXMuS289dCx0aGlzLkwoKSx0aGlzLnQoXCJzdHJva2VEYXNoQXJyYXlcIixpLHQpfX1nZXQgc3Ryb2tlRGFzaE9mZnNldCgpe3JldHVybiB0aGlzLiR0IT09bnVsbD90aGlzLiR0LmtoOjB9c2V0IHN0cm9rZURhc2hPZmZzZXQodCl7Y29uc3QgaT10aGlzLnN0cm9rZURhc2hPZmZzZXQ7aSE9PXQmJihEZWJ1ZyYmVS5yKHQsU2hhcGUsXCJzdHJva2VEYXNoT2Zmc2V0XCIpLHQ+PTAmJih0aGlzLlZhKCkua2g9dCx0aGlzLkwoKSx0aGlzLnQoXCJzdHJva2VEYXNoT2Zmc2V0XCIsaSx0KSkpfWdldCBmaWd1cmUoKXtyZXR1cm4gdGhpcy5rZH1zZXQgZmlndXJlKHQpe2NvbnN0IGk9dGhpcy5rZDtpZihpIT09dCl7RGVidWcmJlUuaSh0LFwic3RyaW5nXCIsU2hhcGUsXCJmaWd1cmVcIik7bGV0IGU9R2VvLnJuW3RdO2lmKFUucnQoZSk/ZT10OihlPUdlby5yblt0LnRvTG93ZXJDYXNlKCldLGV8fFUubihcIlVua25vd24gU2hhcGUuZmlndXJlOiBcIit0KSksaSE9PWUpe2NvbnN0IHM9dGhpcy5wYXJ0O3MhPT1udWxsJiZzLnBjKCksdGhpcy5rZD1lLHRoaXMuQ3M9bnVsbCx0aGlzLnJlKCksdGhpcy51KCksdGhpcy50KFwiZmlndXJlXCIsaSxlKX19fWdldCB0b0Fycm93KCl7cmV0dXJuIHRoaXMuWHQhPT1udWxsP3RoaXMuWHQuTXA6XCJOb25lXCJ9c2V0IHRvQXJyb3codCl7Y29uc3QgaT10aGlzLnRvQXJyb3c7aWYodD09PSEwP3Q9XCJTdGFuZGFyZFwiOnQ9PT0hMSYmKHQ9XCJcIiksaSE9PXQpe0RlYnVnJiZVLmkodCxcInN0cmluZ1wiLFNoYXBlLFwidG9BcnJvd1wiKTtjb25zdCBlPVNoYXBlLnRUKHQpO2U9PT1udWxsP1UubihcIlVua25vd24gU2hhcGUudG9BcnJvdzogXCIrdCk6aSE9PWUmJih0aGlzLlh0PT09bnVsbCYmKHRoaXMuWHQ9bmV3IExpbmtFbGVtZW50U2V0dGluZ3MpLHRoaXMuWHQuTXA9ZSx0aGlzLkNzPW51bGwsdGhpcy5yZSgpLHRoaXMudSgpLHRoaXMuaVQoZSksdGhpcy50KFwidG9BcnJvd1wiLGksZSkpfX1nZXQgZnJvbUFycm93KCl7cmV0dXJuIHRoaXMuWHQhPT1udWxsP3RoaXMuWHQuUHA6XCJOb25lXCJ9c2V0IGZyb21BcnJvdyh0KXtjb25zdCBpPXRoaXMuZnJvbUFycm93O2lmKHQ9PT0hMD90PVwiU3RhbmRhcmRcIjp0PT09ITEmJih0PVwiXCIpLGkhPT10KXtEZWJ1ZyYmVS5pKHQsXCJzdHJpbmdcIixTaGFwZSxcImZyb21BcnJvd1wiKTtjb25zdCBlPVNoYXBlLnRUKHQpO2U9PT1udWxsP1UubihcIlVua25vd24gU2hhcGUuZnJvbUFycm93OiBcIit0KTppIT09ZSYmKHRoaXMuWHQ9PT1udWxsJiYodGhpcy5YdD1uZXcgTGlua0VsZW1lbnRTZXR0aW5ncyksdGhpcy5YdC5QcD1lLHRoaXMuQ3M9bnVsbCx0aGlzLnJlKCksdGhpcy51KCksdGhpcy5pVChlKSx0aGlzLnQoXCJmcm9tQXJyb3dcIixpLGUpKX19aVQodCl7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaSE9PW51bGwmJmkudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZylyZXR1cm47dGhpcy5sSSgpO2NvbnN0IGU9U3BvdC5NaWRkbGVSaWdodDt0aGlzLnRvQXJyb3chPT1cIk5vbmVcIj8odGhpcy5zZWdtZW50SW5kZXg9LTEsdGhpcy5hbGlnbm1lbnRGb2N1cz1lKTp0aGlzLmZyb21BcnJvdyE9PVwiTm9uZVwiJiYodGhpcy5zZWdtZW50SW5kZXg9MCx0aGlzLmFsaWdubWVudEZvY3VzPW5ldyBTcG90KDEtZS54LGUueSkpfWdldCBzcG90MSgpe3JldHVybiB0aGlzLiR0IT09bnVsbD90aGlzLiR0LktuOlNwb3QuRGVmYXVsdH1zZXQgc3BvdDEodCl7Y29uc3QgaT10aGlzLnNwb3QxO2kuZXF1YWxzKHQpfHwoRGVidWcmJlUuZSh0LFNwb3QsU2hhcGUsXCJzcG90MVwiKSx0PXQuTigpLHRoaXMuVmEoKS5Lbj10LHRoaXMudSgpLHRoaXMudChcInNwb3QxXCIsaSx0KSl9Z2V0IHNwb3QyKCl7cmV0dXJuIHRoaXMuJHQhPT1udWxsP3RoaXMuJHQuVW46U3BvdC5EZWZhdWx0fXNldCBzcG90Mih0KXtjb25zdCBpPXRoaXMuc3BvdDI7aS5lcXVhbHModCl8fChEZWJ1ZyYmVS5lKHQsU3BvdCxTaGFwZSxcInNwb3QyXCIpLHQ9dC5OKCksdGhpcy5WYSgpLlVuPXQsdGhpcy51KCksdGhpcy50KFwic3BvdDJcIixpLHQpKX1nZXQgcGFyYW1ldGVyMSgpe3JldHVybiB0aGlzLlNkfXNldCBwYXJhbWV0ZXIxKHQpe2NvbnN0IGk9dGhpcy5TZDtpIT09dCYmKHRoaXMuU2Q9dCx0aGlzLnJlKCksdGhpcy51KCksdGhpcy50KFwicGFyYW1ldGVyMVwiLGksdCkpfWdldCBwYXJhbWV0ZXIyKCl7cmV0dXJuIHRoaXMuTWR9c2V0IHBhcmFtZXRlcjIodCl7Y29uc3QgaT10aGlzLk1kO2khPT10JiYodGhpcy5NZD10LHRoaXMucmUoKSx0aGlzLnUoKSx0aGlzLnQoXCJwYXJhbWV0ZXIyXCIsaSx0KSl9Z2V0IG5hdHVyYWxCb3VuZHMoKXtyZXR1cm4gdGhpcy5xaX1MSSgpe2NvbnN0IHQ9dGhpcy5kZXNpcmVkU2l6ZTtpZighdC5pc1JlYWwoKSYmdGhpcy5mdCE9PW51bGwpe2NvbnN0IGk9dGhpcy5mdC5ib3VuZHM7dGhpcy5xaS5jKGkpfWVsc2UgdGhpcy5xaS5zKDAsMCx0LndpZHRoLHQuaGVpZ2h0KX1nZXQgcGF0aFBhdHRlcm4oKXtyZXR1cm4gdGhpcy4kdCE9PW51bGw/dGhpcy4kdC5OcDpudWxsfXNldCBwYXRoUGF0dGVybih0KXtjb25zdCBpPXRoaXMucGF0aFBhdHRlcm47aSE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJlUuZSh0LEdyYXBoT2JqZWN0LFNoYXBlLFwicGF0aFBhdHRlcm5cIiksdGhpcy5WYSgpLk5wPXQsdGhpcy5MKCksdGhpcy50KFwicGF0aFBhdHRlcm5cIixpLHQpKX1nZXQgZ2VvbWV0cnlTdHJldGNoKCl7cmV0dXJuIHRoaXMuJHQhPT1udWxsP3RoaXMuJHQuQ3A6MX1zZXQgZ2VvbWV0cnlTdHJldGNoKHQpe2NvbnN0IGk9dGhpcy5nZW9tZXRyeVN0cmV0Y2g7aSE9PXQmJihVLmoodCxHZW9tZXRyeVN0cmV0Y2gsXCJHZW9tZXRyeVN0cmV0Y2hcIiksdGhpcy5WYSgpLkNwPXQsdGhpcy51KCksdGhpcy50KFwiZ2VvbWV0cnlTdHJldGNoXCIsaSx0KSl9Z2V0IGludGVydmFsKCl7cmV0dXJuIHRoaXMudiE9PW51bGw/dGhpcy52LndjOjF9c2V0IGludGVydmFsKHQpe2NvbnN0IGk9dGhpcy5pbnRlcnZhbDtpZihEZWJ1ZyYmVS5yKHQsU2hhcGUsXCJpbnRlcnZhbFwiKSx0PU1hdGgucm91bmQodCksaSE9PXQmJnQhPT0wJiZpc0Zpbml0ZSh0KSl7dGhpcy52PT09bnVsbCYmKHRoaXMudj1uZXcgR3JhZEVsZW1lbnRTZXR0aW5ncyksdGhpcy52LndjPXQ7Y29uc3QgZT10aGlzLmRpYWdyYW07ZSE9PW51bGwmJnRoaXMucGFuZWw9PT1lLmdyaWQmJmUubGgoKSx0aGlzLnUoKTtjb25zdCBzPXRoaXMucGFuZWw7cyE9PW51bGwmJihzLmhzPW51bGwpLHRoaXMudChcImludGVydmFsXCIsaSx0KX19Z2V0IGdyYWR1YXRlZFN0YXJ0KCl7cmV0dXJuIHRoaXMudiE9PW51bGw/dGhpcy52LnhjOjB9c2V0IGdyYWR1YXRlZFN0YXJ0KHQpe2NvbnN0IGk9dGhpcy5ncmFkdWF0ZWRTdGFydDtEZWJ1ZyYmVS5yKHQsU2hhcGUsXCJncmFkdWF0ZWRTdGFydFwiKSxpIT09dCYmKHQ8MD90PTA6dD4xJiYodD0xKSx0aGlzLnY9PT1udWxsJiYodGhpcy52PW5ldyBHcmFkRWxlbWVudFNldHRpbmdzKSx0aGlzLnYueGM9dCx0aGlzLnUoKSx0aGlzLnQoXCJncmFkdWF0ZWRTdGFydFwiLGksdCkpfWdldCBncmFkdWF0ZWRFbmQoKXtyZXR1cm4gdGhpcy52IT09bnVsbD90aGlzLnYuYmM6MX1zZXQgZ3JhZHVhdGVkRW5kKHQpe2NvbnN0IGk9dGhpcy5ncmFkdWF0ZWRFbmQ7RGVidWcmJlUucih0LFNoYXBlLFwiZ3JhZHVhdGVkRW5kXCIpLGkhPT10JiYodDwwP3Q9MDp0PjEmJih0PTEpLHRoaXMudj09PW51bGwmJih0aGlzLnY9bmV3IEdyYWRFbGVtZW50U2V0dGluZ3MpLHRoaXMudi5iYz10LHRoaXMudSgpLHRoaXMudChcImdyYWR1YXRlZEVuZFwiLGksdCkpfWdldCBncmFkdWF0ZWRTa2lwKCl7cmV0dXJuIHRoaXMudiE9PW51bGw/dGhpcy52LmtjOm51bGx9c2V0IGdyYWR1YXRlZFNraXAodCl7Y29uc3QgaT10aGlzLmdyYWR1YXRlZFNraXA7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsU2hhcGUsXCJncmFkdWF0ZWRTa2lwXCIpLHRoaXMudj09PW51bGwmJih0aGlzLnY9bmV3IEdyYWRFbGVtZW50U2V0dGluZ3MpLHRoaXMudi5rYz10LHRoaXMudSgpLHRoaXMudChcImdyYWR1YXRlZFNraXBcIixpLHQpKX1zdGF0aWMgakkodCxpLGUpe2xldCBuPW51bGw7aWYodC50b0Fycm93IT09XCJOb25lXCIpbj1TaGFwZS5iblt0LnRvQXJyb3ddO2Vsc2UgaWYodC5mcm9tQXJyb3chPT1cIk5vbmVcIiluPVNoYXBlLmJuW3QuZnJvbUFycm93XTtlbHNle2xldCBvPUdlby5yblt0LmZpZ3VyZV07dHlwZW9mIG89PVwic3RyaW5nXCImJihvPUdlby5ybltvXSksbz09PXZvaWQgMCYmVS5uKFwiVW5rbm93biBTaGFwZS5maWd1cmU6IFwiK3QuZmlndXJlKSxuPW8odCxpLGUpLG4uZ2Y9aSxuLm1mPWV9aWYobj09PW51bGwpe2NvbnN0IG89R2VvLnJuLlJlY3RhbmdsZTtVLnJ0KG8pJiYobj1vKHQsaSxlKSl9cmV0dXJuIERlYnVnJiYobi5ib3VuZHMud2lkdGg+aSsxZS01fHxuLmJvdW5kcy5oZWlnaHQ+ZSsxZS01KSYmVS5uKCdHZW9tZXRyeSBtYWRlIHdpdGggZmlndXJlIFwiJyt0LmZpZ3VyZSsnXCIgaGFzIGJvdW5kcyAnK24uYm91bmRzLnRvU3RyaW5nKCkrXCIgdGhhdCBhcmUgdG9vIGxhcmdlIGZvciB0aGUgZ2l2ZW4gc2l6ZSAoXCIraStcIixcIitlK1wiKS4gU2VlIGRvY3VtZW50YXRpb24gZm9yIFNoYXBlLmRlZmluZUZpZ3VyZUdlbmVyYXRvci5cIiksbn1zdGF0aWMgZ2V0RmlndXJlR2VuZXJhdG9ycygpe2NvbnN0IHQ9bmV3IEdNYXA7Zm9yKGNvbnN0IGkgaW4gR2VvLnJuKXtpZihpPT09aS50b0xvd2VyQ2FzZSgpKWNvbnRpbnVlO2NvbnN0IGU9R2VvLnJuW2ldO3Quc2V0KGksZSl9cmV0dXJuIHQucCgpLHR9c3RhdGljIGRlZmluZUZpZ3VyZUdlbmVyYXRvcih0LGkpe1UuaSh0LFwic3RyaW5nXCIsU2hhcGUsXCJkZWZpbmVGaWd1cmVHZW5lcmF0b3I6bmFtZVwiKSx0eXBlb2YgaT09XCJzdHJpbmdcIj9EZWJ1ZyYmKGk9PT1cIlwifHwhR2VvLnJuW2ldKSYmVS5uKFwiU2hhcGUuZGVmaW5lRmlndXJlR2VuZXJhdG9yIHN5bm9ueW0gbXVzdCBub3QgYmUgZW1wdHkgb3IgTm9uZSBvciBub3QgYSBkZWZpbmVkIGZpZ3VyZSBuYW1lOiBcIitpKTpVLlAoaSxTaGFwZSxcImRlZmluZUZpZ3VyZUdlbmVyYXRvcjpmdW5jXCIpO2NvbnN0IGU9dC50b0xvd2VyQ2FzZSgpO0RlYnVnJiYodD09PVwiXCJ8fHQ9PT1lKSYmVS5uKFwiU2hhcGUuZGVmaW5lRmlndXJlR2VuZXJhdG9yIG5hbWUgbXVzdCBub3QgYmUgZW1wdHkgb3IgYWxsLWxvd2VyLWNhc2U6IFwiK3QpO2NvbnN0IHM9R2VvLnJuO3NbdF09aSxzW2VdPXR9c3RhdGljIGlzRmlndXJlRGVmaW5lZCh0KXtyZXR1cm4gR2VvLnJuLmhhcyh0KX1zdGF0aWMgZ2V0QXJyb3doZWFkR2VvbWV0cmllcygpe2NvbnN0IHQ9bmV3IEdNYXA7Zm9yKGNvbnN0IGkgaW4gR2VvLnFnKWlmKFNoYXBlLmJuW2ldPT09dm9pZCAwKXtjb25zdCBlPUdlb21ldHJ5LnBhcnNlKEdlby5xZ1tpXSwhMSk7U2hhcGUuYm5baV09ZTtjb25zdCBzPWkudG9Mb3dlckNhc2UoKTtzIT09aSYmKFNoYXBlLmJuW3NdPWkpfWZvcihjb25zdCBpIGluIFNoYXBlLmJuKXtpZihpPT09aS50b0xvd2VyQ2FzZSgpKWNvbnRpbnVlO2NvbnN0IGU9U2hhcGUuYm5baV07ZSBpbnN0YW5jZW9mIEdlb21ldHJ5JiZ0LnNldChpLGUpfXJldHVybiB0LnAoKSx0fXN0YXRpYyBkZWZpbmVBcnJvd2hlYWRHZW9tZXRyeSh0LGkpe1UuaSh0LFwic3RyaW5nXCIsU2hhcGUsXCJkZWZpbmVBcnJvd2hlYWRHZW9tZXRyeTpuYW1lXCIpO2xldCBlPW51bGw7dHlwZW9mIGk9PVwic3RyaW5nXCI/KFUuaShpLFwic3RyaW5nXCIsU2hhcGUsXCJkZWZpbmVBcnJvd2hlYWRHZW9tZXRyeTpwYXRoc3RyXCIpLGU9R2VvbWV0cnkucGFyc2UoaSwhMSkpOihVLmUoaSxHZW9tZXRyeSxTaGFwZSxcImRlZmluZUFycm93aGVhZEdlb21ldHJ5OnBhdGhzdHJcIiksZT1pKTtjb25zdCBzPXQudG9Mb3dlckNhc2UoKTsoRGVidWcmJnQ9PT1cIlwifHxzPT09XCJub25lXCJ8fHQ9PT1zKSYmVS5uKFwiU2hhcGUuZGVmaW5lQXJyb3doZWFkR2VvbWV0cnkgbmFtZSBtdXN0IG5vdCBiZSBlbXB0eSBvciBOb25lIG9yIGFsbC1sb3dlci1jYXNlOiBcIit0KTtjb25zdCBuPVNoYXBlLmJuO25bdF09ZSxuW3NdPXR9c3RhdGljIGlzQXJyb3doZWFkRGVmaW5lZCh0KXtyZXR1cm4gU2hhcGUuYm4uaGFzKHQpfXN0YXRpYyBibj1uZXcgUHJvcGVydHlDb2xsZWN0aW9uO3N0YXRpYyB0Tj1uZXcgUHJvcGVydHlDb2xsZWN0aW9uO3N0YXRpYyB0VCh0KXtsZXQgaT1TaGFwZS5iblt0XTtpZihpPT09dm9pZCAwKXtjb25zdCBlPXQudG9Mb3dlckNhc2UoKTtpZihlPT09XCJub25lXCIpcmV0dXJuXCJOb25lXCI7aWYoaT1TaGFwZS5ibltlXSxpPT09dm9pZCAwKXtsZXQgcz1udWxsO2Zvcihjb25zdCBuIGluIEdlby5xZylpZihuLnRvTG93ZXJDYXNlKCk9PT1lKXtzPW47YnJlYWt9aWYocyE9PW51bGwpe2NvbnN0IG49R2VvbWV0cnkucGFyc2UoR2VvLnFnW3NdLCExKTtyZXR1cm4gU2hhcGUuYm5bc109bixlIT09cyYmKFNoYXBlLmJuW2VdPXMpLHN9fX1yZXR1cm4gdHlwZW9mIGk9PVwic3RyaW5nXCI/aTppIGluc3RhbmNlb2YgR2VvbWV0cnk/dDpudWxsfX1jbGFzcyBTaGFwZVRlbXBsYXRlU2V0dGluZ3N7bWk7YnA7a3A7U3A7a2g7TnA7Q3A7S247VW47Y29uc3RydWN0b3IoKXt0aGlzLm1pPSExLHRoaXMuYnA9XCJidXR0XCIsdGhpcy5rcD1cIm1pdGVyXCIsdGhpcy5TcD0xMCx0aGlzLmtoPTAsdGhpcy5OcD1udWxsLHRoaXMuQ3A9MSx0aGlzLktuPVNwb3QuRGVmYXVsdCx0aGlzLlVuPVNwb3QuRGVmYXVsdH1jb3B5KCl7Y29uc3QgdD1uZXcgU2hhcGVUZW1wbGF0ZVNldHRpbmdzO3JldHVybiB0LmJwPXRoaXMuYnAsdC5rcD10aGlzLmtwLHQuU3A9dGhpcy5TcCx0LmtoPXRoaXMua2gsdC5OcD10aGlzLk5wLHQuQ3A9dGhpcy5DcCx0LktuPXRoaXMuS24uTigpLHQuVW49dGhpcy5Vbi5OKCksdH19dmFyIFdyYXA9KHk9Pih5W3kuTm9uZT0wXT1cIk5vbmVcIix5W3kuRml0PTFdPVwiRml0XCIseVt5LkRlc2lyZWRTaXplPTJdPVwiRGVzaXJlZFNpemVcIix5W3kuQnJlYWtBbGw9M109XCJCcmVha0FsbFwiLHkpKShXcmFwfHx7fSksVGV4dE92ZXJmbG93PSh5PT4oeVt5LkNsaXA9MF09XCJDbGlwXCIseVt5LkVsbGlwc2lzPTFdPVwiRWxsaXBzaXNcIix5KSkoVGV4dE92ZXJmbG93fHx7fSksVGV4dEZvcm1hdD0oeT0+KHlbeS5UcmltPTBdPVwiVHJpbVwiLHlbeS5Ob25lPTFdPVwiTm9uZVwiLHkpKShUZXh0Rm9ybWF0fHx7fSk7Y2xhc3MgVGV4dEJsb2NrIGV4dGVuZHMgR3JhcGhPYmplY3R7Zmk7JGk7a247d2U7cGk7UDA7TmQ7djtjdDtFbDtybztTbjtGZTtPaTtNbjtjb25zdHJ1Y3Rvcih0LGkpe3JldHVybiBzdXBlcigpLFRleHRCbG9jay50cD09PSExJiYoVGV4dEJsb2NrLnRwPSEwLFRleHRCbG9jay5ubz1EaWFncmFtLmlzVXNpbmdET00oKT9uZXcgQ2FudmFzU3VyZmFjZShudWxsKS5jaTpudWxsKSx0aGlzLmx8PTIwOTcxNTIsdGhpcy5maT1cIlwiLHRoaXMuJGk9XCJibGFja1wiLHRoaXMua249XCIxM3B4IHNhbnMtc2VyaWZcIix0aGlzLndlPTAsdGhpcy5waT0wLHRoaXMuUDA9MCx0aGlzLk5kPW51bGwsdGhpcy52PW51bGwsdGhpcy5jdD1udWxsLHRoaXMuRWw9MCx0aGlzLnJvPW51bGwsdGhpcy5Tbj0wLHRoaXMuRmU9bnVsbCx0aGlzLk9pPW51bGwsdGhpcy5Nbj1udWxsLHR5cGVvZiB0PT1cInN0cmluZ1wiP3RoaXMudGV4dD10OnQmJk9iamVjdC5hc3NpZ24odGhpcyx0KSxpJiZPYmplY3QuYXNzaWduKHRoaXMsaSksdGhpc31jbG9uZVByb3RlY3RlZCh0KXtzdXBlci5jbG9uZVByb3RlY3RlZCh0KSx0LmZpPXRoaXMuZmksdC4kaT10aGlzLiRpLHQua249dGhpcy5rbix0LndlPXRoaXMud2UsdC5waT10aGlzLnBpLHQuUDA9dGhpcy5QMCx0Lk5kPXRoaXMuTmQsdGhpcy52IT09bnVsbCYmKHQudj10aGlzLnYuY29weSgpKSx0aGlzLmN0IT09bnVsbCYmKHRoaXMuY3QubWk/dC5jdD10aGlzLmN0OnQuY3Q9dGhpcy5jdC5jb3B5KCkpLHQuRWw9dGhpcy5FbCx0LnJvPXRoaXMucm8sdC5Tbj10aGlzLlNuLHQuRmU9dGhpcy5GZSx0Lk9pPXRoaXMuT2ksdC5Nbj10aGlzLk1ufVBuKCl7cmV0dXJuIHRoaXMuY3Q9PT1udWxsP3RoaXMuY3Q9bmV3IFRleHRCbG9ja1RlbXBsYXRlU2V0dGluZ3M6dGhpcy5jdC5taSYmKHRoaXMuY3Q9dGhpcy5jdC5jb3B5KCkpLHRoaXMuY3R9bWgoKXtzdXBlci5taCgpLHRoaXMuY3QhPT1udWxsJiYodGhpcy5jdC5taT0hMCl9RUkodCl7dGhpcy5sPXQubHwyMDQ4fDQwOTYsdGhpcy5paT10Lm9wYWNpdHksdGhpcy5SdD10LmJhY2tncm91bmQsdGhpcy5ycz10LmRlc2lyZWRTaXplLk4oKSx0aGlzLm1pblNpemU9dC5taW5TaXplLk4oKSx0aGlzLm1heFNpemU9dC5tYXhTaXplLk4oKSx0LlNpIT09bnVsbD90aGlzLlNpPXQuU2kuY29weSgpOnRoaXMuU2k9bnVsbCx0aGlzLm90PXQuc2NhbGUsdGhpcy5qdD10LmFuZ2xlLHRoaXMuc3RyZXRjaD10LnN0cmV0Y2gsdGhpcy50bD10Lm1hcmdpbi5OKCksdGhpcy51aT10LmFsaWdubWVudC5OKCksdGhpcy5RdT10LmFsaWdubWVudEZvY3VzLk4oKSx0aGlzLnNlZ21lbnRGcmFjdGlvbj10LnNlZ21lbnRGcmFjdGlvbix0aGlzLnNlZ21lbnRPZmZzZXQ9dC5zZWdtZW50T2Zmc2V0Lk4oKSx0aGlzLnNlZ21lbnRPcmllbnRhdGlvbj10LnNlZ21lbnRPcmllbnRhdGlvbix0LmhpIT09bnVsbCYmKHRoaXMuaGk9dC5oaS5jb3B5KCkpLHRoaXMuc2hhZG93VmlzaWJsZT10LnNoYWRvd1Zpc2libGUsdGhpcy5maT10LmZpLHRoaXMuJGk9dC4kaSx0aGlzLmtuPXQua24sdGhpcy52IT09bnVsbCYmKHRoaXMudj10LnYuY29weSgpKSx0LmN0IT09bnVsbCYmKHQuY3QubWk/dGhpcy5jdD10LmN0OnRoaXMuY3Q9dC5jdC5jb3B5KCkpLHRoaXMuRWw9dC5FbH1JSSh0KXtpZih0aGlzLmZpPXQudGV4dHx8XCJcIix0aGlzLmp0PXQubGFiZWxBbmdsZXx8MCx0aGlzLndlPXQubGluZUNvdW50fHwwLHRoaXMuWkkodC5saW5lcyksdC5uYXR1cmFsQm91bmRzJiYodGhpcy5xaT10Lm5hdHVyYWxCb3VuZHMpLHQuYWN0dWFsQm91bmRzKXtjb25zdCBpPXQuYWN0dWFsQm91bmRzO3RoaXMuR3QoaS54LGkueSxpLndpZHRoLGkuaGVpZ2h0KX19YWkodCl7dCBpbiBXcmFwP3RoaXMud3JhcD10OnN1cGVyLmFpKHQpfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMuZmkubGVuZ3RoPjIyPydUZXh0QmxvY2soXCInK3RoaXMuZmkuc3Vic3RyaW5nKDAsMjApKydcIi4uLiknOidUZXh0QmxvY2soXCInK3RoaXMuZmkrJ1wiKSd9c3RhdGljIGdldEVsbGlwc2lzKCl7cmV0dXJuIFRleHRCbG9jay5BcH1zdGF0aWMgc2V0RWxsaXBzaXModCl7VGV4dEJsb2NrLkFwPXQsVGV4dEJsb2NrLndiPW5ldyBQcm9wZXJ0eUNvbGxlY3Rpb24sVGV4dEJsb2NrLmlOPTB9c3RhdGljIGdldEJhc2VsaW5lKCl7cmV0dXJuIFRleHRCbG9jay54Yn1zdGF0aWMgc2V0QmFzZWxpbmUodCl7VGV4dEJsb2NrLnhiPXR9c3RhdGljIHhiPW51bGw7c3RhdGljIGdldFVuZGVybGluZSgpe3JldHVybiBUZXh0QmxvY2suYmJ9c3RhdGljIHNldFVuZGVybGluZSh0KXtUZXh0QmxvY2suYmI9dH1zdGF0aWMgYmI9bnVsbDtzdGF0aWMgTm9uZT0wO3N0YXRpYyBXcmFwRml0PTE7c3RhdGljIFdyYXBEZXNpcmVkU2l6ZT0yO3N0YXRpYyBXcmFwQnJlYWtBbGw9MztzdGF0aWMgT3ZlcmZsb3dDbGlwPTA7c3RhdGljIE92ZXJmbG93RWxsaXBzaXM9MTtzdGF0aWMgRm9ybWF0VHJpbT0wO3N0YXRpYyBGb3JtYXROb25lPTE7dSgpe3N1cGVyLnUoKSx0aGlzLkhlKCEwKX1nZXQgZm9udCgpe3JldHVybiB0aGlzLmtufXNldCBmb250KHQpe2NvbnN0IGk9dGhpcy5rbjtpIT09dCYmKERlYnVnJiYoVS5pKHQsXCJzdHJpbmdcIixUZXh0QmxvY2ssXCJmb250XCIpLFRleHRCbG9jay5pc1ZhbGlkRm9udCh0KXx8VS5uKCdOb3QgYSB2YWxpZCBmb250OiBcIicrdCsnXCInKSksdGhpcy5rbj10LHRoaXMucm89bnVsbCx0aGlzLnUoKSx0aGlzLnQoXCJmb250XCIsaSx0KSl9c3RhdGljIGlzVmFsaWRGb250KHQpe3JldHVybiByb290LkNTUz9yb290LkNTUy5zdXBwb3J0cyhcImZvbnRcIix0KTohMH1nZXQgdGV4dCgpe3JldHVybiB0aGlzLmZpfXNldCB0ZXh0KHQpe2NvbnN0IGk9dGhpcy5maTt0IT1udWxsP3Q9dC50b1N0cmluZygpOnQ9XCJcIixpIT09dCYmKHRoaXMuZmk9dCx0aGlzLnUoKSx0aGlzLnQoXCJ0ZXh0XCIsaSx0KSl9Z2V0IHRleHRBbGlnbigpe3JldHVybiB0aGlzLmN0IT09bnVsbD90aGlzLmN0LkxwOlwic3RhcnRcIn1zZXQgdGV4dEFsaWduKHQpe2NvbnN0IGk9dGhpcy50ZXh0QWxpZ247aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJzdHJpbmdcIixUZXh0QmxvY2ssXCJ0ZXh0QWxpZ25cIiksdD09PVwic3RhcnRcInx8dD09PVwiZW5kXCJ8fHQ9PT1cImxlZnRcInx8dD09PVwicmlnaHRcInx8dD09PVwiY2VudGVyXCI/KHRoaXMuUG4oKS5McD10LHRoaXMuTCgpLHRoaXMudChcInRleHRBbGlnblwiLGksdCkpOkRlYnVnJiZVLlUodCwnXCJzdGFydFwiLCBcImVuZFwiLCBcImxlZnRcIiwgXCJyaWdodFwiLCBvciBcImNlbnRlclwiJyxUZXh0QmxvY2ssXCJ0ZXh0QWxpZ25cIikpfWdldCBmbGlwKCl7cmV0dXJuIHRoaXMuY3QhPT1udWxsP3RoaXMuY3QubG86MH1zZXQgZmxpcCh0KXtjb25zdCBpPXRoaXMuZmxpcDtpIT09dCYmKFUuaih0LEZsaXAsXCJGbGlwXCIpLHRoaXMuUG4oKS5sbz10LHRoaXMuTCgpLHRoaXMudChcImZsaXBcIixpLHQpKX1nZXQgdmVydGljYWxBbGlnbm1lbnQoKXtyZXR1cm4gdGhpcy5jdCE9PW51bGw/dGhpcy5jdC5ybDpTcG90LlRvcH1zZXQgdmVydGljYWxBbGlnbm1lbnQodCl7Y29uc3QgaT10aGlzLnZlcnRpY2FsQWxpZ25tZW50O2kuZXF1YWxzKHQpfHwoRGVidWcmJihVLmUodCxTcG90LFRleHRCbG9jayxcInZlcnRpY2FsQWxpZ25tZW50XCIpLHQuaXNOb1Nwb3QoKSYmVS5uKFwiVGV4dEJsb2NrLnZlcnRpY2FsQWxpZ25tZW50IGZvciBcIit0aGlzK1wiIG11c3QgYmUgYSByZWFsIFNwb3QsIG5vdDpcIit0KSksdD10Lk4oKSx0aGlzLlBuKCkucmw9dCx0aGlzLmhjKCksdGhpcy50KFwidmVydGljYWxBbGlnbm1lbnRcIixpLHQpKX1nZXQgbmF0dXJhbEJvdW5kcygpe2lmKCF0aGlzLnFpLmlzUmVhbCgpKXtjb25zdCB0PVNpemUuYSgpO3RoaXMuZU4odGhpcy5maSw5OTk5OTksdCk7bGV0IGk9dC53aWR0aDtTaXplLm8odCk7bGV0IGU9dGhpcy5lVChpKTtjb25zdCBzPXRoaXMuZGVzaXJlZFNpemU7aXNOYU4ocy53aWR0aCl8fChpPXMud2lkdGgpLGlzTmFOKHMuaGVpZ2h0KXx8KGU9cy5oZWlnaHQpLHRoaXMucWkuVm4oaSxlKX1yZXR1cm4gdGhpcy5xaX1nZXQgaXNNdWx0aWxpbmUoKXtyZXR1cm4odGhpcy5sJjIwOTcxNTIpIT09MH1zZXQgaXNNdWx0aWxpbmUodCl7Y29uc3QgaT0odGhpcy5sJjIwOTcxNTIpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixUZXh0QmxvY2ssXCJpc011bHRpbGluZVwiKSx0aGlzLmw9dGhpcy5sXjIwOTcxNTIsdGhpcy51KCksdGhpcy50KFwiaXNNdWx0aWxpbmVcIixpLHQpKX1nZXQgaXNVbmRlcmxpbmUoKXtyZXR1cm4odGhpcy5sJjQxOTQzMDQpIT09MH1zZXQgaXNVbmRlcmxpbmUodCl7Y29uc3QgaT0odGhpcy5sJjQxOTQzMDQpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixUZXh0QmxvY2ssXCJpc1VuZGVybGluZVwiKSx0aGlzLmw9dGhpcy5sXjQxOTQzMDQsdGhpcy5IZSghMCksdGhpcy5MKCksdGhpcy50KFwiaXNVbmRlcmxpbmVcIixpLHQpKX1nZXQgaXNTdHJpa2V0aHJvdWdoKCl7cmV0dXJuKHRoaXMubCY4Mzg4NjA4KSE9PTB9c2V0IGlzU3RyaWtldGhyb3VnaCh0KXtjb25zdCBpPSh0aGlzLmwmODM4ODYwOCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFRleHRCbG9jayxcImlzU3RyaWtldGhyb3VnaFwiKSx0aGlzLmw9dGhpcy5sXjgzODg2MDgsdGhpcy5IZSghMCksdGhpcy5MKCksdGhpcy50KFwiaXNTdHJpa2V0aHJvdWdoXCIsaSx0KSl9Z2V0IHdyYXAoKXtyZXR1cm4gdGhpcy5jdCE9PW51bGw/dGhpcy5jdC5UcDoyfXNldCB3cmFwKHQpe2NvbnN0IGk9dGhpcy53cmFwO2khPT10JiYoRGVidWcmJlUuaih0LFdyYXAsXCJXcmFwXCIpLHRoaXMuUG4oKS5UcD10LHRoaXMudSgpLHRoaXMudChcIndyYXBcIixpLHQpKX1nZXQgb3ZlcmZsb3coKXtyZXR1cm4gdGhpcy5jdCE9PW51bGw/dGhpcy5jdC5EcDowfXNldCBvdmVyZmxvdyh0KXtjb25zdCBpPXRoaXMub3ZlcmZsb3c7aSE9PXQmJihEZWJ1ZyYmVS5qKHQsVGV4dE92ZXJmbG93LFwiT3ZlcmZsb3dcIiksdGhpcy5QbigpLkRwPXQsdGhpcy51KCksdGhpcy50KFwib3ZlcmZsb3dcIixpLHQpKX1nZXQgaXNPdmVyZmxvd2VkKCl7cmV0dXJuKHRoaXMubCYxNjc3NzIxNikhPT0wfXNOKHQpe3Q/dGhpcy5sfD0xNjc3NzIxNjp0aGlzLmwmPS0xNjc3NzIxN31nZXQgc3Ryb2tlKCl7cmV0dXJuIHRoaXMuJGl9c2V0IHN0cm9rZSh0KXtjb25zdCBpPXRoaXMuJGk7aSE9PXQmJih0IT09bnVsbCYmQnJ1c2gucmQodCxcIlRleHRCbG9jay5zdHJva2VcIiksdCBpbnN0YW5jZW9mIEJydXNoJiZ0LnAoKSx0aGlzLiRpPXQsdHlwZW9mIHQhPVwic3RyaW5nXCImJnRoaXMub2MoKSx0aGlzLkwoKSx0aGlzLnQoXCJzdHJva2VcIixpLHQpKX1nZXQgbGluZUNvdW50KCl7cmV0dXJuIHRoaXMud2V9Z2V0IGxpbmVIZWlnaHQoKXtyZXR1cm4gdGhpcy5GcCgpfWdldCBlZGl0YWJsZSgpe3JldHVybih0aGlzLmwmMTA0ODU3NikhPT0wfXNldCBlZGl0YWJsZSh0KXtjb25zdCBpPSh0aGlzLmwmMTA0ODU3NikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFRleHRCbG9jayxcImVkaXRhYmxlXCIpLHRoaXMubD10aGlzLmxeMTA0ODU3Nix0aGlzLnQoXCJlZGl0YWJsZVwiLGksdCkpfWdldCBXUCgpe3JldHVybih0aGlzLmwmMzM1NTQ0MzIpIT09MH1zZXQgV1AodCl7dGhpcy5sPXRoaXMubF4zMzU1NDQzMn1nZXQgdGV4dEVkaXRvcigpe3JldHVybiB0aGlzLmN0IT09bnVsbD90aGlzLmN0LlJwOm51bGx9c2V0IHRleHRFZGl0b3IodCl7Y29uc3QgaT10aGlzLnRleHRFZGl0b3I7aSE9PXQmJihEZWJ1ZyYmISh0IGluc3RhbmNlb2YgSFRNTEluZm8pJiZVLm4oXCJUZXh0QmxvY2sudGV4dEVkaXRvciBtdXN0IGJlIGFuIEhUTUxJbmZvLlwiKSx0aGlzLlBuKCkuUnA9dCx0aGlzLnQoXCJ0ZXh0RWRpdG9yXCIsaSx0KSl9Z2V0IGVycm9yRnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdCE9PW51bGw/dGhpcy5jdC5hczpudWxsfXNldCBlcnJvckZ1bmN0aW9uKHQpe2NvbnN0IGk9dGhpcy5lcnJvckZ1bmN0aW9uO2khPT10JiYodCE9PW51bGwmJlUuUCh0LFRleHRCbG9jayxcImVycm9yRnVuY3Rpb25cIiksdGhpcy5QbigpLmFzPXQsdGhpcy50KFwiZXJyb3JGdW5jdGlvblwiLGksdCkpfWdldCBpbnRlcnZhbCgpe3JldHVybiB0aGlzLnYhPT1udWxsP3RoaXMudi53YzoxfXNldCBpbnRlcnZhbCh0KXtjb25zdCBpPXRoaXMuaW50ZXJ2YWw7aWYoRGVidWcmJlUucih0LFRleHRCbG9jayxcImludGVydmFsXCIpLHQ9TWF0aC5yb3VuZCh0KSxpIT09dCYmdCE9PTAmJmlzRmluaXRlKHQpKXt0aGlzLnY9PT1udWxsJiYodGhpcy52PW5ldyBHcmFkRWxlbWVudFNldHRpbmdzKSx0aGlzLnYud2M9dCx0aGlzLnUoKTtjb25zdCBlPXRoaXMucGFuZWw7ZSE9PW51bGwmJihlLmhzPW51bGwpLHRoaXMudChcImludGVydmFsXCIsaSx0KX19Z2V0IGdyYWR1YXRlZFN0YXJ0KCl7cmV0dXJuIHRoaXMudiE9PW51bGw/dGhpcy52LnhjOjB9c2V0IGdyYWR1YXRlZFN0YXJ0KHQpe2NvbnN0IGk9dGhpcy5ncmFkdWF0ZWRTdGFydDtEZWJ1ZyYmVS5yKHQsVGV4dEJsb2NrLFwiZ3JhZHVhdGVkU3RhcnRcIiksaSE9PXQmJih0PDA/dD0wOnQ+MSYmKHQ9MSksdGhpcy52PT09bnVsbCYmKHRoaXMudj1uZXcgR3JhZEVsZW1lbnRTZXR0aW5ncyksdGhpcy52LnhjPXQsdGhpcy51KCksdGhpcy50KFwiZ3JhZHVhdGVkU3RhcnRcIixpLHQpKX1nZXQgZ3JhZHVhdGVkRW5kKCl7cmV0dXJuIHRoaXMudiE9PW51bGw/dGhpcy52LmJjOjF9c2V0IGdyYWR1YXRlZEVuZCh0KXtjb25zdCBpPXRoaXMuZ3JhZHVhdGVkRW5kO0RlYnVnJiZVLnIodCxUZXh0QmxvY2ssXCJncmFkdWF0ZWRFbmRcIiksaSE9PXQmJih0PDA/dD0wOnQ+MSYmKHQ9MSksdGhpcy52PT09bnVsbCYmKHRoaXMudj1uZXcgR3JhZEVsZW1lbnRTZXR0aW5ncyksdGhpcy52LmJjPXQsdGhpcy51KCksdGhpcy50KFwiZ3JhZHVhdGVkRW5kXCIsaSx0KSl9Z2V0IGdyYWR1YXRlZEZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudiE9PW51bGw/dGhpcy52LklwOm51bGx9c2V0IGdyYWR1YXRlZEZ1bmN0aW9uKHQpe2NvbnN0IGk9dGhpcy5ncmFkdWF0ZWRGdW5jdGlvbjtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxUZXh0QmxvY2ssXCJncmFkdWF0ZWRGdW5jdGlvblwiKSx0aGlzLnY9PT1udWxsJiYodGhpcy52PW5ldyBHcmFkRWxlbWVudFNldHRpbmdzKSx0aGlzLnYuSXA9dCx0aGlzLnUoKSx0aGlzLnQoXCJncmFkdWF0ZWRGdW5jdGlvblwiLGksdCkpfWdldCBncmFkdWF0ZWRTa2lwKCl7cmV0dXJuIHRoaXMudiE9PW51bGw/dGhpcy52LmtjOm51bGx9c2V0IGdyYWR1YXRlZFNraXAodCl7Y29uc3QgaT10aGlzLmdyYWR1YXRlZFNraXA7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsVGV4dEJsb2NrLFwiZ3JhZHVhdGVkU2tpcFwiKSx0aGlzLnY9PT1udWxsJiYodGhpcy52PW5ldyBHcmFkRWxlbWVudFNldHRpbmdzKSx0aGlzLnYua2M9dCx0aGlzLnUoKSx0aGlzLnQoXCJncmFkdWF0ZWRTa2lwXCIsaSx0KSl9eGgodCxpKXtpZih0aGlzLiRpPT09bnVsbHx8dGhpcy5maS5sZW5ndGg9PT0wfHx0aGlzLmtuPT09bnVsbClyZXR1cm47Y29uc3QgZT10aGlzLm5hdHVyYWxCb3VuZHMscz10aGlzLmFjdHVhbEJvdW5kcyxuPWUud2lkdGgsbz1lLmhlaWdodCxyPXRoaXMuRnAoKTtsZXQgbD10LnRleHRBbGlnbj10aGlzLnRleHRBbGlnbjtjb25zdCBoPWkuanU7bD09PVwic3RhcnRcIj9sPWg/XCJyaWdodFwiOlwibGVmdFwiOmw9PT1cImVuZFwiJiYobD1oP1wibGVmdFwiOlwicmlnaHRcIik7Y29uc3QgZj10aGlzLmlzVW5kZXJsaW5lLGE9dGhpcy5pc1N0cmlrZXRocm91Z2g7dGhpcy51bih0LHRoaXMuJGksITAsITEsZSxzKSwoZnx8YSkmJnRoaXMudW4odCx0aGlzLiRpLCExLCExLGUscyk7Y29uc3QgYz0wO2xldCB1PTA7Y29uc3QgZD1uO2xldCBtPSExO2kuc2k9PT10JiYhKGkuc2kgaW5zdGFuY2VvZiBTVkdDb250ZXh0KSYmIXRoaXMuV1AmJmkuZ2V0UmVuZGVyaW5nSGludChcInRleHRHcmVla2luZ1wiKT09PSEwJiZyKnRoaXMuYmEqaS5zY2FsZTwzJiYobT0hMCk7Y29uc3QgZz10aGlzLnNwYWNpbmdBYm92ZSxwPXRoaXMuc3BhY2luZ0JlbG93O3N3aXRjaCh0aGlzLmZsaXApe2Nhc2UgMDpicmVhaztjYXNlIDI6dC50cmFuc2xhdGUobiwwKSx0LnNjYWxlKC0xLDEpO2JyZWFrO2Nhc2UgMTp0LnRyYW5zbGF0ZSgwLG8pLHQuc2NhbGUoMSwtMSk7YnJlYWs7Y2FzZSAzOnQudHJhbnNsYXRlKG4sbyksdC5zY2FsZSgtMSwtMSk7YnJlYWt9dC5jb21taXRUcmFuc2Zvcm0oKTtjb25zdCB3PXRoaXMud2Usaz0oZytyK3ApKnc7aWYobz5rKXtjb25zdCBiPXRoaXMudmVydGljYWxBbGlnbm1lbnQ7dT1iLnkqby1iLnkqaytiLm9mZnNldFl9aWYodz09PTEmJnRoaXMuTW4hPT1udWxsKXtsZXQgYj10aGlzLnBpO2I+ZCYmKGI9ZCksdSs9Zyx0aGlzLnNUKHRoaXMuTW4sdCxjLHUsZCxyLGIsbSxsLGYsYSl9ZWxzZSBpZih0aGlzLkZlIT09bnVsbCYmdGhpcy5PaSE9PW51bGwpZm9yKGxldCBiPTA7Yjx3O2IrKyl7bGV0IFM9dGhpcy5GZVtiXTtTPmQmJihTPWQpLHUrPWcsdGhpcy5zVCh0aGlzLk9pW2JdLHQsYyx1LGQscixTLG0sbCxmLGEpLHUrPXIrcH1zd2l0Y2godGhpcy5mbGlwKXtjYXNlIDA6YnJlYWs7Y2FzZSAyOnQuc2NhbGUoLTEsMSksdC50cmFuc2xhdGUoLW4sMCk7YnJlYWs7Y2FzZSAxOnQuc2NhbGUoMSwtMSksdC50cmFuc2xhdGUoMCwtbyk7YnJlYWs7Y2FzZSAzOnQuc2NhbGUoLTEsLTEpLHQudHJhbnNsYXRlKC1uLC1vKTticmVha319c1QodCxpLGUscyxuLG8scixsLGgsZixhKXtsZXQgYz0wO2lmKGwpe2g9PT1cImxlZnRcIj9jPTA6aD09PVwicmlnaHRcIj9jPW4tcjpoPT09XCJjZW50ZXJcIiYmKGM9KG4tcikvMik7Y29uc3QgbT1pLmdsb2JhbEFscGhhO2kuZ2xvYmFsQWxwaGE9bS8yLGkuZmlsbFJlY3QoZStjLHMrby80LHIsby8yKSxpLmdsb2JhbEFscGhhPW07cmV0dXJufWg9PT1cImxlZnRcIj9jPTA6aD09PVwicmlnaHRcIj9jPW46aD09PVwiY2VudGVyXCImJihjPW4vMik7Y29uc3QgdT1UZXh0QmxvY2sueGIhPT1udWxsP1RleHRCbG9jay54Yih0aGlzLG8pOm8qLjc1O2kuZmlsbFRleHQodCxlK2Mscyt1KTtsZXQgZD1vLzIwfDA7aWYoZD09PTAmJihkPTEpLGg9PT1cInJpZ2h0XCI/Yy09cjpoPT09XCJjZW50ZXJcIiYmKGMtPXIvMiksZil7Y29uc3QgbT1UZXh0QmxvY2suYmIhPT1udWxsP1RleHRCbG9jay5iYih0aGlzLG8pOm8qLjg7dGhpcy5uVChlK2MscyttLGUrYytyLHMrbSxkLGkpLGkgaW5zdGFuY2VvZiBTVkdDb250ZXh0JiZpLmxhc3RDcmVhdGVkRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZ29qcy10ZFwiKX1pZihhKXtsZXQgbT1zK28tby8yLjJ8MDtkJTIhPT0wJiYobSs9LjUpLHRoaXMublQoZStjLG0sZStjK3IsbSxkLGkpLGkgaW5zdGFuY2VvZiBTVkdDb250ZXh0JiZpLmxhc3RDcmVhdGVkRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZ29qcy10ZFwiKX19blQodCxpLGUscyxuLG8pe28uYmVnaW5QYXRoKCksby5saW5lV2lkdGg9bixvLm1vdmVUbyh0LGkpLG8ubGluZVRvKGUscyksby5zdHJva2UoKSxvLmVuZFBhdGgoKX1uYyh0LGksZSl7aWYoIXN1cGVyLm5jKHQsaSxlKSlyZXR1cm4hMTtpZih0aGlzLnVuKHQsdGhpcy4kaSwhMCwhMSx0aGlzLm5hdHVyYWxCb3VuZHMsdGhpcy5hY3R1YWxCb3VuZHMpLGUpe2lmKHRoaXMuc3ZnLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidGV4dFwiKS5sZW5ndGg9PT0wKXJldHVybiEwO2NvbnN0IG49dGhpcy5zdmcuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImdvanMtdGRcIik7Zm9yKGxldCBvPTA7bzxuLmxlbmd0aDtvKyspdC5zZXRGaWxsT3JTdHJva2VJblBsYWNlKG5bb10sITEpfWVsc2UgdGhpcy5RSSh0aGlzLnN2Zyx0aGlzLnRleHQsdCk7cmV0dXJuITB9UUkodCxpLGUpe3QuaW5uZXJIVE1MPWksZS5zZXRGaWxsT3JTdHJva2VJblBsYWNlKHQsITApfW5kKHQpe3JldHVybiB0aGlzLmxpbmVDb3VudD4xfHx0aGlzLmlzVW5kZXJsaW5lfHx0aGlzLmlzU3RyaWtldGhyb3VnaD8hMDpzdXBlci5uZCh0KX1MUCh0LGkpe2lmKHQubm9kZU5hbWUhPT1cImdcIil0LnNldEF0dHJpYnV0ZU5TKG51bGwsXCJmaWx0ZXJcIixpKTtlbHNle2NvbnN0IGU9dC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRleHRcIik7Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspZVtzXS5zZXRBdHRyaWJ1dGVOUyhudWxsLFwiZmlsdGVyXCIsaSl9fV9JKCl7dGhpcy5Tbj0wLHRoaXMucGk9MCx0aGlzLnJvPW51bGwsdGhpcy5GZT1udWxsLHRoaXMuT2k9bnVsbCx0aGlzLk1uPW51bGx9ZWQodCxpLGUscyl7Y29uc3Qgbj10aGlzLndlO3RoaXMuRWw9dCx0aGlzLnNOKCExKTtjb25zdCBvPXRoaXMua247VGV4dEJsb2NrLm5vIT09bnVsbCYmVGV4dEJsb2NrLm9UIT09byYmKFRleHRCbG9jay5uby5mb250PW8sVGV4dEJsb2NrLm9UPW8pLHRoaXMuX0koKTtsZXQgcj0wLGw9MDtpc05hTih0aGlzLmRlc2lyZWRTaXplLndpZHRoKT8ocj10aGlzLnRPKCkscj1NYXRoLm1pbihyLHQvdGhpcy5zY2FsZSkpOnI9dGhpcy5kZXNpcmVkU2l6ZS53aWR0aCx0aGlzLnBhbmVsIT09bnVsbCYmKHI9TWF0aC5taW4ocix0aGlzLnBhbmVsLm1heFNpemUud2lkdGgpKSxsPXRoaXMuZVQociksaXNOYU4odGhpcy5kZXNpcmVkU2l6ZS5oZWlnaHQpP2w9TWF0aC5taW4obCxpL3RoaXMuc2NhbGUpOmw9dGhpcy5kZXNpcmVkU2l6ZS5oZWlnaHQsdGhpcy5pTyh0LGwpLCh0aGlzLndyYXA9PT0xfHxpc05hTih0aGlzLmRlc2lyZWRTaXplLndpZHRoKSkmJihyPWlzTmFOKHQpP3RoaXMucGk6TWF0aC5taW4odCx0aGlzLnBpKSkscj1NYXRoLm1heChlLHIpLGw9TWF0aC5tYXgocyxsKSx0aGlzLnFpLlZuKHIsbCksdGhpcy5fbigwLDAscixsKSx0aGlzLnN2ZyE9PW51bGwmJm4hPT10aGlzLndlJiZ0aGlzLkhlKCEwKX15aCh0LGksZSxzKXt0aGlzLmNvbW1vbkFycmFuZ2UodCxpLGUscyl9Tm4odCxpKXt0aGlzLk1uPT09bnVsbD8odGhpcy5Nbj10LHRoaXMucGk9aSk6KCh0aGlzLk9pPT09bnVsbHx8dGhpcy5GZT09PW51bGwpJiYodGhpcy5PaT1bXSx0aGlzLkZlPVtdLHRoaXMuT2kucHVzaCh0aGlzLk1uKSx0aGlzLkZlLnB1c2godGhpcy5waSkpLHRoaXMuT2kucHVzaCh0KSx0aGlzLkZlLnB1c2goaSksdGhpcy5PaS5sZW5ndGg+dGhpcy5tYXhMaW5lcyYmKHRoaXMubHw9MTY3NzcyMTYpKX1lTih0LGksZSl7Y29uc3Qgcz10aGlzLmZvcm1hdHRpbmc9PT0wO3MmJih0PXQudHJpbSgpKTtsZXQgbj0wLG89MCxyPTA7Y29uc3QgbD10aGlzLmtuLGg9dGhpcy5zcGFjaW5nQWJvdmUrdGhpcy5zcGFjaW5nQmVsb3csZj1NYXRoLm1heCgwLHRoaXMuRnAoKStoKSxhPXRoaXMub3ZlcmZsb3c9PT0xP3RoaXMuclQobCk6MDtpZih0aGlzLndlPj10aGlzLm1heExpbmVzKXtlIT09bnVsbCYmZS5zKDAsZik7cmV0dXJufWxldCBjPXQ7aWYodGhpcy53cmFwPT09MCl7aWYodGhpcy5Tbj0xLG89dGhpcy5nZXRTdHJpbmdXaWR0aCh0KSxhPT09MHx8bzw9aSl7dGhpcy5waT1NYXRoLm1heCh0aGlzLnBpLG8pLHRoaXMuTm4odCx0aGlzLnBpKSxlIT09bnVsbCYmZS5zKG8sZik7cmV0dXJufWxldCBkPXRoaXMuQ2QoYyk7Yz1jLnN1YnN0cmluZyhkLmxlbmd0aCk7bGV0IG09dGhpcy5DZChjKTtmb3Iobz10aGlzLmdldFN0cmluZ1dpZHRoKGQrbSkscj0wO20ubGVuZ3RoPjAmJm88PWk7KXtkKz1tLGM9Yy5zdWJzdHJpbmcobS5sZW5ndGgpLG09dGhpcy5DZChjKSxyPW87bGV0IGc9ZCttO3MmJihnPWcudHJpbSgpKSxvPXRoaXMuZ2V0U3RyaW5nV2lkdGgoZyl9Zm9yKHMmJihtPW0udHJpbSgpKSxkKz1tLGk9TWF0aC5tYXgoMSxpLWEpO3RoaXMuZ2V0U3RyaW5nV2lkdGgoZCk+aSYmZC5sZW5ndGg+MTspZD1kLnN1YnN0cmluZygwLGQubGVuZ3RoLTEpO3RoaXMuc04oITApLGQrPVRleHRCbG9jay5BcCxyPXRoaXMuZ2V0U3RyaW5nV2lkdGgoZCksdGhpcy5waT1yLHRoaXMuTm4oZCxyKSxlIT09bnVsbCYmZS5zKHIsZik7cmV0dXJufWxldCB1PTA7Zm9yKGMubGVuZ3RoPT09MCYmKHU9MSx0aGlzLk5uKGMsMCkpO2MubGVuZ3RoPjA7KXtsZXQgZD10aGlzLkNkKGMpO2ZvcihjPWMuc3Vic3RyaW5nKGQubGVuZ3RoKTt0aGlzLmdldFN0cmluZ1dpZHRoKGQpPmk7KXtsZXQgcD0xO2ZvcihvPXRoaXMuZ2V0U3RyaW5nV2lkdGgoZC5zdWJzdHJpbmcoMCxwKSkscj0wO288PWk7KXArKyxyPW8sbz10aGlzLmdldFN0cmluZ1dpZHRoKGQuc3Vic3RyaW5nKDAscCkpO2xldCB3PTA7cD09PTE/KHc9byxuPU1hdGgubWF4KG4sbykpOih3PXIsbj1NYXRoLm1heChuLHIpKSxwLS0scDwxJiYocD0xKTtjb25zdCB4PWQuc3Vic3RyaW5nKDAscCk7aWYodGhpcy5Obih4LHcpLHUrKyxkPWQuc3Vic3RyaW5nKHApLHRoaXMud2UrdT50aGlzLm1heExpbmVzKWJyZWFrfWxldCBtPXRoaXMuQ2QoYyk7Zm9yKG89dGhpcy5nZXRTdHJpbmdXaWR0aChkK20pLHI9MDttLmxlbmd0aD4wJiZvPD1pOyl7ZCs9bSxjPWMuc3Vic3RyaW5nKG0ubGVuZ3RoKSxtPXRoaXMuQ2QoYykscj1vO2xldCBwPWQrbTtzJiYocD1wLnRyaW0oKSksbz10aGlzLmdldFN0cmluZ1dpZHRoKHApfWlmKHMmJihkPWQudHJpbSgpKSxkPT09XCJcIiljb250aW51ZTtkW2QubGVuZ3RoLTFdPT09XCJcXHhBRFwiJiYoZD1kLnN1YnN0cmluZygwLGQubGVuZ3RoLTEpK1wiXFx1MjAxMFwiKTtsZXQgZz0wO2lmKG0ubGVuZ3RoPT09MD8oZz1vLG49TWF0aC5tYXgobixvKSk6KHI9dGhpcy5nZXRTdHJpbmdXaWR0aChkKSxnPXIsbj1NYXRoLm1heChuLHIpKSx0aGlzLk5uKGQsZyksdSsrLHRoaXMud2UrdT50aGlzLm1heExpbmVzKWJyZWFrfXRoaXMuU249TWF0aC5taW4odGhpcy5tYXhMaW5lcy10aGlzLndlLHUpLHRoaXMucGk9TWF0aC5tYXgodGhpcy5waSxuKSxlIT09bnVsbCYmZS5zKHRoaXMucGksZip0aGlzLlNuKX1pTyh0LGkpe2lmKHRoaXMucGk9PT0wfHx0aGlzLkZlPT09bnVsbHx8dGhpcy5PaT09PW51bGx8fHRoaXMub3ZlcmZsb3chPT0xKXJldHVybjtjb25zdCBlPXRoaXMua24scz10aGlzLm92ZXJmbG93PT09MT90aGlzLnJUKGUpOjAsbj10aGlzLnNwYWNpbmdBYm92ZSt0aGlzLnNwYWNpbmdCZWxvdyxvPU1hdGgubWF4KDAsdGhpcy5GcCgpK24pLHI9TWF0aC5taW4odGhpcy5tYXhMaW5lcy0xLE1hdGgubWF4KE1hdGguZmxvb3IoaS9vKy4wMSktMSwwKSk7aWYocisxPj10aGlzLk9pLmxlbmd0aClyZXR1cm47dGhpcy5zTighMCk7bGV0IGw9dGhpcy5PaVtyXTtjb25zdCBoPU1hdGgubWF4KDEsdC1zKTtmb3IoO3RoaXMuZ2V0U3RyaW5nV2lkdGgobCk+aCYmbC5sZW5ndGg+MTspbD1sLnN1YnN0cmluZygwLGwubGVuZ3RoLTEpO2wrPVRleHRCbG9jay5BcDtjb25zdCBmPXRoaXMuZ2V0U3RyaW5nV2lkdGgobCk7dGhpcy5PaVtyXT1sLHRoaXMuT2k9dGhpcy5PaS5zbGljZSgwLHIrMSksdGhpcy5GZVtyXT1mLHRoaXMuRmU9dGhpcy5GZS5zbGljZSgwLHIrMSksdGhpcy5Tbj10aGlzLk9pLmxlbmd0aCx0aGlzLnBpPU1hdGgubWF4KHRoaXMucGksZiksdGhpcy53ZT10aGlzLlNuLHRoaXMud2U9PT0xJiYodGhpcy5Nbj10aGlzLk9pWzBdKX1DZCh0KXtpZih0aGlzLndyYXA9PT0zKXJldHVybiB0LnN1YnN0cmluZygwLDEpO2xldCBpPXQubGVuZ3RoLGU9MDtjb25zdCBzPVRleHRCbG9jay5lTztmb3IoO2U8aSYmIXMudGVzdCh0LmNoYXJBdChlKSk7KWUrKztmb3IodGhpcy5mb3JtYXR0aW5nPT09MSYmKGk9TWF0aC5taW4oaSxlKzEpKTtlPGkmJnMudGVzdCh0LmNoYXJBdChlKSk7KWUrKztyZXR1cm4gZT49dC5sZW5ndGg/dDp0LnN1YnN0cmluZygwLGUpfWdldFN0cmluZ1dpZHRoKHQpe3JldHVybiBUZXh0QmxvY2subm89PT1udWxsP3QubGVuZ3RoKjg6VGV4dEJsb2NrLm5vLm1lYXN1cmVUZXh0KHQpLndpZHRofUZwKCl7aWYodGhpcy5ybyE9PW51bGwpcmV0dXJuIHRoaXMucm87Y29uc3QgdD10aGlzLmtuO2xldCBpPTA7cmV0dXJuIFRleHRCbG9jay5ubz09PW51bGw/KGk9MTYsdGhpcy5ybz1pLGkpOihUZXh0QmxvY2subk5bdF0hPT12b2lkIDAmJlRleHRCbG9jay5sVDw1ZTM/aT1UZXh0QmxvY2subk5bdF06KGk9VGV4dEJsb2NrLm5vLm1lYXN1cmVUZXh0KFwiTVwiKS53aWR0aCoxLjMsVGV4dEJsb2NrLm5OW3RdPWksVGV4dEJsb2NrLmxUKyspLHRoaXMucm89aSxpKX1yVCh0KXtpZihUZXh0QmxvY2subm89PT1udWxsKXJldHVybiA2O2xldCBpPTA7cmV0dXJuIFRleHRCbG9jay53Ylt0XSE9PXZvaWQgMCYmVGV4dEJsb2NrLmlOPDVlMz9pPVRleHRCbG9jay53Ylt0XTooaT1UZXh0QmxvY2subm8ubWVhc3VyZVRleHQoVGV4dEJsb2NrLkFwKS53aWR0aCxUZXh0QmxvY2sud2JbdF09aSxUZXh0QmxvY2suaU4rKyksaX1rYih0LGkpe3JldHVybiB0LmluZGV4T2YoYFxuYCxpKX1lVCh0KXtsZXQgaT10aGlzLmZpLnJlcGxhY2UoL1xcclxcbi9nLGBcbmApLnJlcGxhY2UoL1xcci9nLGBcbmApO2NvbnN0IGU9dGhpcy5zcGFjaW5nQWJvdmUrdGhpcy5zcGFjaW5nQmVsb3cscz1NYXRoLm1heCgwLHRoaXMuRnAoKStlKTtpZihpLmxlbmd0aD09PTApcmV0dXJuIHRoaXMucGk9MCx0aGlzLndlPTEscztpZighdGhpcy5pc011bHRpbGluZSl7Y29uc3QgaD10aGlzLmtiKGksMCk7aD49MCYmKGk9aS5zdWJzdHJpbmcoMCxoKSl9bGV0IG49MDt0aGlzLndlPTA7bGV0IG89MCxyPS0xLGw9ITE7Zm9yKDshbDspe2lmKHI9dGhpcy5rYihpLG8pLHI9PT0tMSYmKHI9aS5sZW5ndGgsbD0hMCksbzw9cil7Y29uc3QgaD1pLnN1YnN0cmluZyhvLHIpO2lmKHRoaXMud3JhcCE9PTApe3RoaXMuU249MDtjb25zdCBmPVNpemUuYSgpO3RoaXMuZU4oaCx0LGYpLG4rPWYuaGVpZ2h0LFNpemUubyhmKSx0aGlzLndlKz10aGlzLlNufWVsc2UgdGhpcy5lTihoLHQsbnVsbCksbis9cyx0aGlzLndlKys7dGhpcy53ZT09PXRoaXMubWF4TGluZXMmJihsPSEwKX1vPXIrMX1yZXR1cm4gdGhpcy5QMD1uLG59dE8oKXtsZXQgdD10aGlzLmZpLnJlcGxhY2UoL1xcclxcbi9nLGBcbmApLnJlcGxhY2UoL1xcci9nLGBcbmApO2lmKHQubGVuZ3RoPT09MClyZXR1cm4gODtpZih0aGlzLmlzTXVsdGlsaW5lKXtsZXQgaT0wLGU9MCxzPSExO2Zvcig7IXM7KXtsZXQgbj10aGlzLmtiKHQsZSk7bj09PS0xJiYobj10Lmxlbmd0aCxzPSEwKTtsZXQgbz10LnN1YnN0cmluZyhlLG4pO3RoaXMuZm9ybWF0dGluZz09PTAmJihvPW8udHJpbSgpKSxpPU1hdGgubWF4KGksdGhpcy5nZXRTdHJpbmdXaWR0aChvKSksZT1uKzF9cmV0dXJuIGl9ZWxzZXtjb25zdCBpPXRoaXMua2IodCwwKTtyZXR1cm4gaT49MCYmKHQ9dC5zdWJzdHJpbmcoMCxpKSksdGhpcy5nZXRTdHJpbmdXaWR0aCh0KX19Z2V0IHRleHRWYWxpZGF0aW9uKCl7cmV0dXJuIHRoaXMuY3QhPT1udWxsP3RoaXMuY3QuT2w6bnVsbH1zZXQgdGV4dFZhbGlkYXRpb24odCl7Y29uc3QgaT10aGlzLnRleHRWYWxpZGF0aW9uO2khPT10JiYodCE9PW51bGwmJlUuUCh0LFRleHRCbG9jayxcInRleHRWYWxpZGF0aW9uXCIpLHRoaXMuUG4oKS5PbD10LHRoaXMudChcInRleHRWYWxpZGF0aW9uXCIsaSx0KSl9Z2V0IHRleHRFZGl0ZWQoKXtyZXR1cm4gdGhpcy5jdCE9PW51bGw/dGhpcy5jdC5PcDpudWxsfXNldCB0ZXh0RWRpdGVkKHQpe2NvbnN0IGk9dGhpcy50ZXh0RWRpdGVkO2khPT10JiYodCE9PW51bGwmJlUuUCh0LFRleHRCbG9jayxcInRleHRFZGl0ZWRcIiksdGhpcy5QbigpLk9wPXQsdGhpcy50KFwidGV4dEVkaXRlZFwiLGksdCkpfWdldCBzcGFjaW5nQWJvdmUoKXtyZXR1cm4gdGhpcy5jdCE9PW51bGw/dGhpcy5jdC5FcDowfXNldCBzcGFjaW5nQWJvdmUodCl7Y29uc3QgaT10aGlzLnNwYWNpbmdBYm92ZTtpIT09dCYmKERlYnVnJiZVLmkodCxcIm51bWJlclwiLFRleHRCbG9jayxcInNwYWNpbmdBYm92ZVwiKSx0aGlzLlBuKCkuRXA9dCx0aGlzLnUoKSx0aGlzLnQoXCJzcGFjaW5nQWJvdmVcIixpLHQpKX1nZXQgc3BhY2luZ0JlbG93KCl7cmV0dXJuIHRoaXMuY3QhPT1udWxsP3RoaXMuY3QuQnA6MH1zZXQgc3BhY2luZ0JlbG93KHQpe2NvbnN0IGk9dGhpcy5zcGFjaW5nQmVsb3c7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJudW1iZXJcIixUZXh0QmxvY2ssXCJzcGFjaW5nQmVsb3dcIiksdGhpcy5QbigpLkJwPXQsdGhpcy51KCksdGhpcy50KFwic3BhY2luZ0JlbG93XCIsaSx0KSl9Z2V0IGZvcm1hdHRpbmcoKXtyZXR1cm4gdGhpcy5jdCE9PW51bGw/dGhpcy5jdC5WcDowfXNldCBmb3JtYXR0aW5nKHQpe2NvbnN0IGk9dGhpcy5mb3JtYXR0aW5nO2khPT10JiYoVS5qKHQsVGV4dEZvcm1hdCxcImZvcm1hdHRpbmdcIiksdGhpcy5QbigpLlZwPXQsdGhpcy51KCksdGhpcy50KFwiZm9ybWF0dGluZ1wiLGksdCkpfWdldCBtYXhMaW5lcygpe3JldHVybiB0aGlzLmN0IT09bnVsbD90aGlzLmN0LnpwOjEvMH1zZXQgbWF4TGluZXModCl7Y29uc3QgaT10aGlzLm1heExpbmVzO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsVGV4dEJsb2NrLFwibWF4TGluZXNcIiksdD1NYXRoLmZsb29yKHQpLHQ8PTAmJlUuVSh0LFwiPiAwXCIsVGV4dEJsb2NrLFwibWF4TGluZXNcIiksdGhpcy5QbigpLnpwPXQsdGhpcy51KCksdGhpcy50KFwibWF4TGluZXNcIixpLHQpKX1nZXRNZXRyaWNzKCl7cmV0dXJuW3RoaXMucGksdGhpcy5FbCx0aGlzLnJvLHRoaXMuU24sdGhpcy5GZSx0aGlzLk9pLHRoaXMuTW5dfVpJKHQpe3QhPT12b2lkIDAmJih0aGlzLnBpPXRbMF0sdGhpcy5FbD10WzFdLHRoaXMucm89dFsyXSx0aGlzLlNuPXRbM10sdGhpcy5GZT10WzRdLHRoaXMuT2k9dFs1XSx0aGlzLk1uPXRbNl0pfWdldCBtZXRyaWNzKCl7cmV0dXJue2FyclNpemU6dGhpcy5GZSE9PW51bGw/dGhpcy5GZTpbdGhpcy5waV0sYXJyVGV4dDp0aGlzLk9pIT09bnVsbD90aGlzLk9pOlt0aGlzLk1uXSxtYXhMaW5lV2lkdGg6dGhpcy5waSxmb250SGVpZ2h0OnRoaXMucm99fWdldCBjaG9pY2VzKCl7cmV0dXJuIHRoaXMuTmR9c2V0IGNob2ljZXModCl7Y29uc3QgaT10aGlzLk5kO2khPT10JiYoRGVidWcmJnQhPT1udWxsJiYhQXJyYXkuaXNBcnJheSh0KSYmVS5QaSh0LFwiQXJyYXlcIixUZXh0QmxvY2ssXCJjaG9pY2VzOnZhbHVlXCIpLHRoaXMuTmQ9dCx0aGlzLnQoXCJjaG9pY2VzXCIsaSx0KSl9c3RhdGljIGVPPW5ldyBSZWdFeHAoXCJbIFxcdTIwMEJcXHhBRF1cIik7c3RhdGljIG5OPW5ldyBQcm9wZXJ0eUNvbGxlY3Rpb247c3RhdGljIGxUPTA7c3RhdGljIHdiPW5ldyBQcm9wZXJ0eUNvbGxlY3Rpb247c3RhdGljIGlOPTA7c3RhdGljIEFwPVwiLi4uXCI7c3RhdGljIG9UPVwiXCI7c3RhdGljIG5vPW51bGw7c3RhdGljIHRwPSExfWNsYXNzIFRleHRCbG9ja1RlbXBsYXRlU2V0dGluZ3N7bWk7YXM7bG87VnA7enA7RHA7RXA7QnA7THA7T3A7UnA7T2w7cmw7VHA7Y29uc3RydWN0b3IoKXt0aGlzLm1pPSExLHRoaXMuYXM9bnVsbCx0aGlzLmxvPTAsdGhpcy5WcD0wLHRoaXMuenA9MS8wLHRoaXMuRHA9MCx0aGlzLkVwPTAsdGhpcy5CcD0wLHRoaXMuTHA9XCJzdGFydFwiLHRoaXMuT3A9bnVsbCx0aGlzLlJwPW51bGwsdGhpcy5PbD1udWxsLHRoaXMucmw9U3BvdC5Ub3AsdGhpcy5UcD0yfWNvcHkoKXtjb25zdCB0PW5ldyBUZXh0QmxvY2tUZW1wbGF0ZVNldHRpbmdzO3JldHVybiB0LmFzPXRoaXMuYXMsdC5sbz10aGlzLmxvLHQuVnA9dGhpcy5WcCx0LnpwPXRoaXMuenAsdC5EcD10aGlzLkRwLHQuRXA9dGhpcy5FcCx0LkJwPXRoaXMuQnAsdC5McD10aGlzLkxwLHQuT3A9dGhpcy5PcCx0LlJwPXRoaXMuUnAsdC5PbD10aGlzLk9sLHQucmw9dGhpcy5ybCx0LlRwPXRoaXMuVHAsdH19Y2xhc3MgR3JhZEVsZW1lbnRTZXR0aW5nc3t3Yzt4YztiYztJcDtrYztjb25zdHJ1Y3Rvcigpe3RoaXMud2M9MSx0aGlzLnhjPTAsdGhpcy5iYz0xLHRoaXMuSXA9bnVsbCx0aGlzLmtjPW51bGx9Y29weSgpe2NvbnN0IHQ9bmV3IEdyYWRFbGVtZW50U2V0dGluZ3M7cmV0dXJuIHQud2M9dGhpcy53Yyx0LnhjPXRoaXMueGMsdC5iYz10aGlzLmJjLHQuSXA9dGhpcy5JcCx0LmtjPXRoaXMua2MsdH19dmFyIEltYWdlU3RyZXRjaD0oeT0+KHlbeS5Ob25lPTBdPVwiTm9uZVwiLHlbeS5GaWxsPTJdPVwiRmlsbFwiLHlbeS5Vbmlmb3JtPTZdPVwiVW5pZm9ybVwiLHlbeS5Vbmlmb3JtVG9GaWxsPTddPVwiVW5pZm9ybVRvRmlsbFwiLHkpKShJbWFnZVN0cmV0Y2h8fHt9KTtjbGFzcyBQaWN0dXJlIGV4dGVuZHMgR3JhcGhPYmplY3R7bGw7YnQ7aGw7U2M7YXM7YWw7TWM7bG87UGM7TmM7dGI7Y29uc3RydWN0b3IodCxpKXtzdXBlcigpLHRoaXMubHw9MjA5NzE1Mix0aGlzLmxsPW51bGwsdGhpcy5idD1cIlwiLHRoaXMuaGw9UmVjdC5zRix0aGlzLlNjPTIsdGhpcy5hcz1udWxsLHRoaXMuYWw9bnVsbCx0aGlzLk1jPVNwb3QuQ2VudGVyLHRoaXMubG89MCx0aGlzLlBjPW51bGwsdGhpcy5OYz1udWxsLHRoaXMudGI9bnVsbCx0eXBlb2YgdD09XCJzdHJpbmdcIj90aGlzLnNvdXJjZT10OnQmJk9iamVjdC5hc3NpZ24odGhpcyx0KSxpJiZPYmplY3QuYXNzaWduKHRoaXMsaSl9Y2xvbmVQcm90ZWN0ZWQodCl7c3VwZXIuY2xvbmVQcm90ZWN0ZWQodCksdC5idD10aGlzLmJ0LHQuZWxlbWVudD10aGlzLmxsLHQuaGw9dGhpcy5obC5OKCksdC5TYz10aGlzLlNjLHQubG89dGhpcy5sbyx0LmFzPXRoaXMuYXMsdC5hbD10aGlzLmFsLHQuTWM9dGhpcy5NYy5OKCksdC5OYz10aGlzLk5jfWFpKHQpe3QgaW4gSW1hZ2VTdHJldGNoP3RoaXMuaW1hZ2VTdHJldGNoPXQ6c3VwZXIuYWkodCl9dG9TdHJpbmcoKXtyZXR1cm5cIlBpY3R1cmUoXCIrdGhpcy5zb3VyY2UrXCIpI1wiK0dTZXQuZ3ModGhpcyl9Z2V0IENjKCl7cmV0dXJuKHRoaXMubCYxMDQ4NTc2KSE9PTB9c2V0IENjKHQpe3RoaXMuQ2MhPT10JiYodGhpcy5sPXRoaXMubF4xMDQ4NTc2KX1nZXQgWGEoKXtyZXR1cm4odGhpcy5sJjIwOTcxNTIpIT09MH1zZXQgWGEodCl7dGhpcy5YYSE9PXQmJih0aGlzLmw9dGhpcy5sXjIwOTcxNTIpfWdldCBnbigpe3JldHVybih0aGlzLmwmNDE5NDMwNCkhPT0wfXNldCBnbih0KXt0aGlzLmduIT09dCYmKHRoaXMubD10aGlzLmxeNDE5NDMwNCl9c3RhdGljIGNsZWFyQ2FjaGUodCl7dD09PXZvaWQgMCYmKHQ9XCJcIiksVS5pKHQsXCJzdHJpbmdcIixQaWN0dXJlLFwiY2xlYXJDYWNoZTp1cmxcIiksdCE9PVwiXCI/UGljdHVyZS5YcFt0XSYmKGRlbGV0ZSBQaWN0dXJlLlhwW3RdLFBpY3R1cmUuU2ItLSk6KFBpY3R1cmUuWHA9bmV3IFByb3BlcnR5Q29sbGVjdGlvbixQaWN0dXJlLlNiPTApfXN0YXRpYyBvTCh0LGkpe2kuaFR8fChpLk1iPWU9PntQaWN0dXJlLnNPKGksZSksdC5kZXNpcmVkU2l6ZS5pc1JlYWwoKXx8KHQucGUoITEpLHQudSgpKX0saS5QYj1lPT5QaWN0dXJlLm5PKGksZSksaS5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLGkuTWIpLGkuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsaS5QYiksaS5oVD0hMCl9c3RhdGljIHFSKHQpe3QuTWImJnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxvYWRcIix0Lk1iKSx0LlBiJiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLHQuUGIpLGRlbGV0ZSB0Lk1iLGRlbGV0ZSB0LlBiLGRlbGV0ZSB0LmhUfWdldCBlbGVtZW50KCl7cmV0dXJuIHRoaXMubGx9c2V0IGVsZW1lbnQodCl7Y29uc3QgaT10aGlzLmxsO2lmKHRoaXMuSGUoITApLGkhPT10KXt0aGlzLkNjPXQgaW5zdGFuY2VvZiBIVE1MQ2FudmFzRWxlbWVudDtjb25zdCBlPXQgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50O3QhPT1udWxsJiYhKGV8fHQgaW5zdGFuY2VvZiBIVE1MVmlkZW9FbGVtZW50fHx0aGlzLkNjKSYmVS5uKFwiUGljdHVyZS5lbGVtZW50IG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgSW1hZ2UsIENhbnZhcywgb3IgVmlkZW8sIG5vdDogXCIrdCk7Y29uc3Qgcz10aGlzLmRpYWdyYW07cyE9PW51bGwmJnMudFAodGhpcyksdGhpcy5sbD10LHQhPT1udWxsJiZlJiZ0Lm9zPT09dm9pZCAwJiYodC5vcz1uZXcgR1NldCkscyE9PW51bGwmJmUmJnMuXzIodGhpcyksdGhpcy50KFwiZWxlbWVudFwiLGksdCksdGhpcy5MKCl9fUdSKCl7Y29uc3QgdD10aGlzLmxsO2lmKHQ9PT1udWxsKXJldHVybjtjb25zdCBpPXRoaXMuZGVzaXJlZFNpemUuaXNSZWFsKCk7KHRoaXMuQ2N8fHQuY29tcGxldGU9PT0hMCkmJih0LnUwJiYodC5ZcCBpbnN0YW5jZW9mIEV2ZW50JiZ0aGlzLmFzIT09bnVsbD90aGlzLmFzKHRoaXMsdC5ZcCk6dC5nbj09PSEwJiYhdC5ZcCYmdGhpcy5hbCE9PW51bGwmJnQub04mJnRoaXMuYWwodGhpcyx0Lm9OKSksdC5nbj0hMCksdC5nbiYmaSYmdGhpcy5kaWFncmFtIT09bnVsbCYmdGhpcy5kaWFncmFtLld1LmFkZCh0aGlzKX1vTygpe2lmKHRoaXMubGw9PT1udWxsKXt0aGlzLlBjPSExO3JldHVybn1jb25zdCB0PW5ldyBDYW52YXNTdXJmYWNlKG51bGwpLmNpO3RyeXt0LmRyYXdJbWFnZSh0aGlzLmxsLDAsMCl9Y2F0Y2goaSl7RGVidWcmJnRoaXMuWGEmJlUubnQoaS50b1N0cmluZygpKSx0aGlzLlhhPSExfXRyeXt0LmdldEltYWdlRGF0YSgwLDAsMSwxKS5kYXRhWzNdJiYodGhpcy5QYz0hMSksdGhpcy5QYz0hMX1jYXRjaHt0aGlzLlBjPSEwfX1nZXQgc291cmNlKCl7cmV0dXJuIHRoaXMuYnR9c2V0IHNvdXJjZSh0KXtjb25zdCBpPXRoaXMuYnQ7aWYoaSE9PXQpe3RoaXMuSGUoITApLFUuaSh0LFwic3RyaW5nXCIsUGljdHVyZSxcInNvdXJjZVwiKSx0aGlzLmJ0PXQ7bGV0IGU9UGljdHVyZS5YcDtpZighRGlhZ3JhbS5pc1VzaW5nRE9NKCkpe3RoaXMudChcInNvdXJjZVwiLGksdCk7cmV0dXJufWxldCBzPW51bGw7aWYoZVt0XSE9PXZvaWQgMClzPWVbdF07ZWxzZSBpZih0IT09XCJcIil7UGljdHVyZS5TYj4zMCYmKFBpY3R1cmUuY2xlYXJDYWNoZSgpLGU9UGljdHVyZS5YcCkscz1VLmRzKFwiaW1nXCIpLHMudTA9ITAsUGljdHVyZS5vTCh0aGlzLHMpO2NvbnN0IG49dGhpcy5OYztuIT09bnVsbCYmKHMuY3Jvc3NPcmlnaW49bih0aGlzKSkscy5zcmM9dCxlW3RdPXMsUGljdHVyZS5TYisrfXRoaXMuZWxlbWVudD1zLHMhPT1udWxsJiZzLl9fZ29DYWNoZT09PXZvaWQgMCYmKHMuX19nb0NhY2hlPW5ldyBQaWN0dXJlQ2FjaGVBcnJheSksdGhpcy51KCksdGhpcy5MKCksdGhpcy50KFwic291cmNlXCIsaSx0KX19c3RhdGljIHNPKHQsaSl7dC5nbj0hMCx0LllwPSExO2xldCBlO2NvbnN0IHM9dC5vcy5jb3B5KCk7aWYocz09bnVsbClyZXR1cm47Y29uc3Qgbj1zLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7by5MKCk7Y29uc3Qgcj10LmdldEF0dHJpYnV0ZShcInNyY1wiKXx8XCJcIixsPW8udGguZ2V0KHIpO2lmKGw9PT1udWxsKWNvbnRpbnVlO2NvbnN0IGg9bC5sZW5ndGg7Zm9yKGxldCBmPTA7ZjxoO2YrKyllPWxbZl0sZS5kZXNpcmVkU2l6ZS5pc1JlYWwoKXx8by5XdS5hZGQoZSksZS5IZSghMCksby5yZXF1ZXN0VXBkYXRlKCksdC51MCYmKHQub049PT12b2lkIDAmJih0Lm9OPWkpLGUuYWwhPT1udWxsJiZlLmFsKGUsaSkpfXQub3MuY2xlYXIoKX1zdGF0aWMgbk8odCxpKXt0LllwPWk7bGV0IGU7Y29uc3Qgcz10Lm9zLmNvcHkoKTtpZihzPT1udWxsKXJldHVybjtjb25zdCBuPXMuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZSxyPXQuZ2V0QXR0cmlidXRlKFwic3JjXCIpfHxcIlwiLGw9by50aC5nZXQocik7aWYobD09PW51bGwpY29udGludWU7Y29uc3QgaD1sLmxlbmd0aCxmPVUubHQoKTtmb3IobGV0IGE9MDthPGg7YSsrKWYucHVzaChsW2FdKTtpZih0LnUwKWZvcihsZXQgYT0wO2E8aDthKyspZT1mW2FdLGUuYXMhPT1udWxsJiZlLmFzKGUsaSk7VS50dChmKX10Lm9zLmNsZWFyKCl9cmVsb2FkU291cmNlKCl7aWYodGhpcy5zb3VyY2U9PT1cIlwiKXJldHVybjtQaWN0dXJlLmNsZWFyQ2FjaGUodGhpcy5zb3VyY2UpO2NvbnN0IHQ9dGhpcy5zb3VyY2U7dGhpcy5zb3VyY2U9XCJcIix0aGlzLnNvdXJjZT10fXJlZHJhdygpe3RoaXMuTCgpLHRoaXMuSGUoITApfWdldCBzb3VyY2VDcm9zc09yaWdpbigpe3JldHVybiB0aGlzLk5jfXNldCBzb3VyY2VDcm9zc09yaWdpbih0KXtpZih0aGlzLk5jIT09dCYmKHQhPT1udWxsJiZVLlAodCxQaWN0dXJlLFwic291cmNlQ3Jvc3NPcmlnaW5cIiksdGhpcy5OYz10LHRoaXMuZWxlbWVudCE9PW51bGwpKXtjb25zdCBlPXRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7dD09PW51bGwmJnR5cGVvZiBlPT1cInN0cmluZ1wiP3RoaXMuZWxlbWVudC5jcm9zc09yaWdpbj1udWxsOnQhPT1udWxsJiYodGhpcy5lbGVtZW50LmNyb3NzT3JpZ2luPXQodGhpcykpLHRoaXMuZWxlbWVudC5zcmM9ZX19Z2V0IHNvdXJjZVJlY3QoKXtyZXR1cm4gdGhpcy5obH1zZXQgc291cmNlUmVjdCh0KXtjb25zdCBpPXRoaXMuaGw7aS5lcXVhbHModCl8fChVLmUodCxSZWN0LFBpY3R1cmUsXCJzb3VyY2VSZWN0XCIpLHQ9dC5OKCksdGhpcy5obD10LHRoaXMuTCgpLHRoaXMudChcInNvdXJjZVJlY3RcIixpLHQpKX1nZXQgaW1hZ2VTdHJldGNoKCl7cmV0dXJuIHRoaXMuU2N9c2V0IGltYWdlU3RyZXRjaCh0KXtjb25zdCBpPXRoaXMuU2M7aSE9PXQmJihVLmoodCxJbWFnZVN0cmV0Y2gsXCJJbWFnZVN0cmV0Y2hcIiksdGhpcy5TYz10LHRoaXMuTCgpLHRoaXMudChcImltYWdlU3RyZXRjaFwiLGksdCkpfWdldCBmbGlwKCl7cmV0dXJuIHRoaXMubG99c2V0IGZsaXAodCl7Y29uc3QgaT10aGlzLmxvO2khPT10JiYoVS5qKHQsRmxpcCxcIkZsaXBcIiksdGhpcy5sbz10LHRoaXMuTCgpLHRoaXMudChcImZsaXBcIixpLHQpKX1nZXQgaW1hZ2VBbGlnbm1lbnQoKXtyZXR1cm4gdGhpcy5NY31zZXQgaW1hZ2VBbGlnbm1lbnQodCl7VS5lKHQsU3BvdCxQaWN0dXJlLFwiaW1hZ2VBbGlnbm1lbnRcIik7Y29uc3QgaT10aGlzLk1jO2kuZXF1YWxzKHQpfHwodD10Lk4oKSx0aGlzLk1jPXQsdGhpcy5MKCksdGhpcy50KFwiaW1hZ2VBbGlnbm1lbnRcIixpLHQpKX1nZXQgZXJyb3JGdW5jdGlvbigpe3JldHVybiB0aGlzLmFzfXNldCBlcnJvckZ1bmN0aW9uKHQpe2NvbnN0IGk9dGhpcy5hcztpIT09dCYmKHQhPT1udWxsJiZVLlAodCxQaWN0dXJlLFwiZXJyb3JGdW5jdGlvblwiKSx0aGlzLmFzPXQsdGhpcy50KFwiZXJyb3JGdW5jdGlvblwiLGksdCkpfWdldCBzdWNjZXNzRnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hbH1zZXQgc3VjY2Vzc0Z1bmN0aW9uKHQpe2NvbnN0IGk9dGhpcy5hbDtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxQaWN0dXJlLFwic3VjY2Vzc0Z1bmN0aW9uXCIpLHRoaXMuYWw9dCx0aGlzLnQoXCJzdWNjZXNzRnVuY3Rpb25cIixpLHQpKX14aCh0LGkpe2NvbnN0IGU9dGhpcy5sbDtpZihlPT09bnVsbClyZXR1cm47Y29uc3Qgcz1lLmdldEF0dHJpYnV0ZShcInNyY1wiKTtpZihlIGluc3RhbmNlb2YgSFRNTEltYWdlRWxlbWVudCYmKHM9PT1udWxsfHxzPT09XCJcIil8fGUuWXAgaW5zdGFuY2VvZiBFdmVudCYmdCBpbnN0YW5jZW9mIENhbnZhc1N1cmZhY2VDb250ZXh0KXJldHVybjtjb25zdCBuPXQgaW5zdGFuY2VvZiBTVkdDb250ZXh0LG89dGhpcy5uYXR1cmFsQm91bmRzO2xldCByPTAsbD0wO2NvbnN0IGg9dGhpcy5DYztsZXQgZj1oPytlLndpZHRoOmUubmF0dXJhbFdpZHRoLGE9aD8rZS5oZWlnaHQ6ZS5uYXR1cmFsSGVpZ2h0O2lmKGY9PT12b2lkIDAmJmUudmlkZW9XaWR0aCYmKGY9ZS52aWRlb1dpZHRoKSxhPT09dm9pZCAwJiZlLnZpZGVvSGVpZ2h0JiYoYT1lLnZpZGVvSGVpZ2h0KSxmPT09MHx8YT09PTApcmV0dXJuO2NvbnN0IGM9Zix1PWE7dGhpcy5zb3VyY2VSZWN0LmlzUmVhbCgpJiYocj10aGlzLmhsLngsbD10aGlzLmhsLnksZj10aGlzLmhsLndpZHRoLGE9dGhpcy5obC5oZWlnaHQpO2xldCBkPWYsbT1hO2NvbnN0IGc9dGhpcy5TYyxwPXRoaXMuTWM7c3dpdGNoKGcpe2Nhc2UgMDppZih0aGlzLnNvdXJjZVJlY3QuaXNSZWFsKCkpYnJlYWs7ZD49by53aWR0aCYmKHI9citwLm9mZnNldFgrKGQqcC54LW8ud2lkdGgqcC54KSksbT49by5oZWlnaHQmJihsPWwrcC5vZmZzZXRZKyhtKnAueS1vLmhlaWdodCpwLnkpKSxmPU1hdGgubWluKG8ud2lkdGgsZCksYT1NYXRoLm1pbihvLmhlaWdodCxtKTticmVhaztjYXNlIDI6ZD1vLndpZHRoLG09by5oZWlnaHQ7YnJlYWs7Y2FzZSA2OmNhc2UgNzpsZXQgTD0wO2c9PT02PyhMPU1hdGgubWluKG8uaGVpZ2h0L20sby53aWR0aC9kKSxkKj1MLG0qPUwpOmc9PT03JiYoTD1NYXRoLm1heChvLmhlaWdodC9tLG8ud2lkdGgvZCksZCo9TCxtKj1MLGQ+PW8ud2lkdGgmJihyPShyK3Aub2Zmc2V0WCsoZCpwLngtby53aWR0aCpwLngpL2QpKmYpLG0+PW8uaGVpZ2h0JiYobD0obCtwLm9mZnNldFkrKG0qcC55LW8uaGVpZ2h0KnAueSkvbSkqYSksZio9MS8oZC9vLndpZHRoKSxhKj0xLyhtL28uaGVpZ2h0KSxkPW8ud2lkdGgsbT1vLmhlaWdodCk7YnJlYWt9Y29uc3Qgdz1mKmEseD10aGlzLmdldERvY3VtZW50U2NhbGUoKSppLnNjYWxlLGs9ZCp4LGI9bSp4LFM9aypiLE09dy9TLEE9ZS5fX2dvQ2FjaGU7bGV0IEM9bnVsbDtjb25zdCBQPVBpY3R1cmUuck87aWYoIW4pe2lmKGUuZ24mJkEhPT12b2lkIDAmJmM8OGUzJiZ1PDhlMyYmUz40JiZNPlAqUCl7QS5IdD09PW51bGwmJihBLmFUKDQsYyx1LGUpLEEuYVQoMTYsYyx1LGUpKTtjb25zdCBMPUEuSHQsRD1MLmxlbmd0aDtmb3IobGV0IEY9MDtGPEQmJkxbRl0uQWQqTFtGXS5BZDxNO0YrKylDPUxbRl19aWYoIWkucXUmJih0aGlzLlBjPT09bnVsbCYmdGhpcy5vTygpLHRoaXMuUGMpKXJldHVybn1jb25zdCBOPWQ8by53aWR0aD9wLm9mZnNldFgrKG8ud2lkdGgqcC54LWQqcC54KTowLFQ9bTxvLmhlaWdodD9wLm9mZnNldFkrKG8uaGVpZ2h0KnAueS1tKnAueSk6MDtzd2l0Y2godGhpcy5mbGlwKXtjYXNlIDA6YnJlYWs7Y2FzZSAyOnQudHJhbnNsYXRlKE1hdGgubWluKG8ud2lkdGgsZCksMCksdC5zY2FsZSgtMSwxKTticmVhaztjYXNlIDE6dC50cmFuc2xhdGUoMCxNYXRoLm1pbihvLmhlaWdodCxtKSksdC5zY2FsZSgxLC0xKTticmVhaztjYXNlIDM6dC50cmFuc2xhdGUoTWF0aC5taW4oby53aWR0aCxkKSxNYXRoLm1pbihvLmhlaWdodCxtKSksdC5zY2FsZSgtMSwtMSk7YnJlYWt9aWYodC5jb21taXRUcmFuc2Zvcm0oKSxpLmdldFJlbmRlcmluZ0hpbnQoXCJwaWN0dXJlUmF0aW9PcHRpbWl6YXRpb25cIikmJiFpLmxhJiZBIT09dm9pZCAwJiZDIT09bnVsbCYmQy5BZCE9PTEpe3Quc2F2ZSgpO2NvbnN0IEw9Qy5BZDt0cnl7dC5kcmF3SW1hZ2UoQy5idCxyL0wsbC9MLE1hdGgubWluKEMuYnQud2lkdGgsZi9MKSxNYXRoLm1pbihDLmJ0LmhlaWdodCxhL0wpLE4sVCxNYXRoLm1pbihvLndpZHRoLGQpLE1hdGgubWluKG8uaGVpZ2h0LG0pKSx0IGluc3RhbmNlb2YgU1ZHQ29udGV4dCYmKHRoaXMudGI9W3IvTCxsL0wsTWF0aC5taW4oQy5idC53aWR0aCxmL0wpLE1hdGgubWluKEMuYnQuaGVpZ2h0LGEvTCksTixULE1hdGgubWluKG8ud2lkdGgsZCksTWF0aC5taW4oby5oZWlnaHQsbSldKX1jYXRjaChEKXtEZWJ1ZyYmdGhpcy5YYSYmVS5udChELnRvU3RyaW5nKCkpLHRoaXMuWGE9ITF9dC5yZXN0b3JlKCl9ZWxzZSB0cnl7dC5kcmF3SW1hZ2UoZSxyLGwsZixhLE4sVCxNYXRoLm1pbihvLndpZHRoLGQpLE1hdGgubWluKG8uaGVpZ2h0LG0pKSx0IGluc3RhbmNlb2YgU1ZHQ29udGV4dCYmKHRoaXMudGI9W3IsbCxmLGEsTixULE1hdGgubWluKG8ud2lkdGgsZCksTWF0aC5taW4oby5oZWlnaHQsbSldKX1jYXRjaChMKXtEZWJ1ZyYmdGhpcy5YYSYmVS5udChMLnRvU3RyaW5nKCkpLHRoaXMuWGE9ITF9c3dpdGNoKHRoaXMuZmxpcCl7Y2FzZSAwOmJyZWFrO2Nhc2UgMjp0LnNjYWxlKC0xLDEpLHQudHJhbnNsYXRlKC1NYXRoLm1pbihvLndpZHRoLGQpLDApO2JyZWFrO2Nhc2UgMTp0LnNjYWxlKDEsLTEpLHQudHJhbnNsYXRlKDAsLU1hdGgubWluKG8uaGVpZ2h0LG0pKTticmVhaztjYXNlIDM6dC5zY2FsZSgtMSwtMSksdC50cmFuc2xhdGUoLU1hdGgubWluKG8ud2lkdGgsZCksLU1hdGgubWluKG8uaGVpZ2h0LG0pKTticmVha319Z2V0IG5hdHVyYWxCb3VuZHMoKXtyZXR1cm4gdGhpcy5xaX1lZCh0LGksZSxzKXtjb25zdCBuPXRoaXMuZGVzaXJlZFNpemUsbz10aGlzLnFzKCEwKSxyPXRoaXMubGwsbD10aGlzLkNjO2xldCBoPTAsZj0wOyhsfHwhdGhpcy5nbiYmciYmci5jb21wbGV0ZSkmJih0aGlzLmduPSEwKSxyPT09bnVsbD8oaXNGaW5pdGUobi53aWR0aCl8fCh0PWUpLGlzRmluaXRlKG4uaGVpZ2h0KXx8KGk9cykpOihoPWw/K3Iud2lkdGg6ci5uYXR1cmFsV2lkdGgsZj1sPytyLmhlaWdodDpyLm5hdHVyYWxIZWlnaHQpLCFpc0Zpbml0ZShuLndpZHRoKSYmbyE9PTImJm8hPT01P3IhPT1udWxsJiZ0aGlzLmduIT09ITEmJih0aGlzLnNvdXJjZVJlY3QuaXNSZWFsKCk/dD10aGlzLnNvdXJjZVJlY3Qud2lkdGg6dD1oKTooaXNGaW5pdGUodCl8fCh0aGlzLnNvdXJjZVJlY3QuaXNSZWFsKCk/dD10aGlzLnNvdXJjZVJlY3Qud2lkdGg6ciE9PW51bGwmJih0PWgpKSxlPTApLCFpc0Zpbml0ZShuLmhlaWdodCkmJm8hPT0yJiZvIT09ND9yIT09bnVsbCYmdGhpcy5nbiE9PSExJiYodGhpcy5zb3VyY2VSZWN0LmlzUmVhbCgpP2k9dGhpcy5zb3VyY2VSZWN0LmhlaWdodDppPWYpOihpc0Zpbml0ZShpKXx8KHRoaXMuc291cmNlUmVjdC5pc1JlYWwoKT9pPXRoaXMuc291cmNlUmVjdC5oZWlnaHQ6ciE9PW51bGwmJihpPWYpKSxzPTApLGlzRmluaXRlKG4ud2lkdGgpJiYodD1uLndpZHRoKSxpc0Zpbml0ZShuLmhlaWdodCkmJihpPW4uaGVpZ2h0KTtjb25zdCBhPXRoaXMubWF4U2l6ZSxjPXRoaXMubWluU2l6ZTtlPU1hdGgubWF4KGV8fDAsYy53aWR0aCkscz1NYXRoLm1heChzfHwwLGMuaGVpZ2h0KSx0PU1hdGgubWluKGEud2lkdGgsdCksaT1NYXRoLm1pbihhLmhlaWdodCxpKSx0PU1hdGgubWF4KGUsdCksaT1NYXRoLm1heChzLGkpLHIhPT1udWxsJiYhci5jb21wbGV0ZSYmKGlzRmluaXRlKHQpfHwodD0wKSxpc0Zpbml0ZShpKXx8KGk9MCkpLHRoaXMucWkuVm4odCxpKSx0aGlzLl9uKDAsMCx0LGkpfXloKHQsaSxlLHMpe3RoaXMuY29tbW9uQXJyYW5nZSh0LGksZSxzKX1zdGF0aWMgWHA9bmV3IFByb3BlcnR5Q29sbGVjdGlvbjtzdGF0aWMgU2I9MDtzdGF0aWMgck89NH1jbGFzcyBQaWN0dXJlQ2FjaGVBcnJheXtIdDtjb25zdHJ1Y3Rvcigpe3RoaXMuSHQ9bnVsbH1hVCh0LGksZSxzKXt0aGlzLkh0PT09bnVsbCYmKHRoaXMuSHQ9W10pO2NvbnN0IG49bmV3IENhbnZhc1N1cmZhY2UobnVsbCksbz1uLmNpLHI9MS90O2lmKG4ud2lkdGg9aS90LG4uaGVpZ2h0PWUvdCxuLndpZHRoPT09MHx8bi5oZWlnaHQ9PT0wKXJldHVybjtjb25zdCBsPW5ldyBQaWN0dXJlQ2FjaGVJbnN0YW5jZShuLkV0LHQpO2xldCBoPXMsZj0xO2lmKHRoaXMuSHQubGVuZ3RoPjApe2NvbnN0IGE9dGhpcy5IdFt0aGlzLkh0Lmxlbmd0aC0xXTtoPWEuYnQsZj1hLkFkfW8uc2V0VHJhbnNmb3JtKHIqZiwwLDAscipmLDAsMCksby5jb21taXRUcmFuc2Zvcm0oKSxvLmRyYXdJbWFnZShoLDAsMCksdGhpcy5IdC5wdXNoKGwpfX1jbGFzcyBQaWN0dXJlQ2FjaGVJbnN0YW5jZXtidDtBZDtjb25zdHJ1Y3Rvcih0LGkpe3RoaXMuYnQ9dCx0aGlzLkFkPWl9fWNsYXNzIEdlb1N0cmVhbXtOaTskZztjb25zdHJ1Y3Rvcigpe3RoaXMuJGc9bmV3IEdlb21ldHJ5LHRoaXMuTmk9bnVsbH1WaSh0KXt0IT09bnVsbD8odGhpcy4kZz10LHQuZmlndXJlcy5jbGVhcigpKTp0aGlzLiRnPW5ldyBHZW9tZXRyeSx0aGlzLk5pPW51bGx9Z3UodCxpLGUscyxuLG8pe2lmKHMhPT12b2lkIDAmJnM9PT0hMCl7Y29uc3Qgcj1uZXcgUGF0aFNlZ21lbnQoMSk7ci5lbmRYPXQsci5lbmRZPWksdGhpcy5OaS5zZWdtZW50cy5hZGQocil9ZWxzZSB0aGlzLk5pPW5ldyBQYXRoRmlndXJlLHRoaXMuTmkuc3RhcnRYPXQsdGhpcy5OaS5zdGFydFk9aSx0aGlzLk5pLmlzRmlsbGVkPWUsdGhpcy5OaS5pc0V2ZW5PZGQ9b3x8ITEsdGhpcy4kZy5maWd1cmVzLmFkZCh0aGlzLk5pKTtuIT09dm9pZCAwJiYodGhpcy5OaS5pc1NoYWRvd2VkPW4pfWRGKCl7Y29uc3QgdD10aGlzLk5pLnNlZ21lbnRzLmxlbmd0aDt0PjAmJnRoaXMuTmkuc2VnbWVudHMuZWx0KHQtMSkuY2xvc2UoKX1nRigpe3RoaXMuTmkuc2VnbWVudHMubGVuZ3RoPjAmJih0aGlzLk5pLmlzRmlsbGVkPSEwKX1tRih0KXt0aGlzLk5pLmlzU2hhZG93ZWQ9dH1JRSh0KXt0aGlzLk5pLmlzRXZlbk9kZD10fWZGKHQsaSxlKXtlPT09dm9pZCAwJiYoZT0hMSk7Y29uc3Qgcz1uZXcgUGF0aFNlZ21lbnQoMSk7cy5lbmRYPXQscy5lbmRZPWksZSYmcy5jbG9zZSgpLHRoaXMuTmkuc2VnbWVudHMuYWRkKHMpfWRyKHQsaSxlKXtlPT09dm9pZCAwJiYoZT0hMSk7Y29uc3Qgcz1uZXcgUGF0aFNlZ21lbnQoMik7cy5lbmRYPXQscy5lbmRZPWksZSYmcy5jbG9zZSgpLHRoaXMuTmkuc2VnbWVudHMuYWRkKHMpfWdyKHQsaSxlLHMsbixvLHIpe3I9PT12b2lkIDAmJihyPSExKTtjb25zdCBsPW5ldyBQYXRoU2VnbWVudCgzKTtsLnBvaW50MVg9dCxsLnBvaW50MVk9aSxsLnBvaW50Mlg9ZSxsLnBvaW50Mlk9cyxsLmVuZFg9bixsLmVuZFk9byxyJiZsLmNsb3NlKCksdGhpcy5OaS5zZWdtZW50cy5hZGQobCl9T3codCxpLGUscyxuKXtuPT09dm9pZCAwJiYobj0hMSk7Y29uc3Qgbz1uZXcgUGF0aFNlZ21lbnQoNCk7by5wb2ludDFYPXQsby5wb2ludDFZPWksby5lbmRYPWUsby5lbmRZPXMsbiYmby5jbG9zZSgpLHRoaXMuTmkuc2VnbWVudHMuYWRkKG8pfWNGKHQsaSxlLHMsbixvLHIpe289PT12b2lkIDAmJihvPTApLHI9PT12b2lkIDAmJihyPSExKTtjb25zdCBsPW5ldyBQYXRoU2VnbWVudCg1KTtsLnN0YXJ0QW5nbGU9dCxsLnN3ZWVwQW5nbGU9aSxsLmNlbnRlclg9ZSxsLmNlbnRlclk9cyxsLnJhZGl1c1g9bixvIT09MD9sLnJhZGl1c1k9bzpsLnJhZGl1c1k9bixyJiZsLmNsb3NlKCksdGhpcy5OaS5zZWdtZW50cy5hZGQobCl9dUYodCxpLGUscyxuLG8scixsKXtsPT09dm9pZCAwJiYobD0hMSk7Y29uc3QgaD1uZXcgUGF0aFNlZ21lbnQoNixvLHIsdCxpLGUscyxuKTtsJiZoLmNsb3NlKCksdGhpcy5OaS5zZWdtZW50cy5hZGQoaCl9c3RhdGljIHJOPW51bGw7c3RhdGljIFZDKHQpe2NvbnN0IGk9R2VvU3RyZWFtLnJOO2lmKGkhPT1udWxsKXJldHVybiBHZW9TdHJlYW0uck49bnVsbCxpLlZpKHQpLGk7e2NvbnN0IGU9bmV3IEdlb1N0cmVhbTtyZXR1cm4gZS5WaSh0KSxlfX1zdGF0aWMgekModCl7R2VvU3RyZWFtLnJOPXR9fXtjb25zdCB5PWZ1bmN0aW9uKG4sbyl7Y29uc3Qgcj1uLnRvTG93ZXJDYXNlKCksbD1HZW8ucm47bFtuXT1vLGxbcl09bn07eShcIlJlY3RhbmdsZVwiLChuLG8scik9Pntjb25zdCBsPVwiclwiK28rXCIsXCIrcjtsZXQgaD1HZW8uY3JbbF07cmV0dXJuIGghPT12b2lkIDB8fChoPW5ldyBHZW9tZXRyeSgyKSxoLmVuZFg9byxoLmVuZFk9cixHZW8udXI8R2VvLldnJiYoR2VvLmNyW2xdPWgsR2VvLnVyKyspKSxofSkseShcIlNxdWFyZVwiLChuLG8scik9Pntjb25zdCBsPVwic1wiK28rXCIsXCIrcjtsZXQgaD1HZW8uY3JbbF07cmV0dXJuIGghPT12b2lkIDB8fChoPW5ldyBHZW9tZXRyeSgyKSxoLmVuZFg9byxoLmVuZFk9cixoLmRlZmF1bHRTdHJldGNoPTYsR2VvLnVyPEdlby5XZyYmKEdlby5jcltsXT1oLEdlby51cisrKSksaH0pO2NvbnN0IHQ9KG4sbyxyLGwsaCk9PnsoaXNOYU4obCl8fGw8MCkmJihsPTUpLGlzTmFOKGgpJiYoaD0xNSk7Y29uc3QgZj1cInJyXCIrbytcIixcIityK1wiLFwiK2wrXCIsXCIraDtsZXQgYT1HZW8uY3JbZl07aWYoYSE9PXZvaWQgMClyZXR1cm4gYTtsZXQgYz1sOyhoJjEpPT09MT8oYz1NYXRoLm1pbihjLChoJjIpPT09Mj9vLzM6byksYz1NYXRoLm1pbihjLChoJjgpPT09OD9yLzM6cikpOmM9MDtjb25zdCB1PW5ldyBQYXRoRmlndXJlKGMsMCwhMCk7YT1uZXcgR2VvbWV0cnkoKS5hZGQodSk7Y29uc3QgZD1TcG90LlRvcExlZnQuY29weSgpLG09U3BvdC5Cb3R0b21SaWdodC5jb3B5KCk7aWYoKGgmMik9PT0yKXtsZXQgZz1sO2c9TWF0aC5taW4oZywoaCYxKT09PTE/by8zOm8pLGc9TWF0aC5taW4oZywoaCY0KT09PTQ/ci8zOnIpO2NvbnN0IHA9ZypHZW8uem47dS5hZGQobmV3IFBhdGhTZWdtZW50KDIsby1nLDApKS5hZGQobmV3IFBhdGhTZWdtZW50KDMsbyxnLG8tcCwwLG8scCkpLGQub2Zmc2V0WT1wLG0ub2Zmc2V0WD0tcH1lbHNlIHUuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sMCkpO2lmKChoJjQpPT09NCl7bGV0IGc9bDtnPU1hdGgubWluKGcsKGgmOCk9PT04P28vMzpvKSxnPU1hdGgubWluKGcsKGgmMik9PT0yP3IvMzpyKTtjb25zdCBwPWcqR2VvLnpuO3UuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sci1nKSkuYWRkKG5ldyBQYXRoU2VnbWVudCgzLG8tZyxyLG8sci1wLG8tcCxyKSksbS5vZmZzZXRYPS1wLG0ub2Zmc2V0WT0tcH1lbHNlIHUuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8scikpO2lmKChoJjgpPT09OCl7bGV0IGc9bDtnPU1hdGgubWluKGcsKGgmNCk9PT00P28vMzpvKSxnPU1hdGgubWluKGcsKGgmMSk9PT0xP3IvMzpyKTtjb25zdCBwPWcqR2VvLnpuO3UuYWRkKG5ldyBQYXRoU2VnbWVudCgyLGcscikpLmFkZChuZXcgUGF0aFNlZ21lbnQoMywwLHItZyxwLHIsMCxyLXApKSxkLm9mZnNldFg9cCxtLm9mZnNldFk9LXB9ZWxzZSB1LmFkZChuZXcgUGF0aFNlZ21lbnQoMiwwLHIpKTtpZigoaCYxKT09PTEpe2NvbnN0IGc9YypHZW8uem47dS5hZGQobmV3IFBhdGhTZWdtZW50KDIsMCxjKSkuYWRkKG5ldyBQYXRoU2VnbWVudCgzLGMsMCwwLGcsZywwKS5jbG9zZSgpKSxkLm9mZnNldFg9ZyxkLm9mZnNldFk9Z31lbHNlIHUuYWRkKG5ldyBQYXRoU2VnbWVudCgyLDAsMCkuY2xvc2UoKSk7cmV0dXJuIGEuc3BvdDE9ZCxhLnNwb3QyPW0sR2VvLnVyPEdlby5XZyYmKEdlby5jcltmXT1hLEdlby51cisrKSxhfTt5KFwiUm91bmRlZFJlY3RhbmdsZVwiLChuLG8scik9Pntjb25zdCBsPW4/bi5wYXJhbWV0ZXIxOk5hTixoPW4/bi5wYXJhbWV0ZXIyOk5hTjtyZXR1cm4gdChuLG8scixsLGgpfSkseShcIkJvcmRlclwiLFwiUm91bmRlZFJlY3RhbmdsZVwiKSx5KFwiUm91bmRlZFRvcFJlY3RhbmdsZVwiLChuLG8scik9Pntjb25zdCBsPW4/bi5wYXJhbWV0ZXIxOk5hTjtyZXR1cm4gdChuLG8scixsLDMpfSkseShcIlJvdW5kZWRCb3R0b21SZWN0YW5nbGVcIiwobixvLHIpPT57Y29uc3QgbD1uP24ucGFyYW1ldGVyMTpOYU47cmV0dXJuIHQobixvLHIsbCwxMil9KSx5KFwiUm91bmRlZExlZnRSZWN0YW5nbGVcIiwobixvLHIpPT57Y29uc3QgbD1uP24ucGFyYW1ldGVyMTpOYU47cmV0dXJuIHQobixvLHIsbCw5KX0pLHkoXCJSb3VuZGVkUmlnaHRSZWN0YW5nbGVcIiwobixvLHIpPT57Y29uc3QgbD1uP24ucGFyYW1ldGVyMTpOYU47cmV0dXJuIHQobixvLHIsbCw2KX0pLHkoXCJFbGxpcHNlXCIsKG4sbyxyKT0+e2NvbnN0IGw9XCJlXCIrbytcIixcIityO2xldCBoPUdlby5jcltsXTtyZXR1cm4gaCE9PXZvaWQgMHx8KGg9bmV3IEdlb21ldHJ5KDMpLGguZW5kWD1vLGguZW5kWT1yLGguc3BvdDE9U3BvdC52ayxoLnNwb3QyPVNwb3QuSmssR2VvLnVyPEdlby5XZyYmKEdlby5jcltsXT1oLEdlby51cisrKSksaH0pLHkoXCJDaXJjbGVcIiwobixvLHIpPT57Y29uc3QgbD1cImNcIitvK1wiLFwiK3I7bGV0IGg9R2VvLmNyW2xdO3JldHVybiBoIT09dm9pZCAwfHwoaD1uZXcgR2VvbWV0cnkoMyksaC5lbmRYPW8saC5lbmRZPXIsaC5zcG90MT1TcG90LnZrLGguc3BvdDI9U3BvdC5KayxoLmRlZmF1bHRTdHJldGNoPTYsR2VvLnVyPEdlby5XZyYmKEdlby5jcltsXT1oLEdlby51cisrKSksaH0pLHkoXCJUcmlhbmdsZVJpZ2h0XCIsKG4sbyxyKT0+bmV3IEdlb21ldHJ5KCkuYWRkKG5ldyBQYXRoRmlndXJlKDAsMCkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sLjUqcikpLmFkZChuZXcgUGF0aFNlZ21lbnQoMiwwLHIpLmNsb3NlKCkpKS5zZXRTcG90cygwLC4yNSwuNSwuNzUpKSx5KFwiVHJpYW5nbGVEb3duXCIsKG4sbyxyKT0+bmV3IEdlb21ldHJ5KCkuYWRkKG5ldyBQYXRoRmlndXJlKDAsMCkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sMCkpLmFkZChuZXcgUGF0aFNlZ21lbnQoMiwuNSpvLHIpLmNsb3NlKCkpKS5zZXRTcG90cyguMjUsMCwuNzUsLjUpKSx5KFwiVHJpYW5nbGVMZWZ0XCIsKG4sbyxyKT0+bmV3IEdlb21ldHJ5KCkuYWRkKG5ldyBQYXRoRmlndXJlKG8scikuYWRkKG5ldyBQYXRoU2VnbWVudCgyLDAsLjUqcikpLmFkZChuZXcgUGF0aFNlZ21lbnQoMixvLDApLmNsb3NlKCkpKS5zZXRTcG90cyguNSwuMjUsMSwuNzUpKSx5KFwiVHJpYW5nbGVVcFwiLChuLG8scik9Pm5ldyBHZW9tZXRyeSgpLmFkZChuZXcgUGF0aEZpZ3VyZShvLHIpLmFkZChuZXcgUGF0aFNlZ21lbnQoMiwwLHIpKS5hZGQobmV3IFBhdGhTZWdtZW50KDIsLjUqbywwKS5jbG9zZSgpKSkuc2V0U3BvdHMoLjI1LC41LC43NSwxKSkseShcIlRyaWFuZ2xlXCIsXCJUcmlhbmdsZVVwXCIpLHkoXCJEaWFtb25kXCIsKG4sbyxyKT0+bmV3IEdlb21ldHJ5KCkuYWRkKG5ldyBQYXRoRmlndXJlKC41Km8sMCkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLDAsLjUqcikpLmFkZChuZXcgUGF0aFNlZ21lbnQoMiwuNSpvLHIpKS5hZGQobmV3IFBhdGhTZWdtZW50KDIsbywuNSpyKS5jbG9zZSgpKSkuc2V0U3BvdHMoLjI1LC4yNSwuNzUsLjc1KSkseShcIkxpbmVIXCIsKG4sbyxyKT0+e2NvbnN0IGw9bmV3IEdlb21ldHJ5KDEpO3JldHVybiBsLnN0YXJ0WD0wLGwuc3RhcnRZPXIvMixsLmVuZFg9byxsLmVuZFk9ci8yLGx9KSx5KFwiTGluZVZcIiwobixvLHIpPT57Y29uc3QgbD1uZXcgR2VvbWV0cnkoMSk7cmV0dXJuIGwuc3RhcnRYPW8vMixsLnN0YXJ0WT0wLGwuZW5kWD1vLzIsbC5lbmRZPXIsbH0pLHkoXCJOb25lXCIsXCJSZWN0YW5nbGVcIikseShcIkJhckhcIixcIlJlY3RhbmdsZVwiKSx5KFwiQmFyVlwiLFwiUmVjdGFuZ2xlXCIpLHkoXCJNaW51c0xpbmVcIixcIkxpbmVIXCIpLHkoXCJQbHVzTGluZVwiLChuLG8scik9Pm5ldyBHZW9tZXRyeSgpLmFkZChuZXcgUGF0aEZpZ3VyZSgwLHIvMiwhMSkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sci8yKSkuYWRkKG5ldyBQYXRoU2VnbWVudCgxLG8vMiwwKSkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8vMixyKSkpKSx5KFwiWExpbmVcIiwobixvLHIpPT5uZXcgR2VvbWV0cnkoKS5hZGQobmV3IFBhdGhGaWd1cmUoMCxyLCExKS5hZGQobmV3IFBhdGhTZWdtZW50KDIsbywwKSkuYWRkKG5ldyBQYXRoU2VnbWVudCgxLDAsMCkpLmFkZChuZXcgUGF0aFNlZ21lbnQoMixvLHIpKSkpLHkoXCJMaW5lUmlnaHRcIiwobixvLHIpPT5uZXcgR2VvbWV0cnkoKS5hZGQobmV3IFBhdGhGaWd1cmUoLjI1Km8sMCwhMSkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLC43NSpvLC41KnIpKS5hZGQobmV3IFBhdGhTZWdtZW50KDIsLjI1Km8scikpKSkseShcIkxpbmVEb3duXCIsKG4sbyxyKT0+bmV3IEdlb21ldHJ5KCkuYWRkKG5ldyBQYXRoRmlndXJlKDAsLjI1KnIsITEpLmFkZChuZXcgUGF0aFNlZ21lbnQoMiwuNSpvLC43NSpyKSkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sLjI1KnIpKSkpLHkoXCJMaW5lTGVmdFwiLChuLG8scik9Pm5ldyBHZW9tZXRyeSgpLmFkZChuZXcgUGF0aEZpZ3VyZSguNzUqbywwLCExKS5hZGQobmV3IFBhdGhTZWdtZW50KDIsLjI1Km8sLjUqcikpLmFkZChuZXcgUGF0aFNlZ21lbnQoMiwuNzUqbyxyKSkpKSx5KFwiTGluZVVwXCIsKG4sbyxyKT0+bmV3IEdlb21ldHJ5KCkuYWRkKG5ldyBQYXRoRmlndXJlKDAsLjc1KnIsITEpLmFkZChuZXcgUGF0aFNlZ21lbnQoMiwuNSpvLC4yNSpyKSkuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sLjc1KnIpKSkpLHkoXCJDYXBzdWxlXCIsKG4sbyxyKT0+e2NvbnN0IGw9bmV3IEdlb21ldHJ5O2lmKG88cil7Y29uc3QgaD1vLzIsZj1uZXcgUGF0aEZpZ3VyZSgwLGgsITApO2wuYWRkKGYpLGYuYWRkKG5ldyBQYXRoU2VnbWVudCg1LDE4MCwxODAsaCxoLGgsaCkpLGYuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8sci1oKSksZi5hZGQobmV3IFBhdGhTZWdtZW50KDUsMCwxODAsaCxyLWgsaCxoKSksZi5hZGQobmV3IFBhdGhTZWdtZW50KDIsMCxoKSk7Y29uc3QgYT1pc0Zpbml0ZShuLnBhcmFtZXRlcjEpP24ucGFyYW1ldGVyMTpvKi4xNTY7cmV0dXJuIGwuc3BvdDE9bmV3IFNwb3QoMCwwLDAsYSksbC5zcG90Mj1uZXcgU3BvdCgxLDEsMCwtYSksbH1lbHNlIGlmKG8+cil7Y29uc3QgaD1yLzIsZj1uZXcgUGF0aEZpZ3VyZShoLDAsITApO2wuYWRkKGYpLGYuYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8taCwwKSksZi5hZGQobmV3IFBhdGhTZWdtZW50KDUsMjcwLDE4MCxvLWgsaCxoLGgpKSxmLmFkZChuZXcgUGF0aFNlZ21lbnQoMixoLHIpKSxmLmFkZChuZXcgUGF0aFNlZ21lbnQoNSw5MCwxODAsaCxoLGgsaCkpO2NvbnN0IGE9aXNGaW5pdGUobi5wYXJhbWV0ZXIxKT9uLnBhcmFtZXRlcjE6ciouMTU2O3JldHVybiBsLnNwb3QxPW5ldyBTcG90KDAsMCxhLDApLGwuc3BvdDI9bmV3IFNwb3QoMSwxLC1hLDApLGx9ZWxzZSByZXR1cm4gbC50eXBlPTMsbC5lbmRYPW8sbC5lbmRZPXIsbC5zcG90MT1TcG90LnZrLGwuc3BvdDI9U3BvdC5KayxsfSk7Y29uc3QgaT0obixvKT0+bmV3IFBhdGhGaWd1cmUobixvLCExLCExKSxlPShuLG8scik9Pm4uYWRkKG5ldyBQYXRoU2VnbWVudCgyLG8scikpLHM9KG4sbyxyKT0+bi5hZGQobmV3IFBhdGhTZWdtZW50KDEsbyxyKSk7eShcIkJvcmRlcnNcIiwobixvLHIpPT57bGV0IGw9bj9uLnBhcmFtZXRlcjE6TmFOO2lzTmFOKGwpP2w9MTA6bD1sJjE1O2NvbnN0IGg9bmV3IEdlb21ldHJ5O2xldCBmO3JldHVybiBsPT09MTA/KGY9aShvLDApLGUoZixvLHIpLHMoZiwwLHIpLGUoZiwwLDApKTpsPT09NT8oZj1pKDAsMCksZShmLG8sMCkscyhmLG8sciksZShmLDAscikpOmw9PT0xPyhmPWkoMCwwKSxlKGYsbywwKSxzKGYsbyxyKSk6bD09PTI/KGY9aShvLDApLGUoZixvLHIpKTpsPT09ND8oZj1pKG8sciksZShmLDAscikpOmw9PT04PyhmPWkoMCxyKSxlKGYsMCwwKSxzKGYsbyxyKSk6bD09PTM/KGY9aSgwLDApLGUoZixvLDApLGUoZixvLHIpKTpsPT09Nj8oZj1pKG8sMCksZShmLG8sciksZShmLDAscikpOmw9PT0xMj8oZj1pKG8sciksZShmLDAsciksZShmLDAsMCkpOmw9PT05PyhmPWkoMCxyKSxlKGYsMCwwKSxlKGYsbywwKSk6bD09PTc/KGY9aSgwLDApLGUoZixvLDApLGUoZixvLHIpLGUoZiwwLHIpKTpsPT09MTQ/KGY9aShvLDApLGUoZixvLHIpLGUoZiwwLHIpLGUoZiwwLDApKTpsPT09MTM/KGY9aShvLHIpLGUoZiwwLHIpLGUoZiwwLDApLGUoZixvLDApKTpsPT09MTE/KGY9aSgwLHIpLGUoZiwwLDApLGUoZixvLDApLGUoZixvLHIpKTpsPT09MTU/KGY9aSgwLDApLGUoZixvLDApLGUoZixvLHIpLGUoZiwwLHIpLGYuYWRkKG5ldyBQYXRoU2VnbWVudCgyLDAsMCkuY2xvc2UoKSkpOihmPWkoMCwwKSxzKGYsbyxyKSksaC5hZGQoZiksaH0pfUdlby5xZz17XCJcIjpcIlwiLFN0YW5kYXJkOlwiRjEgbSAwLDAgbCA4LDQgLTgsNCAyLC00IHpcIixCYWNrd2FyZDpcIkYxIG0gOCwwIGwgLTIsNCAyLDQgLTgsLTQgelwiLFRyaWFuZ2xlOlwiRjEgbSAwLDAgbCA4LDQuNjIgLTgsNC42MiB6XCIsQmFja3dhcmRUcmlhbmdsZTpcIkYxIG0gOCw0IGwgMCw0IC04LC00IDgsLTQgMCw0IHpcIixCb29tZXJhbmc6XCJGMSBtIDAsMCBsIDgsNCAtOCw0IDQsLTQgLTQsLTQgelwiLEJhY2t3YXJkQm9vbWVyYW5nOlwiRjEgbSA4LDAgbCAtOCw0IDgsNCAtNCwtNCA0LC00IHpcIixTaWRld2F5c1Y6XCJtIDAsMCBsIDgsNCAtOCw0IDAsLTEgNiwtMyAtNiwtMyAwLC0xIHpcIixCYWNrd2FyZFY6XCJtIDgsMCBsIC04LDQgOCw0IDAsLTEgLTYsLTMgNiwtMyAwLC0xIHpcIixPcGVuVHJpYW5nbGU6XCJtIDAsMCBsIDgsNCAtOCw0XCIsQmFja3dhcmRPcGVuVHJpYW5nbGU6XCJtIDgsMCBsIC04LDQgOCw0XCIsT3BlblRyaWFuZ2xlTGluZTpcIm0gMCwwIGwgOCw0IC04LDQgbSA4LjUsMCBsIDAsLThcIixCYWNrd2FyZE9wZW5UcmlhbmdsZUxpbmU6XCJtIDgsMCBsICAtOCw0IDgsNCBtIC04LjUsMCBsIDAsLThcIixPcGVuVHJpYW5nbGVUb3A6XCJtIDAsMCBsIDgsNCBtIDAsNFwiLEJhY2t3YXJkT3BlblRyaWFuZ2xlVG9wOlwibSA4LDAgbCAtOCw0IG0gMCw0XCIsT3BlblRyaWFuZ2xlQm90dG9tOlwibSAwLDggbCA4LC00XCIsQmFja3dhcmRPcGVuVHJpYW5nbGVCb3R0b206XCJtIDAsNCBsIDgsNFwiLEhhbGZUcmlhbmdsZVRvcDpcIkYxIG0gMCwwIGwgMCw0IDgsMCB6IG0gMCw4XCIsQmFja3dhcmRIYWxmVHJpYW5nbGVUb3A6XCJGMSBtIDgsMCBsIDAsNCAtOCwwIHogbSAwLDhcIixIYWxmVHJpYW5nbGVCb3R0b206XCJGMSBtIDAsNCBsIDAsNCA4LC00IHpcIixCYWNrd2FyZEhhbGZUcmlhbmdsZUJvdHRvbTpcIkYxIG0gOCw0IGwgMCw0IC04LC00IHpcIixGb3J3YXJkU2VtaUNpcmNsZTpcIm0gNCwwIGIgMjcwIDE4MCAwIDQgNFwiLEJhY2t3YXJkU2VtaUNpcmNsZTpcIm0gNCw4IGIgOTAgMTgwIDAgLTQgNFwiLEZlYXRoZXI6XCJtIDAsMCBsIDMsNCAtMyw0XCIsQmFja3dhcmRGZWF0aGVyOlwibSAzLDAgbCAtMyw0IDMsNFwiLERvdWJsZUZlYXRoZXJzOlwibSAwLDAgbCAzLDQgLTMsNCBtIDMsLTggbCAzLDQgLTMsNFwiLEJhY2t3YXJkRG91YmxlRmVhdGhlcnM6XCJtIDMsMCBsIC0zLDQgMyw0IG0gMywtOCBsIC0zLDQgMyw0XCIsVHJpcGxlRmVhdGhlcnM6XCJtIDAsMCBsIDMsNCAtMyw0IG0gMywtOCBsIDMsNCAtMyw0IG0gMywtOCBsIDMsNCAtMyw0XCIsQmFja3dhcmRUcmlwbGVGZWF0aGVyczpcIm0gMywwIGwgLTMsNCAzLDQgbSAzLC04IGwgLTMsNCAzLDQgbSAzLC04IGwgLTMsNCAzLDRcIixGb3J3YXJkU2xhc2g6XCJtIDAsOCBsIDUsLThcIixCYWNrU2xhc2g6XCJtIDAsMCBsIDUsOFwiLERvdWJsZUZvcndhcmRTbGFzaDpcIm0gMCw4IGwgNCwtOCBtIC0yLDggbCA0LC04XCIsRG91YmxlQmFja1NsYXNoOlwibSAwLDAgbCA0LDggbSAtMiwtOCBsIDQsOFwiLFRyaXBsZUZvcndhcmRTbGFzaDpcIm0gMCw4IGwgNCwtOCBtIC0yLDggbCA0LC04IG0gLTIsOCBsIDQsLThcIixUcmlwbGVCYWNrU2xhc2g6XCJtIDAsMCBsIDQsOCBtIC0yLC04IGwgNCw4IG0gLTIsLTggbCA0LDhcIixGb3JrOlwibSAwLDQgbCA4LDAgbSAtOCwwIGwgOCwtNCBtIC04LDQgbCA4LDRcIixCYWNrd2FyZEZvcms6XCJtIDgsNCBsIC04LDAgbSA4LDAgbCAtOCwtNCBtIDgsNCBsIC04LDRcIixMaW5lRm9yazpcIm0gMCwwIGwgMCw4IG0gMCwtNCBsIDgsMCBtIC04LDAgbCA4LC00IG0gLTgsNCBsIDgsNFwiLEJhY2t3YXJkTGluZUZvcms6XCJtIDgsNCBsIC04LDAgbSA4LDAgbCAtOCwtNCBtIDgsNCBsIC04LDQgbSA4LC04IGwgMCw4XCIsQ2lyY2xlRm9yazpcIkYxIG0gNiw0IGIgMCAzNjAgLTMgMCAzIHogbSAwLDAgbCA2LDAgbSAtNiwwIGwgNiwtNCBtIC02LDQgbCA2LDRcIixCYWNrd2FyZENpcmNsZUZvcms6XCJGMSBtIDAsNCBsIDYsMCBtIC02LC00IGwgNiw0IG0gLTYsNCBsIDYsLTQgbSA2LDAgYiAwIDM2MCAtMyAwIDNcIixDaXJjbGVMaW5lRm9yazpcIkYxIG0gNiw0IGIgMCAzNjAgLTMgMCAzIHogbSAxLC00IGwgMCw4IG0gMCwtNCBsIDYsMCBtIC02LDAgbCA2LC00IG0gLTYsNCBsIDYsNFwiLEJhY2t3YXJkQ2lyY2xlTGluZUZvcms6XCJGMSBtIDAsNCBsIDYsMCBtIC02LC00IGwgNiw0IG0gLTYsNCBsIDYsLTQgbSAwLC00IGwgMCw4IG0gNywtNCBiIDAgMzYwIC0zIDAgM1wiLENpcmNsZTpcIkYxIG0gOCw0IGIgMCAzNjAgLTQgMCA0IHpcIixCbG9jazpcIkYxIG0gMCwwIGwgMCw4IDgsMCAwLC04IHpcIixTdHJldGNoZWREaWFtb25kOlwiRjEgbSAwLDMgbCA1LC0zIDUsMyAtNSwzIC01LC0zIHpcIixEaWFtb25kOlwiRjEgbSAwLDQgbCA0LC00IDQsNCAtNCw0IC00LC00IHpcIixDaGV2cm9uOlwiRjEgbSAwLDAgbCA1LDAgMyw0IC0zLDQgLTUsMCAzLC00IC0zLC00IHpcIixTdHJldGNoZWRDaGV2cm9uOlwiRjEgbSAwLDAgbCA4LDAgMyw0IC0zLDQgLTgsMCAzLC00IC0zLC00IHpcIixOb3JtYWxBcnJvdzpcIkYxIG0gMCwyIGwgNCwwIDAsLTIgNCw0IC00LDQgMCwtMiAtNCwwIHpcIixYOlwibSAwLDAgbCA4LDggbSAwLC04IGwgLTgsOFwiLFRhaWxlZE5vcm1hbEFycm93OlwiRjEgbSAwLDAgbCAyLDAgMSwyIDMsMCAwLC0yIDIsNCAtMiw0IDAsLTIgLTMsMCAtMSwyIC0yLDAgMSwtNCAtMSwtNCB6XCIsRG91YmxlVHJpYW5nbGU6XCJGMSBtIDAsMCBsIDQsNCAtNCw0IDAsLTggeiAgbSA0LDAgbCA0LDQgLTQsNCAwLC04IHpcIixCaWdFbmRBcnJvdzpcIkYxIG0gMCwwIGwgNSwyIDAsLTIgMyw0IC0zLDQgMCwtMiAtNSwyIDAsLTggelwiLENvbmNhdmVUYWlsQXJyb3c6XCJGMSBtIDAsMiBoIDQgdiAtMiBsIDQsNCAtNCw0IHYgLTIgaCAtNCBsIDIsLTIgLTIsLTIgelwiLFJvdW5kZWRUcmlhbmdsZTpcIkYxIG0gMCwxIGEgMSwxIDAgMCAxIDEsLTEgbCA3LDMgYSAwLjUsMSAwIDAgMSAwLDIgbCAtNywzIGEgMSwxIDAgMCAxIC0xLC0xIGwgMCwtNiB6XCIsU2ltcGxlQXJyb3c6XCJGMSBtIDEsMiBsIC0xLC0yIDIsMCAxLDIgLTEsMiAtMiwwIDEsLTIgNSwwIDAsLTIgMiwyIC0yLDIgMCwtMiB6XCIsQWNjZWxlcmF0aW9uQXJyb3c6XCJGMSBtIDAsMCBsIDAsOCAwLjIsMCAwLC04IC0wLjIsMCB6IG0gMiwwIGwgMCw4IDEsMCAwLC04IC0xLDAgeiBtIDMsMCBsIDIsMCAyLDQgLTIsNCAtMiwwIDAsLTggelwiLEJveEFycm93OlwiRjEgbSAwLDAgbCA0LDAgMCwyIDIsMCAwLC0yIDIsNCAtMiw0IDAsLTIgLTIsMCAwLDIgLTQsMCAwLC04IHpcIixUcmlhbmdsZUxpbmU6XCJGMSBtIDgsNCBsIC04LC00IDAsOCA4LC00IHogbSAwLjUsNCBsIDAsLThcIixDaXJjbGVFbmRlZEFycm93OlwiRjEgbSAxMCw0IGwgLTIsLTMgMCwyIC0yLDAgMCwyIDIsMCAwLDIgMiwtMyB6IG0gLTQsMCBiIDAgMzYwIC0zIDAgMyB6XCIsRHluYW1pY1dpZHRoQXJyb3c6XCJGMSBtIDAsMyBsIDIsMCAyLC0xIDIsLTIgMiw0IC0yLDQgLTIsLTIgLTIsLTEgLTIsMCAwLC0yIHpcIixFcXVpbGlicml1bUFycm93OlwibSAwLDMgbCA4LDAgLTMsLTMgbSAzLDUgbCAtOCwwIDMsM1wiLEZhc3RGb3J3YXJkOlwiRjEgbSAwLDAgbCAzLjUsNCAwLC00IDMuNSw0IDAsLTQgMSwwIDAsOCAtMSwwIDAsLTQgLTMuNSw0IDAsLTQgLTMuNSw0IDAsLTggelwiLEtpdGU6XCJGMSBtIDAsNCBsIDIsLTQgNiw0IC02LDQgLTIsLTQgelwiLEhhbGZBcnJvd1RvcDpcIkYxIG0gMCwwIGwgNCw0IDQsMCAtOCwtNCB6IG0gMCw4XCIsSGFsZkFycm93Qm90dG9tOlwiRjEgbSAwLDggbCA0LC00IDQsMCAtOCw0IHpcIixPcHBvc2luZ0RpcmVjdGlvbkRvdWJsZUFycm93OlwiRjEgbSAwLDQgbCAyLC00IDAsMiA0LDAgMCwtMiAyLDQgLTIsNCAwLC0yIC00LDAgMCwyIC0yLC00IHpcIixQYXJ0aWFsRG91YmxlVHJpYW5nbGU6XCJGMSBtIDAsMCA0LDMgMCwtMyA0LDQgLTQsNCAwLC0zIC00LDMgMCwtOCB6XCIsTGluZUNpcmNsZTpcIkYxIG0gMCwwIGwgMCw4IG0gNyAtNCBiIDAgMzYwIC0zIDAgMyB6XCIsRG91YmxlTGluZUNpcmNsZTpcIkYxIG0gMCwwIGwgMCw4IG0gMiwtOCBsIDAsOCBtIDcgLTQgYiAwIDM2MCAtMyAwIDMgelwiLFRyaXBsZUxpbmVDaXJjbGU6XCJGMSBtIDAsMCBsIDAsOCBtIDIsLTggbCAwLDggbSAyLC04IGwgMCw4IG0gNyAtNCBiIDAgMzYwIC0zIDAgMyB6XCIsQ2lyY2xlTGluZTpcIkYxIG0gNiA0IGIgMCAzNjAgLTMgMCAzIHogbSAxLC00IGwgMCw4XCIsRGlhbW9uZENpcmNsZTpcIkYxIG0gOCw0IGwgLTQsNCAtNCwtNCA0LC00IDQsNCBtIDgsMCBiIDAgMzYwIC00IDAgNCB6XCIsUGx1c0NpcmNsZTpcIkYxIG0gOCw0IGIgMCAzNjAgLTQgMCA0IGwgLTggMCB6IG0gLTQgLTQgbCAwIDhcIixPcGVuUmlnaHRUcmlhbmdsZVRvcDpcIm0gOCwwIGwgMCw0IC04LDAgbSAwLDRcIixPcGVuUmlnaHRUcmlhbmdsZUJvdHRvbTpcIm0gOCw4IGwgMCwtNCAtOCwwXCIsTGluZTpcIm0gMCwwIGwgMCw4XCIsRG91YmxlTGluZTpcIm0gMCwwIGwgMCw4IG0gMiwwIGwgMCwtOFwiLFRyaXBsZUxpbmU6XCJtIDAsMCBsIDAsOCBtIDIsMCBsIDAsLTggbSAyLDAgbCAwLDhcIixQZW50YWdvbkFycm93OlwiRjEgbSA4LDQgbCAtNCwtNCAtNCwwIDAsOCA0LDAgNCwtNCB6XCJ9O3ZhciBMYXlvdXRDb25kaXRpb25zPSh5PT4oeVt5Lk5vbmU9MF09XCJOb25lXCIseVt5LkFkZGVkPTFdPVwiQWRkZWRcIix5W3kuUmVtb3ZlZD0yXT1cIlJlbW92ZWRcIix5W3kuU2hvd249NF09XCJTaG93blwiLHlbeS5IaWRkZW49OF09XCJIaWRkZW5cIix5W3kuTm9kZVNpemVkPTE2XT1cIk5vZGVTaXplZFwiLHlbeS5Hcm91cExheW91dD0zMl09XCJHcm91cExheW91dFwiLHlbeS5Ob2RlUmVwbGFjZWQ9NjRdPVwiTm9kZVJlcGxhY2VkXCIseVt5LlN0YW5kYXJkPTEyN109XCJTdGFuZGFyZFwiLHlbeS5BbGw9MTY3NzcyMTVdPVwiQWxsXCIseSkpKExheW91dENvbmRpdGlvbnN8fHt9KTtjbGFzcyBQYXJ0IGV4dGVuZHMgUGFuZWx7aztXbztKO2ZsO2NsO2pvO2ZpO3ZvO1BoO0pzO0pvO0xkO2kyO2ZUO0twO1VwO2NvbnN0cnVjdG9yKHQsaSl7bGV0IGU7dD09PXZvaWQgMHx8dCBpbnN0YW5jZW9mIFBhbmVsTGF5b3V0fHx0eXBlb2YgdD09XCJzdHJpbmdcIj9lPXQ6dCYmKGk9dCksc3VwZXIoZSksdGhpcy5rPTI0MDg5NTksdGhpcy5Xbz1cIlwiLHRoaXMuSj1udWxsLHRoaXMuZmw9XCJcIix0aGlzLmNsPW51bGwsdGhpcy5qbz1udWxsLHRoaXMuZmk9XCJcIix0aGlzLnZvPW51bGwsdGhpcy5QaD1udWxsLHRoaXMuSnM9bmV3IFBvaW50KE5hTixOYU4pLnAoKSx0aGlzLkpvPW51bGwsdGhpcy5MZD1OYU4sdGhpcy5pMj0tMSx0aGlzLmZUPW5ldyBSZWN0LHRoaXMuS3A9bnVsbCx0aGlzLlVwPU5hTixpJiZPYmplY3QuYXNzaWduKHRoaXMsaSl9Y2xvbmVQcm90ZWN0ZWQodCl7c3VwZXIuY2xvbmVQcm90ZWN0ZWQodCksdC5rPXRoaXMuayYtNDA5N3wxNjM4NHwzMjc2OCx0LldvPXRoaXMuV28sdGhpcy5KIT09bnVsbCYmKHRoaXMuSi5taT90Lko9dGhpcy5KOnQuSj10aGlzLkouY29weSgpKSx0LmZsPXRoaXMuZmwsdC5qbz1udWxsLHQuZmk9dGhpcy5maSx0LkpzLmModGhpcy5KcyksdC5MZD10aGlzLkxkfVhvKHQpe3N1cGVyLlhvKHQpLHQud2goKSx0LmNsPW51bGwsdC5Kbz1udWxsLHQuS3A9bnVsbH10b1N0cmluZygpe2xldCB0PVUuQm4odGhpcy5jb25zdHJ1Y3RvcikrXCIjXCIrR1NldC5ncyh0aGlzKTtyZXR1cm4gdGhpcy5kYXRhIT09bnVsbCYmKHQrPVwiKFwiK1UudG9TdHJpbmcodGhpcy5kYXRhKStcIilcIiksdH1zdGF0aWMgTGF5b3V0Tm9uZT0wO3N0YXRpYyBMYXlvdXRBZGRlZD0xO3N0YXRpYyBMYXlvdXRSZW1vdmVkPTI7c3RhdGljIExheW91dFNob3duPTQ7c3RhdGljIExheW91dEhpZGRlbj04O3N0YXRpYyBMYXlvdXROb2RlU2l6ZWQ9MTY7c3RhdGljIExheW91dEdyb3VwTGF5b3V0PTMyO3N0YXRpYyBMYXlvdXROb2RlUmVwbGFjZWQ9NjQ7c3RhdGljIExheW91dFN0YW5kYXJkPTEyNztzdGF0aWMgTGF5b3V0QWxsPTE2Nzc3MjE1O1ppKCl7cmV0dXJuIHRoaXMuSj09PW51bGw/dGhpcy5KPW5ldyBQYXJ0VGVtcGxhdGVTZXR0aW5nczp0aGlzLkoubWkmJih0aGlzLko9dGhpcy5KLmNvcHkoKSksdGhpcy5KfW1oKCl7c3VwZXIubWgoKSx0aGlzLkohPT1udWxsJiYodGhpcy5KLm1pPSEwKX10Yyh0LGksZSxzLG4sbyxyKXtjb25zdCBsPXRoaXMuZGlhZ3JhbTtsIT09bnVsbCYmKHQ9PT0zJiZpPT09XCJlbGVtZW50c1wiP24gaW5zdGFuY2VvZiBQYW5lbD9uLkpyKGg9PntsLnBhcnRNYW5hZ2VyLlcyKGgsbCl9KTpuIGluc3RhbmNlb2YgUGljdHVyZSYmbC5fMihuKTp0PT09NCYmaT09PVwiZWxlbWVudHNcIiYmKG4gaW5zdGFuY2VvZiBQYW5lbD9uLkpyKGg9PmwucGFydE1hbmFnZXIuajIoaCxsKSk6biBpbnN0YW5jZW9mIFBpY3R1cmUmJmwudFAobikpLGwucmFpc2VDaGFuZ2VkRXZlbnQodCxpLGUscyxuLG8scikpfXVwZGF0ZVRhcmdldEJpbmRpbmdzKHQpe2lmKHN1cGVyLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQpLHRoaXMuZGF0YT09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5ULmgsZT1pLmxlbmd0aDtmb3IobGV0IG49MDtuPGU7bisrKXtjb25zdCBvPWlbbl07byBpbnN0YW5jZW9mIFBhbmVsJiZvLkpyKHI9PntyLmRhdGEhPT1udWxsJiZyLnVwZGF0ZVRhcmdldEJpbmRpbmdzKCl9KX1jb25zdCBzPXRoaXMuYWRvcm5tZW50cztmb3IoO3MubmV4dCgpOylzLnZhbHVlLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQpfUJvKCl7aWYoc3VwZXIuQm8oKSx0aGlzLk9QKCkpe2NvbnN0IGk9dGhpcy5ULmgsZT1pLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPWlbc107biBpbnN0YW5jZW9mIFBhbmVsJiZuLkpyKG89Pm8uQm8oKSl9fWNvbnN0IHQ9dGhpcy5hZG9ybm1lbnRzO2Zvcig7dC5uZXh0KCk7KXQudmFsdWUuQm8oKX11cGRhdGVSZWxhdGlvbnNoaXBzRnJvbURhdGEoKXt0aGlzLmRhdGEhPT1udWxsJiZ0aGlzLmRpYWdyYW0/LnBhcnRNYW5hZ2VyLnVwZGF0ZVJlbGF0aW9uc2hpcHNGcm9tRGF0YSh0aGlzKX1nZXQga2V5KCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodCE9PW51bGwpcmV0dXJuIHQubW9kZWwuZ2V0S2V5Rm9yTm9kZURhdGEodGhpcy5kYXRhKX1nZXQgYWRvcm5tZW50cygpe3JldHVybiB0aGlzLmpvPT09bnVsbD9FbXB0eUl0ZXJhdG9yLmluc3RhbmNlOnRoaXMuam8uaXRlcmF0b3JWYWx1ZXN9ZmluZEFkb3JubWVudCh0KXtEZWJ1ZyYmVS5pKHQsXCJzdHJpbmdcIixQYXJ0LFwiZmluZEFkb3JubWVudDpjYXRlZ29yeVwiKTtjb25zdCBpPXRoaXMuam87cmV0dXJuIGk9PT1udWxsP251bGw6aS5nZXQodCl9YWRkQWRvcm5tZW50KHQsaSl7aWYoaT09PW51bGwpcmV0dXJuO0RlYnVnJiYoVS5pKHQsXCJzdHJpbmdcIixQYXJ0LFwiYWRkQWRvcm5tZW50OmNhdGVnb3J5XCIpLFUuZShpLEFkb3JubWVudCxQYXJ0LFwiYWRkQWRvcm5tZW50OmFkXCIpKTtsZXQgZT1udWxsLHM9dGhpcy5qbztpZihzIT09bnVsbCYmKGU9cy5nZXQodCkpLGUhPT1pKXtpZihlIT09bnVsbCl7Y29uc3Qgbz1lLmRpYWdyYW07byE9PW51bGwmJm8ucmVtb3ZlKGUpfXM9PT1udWxsJiYocz1uZXcgR01hcCx0aGlzLmpvPXMpLGkuV28hPT10JiYoaS5jYXRlZ29yeT10KSxzLnNldCh0LGkpO2NvbnN0IG49dGhpcy5kaWFncmFtO2lmKG4hPT1udWxsKXtuLmFkZChpKTtjb25zdCBvPWkuYWRvcm5lZE9iamVjdDtpZihvIT09bnVsbCl7Y29uc3Qgcj1vLmZpbmRCaW5kaW5nUGFuZWwoKTtyIT09bnVsbCYmKGkuZGF0YT1yLmRhdGEpfX19fXJlbW92ZUFkb3JubWVudCh0KXtEZWJ1ZyYmVS5pKHQsXCJzdHJpbmdcIixQYXJ0LFwicmVtb3ZlQWRvcm5tZW50OmNhdGVnb3J5XCIpO2NvbnN0IGk9dGhpcy5qbztpZihpPT09bnVsbClyZXR1cm47Y29uc3QgZT1pLmdldCh0KTtpZihlIT09bnVsbCl7Y29uc3Qgcz1lLmRpYWdyYW07cyE9PW51bGwmJihzLnJlbW92ZShlKSxlLmRhdGE9bnVsbCl9aS5kZWxldGUodCksaS5jb3VudD09PTAmJih0aGlzLmpvPW51bGwpfWNsZWFyQWRvcm5tZW50cygpe2NvbnN0IHQ9dGhpcy5qbztpZih0PT09bnVsbClyZXR1cm47Y29uc3QgaT1VLmx0KCksZT10Lml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBuPWUua2V5O2kucHVzaChuKX1jb25zdCBzPWkubGVuZ3RoO2ZvcihsZXQgbj0wO248cztuKyspdGhpcy5yZW1vdmVBZG9ybm1lbnQoaVtuXSk7VS50dChpKX11cGRhdGVBZG9ybm1lbnRzKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodD09PW51bGwpcmV0dXJuO3RoaXMubE8odCksdGhpcy5oTyh0KTtsZXQgaT10aGlzLmFkb3JubWVudHM7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtlLnUoKSxlLmhhc1BsYWNlaG9sZGVyKCkmJmUucGxhY2Vob2xkZXI/LnUoKX1mb3IoaT10aGlzLmFkb3JubWVudHM7aS5uZXh0KCk7KWkudmFsdWUudXBkYXRlVGFyZ2V0QmluZGluZ3MoKX1pbnZhbGlkYXRlQWRvcm5tZW50cygpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QhPT1udWxsJiYodC5vaCgpLHRoaXMuY1QoKSE9PSEwJiZ0aGlzLnVUKCEwKSl9ZTIoKXt0aGlzLmNUKCkhPT0hMSYmKHRoaXMudXBkYXRlQWRvcm5tZW50cygpLHRoaXMudVQoITEpKX1sTyh0KXtjb25zdCBpPVwiU2VsZWN0aW9uXCI7aWYodGhpcy5pc1NlbGVjdGVkJiZ0aGlzLnNlbGVjdGlvbkFkb3JuZWQpe2NvbnN0IGU9dGhpcy5zZWxlY3Rpb25PYmplY3Q7aWYoZSE9PW51bGwmJnRoaXMuYWN0dWFsQm91bmRzLmlzUmVhbCgpJiZ0aGlzLmlzVmlzaWJsZSgpJiZlLmlzVmlzaWJsZU9iamVjdCgpJiZlLmFjdHVhbEJvdW5kcy5pc1JlYWwoKSl7bGV0IHM9dGhpcy5maW5kQWRvcm5tZW50KGkpO2lmKHM9PT1udWxsKXtsZXQgbj10aGlzLnNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlO249PT1udWxsJiYodGhpcy5GbCgpP249dC5saW5rU2VsZWN0aW9uQWRvcm5tZW50VGVtcGxhdGU6dGhpcyBpbnN0YW5jZW9mIEdyb3VwP249dC5ncm91cFNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlOm49dC5ub2RlU2VsZWN0aW9uQWRvcm5tZW50VGVtcGxhdGUpLHM9bi5jb3B5KCkscyE9PW51bGwmJih0aGlzLkZsKCkmJnRoaXMuc2VsZWN0aW9uT2JqZWN0PT09dGhpcy5wYXRoJiYocy50eXBlPVBhbmVsLkxpbmspLHMuYWRvcm5lZE9iamVjdD1lKX1pZihzIT09bnVsbCl7cy50eXBlPT09UGFuZWwuTGluayYmcy51KCksdGhpcy5hZGRBZG9ybm1lbnQoaSxzKTtyZXR1cm59fX10aGlzLnJlbW92ZUFkb3JubWVudChpKX1oTyh0KXtjb25zdCBpPXRoaXM7dC50b29sTWFuYWdlci5tb3VzZURvd25Ub29scy5lYWNoKGU9PntlLmlzRW5hYmxlZCYmZS51cGRhdGVBZG9ybm1lbnRzKGkpfSksdC50b29sTWFuYWdlci51cGRhdGVBZG9ybm1lbnRzKGkpfV9NKHQpe3RoaXMudm89dCx0PT09bnVsbCYmdGhpcy5uSSgpfWdldCBsYXllcigpe3JldHVybiB0aGlzLnZvfWdldCBkaWFncmFtKCl7Y29uc3QgdD10aGlzLnZvO3JldHVybiB0PT1udWxsP251bGw6dC5kaWFncmFtfWdldCBsYXllck5hbWUoKXtyZXR1cm4gdGhpcy5mbH1zZXQgbGF5ZXJOYW1lKHQpe2NvbnN0IGk9dGhpcy5mbDtpZihpPT09dClyZXR1cm47RGVidWcmJlUuaSh0LFwic3RyaW5nXCIsUGFydCxcImxheWVyTmFtZVwiKTtsZXQgZT10aGlzLmRpYWdyYW07aWYoZSE9PW51bGwmJihlLmZpbmRMYXllcih0KT09PW51bGx8fGUucGFydE1hbmFnZXIuYWRkc1RvVGVtcG9yYXJ5TGF5ZXIpKXJldHVybjt0aGlzLmZsPXQsZSE9PW51bGwmJmUuaW52YWxpZGF0ZURvY3VtZW50Qm91bmRzKCksdGhpcy50KFwibGF5ZXJOYW1lXCIsaSx0KTtjb25zdCBzPXRoaXMubGF5ZXI7aWYocz09PW51bGx8fHMubmFtZT09PXR8fChlPXMuZGlhZ3JhbSxlPT09bnVsbCkpcmV0dXJuO2NvbnN0IG49ZS5maW5kTGF5ZXIodCk7aWYobj09PW51bGx8fG49PT1zKXJldHVybjtsZXQgbz1zLm5lKC0xLHRoaXMsITApO28+PTAmJmUucmFpc2VDaGFuZ2VkRXZlbnQoNCxcInBhcnRzXCIscyx0aGlzLG51bGwsbywhMCksbz1uLmlhKDk5OTk5OTk5LHRoaXMsITApLHMudmlzaWJsZSE9PW4udmlzaWJsZSYmdGhpcy5LaShuLnZpc2libGUpLG8+PTAmJmUucmFpc2VDaGFuZ2VkRXZlbnQoMyxcInBhcnRzXCIsbixudWxsLHRoaXMsITAsbyk7Y29uc3Qgcj10aGlzLmxheWVyQ2hhbmdlZDtpZihyPT09bnVsbClyZXR1cm47Y29uc3QgbD1lLkg7ZS5IPSEwLHIodGhpcyxzLG4pLGUuSD1sfWdldCBsYXllckNoYW5nZWQoKXtyZXR1cm4gdGhpcy5KIT09bnVsbD90aGlzLkouR3A6bnVsbH1zZXQgbGF5ZXJDaGFuZ2VkKHQpe2NvbnN0IGk9dGhpcy5sYXllckNoYW5nZWQ7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsUGFydCxcImxheWVyQ2hhbmdlZFwiKSx0aGlzLlppKCkuR3A9dCx0aGlzLnQoXCJsYXllckNoYW5nZWRcIixpLHQpKX1nZXQgek9yZGVyKCl7cmV0dXJuIHRoaXMuTGR9c2V0IHpPcmRlcih0KXtjb25zdCBpPXRoaXMuTGQ7aWYoaT09PXQpcmV0dXJuO0RlYnVnJiZVLmkodCxcIm51bWJlclwiLFBhcnQsXCJ6T3JkZXJcIiksdGhpcy5MZD10O2NvbnN0IGU9dGhpcy5sYXllcjtlIT09bnVsbCYmZS5GeCgtMSx0aGlzKSx0aGlzLnQoXCJ6T3JkZXJcIixpLHQpO2NvbnN0IHM9dGhpcy5kaWFncmFtO3MhPT1udWxsJiZzLkwoKX1hTygpe2NvbnN0IHQ9dGhpcy5sYXllcjt0IT09bnVsbCYmdC5GeCgtMSx0aGlzKX1OYigpe2lmKHRoaXMuaGgoKSE9PSExKXJldHVybjt0aGlzLmxOKCEwKSx0aGlzLnNjKCk7Y29uc3QgdD10aGlzLmRpYWdyYW07dCE9PW51bGwmJih0LmwwKHRoaXMpLHQucmVxdWVzdFVwZGF0ZSgpKX1kVCgpe2lmKHRoaXMua3w9MjA5NzE1Mix0aGlzLmhoKCk9PT0hMSlyZXR1cm47Y29uc3QgdD10aGlzLnBvc2l0aW9uLGk9dGhpcy5sb2NhdGlvbjsoIWkuaXNSZWFsKCl8fCF0LmlzUmVhbCgpKSYmdGhpcy5nVCh0LGkpO2NvbnN0IGU9dGhpcy5EaSxzPVJlY3QuYSgpLmMoZSk7ZS5BdCgpLGUueD10LngsZS55PXQueSxlLnAoKSx0aGlzLnNkKHMsZSksUmVjdC5vKHMpLHRoaXMubE4oITEpLHRoaXMuc2MoKX1fbih0LGksZSxzKXtjb25zdCBuPXRoaXMubGU7bi5zKHQsaSxlLHMpLHRoaXMuU2k9PT1udWxsJiYodGhpcy5TaT1uZXcgVHJhbnNmb3JtKTtjb25zdCBvPXRoaXMuU2k7by5WaSgpLHRoaXMuazAobyx0LGksZSxzKSx0aGlzLlNpPW8sby4kaygpfHxvLllnKG4pfWswKHQsaSxlLHMsbil7aWYodGhpcy5vdCE9PTEmJnQub3QodGhpcy5vdCksdGhpcy5qdD09PTApcmV0dXJuO2xldCBvPVNwb3QuQ2VudGVyO3RoaXMubG9jYXRpb25TcG90LmlzU3BvdCgpJiYobz10aGlzLmxvY2F0aW9uU3BvdCk7Y29uc3Qgcj1Qb2ludC5hKCk7aWYodGhpcy5sb2NhdGlvbk9iamVjdCE9PXRoaXMpe2NvbnN0IGw9dGhpcy5sb2NhdGlvbk9iamVjdCxoPWwubmF0dXJhbEJvdW5kcztyLnNldFNwb3QoaC54LGgueSxoLndpZHRoLGguaGVpZ2h0LG8pLGwuU2khPT1udWxsJiZsLlNpLmt0KHIpLHIub2Zmc2V0KC1sLm1lYXN1cmVkQm91bmRzLngsLWwubWVhc3VyZWRCb3VuZHMueSk7bGV0IGY9bC5wYW5lbDtmb3IoO2YhPT1udWxsJiZmIT09dGhpczspZi5TaSE9PW51bGwmJmYuU2kua3Qociksci5vZmZzZXQoLWYubWVhc3VyZWRCb3VuZHMueCwtZi5tZWFzdXJlZEJvdW5kcy55KSxmPWYucGFuZWx9ZWxzZSByLnNldFNwb3QoaSxlLHMsbixvKTt0Lm1zKHRoaXMuanQsci54LHIueSksUG9pbnQubyhyKX1nZXQgbG9jYXRpb25PYmplY3QoKXtpZih0aGlzLkpvPT09bnVsbClpZih0aGlzIGluc3RhbmNlb2YgQWRvcm5tZW50JiZ0aGlzLnR5cGUhPT1QYW5lbC5MaW5rJiZ0aGlzLmhhc1BsYWNlaG9sZGVyKCkpdGhpcy5Kbz10aGlzLnBsYWNlaG9sZGVyO2Vsc2V7Y29uc3QgdD10aGlzLmxvY2F0aW9uT2JqZWN0TmFtZTtpZih0IT09XCJcIil7Y29uc3QgaT10aGlzLmZpbmRPYmplY3QodCk7aSE9PW51bGw/dGhpcy5Kbz1pOnRoaXMuSm89dGhpc31lbHNlIHRoaXMuSm89dGhpc31yZXR1cm4gdGhpcy5Kbz8udmlzaWJsZT90aGlzLkpvOnRoaXN9Z2V0IG1pbkxvY2F0aW9uKCl7cmV0dXJuIHRoaXMuSiE9PW51bGw/dGhpcy5KLkhwOlBvaW50LnhDfXNldCBtaW5Mb2NhdGlvbih0KXtjb25zdCBpPXRoaXMubWluTG9jYXRpb247aS5lcXVhbHModCl8fChEZWJ1ZyYmVS5lKHQsUG9pbnQsUGFydCxcIm1pbkxvY2F0aW9uXCIpLHQ9dC5OKCksdGhpcy5aaSgpLkhwPXQsdGhpcy50KFwibWluTG9jYXRpb25cIixpLHQpKX1nZXQgbWF4TG9jYXRpb24oKXtyZXR1cm4gdGhpcy5KIT09bnVsbD90aGlzLkoucXA6UG9pbnQuYkN9c2V0IG1heExvY2F0aW9uKHQpe2NvbnN0IGk9dGhpcy5tYXhMb2NhdGlvbjtpLmVxdWFscyh0KXx8KERlYnVnJiZVLmUodCxQb2ludCxQYXJ0LFwibWF4TG9jYXRpb25cIiksdD10Lk4oKSx0aGlzLlppKCkucXA9dCx0aGlzLnQoXCJtYXhMb2NhdGlvblwiLGksdCkpfWdldCBsb2NhdGlvbk9iamVjdE5hbWUoKXtyZXR1cm4gdGhpcy5KIT09bnVsbD90aGlzLkouV3A6XCJcIn1zZXQgbG9jYXRpb25PYmplY3ROYW1lKHQpe2NvbnN0IGk9dGhpcy5sb2NhdGlvbk9iamVjdE5hbWU7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJzdHJpbmdcIixQYXJ0LFwibG9jYXRpb25PYmplY3ROYW1lXCIpLHRoaXMuWmkoKS5XcD10LHRoaXMuSm89bnVsbCx0aGlzLnUoKSx0aGlzLnQoXCJsb2NhdGlvbk9iamVjdE5hbWVcIixpLHQpKX1nZXQgbG9jYXRpb25TcG90KCl7cmV0dXJuIHRoaXMuSiE9PW51bGw/dGhpcy5KLmpwOlNwb3QuVG9wTGVmdH1zZXQgbG9jYXRpb25TcG90KHQpe2NvbnN0IGk9dGhpcy5sb2NhdGlvblNwb3Q7aS5lcXVhbHModCl8fChEZWJ1ZyYmKFUuZSh0LFNwb3QsUGFydCxcImxvY2F0aW9uU3BvdFwiKSx0LmlzU3BvdCgpfHxVLm4oXCJQYXJ0LmxvY2F0aW9uU3BvdCBtdXN0IGJlIGEgc3BlY2lmaWMgU3BvdCB2YWx1ZSwgbm90OiBcIit0KSksdD10Lk4oKSx0aGlzLlppKCkuanA9dCx0aGlzLnUoKSx0aGlzLnQoXCJsb2NhdGlvblNwb3RcIixpLHQpKX1tb3ZlKHQsaSl7aT09PSEwP3RoaXMubG9jYXRpb249dDp0aGlzLnBvc2l0aW9uPXR9bW92ZVRvKHQsaSxlKXtjb25zdCBzPVBvaW50LksodCxpKTt0aGlzLm1vdmUocyxlKSxQb2ludC5vKHMpfWlzVmlzaWJsZSgpe2lmKCF0aGlzLnZpc2libGUpcmV0dXJuITE7Y29uc3QgdD10aGlzLmxheWVyO2lmKHQhPT1udWxsKXtpZighdC52aXNpYmxlKXJldHVybiExO2NvbnN0IGU9dC5kaWFncmFtO2lmKGUhPT1udWxsJiZlLmFuaW1hdGlvbk1hbmFnZXIueHgodGhpcykpcmV0dXJuITB9Y29uc3QgaT10aGlzLmNvbnRhaW5pbmdHcm91cDtyZXR1cm4hKGkhPT1udWxsJiYoIWkuaXNTdWJHcmFwaEV4cGFuZGVkfHwhaS5pc1Zpc2libGUoKSkpfUtpKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtO3Q/KHRoaXMuaW52YWxpZGF0ZUxheW91dCg0KSx0aGlzLmludmFsaWRhdGVBZG9ybm1lbnRzKCksaSE9PW51bGwmJmkubDAodGhpcykpOih0aGlzLmludmFsaWRhdGVMYXlvdXQoOCksdGhpcy5jbGVhckFkb3JubWVudHMoKSksdGhpcy53aCgpLGkhPT1udWxsJiYoaS5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKSxpLkwoKSl9ZmluZE9iamVjdCh0KXtpZih0aGlzLm5hbWU9PT10KXJldHVybiB0aGlzO2xldCBpPXRoaXMuS3A7aWYoaT09PW51bGwmJih0aGlzLktwPWk9bmV3IEdNYXApLGkuZ2V0KHQpIT09bnVsbClyZXR1cm4gaS5nZXQodCk7Y29uc3QgZT1zdXBlci5maW5kT2JqZWN0KHQpO3JldHVybiBlIT09bnVsbD8oaS5zZXQodCxlKSxlKTooaS5zZXQodCxudWxsKSxudWxsKX1PMCgpe3RoaXMuS3A9bnVsbH1nZXRSZWxhdGl2ZVBvaW50KHQsaSxlKXtlPT09dm9pZCAwJiYoZT1uZXcgUG9pbnQpO2NvbnN0IHM9aS5pc05vU3BvdCgpP1Nwb3QuQ2VudGVyOmksbj10Lm5hdHVyYWxCb3VuZHM7aWYoZS5zKG4ud2lkdGgqcy54K3Mub2Zmc2V0WCxuLmhlaWdodCpzLnkrcy5vZmZzZXRZKSx0PT09bnVsbHx8dD09PXRoaXMpcmV0dXJuIGU7dC5GLmt0KGUpO2xldCBvPXQucGFuZWw7Zm9yKDtvIT09bnVsbCYmbyE9PXRoaXM7KW8uRi5rdChlKSxvPW8ucGFuZWw7cmV0dXJuIHRoaXMuU2khPT1udWxsJiZ0aGlzLlNpLmt0KGUpLGUub2Zmc2V0KC10aGlzLmxlLngsLXRoaXMubGUueSksZX1nZXREb2N1bWVudEJvdW5kcyh0KXtyZXR1cm4gdD09PXZvaWQgMCYmKHQ9bmV3IFJlY3QpLHQuYyh0aGlzLmFjdHVhbEJvdW5kcyl9ZW5zdXJlQm91bmRzKCl7dGhpcy5kdCgxLzAsMS8wKSx0aGlzLkd0KCl9S0wodCl7Y29uc3QgaT10aGlzLmxvY2F0aW9uU3BvdCxlPXRoaXMubG9jYXRpb25PYmplY3Q7bGV0IHM9ZS5uYXR1cmFsQm91bmRzO3MuaXNSZWFsKCl8fChzPVJlY3QuemcpO2NvbnN0IG49ZSBpbnN0YW5jZW9mIFNoYXBlP2Uuc3Ryb2tlV2lkdGg6MDtpZih0LnNldFNwb3QoMCwwLHMud2lkdGgrbixzLmhlaWdodCtuLGkpLGUhPT10aGlzKXt0Lm9mZnNldCgtbi8yLC1uLzIpLGUuRi5rdCh0KTtsZXQgbz1lLnBhbmVsO2Zvcig7byE9PW51bGwmJm8hPT10aGlzOylvLkYua3QodCksbz1vLnBhbmVsfXJldHVybiB0aGlzLlNpIT09bnVsbCYmdGhpcy5TaS5rdCh0KSx0Lm9mZnNldCgtdGhpcy5sZS54LC10aGlzLmxlLnkpLHR9dGEodCxpKXtjb25zdCBlPWk9PT12b2lkIDA/dGhpcy5mVDppLHM9dGhpcy5mTygpLG49cyoyO2lmKCF0aGlzLmlzU2hhZG93ZWQpcmV0dXJuIGUucyh0LngtMS1zLHQueS0xLXMsdC53aWR0aCsyK24sdC5oZWlnaHQrMituKSxlO2xldCBvPXQueCxyPXQueSxsPXQud2lkdGgsaD10LmhlaWdodDtjb25zdCBmPXRoaXMuc2hhZG93Qmx1cixhPXRoaXMuc2hhZG93T2Zmc2V0O3JldHVybiBsKz1mLGgrPWYsby09Zi8yLHItPWYvMixhLng+MD9sKz1hLng6KG8rPWEueCxsLT1hLngpLGEueT4wP2grPWEueToocis9YS55LGgtPWEueSksZS5zKG8tMSxyLTEsbCsyLGgrMiksZX1XSSgpe3JldHVybiB0aGlzLnR5cGU9PT1QYW5lbC5MaW5rJiZ0aGlzIGluc3RhbmNlb2YgQWRvcm5tZW50JiZ0aGlzLmNhdGVnb3J5PT09XCJTZWxlY3Rpb25cIiYmdGhpcy5hZG9ybmVkT2JqZWN0IGluc3RhbmNlb2YgU2hhcGUmJnRoaXMuYWRvcm5lZFBhcnQuZmluZE1haW5FbGVtZW50KCk9PT10aGlzLmFkb3JuZWRPYmplY3Q/dGhpcy5hZG9ybmVkT2JqZWN0LnN0cm9rZVdpZHRoOjB9Zk8oKXtyZXR1cm4gaXNOYU4odGhpcy5VcCkmJih0aGlzLlVwPXRoaXMudkwoKSksdGhpcy5VcH1wYygpe3RoaXMuVXA9TmFOfUd0KCl7aWYodGhpcy5ucygpPT09ITEpe3RoaXMuZFQoKTtyZXR1cm59dGhpcy50byghMSk7Y29uc3QgdD10aGlzLkRpLGk9UmVjdC5hKCk7aS5jKHQpO2NvbnN0IGU9dGhpcy5EbCgpO3RoaXMueWgoMCwwLHRoaXMubGUud2lkdGgsdGhpcy5sZS5oZWlnaHQpO2NvbnN0IHM9dGhpcy5wb3NpdGlvbjt0aGlzLmdUKHMsdGhpcy5sb2NhdGlvbiksdC5BdCgpLHQueD1zLngsdC55PXMueSx0LnAoKSx0aGlzLnNkKGksdCksaS5lcXVhbHModCk/dGhpcy5rcyhlKTp0aGlzLkNlKCkmJighR2VvLmcoaS53aWR0aCx0LndpZHRoKXx8IUdlby5nKGkuaGVpZ2h0LHQuaGVpZ2h0KSkmJnRoaXMuaTI+PTAmJnRoaXMuaW52YWxpZGF0ZUxheW91dCgxNiksUmVjdC5vKGkpLHRoaXMubE4oITEpfXNkKHQsaSl7Y29uc3QgZT10aGlzLmRpYWdyYW07aWYoZT09PW51bGwpcmV0dXJuO2xldCBzPSExO2lmKGUucmE9PT0hMSYmdC5pc1JlYWwoKSl7Y29uc3Qgbj1SZWN0LmEoKTtuLmMoZS5kb2N1bWVudEJvdW5kcyksbi5zdWJ0cmFjdE1hcmdpbihlLnBhZGRpbmcpLHQueD5uLngmJnQueT5uLnkmJnQucmlnaHQ8bi5yaWdodCYmdC5ib3R0b208bi5ib3R0b20mJmkueD5uLngmJmkueT5uLnkmJmkucmlnaHQ8bi5yaWdodCYmaS5ib3R0b208bi5ib3R0b20mJihzPSEwKSxSZWN0Lm8obil9KHRoaXMuY08oKT09PSEwfHwhdC5lcXVhbHMoaSkpJiZ0aGlzLkpBKHMsZSksZS5MKCksISghdC5pc1JlYWwoKSYmIWkuaXNSZWFsKCl8fHQuZXF1YWxzQXBwcm94Q2xvc2UoaSkpJiYodGhpcyBpbnN0YW5jZW9mIE5vZGUmJiFlLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcmJnRoaXMuaW52YWxpZGF0ZUNvbm5lY3RlZExpbmtzKCksdGhpcy53aCgpKX1nZXQgbG9jYXRpb24oKXtyZXR1cm4gdGhpcy5Kc31zZXQgbG9jYXRpb24odCl7RGVidWcmJlUuZSh0LFBvaW50LFBhcnQsXCJsb2NhdGlvblwiKTtjb25zdCBpPXQueCxlPXQueSxzPXRoaXMuSnM7KHMueCE9PWkmJighaXNOYU4ocy54KXx8IWlzTmFOKGkpKXx8cy55IT09ZSYmKCFpc05hTihzLnkpfHwhaXNOYU4oZSkpKSYmKHQ9dC5jb3B5KCksdGhpcy51Tyh0LHMpJiZ0aGlzLnQoXCJsb2NhdGlvblwiLHMsdC5jb3B5KCkpKX11Tyh0LGkpe2lmKHRoaXMuRmwoKSlyZXR1cm4hMTtpZih0aGlzLkpzPXQsdGhpcy5rfD0yMDk3MTUyLHRoaXMubnMoKT09PSExKXt0aGlzLk5iKCk7Y29uc3QgZT10aGlzLmd0O2lmKGUuaXNSZWFsKCkpe2NvbnN0IHM9dGhpcy5kaWFncmFtO2lmKHM9PT1udWxsfHxzLmFuaW1hdGlvbk1hbmFnZXIuaXNUaWNraW5nfHwhcy51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nKXtjb25zdCBuPWUuY29weSgpO2UucyhlLngrKHQueC1pLngpLGUueSsodC55LWkueSkpLHRoaXMubVQocyxlLG4ueCxuLnkpLHRoaXMudChcInBvc2l0aW9uXCIsbixlLmNvcHkoKSl9fX1yZXR1cm4hMH1GUCh0LGksZSl7aWYodGhpcy5GbCgpfHwhdC5pc1JlYWwoKSlyZXR1cm4hMTtjb25zdCBzPXRoaXMuZGlhZ3JhbTtpZihzIT09bnVsbCYmdGhpcy5tVChzLHQsaSxlKSx0aGlzLmd0PXQsdGhpcy5rJj0tMjA5NzE1Myx0aGlzLkpzLmlzUmVhbCgpJiYocz09PW51bGx8fHMuYW5pbWF0aW9uTWFuYWdlci5pc1RpY2tpbmd8fCFzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpKXtjb25zdCBuPXRoaXMuSnM7dGhpcy5Kcz1uZXcgUG9pbnQobi54Kyh0LngtaSksbi55Kyh0LnktZSkpLHRoaXMudChcImxvY2F0aW9uXCIsbix0aGlzLkpzLmNvcHkoKSl9cmV0dXJuIHRoaXMuaGgoKT09PSExJiZ0aGlzLm5zKCk9PT0hMSYmKHRoaXMuTmIoKSx0aGlzLmRUKCkpLCEwfW1UKHQsaSxlLHMpe2lmKHQ9PT1udWxsfHx0aGlzIGluc3RhbmNlb2YgQWRvcm5tZW50KXJldHVybjtjb25zdCBuPXQuYW5pbWF0aW9uTWFuYWdlcjtuLmJpJiZuLndBKHRoaXMsbmV3IFBvaW50KGUscyksaSwhMSl9TGYodCxpLGUpe2NvbnN0IHM9dGhpcy5KcyxuPXRoaXMuZ3Q7aWYoZSl7aWYocy54PT09dCYmcy55PT09aSlyZXR1cm47dGhpcy5oaCgpfHx0aGlzLm5zKCk/bi5zKE5hTixOYU4pOm4ucyhuLngrdC1zLngsbi55K2ktcy55KSxzLnModCxpKX1lbHNle2lmKG4ueD09PXQmJm4ueT09PWkpcmV0dXJuO3MucyhzLngrdC1uLngscy55K2ktbi55KSxuLnModCxpKX10aGlzLk5iKCl9UlAoKXt0aGlzLmsmPS0yMDk3MTUzLHRoaXMuTmIoKX1nVCh0LGkpe2NvbnN0IGU9dGhpcy5LTChQb2ludC5hKCkpLHM9dGhpcy5kaWFncmFtLG49aS5pc1JlYWwoKSxvPXQuaXNSZWFsKCk7biYmbz90aGlzLmsmMjA5NzE1Mj90aGlzLnBUKHQsaSxzLGUpOnRoaXMueVQodCxpLHMsZSk6bj90aGlzLnBUKHQsaSxzLGUpOm8mJnRoaXMueVQodCxpLHMsZSksdGhpcy5rfD0yMDk3MTUyLFBvaW50Lm8oZSksdGhpcy5zYygpfXBUKHQsaSxlLHMpe2NvbnN0IG49dC54LG89dC55O2lmKHQucyhpLngtcy54LGkueS1zLnkpLGUhPT1udWxsKXtjb25zdCByPWUuYW5pbWF0aW9uTWFuYWdlcixsPXIuZGVmYXVsdEFuaW1hdGlvbi5pc0FuaW1hdGluZzshbCYmci5iaSYmISh0aGlzIGluc3RhbmNlb2YgQWRvcm5tZW50KSYmci53QSh0aGlzLG5ldyBQb2ludChuLG8pLHQsITEpLCFsJiYhKHQueD09PW4mJnQueT09PW8pJiZ0aGlzLnQoXCJwb3NpdGlvblwiLG5ldyBQb2ludChuLG8pLHQuY29weSgpKX19eVQodCxpLGUscyl7Y29uc3Qgbj1pLmNvcHkoKTtpLnModC54K3MueCx0Lnkrcy55KSwhaS5lcXVhbHMobikmJmUhPT1udWxsJiZ0aGlzLnQoXCJsb2NhdGlvblwiLG4saS5jb3B5KCkpfUpBKHQsaSl7dGhpcy5DUCghMSksdGhpcyBpbnN0YW5jZW9mIE5vZGUmJmkuclAodGhpcyksIXRoaXMubGF5ZXIuaXNUZW1wb3JhcnkmJiF0JiZpLmludmFsaWRhdGVEb2N1bWVudEJvdW5kcygpO2NvbnN0IGU9dGhpcy5EaSxzPWkudmlld3BvcnRCb3VuZHM7cy5pc1JlYWwoKT90aGlzLkRsKCk/KGUuaW50ZXJzZWN0c1JlY3RQbHVzKHMsMTApfHx0aGlzLmtzKCExKSx0aGlzLnVwZGF0ZUFkb3JubWVudHMoKSk6dGhpcy5pc1Zpc2libGUoKSYmZS5pbnRlcnNlY3RzUmVjdChzKT8odGhpcy5rcyghMCksdGhpcy51cGRhdGVBZG9ybm1lbnRzKCkpOnRoaXMuaW52YWxpZGF0ZUFkb3JubWVudHMoKTppLkdmPSEwfXZyKCl7cmV0dXJuITB9Q2UoKXtyZXR1cm4hMH1GbCgpe3JldHVybiExfVdzKCl7cmV0dXJuITB9aGFzUGxhY2Vob2xkZXIoKXtyZXR1cm4hMX1nZXQgY2F0ZWdvcnkoKXtyZXR1cm4gdGhpcy5Xb31zZXQgY2F0ZWdvcnkodCl7Y29uc3QgaT10aGlzLldvO2lmKGk9PT10KXJldHVybjt0aGlzLnN2ZyE9PW51bGwmJih0aGlzLnN2Zy5yZW1vdmUoKSx0aGlzLkhlKCEwKSksRGVidWcmJlUuaSh0LFwic3RyaW5nXCIsUGFydCxcImNhdGVnb3J5XCIpO2NvbnN0IGU9dGhpcy5kaWFncmFtLHM9dGhpcy5kYXRhO2xldCBuPW51bGw7aWYoZSE9PW51bGwmJnMhPT1udWxsJiYhKHRoaXMgaW5zdGFuY2VvZiBBZG9ybm1lbnQpKXtjb25zdCBvPWUubW9kZWwudW5kb01hbmFnZXI7by5pc0VuYWJsZWQmJiFvLmlzVW5kb2luZ1JlZG9pbmcmJihuPXRoaXMuY2xvbmUoKSxuLlQuYWRkQWxsKHRoaXMuVCkpfWlmKHRoaXMuV289dCx0aGlzLnQoXCJjYXRlZ29yeVwiLGksdCksZSE9PW51bGwmJnMhPT1udWxsJiYhKHRoaXMgaW5zdGFuY2VvZiBBZG9ybm1lbnQpKXtjb25zdCBvPWUubW9kZWw7aWYoby51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nKXJldHVybjtpZih0aGlzLkZsKCkpe2UucGFydE1hbmFnZXIuc2V0TGlua0NhdGVnb3J5Rm9yRGF0YShzLHQpO2NvbnN0IHI9ZS5wYXJ0TWFuYWdlci5maW5kTGlua1RlbXBsYXRlRm9yQ2F0ZWdvcnkodCk7aWYociE9PW51bGwpe3IuS3QoKTtjb25zdCBsPXIuY29weSgpO2whPT1udWxsJiZ0aGlzLmhOKGwsaSx0KX19ZWxzZXtvIT09bnVsbCYmby5zZXRDYXRlZ29yeUZvck5vZGVEYXRhKHMsdCk7Y29uc3Qgcj1lLnBhcnRNYW5hZ2VyLmZpbmRUZW1wbGF0ZUZvck5vZGVEYXRhKHMsdCk7aWYociE9PW51bGwpe3IuS3QoKTtjb25zdCBsPXIuY29weSgpO2lmKGwhPT1udWxsJiYhKGwgaW5zdGFuY2VvZiBMaW5rKSl7Y29uc3QgaD10aGlzLmxvY2F0aW9uLmNvcHkoKTt0aGlzLmhOKGwsaSx0KSx0aGlzLmxvY2F0aW9uLmlzUmVhbCgpfHwodGhpcy5sb2NhdGlvbj1oKX19fWlmKG4hPT1udWxsKXtjb25zdCByPXRoaXMuY2xvbmUoKTtyLlQuYWRkQWxsKHRoaXMuVCksdGhpcy50KFwic2VsZlwiLG4scil9fWVsc2UgaWYodGhpcyBpbnN0YW5jZW9mIEFkb3JubWVudCl7Y29uc3Qgbz10aGlzLmFkb3JuZWRQYXJ0O2lmKG8hPT1udWxsKXtjb25zdCByPW8uam87ciE9PW51bGwmJnIuZGVsZXRlKGkpLG8uYWRkQWRvcm5tZW50KHRoaXMuY2F0ZWdvcnksdGhpcyl9fX1nZXQgc2VsZigpe3JldHVybiB0aGlzfXNldCBzZWxmKHQpe3RoaXMuaE4odCx0aGlzLmNhdGVnb3J5LHQuY2F0ZWdvcnkpfXN0YXRpYyB3VD0hMTtoTih0LGksZSl7dC5jb25zdHJ1Y3RvciE9PXRoaXMuY29uc3RydWN0b3ImJihQYXJ0LndUfHwoUGFydC53VD0hMCxVLm50KCdTaG91bGQgbm90IGNoYW5nZSB0aGUgY2xhc3Mgb2YgdGhlIFBhcnQgd2hlbiBjaGFuZ2luZyBjYXRlZ29yeSBmcm9tIFwiJytpKydcIiB0byBcIicrZSsnXCInKSxVLm50KFwiICBPbGQgY2xhc3M6IFwiK1UuQm4odGhpcy5jb25zdHJ1Y3RvcikrXCIsIG5ldyBjbGFzczogXCIrVS5Cbih0LmNvbnN0cnVjdG9yKStcIiwgcGFydDogXCIrdGhpcy50b1N0cmluZygpKSkpLHRoaXMuY2xlYXJBZG9ybm1lbnRzKCk7Y29uc3Qgcz10aGlzLmRhdGEsbj10aGlzLmxheWVyTmFtZSxvPXRoaXMuaXNTZWxlY3RlZCxyPXRoaXMuaXNIaWdobGlnaHRlZDtsZXQgbD0hMCxoPSEwLGY9ITE7dGhpcyBpbnN0YW5jZW9mIE5vZGUmJihsPXRoaXMuaXNUcmVlTGVhZixoPXRoaXMuaXNUcmVlRXhwYW5kZWQsZj10aGlzLndhc1RyZWVFeHBhbmRlZCksdC5Ybyh0aGlzKSx0LmNsb25lUHJvdGVjdGVkKHRoaXMpLHRoaXMuV289ZSx0aGlzLnN2ZyE9PW51bGwmJih0aGlzLnN2Zy5yZW1vdmUoKSx0aGlzLnN2Zz1udWxsLHRoaXMuSGUoITApKSx0aGlzLnUoKSx0aGlzLkwoKTtjb25zdCBhPXRoaXMuZGlhZ3JhbTtsZXQgYz0hMDthIT09bnVsbCYmKGM9YS5za2lwc1VuZG9NYW5hZ2VyLGEuc2tpcHNVbmRvTWFuYWdlcj0hMCksdGhpcy5uaT1zLHRoaXMuaz1vP3RoaXMua3w0MDk2OnRoaXMuayYtNDA5Nyx0aGlzLms9cj90aGlzLmt8NTI0Mjg4OnRoaXMuayYtNTI0Mjg5LHRoaXMgaW5zdGFuY2VvZiBOb2RlJiYodGhpcy5CPWw/dGhpcy5CfDQ6dGhpcy5CJi01LHRoaXMuQj1oP3RoaXMuQnwxOnRoaXMuQiYtMix0aGlzLkI9Zj90aGlzLkJ8Mjp0aGlzLkImLTMpLHMhPT1udWxsJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKCk7Y29uc3QgdT10aGlzLmxheWVyTmFtZTt1IT09biYmKHRoaXMuZmw9bix0aGlzLmxheWVyTmFtZT11KSxhIT09bnVsbCYmKGEuc2tpcHNVbmRvTWFuYWdlcj1jKSx0aGlzLkNlKCkmJnRoaXMuaW52YWxpZGF0ZUxheW91dCg2NCl9Y2FuQ29weSgpe2lmKCF0aGlzLmNvcHlhYmxlKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtpZih0PT09bnVsbClyZXR1cm4hMDtpZighdC5hbGxvd0NvcHkpcmV0dXJuITE7Y29uc3QgaT10LmRpYWdyYW07cmV0dXJuIGk9PT1udWxsPyEwOiEhaS5hbGxvd0NvcHl9Y2FuRGVsZXRlKCl7aWYoIXRoaXMuZGVsZXRhYmxlKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtpZih0PT09bnVsbClyZXR1cm4hMDtpZighdC5hbGxvd0RlbGV0ZSlyZXR1cm4hMTtjb25zdCBpPXQuZGlhZ3JhbTtyZXR1cm4gaT09PW51bGw/ITA6ISFpLmFsbG93RGVsZXRlfWNhbkVkaXQoKXtpZighdGhpcy50ZXh0RWRpdGFibGUpcmV0dXJuITE7Y29uc3QgdD10aGlzLmxheWVyO2lmKHQ9PT1udWxsKXJldHVybiEwO2lmKCF0LmFsbG93VGV4dEVkaXQpcmV0dXJuITE7Y29uc3QgaT10LmRpYWdyYW07cmV0dXJuIGk9PT1udWxsPyEwOiEhaS5hbGxvd1RleHRFZGl0fWNhbkdyb3VwKCl7aWYoIXRoaXMuZ3JvdXBhYmxlKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtpZih0PT09bnVsbClyZXR1cm4hMDtpZighdC5hbGxvd0dyb3VwKXJldHVybiExO2NvbnN0IGk9dC5kaWFncmFtO3JldHVybiBpPT09bnVsbD8hMDohIWkuYWxsb3dHcm91cH1jYW5Nb3ZlKCl7aWYoIXRoaXMubW92YWJsZSlyZXR1cm4hMTtjb25zdCB0PXRoaXMubGF5ZXI7aWYodD09PW51bGwpcmV0dXJuITA7aWYoIXQuYWxsb3dNb3ZlKXJldHVybiExO2NvbnN0IGk9dC5kaWFncmFtO3JldHVybiBpPT09bnVsbD8hMDohIWkuYWxsb3dNb3ZlfWNhblJlc2hhcGUoKXtpZighdGhpcy5yZXNoYXBhYmxlKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtpZih0PT09bnVsbClyZXR1cm4hMDtpZighdC5hbGxvd1Jlc2hhcGUpcmV0dXJuITE7Y29uc3QgaT10LmRpYWdyYW07cmV0dXJuIGk9PT1udWxsPyEwOiEhaS5hbGxvd1Jlc2hhcGV9Y2FuUmVzaXplKCl7aWYoIXRoaXMucmVzaXphYmxlKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtpZih0PT09bnVsbClyZXR1cm4hMDtpZighdC5hbGxvd1Jlc2l6ZSlyZXR1cm4hMTtjb25zdCBpPXQuZGlhZ3JhbTtyZXR1cm4gaT09PW51bGw/ITA6ISFpLmFsbG93UmVzaXplfWNhblJvdGF0ZSgpe2lmKCF0aGlzLnJvdGF0YWJsZSlyZXR1cm4hMTtjb25zdCB0PXRoaXMubGF5ZXI7aWYodD09PW51bGwpcmV0dXJuITA7aWYoIXQuYWxsb3dSb3RhdGUpcmV0dXJuITE7Y29uc3QgaT10LmRpYWdyYW07cmV0dXJuIGk9PT1udWxsPyEwOiEhaS5hbGxvd1JvdGF0ZX1jYW5TZWxlY3QoKXtpZighdGhpcy5zZWxlY3RhYmxlKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtpZih0PT09bnVsbClyZXR1cm4hMDtpZighdC5hbGxvd1NlbGVjdClyZXR1cm4hMTtjb25zdCBpPXQuZGlhZ3JhbTtyZXR1cm4gaT09PW51bGw/ITA6ISFpLmFsbG93U2VsZWN0fWdldCBjb3B5YWJsZSgpe3JldHVybih0aGlzLmsmMSkhPT0wfXNldCBjb3B5YWJsZSh0KXtjb25zdCBpPSh0aGlzLmsmMSkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhcnQsXCJjb3B5YWJsZVwiKSx0aGlzLms9dGhpcy5rXjEsdGhpcy50KFwiY29weWFibGVcIixpLHQpKX1nZXQgZGVsZXRhYmxlKCl7cmV0dXJuKHRoaXMuayYyKSE9PTB9c2V0IGRlbGV0YWJsZSh0KXtjb25zdCBpPSh0aGlzLmsmMikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhcnQsXCJkZWxldGFibGVcIiksdGhpcy5rPXRoaXMua14yLHRoaXMudChcImRlbGV0YWJsZVwiLGksdCkpfWdldCB0ZXh0RWRpdGFibGUoKXtyZXR1cm4odGhpcy5rJjQpIT09MH1zZXQgdGV4dEVkaXRhYmxlKHQpe2NvbnN0IGk9KHRoaXMuayY0KSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsUGFydCxcInRleHRFZGl0YWJsZVwiKSx0aGlzLms9dGhpcy5rXjQsdGhpcy50KFwidGV4dEVkaXRhYmxlXCIsaSx0KSx0aGlzLmludmFsaWRhdGVBZG9ybm1lbnRzKCkpfWdldCBncm91cGFibGUoKXtyZXR1cm4odGhpcy5rJjgpIT09MH1zZXQgZ3JvdXBhYmxlKHQpe2NvbnN0IGk9KHRoaXMuayY4KSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsUGFydCxcImdyb3VwYWJsZVwiKSx0aGlzLms9dGhpcy5rXjgsdGhpcy50KFwiZ3JvdXBhYmxlXCIsaSx0KSl9Z2V0IG1vdmFibGUoKXtyZXR1cm4odGhpcy5rJjE2KSE9PTB9c2V0IG1vdmFibGUodCl7Y29uc3QgaT0odGhpcy5rJjE2KSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsUGFydCxcIm1vdmFibGVcIiksdGhpcy5rPXRoaXMua14xNix0aGlzLnQoXCJtb3ZhYmxlXCIsaSx0KSl9Z2V0IHNlbGVjdGlvbkFkb3JuZWQoKXtyZXR1cm4odGhpcy5rJjMyKSE9PTB9c2V0IHNlbGVjdGlvbkFkb3JuZWQodCl7Y29uc3QgaT0odGhpcy5rJjMyKSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsUGFydCxcInNlbGVjdGlvbkFkb3JuZWRcIiksdGhpcy5rPXRoaXMua14zMix0aGlzLnQoXCJzZWxlY3Rpb25BZG9ybmVkXCIsaSx0KSx0aGlzLmludmFsaWRhdGVBZG9ybm1lbnRzKCkpfWdldCBpc0luRG9jdW1lbnRCb3VuZHMoKXtyZXR1cm4odGhpcy5rJjY0KSE9PTB9c2V0IGlzSW5Eb2N1bWVudEJvdW5kcyh0KXtjb25zdCBpPSh0aGlzLmsmNjQpIT09MDtpZihpIT09dCl7RGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhcnQsXCJpc0luRG9jdW1lbnRCb3VuZHNcIiksdGhpcy5rPXRoaXMua142NDtjb25zdCBlPXRoaXMuZGlhZ3JhbTtlIT09bnVsbCYmZS5pbnZhbGlkYXRlRG9jdW1lbnRCb3VuZHMoKSx0aGlzLnQoXCJpc0luRG9jdW1lbnRCb3VuZHNcIixpLHQpfX1nZXQgaXNMYXlvdXRQb3NpdGlvbmVkKCl7cmV0dXJuKHRoaXMuayYxMjgpIT09MH1zZXQgaXNMYXlvdXRQb3NpdGlvbmVkKHQpe2NvbnN0IGk9KHRoaXMuayYxMjgpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixQYXJ0LFwiaXNMYXlvdXRQb3NpdGlvbmVkXCIpLHRoaXMuaz10aGlzLmteMTI4LHRoaXMudChcImlzTGF5b3V0UG9zaXRpb25lZFwiLGksdCksdGhpcy5pbnZhbGlkYXRlTGF5b3V0KHQ/NDo4KSl9Z2V0IHNlbGVjdGFibGUoKXtyZXR1cm4odGhpcy5rJjI1NikhPT0wfXNldCBzZWxlY3RhYmxlKHQpe2NvbnN0IGk9KHRoaXMuayYyNTYpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixQYXJ0LFwic2VsZWN0YWJsZVwiKSx0aGlzLms9dGhpcy5rXjI1Nix0aGlzLnQoXCJzZWxlY3RhYmxlXCIsaSx0KSx0aGlzLmludmFsaWRhdGVBZG9ybm1lbnRzKCkpfWdldCByZXNoYXBhYmxlKCl7cmV0dXJuKHRoaXMuayY1MTIpIT09MH1zZXQgcmVzaGFwYWJsZSh0KXtjb25zdCBpPSh0aGlzLmsmNTEyKSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsUGFydCxcInJlc2hhcGFibGVcIiksdGhpcy5rPXRoaXMua141MTIsdGhpcy50KFwicmVzaGFwYWJsZVwiLGksdCksdGhpcy5pbnZhbGlkYXRlQWRvcm5tZW50cygpKX1nZXQgcmVzaXphYmxlKCl7cmV0dXJuKHRoaXMuayYxMDI0KSE9PTB9c2V0IHJlc2l6YWJsZSh0KXtjb25zdCBpPSh0aGlzLmsmMTAyNCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhcnQsXCJyZXNpemFibGVcIiksdGhpcy5rPXRoaXMua14xMDI0LHRoaXMudChcInJlc2l6YWJsZVwiLGksdCksdGhpcy5pbnZhbGlkYXRlQWRvcm5tZW50cygpKX1nZXQgcm90YXRhYmxlKCl7cmV0dXJuKHRoaXMuayYyMDQ4KSE9PTB9c2V0IHJvdGF0YWJsZSh0KXtjb25zdCBpPSh0aGlzLmsmMjA0OCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhcnQsXCJyb3RhdGFibGVcIiksdGhpcy5rPXRoaXMua14yMDQ4LHRoaXMudChcInJvdGF0YWJsZVwiLGksdCksdGhpcy5pbnZhbGlkYXRlQWRvcm5tZW50cygpKX1nZXQgaXNTZWxlY3RlZCgpe3JldHVybih0aGlzLmsmNDA5NikhPT0wfXNldCBpc1NlbGVjdGVkKHQpe2NvbnN0IGk9KHRoaXMuayY0MDk2KSE9PTA7aWYoaSE9PXQpe0RlYnVnJiZVLmkodCxcImJvb2xlYW5cIixQYXJ0LFwiaXNTZWxlY3RlZFwiKTtjb25zdCBlPXRoaXMuZGlhZ3JhbTtpZih0KXtpZighdGhpcy5jYW5TZWxlY3QoKSlyZXR1cm47aWYoZSE9PW51bGwpe2NvbnN0IG89ZS5tYXhTZWxlY3Rpb25Db3VudDtpZihlLnNlbGVjdGlvbi5jb3VudD49bylyZXR1cm59fXRoaXMuaz10aGlzLmteNDA5NjtsZXQgcz0hMTtpZihlIT09bnVsbCl7cz1lLnNraXBzVW5kb01hbmFnZXIsZS5za2lwc1VuZG9NYW5hZ2VyPSEwO2NvbnN0IG89ZS5zZWxlY3Rpb247by5BdCgpLHQ/by5hZGQodGhpcyk6by5kZWxldGUodGhpcyksby5wKCl9dGhpcy50KFwiaXNTZWxlY3RlZFwiLGksdCksdGhpcy5pbnZhbGlkYXRlQWRvcm5tZW50cygpO2NvbnN0IG49dGhpcy5zZWxlY3Rpb25DaGFuZ2VkO24hPT1udWxsJiZuKHRoaXMpLGUhPT1udWxsJiYoZS5yZXF1ZXN0VXBkYXRlKCksZS5za2lwc1VuZG9NYW5hZ2VyPXMpfX1nZXQgaXNIaWdobGlnaHRlZCgpe3JldHVybih0aGlzLmsmNTI0Mjg4KSE9PTB9c2V0IGlzSGlnaGxpZ2h0ZWQodCl7Y29uc3QgaT0odGhpcy5rJjUyNDI4OCkhPT0wO2lmKGkhPT10KXtEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsUGFydCxcImlzSGlnaGxpZ2h0ZWRcIiksdGhpcy5rPXRoaXMua141MjQyODg7Y29uc3QgZT10aGlzLmRpYWdyYW07aWYoZSE9PW51bGwpe2NvbnN0IG49ZS5oaWdobGlnaHRlZHM7bi5BdCgpLHQ/bi5hZGQodGhpcyk6bi5kZWxldGUodGhpcyksbi5wKCl9dGhpcy50KFwiaXNIaWdobGlnaHRlZFwiLGksdCksdGhpcy5MKCk7Y29uc3Qgcz10aGlzLmhpZ2hsaWdodGVkQ2hhbmdlZDtzIT09bnVsbCYmcyh0aGlzKX19Z2V0IGlzU2hhZG93ZWQoKXtyZXR1cm4odGhpcy5rJjgxOTIpIT09MH1zZXQgaXNTaGFkb3dlZCh0KXtjb25zdCBpPSh0aGlzLmsmODE5MikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhcnQsXCJpc1NoYWRvd2VkXCIpLHRoaXMuaz10aGlzLmteODE5Mix0aGlzLkhlKCEwKSx0aGlzLnQoXCJpc1NoYWRvd2VkXCIsaSx0KSx0aGlzLkwoKSl9Y1QoKXtyZXR1cm4odGhpcy5rJjE2Mzg0KSE9PTB9dVQodCl7dD90aGlzLmt8PTE2Mzg0OnRoaXMuayY9LTE2Mzg1fWhoKCl7cmV0dXJuKHRoaXMuayYzMjc2OCkhPT0wfWxOKHQpe3Q/dGhpcy5rfD0zMjc2ODp0aGlzLmsmPS0zMjc2OX1jTygpe3JldHVybih0aGlzLmsmNjU1MzYpIT09MH1DUCh0KXt0P3RoaXMua3w9NjU1MzY6dGhpcy5rJj0tNjU1Mzd9RGwoKXtyZXR1cm4odGhpcy5rJjEzMTA3MikhPT0wfWtzKHQpe3Q/dGhpcy5rfD0xMzEwNzI6dGhpcy5rJj0tMTMxMDczfXhUKCl7cmV0dXJuKHRoaXMuayYxMDQ4NTc2KSE9PTB9Q2IodCl7dD90aGlzLmt8PTEwNDg1NzY6dGhpcy5rJj0tMTA0ODU3N31nZXQgaXNBbmltYXRlZCgpe3JldHVybih0aGlzLmsmMjYyMTQ0KSE9PTB9c2V0IGlzQW5pbWF0ZWQodCl7Y29uc3QgaT0odGhpcy5rJjI2MjE0NCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLFBhcnQsXCJpc0FuaW1hdGVkXCIpLHRoaXMuaz10aGlzLmteMjYyMTQ0LHRoaXMudChcImlzQW5pbWF0ZWRcIixpLHQpKX1nZXQgaGlnaGxpZ2h0ZWRDaGFuZ2VkKCl7cmV0dXJuIHRoaXMuSiE9PW51bGw/dGhpcy5KLnZwOm51bGx9c2V0IGhpZ2hsaWdodGVkQ2hhbmdlZCh0KXtjb25zdCBpPXRoaXMuaGlnaGxpZ2h0ZWRDaGFuZ2VkO2khPT10JiYodCE9PW51bGwmJlUuUCh0LFBhcnQsXCJoaWdobGlnaHRlZENoYW5nZWRcIiksdGhpcy5aaSgpLnZwPXQsdGhpcy50KFwiaGlnaGxpZ2h0ZWRDaGFuZ2VkXCIsaSx0KSl9Z2V0IHNlbGVjdGlvbk9iamVjdE5hbWUoKXtyZXR1cm4gdGhpcy5KIT09bnVsbD90aGlzLkouSnA6XCJcIn1zZXQgc2VsZWN0aW9uT2JqZWN0TmFtZSh0KXtjb25zdCBpPXRoaXMuc2VsZWN0aW9uT2JqZWN0TmFtZTtpIT09dCYmKERlYnVnJiZVLmkodCxcInN0cmluZ1wiLFBhcnQsXCJzZWxlY3Rpb25PYmplY3ROYW1lXCIpLHRoaXMuWmkoKS5KcD10LHRoaXMuY2w9bnVsbCx0aGlzLnQoXCJzZWxlY3Rpb25PYmplY3ROYW1lXCIsaSx0KSl9Z2V0IHNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlKCl7cmV0dXJuIHRoaXMuSiE9PW51bGw/dGhpcy5KLiRwOm51bGx9c2V0IHNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlKHQpe2NvbnN0IGk9dGhpcy5zZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZTtpIT09dCYmKHQhPT1udWxsJiYoVS5lKHQsQWRvcm5tZW50LFBhcnQsXCJzZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZVwiKSx0Lkt0KCkpLHRoaXMuWmkoKS4kcD10LHRoaXMudChcInNlbGVjdGlvbkFkb3JubWVudFRlbXBsYXRlXCIsaSx0KSl9Z2V0IHNlbGVjdGlvbk9iamVjdCgpe2lmKHRoaXMuY2w9PT1udWxsKXtjb25zdCB0PXRoaXMuc2VsZWN0aW9uT2JqZWN0TmFtZTtpZih0IT09bnVsbCYmdCE9PVwiXCIpe2NvbnN0IGk9dGhpcy5maW5kT2JqZWN0KHQpO2khPT1udWxsP3RoaXMuY2w9aTp0aGlzLmNsPXRoaXN9ZWxzZSBpZih0aGlzIGluc3RhbmNlb2YgTGluayl7Y29uc3QgaT10aGlzLnBhdGg7aSE9PW51bGw/dGhpcy5jbD1pOnRoaXMuY2w9dGhpc31lbHNlIHRoaXMuY2w9dGhpc31yZXR1cm4gdGhpcy5jbH1nZXQgc2VsZWN0aW9uQ2hhbmdlZCgpe3JldHVybiB0aGlzLkohPT1udWxsP3RoaXMuSi5acDpudWxsfXNldCBzZWxlY3Rpb25DaGFuZ2VkKHQpe2NvbnN0IGk9dGhpcy5zZWxlY3Rpb25DaGFuZ2VkO2khPT10JiYodCE9PW51bGwmJlUuUCh0LFBhcnQsXCJzZWxlY3Rpb25DaGFuZ2VkXCIpLHRoaXMuWmkoKS5acD10LHRoaXMudChcInNlbGVjdGlvbkNoYW5nZWRcIixpLHQpKX1nZXQgcmVzaXplQWRvcm5tZW50VGVtcGxhdGUoKXtyZXR1cm4gdGhpcy5KIT09bnVsbD90aGlzLkouUXA6bnVsbH1zZXQgcmVzaXplQWRvcm5tZW50VGVtcGxhdGUodCl7Y29uc3QgaT10aGlzLnJlc2l6ZUFkb3JubWVudFRlbXBsYXRlO2khPT10JiYoRGVidWcmJlUuZSh0LEFkb3JubWVudCxQYXJ0LFwicmVzaXplQWRvcm5tZW50VGVtcGxhdGVcIiksdGhpcy5aaSgpLlFwPXQhPT1udWxsP3QuS3QoKTpudWxsLHRoaXMudChcInJlc2l6ZUFkb3JubWVudFRlbXBsYXRlXCIsaSx0KSl9Z2V0IHJlc2l6ZU9iamVjdE5hbWUoKXtyZXR1cm4gdGhpcy5KIT09bnVsbD90aGlzLkouX3A6XCJcIn1zZXQgcmVzaXplT2JqZWN0TmFtZSh0KXtjb25zdCBpPXRoaXMucmVzaXplT2JqZWN0TmFtZTtpIT09dCYmKERlYnVnJiZVLmkodCxcInN0cmluZ1wiLFBhcnQsXCJyZXNpemVPYmplY3ROYW1lXCIpLHRoaXMuWmkoKS5fcD10LHRoaXMudChcInJlc2l6ZU9iamVjdE5hbWVcIixpLHQpKX1nZXQgcmVzaXplT2JqZWN0KCl7Y29uc3QgdD10aGlzLnJlc2l6ZU9iamVjdE5hbWU7aWYodCE9PVwiXCIpe2NvbnN0IGk9dGhpcy5maW5kT2JqZWN0KHQpO2lmKGkhPT1udWxsKXJldHVybiBpfXJldHVybiB0aGlzfWdldCByZXNpemVDZWxsU2l6ZSgpe3JldHVybiB0aGlzLkohPT1udWxsP3RoaXMuSi50eTpTaXplLlB3fXNldCByZXNpemVDZWxsU2l6ZSh0KXtjb25zdCBpPXRoaXMucmVzaXplQ2VsbFNpemU7aS5lcXVhbHModCl8fChEZWJ1ZyYmVS5lKHQsU2l6ZSxQYXJ0LFwicmVzaXplQ2VsbFNpemVcIiksdD10Lk4oKSx0aGlzLlppKCkudHk9dCx0aGlzLnQoXCJyZXNpemVDZWxsU2l6ZVwiLGksdCkpfWdldCByb3RhdGVBZG9ybm1lbnRUZW1wbGF0ZSgpe3JldHVybiB0aGlzLkohPT1udWxsP3RoaXMuSi5peTpudWxsfXNldCByb3RhdGVBZG9ybm1lbnRUZW1wbGF0ZSh0KXtjb25zdCBpPXRoaXMucm90YXRlQWRvcm5tZW50VGVtcGxhdGU7aSE9PXQmJihEZWJ1ZyYmVS5lKHQsQWRvcm5tZW50LFBhcnQsXCJyb3RhdGVBZG9ybm1lbnRUZW1wbGF0ZVwiKSx0aGlzLlppKCkuaXk9dCE9PW51bGw/dC5LdCgpOm51bGwsdGhpcy50KFwicm90YXRlQWRvcm5tZW50VGVtcGxhdGVcIixpLHQpKX1nZXQgcm90YXRlT2JqZWN0TmFtZSgpe3JldHVybiB0aGlzLkohPT1udWxsP3RoaXMuSi5leTpcIlwifXNldCByb3RhdGVPYmplY3ROYW1lKHQpe2NvbnN0IGk9dGhpcy5yb3RhdGVPYmplY3ROYW1lO2khPT10JiYoRGVidWcmJlUuaSh0LFwic3RyaW5nXCIsUGFydCxcInJvdGF0ZU9iamVjdE5hbWVcIiksdGhpcy5aaSgpLmV5PXQsdGhpcy50KFwicm90YXRlT2JqZWN0TmFtZVwiLGksdCkpfWdldCByb3RhdGVPYmplY3QoKXtjb25zdCB0PXRoaXMucm90YXRlT2JqZWN0TmFtZTtpZih0IT09XCJcIil7Y29uc3QgaT10aGlzLmZpbmRPYmplY3QodCk7aWYoaSE9PW51bGwpcmV0dXJuIGl9cmV0dXJuIHRoaXN9Z2V0IHJvdGF0aW9uU3BvdCgpe3JldHVybiB0aGlzLkohPT1udWxsP3RoaXMuSi5ueTpTcG90LkRlZmF1bHR9c2V0IHJvdGF0aW9uU3BvdCh0KXtjb25zdCBpPXRoaXMucm90YXRpb25TcG90O2kuZXF1YWxzKHQpfHwoRGVidWcmJihVLmUodCxTcG90LFBhcnQsXCJyb3RhdGlvblNwb3RcIiksdCE9PVNwb3QuRGVmYXVsdCYmIXQuaXNTcG90KCkmJlUubihcIlBhcnQucm90YXRpb25TcG90IG11c3QgYmUgYSBzcGVjaWZpYyBTcG90IHZhbHVlIG9yIFNwb3QuRGVmYXVsdCwgbm90OiBcIit0KSksdD10Lk4oKSx0aGlzLlppKCkubnk9dCx0aGlzLnQoXCJyb3RhdGlvblNwb3RcIixpLHQpKX1nZXQgdGV4dCgpe3JldHVybiB0aGlzLmZpfXNldCB0ZXh0KHQpe2NvbnN0IGk9dGhpcy5maTtpIT09dCYmKERlYnVnJiZVLmkodCxcInN0cmluZ1wiLFBhcnQsXCJ0ZXh0XCIpLHRoaXMuZmk9dCx0aGlzLnQoXCJ0ZXh0XCIsaSx0KSl9Z2V0IGNvbnRhaW5pbmdHcm91cCgpe3JldHVybiB0aGlzLlBofXNldCBjb250YWluaW5nR3JvdXAodCl7aWYodGhpcy5DZSgpKXtjb25zdCBpPXRoaXMuUGg7aWYoaSE9PXQpe0RlYnVnJiZ0IT09bnVsbCYmVS5lKHQsR3JvdXAsUGFydCxcImNvbnRhaW5pbmdHcm91cFwiKSx0IT09bnVsbCYmKHRoaXM9PT10fHx0LmlzTWVtYmVyT2YodGhpcykpJiYodGhpcz09PXQmJlUubihcIkNhbm5vdCBtYWtlIGEgR3JvdXAgYSBtZW1iZXIgb2YgaXRzZWxmOiBcIit0aGlzLnRvU3RyaW5nKCkpLFUubihcIkNhbm5vdCBtYWtlIGEgR3JvdXAgaW5kaXJlY3RseSBjb250YWluIGl0c2VsZjogXCIrdGhpcy50b1N0cmluZygpK1wiIGFscmVhZHkgY29udGFpbnMgXCIrdC50b1N0cmluZygpKSksdGhpcy5pbnZhbGlkYXRlTGF5b3V0KDIpO2NvbnN0IGU9dGhpcy5kaWFncmFtO2lmKGkhPT1udWxsP2kuYU4odGhpcyk6dGhpcyBpbnN0YW5jZW9mIEdyb3VwJiZlIT09bnVsbCYmZS5Xci5kZWxldGUodGhpcyksdGhpcy5QaD10LHQhPT1udWxsP3QuZk4odGhpcyk6dGhpcyBpbnN0YW5jZW9mIEdyb3VwJiZlIT09bnVsbCYmZS5Xci5hZGQodGhpcyksdGhpcy5pbnZhbGlkYXRlTGF5b3V0KDEpLGUhPT1udWxsJiZlLkgpe2NvbnN0IG49dGhpcy5kYXRhLG89ZS5tb2RlbDtpZihuIT09bnVsbCYmby54YSgpKXtjb25zdCByPXQhPT1udWxsP3QuZGF0YTpudWxsO28uc2V0R3JvdXBGb3JEYXRhKG4sby5nZXRLZXlGb3JOb2RlRGF0YShyKSl9fWNvbnN0IHM9dGhpcy5jb250YWluaW5nR3JvdXBDaGFuZ2VkO2lmKHMhPT1udWxsKXtsZXQgbj0hMDtlIT09bnVsbCYmKG49ZS5ILGUuSD0hMCkscyh0aGlzLGksdCksZSE9PW51bGwmJihlLkg9bil9aWYodGhpcyBpbnN0YW5jZW9mIEdyb3VwKXtjb25zdCBuPW5ldyBHU2V0O1BhcnQuY2gobix0aGlzLCEwLDAsITApO2NvbnN0IG89bi5pdGVyYXRvcjtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlO2lmKHIgaW5zdGFuY2VvZiBOb2RlKXtjb25zdCBsPXIubGlua3NDb25uZWN0ZWQ7Zm9yKDtsLm5leHQoKTspbC52YWx1ZS5UZCgpfX19aWYodGhpcyBpbnN0YW5jZW9mIE5vZGUpe2NvbnN0IG49dGhpcy5saW5rc0Nvbm5lY3RlZDtmb3IoO24ubmV4dCgpOyluLnZhbHVlLlRkKCk7Y29uc3Qgbz10aGlzLmxhYmVsZWRMaW5rO28hPT1udWxsJiZvLlRkKCl9dGhpcy50KFwiY29udGFpbmluZ0dyb3VwXCIsaSx0KSx0IT09bnVsbCYmdC5hTygpfX1lbHNlIFUubihcImNhbm5vdCBzZXQgdGhlIFBhcnQuY29udGFpbmluZ0dyb3VwIG9mIGEgTGluayBvciBBZG9ybm1lbnRcIil9d2goKXtjb25zdCB0PXRoaXMuY29udGFpbmluZ0dyb3VwO3QhPT1udWxsJiYodC5oYXNQbGFjZWhvbGRlcigpJiZ0LnBsYWNlaG9sZGVyPy51KCksdC51KCksdC5pbnZhbGlkYXRlQ29ubmVjdGVkTGlua3MoKSl9TCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QhPT1udWxsJiYhdGhpcy5ucygpJiYhdGhpcy5oaCgpJiZ0aGlzLmlzVmlzaWJsZSgpJiZ0aGlzLkRpLmlzUmVhbCgpJiZ0LkwodGhpcy50YSh0aGlzLkRpKSl9dSgpe2lmKHRoaXMuRW8oKSlyZXR1cm47c3VwZXIudSgpO2NvbnN0IHQ9dGhpcy5kaWFncmFtO3QhPT1udWxsJiYodC5sMCh0aGlzKSx0aGlzIGluc3RhbmNlb2YgTm9kZSYmdGhpcy5sYWJlbGVkTGluayE9PW51bGwmJnRoaXMubGFiZWxlZExpbmsuaGMoKSx0LnJlcXVlc3RVcGRhdGUoITApKX1oYyh0KXtpZih0aGlzLm5zKCkpcmV0dXJuO2NvbnN0IGk9dGhpcy5kaWFncmFtO2khPT1udWxsJiYoaS5sMCh0aGlzKSx0aGlzIGluc3RhbmNlb2YgTm9kZSYmdGhpcy5pbnZhbGlkYXRlQ29ubmVjdGVkTGlua3MoKSxpLnJlcXVlc3RVcGRhdGUoKSksdGhpcy50byghMCl9em0odCl7aWYoIXQpe2NvbnN0IGk9dGhpcy5QaDtpIT09bnVsbCYmaS5mTih0aGlzKX19WG0odCl7aWYoIXQpe2NvbnN0IGk9dGhpcy5QaDtpIT09bnVsbCYmaS5hTih0aGlzKX19SmYoKXtjb25zdCB0PXRoaXMuZGF0YTtpZih0IT09bnVsbCl7Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaSE9PW51bGwpe2NvbnN0IGU9aS5tb2RlbDtlIT09bnVsbCYmZS5yZW1vdmVOb2RlRGF0YSh0KX19fWdldCBjb250YWluaW5nR3JvdXBDaGFuZ2VkKCl7cmV0dXJuIHRoaXMuSiE9PW51bGw/dGhpcy5KLmx5Om51bGx9c2V0IGNvbnRhaW5pbmdHcm91cENoYW5nZWQodCl7Y29uc3QgaT10aGlzLmNvbnRhaW5pbmdHcm91cENoYW5nZWQ7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsUGFydCxcImNvbnRhaW5pbmdHcm91cENoYW5nZWRcIiksdGhpcy5aaSgpLmx5PXQsdGhpcy50KFwiY29udGFpbmluZ0dyb3VwQ2hhbmdlZFwiLGksdCkpfWZpbmRTdWJHcmFwaExldmVsKCl7cmV0dXJuIHRoaXMuY04odGhpcyl9Y04odCl7Y29uc3QgaT10LmNvbnRhaW5pbmdHcm91cDtpZihpIT09bnVsbClyZXR1cm4gMSt0aGlzLmNOKGkpO2lmKHQgaW5zdGFuY2VvZiBOb2RlKXtjb25zdCBlPXQubGFiZWxlZExpbms7aWYoZSE9PW51bGwpcmV0dXJuIHRoaXMuY04oZSl9cmV0dXJuIDB9ZmluZFRvcExldmVsUGFydCgpe3JldHVybiB0aGlzLnVOKHRoaXMpfXVOKHQpe2NvbnN0IGk9dC5jb250YWluaW5nR3JvdXA7aWYoaSE9PW51bGwpcmV0dXJuIHRoaXMudU4oaSk7aWYodCBpbnN0YW5jZW9mIE5vZGUpe2NvbnN0IGU9dC5sYWJlbGVkTGluaztpZihlIT09bnVsbClyZXR1cm4gdGhpcy51TihlKX1yZXR1cm4gdH1nZXQgaXNUb3BMZXZlbCgpe3JldHVybiEodGhpcy5jb250YWluaW5nR3JvdXAhPT1udWxsfHx0aGlzIGluc3RhbmNlb2YgTm9kZSYmdGhpcy5sYWJlbGVkTGluayE9PW51bGwpfWlzTWVtYmVyT2YodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBHcm91cD90aGlzLmROKHRoaXMsdCk6ITF9ZE4odCxpKXtpZih0PT09aXx8aT09PW51bGwpcmV0dXJuITE7Y29uc3QgZT10LmNvbnRhaW5pbmdHcm91cDtpZihlIT09bnVsbCYmKGU9PT1pfHx0aGlzLmROKGUsaSkpKXJldHVybiEwO2lmKHQgaW5zdGFuY2VvZiBOb2RlKXtjb25zdCBzPXQubGFiZWxlZExpbms7aWYocyE9PW51bGwpcmV0dXJuIHRoaXMuZE4ocyxpKX1yZXR1cm4hMX1maW5kQ29tbW9uQ29udGFpbmluZ0dyb3VwKHQpe2lmKHQ9PT1udWxsKXJldHVybiBudWxsO2lmKERlYnVnJiZVLmUodCxQYXJ0LFBhcnQsXCJmaW5kQ29tbW9uQ29udGFpbmluZ0dyb3VwOm90aGVyXCIpLHRoaXM9PT10KXJldHVybiB0aGlzLmNvbnRhaW5pbmdHcm91cDtsZXQgaT10aGlzO2Zvcig7aSE9PW51bGw7KXtpZihpIGluc3RhbmNlb2YgR3JvdXAmJmkuQ2IoITApLGkgaW5zdGFuY2VvZiBOb2RlKXtjb25zdCBzPWkubGFiZWxlZExpbms7cyE9PW51bGwmJihpPXMpfWk9aS5jb250YWluaW5nR3JvdXB9bGV0IGU9bnVsbDtmb3IoaT10O2khPT1udWxsOyl7aWYoaS54VCgpKXtlPWk7YnJlYWt9aWYoaSBpbnN0YW5jZW9mIE5vZGUpe2NvbnN0IHM9aS5sYWJlbGVkTGluaztzIT09bnVsbCYmKGk9cyl9aT1pLmNvbnRhaW5pbmdHcm91cH1mb3IoaT10aGlzO2khPT1udWxsOyl7aWYoaSBpbnN0YW5jZW9mIEdyb3VwJiZpLkNiKCExKSxpIGluc3RhbmNlb2YgTm9kZSl7Y29uc3Qgcz1pLmxhYmVsZWRMaW5rO3MhPT1udWxsJiYoaT1zKX1pPWkuY29udGFpbmluZ0dyb3VwfXJldHVybiBlfWdldCBsYXlvdXRDb25kaXRpb25zKCl7cmV0dXJuIHRoaXMuSiE9PW51bGw/dGhpcy5KLmh5OjEyN31zZXQgbGF5b3V0Q29uZGl0aW9ucyh0KXtjb25zdCBpPXRoaXMubGF5b3V0Q29uZGl0aW9ucztpIT09dCYmKERlYnVnJiZVLmkodCxcIm51bWJlclwiLFBhcnQsXCJsYXlvdXRDb25kaXRpb25zXCIpLHRoaXMuWmkoKS5oeT10LHRoaXMudChcImxheW91dENvbmRpdGlvbnNcIixpLHQpKX1jYW5MYXlvdXQoKXtpZighdGhpcy5pc0xheW91dFBvc2l0aW9uZWR8fCF0aGlzLmlzVmlzaWJsZSgpKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtyZXR1cm4hKHQhPT1udWxsJiZ0LmlzVGVtcG9yYXJ5fHx0aGlzIGluc3RhbmNlb2YgTm9kZSYmdGhpcy5pc0xpbmtMYWJlbCl9ZE8odCl7aWYoIXRoaXMuaXNMYXlvdXRQb3NpdGlvbmVkfHwhKHQmdGhpcy5sYXlvdXRDb25kaXRpb25zKSlyZXR1cm4hMTtjb25zdCBpPXRoaXMubGF5ZXI7aWYoaSE9PW51bGwmJmkuaXNUZW1wb3Jhcnl8fHRoaXMgaW5zdGFuY2VvZiBOb2RlJiZ0aGlzLmlzTGlua0xhYmVsKXJldHVybiExO2NvbnN0IGU9dGhpcy5kaWFncmFtO3JldHVybiEoZSE9PW51bGwmJmUudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZyl9aW52YWxpZGF0ZUxheW91dCh0KXtpZih0PT09dm9pZCAwJiYodD0xNjc3NzIxNSksIXRoaXMuZE8odCkpcmV0dXJuO2NvbnN0IGk9dGhpcy5QaDtpZihpIT09bnVsbCl7Y29uc3QgZT1pLmxheW91dDtlIT09bnVsbD9lLmludmFsaWRhdGVMYXlvdXQoKTppLmludmFsaWRhdGVMYXlvdXQodCl9ZWxzZXtjb25zdCBlPXRoaXMuZGlhZ3JhbTtpZihlIT09bnVsbCl7Y29uc3Qgcz1lLmxheW91dDtzIT09bnVsbCYmcy5pbnZhbGlkYXRlTGF5b3V0KCl9fX0kQSgpe2lmKCF0aGlzLmlzVmlzaWJsZSgpKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtyZXR1cm4hKHQhPT1udWxsJiZ0LmlzVGVtcG9yYXJ5KX1zdGF0aWMgY2godCxpLGUscyxuLG8pe2lmKG89PT12b2lkIDAmJihvPW51bGwpLCF0LmhhcyhpKSYmIShvIT09bnVsbCYmIW8oaSkpJiYhKGkgaW5zdGFuY2VvZiBBZG9ybm1lbnQpKXtpZih0LmFkZChpKSxpIGluc3RhbmNlb2YgTm9kZSl7aWYoZSYmaSBpbnN0YW5jZW9mIEdyb3VwKXtjb25zdCByPWkubWVtYmVyUGFydHM7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtQYXJ0LmNoKHQsbCxlLHMsbixvKX19aWYobiE9PSExKXtjb25zdCByPWkubGlua3NDb25uZWN0ZWQ7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtpZih0LmhhcyhsKSljb250aW51ZTtjb25zdCBoPWwuZnJvbU5vZGUsZj1sLnRvTm9kZSxhPWg9PT1udWxsfHx0LmhhcyhoKSxjPWY9PT1udWxsfHx0LmhhcyhmKTsobj9hJiZjOmF8fGMpJiZQYXJ0LmNoKHQsbCxlLHMsbixvKX19aWYocz4xKXtjb25zdCByPWkuZmluZFRyZWVDaGlsZHJlbk5vZGVzKCk7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtQYXJ0LmNoKHQsbCxlLHMtMSxuLG8pfX19ZWxzZSBpZihpIGluc3RhbmNlb2YgTGluayl7Y29uc3Qgcj1pLmxhYmVsTm9kZXM7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtQYXJ0LmNoKHQsbCxlLHMsbixvKX19fX1nZXQgZHJhZ0NvbXB1dGF0aW9uKCl7cmV0dXJuIHRoaXMuSiE9PW51bGw/dGhpcy5KLmF5Om51bGx9c2V0IGRyYWdDb21wdXRhdGlvbih0KXtjb25zdCBpPXRoaXMuZHJhZ0NvbXB1dGF0aW9uO2khPT10JiYodCE9PW51bGwmJlUuUCh0LFBhcnQsXCJkcmFnQ29tcHV0YXRpb25cIiksdGhpcy5aaSgpLmF5PXQsdGhpcy50KFwiZHJhZ0NvbXB1dGF0aW9uXCIsaSx0KSl9Z2V0IHNoYWRvd09mZnNldCgpe3JldHVybiB0aGlzLkohPT1udWxsP3RoaXMuSi5meTpQb2ludC5rQ31zZXQgc2hhZG93T2Zmc2V0KHQpe2NvbnN0IGk9dGhpcy5zaGFkb3dPZmZzZXQ7aS5lcXVhbHModCl8fChEZWJ1ZyYmVS5lKHQsUG9pbnQsUGFydCxcInNoYWRvd09mZnNldFwiKSx0PXQuTigpLHRoaXMuWmkoKS5meT10LHRoaXMuTCgpLHRoaXMudChcInNoYWRvd09mZnNldFwiLGksdCkpfWdldCBzaGFkb3dDb2xvcigpe3JldHVybiB0aGlzLkohPT1udWxsP3RoaXMuSi5jeTpcImdyYXlcIn1zZXQgc2hhZG93Q29sb3IodCl7Y29uc3QgaT10aGlzLnNoYWRvd0NvbG9yO2khPT10JiYoRGVidWcmJlUuaSh0LFwic3RyaW5nXCIsUGFydCxcInNoYWRvd0NvbG9yXCIpLHRoaXMuWmkoKS5jeT10LHRoaXMuTCgpLHRoaXMudChcInNoYWRvd0NvbG9yXCIsaSx0KSl9Z2V0IHNoYWRvd0JsdXIoKXtyZXR1cm4gdGhpcy5KIT09bnVsbD90aGlzLkoud246NH1zZXQgc2hhZG93Qmx1cih0KXtjb25zdCBpPXRoaXMuc2hhZG93Qmx1cjtpIT09dCYmKERlYnVnJiZVLmkodCxcIm51bWJlclwiLFBhcnQsXCJzaGFkb3dCbHVyXCIpLHRoaXMuWmkoKS53bj10LHRoaXMuTCgpLHRoaXMudChcInNoYWRvd0JsdXJcIixpLHQpKX19Y2xhc3MgUGFydFRlbXBsYXRlU2V0dGluZ3N7bWk7R3A7bHk7JHA7SnA7WnA7dnA7UXA7X3A7dHk7aXk7ZXk7bnk7V3A7anA7SHA7cXA7YXk7aHk7Znk7Y3k7d247Y29uc3RydWN0b3IoKXt0aGlzLm1pPSExLHRoaXMuR3A9bnVsbCx0aGlzLmx5PW51bGwsdGhpcy4kcD1udWxsLHRoaXMuSnA9XCJcIix0aGlzLlpwPW51bGwsdGhpcy52cD1udWxsLHRoaXMuUXA9bnVsbCx0aGlzLl9wPVwiXCIsdGhpcy50eT1TaXplLlB3LHRoaXMuaXk9bnVsbCx0aGlzLmV5PVwiXCIsdGhpcy5ueT1TcG90LkRlZmF1bHQsdGhpcy5XcD1cIlwiLHRoaXMuanA9U3BvdC5Ub3BMZWZ0LHRoaXMuSHA9UG9pbnQueEMsdGhpcy5xcD1Qb2ludC5iQyx0aGlzLmF5PW51bGwsdGhpcy5oeT0xMjcsdGhpcy5meT1Qb2ludC5rQyx0aGlzLmN5PVwiZ3JheVwiLHRoaXMud249NH1jb3B5KCl7Y29uc3QgdD1uZXcgUGFydFRlbXBsYXRlU2V0dGluZ3M7cmV0dXJuIHQuR3A9dGhpcy5HcCx0Lmx5PXRoaXMubHksdC4kcD10aGlzLiRwLHQuSnA9dGhpcy5KcCx0LlpwPXRoaXMuWnAsdC52cD10aGlzLnZwLHQuUXA9dGhpcy5RcCx0Ll9wPXRoaXMuX3AsdC50eT10aGlzLnR5Lk4oKSx0Lml5PXRoaXMuaXksdC5leT10aGlzLmV5LHQubnk9dGhpcy5ueS5OKCksdC5XcD10aGlzLldwLHQuanA9dGhpcy5qcC5OKCksdC5IcD10aGlzLkhwLk4oKSx0LnFwPXRoaXMucXAuTigpLHQuYXk9dGhpcy5heSx0Lmh5PXRoaXMuaHksdC5meT10aGlzLmZ5Lk4oKSx0LmN5PXRoaXMuY3ksdC53bj10aGlzLnduLHR9fWNsYXNzIEFkb3JubWVudCBleHRlbmRzIFBhcnR7eXM7SXQ7Y007dU07Z2M7Y29uc3RydWN0b3IodCxpKXtsZXQgZTt0PT09dm9pZCAwfHx0IGluc3RhbmNlb2YgUGFuZWxMYXlvdXR8fHR5cGVvZiB0PT1cInN0cmluZ1wiP2U9dDp0JiYoaT10KSxzdXBlcihlKSx0aGlzLmsmPS0yNTcsdGhpcy5mbD1cIkFkb3JubWVudFwiLHRoaXMueXM9bnVsbCx0aGlzLmNNPTAsdGhpcy51TT0hMSx0aGlzLkl0PW51bGwsdGhpcy5nYz1udWxsLGkmJk9iamVjdC5hc3NpZ24odGhpcyxpKX10b1N0cmluZygpe2NvbnN0IHQ9dGhpcy5hZG9ybmVkUGFydDtyZXR1cm5cIkFkb3JubWVudChcIit0aGlzLmNhdGVnb3J5K1wiKVwiKyh0IT09bnVsbD90LnRvU3RyaW5nKCk6XCJcIil9dXBkYXRlUmVsYXRpb25zaGlwc0Zyb21EYXRhKCl7fWZkKHQpe2NvbnN0IGk9dGhpcy5hZG9ybmVkT2JqZWN0O2lmKCEoaSBpbnN0YW5jZW9mIFNoYXBlKSlyZXR1cm47Y29uc3QgZT1pLnBhcnQ7aWYoIShlIGluc3RhbmNlb2YgTGluaykpcmV0dXJuO2NvbnN0IHM9ZS5wYXRoO2xldCBuPXMuZ2VvbWV0cnk7ZS5mZCh0KSxuPXMuZ2VvbWV0cnk7Y29uc3Qgbz10aGlzLlQuaCxyPW8ubGVuZ3RoO2ZvcihsZXQgbD0wO2w8cjtsKyspe2NvbnN0IGg9b1tsXTtoLmlzUGFuZWxNYWluJiZoIGluc3RhbmNlb2YgU2hhcGUmJihoLmZ0PW4pfX1oYXNQbGFjZWhvbGRlcigpe3JldHVybiB0aGlzLkl0IT09bnVsbCYmdGhpcy5JdC5pc1Zpc2libGVPYmplY3QoKX1nZXQgcGxhY2Vob2xkZXIoKXtyZXR1cm4gdGhpcy5JdH1nZXQgYWRvcm5lZE9iamVjdCgpe3JldHVybiB0aGlzLnlzfXNldCBhZG9ybmVkT2JqZWN0KHQpe0RlYnVnJiZ0IT09bnVsbCYmVS5lKHQsR3JhcGhPYmplY3QsUGFydCxcImFkb3JuZWRPYmplY3Q6dmFsdWVcIik7Y29uc3QgaT10aGlzLmFkb3JuZWRQYXJ0O2xldCBlPW51bGw7dCE9PW51bGwmJihlPXQucGFydCksaSE9PW51bGwmJih0PT09bnVsbHx8aSE9PWUpJiZpLnJlbW92ZUFkb3JubWVudCh0aGlzLmNhdGVnb3J5KSx0aGlzLnlzPXQsZSE9PW51bGwmJmUuYWRkQWRvcm5tZW50KHRoaXMuY2F0ZWdvcnksdGhpcyl9Z2V0IGFkb3JuZWRQYXJ0KCl7Y29uc3QgdD10aGlzLnlzO3JldHVybiB0IT09bnVsbD90LnBhcnQ6bnVsbH12cigpe2NvbnN0IHQ9dGhpcy55cztpZih0PT09bnVsbClyZXR1cm4hMDtjb25zdCBpPXQucGFydDtyZXR1cm4gaT09PW51bGx8fCFpLm5zKCl9Q2UoKXtyZXR1cm4hMX1nZXQgY29udGFpbmluZ0dyb3VwKCl7cmV0dXJuIG51bGx9dGModCxpLGUscyxuLG8scil7aWYodD09PTMmJmk9PT1cImVsZW1lbnRzXCIpe2lmKG4gaW5zdGFuY2VvZiBQbGFjZWhvbGRlcil0aGlzLkl0PT09bnVsbD90aGlzLkl0PW46RGVidWcmJnRoaXMuSXQhPT1uJiZVLm4oXCJDYW5ub3QgaW5zZXJ0IGEgc2Vjb25kIFBsYWNlaG9sZGVyIGludG8gdGhlIHZpc3VhbCB0cmVlIG9mIGFuIEFkb3JubWVudC5cIik7ZWxzZSBpZihuIGluc3RhbmNlb2YgUGFuZWwpe2NvbnN0IGw9bi5maW5kSW5WaXN1YWxUcmVlKGg9PmggaW5zdGFuY2VvZiBQbGFjZWhvbGRlcik7bCBpbnN0YW5jZW9mIFBsYWNlaG9sZGVyJiYodGhpcy5JdD09PW51bGw/dGhpcy5JdD1sOkRlYnVnJiZ0aGlzLkl0IT09bCYmVS5uKFwiQ2Fubm90IGluc2VydCBhIHNlY29uZCBQbGFjZWhvbGRlciBpbnRvIHRoZSB2aXN1YWwgdHJlZSBvZiBhbiBBZG9ybm1lbnQuXCIpKX19ZWxzZSB0PT09NCYmaT09PVwiZWxlbWVudHNcIiYmdGhpcy5JdCE9PW51bGwmJihzPT09dGhpcy5JdD90aGlzLkl0PW51bGw6cyBpbnN0YW5jZW9mIFBhbmVsJiZ0aGlzLkl0LmlzQ29udGFpbmVkQnkocykmJih0aGlzLkl0PW51bGwpKTtzdXBlci50Yyh0LGksZSxzLG4sbyxyKX11cGRhdGVBZG9ybm1lbnRzKCl7fUpmKCl7fX12YXIgUG9ydFNwcmVhZGluZz0oeT0+KHlbeS5Ob25lPTBdPVwiTm9uZVwiLHlbeS5FdmVubHk9MV09XCJFdmVubHlcIix5W3kuUGFja2VkPTJdPVwiUGFja2VkXCIseSkpKFBvcnRTcHJlYWRpbmd8fHt9KTtjbGFzcyBOb2RlIGV4dGVuZHMgUGFydHtCO1Z0O0FjO3VsO05oO2hlO29pO2NvbnN0cnVjdG9yKHQsaSl7bGV0IGU7dD09PXZvaWQgMHx8dCBpbnN0YW5jZW9mIFBhbmVsTGF5b3V0fHx0eXBlb2YgdD09XCJzdHJpbmdcIj9lPXQ6dCYmKGk9dCksc3VwZXIoZSksdGhpcy5CPTEzLHRoaXMuVnQ9bnVsbCx0aGlzLm9pPW5ldyBMaXN0LHRoaXMuQWM9bnVsbCx0aGlzLnVsPW51bGwsdGhpcy5oZT1udWxsLHRoaXMuTmg9ITEsaSYmT2JqZWN0LmFzc2lnbih0aGlzLGkpfWNsb25lUHJvdGVjdGVkKHQpe3N1cGVyLmNsb25lUHJvdGVjdGVkKHQpLHQuQj10aGlzLkIsdGhpcy5WdCE9PW51bGwmJih0aGlzLlZ0Lm1pP3QuVnQ9dGhpcy5WdDp0LlZ0PXRoaXMuVnQuY29weSgpKX1Ybyh0KXtzdXBlci5Ybyh0KSx0LmludmFsaWRhdGVDb25uZWN0ZWRMaW5rcygpLHQudWw9dGhpcy51bCx0LmhlPW51bGx9c3RhdGljIFNwcmVhZGluZ05vbmU9MDtzdGF0aWMgU3ByZWFkaW5nRXZlbmx5PTE7c3RhdGljIFNwcmVhZGluZ1BhY2tlZD0yO2RsKCl7cmV0dXJuIHRoaXMuVnQ9PT1udWxsP3RoaXMuVnQ9bmV3IE5vZGVUZW1wbGF0ZVNldHRpbmdzOnRoaXMuVnQubWkmJih0aGlzLlZ0PXRoaXMuVnQuY29weSgpKSx0aGlzLlZ0fW1oKCl7c3VwZXIubWgoKSx0aGlzLlZ0IT09bnVsbCYmKHRoaXMuVnQubWk9ITApfWJUKHQpe3QhPT1udWxsJiYodGhpcy51bD09PW51bGwmJih0aGlzLnVsPW5ldyBHU2V0KSx0aGlzLnVsLmFkZCh0KSl9a1QodCl7dCE9PW51bGwmJnRoaXMudWwhPT1udWxsJiZ0aGlzLnVsLmRlbGV0ZSh0KX1TVCh0LGksZSl7aWYodD09PW51bGx8fHRoaXMudWw9PT1udWxsKXJldHVybiBudWxsO2NvbnN0IHM9dGhpcy51bC5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2lmKG4udXk9PT10aGlzJiZuLkFiPT09dCYmbi5nTj09PWkmJm4ubU49PT1lfHxuLnV5PT09dCYmbi5BYj09PXRoaXMmJm4uZ049PT1lJiZuLm1OPT09aSlyZXR1cm4gbn1yZXR1cm4gbnVsbH1pbnZhbGlkYXRlTGlua0J1bmRsZSh0LGksZSl7aT09bnVsbCYmKGk9XCJcIiksZT09bnVsbCYmKGU9XCJcIik7Y29uc3Qgcz10aGlzLlNUKHQsaSxlKTtzIT09bnVsbCYmcy5EZCgpfXRjKHQsaSxlLHMsbixvLHIpe3Q9PT0zJiZpPT09XCJlbGVtZW50c1wiP3RoaXMuaGU9bnVsbDp0PT09NCYmaT09PVwiZWxlbWVudHNcIiYmKHRoaXMuaGU9bnVsbCksc3VwZXIudGModCxpLGUscyxuLG8scil9aW52YWxpZGF0ZUNvbm5lY3RlZExpbmtzKHQpe2NvbnN0IGk9dGhpcy5saW5rc0Nvbm5lY3RlZDtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO3QhPT12b2lkIDAmJnQuaGFzKGUpfHwodGhpcy5RaShlLmZyb21Qb3J0KSx0aGlzLlFpKGUudG9Qb3J0KSxlLmludmFsaWRhdGVSb3V0ZSgpKX19Q0wodCl7Y29uc3QgaT10aGlzLmxpbmtzQ29ubmVjdGVkO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7ZS5mcm9tUG9ydCE9PXQmJmUudG9Qb3J0IT09dHx8KHRoaXMuUWkoZS5mcm9tUG9ydCksdGhpcy5RaShlLnRvUG9ydCksZS5pbnZhbGlkYXRlUm91dGUoKSl9fVFpKHQpe2lmKHQ9PT1udWxsKXJldHVybjtjb25zdCBpPXQuWnU7aSE9PW51bGwmJmkuRGQoKTtjb25zdCBlPXQucGFydCxzPWUuY29udGFpbmluZ0dyb3VwO3MhPT1udWxsJiYhZS5pc1Zpc2libGUoKSYmcy5RaShzLnBvcnQpfXZyKCl7cmV0dXJuITB9Z2V0IHBvcnRTcHJlYWRpbmcoKXtyZXR1cm4gdGhpcy5WdCE9PW51bGw/dGhpcy5WdC5neToxfXNldCBwb3J0U3ByZWFkaW5nKHQpe2NvbnN0IGk9dGhpcy5wb3J0U3ByZWFkaW5nO2lmKGkhPT10KXtEZWJ1ZyYmdCE9PTAmJnQhPT0xJiZ0IT09MiYmVS5uKFwiTm9kZS5wb3J0U3ByZWFkaW5nIGNhbiBvbmx5IGJlIHNldCB0byBQb3J0U3ByZWFkaW5nLk5vbmUsIFBvcnRTcHJlYWRpbmcuRXZlbmx5LCBvciBQb3J0U3ByZWFkaW5nLlBhY2tlZCwgbm90OiBcIit0KSx0aGlzLmRsKCkuZ3k9dCx0aGlzLnQoXCJwb3J0U3ByZWFkaW5nXCIsaSx0KTtjb25zdCBlPXRoaXMuZGlhZ3JhbTtpZihlIT09bnVsbCYmZS51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nKXJldHVybjt0aGlzLmludmFsaWRhdGVDb25uZWN0ZWRMaW5rcygpfX1nZXQgYXZvaWRhYmxlKCl7cmV0dXJuKHRoaXMuQiY4KSE9PTB9c2V0IGF2b2lkYWJsZSh0KXtjb25zdCBpPSh0aGlzLkImOCkhPT0wO2lmKGkhPT10KXtEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsTm9kZSxcImF2b2lkYWJsZVwiKSx0aGlzLkI9dGhpcy5CXjg7Y29uc3QgZT10aGlzLmRpYWdyYW07ZSE9PW51bGwmJmUuclAodGhpcyksdGhpcy50KFwiYXZvaWRhYmxlXCIsaSx0KX19Z2V0IGF2b2lkYWJsZU1hcmdpbigpe3JldHVybiB0aGlzLlZ0IT09bnVsbD90aGlzLlZ0Lm15Ok1hcmdpbi5BQ31zZXQgYXZvaWRhYmxlTWFyZ2luKHQpe3R5cGVvZiB0PT1cIm51bWJlclwiP3Q9bmV3IE1hcmdpbih0KTpVLmUodCxNYXJnaW4sTm9kZSxcImF2b2lkYWJsZU1hcmdpblwiKTtjb25zdCBpPXRoaXMuYXZvaWRhYmxlTWFyZ2luO2lmKCFpLmVxdWFscyh0KSl7dD10Lk4oKSx0aGlzLmRsKCkubXk9dDtjb25zdCBlPXRoaXMuZGlhZ3JhbTtlIT09bnVsbCYmZS5yUCh0aGlzKSx0aGlzLnQoXCJhdm9pZGFibGVNYXJnaW5cIixpLHQpfX1jYW5Bdm9pZCgpe3JldHVybiB0aGlzLmF2b2lkYWJsZSYmIXRoaXMuaXNMaW5rTGFiZWx9Z2V0QXZvaWRhYmxlUmVjdCh0KXtyZXR1cm4gdC5zZXQodGhpcy5hY3R1YWxCb3VuZHMpLHQuYWRkTWFyZ2luKHRoaXMuYXZvaWRhYmxlTWFyZ2luKSx0fWZpbmRWaXNpYmxlTm9kZSgpe2xldCB0PXRoaXM7Zm9yKDt0IT09bnVsbCYmIXQuaXNWaXNpYmxlKCk7KXQ9dC5jb250YWluaW5nR3JvdXA7cmV0dXJuIHR9aXNWaXNpYmxlKCl7aWYoIXN1cGVyLmlzVmlzaWJsZSgpKXJldHVybiExO2xldCB0PSEwLGk9MTtjb25zdCBlPXRoaXMuZGlhZ3JhbTtpZihlIT09bnVsbCl7aWYoZS5hbmltYXRpb25NYW5hZ2VyLnh4KHRoaXMpKXJldHVybiEwO3Q9ZS5pc1RyZWVQYXRoVG9DaGlsZHJlbixpPWUudHJlZUNvbGxhcHNlUG9saWN5fWlmKGk9PT0xKXtjb25zdCBuPXRoaXMuZmluZFRyZWVQYXJlbnROb2RlKCk7aWYobiE9PW51bGwmJiFuLmlzVHJlZUV4cGFuZGVkKXJldHVybiExfWVsc2UgaWYoaT09PTIpe2NvbnN0IG49dD90aGlzLmZpbmRMaW5rc0ludG8oKTp0aGlzLmZpbmRMaW5rc091dE9mKCk7bGV0IG89ITEscj0hMTtmb3IoO24ubmV4dCgpOyl7Y29uc3QgbD1uLnZhbHVlO2lmKGwuaXNUcmVlTGluayl7bz0hMDtjb25zdCBoPXQ/bC5mcm9tTm9kZTpsLnRvTm9kZTtpZihoJiZoLmlzVHJlZUV4cGFuZGVkKXtyPSEwO2JyZWFrfX19aWYobyYmIXIpcmV0dXJuITF9ZWxzZSBpZihpPT09Myl7Y29uc3Qgbj10P3RoaXMuZmluZExpbmtzSW50bygpOnRoaXMuZmluZExpbmtzT3V0T2YoKTtsZXQgbz0hMSxyPSExO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBsPW4udmFsdWU7aWYobC5pc1RyZWVMaW5rKXtvPSEwO2NvbnN0IGg9dD9sLmZyb21Ob2RlOmwudG9Ob2RlO2lmKGgmJiFoLmlzVHJlZUV4cGFuZGVkKXtyPSEwO2JyZWFrfX19aWYobyYmcilyZXR1cm4hMX1jb25zdCBzPXRoaXMubGFiZWxlZExpbms7cmV0dXJuIHMhPT1udWxsP3MuaXNWaXNpYmxlKCk6ITB9S2kodCl7c3VwZXIuS2kodCk7Y29uc3QgaT10aGlzLmxpbmtzQ29ubmVjdGVkO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7aWYodCYmdGhpcy5jb250YWluaW5nR3JvdXAhPT1udWxsKXtjb25zdCBzPWUuZ2V0T3RoZXJOb2RlKHRoaXMpO3MhPT1udWxsJiYhcy5pc01lbWJlck9mKHRoaXMuY29udGFpbmluZ0dyb3VwKSYmZS5pbnZhbGlkYXRlUm91dGUoKX1lLktpKHQpfX1nZXQgbGlua3NDb25uZWN0ZWQoKXtyZXR1cm4gdGhpcy5vaS5pdGVyYXRvcn1maW5kRXh0ZXJuYWxUcmVlTGlua3NDb25uZWN0ZWQoKXtjb25zdCB0PW5ldyBHU2V0LGk9bmV3IEdTZXQ7cmV0dXJuIHRoaXMuTVQodGhpcyx0LGkpLGkuaXRlcmF0b3J9TVQodCxpLGUpe2lmKHQ9PT1udWxsfHxpLmhhcyh0KSlyZXR1cm47aS5hZGQodCk7bGV0IHM9ITA7Y29uc3Qgbj10aGlzLmRpYWdyYW07biE9PW51bGwmJihzPW4uaXNUcmVlUGF0aFRvQ2hpbGRyZW4pLHQubGlua3NDb25uZWN0ZWQuZWFjaChvPT57by5pc1RyZWVMaW5rPyhzP28uZnJvbU5vZGU9PT10Om8udG9Ob2RlPT09dCkmJnRoaXMuTVQocz9vLnRvTm9kZTpvLmZyb21Ob2RlLGksZSk6ZS5hZGQobyl9KX1maW5kTGlua3NDb25uZWN0ZWQodCl7aWYodD09PXZvaWQgMCYmKHQ9bnVsbCksdD09PW51bGwpcmV0dXJuIHRoaXMub2kuaXRlcmF0b3I7RGVidWcmJlUuaSh0LFwic3RyaW5nXCIsTm9kZSxcImZpbmRMaW5rc0Nvbm5lY3RlZDpwaWRcIik7Y29uc3QgaT1uZXcgTGlzdEl0ZXJhdG9yKHRoaXMub2kpLGU9dGhpcztyZXR1cm4gaS5wcmVkaWNhdGU9cz0+cy5mcm9tTm9kZT09PWUmJnMuZnJvbVBvcnRJZD09PXR8fHMudG9Ob2RlPT09ZSYmcy50b1BvcnRJZD09PXQsaX1maW5kTGlua3NPdXRPZih0KXt0PT09dm9pZCAwJiYodD1udWxsKSxEZWJ1ZyYmdCE9PW51bGwmJlUuaSh0LFwic3RyaW5nXCIsTm9kZSxcImZpbmRMaW5rc091dE9mOnBpZFwiKTtjb25zdCBpPW5ldyBMaXN0SXRlcmF0b3IodGhpcy5vaSksZT10aGlzO3JldHVybiBpLnByZWRpY2F0ZT1zPT5zLmZyb21Ob2RlIT09ZT8hMTp0PT09bnVsbD8hMDpzLmZyb21Qb3J0SWQ9PT10LGl9ZmluZExpbmtzSW50byh0KXt0PT09dm9pZCAwJiYodD1udWxsKSxEZWJ1ZyYmdCE9PW51bGwmJlUuaSh0LFwic3RyaW5nXCIsTm9kZSxcImZpbmRMaW5rc0ludG86cGlkXCIpO2NvbnN0IGk9bmV3IExpc3RJdGVyYXRvcih0aGlzLm9pKSxlPXRoaXM7cmV0dXJuIGkucHJlZGljYXRlPXM9PnMudG9Ob2RlIT09ZT8hMTp0PT09bnVsbD8hMDpzLnRvUG9ydElkPT09dCxpfWZpbmROb2Rlc0Nvbm5lY3RlZCh0KXt0PT09dm9pZCAwJiYodD1udWxsKSxEZWJ1ZyYmdCE9PW51bGwmJlUuaSh0LFwic3RyaW5nXCIsTm9kZSxcImZpbmROb2Rlc0Nvbm5lY3RlZDpwaWRcIik7bGV0IGk9bnVsbCxlPW51bGw7Y29uc3Qgcz10aGlzLm9pLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7aWYobi5mcm9tTm9kZT09PXRoaXMpe2lmKHQ9PT1udWxsfHxuLmZyb21Qb3J0SWQ9PT10KXtjb25zdCBvPW4udG9Ob2RlO2khPT1udWxsP2kuYWRkKG8pOmUhPT1udWxsJiZlIT09bz8oaT1uZXcgR1NldCxpLmFkZChlKSxpLmFkZChvKSk6ZT1vfX1lbHNlIGlmKG4udG9Ob2RlPT09dGhpcyYmKHQ9PT1udWxsfHxuLnRvUG9ydElkPT09dCkpe2NvbnN0IG89bi5mcm9tTm9kZTtpIT09bnVsbD9pLmFkZChvKTplIT09bnVsbCYmZSE9PW8/KGk9bmV3IEdTZXQsaS5hZGQoZSksaS5hZGQobykpOmU9b319cmV0dXJuIGkhPT1udWxsP2kuaXRlcmF0b3I6ZSE9PW51bGw/bmV3IFNpbmdsZXRvbkl0ZXJhdG9yKGUpOkVtcHR5SXRlcmF0b3IuaW5zdGFuY2V9ZmluZE5vZGVzT3V0T2YodCl7dD09PXZvaWQgMCYmKHQ9bnVsbCksRGVidWcmJnQhPT1udWxsJiZVLmkodCxcInN0cmluZ1wiLE5vZGUsXCJmaW5kTm9kZXNPdXRPZjpwaWRcIik7bGV0IGk9bnVsbCxlPW51bGw7Y29uc3Qgcz10aGlzLm9pLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7aWYobi5mcm9tTm9kZT09PXRoaXMmJih0PT09bnVsbHx8bi5mcm9tUG9ydElkPT09dCkpe2NvbnN0IG89bi50b05vZGU7aSE9PW51bGw/aS5hZGQobyk6ZSE9PW51bGwmJmUhPT1vPyhpPW5ldyBHU2V0LGkuYWRkKGUpLGkuYWRkKG8pKTplPW99fXJldHVybiBpIT09bnVsbD9pLml0ZXJhdG9yOmUhPT1udWxsP25ldyBTaW5nbGV0b25JdGVyYXRvcihlKTpFbXB0eUl0ZXJhdG9yLmluc3RhbmNlfWZpbmROb2Rlc0ludG8odCl7dD09PXZvaWQgMCYmKHQ9bnVsbCksRGVidWcmJnQhPT1udWxsJiZVLmkodCxcInN0cmluZ1wiLE5vZGUsXCJmaW5kTm9kZXNJbnRvOnBpZFwiKTtsZXQgaT1udWxsLGU9bnVsbDtjb25zdCBzPXRoaXMub2kuaXRlcmF0b3I7Zm9yKDtzLm5leHQoKTspe2NvbnN0IG49cy52YWx1ZTtpZihuLnRvTm9kZT09PXRoaXMmJih0PT09bnVsbHx8bi50b1BvcnRJZD09PXQpKXtjb25zdCBvPW4uZnJvbU5vZGU7aSE9PW51bGw/aS5hZGQobyk6ZSE9PW51bGwmJmUhPT1vPyhpPW5ldyBHU2V0LGkuYWRkKGUpLGkuYWRkKG8pKTplPW99fXJldHVybiBpIT09bnVsbD9pLml0ZXJhdG9yOmUhPT1udWxsP25ldyBTaW5nbGV0b25JdGVyYXRvcihlKTpFbXB0eUl0ZXJhdG9yLmluc3RhbmNlfWZpbmRMaW5rc0JldHdlZW4odCxpLGUpe2k9PT12b2lkIDAmJihpPW51bGwpLGU9PT12b2lkIDAmJihlPW51bGwpLERlYnVnJiYoVS5lKHQsTm9kZSxOb2RlLFwiZmluZExpbmtzQmV0d2VlbjpvdGhlcm5vZGVcIiksaSE9PW51bGwmJlUuaShpLFwic3RyaW5nXCIsTm9kZSxcImZpbmRMaW5rc0JldHdlZW46cGlkXCIpLGUhPT1udWxsJiZVLmkoZSxcInN0cmluZ1wiLE5vZGUsXCJmaW5kTGlua3NCZXR3ZWVuOm90aGVycGlkXCIpKTtjb25zdCBzPW5ldyBMaXN0SXRlcmF0b3IodGhpcy5vaSksbj10aGlzO3JldHVybiBzLnByZWRpY2F0ZT1vPT5vLmZyb21Ob2RlPT09biYmby50b05vZGU9PT10JiYoaT09PW51bGx8fG8uZnJvbVBvcnRJZD09PWkpJiYoZT09PW51bGx8fG8udG9Qb3J0SWQ9PT1lKXx8by5mcm9tTm9kZT09PXQmJm8udG9Ob2RlPT09biYmKGU9PT1udWxsfHxvLmZyb21Qb3J0SWQ9PT1lKSYmKGk9PT1udWxsfHxvLnRvUG9ydElkPT09aSksc31maW5kTGlua3NUbyh0LGksZSl7aT09PXZvaWQgMCYmKGk9bnVsbCksZT09PXZvaWQgMCYmKGU9bnVsbCksRGVidWcmJihVLmUodCxOb2RlLE5vZGUsXCJmaW5kTGlua3NUbzpvdGhlcm5vZGVcIiksaSE9PW51bGwmJlUuaShpLFwic3RyaW5nXCIsTm9kZSxcImZpbmRMaW5rc1RvOnBpZFwiKSxlIT09bnVsbCYmVS5pKGUsXCJzdHJpbmdcIixOb2RlLFwiZmluZExpbmtzVG86b3RoZXJwaWRcIikpO2NvbnN0IHM9bmV3IExpc3RJdGVyYXRvcih0aGlzLm9pKSxuPXRoaXM7cmV0dXJuIHMucHJlZGljYXRlPW89PiEoby5mcm9tTm9kZSE9PW58fG8udG9Ob2RlIT09dHx8aSE9PW51bGwmJm8uZnJvbVBvcnRJZCE9PWl8fGUhPT1udWxsJiZvLnRvUG9ydElkIT09ZSksc31nZXQgbGlua0Nvbm5lY3RlZCgpe3JldHVybiB0aGlzLlZ0IT09bnVsbD90aGlzLlZ0Lnl5Om51bGx9c2V0IGxpbmtDb25uZWN0ZWQodCl7Y29uc3QgaT10aGlzLmxpbmtDb25uZWN0ZWQ7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsTm9kZSxcImxpbmtDb25uZWN0ZWRcIiksdGhpcy5kbCgpLnl5PXQsdGhpcy50KFwibGlua0Nvbm5lY3RlZFwiLGksdCkpfWdldCBsaW5rRGlzY29ubmVjdGVkKCl7cmV0dXJuIHRoaXMuVnQhPT1udWxsP3RoaXMuVnQud3k6bnVsbH1zZXQgbGlua0Rpc2Nvbm5lY3RlZCh0KXtjb25zdCBpPXRoaXMubGlua0Rpc2Nvbm5lY3RlZDtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxOb2RlLFwibGlua0Rpc2Nvbm5lY3RlZFwiKSx0aGlzLmRsKCkud3k9dCx0aGlzLnQoXCJsaW5rRGlzY29ubmVjdGVkXCIsaSx0KSl9Z2V0IGxpbmtWYWxpZGF0aW9uKCl7cmV0dXJuIHRoaXMuVnQhPT1udWxsP3RoaXMuVnQuVGw6bnVsbH1zZXQgbGlua1ZhbGlkYXRpb24odCl7Y29uc3QgaT10aGlzLmxpbmtWYWxpZGF0aW9uO2khPT10JiYodCE9PW51bGwmJlUuUCh0LE5vZGUsXCJsaW5rVmFsaWRhdGlvblwiKSx0aGlzLmRsKCkuVGw9dCx0aGlzLnQoXCJsaW5rVmFsaWRhdGlvblwiLGksdCkpfUxiKHQsaSl7dGhpcy5RaShpKTtjb25zdCBlPXRoaXMub2kuaGFzKHQpO2lmKGV8fHRoaXMub2kuYWRkKHQpLCFlfHx0LmZyb21Ob2RlPT09dC50b05vZGUpe2NvbnN0IHM9dGhpcy5saW5rQ29ubmVjdGVkO2lmKHMhPT1udWxsKXtsZXQgbj0hMDtjb25zdCBvPXRoaXMuZGlhZ3JhbTtvIT09bnVsbCYmKG49by5ILG8uSD0hMCkscyh0aGlzLHQsaSksbyE9PW51bGwmJihvLkg9bil9fWlmKCFlKXtpZighdC5pc1RyZWVMaW5rKXJldHVybjtjb25zdCBzPXQuZnJvbU5vZGUsbj10LnRvTm9kZTtpZihzIT09bnVsbCYmbiE9PW51bGwmJnMhPT1uKXtsZXQgbz0hMDtjb25zdCByPXRoaXMuZGlhZ3JhbTtyIT09bnVsbCYmKG89ci5pc1RyZWVQYXRoVG9DaGlsZHJlbik7Y29uc3QgbD1vP246cyxoPW8/czpuO2lmKGwuTmh8fChsLk5oPWgpLGguaXNUcmVlTGVhZil7aWYociE9PW51bGwmJnIudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZylyZXR1cm47bz9zPT09aCYmKGguaXNUcmVlTGVhZj0hMSk6bj09PWgmJihoLmlzVHJlZUxlYWY9ITEpfX19fVRiKHQsaSl7dGhpcy5RaShpKTtjb25zdCBlPXRoaXMub2kuZGVsZXRlKHQpO2xldCBzPW51bGw7aWYoZXx8dC50b05vZGU9PT10LmZyb21Ob2RlKXtjb25zdCBuPXRoaXMubGlua0Rpc2Nvbm5lY3RlZDtpZihzPXRoaXMuZGlhZ3JhbSxuIT09bnVsbCl7bGV0IG89ITA7cyE9PW51bGwmJihvPXMuSCxzLkg9ITApLG4odGhpcyx0LGkpLHMhPT1udWxsJiYocy5IPW8pfX1pZihlKXtpZighdC5pc1RyZWVMaW5rKXJldHVybjtsZXQgbj0hMDtzIT09bnVsbCYmKG49cy5pc1RyZWVQYXRoVG9DaGlsZHJlbik7Y29uc3Qgbz1uP3QudG9Ob2RlOnQuZnJvbU5vZGUscj1uP3QuZnJvbU5vZGU6dC50b05vZGU7aWYobyE9PW51bGwmJihvLk5oPSExKSxyIT09bnVsbCYmIXIuaXNUcmVlTGVhZilpZihyLm9pLmNvdW50PT09MCl7aWYoci5OaD1udWxsLHMhPT1udWxsJiZzLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpcmV0dXJuO3IuaXNUcmVlTGVhZj0hMH1lbHNlIHIuZDAoKX19ZDAoKXtpZih0aGlzLk5oPSExLHRoaXMub2kuY291bnQ9PT0wKXJldHVybjtsZXQgdD0hMDtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpZihpIT09bnVsbCYmaS51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nKXJldHVybjtpIT09bnVsbCYmKHQ9aS5pc1RyZWVQYXRoVG9DaGlsZHJlbik7Y29uc3QgZT10aGlzLm9pLml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBzPWUudmFsdWU7aWYocy5pc1RyZWVMaW5rKXtpZih0KXtpZihzLmZyb21Ob2RlPT09dGhpcyl7dGhpcy5pc1RyZWVMZWFmPSExO3JldHVybn19ZWxzZSBpZihzLnRvTm9kZT09PXRoaXMpe3RoaXMuaXNUcmVlTGVhZj0hMTtyZXR1cm59fX10aGlzLmlzVHJlZUxlYWY9ITB9dXBkYXRlUmVsYXRpb25zaGlwc0Zyb21EYXRhKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07dCE9PW51bGwmJnQucGFydE1hbmFnZXIudXBkYXRlUmVsYXRpb25zaGlwc0Zyb21EYXRhKHRoaXMpfXptKHQpe2lmKHN1cGVyLnptKHQpLCF0KXt0aGlzLmQwKCk7Y29uc3QgaT10aGlzLkFjO2khPT1udWxsJiZpLlBUKHRoaXMpfX1YbSh0KXtpZihzdXBlci5YbSh0KSwhdCl7Y29uc3QgaT10aGlzLkFjO2khPT1udWxsJiZpLk5UKHRoaXMpfX1KZigpe2lmKHRoaXMub2kuY291bnQ+MCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodCE9PW51bGwpe2NvbnN0IGk9dC5jb21tYW5kSGFuZGxlciE9PW51bGw/dC5jb21tYW5kSGFuZGxlci5kZWxldGVzQ29ubmVjdGVkTGlua3M6ITAscz10aGlzLm9pLmNvcHkoKS5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2k/dC5yZW1vdmUobik6KG4uZnJvbU5vZGU9PT10aGlzJiYobi5mcm9tTm9kZT1udWxsKSxuLnRvTm9kZT09PXRoaXMmJihuLnRvTm9kZT1udWxsKSl9fX10aGlzLmxhYmVsZWRMaW5rPW51bGwsc3VwZXIuSmYoKX1nZXQgaXNMaW5rTGFiZWwoKXtyZXR1cm4gdGhpcy5BYyE9PW51bGx9Z2V0IGxhYmVsZWRMaW5rKCl7cmV0dXJuIHRoaXMuQWN9c2V0IGxhYmVsZWRMaW5rKHQpe2NvbnN0IGk9dGhpcy5BYztpZihpIT09dCl7RGVidWcmJnQhPT1udWxsJiZVLmUodCxMaW5rLE5vZGUsXCJsYWJlbGVkTGlua1wiKTtjb25zdCBlPXRoaXMuZGlhZ3JhbSxzPXRoaXMuZGF0YTtpZihpIT09bnVsbCl7aWYoaS5OVCh0aGlzKSxlIT09bnVsbCYmcyE9PW51bGwmJiFlLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpe2NvbnN0IG49aS5kYXRhLG89ZS5tb2RlbDtpZihuIT09bnVsbCYmby5ZYSgpKXtjb25zdCByPW8uZ2V0S2V5Rm9yTm9kZURhdGEocyk7ciE9PXZvaWQgMCYmby5yZW1vdmVMYWJlbEtleUZvckxpbmtEYXRhKG4scil9fXRoaXMuY29udGFpbmluZ0dyb3VwPW51bGx9aWYodGhpcy5BYz10LHQhPT1udWxsKXtpZih0LlBUKHRoaXMpLGUhPT1udWxsJiZzIT09bnVsbCYmIWUudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZyl7Y29uc3Qgbj10LmRhdGEsbz1lLm1vZGVsO2lmKG4hPT1udWxsJiZvLllhKCkpe2NvbnN0IHI9by5nZXRLZXlGb3JOb2RlRGF0YShzKTtyIT09dm9pZCAwJiZvLmFkZExhYmVsS2V5Rm9yTGlua0RhdGEobixyKX19dGhpcy5jb250YWluaW5nR3JvdXA9dC5jb250YWluaW5nR3JvdXB9dGhpcy5oYygpLHRoaXMudChcImxhYmVsZWRMaW5rXCIsaSx0KX19ZmluZFZpc2libGVQb3J0KHQpe2xldCBpPXQ7Zm9yKDtpIT09bnVsbCYmKCFpLmFjdHVhbEJvdW5kcy5pc1JlYWwoKXx8IWkuaXNWaXNpYmxlT2JqZWN0KCkpOylpPWkucGFuZWw7cmV0dXJuIGk9PT1udWxsP3RoaXMucG9ydDppfWZpbmRQb3J0KHQpe2lmKERlYnVnJiZVLmkodCxcInN0cmluZ1wiLE5vZGUsXCJmaW5kUG9ydDpwaWRcIiksdGhpcy5oZT09PW51bGwpe2lmKHQ9PT1cIlwiJiZ0aGlzLnluPT09ITEpcmV0dXJuIHRoaXM7dGhpcy5DVCgpfWxldCBpPXRoaXMuaGUuZ2V0KHQpO3JldHVybiBpIT09bnVsbHx8dCE9PVwiXCImJihpPXRoaXMuaGUuZ2V0KFwiXCIpLGkhPT1udWxsKT9pOnRoaXN9Z2V0IHBvcnQoKXtyZXR1cm4gdGhpcy5maW5kUG9ydChcIlwiKX1nZXQgcG9ydHMoKXtyZXR1cm4gdGhpcy5oZT09PW51bGwmJnRoaXMuQ1QoKSx0aGlzLmhlLml0ZXJhdG9yVmFsdWVzfUNUKCl7dGhpcy5oZT09PW51bGw/dGhpcy5oZT1uZXcgR01hcDp0aGlzLmhlLmNsZWFyKCksdGhpcy53YWxrVmlzdWFsVHJlZUZyb20odGhpcywodCxpKT0+dC5JTChpKSksdGhpcy5oZS5jb3VudD09PTAmJnRoaXMuaGUuc2V0KFwiXCIsdGhpcyl9SUwodCl7Y29uc3QgaT10LnBvcnRJZDtpIT09bnVsbCYmdGhpcy5oZSE9PW51bGwmJnRoaXMuaGUuc2V0KGksdCl9SVAodCxpKXtjb25zdCBlPXQucG9ydElkO2lmKGUhPT1udWxsKXt0aGlzLmhlIT09bnVsbCYmdGhpcy5oZS5kZWxldGUoZSk7Y29uc3Qgcz10aGlzLmRpYWdyYW07aWYocyE9PW51bGwmJmkpe2xldCBuPW51bGw7Y29uc3Qgbz10aGlzLmZpbmRMaW5rc0Nvbm5lY3RlZChlKTtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlO249PT1udWxsJiYobj1VLmx0KCkpLG4ucHVzaChyKX1pZihuIT09bnVsbCl7Zm9yKGxldCByPTA7cjxuLmxlbmd0aDtyKyspe2NvbnN0IGw9bltyXTtzLnJlbW92ZShsKX1VLnR0KG4pfX19fWlzSW5UcmVlT2YodCl7aWYodD09PW51bGx8fHQ9PT10aGlzKXJldHVybiExO2xldCBpPSEwO2NvbnN0IGU9dGhpcy5kaWFncmFtO2UhPT1udWxsJiYoaT1lLmlzVHJlZVBhdGhUb0NoaWxkcmVuKTtsZXQgcz10aGlzO2NvbnN0IG49dDtsZXQgbztpZihpKWZvcig7cyE9PW47KXtvPW51bGw7Y29uc3Qgcj1zLm9pLml0ZXJhdG9yO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7aWYobC5pc1RyZWVMaW5rJiYobz1sLmZyb21Ob2RlLG8hPT1zJiZvIT09dGhpcykpYnJlYWt9aWYobz09PXRoaXN8fG89PT1udWxsfHxvPT09cylyZXR1cm4hMTtzPW99ZWxzZSBmb3IoO3MhPT1uOyl7bz1udWxsO2NvbnN0IHI9cy5vaS5pdGVyYXRvcjtmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO2lmKGwuaXNUcmVlTGluayYmKG89bC50b05vZGUsbyE9PXMmJm8hPT10aGlzKSlicmVha31pZihvPT09dGhpc3x8bz09PW51bGx8fG89PT1zKXJldHVybiExO3M9b31yZXR1cm4hMH1maW5kVHJlZVJvb3QoKXtsZXQgdD0hMDtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpIT09bnVsbCYmKHQ9aS5pc1RyZWVQYXRoVG9DaGlsZHJlbik7bGV0IGU9dGhpcyxzO2lmKHQpZm9yKDs7KXtzPW51bGw7Y29uc3Qgbj1lLm9pLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7aWYoby5pc1RyZWVMaW5rJiYocz1vLmZyb21Ob2RlLHMhPT1lJiZzIT09dGhpcykpYnJlYWt9aWYocz09PXRoaXMpcmV0dXJuIHRoaXM7aWYocz09PW51bGx8fHM9PT1lKXJldHVybiBlO2U9c31lbHNlIGZvcig7Oyl7cz1udWxsO2NvbnN0IG49ZS5vaS5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO2lmKG8uaXNUcmVlTGluayYmKHM9by50b05vZGUscyE9PWUmJnMhPT10aGlzKSlicmVha31pZihzPT09dGhpcylyZXR1cm4gdGhpcztpZihzPT09bnVsbHx8cz09PWUpcmV0dXJuIGU7ZT1zfX1maW5kQ29tbW9uVHJlZVBhcmVudCh0KXtpZih0PT09bnVsbClyZXR1cm4gbnVsbDtpZihEZWJ1ZyYmVS5lKHQsTm9kZSxOb2RlLFwiZmluZENvbW1vblRyZWVQYXJlbnQ6b3RoZXJcIiksdGhpcz09PXQpcmV0dXJuIHRoaXM7bGV0IGk9dGhpcztmb3IoO2khPT1udWxsOylpLkNiKCEwKSxpPWkuZmluZFRyZWVQYXJlbnROb2RlKCk7bGV0IGU9bnVsbDtmb3IoaT10O2khPT1udWxsOyl7aWYoaS54VCgpKXtlPWk7YnJlYWt9aT1pLmZpbmRUcmVlUGFyZW50Tm9kZSgpfWZvcihpPXRoaXM7aSE9PW51bGw7KWkuQ2IoITEpLGk9aS5maW5kVHJlZVBhcmVudE5vZGUoKTtyZXR1cm4gZX1maW5kVHJlZVBhcmVudExpbmsoKXtsZXQgdD0hMDtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpIT09bnVsbCYmKHQ9aS5pc1RyZWVQYXRoVG9DaGlsZHJlbik7Y29uc3QgZT10aGlzLm9pLml0ZXJhdG9yO2lmKHQpZm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtpZihzLmlzVHJlZUxpbmsmJnMuZnJvbU5vZGUhPT10aGlzKXJldHVybiBzfWVsc2UgZm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtpZihzLmlzVHJlZUxpbmsmJnMudG9Ob2RlIT09dGhpcylyZXR1cm4gc31yZXR1cm4gbnVsbH1maW5kVHJlZVBhcmVudE5vZGUoKXtjb25zdCB0PXRoaXMuTmg7aWYodD09PW51bGwpcmV0dXJuIG51bGw7aWYodCBpbnN0YW5jZW9mIE5vZGUpcmV0dXJuIHQ7Y29uc3QgaT10aGlzLmRpYWdyYW0sZT1pIT09bnVsbD9pLmlzVHJlZVBhdGhUb0NoaWxkcmVuOiEwLHM9dGhpcy5vaS5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2lmKCFuLmlzVHJlZUxpbmspY29udGludWU7Y29uc3Qgbz1lP24uZnJvbU5vZGU6bi50b05vZGU7aWYobyE9PXRoaXMpcmV0dXJuIHRoaXMuTmg9byxvfXJldHVybiB0aGlzLk5oPW51bGwsbnVsbH1maW5kVHJlZVBhcmVudENoYWluKCl7ZnVuY3Rpb24gdChlLHMpe3MuYWRkKGUpO2NvbnN0IG49ZS5maW5kVHJlZVBhcmVudExpbmsoKTtpZihuIT09bnVsbCl7cy5hZGQobik7Y29uc3Qgbz1lLmZpbmRUcmVlUGFyZW50Tm9kZSgpO2lmKG89PT1udWxsKXJldHVybjt0KG8scyl9fWNvbnN0IGk9bmV3IEdTZXQ7cmV0dXJuIHQodGhpcyxpKSxpfWZpbmRUcmVlTGV2ZWwoKXtyZXR1cm4gdGhpcy5nTyh0aGlzKX1nTyh0KXtsZXQgaT0wLGU9dC5maW5kVHJlZVBhcmVudE5vZGUoKTtmb3IoO2UhPT1udWxsJiZlIT09dDspZT1lLmZpbmRUcmVlUGFyZW50Tm9kZSgpLGkrKztyZXR1cm4gaX1maW5kVHJlZUNoaWxkcmVuTGlua3MoKXtsZXQgdD0hMDtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpIT09bnVsbCYmKHQ9aS5pc1RyZWVQYXRoVG9DaGlsZHJlbik7Y29uc3QgZT1uZXcgTGlzdEl0ZXJhdG9yKHRoaXMub2kpLHM9dGhpcztyZXR1cm4gdD9lLnByZWRpY2F0ZT1uPT4hKCFuLmlzVHJlZUxpbmt8fG4uZnJvbU5vZGUhPT1zKTplLnByZWRpY2F0ZT1uPT4hKCFuLmlzVHJlZUxpbmt8fG4udG9Ob2RlIT09cyksZX1maW5kVHJlZUNoaWxkcmVuTm9kZXMoKXtsZXQgdD0hMDtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpIT09bnVsbCYmKHQ9aS5pc1RyZWVQYXRoVG9DaGlsZHJlbik7bGV0IGU9bnVsbCxzPW51bGw7Y29uc3Qgbj10aGlzLm9pLml0ZXJhdG9yO2lmKHQpZm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtpZihvLmlzVHJlZUxpbmsmJm8uZnJvbU5vZGU9PT10aGlzKXtjb25zdCByPW8udG9Ob2RlO2UhPT1udWxsP2UuYWRkKHIpOnMhPT1udWxsJiZzIT09cj8oZT1uZXcgTGlzdCxlLmFkZChzKSxlLmFkZChyKSk6cz1yfX1lbHNlIGZvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7aWYoby5pc1RyZWVMaW5rJiZvLnRvTm9kZT09PXRoaXMpe2NvbnN0IHI9by5mcm9tTm9kZTtlIT09bnVsbD9lLmFkZChyKTpzIT09bnVsbCYmcyE9PXI/KGU9bmV3IExpc3QsZS5hZGQocyksZS5hZGQocikpOnM9cn19cmV0dXJuIGUhPT1udWxsP2UuaXRlcmF0b3I6cyE9PW51bGw/bmV3IFNpbmdsZXRvbkl0ZXJhdG9yKHMpOkVtcHR5SXRlcmF0b3IuaW5zdGFuY2V9ZmluZFRyZWVQYXJ0cyh0KXt0PT09dm9pZCAwJiYodD0xLzApLFUuaSh0LFwibnVtYmVyXCIsTm9kZSxcImZpbmRUcmVlUGFydHM6bGV2ZWxcIik7Y29uc3QgaT1uZXcgR1NldDtyZXR1cm4gUGFydC5jaChpLHRoaXMsITEsdCwhMCksaX1jb2xsYXBzZVRyZWUodCl7dD09PXZvaWQgMCYmKHQ9MSksVS5yKHQsTm9kZSxcImNvbGxhcHNlVHJlZTpsZXZlbFwiKSx0PDEmJih0PTEpO2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKGk9PT1udWxsfHxpLmlzQ29sbGFwc2luZ0V4cGFuZGluZylyZXR1cm47aS5pc0NvbGxhcHNpbmdFeHBhbmRpbmc9ITA7Y29uc3QgZT1uZXcgR1NldDtlLmFkZCh0aGlzKSx0aGlzLkFUKGUsaS5pc1RyZWVQYXRoVG9DaGlsZHJlbix0LGksdGhpcyxpLnRyZWVDb2xsYXBzZVBvbGljeT09PTEpLGkuaXNDb2xsYXBzaW5nRXhwYW5kaW5nPSExfUFUKHQsaSxlLHMsbixvKXtpZihlPjEpe2NvbnN0IHI9aT90aGlzLmZpbmRMaW5rc091dE9mKCk6dGhpcy5maW5kTGlua3NJbnRvKCk7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGw9ci52YWx1ZTtpZighbC5pc1RyZWVMaW5rKWNvbnRpbnVlO2NvbnN0IGg9bC5nZXRPdGhlck5vZGUodGhpcyk7aCE9PW51bGwmJmghPT10aGlzJiYhdC5oYXMoaCkmJih0LmFkZChoKSxoLkFUKHQsaSxlLTEscyxuLG8pKX19ZWxzZSB0aGlzLkxUKHQsaSxzLG4sbyl9TFQodCxpLGUscyxuKXtjb25zdCBvPXM9PT10aGlzPyEwOnRoaXMuaXNUcmVlRXhwYW5kZWQscj1pP3RoaXMuZmluZExpbmtzT3V0T2YoKTp0aGlzLmZpbmRMaW5rc0ludG8oKTtmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO2lmKCFsLmlzVHJlZUxpbmspY29udGludWU7Y29uc3QgaD1sLmdldE90aGVyTm9kZSh0aGlzKTtpZihoIT09bnVsbCYmaCE9PXRoaXMpe2NvbnN0IGY9dC5oYXMoaCk7aWYoZnx8dC5hZGQoaCksbyl7Y29uc3QgYT1pP2guZmluZE5vZGVzSW50bygpOmguZmluZE5vZGVzT3V0T2YoKSxjPXRoaXM7YS5hbGwodT0+dT09PWN8fCF1LmlzVHJlZUV4cGFuZGVkKSYmZS5FZihoLHMpLGgud2goKSxoLktpKCExKX1oLmlzVHJlZUV4cGFuZGVkJiYoaC53YXNUcmVlRXhwYW5kZWQ9aC5pc1RyZWVFeHBhbmRlZCxmfHxoLkxUKHQsaSxlLHMsbikpfX10aGlzLmlzVHJlZUV4cGFuZGVkPSExfWV4cGFuZFRyZWUodCl7dD09PXZvaWQgMCYmKHQ9MiksVS5yKHQsTm9kZSxcImV4cGFuZFRyZWU6bGV2ZWxcIiksdDwyJiYodD0yKTtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpZihpPT09bnVsbHx8aS5pc0NvbGxhcHNpbmdFeHBhbmRpbmcpcmV0dXJuO2kuaXNDb2xsYXBzaW5nRXhwYW5kaW5nPSEwO2NvbnN0IGU9bmV3IEdTZXQ7ZS5hZGQodGhpcyksdGhpcy5UVChlLGkuaXNUcmVlUGF0aFRvQ2hpbGRyZW4sdCxpLHRoaXMsaS50cmVlQ29sbGFwc2VQb2xpY3k9PT0xKSxpLmlzQ29sbGFwc2luZ0V4cGFuZGluZz0hMX1UVCh0LGksZSxzLG4sbyl7Y29uc3Qgcj1uPT09dGhpcz8hMTp0aGlzLmlzVHJlZUV4cGFuZGVkLGw9aT90aGlzLmZpbmRMaW5rc091dE9mKCk6dGhpcy5maW5kTGlua3NJbnRvKCk7Zm9yKDtsLm5leHQoKTspe2NvbnN0IGg9bC52YWx1ZTtpZighaC5pc1RyZWVMaW5rKWNvbnRpbnVlO3J8fGguTGV8fGguaW52YWxpZGF0ZVJvdXRlKCk7Y29uc3QgZj1oLmdldE90aGVyTm9kZSh0aGlzKTtpZihmIT09bnVsbCYmZiE9PXRoaXMmJiF0LmhhcyhmKSl7aWYodC5hZGQoZiksIXIpe2YuS2koITApLGYud2goKTtjb25zdCBhPWk/Zi5maW5kTm9kZXNJbnRvKCk6Zi5maW5kTm9kZXNPdXRPZigpLGM9dGhpczthLmFsbCh1PT51PT09Y3x8IXUuaXNUcmVlRXhwYW5kZWQpJiZzLk9mKGYsbil9KGU+Mnx8Zi53YXNUcmVlRXhwYW5kZWQpJiYoZi53YXNUcmVlRXhwYW5kZWQ9ITEsZi5UVCh0LGksZS0xLHMsbixvKSl9fXRoaXMuaXNUcmVlRXhwYW5kZWQ9ITB9Z2V0IGlzVHJlZUV4cGFuZGVkKCl7cmV0dXJuKHRoaXMuQiYxKSE9PTB9c2V0IGlzVHJlZUV4cGFuZGVkKHQpe2NvbnN0IGk9KHRoaXMuQiYxKSE9PTA7aWYoaSE9PXQpe0RlYnVnJiZVLmkodCxcImJvb2xlYW5cIixOb2RlLFwiaXNUcmVlRXhwYW5kZWRcIiksdGhpcy5CPXRoaXMuQl4xO2NvbnN0IGU9dGhpcy5kaWFncmFtO3RoaXMudChcImlzVHJlZUV4cGFuZGVkXCIsaSx0KTtjb25zdCBzPXRoaXMudHJlZUV4cGFuZGVkQ2hhbmdlZDtpZihzIT09bnVsbCl7bGV0IG49ITA7ZSE9PW51bGwmJihuPWUuSCxlLkg9ITApLHModGhpcyksZSE9PW51bGwmJihlLkg9bil9aWYoZSE9PW51bGwmJmUudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZyl7dGhpcy5LaSh0KTtyZXR1cm59dD90aGlzLmV4cGFuZFRyZWUoKTp0aGlzLmNvbGxhcHNlVHJlZSgpfX1nZXQgd2FzVHJlZUV4cGFuZGVkKCl7cmV0dXJuKHRoaXMuQiYyKSE9PTB9c2V0IHdhc1RyZWVFeHBhbmRlZCh0KXtjb25zdCBpPSh0aGlzLkImMikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLE5vZGUsXCJ3YXNUcmVlRXhwYW5kZWRcIiksdGhpcy5CPXRoaXMuQl4yLHRoaXMudChcIndhc1RyZWVFeHBhbmRlZFwiLGksdCkpfWdldCB0cmVlRXhwYW5kZWRDaGFuZ2VkKCl7cmV0dXJuIHRoaXMuVnQhPT1udWxsP3RoaXMuVnQueHk6bnVsbH1zZXQgdHJlZUV4cGFuZGVkQ2hhbmdlZCh0KXtjb25zdCBpPXRoaXMudHJlZUV4cGFuZGVkQ2hhbmdlZDtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxOb2RlLFwidHJlZUV4cGFuZGVkQ2hhbmdlZFwiKSx0aGlzLmRsKCkueHk9dCx0aGlzLnQoXCJ0cmVlRXhwYW5kZWRDaGFuZ2VkXCIsaSx0KSl9Z2V0IGlzVHJlZUxlYWYoKXtyZXR1cm4odGhpcy5CJjQpIT09MH1zZXQgaXNUcmVlTGVhZih0KXtjb25zdCBpPSh0aGlzLkImNCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLE5vZGUsXCJpc1RyZWVMZWFmXCIpLHRoaXMuQj10aGlzLkJeNCx0aGlzLnQoXCJpc1RyZWVMZWFmXCIsaSx0KSl9Z2V0IGlzVHJlZVJvb3QoKXtyZXR1cm4gdGhpcy5maW5kVHJlZVBhcmVudExpbmsoKT09PW51bGx9fWNsYXNzIE5vZGVUZW1wbGF0ZVNldHRpbmdze21pO3l5O3d5O1RsO3h5O215O2d5O2J5O2t5O2ZoO1N5O2NvbnN0cnVjdG9yKCl7dGhpcy5taT0hMSx0aGlzLnl5PW51bGwsdGhpcy53eT1udWxsLHRoaXMuVGw9bnVsbCx0aGlzLnh5PW51bGwsdGhpcy5teT1NYXJnaW4uQUMsdGhpcy5neT0xLHRoaXMuYnk9bnVsbCx0aGlzLmt5PW51bGwsdGhpcy5maD1udWxsLHRoaXMuU3k9bnVsbH1jb3B5KCl7Y29uc3QgdD1uZXcgTm9kZVRlbXBsYXRlU2V0dGluZ3M7cmV0dXJuIHQueXk9dGhpcy55eSx0Lnd5PXRoaXMud3ksdC5UbD10aGlzLlRsLHQueHk9dGhpcy54eSx0Lm15PXRoaXMubXkuTigpLHQuZ3k9dGhpcy5neSx0LmJ5PXRoaXMuYnksdC5reT10aGlzLmt5LHQuZmg9dGhpcy5maCx0LlN5PXRoaXMuU3ksdH19dmFyIExpbmtBZGp1c3Rpbmc9KHk9Pih5W3kuTm9uZT0wXT1cIk5vbmVcIix5W3kuRW5kPTE3XT1cIkVuZFwiLHlbeS5TY2FsZT0xOF09XCJTY2FsZVwiLHlbeS5TdHJldGNoPTE5XT1cIlN0cmV0Y2hcIix5KSkoTGlua0FkanVzdGluZ3x8e30pLFJvdXRpbmc9KHk9Pih5W3kuTm9ybWFsPTFdPVwiTm9ybWFsXCIseVt5Lk9ydGhvZ29uYWw9Ml09XCJPcnRob2dvbmFsXCIseVt5LkF2b2lkc05vZGVzPTZdPVwiQXZvaWRzTm9kZXNcIix5W3kuQXZvaWRzTm9kZXNTdHJhaWdodD03XT1cIkF2b2lkc05vZGVzU3RyYWlnaHRcIix5KSkoUm91dGluZ3x8e30pLEN1cnZlPSh5PT4oeVt5Lk5vbmU9MF09XCJOb25lXCIseVt5LkJlemllcj05XT1cIkJlemllclwiLHlbeS5KdW1wR2FwPTEwXT1cIkp1bXBHYXBcIix5W3kuSnVtcE92ZXI9MTFdPVwiSnVtcE92ZXJcIix5KSkoQ3VydmV8fHt9KTtjbGFzcyBMaW5rIGV4dGVuZHMgUGFydHtEdDtobzthbztGZDtmbztjbztSZDtMYztJZDtPZDtFZDtLYTtCZDskcztNaTtSZTtDcjtUYzskbztwTjt5TjtEYjt3Tjt4TjtVYTtGYjtmdDtabztzdGF0aWMgR2E9bnVsbDtzdGF0aWMgSGE9bnVsbDtnYztiTjtrTjtjb25zdHJ1Y3Rvcih0KXtzdXBlcihQYW5lbC5MaW5rKSx0aGlzLkR0PTgsdGhpcy5obz1udWxsLHRoaXMuYW89XCJcIix0aGlzLkZkPW51bGwsdGhpcy5mbz1udWxsLHRoaXMuY289XCJcIix0aGlzLlJkPW51bGwsdGhpcy5MYz0wLHRoaXMuSWQ9MCx0aGlzLk9kPTAsdGhpcy5FZD1OYU4sdGhpcy5LYT0xLHRoaXMuQmQ9LjUsdGhpcy4kcz1udWxsLHRoaXMuTWk9bmV3IExpc3QoKS5wKCksdGhpcy5SZT1udWxsLHRoaXMuQ3I9bnVsbCx0aGlzLlRjPW5ldyBSZWN0LHRoaXMuZnQ9bmV3IEdlb21ldHJ5LHRoaXMuJG89bnVsbCx0aGlzLlpvPW51bGwsdGhpcy5wTj1udWxsLHRoaXMueU49bnVsbCx0aGlzLmJOPTAsdGhpcy5rTj0wLHRoaXMuRGI9bmV3IFBvaW50LHRoaXMud049bnVsbCx0aGlzLnhOPW51bGwsdGhpcy5VYT1udWxsLHRoaXMuRmI9TmFOLHRoaXMueXQ9bnVsbCx0aGlzLmdjPVtdLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1jbG9uZVByb3RlY3RlZCh0KXtzdXBlci5jbG9uZVByb3RlY3RlZCh0KSx0LkR0PXRoaXMuRHQmLTExMyx0LmFvPXRoaXMuYW8sdC5GZD10aGlzLkZkLHQuY289dGhpcy5jbyx0LlJkPXRoaXMuUmQsdC5MYz10aGlzLkxjLHQuSWQ9dGhpcy5JZCx0Lk9kPXRoaXMuT2QsdC5FZD10aGlzLkVkLHQuS2E9dGhpcy5LYSx0LkJkPXRoaXMuQmQsdGhpcy55dCE9PW51bGwmJih0Lnl0PXRoaXMueXQuY29weSgpKX1Ybyh0KXtzdXBlci5Ybyh0KSx0aGlzLmFvPXQuYW8sdGhpcy5jbz10LmNvLHQuUmU9bnVsbCx0LmludmFsaWRhdGVSb3V0ZSgpLHQuWm89dGhpcy5abztjb25zdCBpPXQuZnJvbVBvcnQ7aSE9PW51bGwmJnQuZnJvbU5vZGUuUWkoaSk7Y29uc3QgZT10LnRvUG9ydDtlIT09bnVsbCYmdC50b05vZGUuUWkoZSl9YWkodCl7dCBpbiBSb3V0aW5nfHx0IGluIEN1cnZlfHx0IGluIExpbmtBZGp1c3Rpbmc/TGluay5TTih0KT90aGlzLnJvdXRpbmc9dDp0PT09OXx8dD09PTEwfHx0PT09MTE/dGhpcy5jdXJ2ZT10OnQ9PT0xN3x8dD09PTE4fHx0PT09MTk/dGhpcy5hZGp1c3Rpbmc9dDp0PT09MXx8dD09PTB8fFUubihcIlVua25vd24gTGluayBlbnVtIHZhbHVlIGZvciBhIExpbmsgcHJvcGVydHk6IFwiK3QpOnN1cGVyLmFpKHQpfXN0YXRpYyBOb3JtYWw9MTtzdGF0aWMgT3J0aG9nb25hbD0yO3N0YXRpYyBBdm9pZHNOb2Rlcz02O3N0YXRpYyBBdm9pZHNOb2Rlc1N0cmFpZ2h0PTc7c3RhdGljIE5vbmU9MDtzdGF0aWMgQmV6aWVyPTk7c3RhdGljIEp1bXBHYXA9MTA7c3RhdGljIEp1bXBPdmVyPTExO3N0YXRpYyBFbmQ9MTc7c3RhdGljIFNjYWxlPTE4O3N0YXRpYyBTdHJldGNoPTE5O3N0YXRpYyBPcmllbnRBbG9uZz0yMTtzdGF0aWMgT3JpZW50UGx1czkwPTIyO3N0YXRpYyBPcmllbnRNaW51czkwPTIzO3N0YXRpYyBPcmllbnRPcHBvc2l0ZT0yNDtzdGF0aWMgT3JpZW50VXByaWdodD0yNTtzdGF0aWMgT3JpZW50UGx1czkwVXByaWdodD0yNjtzdGF0aWMgT3JpZW50TWludXM5MFVwcmlnaHQ9Mjc7c3RhdGljIE9yaWVudFVwcmlnaHQ0NT0yODtzdGF0aWMgbU89ODtzdGF0aWMgcE89MTY7c3RhdGljIHlPPTE0O3N0YXRpYyBxYT04O0dlKCl7cmV0dXJuIHRoaXMueXQ9PT1udWxsJiYodGhpcy55dD1uZXcgTGlua1NldHRpbmdzKSx0aGlzLnl0fUFJKHQsaSxlKXtjb25zdCBzPXQuc2VnbWVudEluZGV4LG49dC5zZWdtZW50RnJhY3Rpb247bGV0IG89dC5hbGlnbm1lbnRGb2N1cztjb25zdCByPXQuc2VnbWVudE9yaWVudGF0aW9uLGw9dC5zZWdtZW50T2Zmc2V0O2xldCBoPTAsZj0wLGE9MCxjPTA7aWYoaXNOYU4ocykpe2NvbnN0IEM9dGhpcy5mdCxQPVUubHQoKTtDLmdldFBvaW50QW5kQW5nbGVBbG9uZ1BhdGgobixQKTtjb25zdCBOPVBvaW50LksoUFswXSxQWzFdKTtpZihOLmFkZCh0aGlzLmdldFBvaW50KDApKSxDLnR5cGU9PT0xKU4ub2Zmc2V0KC1DLnN0YXJ0WCwtQy5zdGFydFkpO2Vsc2V7Y29uc3QgVD1DLmZpZ3VyZXMuZmlyc3QoKTtOLm9mZnNldCgtVC5zdGFydFgsLVQuc3RhcnRZKX1jPVBbMl0sciE9PTAmJihhPXRoaXMuY29tcHV0ZUFuZ2xlKHQscixjKSx0LmFuZ2xlPWEpLGg9Ti54LGY9Ti55LFBvaW50Lm8oTiksVS50dChQKX1lbHNlIGlmKHM8LWl8fHM+PWkpe2NvbnN0IEM9UG9pbnQuYSgpO3RoaXMuWUwoQyksYz10aGlzLm1pZEFuZ2xlLHIhPT0wJiYoYT10aGlzLmNvbXB1dGVBbmdsZSh0LHIsYyksdC5hbmdsZT1hKSxoPUMueCxmPUMueSxQb2ludC5vKEMpfWVsc2V7bGV0IEMsUCxOPTA7aWYocz49MD8oQz1lLmhbc10sUD1zPGktMT9lLmhbcysxXTpDKTooTj1pK3MsQz1lLmhbTl0sUD1OPjA/ZS5oW04tMV06QyksQy5lcXVhbHNBcHByb3goUCkpe2xldCBULEw7cz49MD8oVD1zPjA/ZS5oW3MtMV06QyxMPXM8aS0yP2UuaFtzKzJdOlApOihUPU48aS0xP2UuaFtOKzFdOkMsTD1OPjE/ZS5oW04tMl06UCk7Y29uc3QgRD1ULmRpc3RhbmNlU3F1YXJlZFBvaW50KEMpLEY9UC5kaXN0YW5jZVNxdWFyZWRQb2ludChMKTtEPkYrMTA/Yz1zPj0wP1QuZGlyZWN0aW9uUG9pbnQoQyk6Qy5kaXJlY3Rpb25Qb2ludChUKTpGPkQrMTA/Yz1zPj0wP1AuZGlyZWN0aW9uUG9pbnQoTCk6TC5kaXJlY3Rpb25Qb2ludChQKTpjPXM+PTA/VC5kaXJlY3Rpb25Qb2ludChMKTpMLmRpcmVjdGlvblBvaW50KFQpfWVsc2UgYz1zPj0wP0MuZGlyZWN0aW9uUG9pbnQoUCk6UC5kaXJlY3Rpb25Qb2ludChDKTtyIT09MCYmKGE9dGhpcy5jb21wdXRlQW5nbGUodCxyLGMpLHQuYW5nbGU9YSksaD1DLngrKFAueC1DLngpKm4sZj1DLnkrKFAueS1DLnkpKm59aWYoby5pc05vbmUoKSl7dC5sb2NhdGlvbj1uZXcgUG9pbnQoaCxmKTtyZXR1cm59ZWxzZSBvLmlzTm9TcG90KCkmJihvPVNwb3QuQ2VudGVyKTtjb25zdCB1PVRyYW5zZm9ybS5hKCk7dS5WaSgpLHUub3QodC5zY2FsZSx0LnNjYWxlKSx1Lm1zKHQuYW5nbGUsMCwwKTtjb25zdCBkPXQubmF0dXJhbEJvdW5kcyxtPVJlY3QuSygwLDAsZC53aWR0aCxkLmhlaWdodCksZz1Qb2ludC5hKCk7Zy5zZXRSZWN0U3BvdChtLG8pLHUua3QoZyk7bGV0IHA9LWcueCx3PS1nLnk7Y29uc3QgeD1kLndpZHRoLGs9ZC5oZWlnaHQsYj1Qb2ludC5hKCk7Yi5jKGwpO2NvbnN0IFM9aXNOYU4obC54KSxNPWlzTmFOKGwueSk7aWYoU3x8TSl7Y29uc3QgQz14LzIrMyxQPWsvMiszLE49Yz49NDUmJmM8PTEzNSxUPWM+PTIyNSYmYzw9MzE1O3I9PT0wJiYoTnx8VCk/KGIueD1NP0M6bC55LGIueT1TP1A6bC54LE4/cz49MHx8aXNOYU4ocykmJm48LjV8fFMmJihiLnk9LVApOlQmJigocz49MHx8aXNOYU4ocykmJm48LjUpJiZTJiYoYi55PS1QKSxNJiYoYi54PS1DKSkpOihTJiYocz49MHx8aXNOYU4ocykmJm48LjU/Yi54PUM6Yi54PS1DKSxNJiYoYi55PS1QKSxiLnJvdGF0ZShjKSl9ZWxzZSBiLnJvdGF0ZShjKTtoKz1iLngsZis9Yi55LHUuWWcobSkscCs9bS54LHcrPW0ueTtjb25zdCBBPVBvaW50LksoaCtwLGYrdyk7dC5tb3ZlKEEpLFBvaW50Lm8oQSksUG9pbnQubyhiKSxQb2ludC5vKGcpLFJlY3QubyhtKSxUcmFuc2Zvcm0ubyh1KX12cigpe2xldCB0PXRoaXMuZnJvbU5vZGU7aWYodCE9PW51bGwpe2NvbnN0IGU9dC5maW5kVmlzaWJsZU5vZGUoKTtpZihlIT09bnVsbCYmKHQ9ZSksdC5ucygpfHx0LmhoKCkpcmV0dXJuITF9bGV0IGk9dGhpcy50b05vZGU7aWYoaSE9PW51bGwpe2NvbnN0IGU9aS5maW5kVmlzaWJsZU5vZGUoKTtpZihlIT09bnVsbCYmKGk9ZSksaS5ucygpfHxpLmhoKCkpcmV0dXJuITF9cmV0dXJuITB9RlAodCxpLGUpe3JldHVybiExfVJQKCl7fUNlKCl7cmV0dXJuITF9Y29tcHV0ZUFuZ2xlKHQsaSxlKXtyZXR1cm4gTGluay5jb21wdXRlQW5nbGUoaSxlKX1zdGF0aWMgY29tcHV0ZUFuZ2xlKHQsaSl7bGV0IGU9MDtzd2l0Y2godCl7ZGVmYXVsdDpjYXNlIDA6ZT0wO2JyZWFrO2Nhc2UgMjE6ZT1pO2JyZWFrO2Nhc2UgMjI6ZT1pKzkwO2JyZWFrO2Nhc2UgMjM6ZT1pLTkwO2JyZWFrO2Nhc2UgMjQ6ZT1pKzE4MDticmVhaztjYXNlIDI1OmU9R2VvLkhnKGkpLGU+OTAmJmU8MjcwJiYoZS09MTgwKTticmVhaztjYXNlIDI2OmU9R2VvLkhnKGkrOTApLGU+OTAmJmU8MjcwJiYoZS09MTgwKTticmVhaztjYXNlIDI3OmU9R2VvLkhnKGktOTApLGU+OTAmJmU8MjcwJiYoZS09MTgwKTticmVhaztjYXNlIDI4OmlmKGU9R2VvLkhnKGkpLGU+NDUmJmU8MTM1fHxlPjIyNSYmZTwzMTUpcmV0dXJuIDA7ZT45MCYmZTwyNzAmJihlLT0xODApO2JyZWFrfXJldHVybiBHZW8uSGcoZSl9Z2V0IGZyb21Ob2RlKCl7cmV0dXJuIHRoaXMuaG99c2V0IGZyb21Ob2RlKHQpe2NvbnN0IGk9dGhpcy5obztpZihpIT09dCl7RGVidWcmJnQhPT1udWxsJiZVLmUodCxOb2RlLExpbmssXCJmcm9tTm9kZVwiKTtjb25zdCBlPXRoaXMuZnJvbVBvcnQ7aSE9PW51bGwmJih0aGlzLmZvIT09aSYmaS5UYih0aGlzLGUpLHRoaXMuTXkoKSx0aGlzLmludmFsaWRhdGVMYXlvdXQoMikpLHRoaXMuaG89dCx0IT09bnVsbCYmdGhpcy5LaSh0LmlzVmlzaWJsZSgpKSx0aGlzLiRvPW51bGwsdGhpcy5pbnZhbGlkYXRlUm91dGUoKTtjb25zdCBzPXRoaXMuZGlhZ3JhbTtzIT09bnVsbCYmcy5IJiZzLnBhcnRNYW5hZ2VyLnNldEZyb21Ob2RlRm9yTGluayh0aGlzLHQsaSk7Y29uc3Qgbj10aGlzLmZyb21Qb3J0LG89dGhpcy5mcm9tUG9ydENoYW5nZWQ7aWYobyE9PW51bGwpe2xldCByPSEwO3MhPT1udWxsJiYocj1zLkgscy5IPSEwKSxvKHRoaXMsZSxuKSxzIT09bnVsbCYmKHMuSD1yKX10IT09bnVsbCYmKHRoaXMuZm8hPT10JiZ0LkxiKHRoaXMsbiksdGhpcy5QeSgpLHRoaXMuaW52YWxpZGF0ZUxheW91dCgxKSksdGhpcy50KFwiZnJvbU5vZGVcIixpLHQpLHRoaXMuVGQoKX19Z2V0IGZyb21Qb3J0SWQoKXtyZXR1cm4gdGhpcy5hb31zZXQgZnJvbVBvcnRJZCh0KXtjb25zdCBpPXRoaXMuYW87aWYoaSE9PXQpe0RlYnVnJiZVLmkodCxcInN0cmluZ1wiLExpbmssXCJmcm9tUG9ydElkXCIpO2NvbnN0IGU9dGhpcy5mcm9tUG9ydDtlIT09bnVsbCYmdGhpcy5mcm9tTm9kZT8uUWkoZSksdGhpcy5NeSgpLHRoaXMuYW89dDtjb25zdCBzPXRoaXMuZnJvbVBvcnQ7cyE9PW51bGwmJnRoaXMuZnJvbU5vZGU/LlFpKHMpO2NvbnN0IG49dGhpcy5kaWFncmFtO2lmKG4hPT1udWxsKXtjb25zdCBvPXRoaXMuZGF0YSxyPW4ubW9kZWw7byE9PW51bGwmJnIuWWEoKSYmci5zZXRGcm9tUG9ydElkRm9yTGlua0RhdGEobyx0KX1pZihlIT09cyl7dGhpcy4kbz1udWxsLHRoaXMuaW52YWxpZGF0ZVJvdXRlKCk7Y29uc3Qgbz10aGlzLmZyb21Qb3J0Q2hhbmdlZDtpZihvIT09bnVsbCl7bGV0IHI9ITA7biE9PW51bGwmJihyPW4uSCxuLkg9ITApLG8odGhpcyxlLHMpLG4hPT1udWxsJiYobi5IPXIpfX10aGlzLlB5KCksdGhpcy50KFwiZnJvbVBvcnRJZFwiLGksdCl9fWdldCBmcm9tUG9ydCgpe2NvbnN0IHQ9dGhpcy5obztpZih0PT09bnVsbClyZXR1cm4gbnVsbDtjb25zdCBpPXRoaXMuYW87cmV0dXJuIHQuZmluZFBvcnQoaSl9Z2V0IGZyb21Qb3J0Q2hhbmdlZCgpe3JldHVybiB0aGlzLkZkfXNldCBmcm9tUG9ydENoYW5nZWQodCl7Y29uc3QgaT10aGlzLkZkO2khPT10JiYodCE9PW51bGwmJlUuUCh0LExpbmssXCJmcm9tUG9ydENoYW5nZWRcIiksdGhpcy5GZD10LHRoaXMudChcImZyb21Qb3J0Q2hhbmdlZFwiLGksdCkpfWdldCB0b05vZGUoKXtyZXR1cm4gdGhpcy5mb31zZXQgdG9Ob2RlKHQpe2NvbnN0IGk9dGhpcy5mbztpZihpIT09dCl7RGVidWcmJnQhPT1udWxsJiZVLmUodCxOb2RlLExpbmssXCJ0b05vZGVcIik7Y29uc3QgZT10aGlzLnRvUG9ydDtpIT09bnVsbCYmKHRoaXMuaG8hPT1pJiZpLlRiKHRoaXMsZSksdGhpcy5NeSgpLHRoaXMuaW52YWxpZGF0ZUxheW91dCgyKSksdGhpcy5mbz10LHQhPT1udWxsJiZ0aGlzLktpKHQuaXNWaXNpYmxlKCkpLHRoaXMuJG89bnVsbCx0aGlzLmludmFsaWRhdGVSb3V0ZSgpO2NvbnN0IHM9dGhpcy5kaWFncmFtO3MhPT1udWxsJiZzLkgmJnMucGFydE1hbmFnZXIuc2V0VG9Ob2RlRm9yTGluayh0aGlzLHQsaSk7Y29uc3Qgbj10aGlzLnRvUG9ydCxvPXRoaXMudG9Qb3J0Q2hhbmdlZDtpZihvIT09bnVsbCl7bGV0IHI9ITA7cyE9PW51bGwmJihyPXMuSCxzLkg9ITApLG8odGhpcyxlLG4pLHMhPT1udWxsJiYocy5IPXIpfXQhPT1udWxsJiYodGhpcy5obyE9PXQmJnQuTGIodGhpcyxuKSx0aGlzLlB5KCksdGhpcy5pbnZhbGlkYXRlTGF5b3V0KDEpKSx0aGlzLnQoXCJ0b05vZGVcIixpLHQpLHRoaXMuVGQoKX19Z2V0IHRvUG9ydElkKCl7cmV0dXJuIHRoaXMuY299c2V0IHRvUG9ydElkKHQpe2NvbnN0IGk9dGhpcy5jbztpZihpIT09dCl7RGVidWcmJlUuaSh0LFwic3RyaW5nXCIsTGluayxcInRvUG9ydElkXCIpO2NvbnN0IGU9dGhpcy50b1BvcnQ7ZSE9PW51bGwmJnRoaXMudG9Ob2RlPy5RaShlKSx0aGlzLk15KCksdGhpcy5jbz10O2NvbnN0IHM9dGhpcy50b1BvcnQ7cyE9PW51bGwmJnRoaXMudG9Ob2RlPy5RaShzKTtjb25zdCBuPXRoaXMuZGlhZ3JhbTtpZihuIT09bnVsbCl7Y29uc3Qgbz10aGlzLmRhdGEscj1uLm1vZGVsO28hPT1udWxsJiZyLllhKCkmJnIuc2V0VG9Qb3J0SWRGb3JMaW5rRGF0YShvLHQpfWlmKGUhPT1zKXt0aGlzLiRvPW51bGwsdGhpcy5pbnZhbGlkYXRlUm91dGUoKTtjb25zdCBvPXRoaXMudG9Qb3J0Q2hhbmdlZDtpZihvIT09bnVsbCl7bGV0IHI9ITA7biE9PW51bGwmJihyPW4uSCxuLkg9ITApLG8odGhpcyxlLHMpLG4hPT1udWxsJiYobi5IPXIpfX10aGlzLlB5KCksdGhpcy50KFwidG9Qb3J0SWRcIixpLHQpfX1nZXQgdG9Qb3J0KCl7Y29uc3QgdD10aGlzLmZvO2lmKHQ9PT1udWxsKXJldHVybiBudWxsO2NvbnN0IGk9dGhpcy5jbztyZXR1cm4gdC5maW5kUG9ydChpKX1nZXQgdG9Qb3J0Q2hhbmdlZCgpe3JldHVybiB0aGlzLlJkfXNldCB0b1BvcnRDaGFuZ2VkKHQpe2NvbnN0IGk9dGhpcy5SZDtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxMaW5rLFwidG9Qb3J0Q2hhbmdlZFwiKSx0aGlzLlJkPXQsdGhpcy50KFwidG9Qb3J0Q2hhbmdlZFwiLGksdCkpfWdldCBmcm9tU3BvdCgpe3JldHVybiB0aGlzLnl0IT09bnVsbD90aGlzLnl0LmthOlNwb3QuRGVmYXVsdH1zZXQgZnJvbVNwb3QodCl7Y29uc3QgaT10aGlzLmZyb21TcG90O2lmKCFpLmVxdWFscyh0KSl7aWYoRGVidWcmJlUuZSh0LFNwb3QsTGluayxcImZyb21TcG90XCIpLHQ9dC5OKCksdGhpcy5HZSgpLmthPXQsdGhpcy50KFwiZnJvbVNwb3RcIixpLHQpLGkuaXNTaWRlKCl8fHQuaXNTaWRlKCkpe2NvbnN0IGU9dGhpcy5mcm9tTm9kZTtlIT09bnVsbCYmZS5RaSh0aGlzLmZyb21Qb3J0KX10aGlzLmludmFsaWRhdGVSb3V0ZSgpfX1nZXQgZnJvbUVuZFNlZ21lbnRMZW5ndGgoKXtyZXR1cm4gdGhpcy55dCE9PW51bGw/dGhpcy55dC5NYTpOYU59c2V0IGZyb21FbmRTZWdtZW50TGVuZ3RoKHQpe2NvbnN0IGk9dGhpcy5mcm9tRW5kU2VnbWVudExlbmd0aDtpZihpIT09dCl7aWYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsTGluayxcImZyb21FbmRTZWdtZW50TGVuZ3RoXCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsTGluayxcImZyb21FbmRTZWdtZW50TGVuZ3RoXCIpLHRoaXMuR2UoKS5NYT10LHRoaXMudChcImZyb21FbmRTZWdtZW50TGVuZ3RoXCIsaSx0KSx0aGlzLmNvbXB1dGVTcG90KCEwLHRoaXMuZnJvbVBvcnQpLmlzU2lkZSgpKXtjb25zdCBlPXRoaXMuZnJvbU5vZGU7ZSE9PW51bGwmJmUuUWkodGhpcy5mcm9tUG9ydCl9dGhpcy5pbnZhbGlkYXRlUm91dGUoKX19Z2V0IGZyb21TaG9ydExlbmd0aCgpe3JldHVybiB0aGlzLnl0IT09bnVsbD90aGlzLnl0Lk5hOk5hTn1zZXQgZnJvbVNob3J0TGVuZ3RoKHQpe2NvbnN0IGk9dGhpcy5mcm9tU2hvcnRMZW5ndGg7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJudW1iZXJcIixMaW5rLFwiZnJvbVNob3J0TGVuZ3RoXCIpLHRoaXMuR2UoKS5OYT10LHRoaXMucmUoKSx0aGlzLnQoXCJmcm9tU2hvcnRMZW5ndGhcIixpLHQpKX1nZXQgdG9TcG90KCl7cmV0dXJuIHRoaXMueXQhPT1udWxsP3RoaXMueXQuU2E6U3BvdC5EZWZhdWx0fXNldCB0b1Nwb3QodCl7Y29uc3QgaT10aGlzLnRvU3BvdDtpZighaS5lcXVhbHModCkpe2lmKERlYnVnJiZVLmUodCxTcG90LExpbmssXCJ0b1Nwb3RcIiksdD10Lk4oKSx0aGlzLkdlKCkuU2E9dCx0aGlzLnQoXCJ0b1Nwb3RcIixpLHQpLGkuaXNTaWRlKCl8fHQuaXNTaWRlKCkpe2NvbnN0IGU9dGhpcy50b05vZGU7ZSE9PW51bGwmJmUuUWkodGhpcy50b1BvcnQpfXRoaXMuaW52YWxpZGF0ZVJvdXRlKCl9fWdldCB0b0VuZFNlZ21lbnRMZW5ndGgoKXtyZXR1cm4gdGhpcy55dCE9PW51bGw/dGhpcy55dC5QYTpOYU59c2V0IHRvRW5kU2VnbWVudExlbmd0aCh0KXtjb25zdCBpPXRoaXMudG9FbmRTZWdtZW50TGVuZ3RoO2lmKGkhPT10KXtpZihEZWJ1ZyYmVS5pKHQsXCJudW1iZXJcIixMaW5rLFwidG9FbmRTZWdtZW50TGVuZ3RoXCIpLHQ8MCYmVS5VKHQsXCI+PSAwXCIsTGluayxcInRvRW5kU2VnbWVudExlbmd0aFwiKSx0aGlzLkdlKCkuUGE9dCx0aGlzLnQoXCJ0b0VuZFNlZ21lbnRMZW5ndGhcIixpLHQpLHRoaXMuY29tcHV0ZVNwb3QoITEsdGhpcy50b1BvcnQpLmlzU2lkZSgpKXtjb25zdCBlPXRoaXMudG9Ob2RlO2UhPT1udWxsJiZlLlFpKHRoaXMudG9Qb3J0KX10aGlzLmludmFsaWRhdGVSb3V0ZSgpfX1nZXQgdG9TaG9ydExlbmd0aCgpe3JldHVybiB0aGlzLnl0IT09bnVsbD90aGlzLnl0LkNhOk5hTn1zZXQgdG9TaG9ydExlbmd0aCh0KXtjb25zdCBpPXRoaXMudG9TaG9ydExlbmd0aDtpIT09dCYmKERlYnVnJiZVLmkodCxcIm51bWJlclwiLExpbmssXCJ0b1Nob3J0TGVuZ3RoXCIpLHRoaXMuR2UoKS5DYT10LHRoaXMucmUoKSx0aGlzLnQoXCJ0b1Nob3J0TGVuZ3RoXCIsaSx0KSl9VGQoKXtjb25zdCB0PXRoaXMuZnJvbU5vZGUsaT10aGlzLnRvTm9kZTtsZXQgZT1udWxsO2lmKHQhPT1udWxsP2khPT1udWxsP2U9dC5maW5kQ29tbW9uQ29udGFpbmluZ0dyb3VwKGkpOmU9dC5jb250YWluaW5nR3JvdXA6aSE9PW51bGw/ZT1pLmNvbnRhaW5pbmdHcm91cDplPW51bGwsdGhpcy53TyhlKSx0aGlzLmlzTGFiZWxlZExpbmspe2NvbnN0IHM9dGhpcy5sYWJlbE5vZGVzO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7bi5jb250YWluaW5nR3JvdXA9ZX19fXdPKHQpe2NvbnN0IGk9dGhpcy5QaDtpZihpIT09dCl7aSE9PW51bGwmJmkuYU4odGhpcyksdGhpcy5QaD10LHQhPT1udWxsJiZ0LmZOKHRoaXMpO2NvbnN0IGU9dGhpcy5jb250YWluaW5nR3JvdXBDaGFuZ2VkO2lmKGUhPT1udWxsKXtsZXQgcz0hMDtjb25zdCBuPXRoaXMuZGlhZ3JhbTtuIT09bnVsbCYmKHM9bi5ILG4uSD0hMCksZSh0aGlzLGksdCksbiE9PW51bGwmJihuLkg9cyl9dGhpcy5MZSYmKHRoaXMud049PT1pfHx0aGlzLnhOPT09aSkmJnRoaXMuaW52YWxpZGF0ZVJvdXRlKCl9fXdoKCl7Y29uc3QgdD10aGlzLmNvbnRhaW5pbmdHcm91cDt0IT09bnVsbCYmdGhpcy5mcm9tTm9kZSE9PXQmJnRoaXMudG9Ob2RlIT09dCYmdC5jb21wdXRlc0JvdW5kc0luY2x1ZGluZ0xpbmtzJiZzdXBlci53aCgpfWdldE90aGVyTm9kZSh0KXtEZWJ1ZyYmVS5lKHQsTm9kZSxMaW5rLFwiZ2V0T3RoZXJOb2RlOm5vZGVcIik7Y29uc3QgaT10aGlzLmZyb21Ob2RlO3JldHVybiB0PT09aT90aGlzLnRvTm9kZTppfWdldE90aGVyUG9ydCh0KXtEZWJ1ZyYmVS5lKHQsR3JhcGhPYmplY3QsTGluayxcImdldE90aGVyUG9ydDpwb3J0XCIpO2NvbnN0IGk9dGhpcy5mcm9tUG9ydDtyZXR1cm4gdD09PWk/dGhpcy50b1BvcnQ6aX1nZXQgaXNMYWJlbGVkTGluaygpe3JldHVybiB0aGlzLiRzPT09bnVsbD8hMTp0aGlzLiRzLmNvdW50PjB9Z2V0IGxhYmVsTm9kZXMoKXtyZXR1cm4gdGhpcy4kcz09PW51bGw/RW1wdHlJdGVyYXRvci5pbnN0YW5jZTp0aGlzLiRzLml0ZXJhdG9yfVBUKHQpe3RoaXMuJHM9PT1udWxsJiYodGhpcy4kcz1uZXcgR1NldCksdGhpcy4kcy5hZGQodCksdGhpcy51KCl9TlQodCl7dGhpcy4kcyE9PW51bGwmJih0aGlzLiRzLmRlbGV0ZSh0KSx0aGlzLnUoKSl9em0odCl7aWYoc3VwZXIuem0odCksdGhpcy5XYSgpJiZ0aGlzLmludmFsaWRhdGVPdGhlckp1bXBPdmVycyh0aGlzLmFjdHVhbEJvdW5kcyksIXQpe2NvbnN0IGk9dGhpcy5obztsZXQgZT1udWxsO2khPT1udWxsJiYoZT10aGlzLmZyb21Qb3J0LGkuTGIodGhpcyxlKSk7Y29uc3Qgcz10aGlzLmZvO2xldCBuPW51bGw7cyE9PW51bGwmJihuPXRoaXMudG9Qb3J0LChzIT09aXx8biE9PWUpJiZzLkxiKHRoaXMsbikpLHRoaXMuUHkoKX19WG0odCl7aWYoc3VwZXIuWG0odCksdGhpcy5XYSgpJiZ0aGlzLmludmFsaWRhdGVPdGhlckp1bXBPdmVycyh0aGlzLmFjdHVhbEJvdW5kcyksIXQpe2NvbnN0IGk9dGhpcy5obztsZXQgZT1udWxsO2khPT1udWxsJiYoZT10aGlzLmZyb21Qb3J0LGkuVGIodGhpcyxlKSk7Y29uc3Qgcz10aGlzLmZvO2xldCBuPW51bGw7cyE9PW51bGwmJihuPXRoaXMudG9Qb3J0LChzIT09aXx8biE9PWUpJiZzLlRiKHRoaXMsbikpLHRoaXMuTXkoKX19SmYoKXtpZih0aGlzLkxlPSEwLHRoaXMuJHMhPT1udWxsKXtjb25zdCBpPXRoaXMuZGlhZ3JhbTtpZihpIT09bnVsbCl7Y29uc3Qgcz10aGlzLiRzLmNvcHkoKS5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2kucmVtb3ZlKG4pfX19aWYodGhpcy5kYXRhIT09bnVsbCl7Y29uc3QgaT10aGlzLmRpYWdyYW07aSE9PW51bGwmJmkucGFydE1hbmFnZXIuTU4odGhpcyl9fXVwZGF0ZVJlbGF0aW9uc2hpcHNGcm9tRGF0YSgpe2lmKHRoaXMuZGF0YT09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5kaWFncmFtO2khPT1udWxsJiZpLnBhcnRNYW5hZ2VyLnVwZGF0ZVJlbGF0aW9uc2hpcHNGcm9tRGF0YSh0aGlzKX1tb3ZlKHQsaSl7Y29uc3QgZT1pP3RoaXMubG9jYXRpb246dGhpcy5wb3NpdGlvbjtsZXQgcz1lLng7aXNOYU4ocykmJihzPTApO2xldCBuPWUueTtpc05hTihuKSYmKG49MCk7Y29uc3Qgbz10LngtcyxyPXQueS1uO2lmKGk9PT0hMClzdXBlci5tb3ZlKHQsITEpO2Vsc2V7Y29uc3QgaD1Qb2ludC5LKGUueCtvLGUueStyKTtzdXBlci5tb3ZlKGgsITEpLFBvaW50Lm8oaCl9dGhpcy53cihvLHIpO2NvbnN0IGw9dGhpcy5sYWJlbE5vZGVzO2Zvcig7bC5uZXh0KCk7KXtjb25zdCBoPWwudmFsdWUsZj1oLnBvc2l0aW9uO2gubW92ZVRvKGYueCtvLGYueStyKX19Z2V0IHJlbGlua2FibGVGcm9tKCl7cmV0dXJuKHRoaXMuRHQmMSkhPT0wfXNldCByZWxpbmthYmxlRnJvbSh0KXtjb25zdCBpPSh0aGlzLkR0JjEpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixMaW5rLFwicmVsaW5rYWJsZUZyb21cIiksdGhpcy5EdD10aGlzLkR0XjEsdGhpcy50KFwicmVsaW5rYWJsZUZyb21cIixpLHQpLHRoaXMuaW52YWxpZGF0ZUFkb3JubWVudHMoKSl9Z2V0IHJlbGlua2FibGVUbygpe3JldHVybih0aGlzLkR0JjIpIT09MH1zZXQgcmVsaW5rYWJsZVRvKHQpe2NvbnN0IGk9KHRoaXMuRHQmMikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLExpbmssXCJyZWxpbmthYmxlVG9cIiksdGhpcy5EdD10aGlzLkR0XjIsdGhpcy50KFwicmVsaW5rYWJsZVRvXCIsaSx0KSx0aGlzLmludmFsaWRhdGVBZG9ybm1lbnRzKCkpfWNhblJlbGlua0Zyb20oKXtpZighdGhpcy5yZWxpbmthYmxlRnJvbSlyZXR1cm4hMTtjb25zdCB0PXRoaXMubGF5ZXI7aWYodD09PW51bGwpcmV0dXJuITA7aWYoIXQuYWxsb3dSZWxpbmspcmV0dXJuITE7Y29uc3QgaT10LmRpYWdyYW07cmV0dXJuIShpIT09bnVsbCYmIWkuYWxsb3dSZWxpbmspfWNhblJlbGlua1RvKCl7aWYoIXRoaXMucmVsaW5rYWJsZVRvKXJldHVybiExO2NvbnN0IHQ9dGhpcy5sYXllcjtpZih0PT09bnVsbClyZXR1cm4hMDtpZighdC5hbGxvd1JlbGluaylyZXR1cm4hMTtjb25zdCBpPXQuZGlhZ3JhbTtyZXR1cm4hKGkhPT1udWxsJiYhaS5hbGxvd1JlbGluayl9Z2V0IHJlc2VnbWVudGFibGUoKXtyZXR1cm4odGhpcy5EdCY0KSE9PTB9c2V0IHJlc2VnbWVudGFibGUodCl7Y29uc3QgaT0odGhpcy5EdCY0KSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsTGluayxcInJlc2VnbWVudGFibGVcIiksdGhpcy5EdD10aGlzLkR0XjQsdGhpcy50KFwicmVzZWdtZW50YWJsZVwiLGksdCksdGhpcy5pbnZhbGlkYXRlQWRvcm5tZW50cygpKX1nZXQgaXNUcmVlTGluaygpe3JldHVybih0aGlzLkR0JjgpIT09MH1zZXQgaXNUcmVlTGluayh0KXtjb25zdCBpPSh0aGlzLkR0JjgpIT09MDtpIT09dCYmKERlYnVnJiZVLmkodCxcImJvb2xlYW5cIixMaW5rLFwiaXNUcmVlTGlua1wiKSx0aGlzLkR0PXRoaXMuRHReOCx0aGlzLnQoXCJpc1RyZWVMaW5rXCIsaSx0KSx0aGlzLmZyb21Ob2RlIT09bnVsbCYmdGhpcy5mcm9tTm9kZS5kMCgpLHRoaXMudG9Ob2RlIT09bnVsbCYmdGhpcy50b05vZGUuZDAoKSl9Z2V0IHBhdGgoKXtjb25zdCB0PXRoaXMuZmluZE1haW5FbGVtZW50KCk7cmV0dXJuIHQgaW5zdGFuY2VvZiBTaGFwZT90Om51bGx9Z2V0IHJvdXRlQm91bmRzKCl7cmV0dXJuIHRoaXMudXBkYXRlUm91dGUoKSx0aGlzLnhPKHRoaXMuVGMpfXhPKHQpe2xldCBpPTEvMCxlPTEvMDtjb25zdCBzPXRoaXMucG9pbnRzQ291bnQ7aWYocz09PTApcmV0dXJuIHQucyhOYU4sTmFOLDAsMCksdDtpZihzPT09MSl7Y29uc3Qgbj10aGlzLmdldFBvaW50KDApO2k9TWF0aC5taW4obi54LGkpLGU9TWF0aC5taW4obi55LGUpLHQucyhuLngsbi55LDAsMCl9ZWxzZSBpZihzPT09Mil7Y29uc3Qgbj10aGlzLmdldFBvaW50KDApLG89dGhpcy5nZXRQb2ludCgxKTtpPU1hdGgubWluKG4ueCxvLngpLGU9TWF0aC5taW4obi55LG8ueSksdC5zKG4ueCxuLnksMCwwKSx0LnVuaW9uUG9pbnQobyl9ZWxzZSBpZih0aGlzLmNvbXB1dGVDdXJ2ZSgpPT09OSYmcz49MyYmIXRoaXMuaXNPcnRob2dvbmFsKXtsZXQgbj10aGlzLmdldFBvaW50KDApO2lmKGk9bi54LGU9bi55LHQucyhpLGUsMCwwKSxzPT09Myl7Y29uc3Qgbz10aGlzLmdldFBvaW50KDEpO2k9TWF0aC5taW4oby54LGkpLGU9TWF0aC5taW4oby55LGUpO2NvbnN0IHI9dGhpcy5nZXRQb2ludCgyKTtpPU1hdGgubWluKHIueCxpKSxlPU1hdGgubWluKHIueSxlKSxHZW8uY3Uobi54LG4ueSxvLngsby55LG8ueCxvLnksci54LHIueSwuNSx0KX1lbHNlIGZvcihsZXQgbz0zO288cztvKz0zKXtjb25zdCByPXRoaXMuZ2V0UG9pbnQoby0yKTtvKzM+PXMmJihvPXMtMSk7Y29uc3QgbD10aGlzLmdldFBvaW50KG8tMSksaD10aGlzLmdldFBvaW50KG8pO0dlby5jdShuLngsbi55LHIueCxyLnksbC54LGwueSxoLngsaC55LC41LHQpLGk9TWF0aC5taW4oaC54LGkpLGU9TWF0aC5taW4oaC55LGUpLG49aH19ZWxzZXtjb25zdCBuPXRoaXMuZ2V0UG9pbnQoMCksbz10aGlzLmdldFBvaW50KDEpO2k9TWF0aC5taW4obi54LG8ueCksZT1NYXRoLm1pbihuLnksby55KSx0LnMobi54LG4ueSwwLDApLHQudW5pb25Qb2ludChvKTtmb3IobGV0IHI9MjtyPHM7cisrKXtjb25zdCBsPXRoaXMuZ2V0UG9pbnQocik7aT1NYXRoLm1pbihsLngsaSksZT1NYXRoLm1pbihsLnksZSksdC51bmlvblBvaW50KGwpfX1yZXR1cm4gdGhpcy5EYi5zKGktdC54LGUtdC55KSx0fWdldCBtaWRQb2ludCgpe3JldHVybiB0aGlzLnVwZGF0ZVJvdXRlKCksdGhpcy5jb21wdXRlTWlkUG9pbnQobmV3IFBvaW50KX1ZTCh0KXtyZXR1cm4gdGhpcy51cGRhdGVSb3V0ZSgpLHRoaXMuY29tcHV0ZU1pZFBvaW50KHQpfWNvbXB1dGVNaWRQb2ludCh0KXtjb25zdCBpPXRoaXMucG9pbnRzQ291bnQ7aWYoaT09PTApcmV0dXJuIHQuYyhQb2ludC5IayksdDtpZihpPT09MSlyZXR1cm4gdC5jKHRoaXMuZ2V0UG9pbnQoMCkpLHQ7aWYoaT09PTIpe2NvbnN0IGY9dGhpcy5nZXRQb2ludCgwKSxhPXRoaXMuZ2V0UG9pbnQoMSk7cmV0dXJuIHQucygoZi54K2EueCkvMiwoZi55K2EueSkvMiksdH1pZih0aGlzLmlzT3J0aG9nb25hbCYmKHRoaXMuY29tcHV0ZUNvcm5lcigpPj0xNXx8dGhpcy5jb21wdXRlQ3VydmUoKT09PTkpKXt0aGlzLmZ0LmdldFBvaW50QWxvbmdQYXRoKC41LHQpLHQuYWRkKHRoaXMuZ2V0UG9pbnQoMCkpO2NvbnN0IGY9dGhpcy5mdC5maWd1cmVzLmZpcnN0KCk7cmV0dXJuIHQub2Zmc2V0KC1mLnN0YXJ0WCwtZi5zdGFydFkpLHR9aWYodGhpcy5jb21wdXRlQ3VydmUoKT09PTkpe2lmKGk9PT0zKXtjb25zdCBjPXRoaXMuZ2V0UG9pbnQoMCksdT10aGlzLmdldFBvaW50KDEpLGQ9dGhpcy5nZXRQb2ludCgyKTtyZXR1cm4gR2VvLklDKGMueCxjLnksdS54LHUueSx1LngsdS55LGQueCxkLnksdCksdH1jb25zdCBmPShpLTEpLzN8MCxhPShmLzJ8MCkqMztpZihmJTI9PT0xKXtjb25zdCBjPXRoaXMuZ2V0UG9pbnQoYSksdT10aGlzLmdldFBvaW50KGErMSksZD10aGlzLmdldFBvaW50KGErMiksbT10aGlzLmdldFBvaW50KGErMyk7cmV0dXJuIEdlby5JQyhjLngsYy55LHUueCx1LnksZC54LGQueSxtLngsbS55LHQpLHR9ZWxzZSByZXR1cm4gdC5jKHRoaXMuZ2V0UG9pbnQoYSkpLHR9Y29uc3QgZT10aGlzLmZsYXR0ZW5lZExlbmd0aHMscz10aGlzLmZsYXR0ZW5lZFRvdGFsTGVuZ3RoO2xldCBuPTAsbz0wLHI9MDtmb3IoO248cy8yJiZvPGkmJihyPWVbb10sIShuK3I+cy8yKSk7KW4rPXIsbysrO2NvbnN0IGw9dGhpcy5nZXRQb2ludChvKSxoPXRoaXMuZ2V0UG9pbnQobysxKTtpZihNYXRoLmFicyhsLngtaC54KTwxKWwueT5oLnk/dC5zKGwueCxsLnktKHMvMi1uKSk6dC5zKGwueCxsLnkrKHMvMi1uKSk7ZWxzZSBpZihNYXRoLmFicyhsLnktaC55KTwxKWwueD5oLng/dC5zKGwueC0ocy8yLW4pLGwueSk6dC5zKGwueCsocy8yLW4pLGwueSk7ZWxzZXtjb25zdCBmPShzLzItbikvcixhPWYqKGgueC1sLngpLGM9ZiooaC55LWwueSk7dC5zKGwueCthLGwueStjKX1yZXR1cm4gdH1nZXQgbWlkQW5nbGUoKXtyZXR1cm4gdGhpcy51cGRhdGVSb3V0ZSgpLHRoaXMuY29tcHV0ZU1pZEFuZ2xlKCl9Y29tcHV0ZU1pZEFuZ2xlKCl7Y29uc3QgdD10aGlzLnBvaW50c0NvdW50O2lmKHQ8MilyZXR1cm4gTmFOO2lmKHQ9PT0yKXtjb25zdCBoPXRoaXMuZ2V0UG9pbnQoMCksZj10aGlzLmdldFBvaW50KDEpO3JldHVybiBoLmRpcmVjdGlvblBvaW50KGYpfWlmKHRoaXMuaXNPcnRob2dvbmFsJiYodGhpcy5jb21wdXRlQ29ybmVyKCk+PTE1fHx0aGlzLmNvbXB1dGVDdXJ2ZSgpPT09OSkpcmV0dXJuIHRoaXMuZnQuZ2V0QW5nbGVBbG9uZ1BhdGgoLjUpO2lmKHRoaXMuY29tcHV0ZUN1cnZlKCk9PT05JiZ0Pj00KXtjb25zdCBoPSh0LTEpLzN8MDtsZXQgZj0oaC8yfDApKjM7aWYoaCUyPT09MSl7Zj1NYXRoLmZsb29yKGYpO2NvbnN0IGE9dGhpcy5nZXRQb2ludChmKSxjPXRoaXMuZ2V0UG9pbnQoZisxKSx1PXRoaXMuZ2V0UG9pbnQoZisyKSxkPXRoaXMuZ2V0UG9pbnQoZiszKTtyZXR1cm4gR2VvLnJGKGEueCxhLnksYy54LGMueSx1LngsdS55LGQueCxkLnkpfWVsc2UgaWYoZj4wJiZmKzE8dCl7Y29uc3QgYT10aGlzLmdldFBvaW50KGYtMSksYz10aGlzLmdldFBvaW50KGYrMSk7cmV0dXJuIGEuZGlyZWN0aW9uUG9pbnQoYyl9fWNvbnN0IGk9dGhpcy5mbGF0dGVuZWRMZW5ndGhzLGU9dGhpcy5mbGF0dGVuZWRUb3RhbExlbmd0aDtsZXQgcz0wLG49MCxvPTA7Zm9yKDtzPGUvMiYmbjx0JiYobz1pW25dLCEocytvPmUvMikpOylzKz1vLG4rKztjb25zdCByPXRoaXMuZ2V0UG9pbnQobiksbD10aGlzLmdldFBvaW50KG4rMSk7aWYoTWF0aC5hYnMoci54LWwueCk8MSYmTWF0aC5hYnMoci55LWwueSk8MSl7aWYobj4wJiZuKzI8dCl7Y29uc3QgaD10aGlzLmdldFBvaW50KG4tMSksZj10aGlzLmdldFBvaW50KG4rMik7cmV0dXJuIGguZGlyZWN0aW9uUG9pbnQoZil9fWVsc2V7aWYoTWF0aC5hYnMoci54LWwueCk8MSlyZXR1cm4gci55PmwueT8yNzA6OTA7aWYoTWF0aC5hYnMoci55LWwueSk8MSlyZXR1cm4gci54PmwueD8xODA6MH1yZXR1cm4gci5kaXJlY3Rpb25Qb2ludChsKX1nZXQgZmxhdHRlbmVkTGVuZ3Rocygpe3JldHVybiB0aGlzLlVhIT09bnVsbD90aGlzLlVhOih0aGlzLkxlfHx0aGlzLlJiKCksdGhpcy5iTygpKX1nZXQgZmxhdHRlbmVkVG90YWxMZW5ndGgoKXtsZXQgdD10aGlzLkZiO2lmKGlzTmFOKHQpKXtjb25zdCBpPXRoaXMuZmxhdHRlbmVkTGVuZ3RocyxlPWkubGVuZ3RoO3Q9MDtmb3IobGV0IHM9MDtzPGU7cysrKXQrPWlbc107dGhpcy5GYj10fXJldHVybiB0fWJPKCl7dGhpcy5VYT09PW51bGw/dGhpcy5VYT1bXTp0aGlzLlVhLmxlbmd0aD0wO2NvbnN0IHQ9dGhpcy5VYSxpPXRoaXMucG9pbnRzQ291bnQ7Zm9yKGxldCBlPTA7ZTxpLTE7ZSsrKXtsZXQgcz0wO2NvbnN0IG49dGhpcy5nZXRQb2ludChlKSxvPXRoaXMuZ2V0UG9pbnQoZSsxKTtHZW8uRyhuLngsby54KT8ocz1vLnktbi55LHM8MCYmKHM9LXMpLHQucHVzaChzKSk6R2VvLkcobi55LG8ueSk/KHM9by54LW4ueCxzPDAmJihzPS1zKSx0LnB1c2gocykpOihzPU1hdGguc3FydChuLmRpc3RhbmNlU3F1YXJlZFBvaW50KG8pKSx0LnB1c2gocykpfXJldHVybiB0fWdldCBwb2ludHMoKXtyZXR1cm4gdGhpcy5NaX1zZXQgcG9pbnRzKHQpe2NvbnN0IGk9dGhpcy5NaTtpZihpPT09dClyZXR1cm47bGV0IGU9bnVsbDtpZihBcnJheS5pc0FycmF5KHQpKXtjb25zdCBuPXQ7bGV0IG89bi5sZW5ndGglMj09PTA7aWYobyl7Zm9yKGxldCByPTA7cjxuLmxlbmd0aDtyKyspaWYodHlwZW9mIG5bcl0hPVwibnVtYmVyXCJ8fGlzTmFOKG5bcl0pKXtvPSExO2JyZWFrfX1pZihvKXtlPW5ldyBMaXN0O2ZvcihsZXQgcj0wO3I8bi5sZW5ndGgvMjtyKyspe2NvbnN0IGw9bmV3IFBvaW50KG5bcioyXSxuW3IqMisxXSkucCgpO2UuYWRkKGwpfX1lbHNle2xldCByPSEwO2ZvcihsZXQgbD0wO2w8bi5sZW5ndGg7bCsrKXtjb25zdCBoPW5bbF07aWYoIVUuVyhoKXx8dHlwZW9mIGgueCE9XCJudW1iZXJcInx8aXNOYU4oaC54KXx8dHlwZW9mIGgueSE9XCJudW1iZXJcInx8aXNOYU4oaC55KSl7cj0hMTticmVha319aWYocil7ZT1uZXcgTGlzdDtmb3IobGV0IGw9MDtsPG4ubGVuZ3RoO2wrKyl7Y29uc3QgaD1uW2xdO2UuYWRkKG5ldyBQb2ludChoLngsaC55KS5wKCkpfX1lbHNlIERlYnVnJiZVLm4oXCJMaW5rLnBvaW50cyBhcnJheSBtdXN0IGNvbnRhaW4gb25seSBhbiBldmVuIG51bWJlciBvZiBudW1iZXJzIG9yIG9iamVjdHMgd2l0aCB4IGFuZCB5IHByb3BlcnRpZXMsIG5vdDogXCIrdCl9fWVsc2UgaWYodCBpbnN0YW5jZW9mIExpc3Qpe2U9dC5jb3B5KCk7Y29uc3Qgbj1lLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KW4udmFsdWUucCgpfWVsc2UgVS5uKFwiTGluay5wb2ludHMgdmFsdWUgaXMgbm90IGFuIGluc3RhbmNlIG9mIExpc3Qgb3IgQXJyYXk6IFwiK3QpO2lmKGU9PT1udWxsKXJldHVybjtlLnAoKSx0aGlzLk1pPWUsdGhpcy5yZSgpLHRoaXMuUmIoKTtjb25zdCBzPXRoaXMuZGlhZ3JhbTtzIT09bnVsbCYmKCFzLnFoJiYhcy51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nJiZzLlR4LmFkZCh0aGlzKSxzLmFuaW1hdGlvbk1hbmFnZXIuYmkmJnMuYW5pbWF0aW9uTWFuYWdlci5XTSh0aGlzLGUpKSx0aGlzLnQoXCJwb2ludHNcIixpLGUpfWdldCBwb2ludHNDb3VudCgpe3JldHVybiB0aGlzLk1pLmNvdW50fWdldFBvaW50KHQpe3JldHVybiB0aGlzLk1pLmhbdF19c2V0UG9pbnQodCxpKXtEZWJ1ZyYmKFUuZShpLFBvaW50LExpbmssXCJzZXRQb2ludFwiKSxpLmlzUmVhbCgpfHxVLm4oXCJMaW5rLnNldFBvaW50IGNhbGxlZCB3aXRoIGEgUG9pbnQgdGhhdCBkb2VzIG5vdCBoYXZlIHJlYWwgbnVtYmVyczogXCIraS50b1N0cmluZygpKSksRGVidWcmJnRoaXMuUmU9PT1udWxsJiZVLm4oXCJDYWxsIExpbmsuc3RhcnRSb3V0ZSBiZWZvcmUgbW9kaWZ5aW5nIHRoZSBwb2ludHMgb2YgdGhlIHJvdXRlLlwiKSx0aGlzLk1pLnNldEVsdCh0LGkpfXNldFBvaW50QXQodCxpLGUpe0RlYnVnJiYoVS5yKGksTGluayxcInNldFBvaW50QXQ6eFwiKSxVLnIoZSxMaW5rLFwic2V0UG9pbnRBdDp5XCIpKSxEZWJ1ZyYmdGhpcy5SZT09PW51bGwmJlUubihcIkNhbGwgTGluay5zdGFydFJvdXRlIGJlZm9yZSBtb2RpZnlpbmcgdGhlIHBvaW50cyBvZiB0aGUgcm91dGUuXCIpLHRoaXMuTWkuc2V0RWx0KHQsbmV3IFBvaW50KGksZSkpfWluc2VydFBvaW50KHQsaSl7RGVidWcmJihVLmUoaSxQb2ludCxMaW5rLFwiaW5zZXJ0UG9pbnRcIiksaS5pc1JlYWwoKXx8VS5uKFwiTGluay5pbnNlcnRQb2ludCBjYWxsZWQgd2l0aCBhIFBvaW50IHRoYXQgZG9lcyBub3QgaGF2ZSByZWFsIG51bWJlcnM6IFwiK2kudG9TdHJpbmcoKSkpLERlYnVnJiZ0aGlzLlJlPT09bnVsbCYmVS5uKFwiQ2FsbCBMaW5rLnN0YXJ0Um91dGUgYmVmb3JlIG1vZGlmeWluZyB0aGUgcG9pbnRzIG9mIHRoZSByb3V0ZS5cIiksdGhpcy5NaS5pbnNlcnRBdCh0LGkpfWluc2VydFBvaW50QXQodCxpLGUpe0RlYnVnJiYoVS5yKGksTGluayxcImluc2VydFBvaW50QXQ6eFwiKSxVLnIoZSxMaW5rLFwiaW5zZXJ0UG9pbnRBdDp5XCIpKSxEZWJ1ZyYmdGhpcy5SZT09PW51bGwmJlUubihcIkNhbGwgTGluay5zdGFydFJvdXRlIGJlZm9yZSBtb2RpZnlpbmcgdGhlIHBvaW50cyBvZiB0aGUgcm91dGUuXCIpLHRoaXMuTWkuaW5zZXJ0QXQodCxuZXcgUG9pbnQoaSxlKSl9YWRkUG9pbnQodCl7RGVidWcmJihVLmUodCxQb2ludCxMaW5rLFwiYWRkUG9pbnRcIiksdC5pc1JlYWwoKXx8VS5uKFwiTGluay5hZGRQb2ludCBjYWxsZWQgd2l0aCBhIFBvaW50IHRoYXQgZG9lcyBub3QgaGF2ZSByZWFsIG51bWJlcnM6IFwiK3QudG9TdHJpbmcoKSkpLERlYnVnJiZ0aGlzLlJlPT09bnVsbCYmVS5uKFwiQ2FsbCBMaW5rLnN0YXJ0Um91dGUgYmVmb3JlIG1vZGlmeWluZyB0aGUgcG9pbnRzIG9mIHRoZSByb3V0ZS5cIiksdGhpcy5NaS5hZGQodCl9YWRkUG9pbnRBdCh0LGkpe0RlYnVnJiYoVS5yKHQsTGluayxcImluc2VydFBvaW50QXQ6eFwiKSxVLnIoaSxMaW5rLFwiaW5zZXJ0UG9pbnRBdDp5XCIpKSxEZWJ1ZyYmdGhpcy5SZT09PW51bGwmJlUubihcIkNhbGwgTGluay5zdGFydFJvdXRlIGJlZm9yZSBtb2RpZnlpbmcgdGhlIHBvaW50cyBvZiB0aGUgcm91dGUuXCIpLHRoaXMuTWkuYWRkKG5ldyBQb2ludCh0LGkpKX1yZW1vdmVQb2ludCh0KXtEZWJ1ZyYmdGhpcy5SZT09PW51bGwmJlUubihcIkNhbGwgTGluay5zdGFydFJvdXRlIGJlZm9yZSBtb2RpZnlpbmcgdGhlIHBvaW50cyBvZiB0aGUgcm91dGUuXCIpLHRoaXMuTWkucmVtb3ZlQXQodCl9Y2xlYXJQb2ludHMoKXtEZWJ1ZyYmdGhpcy5SZT09PW51bGwmJlUubihcIkNhbGwgTGluay5zdGFydFJvdXRlIGJlZm9yZSBtb2RpZnlpbmcgdGhlIHBvaW50cyBvZiB0aGUgcm91dGUuXCIpLHRoaXMuTWkuY2xlYXIoKX13cih0LGkpe2lmKHQ9PT0wJiZpPT09MClyZXR1cm47aWYodGhpcy5wb2ludHNDb3VudD09PTApe3RoaXMuZGVmYXVsdEZyb21Qb2ludCYmdGhpcy5kZWZhdWx0RnJvbVBvaW50Lm9mZnNldCh0LGkpLHRoaXMuZGVmYXVsdFRvUG9pbnQmJnRoaXMuZGVmYXVsdFRvUG9pbnQub2Zmc2V0KHQsaSk7cmV0dXJufWNvbnN0IGU9dGhpcy5MZSxzPW5ldyBMaXN0LG49dGhpcy5NaS5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3QgbD1uLnZhbHVlO3MuYWRkKG5ldyBQb2ludChsLngrdCxsLnkraSkucCgpKX1zLnAoKTtjb25zdCBvPXRoaXMuTWk7dGhpcy5NaT1zO2NvbnN0IHI9dGhpcy5kaWFncmFtO2lzTmFOKHQpfHxpc05hTihpKXx8ciE9PW51bGwmJnIuYW5pbWF0aW9uTWFuYWdlci5iaT90aGlzLnUoKToodGhpcy5Kcy5zKHRoaXMuSnMueCt0LHRoaXMuSnMueStpKSx0aGlzLmd0LnModGhpcy5ndC54K3QsdGhpcy5ndC55K2kpLHRoaXMuaGMoKSksZT90aGlzLlJiKCk6KHRoaXMuZGVmYXVsdEZyb21Qb2ludCYmKHRoaXMuZGVmYXVsdEZyb21Qb2ludD10aGlzLmdldFBvaW50KDApKSx0aGlzLmRlZmF1bHRUb1BvaW50JiYodGhpcy5kZWZhdWx0VG9Qb2ludD10aGlzLmdldFBvaW50KHRoaXMucG9pbnRzQ291bnQtMSkpKSxyIT09bnVsbCYmci5hbmltYXRpb25NYW5hZ2VyLmJpJiZyLmFuaW1hdGlvbk1hbmFnZXIuV00odGhpcyxzKSx0aGlzLnQoXCJwb2ludHNcIixvLHMpfXN0YXJ0Um91dGUoKXt0aGlzLlJlPT09bnVsbCYmKHRoaXMuUmU9dGhpcy5NaSx0aGlzLk1pPXRoaXMuTWkuY29weSgpKX1jb21taXRSb3V0ZSgpe2lmKHRoaXMuUmU9PT1udWxsKXJldHVybjtjb25zdCB0PXRoaXMuUmUsaT10aGlzLk1pO2xldCBlPTEvMCxzPTEvMDtjb25zdCBuPXQuaCxvPW4ubGVuZ3RoO2ZvcihsZXQgYz0wO2M8bztjKyspe2NvbnN0IHU9bltjXTtlPU1hdGgubWluKHUueCxlKSxzPU1hdGgubWluKHUueSxzKX1sZXQgcj0xLzAsbD0xLzA7Y29uc3QgaD1pLmgsZj1oLmxlbmd0aDtmb3IobGV0IGM9MDtjPGY7YysrKXtjb25zdCB1PWhbY107cj1NYXRoLm1pbih1LngsciksbD1NYXRoLm1pbih1LnksbCksdS5wKCl9aWYoaS5wKCksZj09PW8pZm9yKGxldCBjPTA7YzxmO2MrKyl7Y29uc3QgdT1uW2NdLGQ9aFtjXTtpZih1LngtZSE9PWQueC1yfHx1LnktcyE9PWQueS1sKXt0aGlzLnJlKCk7YnJlYWt9fWVsc2UgdGhpcy5yZSgpO3RoaXMuUmU9bnVsbDtjb25zdCBhPXRoaXMuZGlhZ3JhbTthIT09bnVsbCYmYS5hbmltYXRpb25NYW5hZ2VyLmJpJiZhLmFuaW1hdGlvbk1hbmFnZXIuV00odGhpcyxpKSx0aGlzLlJiKCksdGhpcy50KFwicG9pbnRzXCIsdCxpKX1yb2xsYmFja1JvdXRlKCl7dGhpcy5SZSE9PW51bGwmJih0aGlzLk1pPXRoaXMuUmUsdGhpcy5SZT1udWxsKX1xRigpe3RoaXMuQ3IhPT1udWxsJiYodGhpcy5wb2ludHM9dGhpcy5Dcix0aGlzLkNyPW51bGwpfVJiKCl7aWYodGhpcy5NaS5jb3VudD09PTApe3RoaXMuTGU9ITE7cmV0dXJufXRoaXMuTGU9ITAsdGhpcy5VYT1udWxsLHRoaXMuRmI9TmFOLHRoaXMuZGVmYXVsdEZyb21Qb2ludD10aGlzLmdldFBvaW50KDApLHRoaXMuZGVmYXVsdFRvUG9pbnQ9dGhpcy5nZXRQb2ludCh0aGlzLnBvaW50c0NvdW50LTEpLHRoaXMuSWIoITEpfWludmFsaWRhdGVSb3V0ZSgpe2lmKHRoaXMuc3VzcGVuZHNSb3V0aW5nKXJldHVybjtjb25zdCB0PXRoaXMucGF0aDtpZih0PT09bnVsbClyZXR1cm47Y29uc3QgaT10aGlzLmRpYWdyYW07aWYoaSl7aWYoaS5UeC5oYXModGhpcyl8fGkudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZylyZXR1cm47Y29uc3QgZT1pLmFuaW1hdGlvbk1hbmFnZXI7aWYoZS5pc1RpY2tpbmcmJiFlLmlzQW5pbWF0aW5nKXJldHVybjt0aGlzLkNyIT09bnVsbCYmIWUuaXNUaWNraW5nJiYodGhpcy5Dcj1udWxsKX10aGlzLkxlPSExLHRoaXMudSgpLHQudSgpfWdldCBMZSgpe3JldHVybih0aGlzLkR0JjE2KSE9PTB9c2V0IExlKHQpeyh0aGlzLkR0JjE2KSE9PTAhPT10JiYodGhpcy5EdD10aGlzLkR0XjE2KX1nZXQgc3VzcGVuZHNSb3V0aW5nKCl7cmV0dXJuKHRoaXMuRHQmMzIpIT09MH1zZXQgc3VzcGVuZHNSb3V0aW5nKHQpeyh0aGlzLkR0JjMyKSE9PTAhPT10JiYodGhpcy5EdD10aGlzLkR0XjMyKX1nZXQgTnkoKXtyZXR1cm4odGhpcy5EdCY2NCkhPT0wfXNldCBOeSh0KXsodGhpcy5EdCY2NCkhPT0wIT09dCYmKHRoaXMuRHQ9dGhpcy5EdF42NCl9Z2V0IFBOKCl7cmV0dXJuKHRoaXMuRHQmNTEyKSE9PTB9c2V0IFBOKHQpeyh0aGlzLkR0JjUxMikhPT0wIT09dCYmKHRoaXMuRHQ9dGhpcy5EdF41MTIpfWdldCBkZWZhdWx0RnJvbVBvaW50KCl7cmV0dXJuIHRoaXMucE59c2V0IGRlZmF1bHRGcm9tUG9pbnQodCl7dGhpcy5wTj10IT09bnVsbD90LmNvcHkoKTpudWxsfWdldCBkZWZhdWx0VG9Qb2ludCgpe3JldHVybiB0aGlzLnlOfXNldCBkZWZhdWx0VG9Qb2ludCh0KXt0aGlzLnlOPXQhPT1udWxsP3QuY29weSgpOm51bGx9dXBkYXRlUm91dGUoKXtpZih0aGlzLkxlfHx0aGlzLk55KXJldHVybjtsZXQgdD0hMDt0cnl7dGhpcy5OeT0hMCx0aGlzLnN0YXJ0Um91dGUoKSx0PXRoaXMuY29tcHV0ZVBvaW50cygpfWNhdGNoe3RoaXMuTnk9ITEsdGhpcy5yb2xsYmFja1JvdXRlKCl9ZmluYWxseXt0aGlzLk55PSExLHQ/dGhpcy5jb21taXRSb3V0ZSgpOnRoaXMucm9sbGJhY2tSb3V0ZSgpfX1jb21wdXRlUG9pbnRzKCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodD09PW51bGwpcmV0dXJuITE7bGV0IGk9dGhpcy5mcm9tTm9kZSxlPW51bGw7aWYoaT09PW51bGw/KExpbmsuR2F8fChMaW5rLkdhPW5ldyBOb2RlLExpbmsuR2EuZGVzaXJlZFNpemU9U2l6ZS5HaCxMaW5rLkdhLmVuc3VyZUJvdW5kcygpKSx0aGlzLmRlZmF1bHRGcm9tUG9pbnQmJihMaW5rLkdhLmxvY2F0aW9uPXRoaXMuZGVmYXVsdEZyb21Qb2ludCxMaW5rLkdhLmVuc3VyZUJvdW5kcygpLGk9TGluay5HYSxlPUxpbmsuR2EpKTplPXRoaXMuZnJvbVBvcnQsZSE9PW51bGwmJiFpLmlzVmlzaWJsZSgpKXtjb25zdCBtPWkuZmluZFZpc2libGVOb2RlKCk7bSE9PW51bGwmJm0hPT1pPyhpPW0sZT1tLnBvcnQpOmk9bX1pZih0aGlzLndOPWksaT09PW51bGx8fCFpLmxvY2F0aW9uLmlzUmVhbCgpfHxlPT09bnVsbHx8KGU9aS5maW5kVmlzaWJsZVBvcnQoZSksZT09PW51bGwpKXJldHVybiExO2xldCBzPXRoaXMudG9Ob2RlLG49bnVsbDtpZihzPT09bnVsbD8oTGluay5IYXx8KExpbmsuSGE9bmV3IE5vZGUsTGluay5IYS5kZXNpcmVkU2l6ZT1TaXplLkdoLExpbmsuSGEuZW5zdXJlQm91bmRzKCkpLHRoaXMuZGVmYXVsdFRvUG9pbnQmJihMaW5rLkhhLmxvY2F0aW9uPXRoaXMuZGVmYXVsdFRvUG9pbnQsTGluay5IYS5lbnN1cmVCb3VuZHMoKSxzPUxpbmsuSGEsbj1MaW5rLkhhKSk6bj10aGlzLnRvUG9ydCxuIT09bnVsbCYmIXMuaXNWaXNpYmxlKCkpe2NvbnN0IG09cy5maW5kVmlzaWJsZU5vZGUoKTttIT09bnVsbCYmbSE9PXM/KHM9bSxuPW0ucG9ydCk6cz1tfWlmKHRoaXMueE49cyxzPT09bnVsbHx8IXMubG9jYXRpb24uaXNSZWFsKCl8fG49PT1udWxsfHwobj1zLmZpbmRWaXNpYmxlUG9ydChuKSxuPT09bnVsbCkpcmV0dXJuITE7Y29uc3Qgbz10aGlzLnBvaW50c0NvdW50LHI9dGhpcy5jb21wdXRlU3BvdCghMCxlKSxsPXRoaXMuY29tcHV0ZVNwb3QoITEsbiksaD10aGlzLlZkKHIpLGY9dGhpcy5WZChsKSxhPWU9PT1uJiZlIT09bnVsbCxjPXRoaXMuaXNPcnRob2dvbmFsO2xldCB1PXRoaXMuY3VydmU9PT05O2EmJiFjPyh1PSEwLHRoaXMuJG89ITApOnRoaXMuJG89ITE7Y29uc3QgZD10aGlzLmNvbXB1dGVBZGp1c3RpbmcoKT09PTB8fGE7aWYoIWMmJiFhJiZoJiZmKXtsZXQgbT0hMTtpZighZCYmbz49Myl7bGV0IGc9dGhpcy5nZXRMaW5rUG9pbnQoaSxlLHIsITAsITEscyxuKSxwPXRoaXMuZ2V0TGlua1BvaW50KHMsbixsLCExLCExLGksZSk7bT10aGlzLmFkanVzdFBvaW50cygwLGcsby0xLHApLG0mJihnPXRoaXMuZ2V0TGlua1BvaW50KGksZSxyLCEwLCExLHMsbikscD10aGlzLmdldExpbmtQb2ludChzLG4sbCwhMSwhMSxpLGUpLHRoaXMuYWRqdXN0UG9pbnRzKDAsZyxvLTEscCkpfW18fCh0aGlzLmNsZWFyUG9pbnRzKCksdT90aGlzLmtPKGksZSxyLHMsbixsKTp0aGlzLlNPKGksZSxyLHMsbixsKSl9ZWxzZXtjb25zdCBtPXRoaXMuaXNBdm9pZGluZztkJiYoYyYmbXx8YSkmJnRoaXMuY2xlYXJQb2ludHMoKTtjb25zdCBnPWE/dGhpcy5jb21wdXRlQ3VydmluZXNzKCk6MCxwPXRoaXMuZ2V0TGlua1BvaW50KGksZSxyLCEwLGMscyxuKTtsZXQgdz0wLHg9MCxrPTA7aWYoY3x8IWh8fGEpe2xldCBOPXRoaXMuY29tcHV0ZUVuZFNlZ21lbnRMZW5ndGgoaSxlLHIsITApO2lmKGs9dGhpcy5nZXRMaW5rRGlyZWN0aW9uKGksZSxwLHIsITAsYyxzLG4pLGEmJihofHxyLmVxdWFscyhsKXx8IWMmJnIueCtsLng9PT0xJiZyLnkrbC55PT09MSkmJihrLT1jPzkwOjMwLGc8MCYmKGstPTE4MCkpLGs8MD9rKz0zNjA6az49MzYwJiYoay09MzYwKSxhJiYoTis9TWF0aC5hYnMoZykqKGM/MToyKSksaz09PTA/dz1OOms9PT05MD94PU46az09PTE4MD93PS1OOms9PT0yNzA/eD0tTjoodz1OKk1hdGguY29zKGsqTWF0aC5QSS8xODApLHg9TipNYXRoLnNpbihrKk1hdGguUEkvMTgwKSksci5pc05vU3BvdCgpJiZhKXtjb25zdCBUPWUuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcixQb2ludC5hKCkpLEw9UG9pbnQuSyhULngrdyoxZTMsVC55K3gqMWUzKTt0aGlzLmdldExpbmtQb2ludEZyb21Qb2ludChpLGUsVCxMLCEwLHApLFBvaW50Lm8oVCksUG9pbnQubyhMKX19Y29uc3QgYj10aGlzLmdldExpbmtQb2ludChzLG4sbCwhMSxjLGksZSk7bGV0IFM9MCxNPTAsQT0wO2lmKGN8fCFmfHxhKXtsZXQgTj10aGlzLmNvbXB1dGVFbmRTZWdtZW50TGVuZ3RoKHMsbixsLCExKTtpZihBPXRoaXMuZ2V0TGlua0RpcmVjdGlvbihzLG4sYixsLCExLGMsaSxlKSxhJiYoZnx8ci5lcXVhbHMobCl8fCFjJiZyLngrbC54PT09MSYmci55K2wueT09PTEpJiYoQSs9Yz8wOjMwLGc8MCYmKEErPTE4MCkpLEE8MD9BKz0zNjA6QT49MzYwJiYoQS09MzYwKSxhJiYoTis9TWF0aC5hYnMoZykqKGM/MToyKSksQT09PTA/Uz1OOkE9PT05MD9NPU46QT09PTE4MD9TPS1OOkE9PT0yNzA/TT0tTjooUz1OKk1hdGguY29zKEEqTWF0aC5QSS8xODApLE09TipNYXRoLnNpbihBKk1hdGguUEkvMTgwKSksbC5pc05vU3BvdCgpJiZhKXtjb25zdCBUPW4uZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcixQb2ludC5hKCkpLEw9UG9pbnQuSyhULngrUyoxZTMsVC55K00qMWUzKTt0aGlzLmdldExpbmtQb2ludEZyb21Qb2ludChzLG4sVCxMLCExLGIpLFBvaW50Lm8oVCksUG9pbnQubyhMKX19bGV0IEM9cDsoY3x8IWh8fGEpJiYoQz1uZXcgUG9pbnQocC54K3cscC55K3gpKTtsZXQgUD1iOyhjfHwhZnx8YSkmJihQPW5ldyBQb2ludChiLngrUyxiLnkrTSkpLCFkJiYhYyYmaCYmbz4zJiZ0aGlzLmFkanVzdFBvaW50cygwLHAsby0yLFApP3RoaXMuc2V0UG9pbnQoby0xLGIpOiFkJiYhYyYmZiYmbz4zJiZ0aGlzLmFkanVzdFBvaW50cygxLEMsby0xLGIpP3RoaXMuc2V0UG9pbnQoMCxwKTohZCYmKGM/bz49NjpvPjQpJiZ0aGlzLmFkanVzdFBvaW50cygxLEMsby0yLFApPyh0aGlzLnNldFBvaW50KDAscCksdGhpcy5zZXRQb2ludChvLTEsYikpOih0aGlzLmNsZWFyUG9pbnRzKCksdGhpcy5hZGRQb2ludChwKSwoY3x8IWh8fGEpJiZ0aGlzLmFkZFBvaW50KEMpLGMmJnRoaXMuYWRkT3J0aG9Qb2ludHMoQyxrLFAsQSxpLHMpLChjfHwhZnx8YSkmJnRoaXMuYWRkUG9pbnQoUCksdGhpcy5hZGRQb2ludChiKSl9cmV0dXJuIHQuYWRkSW52YWxpZFJvdXRlKHRoaXMpLCEwfU5OKHQsaSl7cmV0dXJuIE1hdGguYWJzKGkueC10LngpPk1hdGguYWJzKGkueS10LnkpPyhpLng+PXQueD9pLng9dC54KzllOTppLng9dC54LTllOSxpLnk9dC55KTooaS55Pj10Lnk/aS55PXQueSs5ZTk6aS55PXQueS05ZTksaS54PXQueCksaX1nZXRMaW5rUG9pbnRGcm9tUG9pbnQodCxpLGUscyxuLG8pe2lmKG89PT12b2lkIDAmJihvPW5ldyBQb2ludCksdD09PW51bGx8fGk9PT1udWxsKXJldHVybiBvLmMoZSksbztpZighdC5pc1Zpc2libGUoKSl7Y29uc3QgdT10LmZpbmRWaXNpYmxlTm9kZSgpO3UhPT1udWxsJiZ1IT09dCYmKHQ9dSxpPXQucG9ydCl9bGV0IHI9MCxsPTAsaD0wLGY9MCxhPW51bGwsYz1pLnBhbmVsO2lmKGMhPT1udWxsJiYhYy5tbigpJiYoYz1jLnBhbmVsKSxjPT09bnVsbClyPXMueCxsPXMueSxoPWUueCxmPWUueTtlbHNle2E9Yy5Vcztjb25zdCB1PTEvKGEubTExKmEubTIyLWEubTEyKmEubTIxKSxkPWEubTIyKnUsbT0tYS5tMTIqdSxnPS1hLm0yMSp1LHA9YS5tMTEqdSx3PXUqKGEubTIxKmEuZHktYS5tMjIqYS5keCkseD11KihhLm0xMiphLmR4LWEubTExKmEuZHkpO3I9cy54KmQrcy55KmcrdyxsPXMueCptK3MueSpwK3gsaD1lLngqZCtlLnkqZyt3LGY9ZS54Km0rZS55KnAreH1yZXR1cm4gaS5lYyhyLGwsaCxmLG8pLGEhPT1udWxsJiZvLkYoYSksb31NTyh0LGkpe2NvbnN0IGU9dC5adTtyZXR1cm4gZSE9PW51bGw/ZS5EVChpKTpudWxsfU9iKHQpe2lmKHQ9PT1udWxsKXJldHVybiBudWxsO2xldCBpPXQuWnU7cmV0dXJuIGk9PT1udWxsJiYoaT1uZXcgS25vdCh0LnBhcnQsdCksdC5adT1pKSxpLkRUKHRoaXMpfWdldExpbmtQb2ludCh0LGksZSxzLG4sbyxyLGwpe2lmKGw9PT12b2lkIDAmJihsPW5ldyBQb2ludCksZS5pc1Nwb3QoKSYmIXRoaXMuVmQoZSkpcmV0dXJuIGkuZ2V0RG9jdW1lbnRQb2ludChlLGwpLGw7aWYoZS5pc1NpZGUoKSl7Y29uc3QgYT10aGlzLk9iKGkpO2lmKGEhPT1udWxsKXtjb25zdCBjPWEuemQ7aWYobC5jKGMpLG4mJnRoaXMucm91dGluZz09PTcpe2NvbnN0IHU9dGhpcy5PYihyKTtpZih1IT09bnVsbCYmYS5EYzx1LkRjKXtjb25zdCBkPVBvaW50LmEoKSxtPVBvaW50LmEoKSxnPW5ldyBSZWN0KGkuZ2V0RG9jdW1lbnRQb2ludChTcG90LlRvcExlZnQsZCksaS5nZXREb2N1bWVudFBvaW50KFNwb3QuQm90dG9tUmlnaHQsbSkpLHA9dGhpcy5jb21wdXRlU3BvdCghcyxyKSx3PXRoaXMuZ2V0TGlua1BvaW50KG8scixwLCFzLG4sdCxpLG0pOyhlLmluY2x1ZGVzU2lkZShTcG90LkxlZnRTaWRlKXx8ZS5pbmNsdWRlc1NpZGUoU3BvdC5SaWdodFNpZGUpKSYmdy55Pj1nLnkmJncueTw9Zy55K2cuaGVpZ2h0P2wueT13Lnk6KGUuaW5jbHVkZXNTaWRlKFNwb3QuVG9wU2lkZSl8fGUuaW5jbHVkZXNTaWRlKFNwb3QuQm90dG9tU2lkZSkpJiZ3Lng+PWcueCYmdy54PD1nLngrZy53aWR0aCYmKGwueD13LngpLFBvaW50Lm8oZCksUG9pbnQubyhtKX19cmV0dXJuIGx9fWNvbnN0IGg9aS5nZXREb2N1bWVudFBvaW50KHRoaXMuRWIoZSxzKSxQb2ludC5hKCkpO2xldCBmPW51bGw7aWYodGhpcy5wb2ludHNDb3VudD4obj82OjIpKWY9cz90aGlzLmdldFBvaW50KDEpOnRoaXMuZ2V0UG9pbnQodGhpcy5wb2ludHNDb3VudC0yKSxuJiYoZj10aGlzLk5OKGgsZi5jb3B5KCkpKTtlbHNle2NvbnN0IGE9dGhpcy5jb21wdXRlU3BvdCghcyxyKSxjPVBvaW50LmEoKTtmPXIuZ2V0RG9jdW1lbnRQb2ludCh0aGlzLkViKGEsIXMpLGMpLG4mJihmPXRoaXMuTk4oaCxmKSksUG9pbnQubyhjKX1yZXR1cm4gdGhpcy5nZXRMaW5rUG9pbnRGcm9tUG9pbnQodCxpLGgsZixzLGwpLFBvaW50Lm8oaCksbH1nZXRMaW5rRGlyZWN0aW9uKHQsaSxlLHMsbixvLHIsbCl7bGV0IGg9dGhpcy5QTyh0LGksZSxzLG4sbyxyLGwpO2lmKHImJnMuaXNOb1Nwb3QoKSYmci5pc01lbWJlck9mKHQpJiYoaCs9MTgwLGg+PTM2MCYmKGgtPTM2MCkpLHRoaXMuVmQocyl8fGk9PT1udWxsKXJldHVybiBoO2NvbnN0IGY9aS5nZXREb2N1bWVudEFuZ2xlKCk7cmV0dXJuIGY9PT0wfHwoNDU8PWYmJmY8MTM1P2grPTkwOjEzNTw9ZiYmZjwyMjU/aCs9MTgwOjIyNTw9ZiYmZjwzMTUmJihoKz0yNzApLGg+PTM2MCYmKGgtPTM2MCkpLGh9UE8odCxpLGUscyxuLG8scixsKXtpZihzLmlzU3BvdCgpKXJldHVybiBzLng+cy55P3MueD4xLXMueT8wOnMueDwxLXMueT8yNzA6MzE1OnMueDxzLnk/cy54PjEtcy55PzkwOnMueDwxLXMueT8xODA6MTM1OnMueDwuNT8yMjU6cy54Pi41PzQ1OjA7aWYocy5pc1NpZGUoKSl7Y29uc3QgYz10aGlzLk9iKGkpO2lmKGMhPT1udWxsKXN3aXRjaChjLnhlKXtjYXNlIDE6cmV0dXJuIDI3MDtjYXNlIDI6cmV0dXJuIDE4MDtkZWZhdWx0OmNhc2UgNDpyZXR1cm4gMDtjYXNlIDg6cmV0dXJuIDkwfWVsc2UgcmV0dXJuIHMuaW5jbHVkZXNTaWRlKFNwb3QuVG9wU2lkZSk/MjcwOnMuaW5jbHVkZXNTaWRlKFNwb3QuQm90dG9tU2lkZSk/OTA6cy5pbmNsdWRlc1NpZGUoU3BvdC5MZWZ0U2lkZSk/MTgwOjB9aWYoaT09PW51bGx8fGw9PT1udWxsKXJldHVybiAwO2NvbnN0IGg9aS5nZXREb2N1bWVudFBvaW50KFNwb3QuQ2VudGVyLFBvaW50LmEoKSk7bGV0IGY9bnVsbDtpZih0aGlzLnBvaW50c0NvdW50PihvPzY6MikpZj1uP3RoaXMuZ2V0UG9pbnQoMSk6dGhpcy5nZXRQb2ludCh0aGlzLnBvaW50c0NvdW50LTIpLG8/Zj10aGlzLk5OKGgsZi5jb3B5KCkpOmY9ZTtlbHNle2NvbnN0IGM9UG9pbnQuYSgpO2Y9bC5nZXREb2N1bWVudFBvaW50KFNwb3QuQ2VudGVyLGMpLFBvaW50Lm8oYyl9bGV0IGE9MDtyZXR1cm4gTWF0aC5hYnMoZi54LWgueCk+TWF0aC5hYnMoZi55LWgueSk/Zi54Pj1oLng/YT0wOmE9MTgwOmYueT49aC55P2E9OTA6YT0yNzAsUG9pbnQubyhoKSxhfWNvbXB1dGVFbmRTZWdtZW50TGVuZ3RoKHQsaSxlLHMpe2lmKGkhPT1udWxsJiZlLmlzU2lkZSgpKXtjb25zdCBvPXRoaXMuT2IoaSk7aWYobyE9PW51bGwpcmV0dXJuIG8uQmJ9bGV0IG49TmFOO3JldHVybiBzP249dGhpcy5mcm9tRW5kU2VnbWVudExlbmd0aDpuPXRoaXMudG9FbmRTZWdtZW50TGVuZ3RoLGkhPT1udWxsJiZpc05hTihuKSYmKHM/bj1pLmZyb21FbmRTZWdtZW50TGVuZ3RoOm49aS50b0VuZFNlZ21lbnRMZW5ndGgpLGlzTmFOKG4pJiYobj0xMCksbn1jb21wdXRlU3BvdCh0LGkpe3JldHVybiBpPT09dm9pZCAwJiYoaT1udWxsKSx0P3RoaXMuTk8oaXx8dGhpcy5mcm9tUG9ydCk6dGhpcy5DTyhpfHx0aGlzLnRvUG9ydCl9Tk8odCl7aWYodD09PW51bGwpcmV0dXJuIFNwb3QuQ2VudGVyO2xldCBpPXRoaXMuZnJvbVNwb3Q7cmV0dXJuIGkuaXNEZWZhdWx0KCkmJihpPXQuZnJvbVNwb3QpLGk9PT1TcG90LkRlZmF1bHQ/U3BvdC5Ob25lOml9Q08odCl7aWYodD09PW51bGwpcmV0dXJuIFNwb3QuQ2VudGVyO2xldCBpPXRoaXMudG9TcG90O3JldHVybiBpLmlzRGVmYXVsdCgpJiYoaT10LnRvU3BvdCksaT09PVNwb3QuRGVmYXVsdD9TcG90Lk5vbmU6aX1WZCh0KXtyZXR1cm4gdD09PVNwb3QuTm9uZXx8dC54PT09LjUmJnQueT09PS41fUViKHQsaSl7cmV0dXJuIHQueD09PS41JiZ0Lnk9PT0uNT90OlNwb3QuQ2VudGVyfWNvbXB1dGVPdGhlclBvaW50KHQsaSl7aWYodGhpcy5jb21wdXRlQWRqdXN0aW5nKCkhPT0wJiZ0aGlzLnBvaW50c0NvdW50PjQpcmV0dXJuIHRoaXMuY29tcHV0ZU1pZFBvaW50KG5ldyBQb2ludCk7e2NvbnN0IGU9dGhpcy5NTyhpLHRoaXMpO3JldHVybiBlIT09bnVsbD9lLnpkOmkuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcil9fWNvbXB1dGVTaG9ydExlbmd0aCh0KXtpZih0KXtsZXQgaT10aGlzLmZyb21TaG9ydExlbmd0aDtpZihpc05hTihpKSl7Y29uc3QgZT10aGlzLmZyb21Qb3J0O2UhPT1udWxsJiYoaT1lLmZyb21TaG9ydExlbmd0aCl9cmV0dXJuIGlzTmFOKGkpPzA6aX1lbHNle2xldCBpPXRoaXMudG9TaG9ydExlbmd0aDtpZihpc05hTihpKSl7Y29uc3QgZT10aGlzLnRvUG9ydDtlIT09bnVsbCYmKGk9ZS50b1Nob3J0TGVuZ3RoKX1yZXR1cm4gaXNOYU4oaSk/MDppfX1FbSh0LGksZSxzLG4sbyl7aWYodGhpcy5waWNrYWJsZT09PSExKXJldHVybiExO2k9PT12b2lkIDAmJihpPW51bGwpLGU9PT12b2lkIDAmJihlPW51bGwpO2xldCByO2lmKG89PT12b2lkIDA/KHI9VHJhbnNmb3JtLmEoKSxyLlZpKCkpOnI9byxyLnVmKHRoaXMuRiksdGhpcy5jb250YWluZWRJblJlY3QodCxyKSlyZXR1cm4gdGhpcy5KUChpLGUsbiksbz09PXZvaWQgMCYmVHJhbnNmb3JtLm8ociksITA7aWYodGhpcy5pbnRlcnNlY3RzUmVjdCh0LHIpKXtsZXQgbD0hMTtpZighdGhpcy5tYyl7Y29uc3QgaD10aGlzLlQuaCxmPWgubGVuZ3RoO2ZvcihsZXQgYT1mO2EtLTspe2NvbnN0IGM9aFthXTtpZighYy52aXNpYmxlJiZjIT09dGhpcy5sb2NhdGlvbk9iamVjdCljb250aW51ZTtjb25zdCB1PWMuYWN0dWFsQm91bmRzLGQ9dGhpcy5uYXR1cmFsQm91bmRzO2lmKHUueD5kLndpZHRofHx1Lnk+ZC5oZWlnaHR8fHUueCt1LndpZHRoPDB8fHUueSt1LmhlaWdodDwwKWNvbnRpbnVlO2NvbnN0IG09YyxnPVRyYW5zZm9ybS5hKCk7aWYoZy5zZXQociksbSBpbnN0YW5jZW9mIFBhbmVsP2w9bS5FbSh0LGksZSxzLG4sZyk6dGhpcy5wYXRoPT09bT9tIGluc3RhbmNlb2YgU2hhcGUmJihsPW0uSkkodCxzLGcpKTpsPW0uUEwodCxzLGcpLGwpe2xldCBwPW07aSE9PW51bGwmJihwPWkobSkpLHAmJihlPT09bnVsbHx8ZShwKSkmJm4uYWRkKHApfVRyYW5zZm9ybS5vKGcpfX1yZXR1cm4gbz09PXZvaWQgMCYmVHJhbnNmb3JtLm8ociksbHx8dGhpcy5iYWNrZ3JvdW5kIT09bnVsbH1yZXR1cm4gbz09PXZvaWQgMCYmVHJhbnNmb3JtLm8ociksITF9Z2V0IGlzT3J0aG9nb25hbCgpe3JldHVybih0aGlzLkthJjIpPT09Mn1zdGF0aWMgU04odCl7cmV0dXJuKHQmMik9PT0yfWdldCBpc0F2b2lkaW5nKCl7cmV0dXJuKHRoaXMuS2EmNCk9PT00fWNvbXB1dGVDdXJ2ZSgpe2lmKHRoaXMuJG89PT1udWxsKXtjb25zdCB0PXRoaXMuZnJvbVBvcnQsaT10IT09bnVsbCYmdD09PXRoaXMudG9Qb3J0LGU9dGhpcy5pc09ydGhvZ29uYWw7dGhpcy4kbz1pJiYhZX1yZXR1cm4gdGhpcy4kbz85OnRoaXMuY3VydmV9Y29tcHV0ZUNvcm5lcigpe2lmKHRoaXMuY3VydmU9PT05KXJldHVybiAwO2xldCB0PXRoaXMuY29ybmVyO3JldHVybihpc05hTih0KXx8dDwwKSYmKHQ9MTApLHR9ZmluZE1pZExhYmVsKCl7Y29uc3QgdD10aGlzLnBhdGgsaT10aGlzLlQuaCxlPWkubGVuZ3RoO2ZvcihsZXQgbj0wO248ZTtuKyspe2NvbnN0IG89aVtuXTtpZighKG89PT10fHxvLmlzUGFuZWxNYWluKSYmKG8uc2VnbWVudEluZGV4PT09LTEvMHx8aXNOYU4oby5zZWdtZW50SW5kZXgpKSlyZXR1cm4gb31jb25zdCBzPXRoaXMubGFiZWxOb2Rlcztmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2lmKG4uc2VnbWVudEluZGV4PT09LTEvMHx8aXNOYU4obi5zZWdtZW50SW5kZXgpKXJldHVybiBufXJldHVybiBudWxsfWNvbXB1dGVTcGFjaW5nKCl7aWYoIXRoaXMuaXNWaXNpYmxlKCkpcmV0dXJuIDA7bGV0IHQ9TGluay55Tzt0PU1hdGgubWF4KHQsdGhpcy5jb21wdXRlVGhpY2tuZXNzKCkpO2NvbnN0IGk9dGhpcy5mcm9tUG9ydCxlPXRoaXMudG9Qb3J0O2lmKGkhPT1udWxsJiZlIT09bnVsbCl7Y29uc3Qgcz10aGlzLmZpbmRNaWRMYWJlbCgpO2lmKHMhPT1udWxsKXtjb25zdCBuPXMubmF0dXJhbEJvdW5kcyxvPXMubWFyZ2luLHI9aXNOYU4obi53aWR0aCk/MzA6bi53aWR0aCpzLnNjYWxlK28ubGVmdCtvLnJpZ2h0LGw9aXNOYU4obi5oZWlnaHQpPzE0Om4uaGVpZ2h0KnMuc2NhbGUrby50b3Arby5ib3R0b20saD1zLnNlZ21lbnRPcmllbnRhdGlvbjtpZihoPT09MjF8fGg9PT0yNXx8aD09PTI0KXQ9TWF0aC5tYXgodCxsKTtlbHNlIGlmKGg9PT0yM3x8aD09PTI3fHxoPT09MjJ8fGg9PT0yNil0PU1hdGgubWF4KHQscik7ZWxzZXtjb25zdCBhPWkuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcikuZGlyZWN0aW9uUG9pbnQoZS5nZXREb2N1bWVudFBvaW50KFNwb3QuQ2VudGVyKSkvMTgwKk1hdGguUEk7dD1NYXRoLm1heCh0LE1hdGguYWJzKE1hdGguc2luKGEpKnIpK01hdGguYWJzKE1hdGguY29zKGEpKmwpKzEpfXRoaXMuY3VydmU9PT05JiYodCo9MS4zMzMpfX1yZXR1cm4gdH1hcnJhbmdlQnVuZGxlZExpbmtzKHQsaSl7aWYoaSlmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7Y29uc3Qgcz10W2VdO3MuY29tcHV0ZUFkanVzdGluZygpPT09MCYmcy5pbnZhbGlkYXRlUm91dGUoKX19Y29tcHV0ZUN1cnZpbmVzcygpe2xldCB0PXRoaXMuY3VydmluZXNzO2lmKGlzTmFOKHQpKXt0PUxpbmsucE87Y29uc3QgaT10aGlzLlpvO2lmKGkhPT1udWxsKXtjb25zdCBlPVUubHQoKTtsZXQgcz0wO2NvbnN0IG49aS5acztmb3IobGV0IHI9MDtyPG4ubGVuZ3RoO3IrKyl7Y29uc3QgaD1uW3JdLmNvbXB1dGVTcGFjaW5nKCk7ZS5wdXNoKGgpLHMrPWh9bGV0IG89LXMvMjtmb3IobGV0IHI9MDtyPG4ubGVuZ3RoO3IrKyl7aWYobltyXT09PXRoaXMpe3Q9bytlW3JdLzI7YnJlYWt9bys9ZVtyXX1pLnV5PT09dGhpcy5mcm9tTm9kZSYmKHQ9LXQpLFUudHQoZSl9fXJldHVybiB0fWNvbXB1dGVUaGlja25lc3MoKXtpZighdGhpcy5pc1Zpc2libGUoKSlyZXR1cm4gMDtjb25zdCB0PXRoaXMucGF0aDtyZXR1cm4gdCE9PW51bGw/TWF0aC5tYXgodC5zdHJva2VXaWR0aCwxKToxfWhhc0N1cnZpbmVzcygpe3JldHVybiFpc05hTih0aGlzLmN1cnZpbmVzcyl8fHRoaXMuWm8hPT1udWxsfVNPKHQsaSxlLHMsbixvKXtjb25zdCByPXRoaXMuZ2V0TGlua1BvaW50KHQsaSxlLCEwLCExLHMsbiksbD10aGlzLmdldExpbmtQb2ludChzLG4sbywhMSwhMSx0LGkpO2lmKHRoaXMuaGFzQ3VydmluZXNzKCkpe2NvbnN0IGg9bC54LXIueCxmPWwueS1yLnksYT10aGlzLmNvbXB1dGVDdXJ2aW5lc3MoKSxjPWEsdT1yLngraC8yLGQ9ci55K2YvMjtsZXQgbT11LGc9ZDtpZihHZW8uZyhmLDApKWg+MD9nLT1jOmcrPWM7ZWxzZXtjb25zdCBwPS1oL2Y7bGV0IHc9TWF0aC5zcXJ0KGMqYy8ocCpwKzEpKTthPDAmJih3PS13KSxtPShmPDA/LTE6MSkqdyt1LGc9cCoobS11KStkfXRoaXMuYWRkUG9pbnQociksdGhpcy5hZGRQb2ludEF0KG0sZyksdGhpcy5hZGRQb2ludChsKX1lbHNle3RoaXMuYWRkUG9pbnQociksdGhpcy5hZGRQb2ludChsKTtjb25zdCBoPVJlY3QuYSgpO2kuZ2V0RG9jdW1lbnRCb3VuZHMoaCk7Y29uc3QgZj1oLmNvbnRhaW5zUG9pbnQobCk7bi5nZXREb2N1bWVudEJvdW5kcyhoKTtjb25zdCBhPWguY29udGFpbnNQb2ludChyKTtpZihmfHxhKXtjb25zdCBjPWkuZ2V0RG9jdW1lbnRQb2ludCh0aGlzLkViKGUsITApLG5ldyBQb2ludCk7dGhpcy5zZXRQb2ludCgwLHRoaXMuZ2V0TGlua1BvaW50RnJvbVBvaW50KHQsaSxjLGwsITAsYykpO2NvbnN0IHU9bi5nZXREb2N1bWVudFBvaW50KHRoaXMuRWIobywhMSksbmV3IFBvaW50KTt0aGlzLnNldFBvaW50KDEsdGhpcy5nZXRMaW5rUG9pbnRGcm9tUG9pbnQocyxuLHUsciwhMSx1KSl9UmVjdC5vKGgpfX1rTyh0LGksZSxzLG4sbyl7Y29uc3Qgcj10aGlzLmdldExpbmtQb2ludCh0LGksZSwhMCwhMSxzLG4pLGw9dGhpcy5nZXRMaW5rUG9pbnQocyxuLG8sITEsITEsdCxpKSxoPWwueC1yLngsZj1sLnktci55LGE9dGhpcy5jb21wdXRlQ3VydmluZXNzKCk7bGV0IGM9MCx1PTAsZD1yLngraC8zLG09ci55K2YvMyxnPWQscD1tO0dlby5nKGYsMCk/aD4wP3AtPWE6cCs9YTooYz0taC9mLHU9TWF0aC5zcXJ0KGEqYS8oYypjKzEpKSxhPDAmJih1PS11KSxnPShmPDA/LTE6MSkqdStkLHA9YyooZy1kKSttKSxkPXIueCsyKmgvMyxtPXIueSsyKmYvMztsZXQgdz1kLHg9bTtHZW8uZyhmLDApP2g+MD94LT1hOngrPWE6KHc9KGY8MD8tMToxKSp1K2QseD1jKih3LWQpK20pLHRoaXMuY2xlYXJQb2ludHMoKSx0aGlzLmFkZFBvaW50KHIpLHRoaXMuYWRkUG9pbnRBdChnLHApLHRoaXMuYWRkUG9pbnRBdCh3LHgpLHRoaXMuYWRkUG9pbnQobCksdGhpcy5zZXRQb2ludCgwLHRoaXMuZ2V0TGlua1BvaW50KHQsaSxlLCEwLCExLHMsbikpLHRoaXMuc2V0UG9pbnQoMyx0aGlzLmdldExpbmtQb2ludChzLG4sbywhMSwhMSx0LGkpKX1hZGp1c3RQb2ludHModCxpLGUscyl7bGV0IG49dGhpcy5jb21wdXRlQWRqdXN0aW5nKCk7aWYodGhpcy5pc09ydGhvZ29uYWwpe2lmKG49PT0xOClyZXR1cm4hMTtuPT09MTkmJihuPTE3KX1zd2l0Y2gobil7Y2FzZSAxODpyZXR1cm4gdGhpcy5BTyh0LGksZSxzKTtjYXNlIDE5OnJldHVybiB0aGlzLkxPKHQsaSxlLHMpO2Nhc2UgMTc6cmV0dXJuIHRoaXMuVE8odCxpLGUscyk7ZGVmYXVsdDpyZXR1cm4hMX19QU8odCxpLGUscyl7Y29uc3Qgbj10aGlzLmdldFBvaW50KHQpLG89dGhpcy5nZXRQb2ludChlKTtpZihuLmVxdWFsc0FwcHJveChpKSYmby5lcXVhbHNBcHByb3gocykpcmV0dXJuITA7Y29uc3Qgcj1uLngsbD1uLnksaD1vLngsZj1vLnk7bGV0IGE9aC1yLGM9Zi1sO2NvbnN0IHU9TWF0aC5zcXJ0KGEqYStjKmMpO2lmKEdlby5HKHUsMCkpcmV0dXJuITA7bGV0IGQ9MDtHZW8uRyhhLDApP2M8MD9kPS1NYXRoLlBJLzI6ZD1NYXRoLlBJLzI6KGQ9TWF0aC5hdGFuKGMvTWF0aC5hYnMoYSkpLGE8MCYmKGQ9TWF0aC5QSS1kKSk7Y29uc3QgbT1pLngsZz1pLnkscD1zLngsdz1zLnkseD1wLW0saz13LWcsYj1NYXRoLnNxcnQoeCp4K2sqayk7bGV0IFM9MDtHZW8uRyh4LDApP2s8MD9TPS1NYXRoLlBJLzI6Uz1NYXRoLlBJLzI6KFM9TWF0aC5hdGFuKGsvTWF0aC5hYnMoeCkpLHg8MCYmKFM9TWF0aC5QSS1TKSk7Y29uc3QgTT1iL3UsQT1TLWQ7dGhpcy5zZXRQb2ludCh0LGkpO2ZvcihsZXQgQz10KzE7QzxlO0MrKyl7Y29uc3QgUD10aGlzLmdldFBvaW50KEMpO2E9UC54LXIsYz1QLnktbDtjb25zdCBOPU1hdGguc3FydChhKmErYypjKTtpZihHZW8uRyhOLDApKWNvbnRpbnVlO2xldCBUPTA7R2VvLkcoYSwwKT9jPDA/VD0tTWF0aC5QSS8yOlQ9TWF0aC5QSS8yOihUPU1hdGguYXRhbihjL01hdGguYWJzKGEpKSxhPDAmJihUPU1hdGguUEktVCkpO2NvbnN0IEw9VCtBLEQ9TipNLEY9bStEKk1hdGguY29zKEwpLEk9ZytEKk1hdGguc2luKEwpO3RoaXMuc2V0UG9pbnRBdChDLEYsSSl9cmV0dXJuIHRoaXMuc2V0UG9pbnQoZSxzKSwhMH1MTyh0LGksZSxzKXtjb25zdCBuPXRoaXMuZ2V0UG9pbnQodCksbz10aGlzLmdldFBvaW50KGUpO2lmKG4uZXF1YWxzQXBwcm94KGkpJiZvLmVxdWFsc0FwcHJveChzKSlyZXR1cm4hMDtjb25zdCByPW4ueCxsPW4ueSxoPW8ueCxmPW8ueSxhPShoLXIpKioyKyhmLWwpKioyLGM9aS54LHU9aS55LGQ9cy54LG09cy55O2xldCBnPTAscD0xO2QtYyE9PTA/KGc9KG0tdSkvKGQtYykscD1NYXRoLnNxcnQoMSsxLyhnKmcpKSk6Zz05ZTksdGhpcy5zZXRQb2ludCh0LGkpO2ZvcihsZXQgdz10KzE7dzxlO3crKyl7Y29uc3QgeD10aGlzLmdldFBvaW50KHcpLGs9eC54LGI9eC55O2xldCBTPS41O2EhPT0wJiYoUz0oKHItaykqKHItaCkrKGwtYikqKGwtZikpL2EpO2NvbnN0IE09citTKihoLXIpLEE9bCtTKihmLWwpO2xldCBDPU1hdGguc3FydCgoay1NKSoqMisoYi1BKSoqMik7YjxnKihrLU0pK0EmJihDPS1DKSxnPjAmJihDPS1DKTtjb25zdCBQPWMrUyooZC1jKSxOPXUrUyoobS11KTtpZihnIT09MCl7Y29uc3QgVD1QK0MvcCxMPU4tKFQtUCkvZzt0aGlzLnNldFBvaW50QXQodyxULEwpfWVsc2UgdGhpcy5zZXRQb2ludEF0KHcsUCxOK0MpfXJldHVybiB0aGlzLnNldFBvaW50KGUscyksITB9VE8odCxpLGUscyl7aWYodGhpcy5pc09ydGhvZ29uYWwpe2xldCBuPXRoaXMuZ2V0UG9pbnQodCksbz10aGlzLmdldFBvaW50KHQrMSkscj10aGlzLmdldFBvaW50KHQrMiksbD1vLngsaD1vLnk7Y29uc3QgZj1sLGE9aDtHZW8uZyhuLnksby55KT9HZW8uZyhvLngsci54KT9oPWkueTpHZW8uZyhvLnksci55KSYmKGw9aS54KTpHZW8uZyhuLngsby54KSYmKEdlby5nKG8ueSxyLnkpP2w9aS54Okdlby5nKG8ueCxyLngpJiYoaD1pLnkpKSx0aGlzLnNldFBvaW50QXQodCsxLGwsaCksbj10aGlzLmdldFBvaW50KGUpLG89dGhpcy5nZXRQb2ludChlLTEpLHI9dGhpcy5nZXRQb2ludChlLTIpO2xldCBjPW8ueCx1PW8ueTtjb25zdCBkPWMsbT11O2lmKEdlby5nKG4ueSxvLnkpP0dlby5nKG8ueCxyLngpP3U9cy55Okdlby5nKG8ueSxyLnkpJiYoYz1zLngpOkdlby5nKG4ueCxvLngpJiYoR2VvLmcoby55LHIueSk/Yz1zLng6R2VvLmcoby54LHIueCkmJih1PXMueSkpLHRoaXMuc2V0UG9pbnRBdChlLTEsYyx1KSx0aGlzLl9BKCkpcmV0dXJuIHRoaXMuc2V0UG9pbnRBdCh0KzEsZixhKSx0aGlzLnNldFBvaW50QXQoZS0xLGQsbSksITF9cmV0dXJuIHRoaXMuc2V0UG9pbnQodCxpKSx0aGlzLnNldFBvaW50KGUscyksITB9YWRkT3J0aG9Qb2ludHModCxpLGUscyxuLG8pe2k8MD9pKz0zNjA6aT49MzYwJiYoaS09MzYwKSxzPDA/cys9MzYwOnM+PTM2MCYmKHMtPTM2MCk7Y29uc3QgYT1zO2k+PTMxNXx8aTw0NT9pPTA6NDU8PWkmJmk8MTM1P2k9OTA6MTM1PD1pJiZpPDIyNT9pPTE4MDppPTI3MCxzPj0zMTV8fHM8NDU/cz0wOjQ1PD1zJiZzPDEzNT9zPTkwOjEzNTw9cyYmczwyMjU/cz0xODA6cz0yNzA7Y29uc3QgYz10LHU9ZSxkPW4uYWN0dWFsQm91bmRzLmNvcHkoKSxtPW8uYWN0dWFsQm91bmRzLmNvcHkoKTtpZighZC5pc1JlYWwoKXx8IW0uaXNSZWFsKCkpcmV0dXJuO2QuaW5mbGF0ZShMaW5rLnFhLExpbmsucWEpLG0uaW5mbGF0ZShMaW5rLnFhLExpbmsucWEpLGQudW5pb25Qb2ludCh0KSxtLnVuaW9uUG9pbnQoZSk7Y29uc3QgZz1Qb2ludC5hKCkscD1Qb2ludC5hKCk7aT09PTA/dS54PmMueHx8cz09PTI3MCYmdS55PGMueSYmbS5yaWdodD5jLnh8fHM9PT05MCYmdS55PmMueSYmbS5yaWdodD5jLng/KGcucyh1LngsYy55KSxwLnModS54LChjLnkrdS55KS8yKSxzPT09MTgwPyhnLng9dGhpcy5jb21wdXRlTWlkT3J0aG9Qb3NpdGlvbihjLngsYy55LHUueCx1LnksITEpLHAueD1nLngscC55PXUueSk6cz09PTI3MCYmdS55PGMueXx8cz09PTkwJiZ1Lnk+Yy55PyhjLng8bS5sZWZ0P2cueD10aGlzLmNvbXB1dGVNaWRPcnRob1Bvc2l0aW9uKGMueCxjLnksbS5sZWZ0LHUueSwhMSk6Yy54PG0ucmlnaHQmJihzPT09MjcwJiZjLnk8bS50b3B8fHM9PT05MCYmYy55Pm0uYm90dG9tKT9nLng9dGhpcy5jb21wdXRlTWlkT3J0aG9Qb3NpdGlvbihjLngsYy55LHUueCx1LnksITEpOmcueD1tLnJpZ2h0LHAueD1nLngscC55PXUueSk6cz09PTAmJmMueDxtLmxlZnQmJmMueT5tLnRvcCYmYy55PG0uYm90dG9tJiYoZy54PWMueCxjLnk8dS55P2cueT1NYXRoLm1pbih1LnksbS50b3ApOmcueT1NYXRoLm1heCh1LnksbS5ib3R0b20pLHAueT1nLnkpKTooZy5zKGMueCx1LnkpLHAucygoYy54K3UueCkvMix1LnkpLChzPT09MTgwfHxzPT09OTAmJnUueTxkLnRvcHx8cz09PTI3MCYmdS55PmQuYm90dG9tKSYmKHM9PT0xODAmJihtLmNvbnRhaW5zUG9pbnQoYyl8fGQuY29udGFpbnNQb2ludCh1KSk/Zy55PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGMueSx1LngsdS55LCEwKTp1Lnk8Yy55JiYocz09PTE4MHx8cz09PTkwKT9nLnk9dGhpcy5jb21wdXRlTWlkT3J0aG9Qb3NpdGlvbihjLngsZC50b3AsdS54LE1hdGgubWF4KHUueSxtLmJvdHRvbSksITApOnUueT5jLnkmJihzPT09MTgwfHxzPT09MjcwKSYmKGcueT10aGlzLmNvbXB1dGVNaWRPcnRob1Bvc2l0aW9uKGMueCxkLmJvdHRvbSx1LngsTWF0aC5taW4odS55LG0udG9wKSwhMCkpLHAueD11LngscC55PWcueSksZy55PmQudG9wJiZnLnk8ZC5ib3R0b20mJih1Lng+PWQubGVmdCYmdS54PD1jLnh8fGMueDw9bS5yaWdodCYmYy54Pj11Lng/KHM9PT05MHx8cz09PTI3MCkmJihnLnMoTWF0aC5tYXgoKGMueCt1LngpLzIsYy54KSxjLnkpLHAucyhnLngsdS55KSk6KHM9PT0yNzB8fChzPT09MHx8cz09PTE4MCkmJnUueTxjLnk/Zy55PU1hdGgubWluKHUueSxzPT09MD9kLnRvcDpNYXRoLm1pbihkLnRvcCxtLnRvcCkpOmcueT1NYXRoLm1heCh1Lnkscz09PTA/ZC5ib3R0b206TWF0aC5tYXgoZC5ib3R0b20sbS5ib3R0b20pKSxwLng9dS54LHAueT1nLnkpKSk6aT09PTE4MD91Lng8Yy54fHxzPT09MjcwJiZ1Lnk8Yy55JiZtLmxlZnQ8Yy54fHxzPT09OTAmJnUueT5jLnkmJm0ubGVmdDxjLng/KGcucyh1LngsYy55KSxwLnModS54LChjLnkrdS55KS8yKSxzPT09MD8oZy54PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGMueSx1LngsdS55LCExKSxwLng9Zy54LHAueT11LnkpOnM9PT0yNzAmJnUueTxjLnl8fHM9PT05MCYmdS55PmMueT8oYy54Pm0ucmlnaHQ/Zy54PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGMueSxtLnJpZ2h0LHUueSwhMSk6Yy54Pm0ubGVmdCYmKHM9PT0yNzAmJmMueTxtLnRvcHx8cz09PTkwJiZjLnk+bS5ib3R0b20pP2cueD10aGlzLmNvbXB1dGVNaWRPcnRob1Bvc2l0aW9uKGMueCxjLnksdS54LHUueSwhMSk6Zy54PW0ubGVmdCxwLng9Zy54LHAueT11LnkpOnM9PT0xODAmJmMueD5tLnJpZ2h0JiZjLnk+bS50b3AmJmMueTxtLmJvdHRvbSYmKGcueD1jLngsYy55PHUueT9nLnk9TWF0aC5taW4odS55LG0udG9wKTpnLnk9TWF0aC5tYXgodS55LG0uYm90dG9tKSxwLnk9Zy55KSk6KGcucyhjLngsdS55KSxwLnMoKGMueCt1LngpLzIsdS55KSwocz09PTB8fHM9PT05MCYmdS55PGQudG9wfHxzPT09MjcwJiZ1Lnk+ZC5ib3R0b20pJiYocz09PTAmJihtLmNvbnRhaW5zUG9pbnQoYyl8fGQuY29udGFpbnNQb2ludCh1KSk/Zy55PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGMueSx1LngsdS55LCEwKTp1Lnk8Yy55JiYocz09PTB8fHM9PT05MCk/Zy55PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGQudG9wLHUueCxNYXRoLm1heCh1LnksbS5ib3R0b20pLCEwKTp1Lnk+Yy55JiYocz09PTB8fHM9PT0yNzApJiYoZy55PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGQuYm90dG9tLHUueCxNYXRoLm1pbih1LnksbS50b3ApLCEwKSkscC54PXUueCxwLnk9Zy55KSxnLnk+ZC50b3AmJmcueTxkLmJvdHRvbSYmKHUueDw9ZC5yaWdodCYmdS54Pj1jLnh8fGMueD49bS5sZWZ0JiZjLng8PXUueD8ocz09PTkwfHxzPT09MjcwKSYmKGcucyhNYXRoLm1pbigoYy54K3UueCkvMixjLngpLGMueSkscC5zKGcueCx1LnkpKToocz09PTI3MHx8KHM9PT0wfHxzPT09MTgwKSYmdS55PGMueT9nLnk9TWF0aC5taW4odS55LHM9PT0xODA/ZC50b3A6TWF0aC5taW4oZC50b3AsbS50b3ApKTpnLnk9TWF0aC5tYXgodS55LHM9PT0xODA/ZC5ib3R0b206TWF0aC5tYXgoZC5ib3R0b20sbS5ib3R0b20pKSxwLng9dS54LHAueT1nLnkpKSk6aT09PTkwP3UueT5jLnl8fHM9PT0xODAmJnUueDxjLngmJm0uYm90dG9tPmMueXx8cz09PTAmJnUueD5jLngmJm0uYm90dG9tPmMueT8oZy5zKGMueCx1LnkpLHAucygoYy54K3UueCkvMix1LnkpLHM9PT0yNzA/KGcueT10aGlzLmNvbXB1dGVNaWRPcnRob1Bvc2l0aW9uKGMueCxjLnksdS54LHUueSwhMCkscC54PXUueCxwLnk9Zy55KTpzPT09MTgwJiZ1Lng8Yy54fHxzPT09MCYmdS54PmMueD8oYy55PG0udG9wP2cueT10aGlzLmNvbXB1dGVNaWRPcnRob1Bvc2l0aW9uKGMueCxjLnksdS54LG0udG9wLCEwKTpjLnk8bS5ib3R0b20mJihzPT09MTgwJiZjLng8bS5sZWZ0fHxzPT09MCYmYy54Pm0ucmlnaHQpP2cueT10aGlzLmNvbXB1dGVNaWRPcnRob1Bvc2l0aW9uKGMueCxjLnksdS54LHUueSwhMCk6Zy55PW0uYm90dG9tLHAueD11LngscC55PWcueSk6cz09PTkwJiZjLnk8bS50b3AmJmMueD5tLmxlZnQmJmMueDxtLnJpZ2h0JiYoYy54PHUueD9nLng9TWF0aC5taW4odS54LG0ubGVmdCk6Zy54PU1hdGgubWF4KHUueCxtLnJpZ2h0KSxnLnk9Yy55LHAueD1nLngpKTooZy5zKHUueCxjLnkpLHAucyh1LngsKGMueSt1LnkpLzIpLChzPT09MjcwfHxzPT09MCYmdS54PGQubGVmdHx8cz09PTE4MCYmdS54PmQucmlnaHQpJiYocz09PTI3MCYmKG0uY29udGFpbnNQb2ludChjKXx8ZC5jb250YWluc1BvaW50KHUpKT9nLng9dGhpcy5jb21wdXRlTWlkT3J0aG9Qb3NpdGlvbihjLngsYy55LHUueCx1LnksITEpOnUueDxjLngmJihzPT09MjcwfHxzPT09MCk/Zy54PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oZC5sZWZ0LGMueSxNYXRoLm1heCh1LngsbS5yaWdodCksdS55LCExKTp1Lng+Yy54JiYocz09PTI3MHx8cz09PTE4MCkmJihnLng9dGhpcy5jb21wdXRlTWlkT3J0aG9Qb3NpdGlvbihkLnJpZ2h0LGMueSxNYXRoLm1pbih1LngsbS5sZWZ0KSx1LnksITEpKSxwLng9Zy54LHAueT11LnkpLGcueD5kLmxlZnQmJmcueDxkLnJpZ2h0JiYodS55Pj1kLnRvcCYmdS55PD1jLnl8fGMueTw9bS5ib3R0b20mJmMueT49dS55PyhzPT09MHx8cz09PTE4MCkmJihnLnMoYy54LE1hdGgubWF4KChjLnkrdS55KS8yLGMueSkpLHAucyh1LngsZy55KSk6KHM9PT0xODB8fChzPT09OTB8fHM9PT0yNzApJiZ1Lng8Yy54P2cueD1NYXRoLm1pbih1Lngscz09PTkwP2QubGVmdDpNYXRoLm1pbihkLmxlZnQsbS5sZWZ0KSk6Zy54PU1hdGgubWF4KHUueCxzPT09OTA/ZC5yaWdodDpNYXRoLm1heChkLnJpZ2h0LG0ucmlnaHQpKSxwLng9Zy54LHAueT11LnkpKSk6dS55PGMueXx8cz09PTE4MCYmdS54PGMueCYmbS50b3A8Yy55fHxzPT09MCYmdS54PmMueCYmbS50b3A8Yy55PyhnLnMoYy54LHUueSkscC5zKChjLngrdS54KS8yLHUueSkscz09PTkwPyhnLnk9dGhpcy5jb21wdXRlTWlkT3J0aG9Qb3NpdGlvbihjLngsYy55LHUueCx1LnksITApLHAueD11LngscC55PWcueSk6cz09PTE4MCYmdS54PGMueHx8cz09PTAmJnUueD49Yy54PyhjLnk+bS5ib3R0b20/Zy55PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGMueSx1LngsbS5ib3R0b20sITApOmMueT5tLnRvcCYmKHM9PT0xODAmJmMueDxtLmxlZnR8fHM9PT0wJiZjLng+bS5yaWdodCk/Zy55PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGMueSx1LngsdS55LCEwKTpnLnk9bS50b3AscC54PXUueCxwLnk9Zy55KTpzPT09MjcwJiZjLnk+bS5ib3R0b20mJmMueD5tLmxlZnQmJmMueDxtLnJpZ2h0JiYoYy54PHUueD9nLng9TWF0aC5taW4odS54LG0ubGVmdCk6Zy54PU1hdGgubWF4KHUueCxtLnJpZ2h0KSxnLnk9Yy55LHAueD1nLngpKTooZy5zKHUueCxjLnkpLHAucyh1LngsKGMueSt1LnkpLzIpLChzPT09OTB8fHM9PT0wJiZ1Lng8ZC5sZWZ0fHxzPT09MTgwJiZ1Lng+ZC5yaWdodCkmJihzPT09OTAmJihtLmNvbnRhaW5zUG9pbnQoYyl8fGQuY29udGFpbnNQb2ludCh1KSk/Zy54PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oYy54LGMueSx1LngsdS55LCExKTp1Lng8Yy54JiYocz09PTkwfHxzPT09MCk/Zy54PXRoaXMuY29tcHV0ZU1pZE9ydGhvUG9zaXRpb24oZC5sZWZ0LGMueSxNYXRoLm1heCh1LngsbS5yaWdodCksdS55LCExKTp1Lng+Yy54JiYocz09PTkwfHxzPT09MTgwKSYmKGcueD10aGlzLmNvbXB1dGVNaWRPcnRob1Bvc2l0aW9uKGQucmlnaHQsYy55LE1hdGgubWluKHUueCxtLmxlZnQpLHUueSwhMSkpLHAueD1nLngscC55PXUueSksZy54PmQubGVmdCYmZy54PGQucmlnaHQmJih1Lnk8PWQuYm90dG9tJiZ1Lnk+PWMueXx8Yy55Pj1tLnRvcCYmYy55PD11Lnk/KHM9PT0wfHxzPT09MTgwKSYmKGcucyhjLngsTWF0aC5taW4oKGMueSt1LnkpLzIsYy55KSkscC5zKHUueCxnLnkpKToocz09PTE4MHx8KHM9PT05MHx8cz09PTI3MCkmJnUueDxjLng/Zy54PU1hdGgubWluKHUueCxzPT09MjcwP2QubGVmdDpNYXRoLm1pbihkLmxlZnQsbS5sZWZ0KSk6Zy54PU1hdGgubWF4KHUueCxzPT09MjcwP2QucmlnaHQ6TWF0aC5tYXgoZC5yaWdodCxtLnJpZ2h0KSkscC54PWcueCxwLnk9dS55KSkpLHRoaXMuUE49cyE9PWEsdGhpcy5iTj1pLHRoaXMua049cyx0aGlzLmFkZFBvaW50KGcuY29weSgpKSx0aGlzLmFkZFBvaW50KHAuY29weSgpKSxQb2ludC5vKGcpLFBvaW50Lm8ocCl9Y29tcHV0ZU1pZE9ydGhvUG9zaXRpb24odCxpLGUscyxuKXtsZXQgbz0wO3JldHVybiB0aGlzLmhhc0N1cnZpbmVzcygpJiYhdGhpcy5jb21wdXRlU3BvdCghMCx0aGlzLmZyb21Qb3J0KS5pc1NpZGUoKSYmIXRoaXMuY29tcHV0ZVNwb3QoITEsdGhpcy50b1BvcnQpLmlzU2lkZSgpJiYobz10aGlzLmNvbXB1dGVDdXJ2aW5lc3MoKSksbj8oaStzKS8yK286KHQrZSkvMitvfV9BKCl7aWYodGhpcy5kaWFncmFtPT09bnVsbHx8IXRoaXMuaXNBdm9pZGluZ3x8dGhpcy5kaWFncmFtLmFuaW1hdGlvbk1hbmFnZXIuaXNUaWNraW5nKXJldHVybiExO2NvbnN0IHQ9dGhpcy5wb2ludHMuaCxpPXQubGVuZ3RoO2lmKGk8NClyZXR1cm4hMTtjb25zdCBlPXRoaXMuZGlhZ3JhbS5nZXRQb3NpdGlvbnMoITEsdGhpcy5jb250YWluaW5nR3JvdXAsbnVsbCk7Zm9yKGxldCBzPTE7czxpLTI7cysrKXtjb25zdCBuPXRbc10sbz10W3MrMV07aWYoIWUuaXNVbm9jY3VwaWVkKE1hdGgubWluKG4ueCxvLngpLE1hdGgubWluKG4ueSxvLnkpLE1hdGguYWJzKG4ueC1vLngpLE1hdGguYWJzKG4ueS1vLnkpKSlyZXR1cm4hMH1yZXR1cm4hMX1maW5kQ2xvc2VzdFNlZ21lbnQodCl7RGVidWcmJlUuZSh0LFBvaW50LExpbmssXCJmaW5kQ2xvc2VzdFNlZ21lbnQ6cFwiKTtjb25zdCBpPXQueCxlPXQueTtsZXQgcz10aGlzLmdldFBvaW50KDApLG49dGhpcy5nZXRQb2ludCgxKSxvPVBvaW50LmRpc3RhbmNlTGluZVNlZ21lbnRTcXVhcmVkKGksZSxzLngscy55LG4ueCxuLnkpLHI9MDtmb3IobGV0IGw9MTtsPHRoaXMucG9pbnRzQ291bnQtMTtsKyspe3M9dGhpcy5nZXRQb2ludChsKzEpO2NvbnN0IGg9UG9pbnQuZGlzdGFuY2VMaW5lU2VnbWVudFNxdWFyZWQoaSxlLG4ueCxuLnkscy54LHMueSk7bj1zLGg8byYmKHI9bCxvPWgpfXJldHVybiByfXJlKCl7dGhpcy5DaD0hMSx0aGlzLnUoKX1nZXQgQ2goKXtyZXR1cm4odGhpcy5EdCYxMjgpIT09MH1zZXQgQ2godCl7KHRoaXMuRHQmMTI4KSE9PTAhPT10JiYodGhpcy5EdD10aGlzLkR0XjEyOCl9Z2V0IGdlb21ldHJ5KCl7aWYoIXRoaXMuQ2gpe2lmKHRoaXMudXBkYXRlUm91dGUoKSx0aGlzLnBvaW50c0NvdW50PDIpcmV0dXJuIHRoaXMuQ2g9ITAsdGhpcy5mdDt0aGlzLmZ0PXRoaXMubWFrZUdlb21ldHJ5KCl9cmV0dXJuIHRoaXMuZnR9ZmQodCl7aWYoIXQpe2lmKHRoaXMuTGU9PT0hMSlyZXR1cm47Y29uc3Qgbj10aGlzLmZpbmRNYWluRWxlbWVudCgpO2lmKHRoaXMuQ2gmJihuPT09bnVsbHx8bi5nZW9tZXRyeSE9PW51bGwpKXJldHVybn10aGlzLnBvaW50c0NvdW50PDI/dGhpcy5DaD0hMDp0aGlzLmZ0PXRoaXMubWFrZUdlb21ldHJ5KCk7Y29uc3QgaT10aGlzLnBhdGg7aWYoaT09PW51bGwpcmV0dXJuO2kuZnQ9dGhpcy5mdDtjb25zdCBlPXRoaXMuVC5oLHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKyl7Y29uc3Qgbz1lW25dO28hPT1pJiZvLmlzUGFuZWxNYWluJiZvIGluc3RhbmNlb2YgU2hhcGUmJihvLmZ0PXRoaXMuZnQpfX1ETyh0KXtyZXR1cm4gdGhpcy5XYSgpJiZ0LmloLmhhcyh0aGlzKSYmKHRoaXMuVGMud2lkdGghPT0wfHx0aGlzLlRjLmhlaWdodCE9PTApJiYodC5hbmltYXRpb25NYW5hZ2VyLmlzQW5pbWF0aW5nfHx0LmN1cnJlbnRUb29sIT09dC50b29sTWFuYWdlcil9bWFrZUdlb21ldHJ5KCl7Y29uc3QgdD10aGlzLmZ0LGk9dGhpcy5wb2ludHNDb3VudDtsZXQgZT0hMTtjb25zdCBzPXRoaXMuZGlhZ3JhbTtzIT09bnVsbCYmdGhpcy5ETyhzKSYmKGU9ITApO2xldCBuPTAsbz0wLHI9dGhpcy5nZXRQb2ludCgwKS5jb3B5KCk7Y29uc3QgbD1yLmNvcHkoKSxoPXRoaXMuTWkuaCxmPXRoaXMuY29tcHV0ZUN1cnZlKCk7aWYoZj09PTkmJmk+PTMmJiFHZW8uRyh0aGlzLnNtb290aG5lc3MsMCkpaWYoaT09PTMpe2xldCBhPXRoaXMuZ2V0UG9pbnQoMSk7bj1NYXRoLm1pbihyLngsYS54KSxvPU1hdGgubWluKHIueSxhLnkpLGE9dGhpcy5nZXRQb2ludCgyKSxuPU1hdGgubWluKG4sYS54KSxvPU1hdGgubWluKG8sYS55KX1lbHNlIGlmKHRoaXMuaXNPcnRob2dvbmFsKXtmb3IobGV0IGE9MDthPGk7YSsrKXtjb25zdCBjPWhbYV07bC54PU1hdGgubWluKGMueCxsLngpLGwueT1NYXRoLm1pbihjLnksbC55KX1uPWwueCxvPWwueX1lbHNle2ZvcihsZXQgYT0zO2E8aTthKz0zKXthKzM+PWkmJihhPWktMSk7Y29uc3QgYz10aGlzLmdldFBvaW50KGEpO2wueD1NYXRoLm1pbihjLngsbC54KSxsLnk9TWF0aC5taW4oYy55LGwueSl9bj1sLngsbz1sLnl9ZWxzZXtmb3IobGV0IGE9MDthPGk7YSsrKXtjb25zdCBjPWhbYV07bC54PU1hdGgubWluKGMueCxsLngpLGwueT1NYXRoLm1pbihjLnksbC55KX1uPWwueCxvPWwueX1pZihuLT10aGlzLkRiLngsby09dGhpcy5EYi55LHIueC09bixyLnktPW8saT09PTImJiF0aGlzLldhKCkpe2xldCBhPXRoaXMuZ2V0UG9pbnQoMSkuY29weSgpO3JldHVybiBhLngtPW4sYS55LT1vLHRoaXMuY29tcHV0ZVNob3J0TGVuZ3RoKCEwKSE9PTAmJihyPXRoaXMuRmMociwhMCxsKSksdGhpcy5jb21wdXRlU2hvcnRMZW5ndGgoITEpIT09MCYmKGE9dGhpcy5GYyhhLCExLGwpKSx0LnR5cGU9MSx0LnN0YXJ0WD1yLngsdC5zdGFydFk9ci55LHQuZW5kWD1hLngsdC5lbmRZPWEueSx0aGlzLkNoPSEwLHR9ZWxzZXt0LnR5cGU9NDtjb25zdCBhPUdlb1N0cmVhbS5WQyh0KTtpZih0aGlzLmNvbXB1dGVTaG9ydExlbmd0aCghMCkhPT0wJiYocj10aGlzLkZjKHIsITAsbCkpLGEuZ3Uoci54LHIueSwhMSwhMSksZj09PTkmJmk+PTMmJiFHZW8uRyh0aGlzLnNtb290aG5lc3MsMCkpaWYoaT09PTMpe2NvbnN0IGM9dGhpcy5nZXRQb2ludCgxKSx1PWMueC1uLGQ9Yy55LW87bGV0IG09dGhpcy5nZXRQb2ludCgyKS5jb3B5KCk7bS54LT1uLG0ueS09byx0aGlzLmNvbXB1dGVTaG9ydExlbmd0aCghMSkhPT0wJiYobT10aGlzLkZjKG0sITEsbCkpLGEuZ3IodSxkLHUsZCxtLngsbS55KX1lbHNlIGlmKHRoaXMuaXNPcnRob2dvbmFsKXtjb25zdCBjPVBvaW50LksobixvKSx1PVBvaW50LmEoKTt1LmModGhpcy5nZXRQb2ludCgxKSk7Y29uc3QgZD1Qb2ludC5LKG4sbyksbT1Qb2ludC5LKG4sbyk7bGV0IGc9dGhpcy5nZXRQb2ludCgwKSxwPW51bGw7Y29uc3Qgdz10aGlzLnNtb290aG5lc3MvMztmb3IobGV0IFM9MTtTPHRoaXMucG9pbnRzQ291bnQtMTtTKyspe3A9dGhpcy5nZXRQb2ludChTKTtjb25zdCBNPWcsQT1wLEM9dGhpcy5nZXRQb2ludCh0aGlzLkNOKHAsUywhMSkpO0dlby5HKE0ueCxBLngpJiZHZW8uRyhBLngsQy54KXx8R2VvLkcoTS55LEEueSkmJkdlby5HKEEueSxDLnkpfHwodGhpcy5GTyhNLEEsQyx3LGQsbSksKFM9PT0xfHxTPT09MiYmR2VvLkcoZy54LHRoaXMuZ2V0UG9pbnQoMCkueCkmJkdlby5HKGcueSx0aGlzLmdldFBvaW50KDApLnkpKSYmKHUueD0oZy54K3AueCkqLjUsdS55PShnLnkrcC55KSouNSksYS5ncih1Lngtbix1LnktbyxkLngtbixkLnktbyxwLngtbixwLnktbyksYy5zZXQoZCksdS5zZXQobSksZz1wKX1sZXQgeD1nLngsaz1nLnksYj10aGlzLmdldFBvaW50KHRoaXMucG9pbnRzQ291bnQtMSk7dGhpcy5jb21wdXRlU2hvcnRMZW5ndGgoITEpIT09MCYmKGI9dGhpcy5GYyhiLmNvcHkoKSwhMSxQb2ludC5ObykpLHg9LjUqKHgrYi54KSxrPS41KihrK2IueSksYS5ncihtLngtbixtLnktbyx4LW4say1vLGIueC1uLGIueS1vKSxQb2ludC5vKGMpLFBvaW50Lm8odSksUG9pbnQubyhkKSxQb2ludC5vKG0pfWVsc2UgZm9yKGxldCBjPTM7YzxpO2MrPTMpe2NvbnN0IHU9dGhpcy5nZXRQb2ludChjLTIpO2MrMz49aSYmKGM9aS0xKTtjb25zdCBkPXRoaXMuZ2V0UG9pbnQoYy0xKTtsZXQgbT10aGlzLmdldFBvaW50KGMpO2M9PT1pLTEmJnRoaXMuY29tcHV0ZVNob3J0TGVuZ3RoKCExKSE9PTAmJihtPXRoaXMuRmMobS5jb3B5KCksITEsUG9pbnQuTm8pKSxhLmdyKHUueC1uLHUueS1vLGQueC1uLGQueS1vLG0ueC1uLG0ueS1vKX1lbHNle2NvbnN0IGM9UG9pbnQuYSgpO2MuYyh0aGlzLmdldFBvaW50KDApKTtjb25zdCB1PVBvaW50LmEoKTt1LmMoYyk7Y29uc3QgZD10aGlzLmNvbXB1dGVDb3JuZXIoKTtsZXQgbT0xLGc9MDtmb3IoO208aTspe209dGhpcy5DTihjLG0sbT4xKTtsZXQgcD10aGlzLmdldFBvaW50KG0pO2lmKG0+PWktMSl7aWYoIWMuZXF1YWxzKHApKXRoaXMuY29tcHV0ZVNob3J0TGVuZ3RoKCExKSE9PTAmJihwPXRoaXMuRmMocC5jb3B5KCksITEsUG9pbnQuTm8pKSx0aGlzLk5uKGEsLW4sLW8sYyxwLGUpO2Vsc2UgaWYoZz09PTApZm9yKG09MTttPGk7KXUuYyhjKSxwPXRoaXMuZ2V0UG9pbnQobSsrKSx0aGlzLk5uKGEsLW4sLW8sYyxwLGUpLGMuYyhwKTticmVha31nPXRoaXMuQ04ocCxtKzEsbTxpLTMpO2NvbnN0IHc9dGhpcy5nZXRQb2ludChnKTt0aGlzLlJPKGEsLW4sLW8sYyxwLHcsYyx1LGQsZSksdS5jKHApLG09Z31Qb2ludC5vKGMpfXJldHVybiBHZW9TdHJlYW0uekMoYSksdGhpcy5DaD0hMCx0fX1WYih0LGksZSxzKXtsZXQgbj1lLXQ7aWYoaXNOYU4obil8fG49PT0xLzB8fG49PT0tMS8wKXJldHVybiBOYU47bjwwJiYobj0tbik7bGV0IG89cy1pO3JldHVybiBpc05hTihvKXx8bz09PTEvMHx8bz09PS0xLzA/TmFOOihvPDAmJihvPS1vKSxHZW8uRyhuLDApP286R2VvLkcobywwKT9uOk1hdGguc3FydChuKm4rbypvKSl9Rk8odCxpLGUscyxuLG8pe2lzTmFOKHMpJiYocz10aGlzLnNtb290aG5lc3MvMyk7Y29uc3Qgcj10LngsbD10LnksaD1pLngsZj1pLnksYT1lLngsYz1lLnksdT1zKnRoaXMuVmIocixsLGgsZiksZD1zKnRoaXMuVmIoaCxmLGEsYyk7aWYoR2VvLkcobCxmKSYmR2VvLkcoaCxhKSYmKGg+cj9jPmY/KG4ueD1oLXUsbi55PWYtdSxvLng9aCtkLG8ueT1mK2QpOihuLng9aC11LG4ueT1mK3Usby54PWgrZCxvLnk9Zi1kKTpjPmY/KG4ueD1oK3Usbi55PWYtdSxvLng9aC1kLG8ueT1mK2QpOihuLng9aCt1LG4ueT1mK3Usby54PWgtZCxvLnk9Zi1kKSksR2VvLkcocixoKSYmR2VvLkcoZixjKSYmKGY+bD9hPmg/KG4ueD1oLXUsbi55PWYtdSxvLng9aCtkLG8ueT1mK2QpOihuLng9aCt1LG4ueT1mLXUsby54PWgtZCxvLnk9ZitkKTphPmg/KG4ueD1oLXUsbi55PWYrdSxvLng9aCtkLG8ueT1mLWQpOihuLng9aCt1LG4ueT1mK3Usby54PWgtZCxvLnk9Zi1kKSksR2VvLkcocixoKSYmR2VvLkcoaCxhKXx8R2VvLkcobCxmKSYmR2VvLkcoZixjKSl7Y29uc3QgbT0uNSoocithKSxnPS41KihsK2MpO24ueD1tLG4ueT1nLG8ueD1tLG8ueT1nfX1GYyh0LGksZSl7Y29uc3Qgcz10aGlzLnBvaW50c0NvdW50O2lmKHM8MilyZXR1cm4gdDtpZihpKXtjb25zdCBuPXRoaXMuZ2V0UG9pbnQoMSksbz1uLngtZS54LHI9bi55LWUueSxsPXRoaXMuVmIodC54LHQueSxvLHIpO2lmKGw9PT0wKXJldHVybiB0O2NvbnN0IGg9cz09PTI/bCouNTpsO2xldCBmPXRoaXMuY29tcHV0ZVNob3J0TGVuZ3RoKCEwKTtmPmgmJihmPWgpO2NvbnN0IGE9Ziooby10LngpL2wsYz1mKihyLXQueSkvbDt0LngrPWEsdC55Kz1jfWVsc2V7Y29uc3Qgbj10aGlzLmdldFBvaW50KHMtMiksbz1uLngtZS54LHI9bi55LWUueSxsPXRoaXMuVmIodC54LHQueSxvLHIpO2lmKGw9PT0wKXJldHVybiB0O2NvbnN0IGg9cz09PTI/bCouNTpsO2xldCBmPXRoaXMuY29tcHV0ZVNob3J0TGVuZ3RoKCExKTtmPmgmJihmPWgpO2NvbnN0IGE9ZioodC54LW8pL2wsYz1mKih0LnktcikvbDt0LngtPWEsdC55LT1jfXJldHVybiB0fUNOKHQsaSxlKXtjb25zdCBzPXRoaXMucG9pbnRzQ291bnQ7bGV0IG49dDtmb3IoO0dlby5HKHQueCxuLngpJiZHZW8uRyh0Lnksbi55KTspe2lmKGk+PXMpcmV0dXJuIHMtMTtuPXRoaXMuZ2V0UG9pbnQoaSsrKX1pZighR2VvLkcodC54LG4ueCkmJiFHZW8uRyh0Lnksbi55KSlyZXR1cm4gaS0xO2xldCBvPW47Zm9yKDtHZW8uRyh0Lngsbi54KSYmR2VvLkcobi54LG8ueCkmJighZXx8KHQueT49bi55P24ueT49by55Om4ueTw9by55KSl8fEdlby5HKHQueSxuLnkpJiZHZW8uRyhuLnksby55KSYmKCFlfHwodC54Pj1uLng/bi54Pj1vLng6bi54PD1vLngpKTspe2lmKGk+PXMpcmV0dXJuIHMtMTtvPXRoaXMuZ2V0UG9pbnQoaSsrKX1yZXR1cm4gaS0yfVJPKHQsaSxlLHMsbixvLHIsbCxoLGYpe2lmKEdlby5nKHMueSxuLnkpJiZHZW8uZyhuLngsby54KSl7bGV0IGE9TWF0aC5taW4oaCxNYXRoLmFicyhuLngtbC54KS8yKTtjb25zdCBjPU1hdGgubWluKGEsTWF0aC5hYnMoby55LW4ueSkvMik7aWYoYT1jLEdlby5nKGEsMCkpe3RoaXMuTm4odCxpLGUscyxuLGYpLHIuYyhuKTtyZXR1cm59bGV0IHU9bi54O2NvbnN0IGQ9bi55LG09dTtsZXQgZz1kO24ueD5zLng/KHU9bi54LWEsby55Pm4ueT9nPW4ueStjOmc9bi55LWMpOih1PW4ueCthLG8ueT5uLnk/Zz1uLnkrYzpnPW4ueS1jKTtjb25zdCBwPVBvaW50LksodSxkKTt0aGlzLk5uKHQsaSxlLHMscCxmKSxQb2ludC5vKHApLHQuT3cobi54K2ksbi55K2UsbStpLGcrZSksci5zKG0sZyl9ZWxzZSBpZihHZW8uZyhzLngsbi54KSYmR2VvLmcobi55LG8ueSkpe2xldCBhPU1hdGgubWluKGgsTWF0aC5hYnMobi55LWwueSkvMik7Y29uc3QgYz1NYXRoLm1pbihhLE1hdGguYWJzKG8ueC1uLngpLzIpO2lmKGE9YyxHZW8uZyhjLDApKXt0aGlzLk5uKHQsaSxlLHMsbixmKSxyLmMobik7cmV0dXJufWNvbnN0IHU9bi54O2xldCBkPW4ueSxtPXU7Y29uc3QgZz1kO24ueT5zLnk/KGQ9bi55LWEsby54Pm4ueD9tPW4ueCtjOm09bi54LWMpOihkPW4ueSthLG8ueD5uLng/bT1uLngrYzptPW4ueC1jKTtjb25zdCBwPVBvaW50LksodSxkKTt0aGlzLk5uKHQsaSxlLHMscCxmKSxQb2ludC5vKHApLHQuT3cobi54K2ksbi55K2UsbStpLGcrZSksci5zKG0sZyl9ZWxzZSB0aGlzLk5uKHQsaSxlLHMsbixmKSxyLmMobil9Y29tcHV0ZUp1bXBMZW5ndGgoKXtyZXR1cm4gMTB9Tm4odCxpLGUscyxuLG8pe2lmKG98fCF0aGlzLldhKCkpdC5kcihuLngraSxuLnkrZSk7ZWxzZXtjb25zdCByPXRoaXMuY29tcHV0ZUp1bXBMZW5ndGgoKSxsPXIvMixoPVtdO2xldCBmPTA7dGhpcy5pc1Zpc2libGUoKSYmKGY9dGhpcy5JTyhzLG4saCkpO2xldCBhPXMueCxjPXMueTtpZihmPjApe2lmKEdlby5nKHMueSxuLnkpKWlmKHMueDxuLngpe2xldCB1PTA7Zm9yKDt1PGY7KXtjb25zdCBkPU1hdGgubWF4KHMueCxNYXRoLm1pbihoW3UrK10tbCxuLngtcikpO3QuZHIoZCtpLG4ueStlKSxhPWQraSxjPW4ueStlO2xldCBtPU1hdGgubWluKGQrcixuLngpO2Zvcig7dTxmOyl7Y29uc3QgeD1oW3VdO2lmKHg8bStyKXUrKyxtPU1hdGgubWluKHgrbCxuLngpO2Vsc2UgYnJlYWt9Y29uc3QgZz1uLnktcitlLHA9bStpLHc9bi55K2U7dGhpcy5jdXJ2ZT09PTEwP3QuZ3UocCx3LCExLCExKTp0LmdyKGEsZyxwLGcscCx3KSxhPXAsYz13fX1lbHNle2xldCB1PWYtMTtmb3IoO3U+PTA7KXtjb25zdCBkPU1hdGgubWluKHMueCxNYXRoLm1heChoW3UtLV0rbCxuLngrcikpO3QuZHIoZCtpLG4ueStlKSxhPWQraSxjPW4ueStlO2xldCBtPU1hdGgubWF4KGQtcixuLngpO2Zvcig7dT49MDspe2NvbnN0IHg9aFt1XTtpZih4Pm0tcil1LS0sbT1NYXRoLm1heCh4LWwsbi54KTtlbHNlIGJyZWFrfWNvbnN0IGc9bi55LXIrZSxwPW0raSx3PW4ueStlO3RoaXMuY3VydmU9PT0xMD90Lmd1KHAsdywhMSwhMSk6dC5ncihhLGcscCxnLHAsdyksYT1wLGM9d319ZWxzZSBpZihHZW8uZyhzLngsbi54KSlpZihzLnk8bi55KXtsZXQgdT0wO2Zvcig7dTxmOyl7Y29uc3QgZD1NYXRoLm1heChzLnksTWF0aC5taW4oaFt1KytdLWwsbi55LXIpKTt0LmRyKG4ueCtpLGQrZSksYT1uLngraSxjPWQrZTtsZXQgbT1NYXRoLm1pbihkK3Isbi55KTtmb3IoO3U8Zjspe2NvbnN0IHg9aFt1XTtpZih4PG0rcil1KyssbT1NYXRoLm1pbih4K2wsbi55KTtlbHNlIGJyZWFrfWNvbnN0IGc9bi54LXIraSxwPW4ueCtpLHc9bStlO3RoaXMuY3VydmU9PT0xMD90Lmd1KHAsdywhMSwhMSk6dC5ncihnLGMsZyx3LHAsdyksYT1wLGM9d319ZWxzZXtsZXQgdT1mLTE7Zm9yKDt1Pj0wOyl7Y29uc3QgZD1NYXRoLm1pbihzLnksTWF0aC5tYXgoaFt1LS1dK2wsbi55K3IpKTt0LmRyKG4ueCtpLGQrZSksYT1uLngraSxjPWQrZTtsZXQgbT1NYXRoLm1heChkLXIsbi55KTtmb3IoO3U+PTA7KXtjb25zdCB4PWhbdV07aWYoeD5tLXIpdS0tLG09TWF0aC5tYXgoeC1sLG4ueSk7ZWxzZSBicmVha31jb25zdCBnPW4ueC1yK2kscD1uLngraSx3PW0rZTt0aGlzLmN1cnZlPT09MTA/dC5ndShwLHcsITEsITEpOnQuZ3IoZyxjLGcsdyxwLHcpLGE9cCxjPXd9fX10LmRyKG4ueCtpLG4ueStlKX19SU8odCxpLGUpe2NvbnN0IHM9dGhpcy5kaWFncmFtO2lmKHM9PT1udWxsfHx0LmVxdWFscyhpKSlyZXR1cm4gMDtjb25zdCBuPXMubGF5ZXJzO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7aWYobyE9PW51bGwmJm8udmlzaWJsZSl7Y29uc3Qgcj1vLnQyKCksbD1yLmxlbmd0aDtmb3IobGV0IGg9MDtoPGw7aCsrKXtjb25zdCBmPXJbaF07aWYoIShmIGluc3RhbmNlb2YgTGluaykpY29udGludWU7aWYoZj09PXRoaXMpcmV0dXJuIGUubGVuZ3RoPjAmJmUuc29ydCgodSxkKT0+dS1kKSxlLmxlbmd0aDtpZighZi5pc1Zpc2libGUoKXx8IWYuV2EoKSljb250aW51ZTtjb25zdCBhPWYucm91dGVCb3VuZHM7aWYoIWEuaXNSZWFsKCl8fCF0aGlzLnJvdXRlQm91bmRzLmludGVyc2VjdHNSZWN0KGEpfHx0aGlzLnVzZXNTYW1lUG9ydChmKSljb250aW51ZTtjb25zdCBjPWYucGF0aDtjIT09bnVsbCYmYy5pc1Zpc2libGVPYmplY3QoKSYmdGhpcy5PTyh0LGksZSxmKX19fXJldHVybiBlLmxlbmd0aD4wJiZlLnNvcnQoKG8scik9Pm8tciksZS5sZW5ndGh9T08odCxpLGUscyl7Y29uc3Qgbj1HZW8uZyh0LnksaS55KSxvPXMucG9pbnRzQ291bnQ7bGV0IHI9cy5nZXRQb2ludCgwKTtjb25zdCBsPVBvaW50LmEoKTtmb3IobGV0IGg9MTtoPG87aCsrKXtjb25zdCBmPXMuZ2V0UG9pbnQoaCk7aWYoaDxvLTEpe2NvbnN0IGE9cy5nZXRQb2ludChoKzEpO2lmKHIueT09PWYueSYmZi55PT09YS55KXtpZihmLng+ci54JiZhLng+PWYueHx8Zi54PHIueCYmYS54PD1mLngpY29udGludWV9ZWxzZSBpZihyLng9PT1mLngmJmYueD09PWEueCYmKGYueT5yLnkmJmEueT49Zi55fHxmLnk8ci55JiZhLnk8PWYueSkpY29udGludWV9dGhpcy5FTyh0LGkscixmLGwpJiYobj9lLnB1c2gobC54KTplLnB1c2gobC55KSkscj1mfVBvaW50Lm8obCl9RU8odCxpLGUscyxuKXtjb25zdCBvPXQueCxyPXQueSxsPWkueCxoPWkueSxmPWUueCxhPWUueSxjPXMueCx1PXMueTtpZihHZW8uZyhvLGwpKXtpZighR2VvLmcocixoKSYmR2VvLmcoYSx1KSYmTWF0aC5taW4ocixoKTxhJiZNYXRoLm1heChyLGgpPmEmJk1hdGgubWluKGYsYyk8byYmTWF0aC5tYXgoZixjKT5vJiYhR2VvLmcoZixjKSlyZXR1cm4gbi54PW8sbi55PWEsITB9ZWxzZSBpZihHZW8uZyhyLGgpJiZHZW8uZyhmLGMpJiZNYXRoLm1pbihvLGwpPGYmJk1hdGgubWF4KG8sbCk+ZiYmTWF0aC5taW4oYSx1KTxyJiZNYXRoLm1heChhLHUpPnImJiFHZW8uZyhhLHUpKXJldHVybiBuLng9ZixuLnk9ciwhMDtyZXR1cm4gbi54PTAsbi55PTAsITF9Z2V0IGZpcnN0UGlja0luZGV4KCl7cmV0dXJuIHRoaXMucG9pbnRzQ291bnQ8PTI/MDp0aGlzLmlzT3J0aG9nb25hbHx8IXRoaXMuVmQodGhpcy5jb21wdXRlU3BvdCghMCkpPzE6MH1nZXQgbGFzdFBpY2tJbmRleCgpe2NvbnN0IHQ9dGhpcy5wb2ludHNDb3VudDtyZXR1cm4gdD09PTA/MDp0PD0yP3QtMTp0aGlzLmlzT3J0aG9nb25hbHx8IXRoaXMuVmQodGhpcy5jb21wdXRlU3BvdCghMSkpP3QtMjp0LTF9V2EoKXtjb25zdCB0PXRoaXMuY3VydmU7cmV0dXJuIHQ9PT0xMXx8dD09PTEwfUliKHQpe2lmKHR8fHRoaXMuV2EoKSl7Y29uc3QgaT10aGlzLmRpYWdyYW07aSE9PW51bGwmJiFpLmFuaW1hdGlvbk1hbmFnZXIuaXNUaWNraW5nJiYhaS5paC5oYXModGhpcykmJih0aGlzLlRjLndpZHRoIT09MHx8dGhpcy5UYy5oZWlnaHQhPT0wKSYmaS5paC5zZXQodGhpcyx0aGlzLlRjLmNvcHkoKSl9fWludmFsaWRhdGVPdGhlckp1bXBPdmVycyh0KXtjb25zdCBpPXRoaXMubGF5ZXI7aWYoaT09PW51bGx8fCFpLnZpc2libGV8fGkuaXNUZW1wb3JhcnkpcmV0dXJuO2NvbnN0IGU9aS5kaWFncmFtO2lmKGU9PT1udWxsfHxlLmFuaW1hdGlvbk1hbmFnZXIuaXNUaWNraW5nKXJldHVybjtsZXQgcz0hMTtjb25zdCBuPWUubGF5ZXJzO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7aWYoby52aXNpYmxlKXtpZihvPT09aSl7cz0hMDtsZXQgcj0hMTtjb25zdCBsPW8udDIoKSxoPWwubGVuZ3RoO2ZvcihsZXQgZj0wO2Y8aDtmKyspe2NvbnN0IGE9bFtmXTthIGluc3RhbmNlb2YgTGluayYmKGE9PT10aGlzP3I9ITA6ciYmdGhpcy5GVChhLHQpKX19ZWxzZSBpZihzKXtjb25zdCByPW8udDIoKSxsPXIubGVuZ3RoO2ZvcihsZXQgaD0wO2g8bDtoKyspe2NvbnN0IGY9cltoXTtmIGluc3RhbmNlb2YgTGluayYmdGhpcy5GVChmLHQpfX19fX1GVCh0LGkpe2lmKHQ9PT1udWxsfHwhdC5DaHx8IXQuTGV8fCF0LldhKCkpcmV0dXJuO2NvbnN0IGU9dC5yb3V0ZUJvdW5kcztlLmlzUmVhbCgpJiYoIXRoaXMucm91dGVCb3VuZHMuaW50ZXJzZWN0c1JlY3QoZSkmJiFpLmludGVyc2VjdHNSZWN0KGUpfHx0aGlzLnVzZXNTYW1lUG9ydCh0KXx8dC5yZSgpKX11c2VzU2FtZVBvcnQodCl7Y29uc3QgaT10aGlzLnBvaW50c0NvdW50LGU9dC5wb2ludHNDb3VudDtpZihpPjAmJmU+MCl7Y29uc3Qgcz10aGlzLmdldFBvaW50KDApLG49dC5nZXRQb2ludCgwKTtpZihzLmVxdWFsc0FwcHJveChuKSlyZXR1cm4hMDtjb25zdCBvPXRoaXMuZ2V0UG9pbnQoaS0xKSxyPXQuZ2V0UG9pbnQoZS0xKTtpZihvLmVxdWFsc0FwcHJveChyKXx8cy5lcXVhbHNBcHByb3gocil8fG8uZXF1YWxzQXBwcm94KG4pKXJldHVybiEwfWVsc2UgaWYodGhpcy5mcm9tTm9kZT09PXQuZnJvbU5vZGV8fHRoaXMudG9Ob2RlPT09dC50b05vZGV8fHRoaXMuZnJvbU5vZGU9PT10LnRvTm9kZXx8dGhpcy50b05vZGU9PT10LmZyb21Ob2RlKXJldHVybiEwO3JldHVybiExfWlzVmlzaWJsZSgpe2lmKCFzdXBlci5pc1Zpc2libGUoKSlyZXR1cm4hMTtjb25zdCB0PXRoaXMuY29udGFpbmluZ0dyb3VwO2xldCBpPSEwO2NvbnN0IGU9dGhpcy5kaWFncmFtO2UhPT1udWxsJiYoaT1lLmlzVHJlZVBhdGhUb0NoaWxkcmVuKTtjb25zdCBzPXRoaXMuZnJvbU5vZGU7aWYocyE9PW51bGwpe2lmKHRoaXMuaXNUcmVlTGluayYmaSYmIXMuaXNUcmVlRXhwYW5kZWQpcmV0dXJuITE7aWYocz09PXQpcmV0dXJuITA7bGV0IG89cztmb3IoO28hPT1udWxsOyl7aWYoby5sYWJlbGVkTGluaz09PXRoaXMpcmV0dXJuITA7bz1vLmNvbnRhaW5pbmdHcm91cH1jb25zdCByPXMuZmluZFZpc2libGVOb2RlKCk7aWYocj09PW51bGx8fHI9PT10KXJldHVybiExfWNvbnN0IG49dGhpcy50b05vZGU7aWYobiE9PW51bGwpe2lmKHRoaXMuaXNUcmVlTGluayYmIWkmJiFuLmlzVHJlZUV4cGFuZGVkKXJldHVybiExO2lmKG49PT10KXJldHVybiEwO2xldCBvPW47Zm9yKDtvIT09bnVsbDspe2lmKG8ubGFiZWxlZExpbms9PT10aGlzKXJldHVybiEwO289by5jb250YWluaW5nR3JvdXB9Y29uc3Qgcj1uLmZpbmRWaXNpYmxlTm9kZSgpO2lmKHI9PT1udWxsfHxyPT09dClyZXR1cm4hMX1yZXR1cm4hMH1LaSh0KXtpZihzdXBlci5LaSh0KSx0JiZ0aGlzLkliKCExKSx0aGlzLlpvIT09bnVsbCYmdGhpcy5aby5EZCgpLHRoaXMuJHMhPT1udWxsKXtjb25zdCBlPXRoaXMuJHMuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspZS52YWx1ZS5LaSh0KX19Z2V0IGFkanVzdGluZygpe3JldHVybiB0aGlzLkxjfXNldCBhZGp1c3RpbmcodCl7Y29uc3QgaT10aGlzLkxjO2khPT10JiYoRGVidWcmJnQhPT0wJiZ0IT09MTcmJnQhPT0xOCYmdCE9PTE5JiZVLm4oXCJMaW5rLmFkanVzdGluZyBjYW4gb25seSBiZSBzZXQgdG8gTm9uZSwgRW5kLCBTY2FsZSwgb3IgU3RyZXRjaCwgbm90OiBcIit0KSx0aGlzLkxjPXQsdGhpcy50KFwiYWRqdXN0aW5nXCIsaSx0KSl9Y29tcHV0ZUFkanVzdGluZygpe3JldHVybiB0aGlzLmlzQXZvaWRpbmcmJnRoaXMuZGlhZ3JhbSE9PW51bGwmJnRoaXMuZGlhZ3JhbS5hbmltYXRpb25NYW5hZ2VyLmRlZmF1bHRBbmltYXRpb24uaXNBbmltYXRpbmc/MTc6dGhpcy5MY31nZXQgY29ybmVyKCl7cmV0dXJuIHRoaXMuSWR9c2V0IGNvcm5lcih0KXtjb25zdCBpPXRoaXMuSWQ7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJudW1iZXJcIixMaW5rLFwiY29ybmVyXCIpLHRoaXMuSWQ9dCx0aGlzLnJlKCksdGhpcy50KFwiY29ybmVyXCIsaSx0KSl9Z2V0IGN1cnZlKCl7cmV0dXJuIHRoaXMuT2R9c2V0IGN1cnZlKHQpe2NvbnN0IGk9dGhpcy5PZDtpIT09dCYmKERlYnVnJiZ0IT09MCYmdCE9PTkmJnQhPT0xMCYmdCE9PTExJiZVLm4oXCJMaW5rLmN1cnZlIGNhbiBvbmx5IGJlIHNldCB0byBOb25lLCBCZXppZXIsIEp1bXBHYXAsIG9yIEp1bXBPdmVyLCBub3Q6IFwiK3QpLHRoaXMuT2Q9dCx0aGlzLmludmFsaWRhdGVSb3V0ZSgpLHRoaXMucmUoKSx0aGlzLkliKGk9PT0xMHx8aT09PTExfHx0PT09MTB8fHQ9PT0xMSksdGhpcy50KFwiY3VydmVcIixpLHQpKX1nZXQgY3VydmluZXNzKCl7cmV0dXJuIHRoaXMuRWR9c2V0IGN1cnZpbmVzcyh0KXtjb25zdCBpPXRoaXMuRWQ7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJudW1iZXJcIixMaW5rLFwiY3VydmluZXNzXCIpLHRoaXMuRWQ9dCx0aGlzLmludmFsaWRhdGVSb3V0ZSgpLHRoaXMucmUoKSx0aGlzLnQoXCJjdXJ2aW5lc3NcIixpLHQpKX1nZXQgcm91dGluZygpe3JldHVybiB0aGlzLkthfXNldCByb3V0aW5nKHQpe2NvbnN0IGk9dGhpcy5LYTtpIT09dCYmKERlYnVnJiZ0IT09MSYmdCE9PTImJnQhPT02JiZ0IT09NyYmVS5uKFwiTGluay5yb3V0aW5nIGNhbiBvbmx5IGJlIHNldCB0byBOb3JtYWwsIE9ydGhvZ29uYWwsIEF2b2lkc05vZGVzLCBub3Q6IFwiK3QpLHRoaXMuS2E9dCx0aGlzLmlzQXZvaWRpbmcmJnRoaXMuZGlhZ3JhbSE9PW51bGwmJih0aGlzLmRpYWdyYW0ucW09ITApLHRoaXMuJG89bnVsbCx0aGlzLmludmFsaWRhdGVSb3V0ZSgpLHRoaXMuSWIoTGluay5TTihpKXx8TGluay5TTih0KSksdGhpcy50KFwicm91dGluZ1wiLGksdCkpfWdldCBzbW9vdGhuZXNzKCl7cmV0dXJuIHRoaXMuQmR9c2V0IHNtb290aG5lc3ModCl7Y29uc3QgaT10aGlzLkJkO2khPT10JiYoRGVidWcmJlUuaSh0LFwibnVtYmVyXCIsTGluayxcInNtb290aG5lc3NcIiksdGhpcy5CZD10LHRoaXMucmUoKSx0aGlzLnQoXCJzbW9vdGhuZXNzXCIsaSx0KSl9UHkoKXtjb25zdCB0PXRoaXMuaG87aWYodD09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5mbztpZihpPT09bnVsbHx8IWlzTmFOKHRoaXMuY3VydmluZXNzKSlyZXR1cm47Y29uc3QgZT10aGlzLmFvLHM9dGhpcy5jbztsZXQgbj1udWxsLG89bnVsbDtjb25zdCByPXQub2kuaCxsPXIubGVuZ3RoO2ZvcihsZXQgaD0wO2g8bDtoKyspe2NvbnN0IGY9cltoXTshKGYuaG89PT10JiZmLmFvPT09ZSYmZi5mbz09PWkmJmYuY289PT1zKSYmIShmLmhvPT09aSYmZi5hbz09PXMmJmYuZm89PT10JiZmLmNvPT09ZSl8fChvPT09bnVsbD9vPWY6KG49PT1udWxsJiYobj1bXSxuLnB1c2gobykpLG4ucHVzaChmKSkpfWlmKG4hPT1udWxsKXtsZXQgaD10LlNUKGksZSxzKTtoPT09bnVsbCYmKGg9bmV3IExpbmtCdW5kbGUodCxlLGkscyksdC5iVChoKSxpLmJUKGgpKSxoLlpzPW47Zm9yKGxldCBmPTA7ZjxuLmxlbmd0aDtmKyspe2NvbnN0IGE9bltmXTthLlpvPWh9aC5EZCgpfX1NeSgpe2NvbnN0IHQ9dGhpcy5abztpZih0IT09bnVsbCl7aWYoIWlzTmFOKHRoaXMuY3VydmluZXNzKSlyZXR1cm47dGhpcy5abz1udWxsO2NvbnN0IGk9dC5acy5pbmRleE9mKHRoaXMpO2k+PTAmJih0LlpzLnNwbGljZShpLDEpLHQuRGQoKSl9fUZsKCl7cmV0dXJuITB9Z2V0IGtleSgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKCEodD09PW51bGx8fCF0Lm1vZGVsLllhKCkpKXJldHVybiB0Lm1vZGVsLmdldEtleUZvckxpbmtEYXRhKHRoaXMuZGF0YSl9fWNsYXNzIExpbmtCdW5kbGV7Vm87WXM7dXk7Z047QWI7bU47WnM7Y29uc3RydWN0b3IodCxpLGUscyl7R1NldC5KaSh0aGlzKSx0aGlzLlZvPSExLHRoaXMuWXM9ITEsdGhpcy51eT10LHRoaXMuZ049aSx0aGlzLkFiPWUsdGhpcy5tTj1zLHRoaXMuWnM9W119RGQoKXtpZighdGhpcy5Wbyl7Y29uc3QgdD10aGlzLlpzO2lmKHQubGVuZ3RoPjApe2NvbnN0IGk9dFswXS5kaWFncmFtO2khPT1udWxsJiYoaS5UMi5hZGQodGhpcyksdGhpcy5Zcz1pLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpfX10aGlzLlZvPSEwfUcyKCl7aWYodGhpcy5Wbyl7dGhpcy5Wbz0hMTtjb25zdCB0PXRoaXMuWnM7aWYodC5sZW5ndGg+MCl7Y29uc3QgaT10WzBdLGU9aS5kaWFncmFtLHM9ZT09PW51bGx8fGUucWgmJiF0aGlzLllzO3RoaXMuWXM9ITEsaS5hcnJhbmdlQnVuZGxlZExpbmtzKHQscyksdC5sZW5ndGg9PT0xJiYoaS5abz1udWxsLHQubGVuZ3RoPTApfXQubGVuZ3RoPT09MCYmKHRoaXMudXkua1QodGhpcyksdGhpcy5BYi5rVCh0aGlzKSl9fX1jbGFzcyBQb3NpdGlvbkFycmF5e2FlO2ZlO2phO3ZhO3lpO3dpO0h0O0FoO0xoO3dhO2VQO1ZvO0N5O1pmO3NQO25QO2NvbnN0cnVjdG9yKHQpe0dTZXQuSmkodGhpcyksdGhpcy53YT1udWxsLHRoaXMuZVA9bnVsbCx0aGlzLlZvPSEwLHRoaXMuQ3k9ITEsdGhpcy5hZT0xLHRoaXMuZmU9MSx0aGlzLmphPS0xLHRoaXMudmE9LTEsdGhpcy55aT10LndpZHRoLHRoaXMud2k9dC5oZWlnaHQsdGhpcy5IdD1bXSx0aGlzLkFoPTAsdGhpcy5MaD0wLHRoaXMuWmY9MTEsdGhpcy5zUD10aGlzLlpmKjIsdGhpcy5uUD10aGlzLlpmKjJ9c3RhdGljIFFzPTA7c3RhdGljIEphPTE7c3RhdGljIFhkPTk5OTk5OTtzdGF0aWMgQU49UG9zaXRpb25BcnJheS5YZCsxO3N0YXRpYyBMTj1Qb3NpdGlvbkFycmF5LlhkKzI7WDEodCl7aWYodC53aWR0aDw9MHx8dC5oZWlnaHQ8PTApcmV0dXJuO2NvbnN0IGk9dC54LGU9dC55LHM9dC54K3Qud2lkdGgsbj10LnkrdC5oZWlnaHQ7dGhpcy5hZT1NYXRoLmZsb29yKChpLXRoaXMueWkpL3RoaXMueWkpKnRoaXMueWksdGhpcy5mZT1NYXRoLmZsb29yKChlLXRoaXMud2kpL3RoaXMud2kpKnRoaXMud2ksdGhpcy5qYT1NYXRoLmNlaWwoKHMrMip0aGlzLnlpKS90aGlzLnlpKSp0aGlzLnlpLHRoaXMudmE9TWF0aC5jZWlsKChuKzIqdGhpcy53aSkvdGhpcy53aSkqdGhpcy53aTtjb25zdCBvPTErKE1hdGguY2VpbCgodGhpcy5qYS10aGlzLmFlKS90aGlzLnlpKXwwKSxyPTErKE1hdGguY2VpbCgodGhpcy52YS10aGlzLmZlKS90aGlzLndpKXwwKTtpZih0aGlzLkh0Lmxlbmd0aD09PTB8fHRoaXMuQWg8by0xfHx0aGlzLkxoPHItMSl7Y29uc3QgbD1bXTtmb3IobGV0IGg9MDtoPD1vO2grKylsW2hdPW5ldyBVaW50MzJBcnJheShyKTt0aGlzLkh0PWwsdGhpcy5BaD1vLTEsdGhpcy5MaD1yLTF9dGhpcy5CTyhQb3NpdGlvbkFycmF5LkFOKX1nZXQgYm91bmRzKCl7cmV0dXJuIG5ldyBSZWN0KHRoaXMuYWUsdGhpcy5mZSx0aGlzLmphLXRoaXMuYWUsdGhpcy52YS10aGlzLmZlKX1nZXQgY2VsbFdpZHRoKCl7cmV0dXJuIHRoaXMueWl9c2V0IGNlbGxXaWR0aCh0KXt0PjAmJnQhPT10aGlzLnlpJiYodGhpcy55aT10LHRoaXMuWDEodGhpcy5ib3VuZHMpKX1nZXQgY2VsbEhlaWdodCgpe3JldHVybiB0aGlzLndpfXNldCBjZWxsSGVpZ2h0KHQpe3Q+MCYmdCE9PXRoaXMud2kmJih0aGlzLndpPXQsdGhpcy5YMSh0aGlzLmJvdW5kcykpfVlkKHQsaSl7cmV0dXJuIHRoaXMuYWU8PXQmJnQ8PXRoaXMuamEmJnRoaXMuZmU8PWkmJmk8PXRoaXMudmF9dW8odCxpKXtpZighdGhpcy5ZZCh0LGkpKXJldHVybiBQb3NpdGlvbkFycmF5LkFOO3QtPXRoaXMuYWUsdC89dGhpcy55aSxpLT10aGlzLmZlLGkvPXRoaXMud2k7Y29uc3QgZT10fDAscz1pfDA7cmV0dXJuIHRoaXMuSHRbZV1bc119V1IodCxpLGUscyl7aWYoIXRoaXMuWWQodCxpKSlyZXR1cm47Y29uc3Qgbj0odC10aGlzLmFlKS90aGlzLnlpfDAsbz0oaS10aGlzLmZlKS90aGlzLndpfDAscj0odCtlLXRoaXMuYWUpL3RoaXMueWl8MCxsPShpK3MtdGhpcy5mZSkvdGhpcy53aXwwLGg9TWF0aC5taW4ocix0aGlzLkFoKSxmPU1hdGgubWluKGwsdGhpcy5MaCk7Zm9yKGxldCBhPW47YTw9aDthKyspe2NvbnN0IGM9dGhpcy5IdFthXTtpZihjLmZpbGwpYy5maWxsKFBvc2l0aW9uQXJyYXkuUXMsbyxmKzEpO2Vsc2UgZm9yKGxldCB1PW87dTw9Zjt1KyspY1t1XT1Qb3NpdGlvbkFycmF5LlFzfX1CTyh0KXtmb3IobGV0IGk9MDtpPD10aGlzLkFoO2krKyl7Y29uc3QgZT10aGlzLkh0W2ldO2lmKGUuZmlsbCllLmZpbGwodCk7ZWxzZSBmb3IobGV0IHM9MDtzPD10aGlzLkxoO3MrKyllW3NdPXR9fWNMKCl7Zm9yKGxldCB0PTA7dDw9dGhpcy5BaDt0Kyspe2NvbnN0IGk9dGhpcy5IdFt0XTtmb3IobGV0IGU9MDtlPD10aGlzLkxoO2UrKylpW2VdPj1Qb3NpdGlvbkFycmF5LkphJiYoaVtlXT1Qb3NpdGlvbkFycmF5LkFOKX19Vk8odCxpKXtyZXR1cm4gdGhpcy51byh0LGkpPT09UG9zaXRpb25BcnJheS5Rc31pc1Vub2NjdXBpZWQodCxpLGUscyl7aWYodD50aGlzLmphfHx0K2U8dGhpcy5hZXx8aT50aGlzLnZhfHxpK3M8dGhpcy5mZSlyZXR1cm4hMDtsZXQgbj0odC10aGlzLmFlKS90aGlzLnlpfDAsbz0oaS10aGlzLmZlKS90aGlzLndpfDAscj1NYXRoLm1heCgwLGUpL3RoaXMueWkrMXwwLGw9TWF0aC5tYXgoMCxzKS90aGlzLndpKzF8MDtpZihuPDAmJihyKz1uLG49MCksbzwwJiYobCs9byxvPTApLHI8MHx8bDwwKXJldHVybiEwO2NvbnN0IGg9TWF0aC5taW4obityLTEsdGhpcy5BaCl8MCxmPU1hdGgubWluKG8rbC0xLHRoaXMuTGgpfDA7Zm9yKGxldCBhPW47YTw9aDthKyspe2NvbnN0IGM9dGhpcy5IdFthXTtmb3IobGV0IHU9bzt1PD1mO3UrKylpZihjW3VdPT09UG9zaXRpb25BcnJheS5RcylyZXR1cm4hMX1yZXR1cm4hMH1tYXhBdm9pZHNMaW5rc1NwYWNlSCh0LGksZSxzKXtpZih0PnRoaXMuamF8fGk8dGhpcy5hZXx8ZT50aGlzLnZhfHxlPHRoaXMuZmUpcmV0dXJuIDA7Y29uc3Qgbj0odC10aGlzLmFlKS90aGlzLnlpfDAsbz0oaS10aGlzLmFlKS90aGlzLnlpfDAscj0oZS10aGlzLmZlKS90aGlzLndpfDAsbD1zL3RoaXMud2krMXwwO2xldCBoO2ZvcihoPTA7aDxsLzI7aCsrKXtsZXQgZj0hMTtmb3IobGV0IGE9bjthPD1vO2ErKylpZih0aGlzLkh0W2FdW3IraF09PT1Qb3NpdGlvbkFycmF5LlFzfHx0aGlzLkh0W2FdW3ItaF09PT1Qb3NpdGlvbkFycmF5LlFzKXtmPSEwO2JyZWFrfWlmKGYpcmV0dXJuIE1hdGgubWF4KDAsKDIqaC0xKSp0aGlzLndpKX1yZXR1cm4gc31tYXhBdm9pZHNMaW5rc1NwYWNlVih0LGksZSxzKXtpZih0PnRoaXMudmF8fGk8dGhpcy5mZXx8ZT50aGlzLmphfHxlPHRoaXMuYWUpcmV0dXJuIDA7Y29uc3Qgbj0odC10aGlzLmZlKS90aGlzLndpfDAsbz0oaS10aGlzLmZlKS90aGlzLndpfDAscj0oZS10aGlzLmFlKS90aGlzLnlpfDAsbD1zL3RoaXMueWkrMXwwO2xldCBoO2ZvcihoPTA7aDxsLzI7aCsrKXtsZXQgZj0hMTtmb3IobGV0IGE9bjthPD1vO2ErKylpZih0aGlzLkh0W3IraF1bYV09PT1Qb3NpdGlvbkFycmF5LlFzfHx0aGlzLkh0W3ItaF1bYV09PT1Qb3NpdGlvbkFycmF5LlFzKXtmPSEwO2JyZWFrfWlmKGYpcmV0dXJuIE1hdGgubWF4KDAsKDIqaC0xKSp0aGlzLnlpKX1yZXR1cm4gc316Tyh0LGksZSxzLG4sbyxyLGwpe3Q9dHwwLGk9aXwwO2xldCBoPXRoaXMuSHRbdF1baV07aWYoaD49UG9zaXRpb25BcnJheS5KYSYmaDxQb3NpdGlvbkFycmF5LlhkKWZvcihzP2krPWU6dCs9ZSxoKz0xO248PXQmJnQ8PW8mJnI8PWkmJmk8PWw7KXtjb25zdCBmPXRoaXMuSHRbdF1baV07aWYoaD49ZilicmVhazt0aGlzLkh0W3RdW2ldPWgsaCs9MSxzP2krPWU6dCs9ZX1yZXR1cm4gcz9pOnR9Z28odCxpLGUscyxuLG8scixsKXtpZih0PG58fHQ+b3x8aTxyfHxpPmwpcmV0dXJuO2NvbnN0IGg9dGhpcy56Tyh0LGksZSxzLG4sbyxyLGwpO2lmKHMpaWYoZT4wKWZvcihsZXQgZj1pK2U7ZjxoO2YrPWUpdGhpcy5nbyh0LGYsMSwhcyxuLG8scixsKSx0aGlzLmdvKHQsZiwtMSwhcyxuLG8scixsKTtlbHNlIGZvcihsZXQgZj1pK2U7Zj5oO2YrPWUpdGhpcy5nbyh0LGYsMSwhcyxuLG8scixsKSx0aGlzLmdvKHQsZiwtMSwhcyxuLG8scixsKTtlbHNlIGlmKGU+MClmb3IobGV0IGY9dCtlO2Y8aDtmKz1lKXRoaXMuZ28oZixpLDEsIXMsbixvLHIsbCksdGhpcy5nbyhmLGksLTEsIXMsbixvLHIsbCk7ZWxzZSBmb3IobGV0IGY9dCtlO2Y+aDtmKz1lKXRoaXMuZ28oZixpLDEsIXMsbixvLHIsbCksdGhpcy5nbyhmLGksLTEsIXMsbixvLHIsbCl9emIodCxpLGUscyxuLG8scixsLGgsZil7bGV0IGE9dHwwLGM9aXwwLHU9UG9zaXRpb25BcnJheS5RcyxkPVBvc2l0aW9uQXJyYXkuSmE7Zm9yKHRoaXMuSHRbYV1bY109ZDt1PT09UG9zaXRpb25BcnJheS5RcyYmYT5yJiZhPGwmJmM+aCYmYzxmOylkKz0xLHRoaXMuSHRbYV1bY109ZCxvP2MrPW46YSs9bix1PXRoaXMuSHRbYV1bY107cmV0dXJuIG8/YzphfVhiKHQsaSxlLHMsbixvLHIsbCxoLGYpe2xldCBhPWV8MCxjPXN8MCx1PVBvc2l0aW9uQXJyYXkuUXM7Y29uc3QgZD1Qb3NpdGlvbkFycmF5LlhkO2Zvcih0aGlzLkh0W2FdW2NdPWQ7dT09PVBvc2l0aW9uQXJyYXkuUXMmJmE+ciYmYTxsJiZjPmgmJmM8ZjspdGhpcy5IdFthXVtjXT1kLG8/Yys9bjphKz1uLHU9dGhpcy5IdFthXVtjXX1SVCh0LGksZSxzLG4sbyl7dGhpcy5DeT0hMTtsZXQgcj10LngsbD10Lnk7aWYoIXRoaXMuWWQocixsKSlyZXR1cm47ci09dGhpcy5hZSxyLz10aGlzLnlpLGwtPXRoaXMuZmUsbC89dGhpcy53aTtsZXQgaD1lLngsZj1lLnk7aWYoIXRoaXMuWWQoaCxmKSlyZXR1cm47aWYoaC09dGhpcy5hZSxoLz10aGlzLnlpLGYtPXRoaXMuZmUsZi89dGhpcy53aSxNYXRoLmFicyhyLWgpPD0xJiZNYXRoLmFicyhsLWYpPD0xKXt0aGlzLkN5PSEwO3JldHVybn1sZXQgYT1uLngsYz1uLnksdT1uLngrbi53aWR0aCxkPW4ueStuLmhlaWdodDthLT10aGlzLmFlLGEvPXRoaXMueWksYy09dGhpcy5mZSxjLz10aGlzLndpLHUtPXRoaXMuYWUsdS89dGhpcy55aSxkLT10aGlzLmZlLGQvPXRoaXMud2k7Y29uc3QgbT1NYXRoLm1heCgwLE1hdGgubWluKHRoaXMuQWgsYXwwKSksZz1NYXRoLm1pbih0aGlzLkFoLE1hdGgubWF4KDAsdXwwKSkscD1NYXRoLm1heCgwLE1hdGgubWluKHRoaXMuTGgsY3wwKSksdz1NYXRoLm1pbih0aGlzLkxoLE1hdGgubWF4KDAsZHwwKSkseD0wLGs9OTAsYj0yNzAsUz10aGlzLkh0LE09cnwwLEE9bHwwLEM9aHwwLFA9ZnwwLE49aT09PXh8fGk9PT1rPzE6LTEsVD1pPT09a3x8aT09PWI7U1tNXVtBXT09PVBvc2l0aW9uQXJyYXkuUXM/KHRoaXMuemIoTSxBLEMsUCxOLFQsbSxnLHAsdyksdGhpcy56YihNLEEsQyxQLDEsIVQsbSxnLHAsdyksdGhpcy56YihNLEEsQyxQLC0xLCFULG0sZyxwLHcpKTp0aGlzLnpiKE0sQSxDLFAsTixULE0sQSxNLEEpLFNbQ11bUF09PT1Qb3NpdGlvbkFycmF5LlFzPyh0aGlzLlhiKE0sQSxDLFAscz09PXh8fHM9PT1rPzE6LTEscz09PWt8fHM9PT1iLG0sZyxwLHcpLHRoaXMuWGIoTSxBLEMsUCwxLCEocz09PWt8fHM9PT1iKSxtLGcscCx3KSx0aGlzLlhiKE0sQSxDLFAsLTEsIShzPT09a3x8cz09PWIpLG0sZyxwLHcpKTp0aGlzLlhiKE0sQSxDLFAsTixULEMsUCxDLFApO2NvbnN0IEw9VS5sdCgpO2lmKG8mJnRoaXMuSVQoQyxQLHMsTSxBLEwpKXsoTFswXSE9PUN8fExbMV0hPT1QKSYmKEwudW5zaGlmdChQKSxMLnVuc2hpZnQoQykpLChMW0wubGVuZ3RoLTJdIT09TXx8TFtMLmxlbmd0aC0xXSE9PUEpJiYoTC5wdXNoKE0pLEwucHVzaChBKSk7bGV0IEQ9UG9zaXRpb25BcnJheS5KYSxGPUxbTC5sZW5ndGgtMl0sST1MW0wubGVuZ3RoLTFdO1NbRl1bSV09RCsrO2ZvcihsZXQgUj1MLmxlbmd0aC00O1I+PTA7Ui09Mil7Rj1MW1IrMl0sST1MW1IrM107Y29uc3QgTz1MW1JdLFk9TFtSKzFdO2Zvcig7Tz5GP0YrKzpPPEY/Ri0tOlk+ST9JKys6WTxJJiZJLS0sU1tGXVtJXT1EKyssIShGPT09TyYmST09PVkpOyk7fX1lbHNlIHRoaXMuZ28oTSxBLDEsITEsbSxnLHAsdyksdGhpcy5nbyhNLEEsLTEsITEsbSxnLHAsdyksdGhpcy5nbyhNLEEsMSwhMCxtLGcscCx3KSx0aGlzLmdvKE0sQSwtMSwhMCxtLGcscCx3KTtVLnR0KEwpfUlUKHQsaSxlLHMsbixvKXtjb25zdCBhPXRoaXMuSHQ7bGV0IGM9dCx1PWk7Zm9yKDs7KXtpZihjPT09cyYmdT09PW4pcmV0dXJuITA7bGV0IGQ9YyxtPXU7aWYoZT09PTApaWYoZDxzKWQrKztlbHNlIGJyZWFrO2Vsc2UgaWYoZT09PTkwKWlmKG08biltKys7ZWxzZSBicmVhaztlbHNlIGlmKGU9PT0xODApaWYoZD5zKWQtLTtlbHNlIGJyZWFrO2Vsc2UgaWYobT5uKW0tLTtlbHNlIGJyZWFrO2NvbnN0IGc9YVtkXVttXTtpZihnPT09MHx8Zz09PVBvc2l0aW9uQXJyYXkuTE4pYnJlYWs7Yz1kLHU9bX1mb3IoOzspe2xldCBkPWUsbT1jLGc9dTtlPT09MD9nPG4/KGQ9OTAsZysrKTpnPm4mJihkPTI3MCxnLS0pOmU9PT05MD9tPHM/KGQ9MCxtKyspOm0+cyYmKGQ9MTgwLG0tLSk6ZT09PTE4MD9nPG4/KGQ9OTAsZysrKTpnPm4mJihkPTI3MCxnLS0pOm08cz8oZD0wLG0rKyk6bT5zJiYoZD0xODAsbS0tKTtjb25zdCBwPWFbbV1bZ107aWYoZCE9PWUmJnAhPT0wJiZwIT09UG9zaXRpb25BcnJheS5MTil7aWYoby5wdXNoKGMpLG8ucHVzaCh1KSx0aGlzLklUKGMsdSxkLHMsbixvKSlyZXR1cm4hMDtvLnBvcCgpLG8ucG9wKCl9aWYoYVtjXVt1XT1Qb3NpdGlvbkFycmF5LkxOLGU9PT0wKXtpZihjPT09dClyZXR1cm4hMTtjLS19ZWxzZSBpZihlPT09OTApe2lmKHU9PT1pKXJldHVybiExO3UtLX1lbHNlIGlmKGU9PT0xODApe2lmKGM9PT10KXJldHVybiExO2MrK31lbHNle2lmKHU9PT1pKXJldHVybiExO3UrK319fX1jbGFzcyBLbm90e1RlO2dsO2ZzO0tkO2NvbnN0cnVjdG9yKHQsaSl7R1NldC5KaSh0aGlzKSx0aGlzLlRlPXQsdGhpcy5nbD1pLHRoaXMuZnM9W10sdGhpcy5LZD0hMX10b1N0cmluZygpe2NvbnN0IHQ9dGhpcy5mcztsZXQgaT10aGlzLlRlLnRvU3RyaW5nKCkrXCIgXCIrdC5sZW5ndGgudG9TdHJpbmcoKStcIjpcIjtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7Y29uc3Qgcz10W2VdO3MhPT1udWxsJiYoaSs9YFxuICBgK3MudG9TdHJpbmcoKSl9cmV0dXJuIGl9WE8odCxpLGUscyl7Y29uc3Qgbj1pLm9mZnNldFk7c3dpdGNoKG4pe2Nhc2UgODpyZXR1cm4gOTA7Y2FzZSAyOnJldHVybiAxODA7Y2FzZSAxOnJldHVybiAyNzA7Y2FzZSA0OnJldHVybiAwfWxldCBvPWU7c3dpdGNoKG4pe2Nhc2UgOTpyZXR1cm4gbz4xODA/MjcwOjkwO2Nhc2UgNjpyZXR1cm4gbz45MCYmbzw9MjcwPzE4MDowfWNvbnN0IHI9TWF0aC5hdGFuMih0LmhlaWdodCx0LndpZHRoKSoxODAvTWF0aC5QSTtzd2l0Y2gobil7Y2FzZSAzOnJldHVybiBvPnImJm88PTE4MCtyPzE4MDoyNzA7Y2FzZSA1OnJldHVybiBvPjE4MC1yJiZvPD0zNjAtcj8yNzA6MDtjYXNlIDEyOnJldHVybiBvPnImJm88PTE4MCtyPzkwOjA7Y2FzZSAxMDpyZXR1cm4gbz4xODAtciYmbzw9MzYwLXI/MTgwOjkwO2Nhc2UgNzpyZXR1cm4gbz45MCYmbzw9MTgwK3I/MTgwOm8+MTgwK3ImJm88PTM2MC1yPzI3MDowO2Nhc2UgMTM6cmV0dXJuIG8+MTgwJiZvPD0zNjAtcj8yNzA6bz5yJiZvPD0xODA/OTA6MDtjYXNlIDE0OnJldHVybiBvPnImJm88PTE4MC1yPzkwOm8+MTgwLXImJm88PTI3MD8xODA6MDtjYXNlIDExOnJldHVybiBvPjE4MC1yJiZvPD0xODArcj8xODA6bz4xODArcj8yNzA6OTB9cmV0dXJuIHMmJm4hPT0xNSYmKG8tPTE1LG88MCYmKG8rPTM2MCkpLG8+ciYmbzwxODAtcj85MDpvPj0xODAtciYmbzw9MTgwK3I/MTgwOm8+MTgwK3ImJm88MzYwLXI/MjcwOjB9RGQoKXt0aGlzLmZzLmxlbmd0aD0wfURUKHQpe2xldCBpPXRoaXMuZnM7aS5sZW5ndGg9PT0wJiYodGhpcy5ZTygpLGk9dGhpcy5mcyk7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspe2NvbnN0IHM9aVtlXTtpZihzIT09bnVsbCYmcy5KZT09PXQpcmV0dXJuIHN9cmV0dXJuIG51bGx9WU8oKXtpZighdGhpcy5LZCl7Y29uc3QgdD10aGlzLktkO3RoaXMuS2Q9ITA7bGV0IGksZT1udWxsO2NvbnN0IHM9dGhpcy5UZSxuPXMgaW5zdGFuY2VvZiBHcm91cD9zOm51bGw7aWYobiE9PW51bGwmJiFuLmlzU3ViR3JhcGhFeHBhbmRlZCl7aWYoIW4uYWN0dWFsQm91bmRzLmlzUmVhbCgpKXJldHVybiB0aGlzLktkPXQsdGhpcy5mcztlPW4saT1lLmZpbmRFeHRlcm5hbExpbmtzQ29ubmVjdGVkKCl9ZWxzZSBzLmlzVHJlZUV4cGFuZGVkP2k9cy5maW5kTGlua3NDb25uZWN0ZWQodGhpcy5nbC5wb3J0SWQpOmk9cy5maW5kRXh0ZXJuYWxUcmVlTGlua3NDb25uZWN0ZWQoKTt0aGlzLmZzLmxlbmd0aD0wO2xldCBvPTA7Y29uc3Qgcj10aGlzLmdsLmdldERvY3VtZW50UG9pbnQoU3BvdC5Ub3BMZWZ0LFBvaW50LmEoKSksbD10aGlzLmdsLmdldERvY3VtZW50UG9pbnQoU3BvdC5Cb3R0b21SaWdodCxQb2ludC5hKCkpLGg9UmVjdC5LKHIueCxyLnksMCwwKTtoLnVuaW9uUG9pbnQobCksUG9pbnQubyhyKSxQb2ludC5vKGwpO2NvbnN0IGY9UG9pbnQuSyhoLngraC53aWR0aC8yLGgueStoLmhlaWdodC8yKSxhPXRoaXMuZ2wuZ2V0RG9jdW1lbnRBbmdsZSgpLGM9aS5pdGVyYXRvcjtmb3IoO2MubmV4dCgpOyl7Y29uc3QgZz1jLnZhbHVlO2lmKCFnLmlzVmlzaWJsZSgpfHxnLmZyb21Qb3J0PT09Zy50b1BvcnQpY29udGludWU7Y29uc3QgcD1nLmZyb21Qb3J0PT09dGhpcy5nbHx8Zy5mcm9tTm9kZSE9PW51bGwmJmUhPT1udWxsJiZnLmZyb21Ob2RlLmlzTWVtYmVyT2YoZSksdz1nLmNvbXB1dGVTcG90KHAsdGhpcy5nbCk7aWYoIXcuaXNTaWRlKCkpY29udGludWU7bGV0IHg7aWYocD94PWcudG9Qb3J0Ong9Zy5mcm9tUG9ydCx4PT09bnVsbCljb250aW51ZTtsZXQgaz14LnBhcnQ7aWYoaz09PW51bGwpY29udGludWU7Y29uc3QgYj1rLmZpbmRWaXNpYmxlTm9kZSgpO2IhPT1udWxsJiZiIT09ayYmKGs9Yix4PWsucG9ydCk7Y29uc3QgUz1nLmNvbXB1dGVPdGhlclBvaW50KGsseCk7bGV0IE09Zi5kaXJlY3Rpb25Qb2ludChTKTtNLT1hLE08MD9NKz0zNjA6TT49MzYwJiYoTS09MzYwKTtjb25zdCBBPXRoaXMuWE8oaCx3LE0sZy5pc09ydGhvZ29uYWwpO2xldCBDPTA7QT09PTA/KEM9NCxNPjE4MCYmKE0tPTM2MCkpOkE9PT05MD8oQz04LE0+MjcwJiYoTS09MzYwKSk6QT09PTE4MD9DPTI6KEM9MSxNPDkwJiYoTSs9MzYwKSk7bGV0IFA9dGhpcy5mc1tvXTtQPT09dm9pZCAwPyhQPW5ldyBMaW5rSW5mbyhnLE0sQyksdGhpcy5mc1tvXT1QKTooUC5KZT1nLFAuanQ9TSxQLnhlPUMpLFAuWWIuc2V0KFMpLG8rK31Qb2ludC5vKGYpLHRoaXMuS08oKTtjb25zdCB1PXRoaXMuZnMubGVuZ3RoO2xldCBkPS0xLG09MDtmb3Iobz0wO288dTtvKyspe2NvbnN0IGc9dGhpcy5mc1tvXTtnIT09dm9pZCAwJiYoZy54ZSE9PWQmJihkPWcueGUsbT0wKSxnLlVkPW0sbSsrKX1mb3IoZD0tMSxtPTAsbz11LTE7bz49MDtvLS0pe2NvbnN0IGc9dGhpcy5mc1tvXTtnIT09dm9pZCAwJiYoZy54ZSE9PWQmJihkPWcueGUsbT1nLlVkKzEpLGcuRGM9bSl9dGhpcy5VTyh0aGlzLmZzKSx0aGlzLkdPKHRoaXMuZnMpLHRoaXMuS2Q9dCxSZWN0Lm8oaCl9cmV0dXJuIHRoaXMuZnN9SE8odCxpKXtyZXR1cm4gdD09PWk/MDp0PT09bnVsbD8tMTppPT09bnVsbD8xOnQueGU8aS54ZT8tMTp0LnhlPmkueGU/MTp0Lmp0PGkuanQ/LTE6dC5qdD5pLmp0PzE6MH1LTygpe3RoaXMuZnMuc29ydChLbm90LnByb3RvdHlwZS5ITyl9VU8odCl7Y29uc3QgaT10aGlzLmdsLGU9dGhpcy5UZS5wb3J0U3ByZWFkaW5nLHM9UG9pbnQuYSgpLG49UG9pbnQuYSgpLG89UG9pbnQuYSgpLHI9UG9pbnQuYSgpO2kuZ2V0RG9jdW1lbnRQb2ludChTcG90LlRvcExlZnQscyksaS5nZXREb2N1bWVudFBvaW50KFNwb3QuVG9wUmlnaHQsbiksaS5nZXREb2N1bWVudFBvaW50KFNwb3QuQm90dG9tUmlnaHQsbyksaS5nZXREb2N1bWVudFBvaW50KFNwb3QuQm90dG9tTGVmdCxyKTtsZXQgbD0wLGg9MCxmPTAsYT0wO2lmKGU9PT0yKWZvcihsZXQgeD0wO3g8dC5sZW5ndGg7eCsrKXtjb25zdCBrPXRbeF07aWYoaz09PW51bGwpY29udGludWU7Y29uc3QgYj1rLkplLmNvbXB1dGVUaGlja25lc3MoKTtzd2l0Y2goay54ZSl7Y2FzZSA4OmYrPWI7YnJlYWs7Y2FzZSAyOmErPWI7YnJlYWs7Y2FzZSAxOmwrPWI7YnJlYWs7ZGVmYXVsdDpjYXNlIDQ6aCs9YjticmVha319bGV0IGM9MCx1PTAsZD0xLG09bixnPW8scD0wLHc9MDtmb3IobGV0IHg9MDt4PHQubGVuZ3RoO3grKyl7Y29uc3Qgaz10W3hdO2lmKGs9PT1udWxsKWNvbnRpbnVlO2lmKGMhPT1rLnhlKXtzd2l0Y2goYz1rLnhlLGMpe2Nhc2UgODptPW8sZz1yO2JyZWFrO2Nhc2UgMjptPXIsZz1zO2JyZWFrO2Nhc2UgMTptPXMsZz1uO2JyZWFrO2RlZmF1bHQ6Y2FzZSA0Om09bixnPW87YnJlYWt9c3dpdGNoKHA9Zy54LW0ueCx3PWcueS1tLnksYyl7Y2FzZSA4OmY+TWF0aC5hYnMocCk/KGQ9TWF0aC5hYnMocCkvZixmPU1hdGguYWJzKHApKTpkPTE7YnJlYWs7Y2FzZSAyOmE+TWF0aC5hYnModyk/KGQ9TWF0aC5hYnModykvYSxhPU1hdGguYWJzKHcpKTpkPTE7YnJlYWs7Y2FzZSAxOmw+TWF0aC5hYnMocCk/KGQ9TWF0aC5hYnMocCkvbCxsPU1hdGguYWJzKHApKTpkPTE7YnJlYWs7ZGVmYXVsdDpjYXNlIDQ6aD5NYXRoLmFicyh3KT8oZD1NYXRoLmFicyh3KS9oLGg9TWF0aC5hYnModykpOmQ9MTticmVha311PTB9Y29uc3QgYj1rLnpkO2lmKGU9PT0yKXtsZXQgUz1rLkplLmNvbXB1dGVUaGlja25lc3MoKTtzd2l0Y2goUyo9ZCxiLnNldChtKSxjKXtjYXNlIDg6Yi54PW0ueCtwLzIrZi8yLXUtUy8yO2JyZWFrO2Nhc2UgMjpiLnk9bS55K3cvMithLzItdS1TLzI7YnJlYWs7Y2FzZSAxOmIueD1tLngrcC8yLWwvMit1K1MvMjticmVhaztkZWZhdWx0OmNhc2UgNDpiLnk9bS55K3cvMi1oLzIrdStTLzI7YnJlYWt9dSs9U31lbHNle2xldCBTPS41O2U9PT0xJiYoUz0oay5VZCsxKS8oay5EYysxKSksYi54PW0ueCtwKlMsYi55PW0ueSt3KlN9fVBvaW50Lm8ocyksUG9pbnQubyhuKSxQb2ludC5vKG8pLFBvaW50Lm8ocil9R08odCl7Zm9yKGxldCBpPTA7aTx0Lmxlbmd0aDtpKyspe2NvbnN0IGU9dFtpXTtlIT09bnVsbCYmKGUuQmI9dGhpcy5xTyhlKSl9fXFPKHQpe2NvbnN0IGk9dC5KZSxlPWkuZnJvbVBvcnQ9PT10aGlzLmdsLHM9aS5jb21wdXRlRW5kU2VnbWVudExlbmd0aCh0aGlzLlRlLHRoaXMuZ2wsU3BvdC5Ob25lLGUpO2xldCBuPXQuVWQ7aWYobjwwKXJldHVybiBzO2NvbnN0IG89dC5EYztpZihvPD0xfHwhaS5pc09ydGhvZ29uYWwpcmV0dXJuIHM7Y29uc3QgbD10LlliLGg9dC56ZDsodC54ZT09PTJ8fHQueGU9PT04KSYmKG49by0xLW4pO2NvbnN0IGY9TGluay5tTyxhPXQueGU9PT0yfHx0LnhlPT09NDtyZXR1cm4oYT9sLnk8aC55OmwueDxoLngpP3MrbipmOihhP2wueT09PWgueTpsLng9PT1oLngpP3M6cysoby0xLW4pKmZ9fWNsYXNzIExpbmtJbmZve0plO2p0O3hlO1liO1VkO0RjO3pkO0JiO2NvbnN0cnVjdG9yKHQsaSxlKXt0aGlzLkplPXQsdGhpcy5qdD1pLHRoaXMueGU9ZSx0aGlzLlliPW5ldyBQb2ludCx0aGlzLlVkPTAsdGhpcy5EYz0wLHRoaXMuemQ9bmV3IFBvaW50LHRoaXMuQmI9MH10b1N0cmluZygpe3JldHVybiB0aGlzLkplLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5qdC50b1N0cmluZygpK1wiIFwiK3RoaXMueGUudG9TdHJpbmcoKStcIjpcIit0aGlzLlVkLnRvU3RyaW5nKCkrXCIvXCIrdGhpcy5EYy50b1N0cmluZygpK1wiIFwiK3RoaXMuemQudG9TdHJpbmcoKStcIiBcIit0aGlzLkJiLnRvU3RyaW5nKCkrXCIgXCIrdGhpcy5ZYi50b1N0cmluZygpfX1jbGFzcyBMaW5rU2V0dGluZ3N7a2E7U2E7TWE7UGE7TmE7Q2E7WTA7ejA7SzA7WDA7Y29uc3RydWN0b3IoKXt0aGlzLmthPVNwb3QuRGVmYXVsdCx0aGlzLlNhPVNwb3QuRGVmYXVsdCx0aGlzLk1hPU5hTix0aGlzLlBhPU5hTix0aGlzLk5hPU5hTix0aGlzLkNhPU5hTix0aGlzLlkwPW51bGwsdGhpcy56MD1udWxsLHRoaXMuSzA9MS8wLHRoaXMuWDA9MS8wfWNvcHkoKXtjb25zdCB0PW5ldyBMaW5rU2V0dGluZ3M7cmV0dXJuIHQua2E9dGhpcy5rYS5OKCksdC5TYT10aGlzLlNhLk4oKSx0Lk1hPXRoaXMuTWEsdC5QYT10aGlzLlBhLHQuTmE9dGhpcy5OYSx0LkNhPXRoaXMuQ2EsdC5ZMD10aGlzLlkwLHQuejA9dGhpcy56MCx0LkswPXRoaXMuSzAsdC5YMD10aGlzLlgwLHR9fWNsYXNzIExpbmtFbGVtZW50U2V0dGluZ3N7RjA7UjA7STA7RDA7TXA7UHA7Y29uc3RydWN0b3IoKXt0aGlzLkYwPS0xLzAsdGhpcy5SMD0wLHRoaXMuSTA9UG9pbnQuTm8sdGhpcy5EMD0wLHRoaXMuTXA9XCJOb25lXCIsdGhpcy5QcD1cIk5vbmVcIn1jb3B5KCl7Y29uc3QgdD1uZXcgTGlua0VsZW1lbnRTZXR0aW5ncztyZXR1cm4gdC5GMD10aGlzLkYwLHQuUjA9dGhpcy5SMCx0LkkwPXRoaXMuSTAuTigpLHQuRDA9dGhpcy5EMCx0Lk1wPXRoaXMuTXAsdC5QcD10aGlzLlBwLHR9fWNsYXNzIEdyb3VwIGV4dGVuZHMgTm9kZXtHZDtJdDtwYTtnMDtoaTtvZTtjb25zdHJ1Y3Rvcih0LGkpe2xldCBlO3Q9PT12b2lkIDB8fHQgaW5zdGFuY2VvZiBQYW5lbExheW91dHx8dHlwZW9mIHQ9PVwic3RyaW5nXCI/ZT10OnQmJihpPXQpLHN1cGVyKGUpLHRoaXMuQj10aGlzLkJ8NDYwOCx0aGlzLkdkPW5ldyBHU2V0LHRoaXMuSXQ9bnVsbCx0aGlzLm9lPW5ldyBMYXlvdXQsdGhpcy5vZS5ncm91cD10aGlzLHRoaXMucGE9bmV3IEdTZXQsdGhpcy5nMD1udWxsLHRoaXMuaGk9bnVsbCxpJiZPYmplY3QuYXNzaWduKHRoaXMsaSl9Y2xvbmVQcm90ZWN0ZWQodCl7c3VwZXIuY2xvbmVQcm90ZWN0ZWQodCksdGhpcy5CPXRoaXMuQiYtMzI3Njk7Y29uc3QgaT10LmZpbmRJblZpc3VhbFRyZWUoZT0+ZSBpbnN0YW5jZW9mIFBsYWNlaG9sZGVyKTtpIGluc3RhbmNlb2YgUGxhY2Vob2xkZXI/dC5JdD1pOnQuSXQ9bnVsbCx0aGlzLm9lIT09bnVsbD8odC5vZT10aGlzLm9lLmNvcHkoKSx0Lm9lLmdyb3VwPXQpOih0Lm9lIT09bnVsbCYmKHQub2UuZ3JvdXA9bnVsbCksdC5vZT1udWxsKSx0aGlzLmhpIT09bnVsbCYmKHQuaGk9dGhpcy5oaS5jb3B5KCkpfVhvKHQpe3N1cGVyLlhvKHQpO2NvbnN0IGk9dC5maW5kU3ViR3JhcGhQYXJ0cygpLGU9dC5tZW1iZXJQYXJ0cztmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO2lmKHMudSgpLHMuaW52YWxpZGF0ZUxheW91dCg4KSxzLmNsZWFyQWRvcm5tZW50cygpLHMgaW5zdGFuY2VvZiBOb2RlKXMuaW52YWxpZGF0ZUNvbm5lY3RlZExpbmtzKGkpO2Vsc2UgaWYocyBpbnN0YW5jZW9mIExpbmspe2NvbnN0IG49cy5sYWJlbE5vZGVzO2Zvcig7bi5uZXh0KCk7KW4udmFsdWUuaW52YWxpZGF0ZUNvbm5lY3RlZExpbmtzKGkpfX19dGModCxpLGUscyxuLG8scil7aWYodD09PTMmJmk9PT1cImVsZW1lbnRzXCIpe2lmKG4gaW5zdGFuY2VvZiBQbGFjZWhvbGRlcil0aGlzLkl0PT09bnVsbD90aGlzLkl0PW46dGhpcy5JdCE9PW4mJlUubihcIkNhbm5vdCBpbnNlcnQgYSBzZWNvbmQgUGxhY2Vob2xkZXIgaW50byB0aGUgdmlzdWFsIHRyZWUgb2YgYSBHcm91cC5cIik7ZWxzZSBpZihuIGluc3RhbmNlb2YgUGFuZWwpe2NvbnN0IGw9bi5maW5kSW5WaXN1YWxUcmVlKGg9PmggaW5zdGFuY2VvZiBQbGFjZWhvbGRlcik7bCBpbnN0YW5jZW9mIFBsYWNlaG9sZGVyJiYodGhpcy5JdD09PW51bGw/dGhpcy5JdD1sOnRoaXMuSXQhPT1sJiZVLm4oXCJDYW5ub3QgaW5zZXJ0IGEgc2Vjb25kIFBsYWNlaG9sZGVyIGludG8gdGhlIHZpc3VhbCB0cmVlIG9mIGEgR3JvdXAuXCIpKX19ZWxzZSB0PT09NCYmaT09PVwiZWxlbWVudHNcIiYmdGhpcy5JdCE9PW51bGwmJihzPT09dGhpcy5JdD90aGlzLkl0PW51bGw6cyBpbnN0YW5jZW9mIFBhbmVsJiZ0aGlzLkl0LmlzQ29udGFpbmVkQnkocykmJih0aGlzLkl0PW51bGwpKTtzdXBlci50Yyh0LGksZSxzLG4sbyxyKX1zZCh0LGkpe2lmKHN1cGVyLnNkKHQsaSksdGhpcy5pc0NsaXBwaW5nJiZ0aGlzLnR5cGUhPT1QYW5lbC5TcG90JiZ0aGlzLmlzU3ViR3JhcGhFeHBhbmRlZCl7bGV0IGU9dGhpcy5yZXNpemVPYmplY3Q7ZSBpbnN0YW5jZW9mIFBhbmVsJiYoZT1lLmZpbmRNYWluRWxlbWVudCgpKSx0aGlzLmhpPT09bnVsbCYmKHRoaXMuaGk9bmV3IFJlY3QpLGUuZ2V0RG9jdW1lbnRCb3VuZHModGhpcy5oaSksZSBpbnN0YW5jZW9mIFNoYXBlJiZ0aGlzLmhpLmluZmxhdGUoLWUuc3Ryb2tlV2lkdGgsLWUuc3Ryb2tlV2lkdGgpfX15aCh0LGksZSxzKXt0aGlzLmhhc1BsYWNlaG9sZGVyKCkmJih0aGlzLkpvPXRoaXMucGxhY2Vob2xkZXIpLHN1cGVyLnloKHQsaSxlLHMpfWVuc3VyZUJvdW5kcygpe3RoaXMuaXNTdWJHcmFwaEV4cGFuZGVkJiZ0aGlzLm1lbWJlclBhcnRzLmVhY2goaT0+e2kuZW5zdXJlQm91bmRzKCl9KSxzdXBlci5lbnN1cmVCb3VuZHMoKX12cigpe2lmKCFzdXBlci52cigpKXJldHVybiExO2NvbnN0IHQ9dGhpcy5tZW1iZXJQYXJ0cztmb3IoO3QubmV4dCgpOyl7Y29uc3QgaT10LnZhbHVlO2lmKGkgaW5zdGFuY2VvZiBOb2RlKXtpZighaS5pc1Zpc2libGUoKSljb250aW51ZTtpZihpLm5zKCkpcmV0dXJuITF9ZWxzZSBpZihpIGluc3RhbmNlb2YgTGluayl7aWYoIWkuaXNWaXNpYmxlKCkpY29udGludWU7aWYoaS5ucygpJiZpLmZyb21Ob2RlIT09dGhpcyYmaS50b05vZGUhPT10aGlzKXJldHVybiExfX1yZXR1cm4hMH1oYXNQbGFjZWhvbGRlcigpe3JldHVybiB0aGlzLkl0IT09bnVsbCYmdGhpcy5JdC5pc1Zpc2libGVPYmplY3QoKSYmdGhpcy5pc1N1YkdyYXBoRXhwYW5kZWR9Z2V0IHBsYWNlaG9sZGVyKCl7cmV0dXJuIHRoaXMuSXR9Z2V0IGNvbXB1dGVzQm91bmRzQWZ0ZXJEcmFnKCl7cmV0dXJuKHRoaXMuQiYyMDQ4KSE9PTB9c2V0IGNvbXB1dGVzQm91bmRzQWZ0ZXJEcmFnKHQpe2NvbnN0IGk9KHRoaXMuQiYyMDQ4KSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsR3JvdXAsXCJjb21wdXRlc0JvdW5kc0FmdGVyRHJhZ1wiKSx0aGlzLkI9dGhpcy5CXjIwNDgsdGhpcy50KFwiY29tcHV0ZXNCb3VuZHNBZnRlckRyYWdcIixpLHQpKX1nZXQgY29tcHV0ZXNCb3VuZHNJbmNsdWRpbmdMaW5rcygpe3JldHVybih0aGlzLkImNDA5NikhPT0wfXNldCBjb21wdXRlc0JvdW5kc0luY2x1ZGluZ0xpbmtzKHQpe2NvbnN0IGk9KHRoaXMuQiY0MDk2KSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsR3JvdXAsXCJjb21wdXRlc0JvdW5kc0luY2x1ZGluZ0xpbmtzXCIpLHRoaXMuQj10aGlzLkJeNDA5Nix0aGlzLnQoXCJjb21wdXRlc0JvdW5kc0luY2x1ZGluZ0xpbmtzXCIsaSx0KSl9Z2V0IGNvbXB1dGVzQm91bmRzSW5jbHVkaW5nTG9jYXRpb24oKXtyZXR1cm4odGhpcy5CJjgxOTIpIT09MH1zZXQgY29tcHV0ZXNCb3VuZHNJbmNsdWRpbmdMb2NhdGlvbih0KXtjb25zdCBpPSh0aGlzLkImODE5MikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyb3VwLFwiY29tcHV0ZXNCb3VuZHNJbmNsdWRpbmdMb2NhdGlvblwiKSx0aGlzLkI9dGhpcy5CXjgxOTIsdGhpcy50KFwiY29tcHV0ZXNCb3VuZHNJbmNsdWRpbmdMb2NhdGlvblwiLGksdCkpfWdldCBoYW5kbGVzRHJhZ0Ryb3BGb3JNZW1iZXJzKCl7cmV0dXJuKHRoaXMuQiYxNjM4NCkhPT0wfXNldCBoYW5kbGVzRHJhZ0Ryb3BGb3JNZW1iZXJzKHQpe2NvbnN0IGk9KHRoaXMuQiYxNjM4NCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyb3VwLFwiaGFuZGxlc0RyYWdEcm9wRm9yTWVtYmVyc1wiKSx0aGlzLkI9dGhpcy5CXjE2Mzg0LHRoaXMudChcImhhbmRsZXNEcmFnRHJvcEZvck1lbWJlcnNcIixpLHQpKX1nZXQgYXZvaWRhYmxlTWVtYmVycygpe3JldHVybih0aGlzLkImMTMxMDcyKSE9PTB9c2V0IGF2b2lkYWJsZU1lbWJlcnModCl7Y29uc3QgaT0odGhpcy5CJjEzMTA3MikhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyb3VwLFwiYXZvaWRhYmxlTWVtYmVyc1wiKSx0aGlzLkI9dGhpcy5CXjEzMTA3Mix0aGlzLnQoXCJhdm9pZGFibGVNZW1iZXJzXCIsaSx0KSl9Z2V0IG1lbWJlclBhcnRzKCl7cmV0dXJuIHRoaXMuR2QuaXRlcmF0b3J9Zk4odCl7aWYodGhpcy5HZC5hZGQodCkpe3QgaW5zdGFuY2VvZiBHcm91cCYmdGhpcy5wYS5hZGQodCk7Y29uc3QgZT10aGlzLm1lbWJlckFkZGVkO2lmKGUhPT1udWxsKXtsZXQgcz0hMDtjb25zdCBuPXRoaXMuZGlhZ3JhbTtuIT09bnVsbCYmKHM9bi5ILG4uSD0hMCksZSh0aGlzLHQpLG4hPT1udWxsJiYobi5IPXMpfSghdGhpcy5pc1Zpc2libGUoKXx8IXRoaXMuaXNTdWJHcmFwaEV4cGFuZGVkKSYmdC5LaSghMSl9aWYodCBpbnN0YW5jZW9mIExpbmsmJiF0aGlzLmNvbXB1dGVzQm91bmRzSW5jbHVkaW5nTGlua3MpcmV0dXJuO2xldCBpPXRoaXMuSXQ7aT09PW51bGwmJihpPXRoaXMpLGkudSgpfWFOKHQpe2lmKHRoaXMuR2QuZGVsZXRlKHQpKXt0IGluc3RhbmNlb2YgR3JvdXAmJnRoaXMucGEuZGVsZXRlKHQpO2NvbnN0IGU9dGhpcy5tZW1iZXJSZW1vdmVkO2lmKGUhPT1udWxsKXtsZXQgcz0hMDtjb25zdCBuPXRoaXMuZGlhZ3JhbTtuIT09bnVsbCYmKHM9bi5ILG4uSD0hMCksZSh0aGlzLHQpLG4hPT1udWxsJiYobi5IPXMpfSghdGhpcy5pc1Zpc2libGUoKXx8IXRoaXMuaXNTdWJHcmFwaEV4cGFuZGVkKSYmdC5LaSghMCl9aWYodCBpbnN0YW5jZW9mIExpbmsmJiF0aGlzLmNvbXB1dGVzQm91bmRzSW5jbHVkaW5nTGlua3MpcmV0dXJuO2xldCBpPXRoaXMuSXQ7aT09PW51bGwmJihpPXRoaXMpLGkudSgpfUpmKCl7aWYodGhpcy5HZC5jb3VudD4wKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0IT09bnVsbCl7Y29uc3QgZT10aGlzLkdkLmNvcHkoKS5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO3QucmVtb3ZlKHMpfX19c3VwZXIuSmYoKX1nZXQgbGF5b3V0KCl7cmV0dXJuIHRoaXMub2V9c2V0IGxheW91dCh0KXtjb25zdCBpPXRoaXMub2U7aWYoaSE9PXQpe3QhPT1udWxsJiYoVS5lKHQsTGF5b3V0LEdyb3VwLFwibGF5b3V0XCIpLHQuZGlhZ3JhbSE9PW51bGwmJnQuZGlhZ3JhbS5sYXlvdXQ9PT10JiZVLm4oXCJBIGxheW91dCBjYW5ub3QgYmUgYm90aCB0aGUgRGlhZ3JhbS5sYXlvdXQgYW5kIGEgR3JvdXAubGF5b3V0OiBcIit0KSksaSE9PW51bGwmJihpLmRpYWdyYW09bnVsbCxpLmdyb3VwPW51bGwpLHRoaXMub2U9dDtjb25zdCBlPXRoaXMuZGlhZ3JhbTt0IT09bnVsbCYmKHQuZGlhZ3JhbT1lLHQuZ3JvdXA9dGhpcyksZSE9PW51bGwmJihlLnFyPSEwKSx0aGlzLnQoXCJsYXlvdXRcIixpLHQpLGUhPT1udWxsJiZlLnJlcXVlc3RVcGRhdGUoKX19Z2V0IG1lbWJlckFkZGVkKCl7cmV0dXJuIHRoaXMuVnQhPT1udWxsP3RoaXMuVnQuYnk6bnVsbH1zZXQgbWVtYmVyQWRkZWQodCl7Y29uc3QgaT10aGlzLm1lbWJlckFkZGVkO2khPT10JiYodCE9PW51bGwmJlUuUCh0LEdyb3VwLFwibWVtYmVyQWRkZWRcIiksdGhpcy5kbCgpLmJ5PXQsdGhpcy50KFwibWVtYmVyQWRkZWRcIixpLHQpKX1nZXQgbWVtYmVyUmVtb3ZlZCgpe3JldHVybiB0aGlzLlZ0IT09bnVsbD90aGlzLlZ0Lmt5Om51bGx9c2V0IG1lbWJlclJlbW92ZWQodCl7Y29uc3QgaT10aGlzLm1lbWJlclJlbW92ZWQ7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JvdXAsXCJtZW1iZXJSZW1vdmVkXCIpLHRoaXMuZGwoKS5reT10LHRoaXMudChcIm1lbWJlclJlbW92ZWRcIixpLHQpKX1nZXQgbWVtYmVyVmFsaWRhdGlvbigpe3JldHVybiB0aGlzLlZ0IT09bnVsbD90aGlzLlZ0LmZoOm51bGx9c2V0IG1lbWJlclZhbGlkYXRpb24odCl7Y29uc3QgaT10aGlzLm1lbWJlclZhbGlkYXRpb247aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsR3JvdXAsXCJtZW1iZXJWYWxpZGF0aW9uXCIpLHRoaXMuZGwoKS5maD10LHRoaXMudChcIm1lbWJlclZhbGlkYXRpb25cIixpLHQpKX1jYW5BZGRNZW1iZXJzKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKGk9PT1udWxsKXJldHVybiExO2NvbnN0IGU9aS5jb21tYW5kSGFuZGxlcixuPWUuUFAodCkuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtpZighZS5pc1ZhbGlkTWVtYmVyKHRoaXMsbykpcmV0dXJuITF9cmV0dXJuITB9YWRkTWVtYmVycyh0LGkpe2NvbnN0IGU9dGhpcy5kaWFncmFtO2lmKGU9PT1udWxsKXJldHVybiExO2NvbnN0IHM9ZS5jb21tYW5kSGFuZGxlcixuPXMuUFAodCk7bGV0IG89ITA7Y29uc3Qgcj1uLml0ZXJhdG9yO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7IWl8fHMuaXNWYWxpZE1lbWJlcih0aGlzLGwpP2wuY29udGFpbmluZ0dyb3VwPXRoaXM6bz0hMX1yZXR1cm4gb31nZXQgdW5ncm91cGFibGUoKXtyZXR1cm4odGhpcy5CJjI1NikhPT0wfXNldCB1bmdyb3VwYWJsZSh0KXtjb25zdCBpPSh0aGlzLkImMjU2KSE9PTA7aSE9PXQmJihEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsR3JvdXAsXCJ1bmdyb3VwYWJsZVwiKSx0aGlzLkI9dGhpcy5CXjI1Nix0aGlzLnQoXCJ1bmdyb3VwYWJsZVwiLGksdCkpfWNhblVuZ3JvdXAoKXtpZighdGhpcy51bmdyb3VwYWJsZSlyZXR1cm4hMTtjb25zdCB0PXRoaXMubGF5ZXI7aWYodD09PW51bGx8fCF0LmFsbG93VW5ncm91cClyZXR1cm4hMTtjb25zdCBpPXQuZGlhZ3JhbTtyZXR1cm4hKGkhPT1udWxsJiYhaS5hbGxvd1VuZ3JvdXApfWludmFsaWRhdGVDb25uZWN0ZWRMaW5rcyh0KXtjb25zdCBpPXRoaXMuV08oKTtpZihzdXBlci5pbnZhbGlkYXRlQ29ubmVjdGVkTGlua3ModCksaSlyZXR1cm47dGhpcy5XQSghMCk7Y29uc3QgZT10aGlzLmZpbmRFeHRlcm5hbExpbmtzQ29ubmVjdGVkKCk7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtpZih0IT09dm9pZCAwJiZ0LmhhcyhzKSljb250aW51ZTtjb25zdCBuPXMuZnJvbU5vZGU7aWYobiE9PW51bGwmJm4hPT10aGlzJiZuLmlzTWVtYmVyT2YodGhpcykmJiFuLmlzVmlzaWJsZSgpKW4uUWkocy5mcm9tUG9ydCksbi5RaShzLnRvUG9ydCkscy5pbnZhbGlkYXRlUm91dGUoKTtlbHNle2NvbnN0IG89cy50b05vZGU7byE9PW51bGwmJm8hPT10aGlzJiZvLmlzTWVtYmVyT2YodGhpcykmJiFvLmlzVmlzaWJsZSgpJiYoby5RaShzLmZyb21Qb3J0KSxvLlFpKHMudG9Qb3J0KSxzLmludmFsaWRhdGVSb3V0ZSgpKX19fWZpbmRFeHRlcm5hbExpbmtzQ29ubmVjdGVkKCl7Y29uc3QgdD10aGlzLmRpYWdyYW0hPT1udWxsJiZ0aGlzLmRpYWdyYW0uRTI7aWYodCYmdGhpcy5nMCE9PW51bGwpcmV0dXJuIHRoaXMuZzAuaXRlcmF0b3I7Y29uc3QgaT10aGlzLmZpbmRTdWJHcmFwaFBhcnRzKCk7aS5hZGQodGhpcyk7Y29uc3QgZT1uZXcgR1NldCxzPWkuaXRlcmF0b3I7Zm9yKDtzLm5leHQoKTspe2NvbnN0IG49cy52YWx1ZTtpZighKG4gaW5zdGFuY2VvZiBOb2RlKSljb250aW51ZTtjb25zdCBvPW4ubGlua3NDb25uZWN0ZWQ7Zm9yKDtvLm5leHQoKTspe2NvbnN0IHI9by52YWx1ZTtpLmhhcyhyKXx8ZS5hZGQocil9fXJldHVybiB0JiYodGhpcy5nMD1lKSxlLml0ZXJhdG9yfWZpbmRFeHRlcm5hbE5vZGVzQ29ubmVjdGVkKCl7Y29uc3QgdD10aGlzLmZpbmRTdWJHcmFwaFBhcnRzKCk7dC5hZGQodGhpcyk7Y29uc3QgaT1uZXcgR1NldCxlPXQuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtpZighKHMgaW5zdGFuY2VvZiBOb2RlKSljb250aW51ZTtjb25zdCBuPXMubGlua3NDb25uZWN0ZWQ7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZSxyPW8uZnJvbU5vZGU7ciE9PW51bGwmJighdC5oYXMocil8fHI9PT10aGlzKSYmaS5hZGQocik7Y29uc3QgbD1vLnRvTm9kZTtsIT09bnVsbCYmKCF0LmhhcyhsKXx8bD09PXRoaXMpJiZpLmFkZChsKX19cmV0dXJuIGkuaXRlcmF0b3J9T0UoKXtmdW5jdGlvbiB0KGUscyl7ZSE9PW51bGwmJihzLmFkZChlKSx0KGUuY29udGFpbmluZ0dyb3VwLHMpKX1jb25zdCBpPW5ldyBHU2V0O3JldHVybiB0KHRoaXMsaSksaX1maW5kU3ViR3JhcGhQYXJ0cygpe2NvbnN0IHQ9bmV3IEdTZXQ7cmV0dXJuIFBhcnQuY2godCx0aGlzLCEwLDAsITApLHQuZGVsZXRlKHRoaXMpLHR9S2kodCl7c3VwZXIuS2kodCk7Y29uc3QgaT10aGlzLm1lbWJlclBhcnRzO2Zvcig7aS5uZXh0KCk7KWkudmFsdWUuS2kodCl9Y29sbGFwc2VTdWJHcmFwaCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtO2lmKHQ9PT1udWxsfHx0LmlzQ29sbGFwc2luZ0V4cGFuZGluZylyZXR1cm47dC5pc0NvbGxhcHNpbmdFeHBhbmRpbmc9ITA7Y29uc3QgaT10aGlzLmZpbmRTdWJHcmFwaFBhcnRzKCk7dGhpcy5PVChpLHQsdGhpcyksdC5pc0NvbGxhcHNpbmdFeHBhbmRpbmc9ITF9T1QodCxpLGUpe2NvbnN0IHM9dGhpcy5tZW1iZXJQYXJ0cztmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2lmKG4uS2koITEpLG4gaW5zdGFuY2VvZiBHcm91cCYmbi5pc1N1YkdyYXBoRXhwYW5kZWQmJihuLndhc1N1YkdyYXBoRXhwYW5kZWQ9bi5pc1N1YkdyYXBoRXhwYW5kZWQsbi5PVCh0LGksZSkpLG4gaW5zdGFuY2VvZiBOb2RlKW4uaW52YWxpZGF0ZUNvbm5lY3RlZExpbmtzKHQpLGkuRWYobixlKTtlbHNlIGlmKG4gaW5zdGFuY2VvZiBMaW5rKXtjb25zdCBvPW4ubGFiZWxOb2Rlcztmb3IoO28ubmV4dCgpOylvLnZhbHVlLmludmFsaWRhdGVDb25uZWN0ZWRMaW5rcyh0KX19dGhpcy5pc1N1YkdyYXBoRXhwYW5kZWQ9ITF9ZXhwYW5kU3ViR3JhcGgoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0PT09bnVsbHx8dC5pc0NvbGxhcHNpbmdFeHBhbmRpbmcpcmV0dXJuO3QuaXNDb2xsYXBzaW5nRXhwYW5kaW5nPSEwO2NvbnN0IGk9dGhpcy5maW5kU3ViR3JhcGhQYXJ0cygpO3RoaXMuRVQoaSx0LHRoaXMpLHQuaXNDb2xsYXBzaW5nRXhwYW5kaW5nPSExfUVUKHQsaSxlKXtjb25zdCBzPXRoaXMubWVtYmVyUGFydHM7Zm9yKDtzLm5leHQoKTspe2NvbnN0IG49cy52YWx1ZTtpZihuLktpKCEwKSxuIGluc3RhbmNlb2YgR3JvdXAmJm4ud2FzU3ViR3JhcGhFeHBhbmRlZCYmKG4ud2FzU3ViR3JhcGhFeHBhbmRlZD0hMSxuLkVUKHQsaSxlKSksbiBpbnN0YW5jZW9mIE5vZGUpbi5pbnZhbGlkYXRlQ29ubmVjdGVkTGlua3ModCk7ZWxzZSBpZihuIGluc3RhbmNlb2YgTGluayl7Y29uc3Qgbz1uLmxhYmVsTm9kZXM7Zm9yKDtvLm5leHQoKTspby52YWx1ZS5pbnZhbGlkYXRlQ29ubmVjdGVkTGlua3ModCl9fXRoaXMuaXNTdWJHcmFwaEV4cGFuZGVkPSEwfWdldCBpc1N1YkdyYXBoRXhwYW5kZWQoKXtyZXR1cm4odGhpcy5CJjUxMikhPT0wfXNldCBpc1N1YkdyYXBoRXhwYW5kZWQodCl7Y29uc3QgaT0odGhpcy5CJjUxMikhPT0wO2lmKGkhPT10KXtEZWJ1ZyYmVS5pKHQsXCJib29sZWFuXCIsR3JvdXAsXCJpc1N1YkdyYXBoRXhwYW5kZWRcIiksdGhpcy5CPXRoaXMuQl41MTI7Y29uc3QgZT10aGlzLmRpYWdyYW07dGhpcy50KFwiaXNTdWJHcmFwaEV4cGFuZGVkXCIsaSx0KTtjb25zdCBzPXRoaXMuc3ViR3JhcGhFeHBhbmRlZENoYW5nZWQ7aWYocyE9PW51bGwpe2xldCBuPSEwO2UhPT1udWxsJiYobj1lLkgsZS5IPSEwKSxzKHRoaXMpLGUhPT1udWxsJiYoZS5IPW4pfWlmKGUhPT1udWxsJiZlLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmcpe3RoaXMuSXQhPT1udWxsJiZ0aGlzLkl0LnUoKSx0aGlzLm1lbWJlclBhcnRzLmVhY2gobj0+bi51cGRhdGVBZG9ybm1lbnRzKCkpO3JldHVybn10P3RoaXMuZXhwYW5kU3ViR3JhcGgoKTp0aGlzLmNvbGxhcHNlU3ViR3JhcGgoKX19Z2V0IHdhc1N1YkdyYXBoRXhwYW5kZWQoKXtyZXR1cm4odGhpcy5CJjEwMjQpIT09MH1zZXQgd2FzU3ViR3JhcGhFeHBhbmRlZCh0KXtjb25zdCBpPSh0aGlzLkImMTAyNCkhPT0wO2khPT10JiYoRGVidWcmJlUuaSh0LFwiYm9vbGVhblwiLEdyb3VwLFwid2FzU3ViR3JhcGhFeHBhbmRlZFwiKSx0aGlzLkI9dGhpcy5CXjEwMjQsdGhpcy50KFwid2FzU3ViR3JhcGhFeHBhbmRlZFwiLGksdCkpfWdldCBzdWJHcmFwaEV4cGFuZGVkQ2hhbmdlZCgpe3JldHVybiB0aGlzLlZ0IT09bnVsbD90aGlzLlZ0LlN5Om51bGx9c2V0IHN1YkdyYXBoRXhwYW5kZWRDaGFuZ2VkKHQpe2NvbnN0IGk9dGhpcy5zdWJHcmFwaEV4cGFuZGVkQ2hhbmdlZDtpIT09dCYmKHQhPT1udWxsJiZVLlAodCxHcm91cCxcInN1YkdyYXBoRXhwYW5kZWRDaGFuZ2VkXCIpLHRoaXMuZGwoKS5TeT10LHRoaXMudChcInN1YkdyYXBoRXhwYW5kZWRDaGFuZ2VkXCIsaSx0KSl9bW92ZSh0LGkpe2k9PT12b2lkIDAmJihpPSExKTtjb25zdCBlPWk/dGhpcy5sb2NhdGlvbjp0aGlzLnBvc2l0aW9uLHM9ZS54LG49ZS55LG89dC54LHI9dC55O2lmKChzPT09b3x8aXNOYU4ocykmJmlzTmFOKG8pKSYmKG49PT1yfHxpc05hTihuKSYmaXNOYU4ocikpKXJldHVybjtjb25zdCBsPW8tKGlzTmFOKHMpPzA6cyksaD1yLShpc05hTihuKT8wOm4pLGY9UG9pbnQuYSgpO3N1cGVyLm1vdmUodCxpKTtjb25zdCBhPW5ldyBHU2V0LHU9dGhpcy5maW5kU3ViR3JhcGhQYXJ0cygpLml0ZXJhdG9yO2Zvcig7dS5uZXh0KCk7KXtjb25zdCBkPXUudmFsdWU7ZCBpbnN0YW5jZW9mIExpbmsmJihkLnN1c3BlbmRzUm91dGluZyYmYS5hZGQoZCksISghZC5MZSYmKGQuZnJvbU5vZGU9PT10aGlzfHxkLnRvTm9kZT09PXRoaXMpKSYmKGQuc3VzcGVuZHNSb3V0aW5nPSEwKSl9Zm9yKHUucmVzZXQoKTt1Lm5leHQoKTspe2NvbnN0IGQ9dS52YWx1ZTtpZihkLkZsKCl8fGQgaW5zdGFuY2VvZiBOb2RlJiZkLmlzTGlua0xhYmVsKWNvbnRpbnVlO2NvbnN0IG09ZC5wb3NpdGlvbixnPWQubG9jYXRpb247bS5pc1JlYWwoKT8oZi54PW0ueCtsLGYueT1tLnkraCxkLnBvc2l0aW9uPWYpOmcuaXNSZWFsKCkmJihmLng9Zy54K2wsZi55PWcueStoLGQubG9jYXRpb249Zil9Zm9yKHUucmVzZXQoKTt1Lm5leHQoKTspe2NvbnN0IGQ9dS52YWx1ZTtpZighKGQgaW5zdGFuY2VvZiBMaW5rKXx8KGQuc3VzcGVuZHNSb3V0aW5nPWEuaGFzKGQpLCFkLkxlJiYoZC5mcm9tTm9kZT09PXRoaXN8fGQudG9Ob2RlPT09dGhpcykpKWNvbnRpbnVlO2NvbnN0IG09ZC5wb3NpdGlvbjtmLng9bS54K2wsZi55PW0ueStoLGYuaXNSZWFsKCk/ZC5tb3ZlKGYpOmQuaW52YWxpZGF0ZVJvdXRlKCl9UG9pbnQubyhmKX1XTygpe3JldHVybih0aGlzLkImNjU1MzYpIT09MH1XQSh0KXsodGhpcy5CJjY1NTM2KSE9PTAhPT10JiYodGhpcy5CPXRoaXMuQl42NTUzNil9Z2V0IHlhKCl7cmV0dXJuKHRoaXMuQiYzMjc2OCkhPT0wfXNldCB5YSh0KXsodGhpcy5CJjMyNzY4KSE9PTAhPT10JiYodGhpcy5CPXRoaXMuQl4zMjc2OCl9fWNsYXNzIFBsYWNlaG9sZGVyIGV4dGVuZHMgR3JhcGhPYmplY3R7ZWk7SGQ7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLmVpPU1hcmdpbi5YZyx0aGlzLkhkPW5ldyBSZWN0KE5hTixOYU4sTmFOLE5hTiksdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfWNsb25lUHJvdGVjdGVkKHQpe3N1cGVyLmNsb25lUHJvdGVjdGVkKHQpLHQuZWk9dGhpcy5laS5OKCksdC5IZD10aGlzLkhkLmNvcHkoKX1waCh0KXtpZih0aGlzLmJhY2tncm91bmQ9PT1udWxsKXJldHVybiExO2NvbnN0IGk9dGhpcy5uYXR1cmFsQm91bmRzO3JldHVybiBSZWN0LmNvbnRhaW5zKDAsMCxpLndpZHRoLGkuaGVpZ2h0LHQueCx0LnkpfWVkKHQsaSxlLHMpe2NvbnN0IG49dGhpcy5wYXJ0O2lmKChuPT09bnVsbHx8IShuIGluc3RhbmNlb2YgR3JvdXApJiYhKG4gaW5zdGFuY2VvZiBBZG9ybm1lbnQpKSYmVS5uKFwiUGxhY2Vob2xkZXIgaXMgbm90IGluc2lkZSBhIEdyb3VwIG9yIEFkb3JubWVudC5cIiksbiBpbnN0YW5jZW9mIEdyb3VwKXtjb25zdCBvPXRoaXMuY29tcHV0ZUJvcmRlcih0aGlzLkhkKSxyPXRoaXMubWluU2l6ZSxsPWlzRmluaXRlKHIud2lkdGgpP01hdGgubWF4KHIud2lkdGgsby53aWR0aCk6by53aWR0aCxoPWlzRmluaXRlKHIuaGVpZ2h0KT9NYXRoLm1heChyLmhlaWdodCxvLmhlaWdodCk6by5oZWlnaHQsZj10aGlzLnFpO2YuVm4obHx8MCxofHwwKSx0aGlzLl9uKDAsMCxmLndpZHRoLGYuaGVpZ2h0KTtjb25zdCBhPW4ubWVtYmVyUGFydHM7bGV0IGM9ITE7Zm9yKDthLm5leHQoKTspaWYoYS52YWx1ZS5pc1Zpc2libGUoKSl7Yz0hMDticmVha31jb25zdCB1PW4uZGlhZ3JhbTtpZihjJiZ1IT09bnVsbCYmIXUuYW5pbWF0aW9uTWFuYWdlci5ITShuKSYmIWlzTmFOKG8ueCkmJiFpc05hTihvLnkpKXtjb25zdCBkPVBvaW50LmEoKTtkLnNldFJlY3RTcG90KG8sbi5sb2NhdGlvblNwb3QpLG4ubG9jYXRpb249ZCxQb2ludC5vKGQpfX1lbHNle2NvbnN0IG89bixyPXRoaXMucWksbD10aGlzLmVpLGg9bC5sZWZ0K2wucmlnaHQsZj1sLnRvcCtsLmJvdHRvbSxhPW8uYWRvcm5lZE9iamVjdCxjPWEuZ2V0RG9jdW1lbnRBbmdsZSgpO28uYW5nbGU9YztsZXQgdT0wO2EgaW5zdGFuY2VvZiBTaGFwZSYmKHU9YS5zdHJva2VXaWR0aCk7Y29uc3QgZD1hLmdldERvY3VtZW50U2NhbGUoKSxtPWEubmF0dXJhbEJvdW5kcyxnPShtLndpZHRoK3UpKmQscD0obS5oZWlnaHQrdSkqZDtpZihvLnR5cGUhPT1QYW5lbC5MaW5rKXtjb25zdCB3PW8uY2F0ZWdvcnk9PT1cIlNlbGVjdGlvblwiP1Nwb3QuVG9wTGVmdDpvLmxvY2F0aW9uU3BvdCx4PWEuZ2V0RG9jdW1lbnRQb2ludCh3LFBvaW50LmEoKSk7by5sb2NhdGlvbj14LFBvaW50Lm8oeCl9aWYoIWlzTmFOKGcpJiYhaXNOYU4ocCkpci5WbihnK2h8fDAscCtmfHwwKSx0aGlzLl9uKC1sLmxlZnQsLWwudG9wLHIud2lkdGgsci5oZWlnaHQpO2Vsc2V7Y29uc3Qgdz1hLmdldERvY3VtZW50UG9pbnQoU3BvdC5Ub3BMZWZ0LFBvaW50LmEoKSkseD1SZWN0Lksody54LHcueSwwLDApO3gudW5pb25Qb2ludChhLmdldERvY3VtZW50UG9pbnQoU3BvdC5Cb3R0b21SaWdodCx3KSkseC51bmlvblBvaW50KGEuZ2V0RG9jdW1lbnRQb2ludChTcG90LlRvcFJpZ2h0LHcpKSx4LnVuaW9uUG9pbnQoYS5nZXREb2N1bWVudFBvaW50KFNwb3QuQm90dG9tTGVmdCx3KSksci5Wbih4LndpZHRoK2h8fDAseC5oZWlnaHQrZnx8MCksdGhpcy5fbigtbC5sZWZ0LC1sLnRvcCxyLndpZHRoLHIuaGVpZ2h0KSxQb2ludC5vKHcpLFJlY3Qubyh4KX19fXloKHQsaSxlLHMpe3RoaXMuYWN0dWFsQm91bmRzLnModCxpLGUscyl9Y29tcHV0ZUJvcmRlcih0KXtjb25zdCBpPXRoaXMucGFydCxlPWkuZGlhZ3JhbSxzPWU9PT1udWxsfHwhZS5hbmltYXRpb25NYW5hZ2VyLmlzQW5pbWF0aW5nO2lmKGUhPT1udWxsJiZpIGluc3RhbmNlb2YgR3JvdXAmJiFpLmxheWVyLmlzVGVtcG9yYXJ5JiZpLmNvbXB1dGVzQm91bmRzQWZ0ZXJEcmFnJiZ0aGlzLkhkLmlzUmVhbCgpKXtjb25zdCBsPWUudG9vbE1hbmFnZXIuZmluZFRvb2woXCJEcmFnZ2luZ1wiKTtpZihsPT09ZS5jdXJyZW50VG9vbCl7Y29uc3QgaD1sLmNvbXB1dGVCb3JkZXIoaSx0aGlzLkhkLHQpO2lmKGghPT1udWxsKXJldHVybiBofX1jb25zdCBuPVJlY3QuYSgpLG89dGhpcy5jb21wdXRlTWVtYmVyQm91bmRzKG4pLHI9dGhpcy5laTtyZXR1cm4gaSBpbnN0YW5jZW9mIEdyb3VwJiYhaS5pc1N1YkdyYXBoRXhwYW5kZWQ/dC5zKG8ueC1yLmxlZnQsby55LXIudG9wLDAsMCk6dC5zKG8ueC1yLmxlZnQsby55LXIudG9wLE1hdGgubWF4KG8ud2lkdGgrci5sZWZ0K3IucmlnaHQsMCksTWF0aC5tYXgoby5oZWlnaHQrci50b3Arci5ib3R0b20sMCkpLFJlY3QubyhuKSxzJiZpIGluc3RhbmNlb2YgR3JvdXAmJmkuY29tcHV0ZXNCb3VuZHNJbmNsdWRpbmdMb2NhdGlvbiYmaS5sb2NhdGlvbi5pc1JlYWwoKSYmdC51bmlvblBvaW50KGkubG9jYXRpb24pLHR9Y29tcHV0ZU1lbWJlckJvdW5kcyh0KXtpZighKHRoaXMucGFydCBpbnN0YW5jZW9mIEdyb3VwKSlyZXR1cm4gdC5zKDAsMCwwLDApLHQ7Y29uc3QgaT10aGlzLnBhcnQ7bGV0IGU9MS8wLHM9MS8wLG49LTEvMCxvPS0xLzA7Y29uc3Qgcj1pLm1lbWJlclBhcnRzO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7aWYoIWwuaXNWaXNpYmxlKCl8fGwgaW5zdGFuY2VvZiBMaW5rJiYoIWkuY29tcHV0ZXNCb3VuZHNJbmNsdWRpbmdMaW5rc3x8bC5FbygpfHxsLmZyb21Ob2RlPT09aXx8bC50b05vZGU9PT1pKSljb250aW51ZTtjb25zdCBoPWwuYWN0dWFsQm91bmRzO2gubGVmdDxlJiYoZT1oLmxlZnQpLGgudG9wPHMmJihzPWgudG9wKSxoLnJpZ2h0Pm4mJihuPWgucmlnaHQpLGguYm90dG9tPm8mJihvPWguYm90dG9tKX1pZighaXNGaW5pdGUoZSl8fCFpc0Zpbml0ZShzKSl7Y29uc3QgbD1pLmxvY2F0aW9uO3QucyhsLngsbC55LDAsMCl9ZWxzZSB0LnMoZSxzLG4tZSxvLXMpO3JldHVybiB0fWdldCBwYWRkaW5nKCl7cmV0dXJuIHRoaXMuZWl9c2V0IHBhZGRpbmcodCl7dHlwZW9mIHQ9PVwibnVtYmVyXCI/dD1uZXcgTWFyZ2luKHQpOlUuZSh0LE1hcmdpbixQbGFjZWhvbGRlcixcInBhZGRpbmdcIik7Y29uc3QgaT10aGlzLmVpO2kuZXF1YWxzKHQpfHwodD10Lk4oKSx0aGlzLmVpPXQsdGhpcy50KFwicGFkZGluZ1wiLGksdCksdGhpcy51KCkpfX1jbGFzcyBMYXlvdXR7Qzt3YTtxZDtQcjtXZDtqZDtSbztwbDt2ZDtKZDttbztjb25zdHJ1Y3Rvcih0KXtHU2V0LkppKHRoaXMpLHRoaXMuQz1udWxsLHRoaXMud2E9bnVsbCx0aGlzLnFkPSEwLHRoaXMuUHI9ITAsdGhpcy5XZD0hMSx0aGlzLmpkPW5ldyBQb2ludCgwLDApLnAoKSx0aGlzLlJvPSEwLHRoaXMucGw9bnVsbCx0aGlzLnZkPW51bGwsdGhpcy5KZD0hMSx0aGlzLm1vPW51bGwsdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfWNsb25lUHJvdGVjdGVkKHQpe3QucWQ9dGhpcy5xZCx0LlByPXRoaXMuUHIsdC5XZD10aGlzLldkLHQuamQuYyh0aGlzLmpkKSx0LlJvPXRoaXMuUm8sdC5wbD10aGlzLnBsLHQudmQ9dGhpcy52ZCx0LkpkPSEwfWNvcHkoKXtjb25zdCB0PW5ldyB0aGlzLmNvbnN0cnVjdG9yO3JldHVybiB0aGlzLmNsb25lUHJvdGVjdGVkKHQpLHR9YWkodCl7VS5ocih0aGlzLHQpfXRvU3RyaW5nKCl7bGV0IHQ9VS5Cbih0aGlzLmNvbnN0cnVjdG9yKTtyZXR1cm4gdCs9XCIoXCIsdGhpcy5ncm91cCE9PW51bGwmJih0Kz1cIiBpbiBcIit0aGlzLmdyb3VwKSx0aGlzLmRpYWdyYW0hPT1udWxsJiYodCs9XCIgZm9yIFwiK3RoaXMuZGlhZ3JhbSksdCs9XCIpXCIsdH1nZXQgZGlhZ3JhbSgpe3JldHVybiB0aGlzLkN9c2V0IGRpYWdyYW0odCl7RGVidWcmJnQhPT1udWxsJiZVLmUodCxEaWFncmFtLExheW91dCxcImRpYWdyYW1cIiksdGhpcy5DPXR9Z2V0IGdyb3VwKCl7cmV0dXJuIHRoaXMud2F9c2V0IGdyb3VwKHQpe3RoaXMud2EhPT10JiYoRGVidWcmJnQhPT1udWxsJiZVLmUodCxHcm91cCxMYXlvdXQsXCJncm91cFwiKSx0aGlzLndhPXQsdCE9PW51bGwmJih0aGlzLkM9dC5kaWFncmFtKSl9Z2V0IGlzT25nb2luZygpe3JldHVybiB0aGlzLnFkfXNldCBpc09uZ29pbmcodCl7dGhpcy5xZCE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXlvdXQsXCJpc09uZ29pbmdcIiksdGhpcy5xZD10KX1nZXQgaXNJbml0aWFsKCl7cmV0dXJuIHRoaXMuUHJ9c2V0IGlzSW5pdGlhbCh0KXtVLmkodCxcImJvb2xlYW5cIixMYXlvdXQsXCJpc0luaXRpYWxcIiksdGhpcy5Qcj10LHR8fCh0aGlzLkpkPSEwKX1nZXQgaXNWaWV3cG9ydFNpemVkKCl7cmV0dXJuIHRoaXMuV2R9c2V0IGlzVmlld3BvcnRTaXplZCh0KXt0aGlzLldkIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLExheW91dCxcImlzVmlld3BvcnRTaXplZFwiKSx0aGlzLldkPXQsdCYmdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBpc1JvdXRpbmcoKXtyZXR1cm4gdGhpcy5Sb31zZXQgaXNSb3V0aW5nKHQpe3RoaXMuUm8hPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTGF5b3V0LFwiaXNSb3V0aW5nXCIpLHRoaXMuUm89dCl9Z2V0IGlzUmVhbHRpbWUoKXtyZXR1cm4gdGhpcy5wbH1zZXQgaXNSZWFsdGltZSh0KXt0aGlzLnBsIT09dCYmKHQhPT1udWxsJiZVLmkodCxcImJvb2xlYW5cIixMYXlvdXQsXCJpc1JlYWx0aW1lXCIpLHRoaXMucGw9dCl9Z2V0IGlzVmFsaWRMYXlvdXQoKXtyZXR1cm4gdGhpcy5KZH1zZXQgaXNWYWxpZExheW91dCh0KXtpZih0aGlzLkpkIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLExheW91dCxcImlzVmFsaWRMYXlvdXRcIiksdGhpcy5KZD10LCF0KSl7Y29uc3QgaT10aGlzLmRpYWdyYW07aSE9PW51bGwmJihpLnFyPSEwKX19aW52YWxpZGF0ZUxheW91dCgpe2lmKHRoaXMuaXNWYWxpZExheW91dCl7Y29uc3QgdD10aGlzLmRpYWdyYW07aWYodD09PW51bGx8fHQudW5kb01hbmFnZXIuaXNVbmRvaW5nUmVkb2luZylyZXR1cm47Y29uc3QgaT10LmFuaW1hdGlvbk1hbmFnZXI7aWYoaS5pc1RpY2tpbmcpcmV0dXJuO2kuZGVmYXVsdEFuaW1hdGlvbi5pc0FuaW1hdGluZyYmaS5zdG9wQW5pbWF0aW9uKCksKHRoaXMuaXNPbmdvaW5nJiZ0LnFofHx0aGlzLmlzSW5pdGlhbCYmIXQucWgpJiYodGhpcy5pc1ZhbGlkTGF5b3V0PSExLHQucmVxdWVzdFVwZGF0ZSgpKX19Z2V0IG5ldHdvcmsoKXtyZXR1cm4gdGhpcy5tb31zZXQgbmV0d29yayh0KXt0aGlzLm1vIT09dCYmKERlYnVnJiZ0IT09bnVsbCYmVS5lKHQsTGF5b3V0TmV0d29yayxMYXlvdXQsXCJuZXR3b3JrXCIpLHRoaXMubW89dCx0IT09bnVsbCYmKHQubGF5b3V0PXRoaXMpKX1jcmVhdGVOZXR3b3JrKCl7cmV0dXJuIG5ldyBMYXlvdXROZXR3b3JrKHRoaXMpfW1ha2VOZXR3b3JrKHQpe2NvbnN0IGk9dGhpcy5jcmVhdGVOZXR3b3JrKCk7cmV0dXJuIHQgaW5zdGFuY2VvZiBEaWFncmFtPyhpLmFkZFBhcnRzKHQubm9kZXMsITApLGkuYWRkUGFydHModC5saW5rcywhMCkpOnQgaW5zdGFuY2VvZiBHcm91cD9pLmFkZFBhcnRzKHQubWVtYmVyUGFydHMpOmkuYWRkUGFydHModC5pdGVyYXRvciksaX11cGRhdGVQYXJ0cygpe3RoaXMuaXNWYWxpZExheW91dD0hMDtsZXQgdD10aGlzLmRpYWdyYW07aWYodD09PW51bGwmJnRoaXMubmV0d29yayE9PW51bGwpe2NvbnN0IGk9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBzPWkudmFsdWUubm9kZTtpZihzIT09bnVsbCYmKHQ9cy5kaWFncmFtLHQhPT1udWxsKSlicmVha319dHJ5e3QhPT1udWxsJiZ0LnN0YXJ0VHJhbnNhY3Rpb24oXCJMYXlvdXRcIiksdGhpcy5jb21taXRMYXlvdXQoKX1maW5hbGx5e3QhPT1udWxsJiZ0LmNvbW1pdFRyYW5zYWN0aW9uKFwiTGF5b3V0XCIpfX1jb21taXRMYXlvdXQoKXtpZih0aGlzLm5ldHdvcms9PT1udWxsKXJldHVybjtjb25zdCB0PXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl0LnZhbHVlLmNvbW1pdCgpO2lmKHRoaXMuaXNSb3V0aW5nKXtjb25zdCBpPXRoaXMubmV0d29yay5lZGdlcy5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOylpLnZhbHVlLmNvbW1pdCgpfX1kb0xheW91dCh0KXtEZWJ1ZyYmdD09PW51bGwmJlUubihcIkxheW91dC5kb0xheW91dChjb2xsZWN0aW9uKSBhcmd1bWVudCBtdXN0IG5vdCBiZSBudWxsIGJ1dCBhIERpYWdyYW0sIGEgR3JvdXAsIG9yIGFuIEl0ZXJhYmxlIG9mIFBhcnRzXCIpO2NvbnN0IGk9bmV3IEdTZXQ7aWYodCBpbnN0YW5jZW9mIERpYWdyYW0/KHRoaXMuVGgoaSx0Lm5vZGVzLCEwLHRoaXMueWEsITAsITEsITApLHRoaXMuVGgoaSx0LnBhcnRzLCEwLHRoaXMueWEsITAsITEsITApKTp0IGluc3RhbmNlb2YgR3JvdXA/dGhpcy5UaChpLHQubWVtYmVyUGFydHMsITEsdGhpcy55YSwhMCwhMSwhMCk6aS5hZGRBbGwodC5pdGVyYXRvciksaS5jb3VudD4wKXtjb25zdCBzPXRoaXMuZGlhZ3JhbTtzIT09bnVsbCYmcy5zdGFydFRyYW5zYWN0aW9uKFwiTGF5b3V0XCIpLHRoaXMuZG9NaW5pbWFsTm9OZXR3b3JrTGF5b3V0KGkpLHMhPT1udWxsJiZzLmNvbW1pdFRyYW5zYWN0aW9uKFwiTGF5b3V0XCIpfXRoaXMuaXNWYWxpZExheW91dD0hMH1kb01pbmltYWxOb05ldHdvcmtMYXlvdXQodCl7Y29uc3QgaT10LmNvdW50LGU9TWF0aC5jZWlsKE1hdGguc3FydChpKSk7dGhpcy5hcnJhbmdlbWVudE9yaWdpbj10aGlzLmluaXRpYWxPcmlnaW4odGhpcy5hcnJhbmdlbWVudE9yaWdpbik7Y29uc3Qgcz10aGlzLmFycmFuZ2VtZW50T3JpZ2luLngsbj10aGlzLmFycmFuZ2VtZW50T3JpZ2luLnk7bGV0IG89cyxyPW4sbD0wLGg9MDtjb25zdCBmPXQuaXRlcmF0b3I7Zm9yKDtmLm5leHQoKTspe2NvbnN0IGE9Zi52YWx1ZTthLmVuc3VyZUJvdW5kcygpO2NvbnN0IGM9YS5tZWFzdXJlZEJvdW5kcyx1PWMud2lkdGgsZD1jLmhlaWdodDthLm1vdmVUbyhvLHIpLGEgaW5zdGFuY2VvZiBHcm91cCYmKGEueWE9ITEpLG8rPU1hdGgubWF4KHUsNTApKzIwLGg9TWF0aC5tYXgoaCxNYXRoLm1heChkLDUwKSksbD49ZS0xPyhsPTAsbz1zLHIrPWgrMjAsaD0wKTpsKyt9fXlhKHQpe3JldHVybiEhKCF0LmxvY2F0aW9uLmlzUmVhbCgpJiYhdC5wb3NpdGlvbi5pc1JlYWwoKXx8dCBpbnN0YW5jZW9mIEdyb3VwJiZ0LnlhKX1UaCh0LGksZSxzLG4sbyxyKXtjb25zdCBsPWkuaXRlcmF0b3I7Zm9yKDtsLm5leHQoKTspe2NvbnN0IGg9bC52YWx1ZTtpZighKGUmJiFoLmlzVG9wTGV2ZWwpJiYhKHMhPT1udWxsJiYhcyhoKSkmJmguY2FuTGF5b3V0KCkpaWYobiYmaCBpbnN0YW5jZW9mIE5vZGUpe2lmKGguaXNMaW5rTGFiZWwpY29udGludWU7aCBpbnN0YW5jZW9mIEdyb3VwJiZoLmxheW91dD09PW51bGw/dGhpcy5UaCh0LGgubWVtYmVyUGFydHMsITEscyxuLG8scik6KGguZW5zdXJlQm91bmRzKCksdC5hZGQoaCkpfWVsc2UgbyYmaCBpbnN0YW5jZW9mIExpbms/dC5hZGQoaCk6ciYmaC5DZSgpJiYhKGggaW5zdGFuY2VvZiBOb2RlKSYmKGguZW5zdXJlQm91bmRzKCksdC5hZGQoaCkpfX1nZXRMYXlvdXRCb3VuZHModCxpKXtjb25zdCBlPXRoaXMuYm91bmRzQ29tcHV0YXRpb247cmV0dXJuIGUhPT1udWxsPyhpfHwoaT1uZXcgUmVjdCksZSh0LHRoaXMsaSkpOiFpJiZ0Lm1hcmdpbi5lcXVhbFRvKDAsMCwwLDApP3QuYWN0dWFsQm91bmRzOihpfHwoaT1uZXcgUmVjdCksaS5zZXQodC5hY3R1YWxCb3VuZHMpLGkuYWRkTWFyZ2luKHQubWFyZ2luKSxpKX1nZXQgYm91bmRzQ29tcHV0YXRpb24oKXtyZXR1cm4gdGhpcy52ZH1zZXQgYm91bmRzQ29tcHV0YXRpb24odCl7dGhpcy52ZCE9PXQmJih0IT09bnVsbCYmVS5QKHQsTGF5b3V0LFwiYm91bmRzQ29tcHV0YXRpb25cIiksdGhpcy52ZD10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1jb2xsZWN0UGFydHModCl7Y29uc3QgaT1uZXcgR1NldDtyZXR1cm4gdCBpbnN0YW5jZW9mIERpYWdyYW0/KHRoaXMuVGgoaSx0Lm5vZGVzLCEwLG51bGwsITAsITAsITApLHRoaXMuVGgoaSx0LmxpbmtzLCEwLG51bGwsITAsITAsITApLHRoaXMuVGgoaSx0LnBhcnRzLCEwLG51bGwsITAsITAsITApKTp0IGluc3RhbmNlb2YgR3JvdXA/dGhpcy5UaChpLHQubWVtYmVyUGFydHMsITEsbnVsbCwhMCwhMCwhMCk6dGhpcy5UaChpLHQuaXRlcmF0b3IsITEsbnVsbCwhMCwhMCwhMCksaX1nZXQgYXJyYW5nZW1lbnRPcmlnaW4oKXtyZXR1cm4gdGhpcy5qZH1zZXQgYXJyYW5nZW1lbnRPcmlnaW4odCl7RGVidWcmJlUuZSh0LFBvaW50LExheW91dCxcImFycmFuZ2VtZW50T3JpZ2luXCIpLHRoaXMuamQuZXF1YWxzKHQpfHwodGhpcy5qZC5jKHQpLHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1pbml0aWFsT3JpZ2luKHQpe2NvbnN0IGk9dGhpcy5ncm91cDtpZihpIT09bnVsbClpZihpLmhhc1BsYWNlaG9sZGVyKCkpe2NvbnN0IGU9aS5wbGFjZWhvbGRlcixzPWUuZ2V0RG9jdW1lbnRQb2ludChTcG90LlRvcExlZnQpOyhpc05hTihzLngpfHxpc05hTihzLnkpKSYmcy5zZXQodCk7Y29uc3Qgbj1lLnBhZGRpbmc7cmV0dXJuIHMueCs9bi5sZWZ0LHMueSs9bi50b3Asc31lbHNle2NvbnN0IGU9aS5wb3NpdGlvbi5jb3B5KCk7cmV0dXJuKGlzTmFOKGUueCl8fGlzTmFOKGUueSkpJiZlLnNldCh0KSxlfXJldHVybiB0fX1jbGFzcyBMYXlvdXROZXR3b3Jre29lO3BvO0NuO0F5O0x5O2NvbnN0cnVjdG9yKHQpe0dTZXQuSmkodGhpcyksRGVidWcmJiF0JiZVLm4oXCJMYXlvdXROZXR3b3JrIGNvbnN0cnVjdG9yIHJlcXVpcmVzIG5vbi1udWxsIExheW91dCBhcmd1bWVudFwiKSx0aGlzLm9lPXQsdGhpcy5wbz1uZXcgR1NldCx0aGlzLkNuPW5ldyBHU2V0LHRoaXMuQXk9bmV3IEdNYXAsdGhpcy5MeT1uZXcgR01hcH1jbGVhcigpe2lmKHRoaXMucG8pe2NvbnN0IHQ9dGhpcy5wby5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl0LnZhbHVlLmNsZWFyKCl9aWYodGhpcy5Dbil7Y29uc3QgdD10aGlzLkNuLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXQudmFsdWUuY2xlYXIoKX10aGlzLnBvPW5ldyBHU2V0LHRoaXMuQ249bmV3IEdTZXQsdGhpcy5BeT1uZXcgR01hcCx0aGlzLkx5PW5ldyBHTWFwfXRvU3RyaW5nKHQpe3Q9PT12b2lkIDAmJih0PTApO2xldCBpPVwiTGF5b3V0TmV0d29ya1wiKyh0aGlzLmxheW91dCE9PW51bGw/XCIoXCIrdGhpcy5sYXlvdXQudG9TdHJpbmcoKStcIilcIjpcIlwiKTtpZih0PD0wKXJldHVybiBpO2lmKGkrPVwiIHZlcnRleGVzOiBcIit0aGlzLnBvLmNvdW50K1wiIGVkZ2VzOiBcIit0aGlzLkNuLmNvdW50LHQ+MSl7Y29uc3QgZT10aGlzLnBvLml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBuPWUudmFsdWU7aSs9YFxuICAgIGArbi50b1N0cmluZyh0LTEpfWNvbnN0IHM9dGhpcy5Dbi5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2krPWBcbiAgICBgK24udG9TdHJpbmcodC0xKX19cmV0dXJuIGl9Z2V0IGxheW91dCgpe3JldHVybiB0aGlzLm9lfXNldCBsYXlvdXQodCl7dCE9PW51bGwmJih0aGlzLm9lPXQpfWdldCB2ZXJ0ZXhlcygpe3JldHVybiB0aGlzLnBvfWdldCBlZGdlcygpe3JldHVybiB0aGlzLkNufWNyZWF0ZVZlcnRleCgpe3JldHVybiBuZXcgTGF5b3V0VmVydGV4KHRoaXMpfWNyZWF0ZUVkZ2UoKXtyZXR1cm4gbmV3IExheW91dEVkZ2UodGhpcyl9YWRkUGFydHModCxpLGUpe2lmKHQ9PT1udWxsKXJldHVybjtpPT09dm9pZCAwJiYoaT0hMSksVS5pKGksXCJib29sZWFuXCIsTGF5b3V0TmV0d29yayxcImFkZFBhcnRzOnRvcGxldmVsb25seVwiKSxlPT09dm9pZCAwJiYoZT1udWxsKSxlPT09bnVsbCYmKGU9bj0+e2lmKG4gaW5zdGFuY2VvZiBOb2RlKXJldHVybiFuLmlzTGlua0xhYmVsO2lmKG4gaW5zdGFuY2VvZiBMaW5rKXtjb25zdCBvPW4uZnJvbU5vZGU7aWYobz09PW51bGx8fG8uaXNMaW5rTGFiZWwpcmV0dXJuITE7Y29uc3Qgcj1uLnRvTm9kZTtyZXR1cm4hKHI9PT1udWxsfHxyLmlzTGlua0xhYmVsKX1yZXR1cm4hMX0pO2NvbnN0IHM9dC5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2lmKG4gaW5zdGFuY2VvZiBOb2RlJiYhKGkmJiFuLmlzVG9wTGV2ZWwpJiZuLmNhbkxheW91dCgpJiZlKG4pKWlmKG4gaW5zdGFuY2VvZiBHcm91cCYmbi5sYXlvdXQ9PT1udWxsKXRoaXMuYWRkUGFydHMobi5tZW1iZXJQYXJ0cywhMSk7ZWxzZXtpZih0aGlzLmZpbmRWZXJ0ZXgobikhPT1udWxsKWNvbnRpbnVlO2NvbnN0IG89dGhpcy5jcmVhdGVWZXJ0ZXgoKTtvLm5vZGU9bix0aGlzLmFkZFZlcnRleChvKX19Zm9yKHMucmVzZXQoKTtzLm5leHQoKTspe2NvbnN0IG49cy52YWx1ZTtpZighKG4gaW5zdGFuY2VvZiBMaW5rKXx8aSYmIW4uaXNUb3BMZXZlbHx8IW4uY2FuTGF5b3V0KCl8fCFlKG4pfHx0aGlzLmZpbmRFZGdlKG4pIT09bnVsbCljb250aW51ZTtjb25zdCBvPW4uZnJvbU5vZGUscj1uLnRvTm9kZTtpZihvPT09bnVsbHx8cj09PW51bGx8fG89PT1yKWNvbnRpbnVlO2NvbnN0IGw9dGhpcy5maW5kR3JvdXBWZXJ0ZXgobyksaD10aGlzLmZpbmRHcm91cFZlcnRleChyKTt0aGlzLmxpbmtWZXJ0ZXhlcyhsLGgsbil9fWZpbmRHcm91cFZlcnRleCh0KXtjb25zdCBpPXQuZmluZFZpc2libGVOb2RlKCk7aWYoaT09PW51bGwpcmV0dXJuIG51bGw7bGV0IGU9dGhpcy5maW5kVmVydGV4KGkpO2lmKGUhPT1udWxsKXJldHVybiBlO2xldCBzPWkuY29udGFpbmluZ0dyb3VwO2Zvcig7cyE9PW51bGw7KXtpZihlPXRoaXMuZmluZFZlcnRleChzKSxlIT09bnVsbClyZXR1cm4gZTtzPXMuY29udGFpbmluZ0dyb3VwfXJldHVybiBudWxsfWFkZFZlcnRleCh0KXtEZWJ1ZyYmVS5lKHQsTGF5b3V0VmVydGV4LExheW91dE5ldHdvcmssXCJhZGRWZXJ0ZXg6dmVydGV4XCIpLHRoaXMucG8uYWRkKHQpO2NvbnN0IGk9dC5ub2RlO2khPT1udWxsJiZ0aGlzLkF5LnNldChpLHQpLHQubmV0d29yaz10aGlzfWFkZE5vZGUodCl7RGVidWcmJlUuZSh0LE5vZGUsTGF5b3V0TmV0d29yayxcImFkZE5vZGU6bm9kZVwiKTtsZXQgaT10aGlzLmZpbmRWZXJ0ZXgodCk7cmV0dXJuIGk9PT1udWxsJiYoaT10aGlzLmNyZWF0ZVZlcnRleCgpLGkubm9kZT10LHRoaXMuYWRkVmVydGV4KGkpKSxpfWRlbGV0ZVZlcnRleCh0KXtpZihEZWJ1ZyYmVS5lKHQsTGF5b3V0VmVydGV4LExheW91dE5ldHdvcmssXCJkZWxldGVWZXJ0ZXg6dmVydGV4XCIpLHRoaXMuQlQodCkpe2xldCBpPXQuUW87Zm9yKGxldCBlPWkuY291bnQtMTtlPj0wO2UtLSl7Y29uc3Qgcz1pLmVsdChlKTt0aGlzLmRlbGV0ZUVkZ2Uocyl9aT10Ll9vO2ZvcihsZXQgZT1pLmNvdW50LTE7ZT49MDtlLS0pe2NvbnN0IHM9aS5lbHQoZSk7dGhpcy5kZWxldGVFZGdlKHMpfX19QlQodCl7Y29uc3QgaT10aGlzLnBvLmRlbGV0ZSh0KTtpZihpKXtjb25zdCBlPXQubm9kZTtlIT09bnVsbCYmdGhpcy5BeS5kZWxldGUoZSl9cmV0dXJuIGl9ZGVsZXRlTm9kZSh0KXtEZWJ1ZyYmVS5lKHQsTm9kZSxMYXlvdXROZXR3b3JrLFwiZGVsZXRlTm9kZTpub2RlXCIpO2NvbnN0IGk9dGhpcy5maW5kVmVydGV4KHQpO2khPT1udWxsJiZ0aGlzLmRlbGV0ZVZlcnRleChpKX1maW5kVmVydGV4KHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsTm9kZSxMYXlvdXROZXR3b3JrLFwiZmluZFZlcnRleDpub2RlXCIpLHRoaXMuQXkuZ2V0KHQpfWFkZEVkZ2UodCl7RGVidWcmJlUuZSh0LExheW91dEVkZ2UsTGF5b3V0TmV0d29yayxcImFkZEVkZ2U6ZWRnZVwiKSx0aGlzLlROKHQpO2NvbnN0IGk9dC50b1ZlcnRleDtpIT09bnVsbCYmaS5hZGRTb3VyY2VFZGdlKHQpO2NvbnN0IGU9dC5mcm9tVmVydGV4O2UhPT1udWxsJiZlLmFkZERlc3RpbmF0aW9uRWRnZSh0KX1UTih0KXt0aGlzLkNuLmFkZCh0KTtjb25zdCBpPXQubGluaztpIT09bnVsbCYmdGhpcy5maW5kRWRnZShpKT09PW51bGwmJnRoaXMuTHkuc2V0KGksdCksdC5uZXR3b3JrPXRoaXN9YWRkTGluayh0KXtEZWJ1ZyYmVS5lKHQsTGluayxMYXlvdXROZXR3b3JrLFwiYWRkTGluazpsaW5rXCIpO2NvbnN0IGk9dC5mcm9tTm9kZSxlPXQudG9Ob2RlO2xldCBzPXRoaXMuZmluZEVkZ2UodCk7cmV0dXJuIHM9PT1udWxsPyhzPXRoaXMuY3JlYXRlRWRnZSgpLHMubGluaz10LGkhPT1udWxsJiYocy5mcm9tVmVydGV4PXRoaXMuYWRkTm9kZShpKSksZSE9PW51bGwmJihzLnRvVmVydGV4PXRoaXMuYWRkTm9kZShlKSksdGhpcy5hZGRFZGdlKHMpKTooaSE9PW51bGw/cy5mcm9tVmVydGV4PXRoaXMuYWRkTm9kZShpKTpzLmZyb21WZXJ0ZXg9bnVsbCxlIT09bnVsbD9zLnRvVmVydGV4PXRoaXMuYWRkTm9kZShlKTpzLnRvVmVydGV4PW51bGwpLHN9ZGVsZXRlRWRnZSh0KXtEZWJ1ZyYmVS5lKHQsTGF5b3V0RWRnZSxMYXlvdXROZXR3b3JrLFwiZGVsZXRlRWRnZTplZGdlXCIpO2NvbnN0IGk9dC50b1ZlcnRleDtpIT09bnVsbCYmaS5kZWxldGVTb3VyY2VFZGdlKHQpO2NvbnN0IGU9dC5mcm9tVmVydGV4O2UhPT1udWxsJiZlLmRlbGV0ZURlc3RpbmF0aW9uRWRnZSh0KSx0aGlzLkROKHQpfUROKHQpe2NvbnN0IGk9dGhpcy5Dbi5kZWxldGUodCk7aWYoaSl7Y29uc3QgZT10Lmxpbms7ZSE9PW51bGwmJnRoaXMuTHkuZGVsZXRlKGUpfXJldHVybiBpfWRlbGV0ZUxpbmsodCl7RGVidWcmJlUuZSh0LExpbmssTGF5b3V0TmV0d29yayxcImRlbGV0ZUxpbms6bGlua1wiKTtjb25zdCBpPXRoaXMuZmluZEVkZ2UodCk7aSE9PW51bGwmJnRoaXMuZGVsZXRlRWRnZShpKX1maW5kRWRnZSh0KXtyZXR1cm4gRGVidWcmJlUuZSh0LExpbmssTGF5b3V0TmV0d29yayxcImZpbmRFZGdlOmxpbmtcIiksdGhpcy5MeS5nZXQodCl9bGlua1ZlcnRleGVzKHQsaSxlKXtpZih0PT09bnVsbHx8aT09PW51bGwpcmV0dXJuIG51bGw7aWYoRGVidWcmJihVLmUodCxMYXlvdXRWZXJ0ZXgsTGF5b3V0TmV0d29yayxcImxpbmtWZXJ0ZXhlczpmcm9tVmVydGV4XCIpLFUuZShpLExheW91dFZlcnRleCxMYXlvdXROZXR3b3JrLFwibGlua1ZlcnRleGVzOnRvVmVydGV4XCIpLGUhPT1udWxsJiZVLmUoZSxMaW5rLExheW91dE5ldHdvcmssXCJsaW5rVmVydGV4ZXM6bGlua1wiKSksdC5uZXR3b3JrPT09dGhpcyYmaS5uZXR3b3JrPT09dGhpcyl7Y29uc3Qgcz10aGlzLmNyZWF0ZUVkZ2UoKTtyZXR1cm4gcy5saW5rPWUscy5mcm9tVmVydGV4PXQscy50b1ZlcnRleD1pLHRoaXMuYWRkRWRnZShzKSxzfXJldHVybiBudWxsfXJldmVyc2VFZGdlKHQpe0RlYnVnJiZVLmUodCxMYXlvdXRFZGdlLExheW91dE5ldHdvcmssXCJyZXZlcnNlRWRnZTplZGdlXCIpO2NvbnN0IGk9dC5mcm9tVmVydGV4LGU9dC50b1ZlcnRleDtpPT09bnVsbHx8ZT09PW51bGx8fChpLmRlbGV0ZURlc3RpbmF0aW9uRWRnZSh0KSxlLmRlbGV0ZVNvdXJjZUVkZ2UodCksdC5yZXZlcnNlRWRnZSgpLGkuYWRkU291cmNlRWRnZSh0KSxlLmFkZERlc3RpbmF0aW9uRWRnZSh0KSl9ZGVsZXRlU2VsZkVkZ2VzKCl7Y29uc3QgdD1VLmx0KCksaT10aGlzLkNuLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBzPWkudmFsdWU7cy5mcm9tVmVydGV4PT09cy50b1ZlcnRleCYmdC5wdXNoKHMpfWNvbnN0IGU9dC5sZW5ndGg7Zm9yKGxldCBzPTA7czxlO3MrKyl0aGlzLmRlbGV0ZUVkZ2UodFtzXSk7VS50dCh0KX1kZWxldGVBcnRpZmljaWFsVmVydGV4ZXMoKXtjb25zdCB0PVUubHQoKSxpPXRoaXMucG8uaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspe2NvbnN0IG89aS52YWx1ZTtvLm5vZGU9PT1udWxsJiZvLmRhdGE9PT1udWxsJiZ0LnB1c2gobyl9bGV0IGU9dC5sZW5ndGg7Zm9yKGxldCBvPTA7bzxlO28rKyl0aGlzLmRlbGV0ZVZlcnRleCh0W29dKTtjb25zdCBzPVUubHQoKSxuPXRoaXMuQ24uaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtvLmxpbms9PT1udWxsJiZvLmRhdGE9PT1udWxsJiZzLnB1c2gobyl9ZT1zLmxlbmd0aDtmb3IobGV0IG89MDtvPGU7bysrKXRoaXMuZGVsZXRlRWRnZShzW29dKTtVLnR0KHQpLFUudHQocyl9ZGVsZXRlVXNlbGVzc0VkZ2VzKCl7Y29uc3QgdD1VLmx0KCksaT10aGlzLkNuLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBzPWkudmFsdWU7KHMuZnJvbVZlcnRleD09PW51bGx8fHMudG9WZXJ0ZXg9PT1udWxsKSYmdC5wdXNoKHMpfWNvbnN0IGU9dC5sZW5ndGg7Zm9yKGxldCBzPTA7czxlO3MrKyl0aGlzLmRlbGV0ZUVkZ2UodFtzXSk7VS50dCh0KX1pc1NpbmdsZXRvbih0KXtyZXR1cm4hKHQuUW8uY291bnQ+MHx8dC5fby5jb3VudD4wKX1zcGxpdEludG9TdWJOZXR3b3Jrcyh0KXt0PT09dm9pZCAwJiYodD0hMCksdCYmKHRoaXMuZGVsZXRlQXJ0aWZpY2lhbFZlcnRleGVzKCksdGhpcy5kZWxldGVVc2VsZXNzRWRnZXMoKSx0aGlzLmRlbGV0ZVNlbGZFZGdlcygpKTtjb25zdCBpPW5ldyBMaXN0O2xldCBlPSEwO2Zvcig7ZTspe2U9ITE7Y29uc3Qgcz10aGlzLnBvLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7aWYodGhpcy5pc1NpbmdsZXRvbihuKSljb250aW51ZTtjb25zdCBvPXRoaXMubGF5b3V0LmNyZWF0ZU5ldHdvcmsoKTtpLmFkZChvKSx0aGlzLmpPKG8sbiksZT0hMDticmVha319cmV0dXJuIGkuc29ydCgocyxuKT0+cz09PW51bGx8fG49PT1udWxsfHxzPT09bj8wOm4udmVydGV4ZXMuY291bnQtcy52ZXJ0ZXhlcy5jb3VudCksaX1qTyh0LGkpe2lmKGk9PT1udWxsKXJldHVybjtjb25zdCBlPW5ldyBMaXN0O2ZvcihlLmFkZChpKTtlLmNvdW50PjA7KXtjb25zdCBzPWUuZmlyc3QoKTtpZihlLnJlbW92ZUF0KDApLCFzfHxzLm5ldHdvcms9PT10KWNvbnRpbnVlO3RoaXMuQlQocyksdC5hZGRWZXJ0ZXgocyk7bGV0IG49cy5zb3VyY2VFZGdlcztmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28ubmV0d29yayE9PXQmJih0aGlzLkROKG8pLHQuVE4obyksby5mcm9tVmVydGV4JiZlLmFkZChvLmZyb21WZXJ0ZXgpKX1mb3Iobj1zLmRlc3RpbmF0aW9uRWRnZXM7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7by5uZXR3b3JrIT09dCYmKHRoaXMuRE4obyksdC5UTihvKSxvLnRvVmVydGV4JiZlLmFkZChvLnRvVmVydGV4KSl9fX1maW5kQWxsUGFydHMoKXtjb25zdCB0PW5ldyBHU2V0LGk9dGhpcy5wby5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3Qgcz1pLnZhbHVlO3Mubm9kZSYmdC5hZGQocy5ub2RlKX1jb25zdCBlPXRoaXMuQ24uaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtzLmxpbmsmJnQuYWRkKHMubGluayl9cmV0dXJuIHR9fWNsYXNzIExheW91dFZlcnRleHttbztuaTtUZTtJZTskZTtRbztfbztjb25zdHJ1Y3Rvcih0KXtHU2V0LkppKHRoaXMpLERlYnVnJiYhdCYmVS5uKFwiTGF5b3V0VmVydGV4IGNvbnN0cnVjdG9yIHJlcXVpcmVzIG5vbi1udWxsIExheW91dE5ldHdvcmsgYXJndW1lbnRcIiksdGhpcy5tbz10LHRoaXMuSWU9bmV3IFJlY3QoMCwwLDEwLDEwKS5wKCksdGhpcy4kZT1uZXcgUG9pbnQoNSw1KS5wKCksdGhpcy5uaT1udWxsLHRoaXMuVGU9bnVsbCx0aGlzLlFvPW5ldyBMaXN0LHRoaXMuX289bmV3IExpc3R9Y2xlYXIoKXt0aGlzLm5pPW51bGwsdGhpcy5UZT1udWxsLHRoaXMuUW89bmV3IExpc3QsdGhpcy5fbz1uZXcgTGlzdH10b1N0cmluZyh0KXt0PT09dm9pZCAwJiYodD0wKTtsZXQgaT1cIkxheW91dFZlcnRleCNcIitHU2V0LmdzKHRoaXMpO2lmKHQ+MCYmKGkrPXRoaXMubm9kZSE9PW51bGw/XCIoXCIrdGhpcy5ub2RlLnRvU3RyaW5nKCkrXCIpXCI6XCJcIix0PjEpKXtsZXQgZT1cIlwiLHM9ITAsbj10aGlzLlFvLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCByPW4udmFsdWU7cz9zPSExOmUrPVwiLFwiLGUrPXIudG9TdHJpbmcoMCl9bGV0IG89XCJcIjtmb3Iocz0hMCxuPXRoaXMuX28uaXRlcmF0b3I7bi5uZXh0KCk7KXtjb25zdCByPW4udmFsdWU7cz9zPSExOm8rPVwiLFwiLG8rPXIudG9TdHJpbmcoMCl9aSs9XCIgc291cmNlczogXCIrZStcIiBkZXN0aW5hdGlvbnM6IFwiK299cmV0dXJuIGl9Z2V0IHlvKCl7cmV0dXJuIHRoaXMuUW8ueUN9Z2V0IHRyKCl7cmV0dXJuIHRoaXMuX28ueUN9Z2V0IGRhdGEoKXtyZXR1cm4gdGhpcy5uaX1zZXQgZGF0YSh0KXtpZih0aGlzLm5pPXQsdCE9PW51bGwmJnQuYm91bmRzKXtjb25zdCBpPXQuYm91bmRzLGU9aS54LHM9aS55LG49aS53aWR0aCxvPWkuaGVpZ2h0O3RoaXMuJGUucyhuLzIsby8yKSx0aGlzLkllLnMoZSxzLG4sbyl9fWdldCBub2RlKCl7cmV0dXJuIHRoaXMuVGV9c2V0IG5vZGUodCl7aWYodGhpcy5UZSE9PXQpe2lmKERlYnVnJiZ0IT09bnVsbCYmVS5lKHQsTm9kZSxMYXlvdXRWZXJ0ZXgsXCJub2RlXCIpLHRoaXMuVGU9dCx0PT09bnVsbClyZXR1cm47dC5lbnN1cmVCb3VuZHMoKTtjb25zdCBpPXRoaXMubmV0d29yay5sYXlvdXQsZT1SZWN0LmEoKSxzPWkuZ2V0TGF5b3V0Qm91bmRzKHQsZSk7bGV0IG49cy54LG89cy55O2NvbnN0IHI9cy53aWR0aCxsPXMuaGVpZ2h0O2lmKGlzTmFOKG4pJiYobj0wKSxpc05hTihvKSYmKG89MCksdGhpcy5JZS5zKG4sbyxyLGwpLFJlY3QubyhlKSwhKHQgaW5zdGFuY2VvZiBHcm91cCkpe2NvbnN0IGg9dC5sb2NhdGlvbk9iamVjdC5nZXREb2N1bWVudFBvaW50KFNwb3QuQ2VudGVyKTtpZihoLmlzUmVhbCgpKXt0aGlzLiRlLnMoaC54LW4saC55LW8pO3JldHVybn19dGhpcy4kZS5zKHIvMixsLzIpfX1nZXQgYm91bmRzKCl7cmV0dXJuIHRoaXMuSWV9c2V0IGJvdW5kcyh0KXt0aGlzLkllLmVxdWFscyh0KXx8KERlYnVnJiZVLmUodCxSZWN0LExheW91dFZlcnRleCxcImJvdW5kc1wiKSx0aGlzLkllLmModCkpfWdldCBmb2N1cygpe3JldHVybiB0aGlzLiRlfXNldCBmb2N1cyh0KXt0aGlzLiRlLmVxdWFscyh0KXx8KERlYnVnJiZVLmUodCxQb2ludCxMYXlvdXRWZXJ0ZXgsXCJmb2N1c1wiKSx0aGlzLiRlLmModCkpfWdldCBjZW50ZXJYKCl7cmV0dXJuIHRoaXMuSWUueCt0aGlzLiRlLnh9c2V0IGNlbnRlclgodCl7Y29uc3QgaT10aGlzLkllO2kueCt0aGlzLiRlLnghPT10JiYoRGVidWcmJlUucih0LExheW91dFZlcnRleCxcImNlbnRlclhcIiksaS5BdCgpLGkueD10LXRoaXMuJGUueCxpLnAoKSl9Z2V0IGNlbnRlclkoKXtyZXR1cm4gdGhpcy5JZS55K3RoaXMuJGUueX1zZXQgY2VudGVyWSh0KXtjb25zdCBpPXRoaXMuSWU7aS55K3RoaXMuJGUueSE9PXQmJihEZWJ1ZyYmVS5yKHQsTGF5b3V0VmVydGV4LFwiY2VudGVyWVwiKSxpLkF0KCksaS55PXQtdGhpcy4kZS55LGkucCgpKX1nZXQgZm9jdXNYKCl7cmV0dXJuIHRoaXMuJGUueH1zZXQgZm9jdXNYKHQpe2NvbnN0IGk9dGhpcy4kZTtpLnghPT10JiYoaS5BdCgpLGkueD10LGkucCgpKX1nZXQgZm9jdXNZKCl7cmV0dXJuIHRoaXMuJGUueX1zZXQgZm9jdXNZKHQpe2NvbnN0IGk9dGhpcy4kZTtpLnkhPT10JiYoaS5BdCgpLGkueT10LGkucCgpKX1nZXQgeCgpe3JldHVybiB0aGlzLkllLnh9c2V0IHgodCl7Y29uc3QgaT10aGlzLkllO2kueCE9PXQmJihpLkF0KCksaS54PXQsaS5wKCkpfWdldCB5KCl7cmV0dXJuIHRoaXMuSWUueX1zZXQgeSh0KXtjb25zdCBpPXRoaXMuSWU7aS55IT09dCYmKGkuQXQoKSxpLnk9dCxpLnAoKSl9Z2V0IHdpZHRoKCl7cmV0dXJuIHRoaXMuSWUud2lkdGh9c2V0IHdpZHRoKHQpe2NvbnN0IGk9dGhpcy5JZTtpLndpZHRoIT09dCYmKGkuQXQoKSxpLndpZHRoPXQsaS5wKCkpfWdldCBoZWlnaHQoKXtyZXR1cm4gdGhpcy5JZS5oZWlnaHR9c2V0IGhlaWdodCh0KXtjb25zdCBpPXRoaXMuSWU7aS5oZWlnaHQhPT10JiYoaS5BdCgpLGkuaGVpZ2h0PXQsaS5wKCkpfWNvbW1pdCgpe2NvbnN0IHQ9dGhpcy5uaTtpZih0IT09bnVsbCl7Y29uc3QgZT10aGlzLmJvdW5kcyxzPXQuYm91bmRzO1UuVyhzKT8ocy54PWUueCxzLnk9ZS55LHMud2lkdGg9ZS53aWR0aCxzLmhlaWdodD1lLmhlaWdodCk6dC5ib3VuZHM9ZS5jb3B5KCk7cmV0dXJufWNvbnN0IGk9dGhpcy5ub2RlO2lmKGkhPT1udWxsKXtjb25zdCBlPXRoaXMuYm91bmRzO2lmKCEoaSBpbnN0YW5jZW9mIEdyb3VwKSl7Y29uc3Qgcz1SZWN0LmEoKTtpLmVuc3VyZUJvdW5kcygpO2NvbnN0IG49dGhpcy5uZXR3b3JrLmxheW91dC5nZXRMYXlvdXRCb3VuZHMoaSxzKSxvPWkubG9jYXRpb25PYmplY3QuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlcik7aWYobi5pc1JlYWwoKSYmby5pc1JlYWwoKSl7aS5tb3ZlVG8oZS54K3RoaXMuZm9jdXNYLShvLngtbi54KStpLm1hcmdpbi5sZWZ0LGUueSt0aGlzLmZvY3VzWS0oby55LW4ueStpLm1hcmdpbi50b3ApKSxSZWN0Lm8ocyk7cmV0dXJufVJlY3QubyhzKX1pLm1vdmVUbyhlLngraS5tYXJnaW4ubGVmdCxlLnkraS5tYXJnaW4udG9wKX19YWRkU291cmNlRWRnZSh0KXt0IT09bnVsbCYmKERlYnVnJiZVLmUodCxMYXlvdXRFZGdlLExheW91dFZlcnRleCxcImFkZFNvdXJjZUVkZ2U6ZWRnZVwiKSx0aGlzLlFvLmhhcyh0KXx8dGhpcy5Rby5hZGQodCkpfWRlbGV0ZVNvdXJjZUVkZ2UodCl7dCE9PW51bGwmJihEZWJ1ZyYmVS5lKHQsTGF5b3V0RWRnZSxMYXlvdXRWZXJ0ZXgsXCJkZWxldGVTb3VyY2VFZGdlOmVkZ2VcIiksdGhpcy5Rby5kZWxldGUodCkpfWFkZERlc3RpbmF0aW9uRWRnZSh0KXt0IT09bnVsbCYmKERlYnVnJiZVLmUodCxMYXlvdXRFZGdlLExheW91dFZlcnRleCxcImFkZERlc3RpbmF0aW9uRWRnZTplZGdlXCIpLHRoaXMuX28uaGFzKHQpfHx0aGlzLl9vLmFkZCh0KSl9ZGVsZXRlRGVzdGluYXRpb25FZGdlKHQpe3QhPT1udWxsJiYoRGVidWcmJlUuZSh0LExheW91dEVkZ2UsTGF5b3V0VmVydGV4LFwiZGVsZXRlRGVzdGluYXRpb25FZGdlOmVkZ2VcIiksdGhpcy5fby5kZWxldGUodCkpfWdldCBuZXR3b3JrKCl7cmV0dXJuIHRoaXMubW99c2V0IG5ldHdvcmsodCl7RGVidWcmJlUuZSh0LExheW91dE5ldHdvcmssTGF5b3V0VmVydGV4LFwibmV0d29ya1wiKSx0aGlzLm1vPXR9Z2V0IHNvdXJjZVZlcnRleGVzKCl7Y29uc3QgdD1uZXcgR1NldCxpPXRoaXMuc291cmNlRWRnZXM7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtlLmZyb21WZXJ0ZXgmJnQuYWRkKGUuZnJvbVZlcnRleCl9cmV0dXJuIHQuaXRlcmF0b3J9Z2V0IGRlc3RpbmF0aW9uVmVydGV4ZXMoKXtjb25zdCB0PW5ldyBHU2V0LGk9dGhpcy5kZXN0aW5hdGlvbkVkZ2VzO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7ZS50b1ZlcnRleCYmdC5hZGQoZS50b1ZlcnRleCl9cmV0dXJuIHQuaXRlcmF0b3J9Z2V0IHZlcnRleGVzKCl7Y29uc3QgdD1uZXcgR1NldDtsZXQgaT10aGlzLnNvdXJjZUVkZ2VzO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7ZS5mcm9tVmVydGV4JiZ0LmFkZChlLmZyb21WZXJ0ZXgpfWZvcihpPXRoaXMuZGVzdGluYXRpb25FZGdlcztpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtlLnRvVmVydGV4JiZ0LmFkZChlLnRvVmVydGV4KX1yZXR1cm4gdC5pdGVyYXRvcn1nZXQgc291cmNlRWRnZXMoKXtyZXR1cm4gdGhpcy5Rby5pdGVyYXRvcn1nZXQgZGVzdGluYXRpb25FZGdlcygpe3JldHVybiB0aGlzLl9vLml0ZXJhdG9yfWdldCBlZGdlcygpe2NvbnN0IHQ9bmV3IExpc3Q7bGV0IGk9dGhpcy5zb3VyY2VFZGdlcztmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO3QuYWRkKGUpfWZvcihpPXRoaXMuZGVzdGluYXRpb25FZGdlcztpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTt0LmFkZChlKX1yZXR1cm4gdC5pdGVyYXRvcn1nZXQgZWRnZXNDb3VudCgpe3JldHVybiB0aGlzLlFvLmNvdW50K3RoaXMuX28uY291bnR9c3RhdGljIHN0YW5kYXJkQ29tcGFyZXIodCxpKXtEZWJ1ZyYmVS5lKHQsTGF5b3V0VmVydGV4LExheW91dFZlcnRleCxcInN0YW5kYXJkQ29tcGFyZXI6bVwiKSxEZWJ1ZyYmVS5lKGksTGF5b3V0VmVydGV4LExheW91dFZlcnRleCxcInN0YW5kYXJkQ29tcGFyZXI6blwiKTtjb25zdCBlPXQuVGUscz1pLlRlO2lmKGUpaWYocyl7Y29uc3Qgbj1lLnRleHQsbz1zLnRleHQ7cmV0dXJuIG48bz8tMTpuPm8/MTowfWVsc2UgcmV0dXJuIDE7ZWxzZSByZXR1cm4gcyE9PW51bGw/LTE6MH1zdGF0aWMgc21hcnRDb21wYXJlcih0LGkpe2lmKERlYnVnJiZVLmUodCxMYXlvdXRWZXJ0ZXgsTGF5b3V0VmVydGV4LFwic21hcnRDb21wYXJlcjptXCIpLERlYnVnJiZVLmUoaSxMYXlvdXRWZXJ0ZXgsTGF5b3V0VmVydGV4LFwic21hcnRDb21wYXJlcjpuXCIpLHQhPT1udWxsKWlmKGkhPT1udWxsKXtjb25zdCBlPXQuVGUscz1pLlRlO2lmKGUhPT1udWxsKWlmKHMhPT1udWxsKXtjb25zdCBuPWUudGV4dC50b0xvY2FsZUxvd2VyQ2FzZSgpLG89cy50ZXh0LnRvTG9jYWxlTG93ZXJDYXNlKCkscj1uLnNwbGl0KC8oWystXT9bLl0/XFxkKyg/OlxcLlxcZCopPyg/OmVbKy1dP1xcZCspPykvKSxsPW8uc3BsaXQoLyhbKy1dP1suXT9cXGQrKD86XFwuXFxkKik/KD86ZVsrLV0/XFxkKyk/KS8pO2xldCBoPTA7Zm9yKDtoPHIubGVuZ3RoO2grKylpZihsW2hdIT09XCJcIiYmbFtoXSE9PXZvaWQgMCl7Y29uc3QgZj1wYXJzZUZsb2F0KHJbaF0pLGE9cGFyc2VGbG9hdChsW2hdKTtpZihpc05hTihmKSlpZihpc05hTihhKSl7aWYocltoXS5sb2NhbGVDb21wYXJlKGxbaF0pIT09MClyZXR1cm4gcltoXS5sb2NhbGVDb21wYXJlKGxbaF0pO2NvbnRpbnVlfWVsc2UgcmV0dXJuIDE7ZWxzZXtpZihpc05hTihhKSlyZXR1cm4tMTtpZihmLWEhPT0wKXJldHVybiBmLWE7Y29udGludWV9fWVsc2V7aWYocltoXT09PVwiXCIpY29udGludWU7cmV0dXJuIDF9cmV0dXJuIGxbaF0hPT1cIlwiJiZsW2hdIT09dm9pZCAwPy0xOjB9ZWxzZSByZXR1cm4gMTtlbHNlIHJldHVybiBzIT09bnVsbD8tMTowfWVsc2UgcmV0dXJuIDE7ZWxzZSByZXR1cm4gaSE9PW51bGw/LTE6MH19Y2xhc3MgTGF5b3V0RWRnZXttbztuaTtKZTtaZTtRZTtjb25zdHJ1Y3Rvcih0KXtHU2V0LkppKHRoaXMpLERlYnVnJiYhdCYmVS5uKFwiTGF5b3V0RWRnZSBjb25zdHJ1Y3RvciByZXF1aXJlcyBub24tbnVsbCBMYXlvdXROZXR3b3JrIGFyZ3VtZW50XCIpLHRoaXMubW89dCx0aGlzLm5pPW51bGwsdGhpcy5KZT1udWxsLHRoaXMuWmU9bnVsbCx0aGlzLlFlPW51bGx9Y2xlYXIoKXt0aGlzLm5pPW51bGwsdGhpcy5KZT1udWxsLHRoaXMuWmU9bnVsbCx0aGlzLlFlPW51bGx9dG9TdHJpbmcodCl7dD09PXZvaWQgMCYmKHQ9MCk7bGV0IGk9XCJMYXlvdXRFZGdlI1wiK0dTZXQuZ3ModGhpcyk7cmV0dXJuIHQ+MCYmKGkrPXRoaXMuSmUhPT1udWxsP1wiKFwiK3RoaXMuSmUudG9TdHJpbmcoKStcIilcIjpcIlwiLHQ+MSYmKGkrPVwiIFwiKyh0aGlzLlplP3RoaXMuWmUudG9TdHJpbmcoKTpcIm51bGxcIikrXCIgLS0+IFwiKyh0aGlzLlFlP3RoaXMuUWUudG9TdHJpbmcoKTpcIm51bGxcIikpKSxpfXJldmVyc2VFZGdlKCl7Y29uc3QgdD10aGlzLlplO3RoaXMuWmU9dGhpcy5RZSx0aGlzLlFlPXR9Y29tbWl0KCl7fWdldE90aGVyVmVydGV4KHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsTGF5b3V0VmVydGV4LExheW91dEVkZ2UsXCJnZXRPdGhlclZlcnRleDp2XCIpLHRoaXMuUWU9PT10P3RoaXMuWmU6dGhpcy5aZT09PXQ/dGhpcy5RZTpudWxsfWdldCBuZXR3b3JrKCl7cmV0dXJuIHRoaXMubW99c2V0IG5ldHdvcmsodCl7RGVidWcmJlUuZSh0LExheW91dE5ldHdvcmssTGF5b3V0RWRnZSxcIm5ldHdvcmtcIiksdGhpcy5tbz10fWdldCBkYXRhKCl7cmV0dXJuIHRoaXMubml9c2V0IGRhdGEodCl7dGhpcy5uaSE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJlUuTW8odCxMYXlvdXRFZGdlLFwiZGF0YVwiKSx0aGlzLm5pPXQpfWdldCBsaW5rKCl7cmV0dXJuIHRoaXMuSmV9c2V0IGxpbmsodCl7dGhpcy5KZSE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJlUuZSh0LExpbmssTGF5b3V0RWRnZSxcImxpbmtcIiksdGhpcy5KZT10KX1nZXQgZnJvbVZlcnRleCgpe3JldHVybiB0aGlzLlplfXNldCBmcm9tVmVydGV4KHQpe3RoaXMuWmUhPT10JiYoRGVidWcmJnQhPT1udWxsJiZVLmUodCxMYXlvdXRWZXJ0ZXgsTGF5b3V0RWRnZSxcImZyb21WZXJ0ZXhcIiksdGhpcy5aZT10KX1nZXQgdG9WZXJ0ZXgoKXtyZXR1cm4gdGhpcy5RZX1zZXQgdG9WZXJ0ZXgodCl7dGhpcy5RZSE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJlUuZSh0LExheW91dFZlcnRleCxMYXlvdXRFZGdlLFwidG9WZXJ0ZXhcIiksdGhpcy5RZT10KX19dmFyIEdyaWRBbGlnbm1lbnQ9KHk9Pih5W3kuUG9zaXRpb249MF09XCJQb3NpdGlvblwiLHlbeS5Mb2NhdGlvbj0xXT1cIkxvY2F0aW9uXCIseSkpKEdyaWRBbGlnbm1lbnR8fHt9KSxHcmlkQXJyYW5nZW1lbnQ9KHk9Pih5W3kuTGVmdFRvUmlnaHQ9MTBdPVwiTGVmdFRvUmlnaHRcIix5W3kuUmlnaHRUb0xlZnQ9MTFdPVwiUmlnaHRUb0xlZnRcIix5KSkoR3JpZEFycmFuZ2VtZW50fHx7fSksR3JpZFNvcnRpbmc9KHk9Pih5W3kuRm9yd2FyZHM9MjBdPVwiRm9yd2FyZHNcIix5W3kuUmV2ZXJzZT0yMV09XCJSZXZlcnNlXCIseVt5LkFzY2VuZGluZz0yMl09XCJBc2NlbmRpbmdcIix5W3kuRGVzY2VuZGluZz0yM109XCJEZXNjZW5kaW5nXCIseSkpKEdyaWRTb3J0aW5nfHx7fSk7Y2xhc3MgR3JpZExheW91dCBleHRlbmRzIExheW91dHskZDtaZDtMbztBbjt1aTtXaTtiZTtrZTtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMuaXNWaWV3cG9ydFNpemVkPSEwLHRoaXMuJGQ9TmFOLHRoaXMuWmQ9TmFOLHRoaXMuTG89bmV3IFNpemUoTmFOLE5hTikucCgpLHRoaXMuQW49bmV3IFNpemUoMTAsMTApLnAoKSx0aGlzLnVpPTEsdGhpcy5XaT0xMCx0aGlzLmJlPTIyLHRoaXMua2U9R3JpZExheW91dC5zdGFuZGFyZENvbXBhcmVyLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1jbG9uZVByb3RlY3RlZCh0KXtzdXBlci5jbG9uZVByb3RlY3RlZCh0KSx0LiRkPXRoaXMuJGQsdC5aZD10aGlzLlpkLHQuTG8uYyh0aGlzLkxvKSx0LkFuLmModGhpcy5BbiksdC51aT10aGlzLnVpLHQuV2k9dGhpcy5XaSx0LmJlPXRoaXMuYmUsdC5rZT10aGlzLmtlfWFpKHQpe3QgaW4gR3JpZFNvcnRpbmc/dGhpcy5zb3J0aW5nPXQ6dCBpbiBHcmlkQXJyYW5nZW1lbnQ/dGhpcy5hcnJhbmdlbWVudD10OnQgaW4gR3JpZEFsaWdubWVudD90aGlzLmFsaWdubWVudD10OnN1cGVyLmFpKHQpfWRvTGF5b3V0KHQpe0RlYnVnJiZ0PT09bnVsbCYmVS5uKFwiTGF5b3V0LmRvTGF5b3V0KGNvbGxlY3Rpb24pIGFyZ3VtZW50IG11c3Qgbm90IGJlIG51bGwgYnV0IGEgRGlhZ3JhbSwgYSBHcm91cCwgb3IgYW4gSXRlcmFibGUgb2YgUGFydHNcIiksdGhpcy5hcnJhbmdlbWVudE9yaWdpbj10aGlzLmluaXRpYWxPcmlnaW4odGhpcy5hcnJhbmdlbWVudE9yaWdpbik7Y29uc3QgaT10aGlzLmNvbGxlY3RQYXJ0cyh0KSxlPXRoaXMuZGlhZ3JhbSxuPWkuY29weSgpLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBtPW4udmFsdWU7aWYobS5GbCgpJiYobS5mcm9tTm9kZSE9PW51bGx8fG0udG9Ob2RlIT09bnVsbCkpe2kuZGVsZXRlKG0pO2NvbnRpbnVlfWlmKG0uZW5zdXJlQm91bmRzKCksbSBpbnN0YW5jZW9mIEdyb3VwKXtjb25zdCBnPW0ubWVtYmVyUGFydHM7Zm9yKDtnLm5leHQoKTspe2NvbnN0IHA9Zy52YWx1ZTtpLmRlbGV0ZShwKX19fWNvbnN0IG89aS50b0FycmF5KCk7aWYoby5sZW5ndGg9PT0wKXJldHVybjtzd2l0Y2godGhpcy5zb3J0aW5nKXtjYXNlIDIwOmJyZWFrO2Nhc2UgMjE6by5yZXZlcnNlKCk7YnJlYWs7Y2FzZSAyMjpvLnNvcnQodGhpcy5jb21wYXJlcik7YnJlYWs7Y2FzZSAyMzpvLnNvcnQodGhpcy5jb21wYXJlciksby5yZXZlcnNlKCk7YnJlYWt9bGV0IHI9dGhpcy53cmFwcGluZ0NvbHVtbjtpc05hTihyKSYmKHI9MCk7bGV0IGw9dGhpcy53cmFwcGluZ1dpZHRoO2lmKGlzTmFOKGwpJiZlIT09bnVsbCl7Y29uc3QgbT1lLnZpZXdwb3J0Qm91bmRzLGc9ZS5wYWRkaW5nO2w9TWF0aC5tYXgobS53aWR0aC1nLmxlZnQtZy5yaWdodCwwKX1lbHNlIGw9TWF0aC5tYXgodGhpcy53cmFwcGluZ1dpZHRoLDApO3I8PTAmJmw8PTAmJihyPTEpO2xldCBoPXRoaXMuc3BhY2luZy53aWR0aDtpc0Zpbml0ZShoKXx8KGg9MCk7bGV0IGY9dGhpcy5zcGFjaW5nLmhlaWdodDtpc0Zpbml0ZShmKXx8KGY9MCksZSE9PW51bGwmJmUuc3RhcnRUcmFuc2FjdGlvbihcIkxheW91dFwiKTtjb25zdCBhPVtdO3N3aXRjaCh0aGlzLmFsaWdubWVudCl7Y2FzZSAwOnRoaXMudk8obyxsLHIsaCxmLGEpO2JyZWFrO2Nhc2UgMTp0aGlzLkpPKG8sbCxyLGgsZixhKTticmVha31sZXQgYz0wLHU9MCxkPTA7Zm9yKGxldCBtPTA7bTxhLmxlbmd0aDttKyspe2NvbnN0IGc9YVttXTtjPU1hdGgubWluKGMsZy54KSx1PU1hdGgubWluKHUsZy55KSxkPU1hdGgubWF4KGQsZy54K2cud2lkdGgpfXRoaXMuYXJyYW5nZW1lbnQ9PT0xMT90aGlzLmNvbW1pdExheWVycyhhLG5ldyBQb2ludChjK2gvMi0oZCtjKSx1LWYvMikpOnRoaXMuY29tbWl0TGF5ZXJzKGEsbmV3IFBvaW50KGMtaC8yLHUtZi8yKSksZSE9PW51bGwmJmUuY29tbWl0VHJhbnNhY3Rpb24oXCJMYXlvdXRcIiksdGhpcy5pc1ZhbGlkTGF5b3V0PSEwfXZPKHQsaSxlLHMsbixvKXtjb25zdCByPVJlY3QuYSgpO2xldCBsPU1hdGgubWF4KHRoaXMuY2VsbFNpemUud2lkdGgsMSk7aWYoIWlzRmluaXRlKGwpKXtsPTA7Zm9yKGxldCBwPTA7cDx0Lmxlbmd0aDtwKyspe2NvbnN0IHc9dFtwXSx4PXRoaXMuZ2V0TGF5b3V0Qm91bmRzKHcscik7bD1NYXRoLm1heChsLHgud2lkdGgpfX1sKz1zLGw9TWF0aC5tYXgobCwxKTtsZXQgaD1NYXRoLm1heCh0aGlzLmNlbGxTaXplLmhlaWdodCwxKTtpZighaXNGaW5pdGUoaCkpe2g9MDtmb3IobGV0IHA9MDtwPHQubGVuZ3RoO3ArKyl7Y29uc3Qgdz10W3BdLHg9dGhpcy5nZXRMYXlvdXRCb3VuZHModyxyKTtoPU1hdGgubWF4KGgseC5oZWlnaHQpfX1oKz1uLGg9TWF0aC5tYXgoaCwxKTtjb25zdCBmPXRoaXMuYXJyYW5nZW1lbnQsYT10aGlzLmFycmFuZ2VtZW50T3JpZ2luLngsYz10aGlzLmFycmFuZ2VtZW50T3JpZ2luLnk7bGV0IHU9YSxkPWMsbT0wLGc9MDtmb3IobGV0IHA9MDtwPHQubGVuZ3RoO3ArKyl7Y29uc3Qgdz10W3BdLHg9dGhpcy5nZXRMYXlvdXRCb3VuZHModyxyKSxrPU1hdGguY2VpbCgoeC53aWR0aCtzKS9sKSxiPU1hdGguY2VpbCgoeC5oZWlnaHQrbikvaCksUz1rKmwsTT1iKmg7bGV0IEE9MDtzd2l0Y2goZil7Y2FzZSAxMTpBPU1hdGguYWJzKHUteC53aWR0aCk7YnJlYWs7ZGVmYXVsdDpBPXUreC53aWR0aDticmVha30oZT4wJiZtPmUtMXx8aT4wJiZtPjAmJkEtYT5pKSYmKG8ucHVzaChuZXcgUmVjdCgwLGQsaStzLGcpKSxtPTAsdT1hLGQrPWcsZz0wKSxnPU1hdGgubWF4KGcsTSk7bGV0IEM9MDtzd2l0Y2goZil7Y2FzZSAxMTpDPS14LndpZHRoO2JyZWFrO2RlZmF1bHQ6Qz0wO2JyZWFrfXN3aXRjaCh3Lm1vdmVUbyh1K0Mrdy5tYXJnaW4ubGVmdCxkK3cubWFyZ2luLnRvcCksZil7Y2FzZSAxMTp1LT1TO2JyZWFrO2RlZmF1bHQ6dSs9UzticmVha31tKyt9by5wdXNoKG5ldyBSZWN0KDAsZCxpK3MsZykpLFJlY3QubyhyKX1KTyh0LGksZSxzLG4sbyl7Y29uc3Qgcj1SZWN0LmEoKTtsZXQgbD1NYXRoLm1heCh0aGlzLmNlbGxTaXplLndpZHRoLDEpLGg9MCxmPTAsYT0wO2NvbnN0IGM9UG9pbnQuYSgpO2ZvcihsZXQgQz0wO0M8dC5sZW5ndGg7QysrKXtjb25zdCBQPXRbQ10sTj10aGlzLmdldExheW91dEJvdW5kcyhQLHIpLFQ9UC5nZXRSZWxhdGl2ZVBvaW50KFAubG9jYXRpb25PYmplY3QsUC5sb2NhdGlvblNwb3QsYyk7aD1NYXRoLm1heChoLFQueCksZj1NYXRoLm1heChmLE4ud2lkdGgtVC54KSxhPU1hdGgubWF4KGEsVC55KX1jb25zdCB1PXRoaXMuYXJyYW5nZW1lbnQ7c3dpdGNoKHUpe2Nhc2UgMTE6aCs9czticmVhaztkZWZhdWx0OmYrPXM7YnJlYWt9aXNGaW5pdGUobCk/bD1NYXRoLm1heChsK3MsMSk6bD1NYXRoLm1heChoK2YsMSk7Y29uc3QgZD10aGlzLmFycmFuZ2VtZW50T3JpZ2luLngsbT10aGlzLmFycmFuZ2VtZW50T3JpZ2luLnk7bGV0IGc9ZCxwPW0sdz0wO2k+PWgmJihpLT1oKTtsZXQgeD0wLGs9MDtjb25zdCBiPU1hdGgubWF4KHRoaXMuY2VsbFNpemUuaGVpZ2h0LDEpO2E9MDtsZXQgUz0wLE09ITA7Y29uc3QgQT1Qb2ludC5hKCk7Zm9yKGxldCBDPTA7Qzx0Lmxlbmd0aDtDKyspe2NvbnN0IFA9dFtDXSxOPXRoaXMuZ2V0TGF5b3V0Qm91bmRzKFAsciksVD1QLmdldFJlbGF0aXZlUG9pbnQoUC5sb2NhdGlvbk9iamVjdCxQLmxvY2F0aW9uU3BvdCxjKTtpZih3PjApc3dpdGNoKHUpe2Nhc2UgMTE6e2xldCBEPShnLWQtKE4ud2lkdGgtVC54KSkvbDtHZW8uRyhNYXRoLnJvdW5kKEQpLEQpP0Q9TWF0aC5yb3VuZChEKTpEPU1hdGguZmxvb3IoRCksZz1EKmwrZDticmVha31kZWZhdWx0OntsZXQgRD0oZy1kK1QueCkvbDtHZW8uRyhNYXRoLnJvdW5kKEQpLEQpP0Q9TWF0aC5yb3VuZChEKTpEPU1hdGguY2VpbChEKSxnPUQqbCtkO2JyZWFrfX1lbHNlIHN3aXRjaCh1KXtjYXNlIDExOng9ZytULngrTi53aWR0aDticmVhaztkZWZhdWx0Ong9Zy1ULng7YnJlYWt9bGV0IEw9MDtzd2l0Y2godSl7Y2FzZSAxMTpMPS0oZytULngpK3g7YnJlYWs7ZGVmYXVsdDpMPWcrTi53aWR0aC1ULngteDticmVha31pZihlPjAmJnc+ZS0xfHxpPjAmJnc+MCYmTD5pKXtvLnB1c2gobmV3IFJlY3QoMCxNP3AtYTpwLGkrcyxTK2ErbikpO2ZvcihsZXQgRD0wO0Q8dyYmQyE9PXc7RCsrKXtjb25zdCBGPXRbQy13K0RdLEk9Ri5nZXRSZWxhdGl2ZVBvaW50KEYubG9jYXRpb25PYmplY3QsRi5sb2NhdGlvblNwb3QsQSk7Ri5tb3ZlVG8oRi5wb3NpdGlvbi54LEYucG9zaXRpb24ueSthLUkueSl9Uys9bixNP3ArPVM6cCs9UythLGE9MCxTPTAsdz0wLGc9ZCxNPSExfXN3aXRjaChnPT09ZCYmKHU9PT0xMT9rPU1hdGgubWF4KGssTi53aWR0aC1ULngpOms9TWF0aC5taW4oaywtVC54KSksYT1NYXRoLm1heChhLFQueSksUz1NYXRoLm1heChTLE4uaGVpZ2h0LVQueSksaXNGaW5pdGUoYikmJihTPU1hdGgubWF4KFMsTWF0aC5tYXgoTi5oZWlnaHQsYiktVC55KSksTT9QLm1vdmVUbyhnLVQueCxwLVQueSk6UC5tb3ZlVG8oZy1ULngscCksdSl7Y2FzZSAxMTpnLT1ULngrczticmVhaztkZWZhdWx0OmcrPU4ud2lkdGgtVC54K3M7YnJlYWt9dysrfWlmKG8ucHVzaChuZXcgUmVjdCgwLHAsaStzLChNP1M6UythKStuKSksdC5sZW5ndGghPT13KWZvcihsZXQgQz0wO0M8dztDKyspe2NvbnN0IFA9dFt0Lmxlbmd0aC13K0NdLE49UC5nZXRSZWxhdGl2ZVBvaW50KFAubG9jYXRpb25PYmplY3QsUC5sb2NhdGlvblNwb3QsYyk7UC5tb3ZlVG8oUC5wb3NpdGlvbi54LFAucG9zaXRpb24ueSthLU4ueSl9aWYoUG9pbnQubyhjKSxQb2ludC5vKEEpLHU9PT0xMSlmb3IobGV0IEM9MDtDPG8ubGVuZ3RoO0MrKyl7Y29uc3QgUD1vW0NdO1Aud2lkdGgrPWssUC54LT1rfWVsc2UgZm9yKGxldCBDPTA7QzxvLmxlbmd0aDtDKyspe2NvbnN0IFA9b1tDXTtQLng+ayYmKFAud2lkdGgrPVAueC1rLFAueD1rKX1SZWN0Lm8ocil9Y29tbWl0TGF5ZXJzKHQsaSl7fWdldCB3cmFwcGluZ1dpZHRoKCl7cmV0dXJuIHRoaXMuJGR9c2V0IHdyYXBwaW5nV2lkdGgodCl7dGhpcy4kZCE9PXQmJihVLmkodCxcIm51bWJlclwiLEdyaWRMYXlvdXQsXCJ3cmFwcGluZ1dpZHRoXCIpLCh0PjB8fGlzTmFOKHQpKSYmKHRoaXMuJGQ9dCx0aGlzLmlzVmlld3BvcnRTaXplZD1pc05hTih0KSx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCB3cmFwcGluZ0NvbHVtbigpe3JldHVybiB0aGlzLlpkfXNldCB3cmFwcGluZ0NvbHVtbih0KXt0aGlzLlpkIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsR3JpZExheW91dCxcIndyYXBwaW5nQ29sdW1uXCIpLCh0PjB8fGlzTmFOKHQpKSYmKHRoaXMuWmQ9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBjZWxsU2l6ZSgpe3JldHVybiB0aGlzLkxvfXNldCBjZWxsU2l6ZSh0KXtVLmUodCxTaXplLEdyaWRMYXlvdXQsXCJjZWxsU2l6ZVwiKSx0aGlzLkxvLmVxdWFscyh0KXx8KHRoaXMuTG8uYyh0KSx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IHNwYWNpbmcoKXtyZXR1cm4gdGhpcy5Bbn1zZXQgc3BhY2luZyh0KXtVLmUodCxTaXplLEdyaWRMYXlvdXQsXCJzcGFjaW5nXCIpLHRoaXMuQW4uZXF1YWxzKHQpfHwodGhpcy5Bbi5jKHQpLHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgYWxpZ25tZW50KCl7cmV0dXJuIHRoaXMudWl9c2V0IGFsaWdubWVudCh0KXt0aGlzLnVpIT09dCYmKFUuaih0LEdyaWRBbGlnbm1lbnQsXCJHcmlkQWxpZ25tZW50XCIpLCh0PT09MXx8dD09PTApJiYodGhpcy51aT10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGFycmFuZ2VtZW50KCl7cmV0dXJuIHRoaXMuV2l9c2V0IGFycmFuZ2VtZW50KHQpe3RoaXMuV2khPT10JiYoVS5qKHQsR3JpZEFycmFuZ2VtZW50LFwiR3JpZEFycmFuZ2VtZW50XCIpLCh0PT09MTB8fHQ9PT0xMSkmJih0aGlzLldpPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgc29ydGluZygpe3JldHVybiB0aGlzLmJlfXNldCBzb3J0aW5nKHQpe3RoaXMuYmUhPT10JiYoVS5qKHQsR3JpZFNvcnRpbmcsXCJHcmlkU29ydGluZ1wiKSwodD09PTIwfHx0PT09MjF8fHQ9PT0yMnx8dD09PTIzKSYmKHRoaXMuYmU9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBjb21wYXJlcigpe3JldHVybiB0aGlzLmtlfXNldCBjb21wYXJlcih0KXt0aGlzLmtlIT09dCYmKFUuUCh0LEdyaWRMYXlvdXQsXCJjb21wYXJlclwiKSx0aGlzLmtlPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfXN0YXRpYyBzdGFuZGFyZENvbXBhcmVyKHQsaSl7RGVidWcmJlUuZSh0LFBhcnQsR3JpZExheW91dCxcInN0YW5kYXJkQ29tcGFyZXI6YVwiKSxEZWJ1ZyYmVS5lKGksUGFydCxHcmlkTGF5b3V0LFwic3RhbmRhcmRDb21wYXJlcjpiXCIpO2NvbnN0IGU9dC50ZXh0LHM9aS50ZXh0O3JldHVybiBlPHM/LTE6ZT5zPzE6MH1zdGF0aWMgc21hcnRDb21wYXJlcih0LGkpe2lmKERlYnVnJiZVLmUodCxQYXJ0LEdyaWRMYXlvdXQsXCJzdGFuZGFyZENvbXBhcmVyOmFcIiksRGVidWcmJlUuZShpLFBhcnQsR3JpZExheW91dCxcInN0YW5kYXJkQ29tcGFyZXI6YlwiKSx0IT09bnVsbClpZihpIT09bnVsbCl7Y29uc3QgZT10LnRleHQudG9Mb2NhbGVMb3dlckNhc2UoKSxzPWkudGV4dC50b0xvY2FsZUxvd2VyQ2FzZSgpLG49ZS5zcGxpdCgvKFsrLV0/Wy5dP1xcZCsoPzpcXC5cXGQqKT8oPzplWystXT9cXGQrKT8pLyksbz1zLnNwbGl0KC8oWystXT9bLl0/XFxkKyg/OlxcLlxcZCopPyg/OmVbKy1dP1xcZCspPykvKTtsZXQgcj0wO2Zvcig7cjxuLmxlbmd0aDtyKyspaWYob1tyXSE9PVwiXCImJm9bcl0hPT12b2lkIDApe2NvbnN0IGw9cGFyc2VGbG9hdChuW3JdKSxoPXBhcnNlRmxvYXQob1tyXSk7aWYoaXNOYU4obCkpaWYoaXNOYU4oaCkpe2lmKG5bcl0ubG9jYWxlQ29tcGFyZShvW3JdKSE9PTApcmV0dXJuIG5bcl0ubG9jYWxlQ29tcGFyZShvW3JdKTtjb250aW51ZX1lbHNlIHJldHVybiAxO2Vsc2V7aWYoaXNOYU4oaCkpcmV0dXJuLTE7aWYobC1oIT09MClyZXR1cm4gbC1oO2NvbnRpbnVlfX1lbHNle2lmKG5bcl09PT1cIlwiKWNvbnRpbnVlO3JldHVybiAxfXJldHVybiBvW3JdIT09XCJcIiYmb1tyXSE9PXZvaWQgMD8tMTowfWVsc2UgcmV0dXJuIDE7ZWxzZSByZXR1cm4gaSE9PW51bGw/LTE6MH1zdGF0aWMgUG9zaXRpb249MDtzdGF0aWMgTG9jYXRpb249MTtzdGF0aWMgTGVmdFRvUmlnaHQ9MTA7c3RhdGljIFJpZ2h0VG9MZWZ0PTExO3N0YXRpYyBGb3J3YXJkPTIwO3N0YXRpYyBSZXZlcnNlPTIxO3N0YXRpYyBBc2NlbmRpbmc9MjI7c3RhdGljIERlc2NlbmRpbmc9MjN9Y2xhc3MgUGFydE1hbmFnZXJ7UWQ7WnM7RnQ7d287X2Q7dGc7QztGTjtjb25zdHJ1Y3Rvcigpe3RoaXMuUWQ9bmV3IEdTZXQsdGhpcy5acz1uZXcgR1NldCx0aGlzLkZ0PW5ldyBHU2V0LHRoaXMud289bmV3IEdNYXAsdGhpcy5fZD1uZXcgR01hcCx0aGlzLnRnPW5ldyBHTWFwLHRoaXMuQz1udWxsLHRoaXMuRk49ITF9Y2xlYXIoKXt0aGlzLlFkLmNsZWFyKCksdGhpcy5acy5jbGVhcigpLHRoaXMuRnQuY2xlYXIoKSx0aGlzLndvLmNsZWFyKCksdGhpcy5fZC5jbGVhcigpLHRoaXMudGcuY2xlYXIoKX1Ebyh0KXtEZWJ1ZyYmdCE9PW51bGwmJlUuZSh0LERpYWdyYW0sUGFydE1hbmFnZXIsXCJzZXREaWFncmFtXCIpLHRoaXMuQz10fWlhKHQpe2lmKHQgaW5zdGFuY2VvZiBOb2RlKXtpZih0aGlzLlFkLmFkZCh0KSx0IGluc3RhbmNlb2YgR3JvdXApe2NvbnN0IGU9dC5jb250YWluaW5nR3JvdXA7ZT09PW51bGw/dGhpcy5kaWFncmFtLldyLmFkZCh0KTplLnBhLmFkZCh0KTtjb25zdCBzPXQubGF5b3V0O3MhPT1udWxsJiYocy5kaWFncmFtPXRoaXMuZGlhZ3JhbSl9fWVsc2UgdCBpbnN0YW5jZW9mIExpbms/KHRoaXMuWnMuYWRkKHQpLHQuaXNBdm9pZGluZyYmKHRoaXMuZGlhZ3JhbS5xbT0hMCkpOnQgaW5zdGFuY2VvZiBBZG9ybm1lbnR8fHRoaXMuRnQuYWRkKHQpO2NvbnN0IGk9dC5kYXRhO2khPT1udWxsJiYodCBpbnN0YW5jZW9mIEFkb3JubWVudHx8KHQgaW5zdGFuY2VvZiBMaW5rP3RoaXMuVlQoaSx0KTp0aGlzLndvLnNldChpLHQpKSl9bmUodCl7aWYodC5jbGVhckFkb3JubWVudHMoKSx0IGluc3RhbmNlb2YgTm9kZSl7aWYodGhpcy5RZC5kZWxldGUodCksdCBpbnN0YW5jZW9mIEdyb3VwKXtjb25zdCBlPXQuY29udGFpbmluZ0dyb3VwO2U9PT1udWxsP3RoaXMuZGlhZ3JhbS5Xci5kZWxldGUodCk6ZS5wYS5kZWxldGUodCk7Y29uc3Qgcz10LmxheW91dDtzIT09bnVsbCYmKHMuZGlhZ3JhbT1udWxsKX19ZWxzZSB0IGluc3RhbmNlb2YgTGluaz90aGlzLlpzLmRlbGV0ZSh0KTp0IGluc3RhbmNlb2YgQWRvcm5tZW50fHx0aGlzLkZ0LmRlbGV0ZSh0KTtjb25zdCBpPXQuZGF0YTtpIT09bnVsbCYmKHQgaW5zdGFuY2VvZiBBZG9ybm1lbnR8fCh0IGluc3RhbmNlb2YgTGluaz90aGlzLnpUKGksdCk6dGhpcy53by5kZWxldGUoaSkpKX1WVCh0LGkpe3RoaXMuX2Quc2V0KHQsaSl9elQodCxpKXt0aGlzLl9kLmRlbGV0ZSh0KX1yZWJ1aWxkUGFydHMoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbTtpZih0PT09bnVsbClyZXR1cm47Y29uc3QgaT10Lm5vZGVUZW1wbGF0ZU1hcC5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgdT1pLnZhbHVlLGQ9aS5rZXk7KCF1LkNlKCl8fHUgaW5zdGFuY2VvZiBHcm91cCkmJlUubihgSW52YWxpZCBub2RlIHRlbXBsYXRlIGluIERpYWdyYW0ubm9kZVRlbXBsYXRlTWFwOiB0ZW1wbGF0ZSBmb3IgXCIke2R9XCIgbXVzdCBiZSBhIE5vZGUgb3IgYSBzaW1wbGUgUGFydCwgbm90IGEgR3JvdXAgb3IgTGluazogJHt1fWApfWNvbnN0IGU9dC5ncm91cFRlbXBsYXRlTWFwLml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCB1PWUudmFsdWUsZD1lLmtleTt1IGluc3RhbmNlb2YgR3JvdXB8fFUubihgSW52YWxpZCBncm91cCB0ZW1wbGF0ZSBpbiBEaWFncmFtLmdyb3VwVGVtcGxhdGVNYXA6IHRlbXBsYXRlIGZvciBcIiR7ZH1cIiBtdXN0IGJlIGEgR3JvdXAsIG5vdCBhIG5vcm1hbCBOb2RlIG9yIExpbms6ICR7dX1gKX1jb25zdCBzPXQubGlua1RlbXBsYXRlTWFwLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCB1PXMudmFsdWUsZD1zLmtleTt1IGluc3RhbmNlb2YgTGlua3x8VS5uKGBJbnZhbGlkIGxpbmsgdGVtcGxhdGUgaW4gRGlhZ3JhbS5saW5rVGVtcGxhdGVNYXA6IHRlbXBsYXRlIGZvciBcIiR7ZH1cIiBtdXN0IGJlIGEgTGluaywgbm90IGEgbm9ybWFsIE5vZGUgb3Igc2ltcGxlIFBhcnQ6ICR7dX1gKX1jb25zdCBuPVUubHQoKSxvPXQuc2VsZWN0aW9uLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KXtjb25zdCBkPW8udmFsdWUuZGF0YTtkJiZuLnB1c2goZCl9Y29uc3Qgcj1VLmx0KCksbD10LmhpZ2hsaWdodGVkcy5pdGVyYXRvcjtmb3IoO2wubmV4dCgpOyl7Y29uc3QgZD1sLnZhbHVlLmRhdGE7ZCYmci5wdXNoKGQpfWNvbnN0IGg9VS5sdCgpLGY9dGhpcy5ub2Rlcy5pdGVyYXRvcjtmb3IoO2YubmV4dCgpOyl7Y29uc3QgdT1mLnZhbHVlO3UuZGF0YSE9PW51bGwmJihoLnB1c2godS5kYXRhKSxoLnB1c2godS5sb2NhdGlvbikpfWNvbnN0IGE9dGhpcy5saW5rcy5pdGVyYXRvcjtmb3IoO2EubmV4dCgpOyl7Y29uc3QgdT1hLnZhbHVlO3UuZGF0YSE9PW51bGwmJihoLnB1c2godS5kYXRhKSxoLnB1c2godS5sb2NhdGlvbikpfWNvbnN0IGM9dGhpcy5wYXJ0cy5pdGVyYXRvcjtmb3IoO2MubmV4dCgpOyl7Y29uc3QgdT1jLnZhbHVlO3UuZGF0YSE9PW51bGwmJihoLnB1c2godS5kYXRhKSxoLnB1c2godS5sb2NhdGlvbikpfXRoaXMuWFQoKSx0aGlzLloyKCk7Zm9yKGxldCB1PTA7dTxuLmxlbmd0aDt1Kyspe2NvbnN0IGQ9dGhpcy5maW5kUGFydEZvckRhdGEoblt1XSk7ZCE9PW51bGwmJihkLmlzU2VsZWN0ZWQ9ITApfWZvcihsZXQgdT0wO3U8ci5sZW5ndGg7dSsrKXtjb25zdCBkPXRoaXMuZmluZFBhcnRGb3JEYXRhKHJbdV0pO2QhPT1udWxsJiYoZC5pc0hpZ2hsaWdodGVkPSEwKX1mb3IobGV0IHU9MDt1PGgubGVuZ3RoO3UrPTIpe2NvbnN0IGQ9dGhpcy5maW5kUGFydEZvckRhdGEoaFt1XSk7ZCE9PW51bGwmJihkLmxvY2F0aW9uPWhbdSsxXSl9VS50dChuKSxVLnR0KHIpLFUudHQoaCl9WjIoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbS5tb2RlbDt0aGlzLlR5KHQubm9kZURhdGFBcnJheSl9VHkodCxpKXtjb25zdCBlPXRoaXMuZGlhZ3JhbS5tb2RlbDt0LmZvckVhY2gocz0+e2UuY29udGFpbnNOb2RlRGF0YShzKSYmdGhpcy5ZVChzLCExKX0pLHQuZm9yRWFjaChzPT57ZS5jb250YWluc05vZGVEYXRhKHMpJiZ0aGlzLktiKHMpfSksaSE9PSExJiZ0aGlzLmRpYWdyYW0uejEoITEpfVlUKHQsaSl7aWYodD09bnVsbHx8dGhpcy5kaWFncmFtLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMud28uaGFzKHQpKXJldHVybiBudWxsO2k9PT12b2lkIDAmJihpPSEwKTtjb25zdCBlPXRoaXMuJE8odCk7cmV0dXJuIGUhPT1udWxsJiZpJiZ0aGlzLktiKHQpLGV9JE8odCl7aWYodD09bnVsbHx8dGhpcy5kaWFncmFtLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMud28uaGFzKHQpKXJldHVybiBudWxsO2NvbnN0IGk9dGhpcy5aTyh0KSxlPXRoaXMuZmluZFRlbXBsYXRlRm9yTm9kZURhdGEodCxpKTtpZihlIT09bnVsbCl7ZS5LdCgpO2NvbnN0IHM9ZS5jb3B5KCk7aWYocyE9PW51bGwpe2NvbnN0IG49dGhpcy5kaWFncmFtLm1lO3JldHVybiB0aGlzLmRpYWdyYW0ubWU9ITAscy5Xbz1pLHMubmk9dCx0aGlzLmFkZHNUb1RlbXBvcmFyeUxheWVyJiYocy5mbD1cIlRvb2xcIiksdGhpcy5kaWFncmFtLmFkZChzKSxzLm5pPW51bGwscy5kYXRhPXQsdGhpcy5kaWFncmFtLm1lPW4sc319cmV0dXJuIG51bGx9aW5zZXJ0TGluayh0LGksZSxzKXtyZXR1cm4gbnVsbH1LYih0KXt9Wk8odCl7cmV0dXJuIHRoaXMuZGlhZ3JhbS5tb2RlbC5nZXRDYXRlZ29yeUZvck5vZGVEYXRhKHQpfXN0YXRpYyBLVD0hMTtzdGF0aWMgVVQ9ITE7ZmluZFRlbXBsYXRlRm9yTm9kZURhdGEodCxpKXtjb25zdCBlPXRoaXMuZGlhZ3JhbSxzPWUubW9kZWwsbj1zLnhhKCkmJnMuaXNHcm91cEZvckRhdGEodCk7bGV0IG89bnVsbDtyZXR1cm4gbj8obz1lLmdyb3VwVGVtcGxhdGVNYXAuZ2V0KGkpLG89PT1udWxsJiYobz1lLmdyb3VwVGVtcGxhdGVNYXAuZ2V0KFwiXCIpLG89PT1udWxsJiYoUGFydE1hbmFnZXIuVVR8fChQYXJ0TWFuYWdlci5VVD0hMCxVLm50KCdObyBHcm91cCB0ZW1wbGF0ZSBmb3VuZCBmb3IgY2F0ZWdvcnkgXCInK2krJ1wiJyksVS5udChcIiAgVXNpbmcgZGVmYXVsdCBncm91cCB0ZW1wbGF0ZVwiKSksbz1lLkwyKSkpOihvPWUubm9kZVRlbXBsYXRlTWFwLmdldChpKSxvPT09bnVsbCYmKG89ZS5ub2RlVGVtcGxhdGVNYXAuZ2V0KFwiXCIpLG89PT1udWxsJiYoUGFydE1hbmFnZXIuS1R8fChQYXJ0TWFuYWdlci5LVD0hMCxVLm50KCdObyBOb2RlIHRlbXBsYXRlIGZvdW5kIGZvciBjYXRlZ29yeSBcIicraSsnXCInKSxVLm50KFwiICBVc2luZyBkZWZhdWx0IG5vZGUgdGVtcGxhdGVcIikpLG89ZS5OMikpKSxvfWdldExpbmtDYXRlZ29yeUZvckRhdGEodCl7cmV0dXJuXCJcIn1zZXRMaW5rQ2F0ZWdvcnlGb3JEYXRhKHQsaSl7fXNldEZyb21Ob2RlRm9yTGluayh0LGksZSl7fXNldFRvTm9kZUZvckxpbmsodCxpLGUpe31zdGF0aWMgR1Q9ITE7ZmluZExpbmtUZW1wbGF0ZUZvckNhdGVnb3J5KHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtO2xldCBlPWkubGlua1RlbXBsYXRlTWFwLmdldCh0KTtyZXR1cm4gZT09PW51bGwmJihlPWkubGlua1RlbXBsYXRlTWFwLmdldChcIlwiKSxlPT09bnVsbCYmKFBhcnRNYW5hZ2VyLkdUfHwoUGFydE1hbmFnZXIuR1Q9ITAsVS5udCgnTm8gTGluayB0ZW1wbGF0ZSBmb3VuZCBmb3IgY2F0ZWdvcnkgXCInK3QrJ1wiJyksVS5udChcIiAgVXNpbmcgZGVmYXVsdCBsaW5rIHRlbXBsYXRlXCIpKSxlPWkuQzIpKSxlfVlJKHQsaSxlKXt0IGluc3RhbmNlb2YgTGluaz8oaSE9PW51bGwmJnRoaXMuelQoaSx0KSxlIT09bnVsbCYmdGhpcy5WVChlLHQpKTp0IGluc3RhbmNlb2YgUGFydCYmKGkhPT1udWxsJiZ0aGlzLndvLmRlbGV0ZShpKSxlIT09bnVsbCYmdGhpcy53by5zZXQoZSx0KSl9WFQoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbS5tb2RlbDt0aGlzLlJOKHQubm9kZURhdGFBcnJheSl9Uk4odCl7dC5mb3JFYWNoKGk9Pnt0aGlzLlViKGkpfSl9VWIodCl7Y29uc3QgaT10aGlzLmZpbmRQYXJ0Rm9yRGF0YSh0KTtpIT09bnVsbCYmKHRoaXMuZGlhZ3JhbS52MihpLCExKSx0aGlzLklOKGkpKX1JTih0KXt9TU4odCl7fWZpbmRQYXJ0Rm9yS2V5KHQpe2lmKHQ9PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgZT10aGlzLmRpYWdyYW0ubW9kZWwuZmluZE5vZGVEYXRhRm9yS2V5KHQpO3JldHVybiBlIT09bnVsbD90aGlzLndvLmdldChlKTpudWxsfWZpbmROb2RlRm9yS2V5KHQpe2lmKHQ9PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgZT10aGlzLmRpYWdyYW0ubW9kZWwuZmluZE5vZGVEYXRhRm9yS2V5KHQpO2lmKGU9PT1udWxsKXJldHVybiBudWxsO2NvbnN0IHM9dGhpcy53by5nZXQoZSk7cmV0dXJuIHMgaW5zdGFuY2VvZiBOb2RlP3M6bnVsbH1maW5kTGlua0ZvcktleSh0KXtyZXR1cm4gbnVsbH1maW5kUGFydEZvckRhdGEodCl7aWYodD09PW51bGwpcmV0dXJuIG51bGw7bGV0IGk9dGhpcy53by5nZXQodCk7cmV0dXJuIGkhPT1udWxsfHwoaT10aGlzLl9kLmdldCh0KSksaX1maW5kTm9kZUZvckRhdGEodCl7aWYodD09PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgaT10aGlzLndvLmdldCh0KTtyZXR1cm4gaSBpbnN0YW5jZW9mIE5vZGU/aTpudWxsfWZpbmRMaW5rRm9yRGF0YSh0LGkpe3JldHVybiB0PT09bnVsbD9udWxsOnRoaXMuX2QuZ2V0KHQpfWZpbmROb2Rlc0J5RXhhbXBsZSguLi50KXtjb25zdCBpPW5ldyBHU2V0LGU9dGhpcy5RZC5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlLG49cy5kYXRhO2lmKG4hPT1udWxsKWZvcihsZXQgbz0wO288YXJndW1lbnRzLmxlbmd0aDtvKyspe2NvbnN0IHI9YXJndW1lbnRzW29dO2lmKFUuVyhyKSYmdGhpcy5PTihuLHIpKXtpLmFkZChzKTticmVha319fXJldHVybiBpLml0ZXJhdG9yfWZpbmRMaW5rc0J5RXhhbXBsZSguLi50KXtjb25zdCBpPW5ldyBHU2V0LGU9dGhpcy5acy5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlLG49cy5kYXRhO2lmKG4hPT1udWxsKWZvcihsZXQgbz0wO288YXJndW1lbnRzLmxlbmd0aDtvKyspe2NvbnN0IHI9YXJndW1lbnRzW29dO2lmKFUuVyhyKSYmdGhpcy5PTihuLHIpKXtpLmFkZChzKTticmVha319fXJldHVybiBpLml0ZXJhdG9yfU9OKHQsaSl7Zm9yKGNvbnN0IGUgaW4gaSl7Y29uc3Qgcz10W2VdLG49aVtlXTtpZihBcnJheS5pc0FycmF5KG4pKXtpZighQXJyYXkuaXNBcnJheShzKSlyZXR1cm4hMTtjb25zdCBvPXMscj1uO2lmKG8ubGVuZ3RoPHIubGVuZ3RoKXJldHVybiExO2ZvcihsZXQgbD0wO2w8by5sZW5ndGg7bCsrKXtjb25zdCBoPW9bbF0sZj1yW2xdO2lmKGYhPT12b2lkIDAmJiF0aGlzLkhUKGgsZikpcmV0dXJuITF9fWVsc2UgaWYoIXRoaXMuSFQocyxuKSlyZXR1cm4hMX1yZXR1cm4hMH1IVCh0LGkpe2lmKFUucnQoaSkpe2lmKCFpKHQpKXJldHVybiExfWVsc2UgaWYoaSBpbnN0YW5jZW9mIFJlZ0V4cCl7aWYoIXR8fCFpLnRlc3QodC50b1N0cmluZygpKSlyZXR1cm4hMX1lbHNlIGlmKFUuVyh0KSYmVS5XKGkpKXtpZighdGhpcy5PTih0LGkpKXJldHVybiExfWVsc2UgaWYodCE9PWkpcmV0dXJuITE7cmV0dXJuITB9ZG9Nb2RlbERhdGFDaGFuZ2VkKHQpe2lmKHQubW9kZWw9PT10aGlzLmRpYWdyYW0ubW9kZWwmJnRoaXMuZGlhZ3JhbS5IKXt0aGlzLmRpYWdyYW0uSD0hMTt0cnl7Y29uc3QgaT10LmNoYW5nZTt0Lm1vZGVsQ2hhbmdlPT09XCJcIiYmdC5vYmplY3QhPT1udWxsJiZpPT09MiYmdGhpcy5EeSh0Lm9iamVjdCx0LnByb3BlcnR5TmFtZSl9ZmluYWxseXt0aGlzLmRpYWdyYW0uSD0hMH19fWRvTW9kZWxDaGFuZ2VkKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKCFpfHx0Lm1vZGVsIT09aS5tb2RlbClyZXR1cm47Y29uc3QgZT10LmNoYW5nZTtpZihpLlVSKHQpLCEhaS5IKXtpLkg9ITE7dHJ5e2NvbnN0IHM9dC5tb2RlbENoYW5nZTtpZihzIT09XCJcIilpZihlPT09Mil7aWYocz09PVwibm9kZUNhdGVnb3J5XCIpe2NvbnN0IG49dC5vYmplY3Q7aWYobiE9PW51bGwpe2NvbnN0IG89dGhpcy5maW5kUGFydEZvckRhdGEobikscj10Lm5ld1ZhbHVlO28hPT1udWxsJiZ0eXBlb2Ygcj09XCJzdHJpbmdcIiYmKG8uY2F0ZWdvcnk9cil9fWVsc2UgaWYocz09PVwibm9kZURhdGFBcnJheVwiKXtjb25zdCBuPXQub2xkVmFsdWU7dGhpcy5STihuKTtjb25zdCBvPXQubmV3VmFsdWU7dGhpcy5UeShvKX1pLmlzTW9kaWZpZWQ9ITB9ZWxzZSBpZihlPT09Myl7Y29uc3Qgbj10Lm5ld1ZhbHVlO3M9PT1cIm5vZGVEYXRhQXJyYXlcIiYmVS5XKG4pJiZ0aGlzLllUKG4pLGkuaXNNb2RpZmllZD0hMH1lbHNlIGlmKGU9PT00KXtjb25zdCBuPXQub2xkVmFsdWU7cz09PVwibm9kZURhdGFBcnJheVwiJiZVLlcobikmJnRoaXMuVWIobiksaS5pc01vZGlmaWVkPSEwfWVsc2UgZT09PTEmJihzPT09XCJTb3VyY2VDaGFuZ2VkXCI/dC5vYmplY3QhPT1udWxsP3RoaXMuRHkodC5vYmplY3QsdC5wcm9wZXJ0eU5hbWUpOih0aGlzLnVwZGF0ZUFsbFJlbGF0aW9uc2hpcHNGcm9tRGF0YSgpLHRoaXMudXBkYXRlQWxsVGFyZ2V0QmluZGluZ3MoKSk6cz09PVwiTW9kZWxEaXNwbGFjZWRcIiYmdGhpcy5yZWJ1aWxkUGFydHMoKSk7ZWxzZSBpZihlPT09Mil7Y29uc3Qgbj10LnByb3BlcnR5TmFtZSxvPXQub2JqZWN0LHI9aS5tb2RlbDtvPT09cj8obj09PVwibm9kZUtleVByb3BlcnR5XCJ8fG49PT1cIm5vZGVDYXRlZ29yeVByb3BlcnR5XCIpJiYoaS51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nfHx0aGlzLnJlYnVpbGRQYXJ0cygpKTpvIT09bnVsbCYmdGhpcy5EeShvLG4pLGkuaXNNb2RpZmllZD0hMH1lbHNlKGU9PT0zfHxlPT09NCkmJih0aGlzLlFPKHQsaS5tb2RlbCksaS5pc01vZGlmaWVkPSEwKX1maW5hbGx5e2kuSD0hMH19fXVwZGF0ZUFsbFRhcmdldEJpbmRpbmdzKHQpe3Q9PT12b2lkIDAmJih0PVwiXCIpO2xldCBpPXRoaXMucGFydHMuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspaS52YWx1ZS51cGRhdGVUYXJnZXRCaW5kaW5ncyh0KTtmb3IoaT10aGlzLm5vZGVzLml0ZXJhdG9yO2kubmV4dCgpOylpLnZhbHVlLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQpO2ZvcihpPXRoaXMubGlua3MuaXRlcmF0b3I7aS5uZXh0KCk7KWkudmFsdWUudXBkYXRlVGFyZ2V0QmluZGluZ3ModCl9dXBkYXRlQWxsVGhlbWVCaW5kaW5ncygpe2xldCB0PXRoaXMucGFydHMuaXRlcmF0b3I7Zm9yKDt0Lm5leHQoKTspdC52YWx1ZS5CbygpO2Zvcih0PXRoaXMubm9kZXMuaXRlcmF0b3I7dC5uZXh0KCk7KXQudmFsdWUuQm8oKTtmb3IodD10aGlzLmxpbmtzLml0ZXJhdG9yO3QubmV4dCgpOyl0LnZhbHVlLkJvKCl9dXBkYXRlQWxsUmVsYXRpb25zaGlwc0Zyb21EYXRhKCl7Y29uc3QgdD10aGlzLmRpYWdyYW0ubW9kZWwsaT1uZXcgR1NldCxlPXQubm9kZURhdGFBcnJheTtmb3IobGV0IG89MDtvPGUubGVuZ3RoO28rKyl7Y29uc3Qgcj1lW29dO2kuYWRkKHIpfWNvbnN0IHM9W107dGhpcy5ub2Rlcy5lYWNoKG89PntvLmRhdGEhPT1udWxsJiYhaS5oYXMoby5kYXRhKSYmcy5wdXNoKG8uZGF0YSl9KSx0aGlzLnBhcnRzLmVhY2gobz0+e28uZGF0YSE9PW51bGwmJiFpLmhhcyhvLmRhdGEpJiZzLnB1c2goby5kYXRhKX0pLHMuZm9yRWFjaChvPT50LnFUKG8sITEpKTtmb3IobGV0IG89MDtvPGUubGVuZ3RoO28rKyl7Y29uc3Qgcj1lW29dO3RoaXMuZmluZFBhcnRGb3JEYXRhKHIpPT09bnVsbCYmdC5XVChyLCExKX10aGlzLmpUKCk7bGV0IG49dGhpcy5wYXJ0cy5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyluLnZhbHVlLnVwZGF0ZVJlbGF0aW9uc2hpcHNGcm9tRGF0YSgpO2ZvcihuPXRoaXMubm9kZXMuaXRlcmF0b3I7bi5uZXh0KCk7KW4udmFsdWUudXBkYXRlUmVsYXRpb25zaGlwc0Zyb21EYXRhKCk7Zm9yKG49dGhpcy5saW5rcy5pdGVyYXRvcjtuLm5leHQoKTspbi52YWx1ZS51cGRhdGVSZWxhdGlvbnNoaXBzRnJvbURhdGEoKX1qVCgpe311cGRhdGVSZWxhdGlvbnNoaXBzRnJvbURhdGEodCl7fUR5KHQsaSl7aWYodHlwZW9mIGk9PVwic3RyaW5nXCIpe2NvbnN0IGU9dGhpcy5maW5kUGFydEZvckRhdGEodCk7aWYoZSE9PW51bGwpZS51cGRhdGVUYXJnZXRCaW5kaW5ncyhpKTtlbHNle2NvbnN0IHM9dGhpcy5fTyh0KTtpZihzIT09bnVsbCYmcy5sZW5ndGg+MCl7Zm9yKGxldCBvPTA7bzxzLmxlbmd0aDtvKyspc1tvXS51cGRhdGVUYXJnZXRCaW5kaW5ncyhpKTtjb25zdCBuPXNbMF0ucGFydDtpZihuIT09bnVsbCl7Y29uc3Qgbz1uLmFkb3JubWVudHM7Zm9yKDtvLm5leHQoKTspby52YWx1ZS51cGRhdGVUYXJnZXRCaW5kaW5ncyhpKX1VLnR0KHMpfX10PT09dGhpcy5kaWFncmFtLm1vZGVsLm1vZGVsRGF0YSYmdGhpcy51cGRhdGVBbGxUYXJnZXRCaW5kaW5ncyhpKX19X08odCl7bGV0IGk9bnVsbDtjb25zdCBlPXRoaXMudGcuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtmb3IobGV0IG49MDtuPHMubGVuZ3RoO24rKyl7Y29uc3Qgcj1zW25dLmZpbmRJdGVtUGFuZWxGb3JEYXRhKHQpO3IhPT1udWxsJiYoaT09PW51bGwmJihpPVUubHQoKSksaS5wdXNoKHIpKX1pZihpIT09bnVsbClicmVha31yZXR1cm4gaX1FTih0KXtyZXR1cm4gdGhpcy50Zy5nZXQodCl9UU8odCxpKXtjb25zdCBlPXQub2JqZWN0O2lmKCFBcnJheS5pc0FycmF5KGUpKXJldHVybjtjb25zdCBzPXQuY2hhbmdlPT09MyxuPXM/dC5uZXdQYXJhbTp0Lm9sZFBhcmFtLG89cz90Lm5ld1ZhbHVlOnQub2xkVmFsdWUscj10aGlzLkVOKGUpO2lmKEFycmF5LmlzQXJyYXkocikpZm9yKGxldCBsPTA7bDxyLmxlbmd0aDtsKyspe2NvbnN0IGg9cltsXTtzP2guZ2IobyxuLCEwKTpoLlVJKG4pfX1XMih0LGkpe2khPT1udWxsJiZ0LkpyKHM9PmkudkEocykpO2NvbnN0IGU9dC5NaDtpZihBcnJheS5pc0FycmF5KGUpKXtjb25zdCBzPXRoaXMuRU4oZSk7aWYocz09PW51bGwpdGhpcy50Zy5zZXQoZSxbdF0pO2Vsc2V7Zm9yKGxldCBuPTA7bjxzLmxlbmd0aDtuKyspaWYoc1tuXT09PXQpcmV0dXJuO3MucHVzaCh0KX19fWoyKHQsaSl7dC5KcihzPT5pLkhSKHMpKTtjb25zdCBlPXQuTWg7aWYoQXJyYXkuaXNBcnJheShlKSl7Y29uc3Qgcz10aGlzLkVOKGUpO2lmKHMhPT1udWxsKXtmb3IobGV0IG49MDtuPHMubGVuZ3RoO24rKylpZihzW25dPT09dCl7cy5zcGxpY2UobiwxKSxzLmxlbmd0aD09PTAmJnRoaXMudGcuZGVsZXRlKGUpO3JldHVybn19fX1jb3B5UGFydHModCxpLGUpe2U9PT12b2lkIDAmJihlPSExKTtjb25zdCBzPW5ldyBHTWFwO2lmKEFycmF5LmlzQXJyYXkodCkpZm9yKGxldCBvPTA7bzx0Lmxlbmd0aDtvKyspdGhpcy5HYih0W29dLGkscyxlKTtlbHNle2NvbnN0IG89dC5pdGVyYXRvcjtmb3IoO28ubmV4dCgpOyl0aGlzLkdiKG8udmFsdWUsaSxzLGUpfWlmKGkhPT1udWxsKXtjb25zdCBvPWkubW9kZWwscj1pLmMwKCkuZHJhZ3NMaW5rLGw9bmV3IEdTZXQsaD1uZXcgR01hcCxmPXMuaXRlcmF0b3I7Zm9yKDtmLm5leHQoKTspe2NvbnN0IGE9Zi52YWx1ZTtpZihhIGluc3RhbmNlb2YgTGluaykhciYmKGEuZnJvbU5vZGU9PT1udWxsfHxhLnRvTm9kZT09PW51bGwpJiZsLmFkZChhKTtlbHNlIGlmKGEgaW5zdGFuY2VvZiBOb2RlJiZhLmRhdGEhPT1udWxsKXtpZihvLlNtKCkpe2NvbnN0IGM9YSx1PWYua2V5LGQ9dS5maW5kVHJlZVBhcmVudE5vZGUoKTtpZihkIT09bnVsbCl7Y29uc3QgbT1zLmdldChkKTtpZihtIT09bnVsbCl7by5zZXRQYXJlbnRLZXlGb3JOb2RlRGF0YShjLmRhdGEsby5nZXRLZXlGb3JOb2RlRGF0YShtLmRhdGEpKTtjb25zdCBnPWkuZmluZExpbmtGb3JEYXRhKGMuZGF0YSkscD11LmZpbmRUcmVlUGFyZW50TGluaygpO3AhPT1udWxsJiZnIT09bnVsbCYmaC5zZXQocCxnKX19fWVsc2UgaWYoby5CMSgpKXtjb25zdCBjPWEsdT1mLmtleSxkPW8uaXNSZWxhdGVkS2V5c1BhdGhUbz91LmZpbmROb2Rlc091dE9mKCk6dS5maW5kTm9kZXNJbnRvKCk7Zm9yKDtkLm5leHQoKTspe2NvbnN0IG09ZC52YWx1ZSxnPXMuZ2V0KG0pO2lmKGchPT1udWxsKXtvLmFkZFJlbGF0ZWRLZXlGb3JOb2RlRGF0YShjLmRhdGEsZy5rZXkpO2NvbnN0IHA9aS5wYXJ0TWFuYWdlci5maW5kTGlua0ZvckRhdGEoYy5kYXRhLGcua2V5KSx3PXRoaXMuZmluZExpbmtGb3JEYXRhKHUuZGF0YSxtLmtleSk7dyE9PW51bGwmJnAhPT1udWxsJiZoLnNldCh3LHApfWVsc2Ugby5yZW1vdmVSZWxhdGVkS2V5Rm9yTm9kZURhdGEoYy5kYXRhLG0ua2V5KX19fX1pZihsLmNvdW50PjAmJmkucmVtb3ZlUGFydHMobCwhMSksaC5jb3VudD4wKXtjb25zdCBhPWguaXRlcmF0b3I7Zm9yKDthLm5leHQoKTspe2NvbnN0IGM9YS5rZXksdT1hLnZhbHVlO3Muc2V0KGMsdSl9fX1pZihpIT09bnVsbCYmdGhpcy5kaWFncmFtIT09bnVsbCl7Y29uc3Qgbz1pLm1vZGVsLHI9by5hZnRlckNvcHlGdW5jdGlvbjtpZihyIT09bnVsbCl7Y29uc3QgbD1uZXcgR01hcDtzLmVhY2goZj0+e2Yua2V5LmRhdGEhPT1udWxsJiZsLnNldChmLmtleS5kYXRhLGYudmFsdWUuZGF0YSl9KTtjb25zdCBoPXRoaXMuZGlhZ3JhbS5tb2RlbDtyKGwsbyxoKX19Y29uc3Qgbj1zLml0ZXJhdG9yO2Zvcig7bi5uZXh0KCk7KW4udmFsdWUudXBkYXRlVGFyZ2V0QmluZGluZ3MoKTtyZXR1cm4gc31HYih0LGksZSxzKXtpZih0PT09bnVsbHx8cyYmIXQuY2FuQ29weSgpKXJldHVybiBudWxsO2lmKGUuaGFzKHQpKXJldHVybiBlLmdldCh0KTtjb25zdCBuPXRoaXMuQk4odCxpKTtpZighKG4gaW5zdGFuY2VvZiBQYXJ0KSlyZXR1cm4gbnVsbDtpZihuLmlzU2VsZWN0ZWQ9ITEsbi5pc0hpZ2hsaWdodGVkPSExLGUuc2V0KHQsbiksdCBpbnN0YW5jZW9mIE5vZGUpe2NvbnN0IG89dC5saW5rc0Nvbm5lY3RlZDtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlO2lmKHIuZnJvbU5vZGU9PT10KXtjb25zdCBsPWUuZ2V0KHIpO2whPT1udWxsJiYobC5mcm9tTm9kZT1uKX1pZihyLnRvTm9kZT09PXQpe2NvbnN0IGw9ZS5nZXQocik7bCE9PW51bGwmJihsLnRvTm9kZT1uKX19aWYodCBpbnN0YW5jZW9mIEdyb3VwJiZuIGluc3RhbmNlb2YgR3JvdXApe2NvbnN0IHI9dC5tZW1iZXJQYXJ0cztmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlLGg9dGhpcy5HYihsLGksZSxzKTtoIGluc3RhbmNlb2YgTGlua3x8aCE9PW51bGwmJihoLmNvbnRhaW5pbmdHcm91cD1uKX19fWVsc2UgaWYodCBpbnN0YW5jZW9mIExpbmsmJm4gaW5zdGFuY2VvZiBMaW5rKXtjb25zdCBvPXQuZnJvbU5vZGU7aWYobyE9PW51bGwpe2NvbnN0IGg9ZS5nZXQobyk7aCE9PW51bGwmJihuLmZyb21Ob2RlPWgpfWNvbnN0IHI9dC50b05vZGU7aWYociE9PW51bGwpe2NvbnN0IGg9ZS5nZXQocik7aCE9PW51bGwmJihuLnRvTm9kZT1oKX1jb25zdCBsPXQubGFiZWxOb2Rlcztmb3IoO2wubmV4dCgpOyl7Y29uc3QgaD1sLnZhbHVlLGY9dGhpcy5HYihoLGksZSxzKTtmIT09bnVsbCYmZiBpbnN0YW5jZW9mIE5vZGUmJihmLmxhYmVsZWRMaW5rPW4pfX1yZXR1cm4gbn1CTih0LGkpe2xldCBlPW51bGw7Y29uc3Qgcz10LmRhdGE7aWYocyE9PW51bGwmJmkhPT1udWxsKXtjb25zdCBuPWkubW9kZWw7aWYoISh0IGluc3RhbmNlb2YgTGluaykpe2NvbnN0IG89bi5jb3B5Tm9kZURhdGEocyk7VS5XKG8pJiYobi5hZGROb2RlRGF0YShvKSxlPWkuZmluZFBhcnRGb3JEYXRhKG8pKX19ZWxzZSBpZih0Lkt0KCksZT10LmNvcHkoKSxlIT09bnVsbCl7Y29uc3Qgbj10aGlzLmRpYWdyYW07aWYoaSE9PW51bGwpaS5hZGQoZSk7ZWxzZSBpZihzIT09bnVsbCYmbiE9PW51bGwmJm4uY29tbWFuZEhhbmRsZXIhPT1udWxsJiZuLmNvbW1hbmRIYW5kbGVyLmNvcGllc0NsaXBib2FyZERhdGEpe2NvbnN0IG89bi5tb2RlbDtsZXQgcj1udWxsO2UgaW5zdGFuY2VvZiBMaW5rfHwocj1vLmNvcHlOb2RlRGF0YShzKSksVS5XKHIpJiYoZS5kYXRhPXIpfX1yZXR1cm4gZX1nZXQgbm9kZXMoKXtyZXR1cm4gdGhpcy5RZH1nZXQgbGlua3MoKXtyZXR1cm4gdGhpcy5ac31nZXQgcGFydHMoKXtyZXR1cm4gdGhpcy5GdH1nZXQgZGlhZ3JhbSgpe3JldHVybiB0aGlzLkN9Z2V0IGFkZHNUb1RlbXBvcmFyeUxheWVyKCl7cmV0dXJuIHRoaXMuRk59c2V0IGFkZHNUb1RlbXBvcmFyeUxheWVyKHQpe3RoaXMuRk49dH19Y2xhc3MgR3JhcGhMaW5rc1BhcnRNYW5hZ2VyIGV4dGVuZHMgUGFydE1hbmFnZXJ7WjIoKXtjb25zdCB0PXRoaXMuZGlhZ3JhbS5tb2RlbDt0aGlzLlR5KHQubm9kZURhdGFBcnJheSksdGhpcy52VCh0LmxpbmtEYXRhQXJyYXkpfVR5KHQpe3N1cGVyLlR5KHQsITEpO2NvbnN0IGk9dGhpcy5saW5rcy5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOylpLnZhbHVlLlRkKCk7dGhpcy5kaWFncmFtLnoxKCExKX12VCh0KXt0LmZvckVhY2goaT0+e3RoaXMuSlQoaSl9KSx0aGlzLmRpYWdyYW0uejEoITEpfUpUKHQpe2lmKHQ9PW51bGx8fHRoaXMuZGlhZ3JhbS51bmRvTWFuYWdlci5pc1VuZG9pbmdSZWRvaW5nfHx0aGlzLmZpbmRMaW5rRm9yRGF0YSh0KSlyZXR1cm4gbnVsbDtjb25zdCBpPXRoaXMuZ2V0TGlua0NhdGVnb3J5Rm9yRGF0YSh0KSxlPXRoaXMuZmluZExpbmtUZW1wbGF0ZUZvckNhdGVnb3J5KGkpO2lmKGUhPT1udWxsKXtlLkt0KCk7Y29uc3Qgcz1lLmNvcHkoKTtpZihzIT09bnVsbCl7Y29uc3Qgbj10aGlzLmRpYWdyYW0ubWU7dGhpcy5kaWFncmFtLm1lPSEwLHMuV289aSxzLm5pPXQ7Y29uc3Qgbz10aGlzLmRpYWdyYW0ubW9kZWwscj1vLkhiKHQsITApO3IhPT1cIlwiJiYocy5mcm9tUG9ydElkPXIpO2NvbnN0IGw9by5PZSh0LCEwKTtpZihsIT09dm9pZCAwKXtjb25zdCBjPXRoaXMuZmluZE5vZGVGb3JLZXkobCk7YyBpbnN0YW5jZW9mIE5vZGUmJihzLmZyb21Ob2RlPWMpfWNvbnN0IGg9by5IYih0LCExKTtoIT09XCJcIiYmKHMudG9Qb3J0SWQ9aCk7Y29uc3QgZj1vLk9lKHQsITEpO2lmKGYhPT12b2lkIDApe2NvbnN0IGM9dGhpcy5maW5kTm9kZUZvcktleShmKTtjIGluc3RhbmNlb2YgTm9kZSYmKHMudG9Ob2RlPWMpfWNvbnN0IGE9by5nZXRMYWJlbEtleXNGb3JMaW5rRGF0YSh0KTtyZXR1cm4gQXJyYXkuaXNBcnJheShhKSYmYS5mb3JFYWNoKGM9Pntjb25zdCB1PXRoaXMuZmluZE5vZGVGb3JLZXkoYyk7dSE9PW51bGwmJih1LmxhYmVsZWRMaW5rPXMpfSksdGhpcy5hZGRzVG9UZW1wb3JhcnlMYXllciYmKHMuZmw9XCJUb29sXCIpLHRoaXMuZGlhZ3JhbS5hZGQocykscy5uaT1udWxsLHMuZGF0YT10LHRoaXMuZGlhZ3JhbS5tZT1uLHN9fXJldHVybiBudWxsfVhUKCl7Y29uc3QgdD10aGlzLmRpYWdyYW0ubW9kZWw7dGhpcy4kVCh0LmxpbmtEYXRhQXJyYXkpLHRoaXMuUk4odC5ub2RlRGF0YUFycmF5KX0kVCh0KXt0LmZvckVhY2goaT0+e3RoaXMuVWIoaSl9KX1nZXRMaW5rQ2F0ZWdvcnlGb3JEYXRhKHQpe3JldHVybiB0aGlzLmRpYWdyYW0ubW9kZWwuZ2V0Q2F0ZWdvcnlGb3JMaW5rRGF0YSh0KX1zZXRMaW5rQ2F0ZWdvcnlGb3JEYXRhKHQsaSl7cmV0dXJuIHRoaXMuZGlhZ3JhbS5tb2RlbC5zZXRDYXRlZ29yeUZvckxpbmtEYXRhKHQsaSl9c2V0RnJvbU5vZGVGb3JMaW5rKHQsaSl7Y29uc3QgZT10aGlzLmRpYWdyYW0ubW9kZWwscz1pIT09bnVsbD9pLmRhdGE6bnVsbDtlLnNldEZyb21LZXlGb3JMaW5rRGF0YSh0LmRhdGEsZS5nZXRLZXlGb3JOb2RlRGF0YShzKSl9c2V0VG9Ob2RlRm9yTGluayh0LGkpe2NvbnN0IGU9dGhpcy5kaWFncmFtLm1vZGVsLHM9aSE9PW51bGw/aS5kYXRhOm51bGw7ZS5zZXRUb0tleUZvckxpbmtEYXRhKHQuZGF0YSxlLmdldEtleUZvck5vZGVEYXRhKHMpKX1NTih0KXt0aGlzLmRpYWdyYW0ubW9kZWwucmVtb3ZlTGlua0RhdGEodC5kYXRhKX1maW5kUGFydEZvcktleSh0KXtjb25zdCBpPXN1cGVyLmZpbmRQYXJ0Rm9yS2V5KHQpO2lmKGk9PT1udWxsKXtjb25zdCBzPXRoaXMuZGlhZ3JhbS5tb2RlbC5maW5kTGlua0RhdGFGb3JLZXkodCk7aWYocyE9PW51bGwpcmV0dXJuIHRoaXMuZmluZExpbmtGb3JEYXRhKHMpfXJldHVybiBpfWZpbmRMaW5rRm9yS2V5KHQpe2lmKHQ9PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgZT10aGlzLmRpYWdyYW0ubW9kZWwuZmluZExpbmtEYXRhRm9yS2V5KHQpO3JldHVybiBlIT09bnVsbD90aGlzLmZpbmRMaW5rRm9yRGF0YShlKTpudWxsfWRvTW9kZWxDaGFuZ2VkKHQpe2lmKHN1cGVyLmRvTW9kZWxDaGFuZ2VkKHQpLCF0aGlzLmRpYWdyYW0pcmV0dXJuO2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKHQubW9kZWwhPT1pLm1vZGVsKXJldHVybjtjb25zdCBlPXQuY2hhbmdlO2lmKGkuSCl7aS5IPSExO3RyeXtjb25zdCBzPXQubW9kZWxDaGFuZ2U7aWYocyE9PVwiXCIpe2lmKGU9PT0yKXtpZihzPT09XCJsaW5rRnJvbUtleVwiKXtjb25zdCBuPXQub2JqZWN0LG89dGhpcy5maW5kTGlua0ZvckRhdGEobik7aWYobyE9PW51bGwpe2NvbnN0IHI9dC5uZXdWYWx1ZSxsPXRoaXMuZmluZE5vZGVGb3JLZXkocik7by5mcm9tTm9kZT1sfX1lbHNlIGlmKHM9PT1cImxpbmtUb0tleVwiKXtjb25zdCBuPXQub2JqZWN0LG89dGhpcy5maW5kTGlua0ZvckRhdGEobik7aWYobyE9PW51bGwpe2NvbnN0IHI9dC5uZXdWYWx1ZSxsPXRoaXMuZmluZE5vZGVGb3JLZXkocik7by50b05vZGU9bH19ZWxzZSBpZihzPT09XCJsaW5rRnJvbVBvcnRJZFwiKXtjb25zdCBuPXQub2JqZWN0LG89dGhpcy5maW5kTGlua0ZvckRhdGEobik7aWYobyE9PW51bGwpe2NvbnN0IHI9dC5uZXdWYWx1ZTt0eXBlb2Ygcj09XCJzdHJpbmdcIiYmKG8uZnJvbVBvcnRJZD1yKX19ZWxzZSBpZihzPT09XCJsaW5rVG9Qb3J0SWRcIil7Y29uc3Qgbj10Lm9iamVjdCxvPXRoaXMuZmluZExpbmtGb3JEYXRhKG4pO2lmKG8hPT1udWxsKXtjb25zdCByPXQubmV3VmFsdWU7dHlwZW9mIHI9PVwic3RyaW5nXCImJihvLnRvUG9ydElkPXIpfX1lbHNlIGlmKHM9PT1cIm5vZGVHcm91cEtleVwiKXtjb25zdCBuPXQub2JqZWN0LG89dGhpcy5maW5kUGFydEZvckRhdGEobik7aWYobyE9PW51bGwpe2NvbnN0IHI9dC5uZXdWYWx1ZTtpZihyIT09dm9pZCAwKXtjb25zdCBsPXRoaXMuZmluZE5vZGVGb3JLZXkocik7bCBpbnN0YW5jZW9mIEdyb3VwP28uY29udGFpbmluZ0dyb3VwPWw6by5jb250YWluaW5nR3JvdXA9bnVsbH1lbHNlIG8uY29udGFpbmluZ0dyb3VwPW51bGx9fWVsc2UgaWYocz09PVwibGlua0xhYmVsS2V5c1wiKXtjb25zdCBuPXQub2JqZWN0LG89dGhpcy5maW5kTGlua0ZvckRhdGEobik7aWYobyE9PW51bGwpe2NvbnN0IHI9dC5vbGRWYWx1ZSxsPXQubmV3VmFsdWU7QXJyYXkuaXNBcnJheShyKSYmci5mb3JFYWNoKGg9PntpZihsLmluZGV4T2YoaCk+PTApcmV0dXJuO2NvbnN0IGY9dGhpcy5maW5kTm9kZUZvcktleShoKTtmIT09bnVsbCYmKGYubGFiZWxlZExpbms9bnVsbCl9KSxBcnJheS5pc0FycmF5KGwpJiZsLmZvckVhY2goaD0+e2NvbnN0IGY9dGhpcy5maW5kTm9kZUZvcktleShoKTtmIT09bnVsbCYmKGYubGFiZWxlZExpbms9byl9KX19ZWxzZSBpZihzPT09XCJsaW5rQ2F0ZWdvcnlcIil7Y29uc3Qgbj10Lm9iamVjdCxvPXRoaXMuZmluZExpbmtGb3JEYXRhKG4pLHI9dC5uZXdWYWx1ZTtvIT09bnVsbCYmdHlwZW9mIHI9PVwic3RyaW5nXCImJihvLmNhdGVnb3J5PXIpfWVsc2UgaWYocz09PVwibGlua0RhdGFBcnJheVwiKXtjb25zdCBuPXQub2xkVmFsdWU7dGhpcy4kVChuKTtjb25zdCBvPXQubmV3VmFsdWU7dGhpcy52VChvKX1pLmlzTW9kaWZpZWQ9ITB9ZWxzZSBpZihlPT09Myl7Y29uc3Qgbj10Lm5ld1ZhbHVlO2lmKHM9PT1cImxpbmtEYXRhQXJyYXlcIiYmVS5XKG4pKXRoaXMuSlQobik7ZWxzZSBpZihzPT09XCJsaW5rTGFiZWxLZXlzXCImJnQubW9kZWwuaXNLZXlUeXBlKG4pKXtjb25zdCBvPXQub2JqZWN0LHI9dGhpcy5maW5kTGlua0ZvckRhdGEobyksbD10aGlzLmZpbmROb2RlRm9yS2V5KG4pO3IhPT1udWxsJiZsIT09bnVsbCYmKGwubGFiZWxlZExpbms9cil9aS5pc01vZGlmaWVkPSEwfWVsc2UgaWYoZT09PTQpe2NvbnN0IG49dC5vbGRWYWx1ZTtpZihzPT09XCJsaW5rRGF0YUFycmF5XCImJlUuVyhuKSl0aGlzLlViKG4pO2Vsc2UgaWYocz09PVwibGlua0xhYmVsS2V5c1wiJiZ0Lm1vZGVsLmlzS2V5VHlwZShuKSl7Y29uc3Qgbz10aGlzLmZpbmROb2RlRm9yS2V5KG4pO28hPT1udWxsJiYoby5sYWJlbGVkTGluaz1udWxsKX1pLmlzTW9kaWZpZWQ9ITB9fWVsc2UgaWYoZT09PTIpe2NvbnN0IG49dC5wcm9wZXJ0eU5hbWUsbz10Lm9iamVjdCxyPWkubW9kZWw7bz09PXImJihuPT09XCJsaW5rRnJvbUtleVByb3BlcnR5XCJ8fG49PT1cImxpbmtUb0tleVByb3BlcnR5XCJ8fG49PT1cImxpbmtGcm9tUG9ydElkUHJvcGVydHlcInx8bj09PVwibGlua1RvUG9ydElkUHJvcGVydHlcInx8bj09PVwibGlua0xhYmVsS2V5c1Byb3BlcnR5XCJ8fG49PT1cIm5vZGVJc0dyb3VwUHJvcGVydHlcInx8bj09PVwibm9kZUdyb3VwS2V5UHJvcGVydHlcInx8bj09PVwibGlua0NhdGVnb3J5UHJvcGVydHlcIikmJihpLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMucmVidWlsZFBhcnRzKCkpLGkuaXNNb2RpZmllZD0hMH19ZmluYWxseXtpLkg9ITB9fX1qVCgpe2NvbnN0IHQ9dGhpcy5kaWFncmFtLm1vZGVsLGk9bmV3IEdTZXQsZT10LmxpbmtEYXRhQXJyYXk7ZS5mb3JFYWNoKG49PntpLmFkZChuKX0pO2NvbnN0IHM9W107dGhpcy5saW5rcy5lYWNoKG49PntuLmRhdGEhPT1udWxsJiYhaS5oYXMobi5kYXRhKSYmcy5wdXNoKG4uZGF0YSl9KSxzLmZvckVhY2gobj0+e3QuWlQobiwhMSl9KSxlLmZvckVhY2gobj0+e3RoaXMuZmluZExpbmtGb3JEYXRhKG4pPT09bnVsbCYmdC5RVChuLCExKX0pfXVwZGF0ZVJlbGF0aW9uc2hpcHNGcm9tRGF0YSh0KXtjb25zdCBpPXQuZGF0YTtpZihpPT09bnVsbClyZXR1cm47Y29uc3QgZT10LmRpYWdyYW07aWYoZT09PW51bGwpcmV0dXJuO2NvbnN0IHM9ZS5tb2RlbDtpZih0IGluc3RhbmNlb2YgTGluayl7bGV0IG49cy5PZShpLCEwKSxvPWUuZmluZE5vZGVGb3JLZXkobik7dC5mcm9tTm9kZT1vLG49cy5PZShpLCExKSxvPWUuZmluZE5vZGVGb3JLZXkobiksdC50b05vZGU9bztjb25zdCByPXMuZ2V0TGFiZWxLZXlzRm9yTGlua0RhdGEoaSk7aWYoci5sZW5ndGg+MHx8dC5sYWJlbE5vZGVzLmNvdW50PjApe2lmKHIubGVuZ3RoPT09MSYmdC5sYWJlbE5vZGVzLmNvdW50PT09MSl7Y29uc3QgYz1yWzBdLHU9dC5sYWJlbE5vZGVzLmZpcnN0KCk7aWYocy5nZXRLZXlGb3JOb2RlRGF0YSh1LmRhdGEpPT09YylyZXR1cm59Y29uc3QgbD1uZXcgR1NldCgpLmFkZEFsbChyKSxoPW5ldyBHU2V0O3QubGFiZWxOb2Rlcy5lYWNoKGM9PntpZihjLmRhdGEhPT1udWxsKXtjb25zdCB1PXMuZ2V0S2V5Rm9yTm9kZURhdGEoYy5kYXRhKTt1IT09dm9pZCAwJiZoLmFkZCh1KX19KTtjb25zdCBmPWguY29weSgpO2YucmVtb3ZlQWxsKGwpO2NvbnN0IGE9bC5jb3B5KCk7aWYoYS5yZW1vdmVBbGwoaCksZi5jb3VudD4wfHxhLmNvdW50PjApe2NvbnN0IGM9dDtmLmVhY2godT0+e2NvbnN0IGQ9ZS5maW5kTm9kZUZvcktleSh1KTtkIT09bnVsbCYmZC5sYWJlbGVkTGluaz09PWMmJihkLmxhYmVsZWRMaW5rPW51bGwpfSksYS5lYWNoKHU9Pntjb25zdCBkPWUuZmluZE5vZGVGb3JLZXkodSk7ZCE9PW51bGwmJmQubGFiZWxlZExpbmshPT1jJiYoZC5sYWJlbGVkTGluaz1jKX0pfX19ZWxzZSBpZighKHQgaW5zdGFuY2VvZiBBZG9ybm1lbnQpKXtjb25zdCBuPXMuZ2V0R3JvdXBLZXlGb3JOb2RlRGF0YShpKSxvPWUuZmluZFBhcnRGb3JLZXkobik7KG89PT1udWxsfHxvIGluc3RhbmNlb2YgR3JvdXApJiYodC5jb250YWluaW5nR3JvdXA9byl9fUtiKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtLm1vZGVsLGU9aS5nZXRLZXlGb3JOb2RlRGF0YSh0KTtpZihlIT09dm9pZCAwKXtjb25zdCBzPWkuRnkoZSksbj10aGlzLmZpbmRQYXJ0Rm9yRGF0YSh0KTtpZihzIT09bnVsbCYmbiE9PW51bGwpe2NvbnN0IHI9cy5pdGVyYXRvcjtmb3IoO3IubmV4dCgpOyl7Y29uc3QgbD1yLnZhbHVlO2lmKGkuY29udGFpbnNOb2RlRGF0YShsKSl7aWYobiBpbnN0YW5jZW9mIEdyb3VwJiZpLmdldEdyb3VwS2V5Rm9yTm9kZURhdGEobCk9PT1lKXtjb25zdCBoPXRoaXMuZmluZFBhcnRGb3JEYXRhKGwpO2ghPT1udWxsJiYoaC5jb250YWluaW5nR3JvdXA9bil9fWVsc2V7Y29uc3QgaD10aGlzLmZpbmRMaW5rRm9yRGF0YShsKTtpZihoIT09bnVsbCYmbiBpbnN0YW5jZW9mIE5vZGUpe2kuT2UobCwhMCk9PT1lJiYoaC5mcm9tTm9kZT1uKSxpLk9lKGwsITEpPT09ZSYmKGgudG9Ob2RlPW4pO2NvbnN0IGY9aS5nZXRMYWJlbEtleXNGb3JMaW5rRGF0YShsKTtBcnJheS5pc0FycmF5KGYpJiZmLnNvbWUoYT0+YT09PWU/KG4ubGFiZWxlZExpbms9aCwhMCk6ITEpfX19aS5fcyhlKX1jb25zdCBvPWkuZ2V0R3JvdXBLZXlGb3JOb2RlRGF0YSh0KTtpZihvIT09dm9pZCAwKXtjb25zdCByPXRoaXMuZmluZE5vZGVGb3JLZXkobyk7ciBpbnN0YW5jZW9mIEdyb3VwJiYobi5jb250YWluaW5nR3JvdXA9cil9fX1JTih0KXtjb25zdCBpPXRoaXMuZGlhZ3JhbS5tb2RlbDtpZih0IGluc3RhbmNlb2YgTm9kZSl7Y29uc3QgZT1pLmdldEtleUZvck5vZGVEYXRhKHQuZGF0YSk7aWYoZSE9PXZvaWQgMCl7Y29uc3Qgcz10LmxpbmtzQ29ubmVjdGVkO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7aS50bihlLG4uZGF0YSl9aWYodC5pc0xpbmtMYWJlbCl7Y29uc3Qgbj10LmxhYmVsZWRMaW5rO24hPT1udWxsJiZpLnRuKGUsbi5kYXRhKX1pZih0IGluc3RhbmNlb2YgR3JvdXApe2NvbnN0IG49dC5tZW1iZXJQYXJ0cztmb3IoO24ubmV4dCgpOyl7Y29uc3Qgcj1uLnZhbHVlLmRhdGE7aS5jb250YWluc05vZGVEYXRhKHIpJiZpLnRuKGUscil9fX19fUJOKHQsaSl7bGV0IGU9c3VwZXIuQk4odCxpKTtpZih0IGluc3RhbmNlb2YgTGluayl7Y29uc3Qgcz10LmRhdGE7aWYocyE9PW51bGwmJmkhPT1udWxsKXtjb25zdCBuPWkubW9kZWwsbz1uLmNvcHlMaW5rRGF0YShzKTtVLlcobykmJihuLmFkZExpbmtEYXRhKG8pLGU9aS5maW5kTGlua0ZvckRhdGEobykpfWVsc2UgaWYoZSE9PW51bGwpe2NvbnN0IG49dGhpcy5kaWFncmFtO2lmKHMhPT1udWxsJiZuIT09bnVsbCYmbi5jb21tYW5kSGFuZGxlciE9PW51bGwmJm4uY29tbWFuZEhhbmRsZXIuY29waWVzQ2xpcGJvYXJkRGF0YSl7Y29uc3Qgcj1uLm1vZGVsLmNvcHlMaW5rRGF0YShzKTtVLlcocikmJihlLmRhdGE9cil9fX1yZXR1cm4gZX1pbnNlcnRMaW5rKHQsaSxlLHMpe2NvbnN0IG49dGhpcy5kaWFncmFtLG89bi5tb2RlbCxyPW4udG9vbE1hbmFnZXIuZmluZFRvb2woXCJMaW5raW5nXCIpO2xldCBsPVwiXCI7dCE9PW51bGwmJihpPT09bnVsbCYmKGk9dCksbD1pLnBvcnRJZCxsPT09bnVsbCYmKGw9XCJcIikpO2xldCBoPVwiXCI7ZSE9PW51bGwmJihzPT09bnVsbCYmKHM9ZSksaD1zLnBvcnRJZCxoPT09bnVsbCYmKGg9XCJcIikpO2NvbnN0IGY9ci5hcmNoZXR5cGVMaW5rRGF0YTtpZihmIGluc3RhbmNlb2YgTGluayl7Zi5LdCgpO2NvbnN0IGE9Zi5jb3B5KCk7aWYoYSE9PW51bGwpe2EuZnJvbU5vZGU9dCxhLmZyb21Qb3J0SWQ9bCxhLnRvTm9kZT1lLGEudG9Qb3J0SWQ9aCxuLmFkZChhKTtjb25zdCBjPXIuYXJjaGV0eXBlTGFiZWxOb2RlRGF0YTtpZihjIGluc3RhbmNlb2YgTm9kZSl7Yy5LdCgpO2NvbnN0IHU9Yy5jb3B5KCk7dSE9PW51bGwmJih1LmxhYmVsZWRMaW5rPWEsbi5hZGQodSkpfXJldHVybiBhfX1lbHNlIGlmKGYhPT1udWxsKXtjb25zdCBhPW8uY29weUxpbmtEYXRhKGYpO2lmKFUuVyhhKSl7dCE9PW51bGwmJm8uaWcoYSxvLmdldEtleUZvck5vZGVEYXRhKHQuZGF0YSksITApLG8uZWcoYSxsLCEwKSxlIT09bnVsbCYmby5pZyhhLG8uZ2V0S2V5Rm9yTm9kZURhdGEoZS5kYXRhKSwhMSksby5lZyhhLGgsITEpLG8uYWRkTGlua0RhdGEoYSk7Y29uc3QgYz1yLmFyY2hldHlwZUxhYmVsTm9kZURhdGE7aWYoYyE9PW51bGwmJiEoYyBpbnN0YW5jZW9mIE5vZGUpKXtjb25zdCBkPW8uY29weU5vZGVEYXRhKGMpO2lmKFUuVyhkKSl7by5hZGROb2RlRGF0YShkKTtjb25zdCBtPW8uZ2V0S2V5Rm9yTm9kZURhdGEoZCk7bSE9PXZvaWQgMCYmby5hZGRMYWJlbEtleUZvckxpbmtEYXRhKGEsbSl9fXJldHVybiBuLmZpbmRMaW5rRm9yRGF0YShhKX19cmV0dXJuIG51bGx9fWNsYXNzIFRyZWVQYXJ0TWFuYWdlciBleHRlbmRzIFBhcnRNYW5hZ2Vye0RoPW51bGw7cWIodCxpKXtpZih0PT09bnVsbHx8aT09PW51bGx8fGkuZmluZFRyZWVQYXJlbnRMaW5rKCkhPT1udWxsKXJldHVybiBudWxsO2NvbnN0IGU9dGhpcy5kaWFncmFtLnRvb2xNYW5hZ2VyLmZpbmRUb29sKFwiTGlua2luZ1wiKTtsZXQgcz10LG49aTtpZih0aGlzLmRpYWdyYW0uaXNUcmVlUGF0aFRvQ2hpbGRyZW4pe2lmKGUhPT1udWxsJiZlLlB1KHMsbixudWxsLCEwKSlyZXR1cm4gbnVsbH1lbHNlIGlmKHM9aSxuPXQsZSE9PW51bGwmJmUuUHUocyxuLG51bGwsITApKXJldHVybiBudWxsO2NvbnN0IG89dGhpcy5nZXRMaW5rQ2F0ZWdvcnlGb3JEYXRhKGkuZGF0YSkscj10aGlzLmZpbmRMaW5rVGVtcGxhdGVGb3JDYXRlZ29yeShvKTtpZihyIT09bnVsbCl7ci5LdCgpO2NvbnN0IGw9ci5jb3B5KCk7aWYobCE9PW51bGwpe2NvbnN0IGg9dGhpcy5kaWFncmFtLm1lO3JldHVybiB0aGlzLmRpYWdyYW0ubWU9ITAsbC5Xbz1vLGwubmk9aS5kYXRhLGwuZnJvbU5vZGU9cyxsLnRvTm9kZT1uLHRoaXMuZGlhZ3JhbS5hZGQobCksbC5uaT1udWxsLGwuZGF0YT1pLmRhdGEsdGhpcy5kaWFncmFtLm1lPWgsbH19cmV0dXJuIG51bGx9Z2V0TGlua0NhdGVnb3J5Rm9yRGF0YSh0KXtyZXR1cm4gdGhpcy5kaWFncmFtLm1vZGVsLmdldFBhcmVudExpbmtDYXRlZ29yeUZvck5vZGVEYXRhKHQpfXNldExpbmtDYXRlZ29yeUZvckRhdGEodCxpKXt0aGlzLmRpYWdyYW0ubW9kZWwuc2V0UGFyZW50TGlua0NhdGVnb3J5Rm9yTm9kZURhdGEodCxpKX1zZXRGcm9tTm9kZUZvckxpbmsodCxpLGUpe2NvbnN0IHM9dGhpcy5kaWFncmFtLm1vZGVsO2U9PT12b2lkIDAmJihlPW51bGwpO2NvbnN0IG49aSE9PW51bGw/aS5kYXRhOm51bGw7aWYodGhpcy5kaWFncmFtLmlzVHJlZVBhdGhUb0NoaWxkcmVuKXMuc2V0UGFyZW50S2V5Rm9yTm9kZURhdGEodC5kYXRhLHMuZ2V0S2V5Rm9yTm9kZURhdGEobikpO2Vsc2V7Y29uc3Qgbz10aGlzLkRoO3RoaXMuRGg9dCxlIT09bnVsbCYmcy5zZXRQYXJlbnRLZXlGb3JOb2RlRGF0YShlLmRhdGEsdm9pZCAwKTtjb25zdCByPXQudG9Ob2RlIT09bnVsbD90LnRvTm9kZS5kYXRhOm51bGw7cy5zZXRQYXJlbnRLZXlGb3JOb2RlRGF0YShuLHMuZ2V0S2V5Rm9yTm9kZURhdGEocikpLHRoaXMuRGg9b319c2V0VG9Ob2RlRm9yTGluayh0LGksZSl7Y29uc3Qgcz10aGlzLmRpYWdyYW0ubW9kZWw7ZT09PXZvaWQgMCYmKGU9bnVsbCk7Y29uc3Qgbj1pIT09bnVsbD9pLmRhdGE6bnVsbDtpZih0aGlzLmRpYWdyYW0uaXNUcmVlUGF0aFRvQ2hpbGRyZW4pe2NvbnN0IG89dGhpcy5EaDt0aGlzLkRoPXQsZSE9PW51bGwmJnMuc2V0UGFyZW50S2V5Rm9yTm9kZURhdGEoZS5kYXRhLHZvaWQgMCk7Y29uc3Qgcj10LmZyb21Ob2RlIT09bnVsbD90LmZyb21Ob2RlLmRhdGE6bnVsbDtzLnNldFBhcmVudEtleUZvck5vZGVEYXRhKG4scy5nZXRLZXlGb3JOb2RlRGF0YShyKSksdGhpcy5EaD1vfWVsc2Ugcy5zZXRQYXJlbnRLZXlGb3JOb2RlRGF0YSh0LmRhdGEscy5nZXRLZXlGb3JOb2RlRGF0YShuKSl9TU4odCl7dGhpcy5kaWFncmFtLm1vZGVsLnNldFBhcmVudEtleUZvck5vZGVEYXRhKHQuZGF0YSx2b2lkIDApfWZpbmRMaW5rRm9yS2V5KHQpe2lmKHQ9PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgZT10aGlzLmRpYWdyYW0ubW9kZWwuZmluZE5vZGVEYXRhRm9yS2V5KHQpO3JldHVybiBlIT09bnVsbD90aGlzLmZpbmRMaW5rRm9yRGF0YShlKTpudWxsfWRvTW9kZWxDaGFuZ2VkKHQpe2lmKHN1cGVyLmRvTW9kZWxDaGFuZ2VkKHQpLCF0aGlzLmRpYWdyYW0pcmV0dXJuO2NvbnN0IGk9dGhpcy5kaWFncmFtO2lmKHQubW9kZWwhPT1pLm1vZGVsKXJldHVybjtjb25zdCBlPXQuY2hhbmdlO2lmKGkuSCl7aS5IPSExO3RyeXtjb25zdCBzPXQubW9kZWxDaGFuZ2U7aWYocyE9PVwiXCIpe2lmKGU9PT0yKXtpZihzPT09XCJub2RlUGFyZW50S2V5XCIpe2NvbnN0IG49dC5vYmplY3Qsbz10Lm5ld1ZhbHVlLHI9dGhpcy5maW5kTm9kZUZvcktleShvKSxsPXRoaXMuZmluZE5vZGVGb3JEYXRhKG4pO2lmKHRoaXMuRGghPT1udWxsKXIhPT1udWxsJiYodGhpcy5EaC5kYXRhPW4sdGhpcy5EaC5jYXRlZ29yeT10aGlzLmdldExpbmtDYXRlZ29yeUZvckRhdGEobikpO2Vsc2UgaWYobCE9PW51bGwpe2NvbnN0IGg9bC5maW5kVHJlZVBhcmVudExpbmsoKTtoIT09bnVsbD9yPT09bnVsbD9pLnJlbW92ZShoKTppLmlzVHJlZVBhdGhUb0NoaWxkcmVuP2guZnJvbU5vZGU9cjpoLnRvTm9kZT1yOnRoaXMucWIocixsKX19ZWxzZSBpZihzPT09XCJwYXJlbnRMaW5rQ2F0ZWdvcnlcIil7Y29uc3Qgbj10Lm9iamVjdCxvPXRoaXMuZmluZE5vZGVGb3JEYXRhKG4pLHI9dC5uZXdWYWx1ZTtpZihvIT09bnVsbCYmdHlwZW9mIHI9PVwic3RyaW5nXCIpe2NvbnN0IGw9by5maW5kVHJlZVBhcmVudExpbmsoKTtsIT09bnVsbCYmKGwuY2F0ZWdvcnk9cil9fWkuaXNNb2RpZmllZD0hMH19ZWxzZSBpZihlPT09Mil7Y29uc3Qgbj10LnByb3BlcnR5TmFtZSxvPXQub2JqZWN0LHI9aS5tb2RlbDtvPT09ciYmbj09PVwibm9kZVBhcmVudEtleVByb3BlcnR5XCImJihpLnVuZG9NYW5hZ2VyLmlzVW5kb2luZ1JlZG9pbmd8fHRoaXMucmVidWlsZFBhcnRzKCkpLGkuaXNNb2RpZmllZD0hMH19ZmluYWxseXtpLkg9ITB9fX11cGRhdGVSZWxhdGlvbnNoaXBzRnJvbURhdGEodCl7Y29uc3QgaT10LmRhdGE7aWYoaT09PW51bGwpcmV0dXJuO2NvbnN0IGU9dC5kaWFncmFtO2lmKGU9PT1udWxsKXJldHVybjtjb25zdCBzPWUubW9kZWw7aWYodCBpbnN0YW5jZW9mIE5vZGUpe2NvbnN0IG49cy5nZXRQYXJlbnRLZXlGb3JOb2RlRGF0YShpKSxvPWUuZmluZE5vZGVGb3JLZXkobikscj10LmZpbmRUcmVlUGFyZW50Tm9kZSgpO2lmKG8hPT1yKXtjb25zdCBsPXQuZmluZFRyZWVQYXJlbnRMaW5rKCk7byE9PW51bGw/bCE9PW51bGw/ZS5pc1RyZWVQYXRoVG9DaGlsZHJlbj9sLmZyb21Ob2RlPW86bC50b05vZGU9bzp0aGlzLnFiKG8sdCk6bCE9PW51bGwmJmUudjIobCwhMSl9fX1EeSh0LGkpe2lmKHN1cGVyLkR5KHQsaSksdHlwZW9mIGk9PVwic3RyaW5nXCImJnRoaXMuZmluZFBhcnRGb3JEYXRhKHQpIT09bnVsbCl7Y29uc3Qgcz10aGlzLmZpbmRMaW5rRm9yRGF0YSh0KTtzIT09bnVsbCYmcy51cGRhdGVUYXJnZXRCaW5kaW5ncyhpKX19S2IodCl7Y29uc3QgaT10aGlzLmRpYWdyYW0ubW9kZWwsZT1pLmdldEtleUZvck5vZGVEYXRhKHQpO2lmKGUhPT12b2lkIDApe2NvbnN0IHM9aS5GeShlKSxuPXRoaXMuZmluZFBhcnRGb3JEYXRhKHQpO2lmKHMhPT1udWxsJiZuIT09bnVsbCl7Y29uc3Qgcj1zLml0ZXJhdG9yO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7aWYoaS5jb250YWluc05vZGVEYXRhKGwpJiZuIGluc3RhbmNlb2YgTm9kZSYmaS5nZXRQYXJlbnRLZXlGb3JOb2RlRGF0YShsKT09PWUpe2NvbnN0IGg9dGhpcy5maW5kTm9kZUZvckRhdGEobCk7dGhpcy5xYihuLGgpfX1pLl9zKGUpfWNvbnN0IG89aS5nZXRQYXJlbnRLZXlGb3JOb2RlRGF0YSh0KTtpZihvIT09dm9pZCAwJiZuIGluc3RhbmNlb2YgTm9kZSl7Y29uc3Qgcj10aGlzLmZpbmROb2RlRm9yS2V5KG8pO3RoaXMucWIocixuKX19fUlOKHQpe2NvbnN0IGk9dGhpcy5kaWFncmFtLm1vZGVsO2lmKHQgaW5zdGFuY2VvZiBOb2RlKXtjb25zdCBlPWkuZ2V0S2V5Rm9yTm9kZURhdGEodC5kYXRhKSxzPXRoaXMuZmluZExpbmtGb3JEYXRhKHQuZGF0YSk7aWYocyE9PW51bGwpe3MuaXNTZWxlY3RlZD0hMSxzLmlzSGlnaGxpZ2h0ZWQ9ITE7Y29uc3Qgcj1zLmxheWVyO2lmKHIhPT1udWxsKXtjb25zdCBsPXIubmUoLTEscywhMSk7bD49MCYmdGhpcy5kaWFncmFtLnJhaXNlQ2hhbmdlZEV2ZW50KDQsXCJwYXJ0c1wiLHIscyxudWxsLGwsbnVsbCk7Y29uc3QgaD1zLmxheWVyQ2hhbmdlZDtoIT09bnVsbCYmaChzLHIsbnVsbCl9fWNvbnN0IG49dGhpcy5kaWFncmFtLmlzVHJlZVBhdGhUb0NoaWxkcmVuLG89dC5saW5rc0Nvbm5lY3RlZDtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlLGg9KG4/ci50b05vZGU6ci5mcm9tTm9kZSkuZGF0YTtpLmNvbnRhaW5zTm9kZURhdGEoaCkmJmkudG4oZSxoKX19fWluc2VydExpbmsodCxpLGUscyl7Y29uc3Qgbj10aGlzLmRpYWdyYW0ubW9kZWw7bGV0IG89dCxyPWU7aWYodGhpcy5kaWFncmFtLmlzVHJlZVBhdGhUb0NoaWxkcmVufHwobz1lLHI9dCksbyE9PW51bGwmJnIhPT1udWxsKXtjb25zdCBsPW8uZGF0YSxoPXIuZGF0YTtyZXR1cm4gbi5zZXRQYXJlbnRLZXlGb3JOb2RlRGF0YShoLG4uZ2V0S2V5Rm9yTm9kZURhdGEobCkpLHIuZmluZFRyZWVQYXJlbnRMaW5rKCl9cmV0dXJuIG51bGx9fXZhciBCaW5kaW5nTW9kZT0oeT0+KHlbeS5PbmVXYXk9MV09XCJPbmVXYXlcIix5W3kuVHdvV2F5PTJdPVwiVHdvV2F5XCIseSkpKEJpbmRpbmdNb2RlfHx7fSk7Y2xhc3MgQmluZGluZ3tsO1ZOOyRhO1JjO0ZoO0ljO09jO0VjO1diO05lO3BkO3ljO2NvbnN0cnVjdG9yKHQsaSxlLHMpe0dTZXQuSmkodGhpcyksdD09PXZvaWQgMD90PVwiXCI6VS5pKHQsXCJzdHJpbmdcIixCaW5kaW5nLFwiY29uc3RydWN0b3I6dGFyZ2V0cHJvcFwiKSxpPT09dm9pZCAwP2k9dDpVLmkoaSxcInN0cmluZ1wiLEJpbmRpbmcsXCJjb25zdHJ1Y3Rvcjpzb3VyY2Vwcm9wXCIpLGU9PT12b2lkIDA/ZT1udWxsOmUhPT1udWxsJiZVLlAoZSxCaW5kaW5nLFwiY29uc3RydWN0b3I6Y29udlwiKSx0aGlzLlZOPS0xLHRoaXMuTmU9bnVsbCx0aGlzLiRhPXQsdGhpcy5wZD0wLHRoaXMueWM9MCx0aGlzLlJjPW51bGwsdGhpcy5GaD1pLHRoaXMuSWM9ZSxzPT09dm9pZCAwPyh0aGlzLk9jPTEsdGhpcy5FYz1udWxsKToodGhpcy5PYz0yLHRoaXMuRWM9cyksdGhpcy5XYj1uZXcgR1NldCx0aGlzLmw9Mn1jb3B5KCl7Y29uc3QgdD1uZXcgdGhpcy5jb25zdHJ1Y3RvcjtyZXR1cm4gdGhpcy5jbG9uZVByb3RlY3RlZCh0KSx0fWNsb25lUHJvdGVjdGVkKHQpe3QuJGE9dGhpcy4kYSx0LnBkPXRoaXMucGQsdC55Yz10aGlzLnljLHQuUmM9dGhpcy5SYyx0LkZoPXRoaXMuRmgsdC5JYz10aGlzLkljLHQuT2M9dGhpcy5PYyx0LkVjPXRoaXMuRWMsdC5sPXRoaXMubCYtMn1zdGF0aWMgT25lV2F5PTE7c3RhdGljIFR3b1dheT0yO3N0YXRpYyBwYXJzZUVudW0odCxpKXtyZXR1cm4gVS5QKHQsQmluZGluZyxcInBhcnNlRW51bTpjdG9yXCIpLGU9PntsZXQgcz1wYXJzZUludChlKTtyZXR1cm4gaXNOYU4ocykmJihzPVUuVWgodCxlKSxzPT09bnVsbCk/aTpzfX1haSh0KXt0IGluIEJpbmRpbmdNb2RlP3RoaXMubW9kZT10OlUuaHIodGhpcyx0KX1zdGF0aWMgdG9TdHJpbmcodCl7cmV0dXJuIFUudG9TdHJpbmcodCl9dG9TdHJpbmcoKXtyZXR1cm5cIkJpbmRpbmcoXCIrdGhpcy50YXJnZXRQcm9wZXJ0eStcIjpcIit0aGlzLnNvdXJjZVByb3BlcnR5Kyh0aGlzLnRhcmdldElkIT09LTE/XCIgXCIrdGhpcy50YXJnZXRJZDpcIlwiKStcIiBcIitCaW5kaW5nTW9kZVt0aGlzLm1vZGVdK1wiKVwifXAoKXtyZXR1cm4gdGhpcy5sPXRoaXMubHwxLHRoaXN9Z2V0IHRhcmdldElkKCl7cmV0dXJuIHRoaXMuVk59c2V0IHRhcmdldElkKHQpe3RoaXMuZiYmVS5EKHRoaXMpLHRoaXMuVk49dH1nZXQgdGFyZ2V0UHJvcGVydHkoKXtyZXR1cm4gdGhpcy4kYX1zZXQgdGFyZ2V0UHJvcGVydHkodCl7dGhpcy5mJiZVLkQodGhpcyksVS5pKHQsXCJzdHJpbmdcIixCaW5kaW5nLFwidGFyZ2V0UHJvcGVydHlcIiksdGhpcy4kYT10fWdldCBzb3VyY2VQcm9wZXJ0eSgpe3JldHVybiB0aGlzLkZofXNldCBzb3VyY2VQcm9wZXJ0eSh0KXt0aGlzLmYmJlUuRCh0aGlzKSxVLmkodCxcInN0cmluZ1wiLEJpbmRpbmcsXCJzb3VyY2VQcm9wZXJ0eVwiKSx0aGlzLkZoPXR9Z2V0IGYoKXtyZXR1cm4odGhpcy5sJjEpIT09MH1nZXQgaXNUb0RhdGEoKXtyZXR1cm4odGhpcy5sJjIpIT09MH1nZXQgaXNUb09iamVjdCgpe3JldHVybih0aGlzLmwmNCkhPT0wfWdldCBpc1RvTW9kZWwoKXtyZXR1cm4odGhpcy5sJjgpIT09MH1nZXQgaXNUb1RoZW1lKCl7cmV0dXJuKHRoaXMubCYxNikhPT0wfWdldCB6Tigpe3JldHVybiB0aGlzLmlzVG9UaGVtZSYmISh0aGlzLmlzVG9EYXRhfHx0aGlzLmlzVG9PYmplY3R8fHRoaXMuaXNUb01vZGVsKX10ZCgpe3JldHVybiExfWdldCBzb3VyY2VOYW1lKCl7cmV0dXJuIHRoaXMuUmN9c2V0IHNvdXJjZU5hbWUodCl7dGhpcy5mJiZVLkQodGhpcyksdCE9PW51bGwmJlUuaSh0LFwic3RyaW5nXCIsQmluZGluZyxcInNvdXJjZU5hbWVcIiksdGhpcy5SYz10LHQhPT1udWxsP3RoaXMubD10aGlzLmwmLTN8NDp0aGlzLmw9dGhpcy5sfDJ9Z2V0IGNvbnZlcnRlcigpe3JldHVybiB0aGlzLkljfXNldCBjb252ZXJ0ZXIodCl7dGhpcy5mJiZVLkQodGhpcyksdCE9PW51bGwmJlUuUCh0LEJpbmRpbmcsXCJjb252ZXJ0ZXJcIiksdGhpcy5JYz10fWdldCBiYWNrQ29udmVydGVyKCl7cmV0dXJuIHRoaXMuRWN9c2V0IGJhY2tDb252ZXJ0ZXIodCl7dGhpcy5mJiZVLkQodGhpcyksdCE9PW51bGwmJlUuUCh0LEJpbmRpbmcsXCJiYWNrQ29udmVydGVyXCIpLHRoaXMuRWM9dH1nZXQgbW9kZSgpe3JldHVybiB0aGlzLk9jfXNldCBtb2RlKHQpe3RoaXMuZiYmVS5EKHRoaXMpLHRoaXMuaXNUb1RoZW1lJiZ0PT09MiYmVS5uKFwiVGhlbWUgQmluZGluZ3MgY2Fubm90IGJlIFR3b1dheS5cIiksVS5qKHQsQmluZGluZ01vZGUsXCJCaW5kaW5nTW9kZVwiKSx0aGlzLk9jPXR9bWFrZVR3b1dheSh0KXtyZXR1cm4gdGhpcy5pc1RvVGhlbWUmJlUubihcIlRoZW1lIEJpbmRpbmdzIGNhbm5vdCBiZSBUd29XYXkuXCIpLHRoaXMubW9kZT0yLHQmJihVLlAodCxCaW5kaW5nLFwibWFrZVR3b1dheVwiKSx0aGlzLmJhY2tDb252ZXJ0ZXI9dCksdGhpc31vZk9iamVjdCh0KXtyZXR1cm4gdGhpcy5mJiZVLkQodGhpcyksdD09PXZvaWQgMCYmKHQ9XCJcIiksRGVidWcmJlUuaSh0LFwic3RyaW5nXCIsQmluZGluZyxcIm9mT2JqZWN0OnNyY25hbWVcIiksdGhpcy5zb3VyY2VOYW1lPXQsdGhpc31vZk1vZGVsKCl7cmV0dXJuIHRoaXMuZiYmVS5EKHRoaXMpLHRoaXMubD10aGlzLmwmLTMmLTV8OCx0aGlzLlJjPW51bGwsdGhpc31NTCh0LGkpe2NvbnN0IGU9dGhpcy5zb3VyY2VOYW1lO2xldCBzPW51bGw7cmV0dXJuIGU9PT1udWxsfHxlPT09XCJcIj9zPXQ6ZT09PVwiL1wiP3M9aS5wYXJ0OmU9PT1cIi5cIj9zPWk6ZT09PVwiLi5cIj9zPWkucGFuZWw6cz10LmZpbmRPYmplY3QoZSksc31jaGVjayh0KXtjb25zdCBpPXRoaXMuJGEsZT10aGlzLkZoLHM9dGhpcy5JYzsodGhpcy50ZCgpJiZzPT09bnVsbCYmdGhpcy5SaD09PW51bGwmJmk9PT1cIlwifHxzPT09bnVsbCYmaT09PVwiXCIpJiZVLm50KFwiQmluZGluZyBlcnJvcjogdGFyZ2V0IHByb3BlcnR5IGlzIHRoZSBlbXB0eSBzdHJpbmc6IFwiK3RoaXMudG9TdHJpbmcoKSksdGhpcy50ZCgpJiZ0aGlzLnpOJiZlPT09XCJcIiYmcz09PW51bGwmJnRoaXMuUmg9PT1udWxsJiZVLm50KFwiQmluZGluZyBlcnJvcjogdGhlbWUgYmluZGluZ3MgcmVxdWlyZSBhIHNvdXJjZSBwcm9wZXJ0eSB3aGVuIG5vdCB1c2luZyBhIGNvbnZlcnRlcjogXCIrdGhpcy50b1N0cmluZygpKSx0JiZ0eXBlb2YgaT09XCJzdHJpbmdcIiYmKCFVLnJ0KFtcInNldEF0dHJpYnV0ZVwiXSkmJmkubGVuZ3RoPjAmJmlbMF0hPT1cIl9cIiYmIVUuYncodCxpKT9VLm50KFwiQmluZGluZyBlcnJvcjogdW5kZWZpbmVkIHRhcmdldCBwcm9wZXJ0eTogXCIraStcIiBvbiBcIit0LnRvU3RyaW5nKCkpOmk9PT1cIm5hbWVcIiYmdCBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0JiZVLm50KFwiQmluZGluZyBlcnJvcjogY2Fubm90IG1vZGlmeSBHcmFwaE9iamVjdC5uYW1lIG9uIFwiK3QudG9TdHJpbmcoKSkpfXVwZGF0ZVRhcmdldCh0LGksZSxzKXtjb25zdCBuPXRoaXMuRmg7aWYoZSE9PXZvaWQgMCYmbiE9PVwiXCImJm4hPT1lKXJldHVybjtjb25zdCBvPXRoaXMuJGEscj10aGlzLkljO2xldCBsPWk7aWYobiE9PVwiXCImJiF0aGlzLnpOJiYocz9sPXMuU3QoaSxuKTpsPU1vZGVsLlN0KGksbikpLGw9PT12b2lkIDApcmV0dXJuO2NvbnN0IGg9dC5kaWFncmFtPy50aGVtZU1hbmFnZXI7aWYocj09PW51bGwpe2lmKG8hPT1cIlwiKXtpZih0aGlzLnRkKCkmJihsPXRoaXMuX1QoaCxsLHQsbyksbD09PXZvaWQgMCkpcmV0dXJuO3M/cy5ldCh0LG8sbCk6KGkgaW5zdGFuY2VvZiBHcmFwaE9iamVjdHx8aSBpbnN0YW5jZW9mIFJvd0NvbHVtbkRlZmluaXRpb24pJiZNb2RlbC5ldCh0LG8sbCl9fWVsc2UgdHJ5e2lmKG8hPT1cIlwiKXtsZXQgZj1yKGwsdCk7aWYoRGVidWcmJmY9PT12b2lkIDAmJlUubnQoJ0JpbmRpbmcgd2FybmluZzogY29udmVyc2lvbiBmdW5jdGlvbiByZXR1cm5lZCB1bmRlZmluZWQgd2hlbiBzZXR0aW5nIHRhcmdldCBwcm9wZXJ0eSBcIicrbysnXCIgb24gJyt0LnRvU3RyaW5nKCkrXCIsIGZ1bmN0aW9uIGlzOiBcIityKSx0aGlzLnRkKCkmJihmPXRoaXMuX1QoaCxmLHQsbyksZj09PXZvaWQgMCkpcmV0dXJuO3M/cy5ldCh0LG8sZik6KGkgaW5zdGFuY2VvZiBHcmFwaE9iamVjdHx8aSBpbnN0YW5jZW9mIFJvd0NvbHVtbkRlZmluaXRpb24pJiZNb2RlbC5ldCh0LG8sZil9ZWxzZSByKGwsdCl9Y2F0Y2goZil7RGVidWcmJlUubnQoXCJCaW5kaW5nIGVycm9yOiBcIitmLnRvU3RyaW5nKCkrJyBzZXR0aW5nIHRhcmdldCBwcm9wZXJ0eSBcIicrbysnXCIgb24gJyt0LnRvU3RyaW5nKCkrXCIgd2l0aCBjb252ZXJzaW9uIGZ1bmN0aW9uOiBcIityKX19dXBkYXRlU291cmNlKHQsaSxlLHMpe2lmKHRoaXMuT2MhPT0yKXJldHVybjtjb25zdCBuPXRoaXMuJGE7aWYoZSE9PXZvaWQgMCYmbiE9PWUpcmV0dXJuO2NvbnN0IG89dGhpcy5GaCxyPXRoaXMuRWMsbD1zIT09bnVsbD9zLmRpYWdyYW06bnVsbCxoPWwhPT1udWxsP2wubW9kZWw6bnVsbDtsZXQgZj10O2lmKG4hPT1cIlwiJiYoaD9mPWguU3QodCxuKTpmPU1vZGVsLlN0KHQsbikpLGYhPT12b2lkIDAmJiF0aGlzLldiLmhhcyh0KSl0cnl7aWYodGhpcy5XYi5hZGQodCkscj09PW51bGwpe2lmKG8hPT1cIlwiKWghPT1udWxsPyhEZWJ1ZyYmaC5ub2RlS2V5UHJvcGVydHk9PT1vJiZoLmNvbnRhaW5zTm9kZURhdGEoaSkmJlUubnQoXCJCaW5kaW5nIGVycm9yOiBjYW5ub3QgaGF2ZSBUd29XYXkgQmluZGluZyBvbiBub2RlIGRhdGEga2V5IHByb3BlcnR5OiBcIit0aGlzLnRvU3RyaW5nKCkpLGguc2V0RGF0YVByb3BlcnR5KGksbyxmKSk6KGkgaW5zdGFuY2VvZiBHcmFwaE9iamVjdHx8aSBpbnN0YW5jZW9mIFJvd0NvbHVtbkRlZmluaXRpb24pJiYoaVtvXT1mKTtlbHNlIGlmKGghPT1udWxsJiZzIT09bnVsbCYmcy5pdGVtSW5kZXg+PTAmJnMucGFuZWwhPT1udWxsJiZBcnJheS5pc0FycmF5KHMucGFuZWwuaXRlbUFycmF5KSl7Y29uc3QgYT1zLml0ZW1JbmRleCxjPXMucGFuZWwuaXRlbUFycmF5O2gucmVtb3ZlQXJyYXlJdGVtKGMsYSksaC5pbnNlcnRBcnJheUl0ZW0oYyxhLGYpfX1lbHNlIHRyeXtpZihvIT09XCJcIil7Y29uc3QgYT1yKGYsaSxoKTtoIT09bnVsbD8oRGVidWcmJihoLm5vZGVLZXlQcm9wZXJ0eT09PW8mJmguY29udGFpbnNOb2RlRGF0YShpKSYmVS5udChcIkJpbmRpbmcgZXJyb3I6IGNhbm5vdCBoYXZlIFR3b1dheSBCaW5kaW5nIG9uIG5vZGUgZGF0YSBrZXkgcHJvcGVydHk6IFwiK3RoaXMudG9TdHJpbmcoKSksYT09PXZvaWQgMCYmVS5udChgQmluZGluZyB3YXJuaW5nOiBjb252ZXJzaW9uIGZ1bmN0aW9uIHJldHVybmVkIHVuZGVmaW5lZCB3aGVuIHNldHRpbmcgc291cmNlIHByb3BlcnR5IFwiJHtvfVwiIG9uICR7aS50b1N0cmluZygpfSwgZnVuY3Rpb24gaXM6ICR7cn1gKSksaC5zZXREYXRhUHJvcGVydHkoaSxvLGEpKTooaSBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0fHxpIGluc3RhbmNlb2YgUm93Q29sdW1uRGVmaW5pdGlvbikmJihpW29dPWEpfWVsc2V7Y29uc3QgYT1yKGYsaSxoKTtpZihhIT09dm9pZCAwJiZoIT09bnVsbCYmcyE9PW51bGwmJnMuaXRlbUluZGV4Pj0wJiZzLnBhbmVsIT09bnVsbCYmQXJyYXkuaXNBcnJheShzLnBhbmVsLml0ZW1BcnJheSkpe2NvbnN0IGM9cy5pdGVtSW5kZXgsdT1zLnBhbmVsLml0ZW1BcnJheTtoLnJlbW92ZUFycmF5SXRlbSh1LGMpLGguaW5zZXJ0QXJyYXlJdGVtKHUsYyxhKX19fWNhdGNoKGEpe0RlYnVnJiZVLm50KFwiQmluZGluZyBlcnJvcjogXCIrYS50b1N0cmluZygpKycgc2V0dGluZyBzb3VyY2UgcHJvcGVydHkgXCInK28rJ1wiIG9uICcraS50b1N0cmluZygpK1wiIHdpdGggY29udmVyc2lvbiBmdW5jdGlvbjogXCIrcil9fWZpbmFsbHl7dGhpcy5XYi5kZWxldGUodCl9fX1jbGFzcyBUaGVtZUJpbmRpbmcgZXh0ZW5kcyBCaW5kaW5ne1J5O1JoO1phO2NvbnN0cnVjdG9yKHQsaSxlLHMsbil7c3VwZXIodCxpLHMpLGU9PW51bGwmJihlPVwiXCIpLG49PT12b2lkIDAmJihuPW51bGwpLHRoaXMuUnk9ZSx0aGlzLlJoPW4sdGhpcy5aYT1udWxsLHRoaXMubD0xNn1jbG9uZVByb3RlY3RlZCh0KXtzdXBlci5jbG9uZVByb3RlY3RlZCh0KSx0LlJ5PXRoaXMuUnksdC5SaD10aGlzLlJoLHQuWmE9dGhpcy5aYX10ZCgpe3JldHVybiEwfWdldCB0aGVtZVNvdXJjZSgpe3JldHVybiB0aGlzLlJ5fXNldCB0aGVtZVNvdXJjZSh0KXt0aGlzLmYmJlUuRCh0aGlzKSx0IT09bnVsbCYmVS5pKHQsXCJzdHJpbmdcIixUaGVtZUJpbmRpbmcsXCJ0aGVtZVNvdXJjZVwiKSx0aGlzLlJ5PXQsdGhpcy5aYT1udWxsLHQhPT1udWxsP3RoaXMubD10aGlzLmx8MTY6dGhpcy5sPXRoaXMubCYtMTd9Z2V0IHRoZW1lQ29udmVydGVyKCl7cmV0dXJuIHRoaXMuUmh9c2V0IHRoZW1lQ29udmVydGVyKHQpe3RoaXMuZiYmVS5EKHRoaXMpLHQhPT1udWxsJiZVLlAodCxUaGVtZUJpbmRpbmcsXCJ0aGVtZUNvbnZlcnRlclwiKSx0aGlzLlJoPXR9b2ZEYXRhKCl7cmV0dXJuIHRoaXMuZiYmVS5EKHRoaXMpLHRoaXMubD10aGlzLmx8Mix0aGlzLlJjPW51bGwsdGhpc31fVCh0LGksZSxzKXtpZighdHx8KHRoaXMuek4mJihpPXRoaXMuRmgpLCFpJiZpIT09MCkpcmV0dXJuO2xldCBuPXRoaXMudGhlbWVTb3VyY2U7dGhpcy5aYSE9PW51bGw/bj10aGlzLlphOnR5cGVvZiBuPT1cInN0cmluZ1wiJiZuLmluY2x1ZGVzKFwiLlwiKSYmKHRoaXMuWmE9bi5zcGxpdChcIi5cIiksbj10aGlzLlphKTtsZXQgbz10LmZpbmRWYWx1ZShpLG4scyk7cmV0dXJuIG89PT12b2lkIDAmJlUubnQoYFRoZW1lIHdhcm5pbmc6ICR7aX0gY291bGQgbm90IGJlIGZvdW5kIHdoZW4gc2V0dGluZyB0YXJnZXQgcHJvcGVydHkgJHtzfS5gKSxVLnJ0KHRoaXMuUmgpJiYobz10aGlzLlJoKG8sZSkpLG99fWNsYXNzIE1vZGVse0x0O3NnO09vO1hOO1NlO3hpO0loO0JjO1ZjO25nO29nO3JnO2xnO0l5O1FhO2lyO095O0lvO2piO2NvbnN0cnVjdG9yKHQsaSl7aWYoR1NldC5KaSh0aGlzKSx0aGlzLkx0PVwiXCIsdGhpcy5zZz1cIlwiLHRoaXMuT289ITEsdGhpcy5YTj17fSx0aGlzLlNlPVtdLHRoaXMueGk9bmV3IEdNYXAsdGhpcy5JaD1cImtleVwiLHRoaXMuQmM9bnVsbCx0aGlzLlZjPW51bGwsdGhpcy5uZz0hMSx0aGlzLm9nPSExLHRoaXMucmc9ITEsdGhpcy5sZz1udWxsLHRoaXMuSXk9MTAwLHRoaXMuUWE9XCJjYXRlZ29yeVwiLHRoaXMuaXI9bmV3IEdNYXAsdGhpcy5PeT1bXSx0aGlzLklvPSExLHRoaXMuamI9bnVsbCx0aGlzLnVuZG9NYW5hZ2VyPW5ldyBVbmRvTWFuYWdlcix0IT09dm9pZCAwJiYoQXJyYXkuaXNBcnJheSh0KT90aGlzLm5vZGVEYXRhQXJyYXk9dDppPXQpLGkpe09iamVjdC5hc3NpZ24odGhpcyxpKTtjb25zdCBlPWkuQ2hhbmdlZDtlJiYoZGVsZXRlIHRoaXMuQ2hhbmdlZCx0aGlzLmFkZENoYW5nZWRMaXN0ZW5lcihlKSl9fWNsb25lUHJvdGVjdGVkKHQpe3QuTHQ9dGhpcy5MdCx0LnNnPXRoaXMuc2csdC5Pbz10aGlzLk9vLHQuSWg9dGhpcy5JaCx0LkJjPXRoaXMuQmMsdC5WYz10aGlzLlZjLHQubmc9dGhpcy5uZyx0Lm9nPXRoaXMub2csdC5yZz10aGlzLnJnLHQubGc9dGhpcy5sZyx0Lkl5PXRoaXMuSXksdC5RYT10aGlzLlFhfWNvcHkoKXtjb25zdCB0PW5ldyB0aGlzLmNvbnN0cnVjdG9yO3JldHVybiB0aGlzLmNsb25lUHJvdGVjdGVkKHQpLHR9Y2xlYXIoKXt0aGlzLlNlPVtdLHRoaXMueGkuY2xlYXIoKSx0aGlzLmlyLmNsZWFyKCksdGhpcy51bmRvTWFuYWdlci5jbGVhcigpfXRvU3RyaW5nKHQpe2lmKHQ9PT12b2lkIDAmJih0PTApLHQ+MSlyZXR1cm4gdGhpcy50b0pzb24oKTt7bGV0IGk9KHRoaXMubmFtZSE9PVwiXCI/dGhpcy5uYW1lOlwiXCIpK1wiIE1vZGVsXCI7aWYodD4wKXtpKz1gXG4gbm9kZSBkYXRhOmA7Y29uc3QgZT10aGlzLm5vZGVEYXRhQXJyYXkscz1lLmxlbmd0aDtmb3IobGV0IG49MDtuPHM7bisrKXtjb25zdCBvPWVbbl07aSs9XCIgXCIrdGhpcy5nZXRLZXlGb3JOb2RlRGF0YShvKStcIjpcIitVLnRvU3RyaW5nKG8pfX1yZXR1cm4gaX19dG9JbmNyZW1lbnRhbERhdGEodCl7VS5lKHQsQ2hhbmdlZEV2ZW50LE1vZGVsLFwidG9JbmNyZW1lbnRhbERhdGE6ZVwiKSx0LmNoYW5nZSE9PTEmJlUubihcIk1vZGVsLnRvSW5jcmVtZW50YWxEYXRhIGFyZ3VtZW50IGlzIG5vdCBhIFRyYW5zYWN0aW9uIENoYW5nZWRFdmVudDpcIit0LnRvU3RyaW5nKCkpO2NvbnN0IGk9dC5vYmplY3Q7aWYoIXQuaXNUcmFuc2FjdGlvbkZpbmlzaGVkfHwhKGkgaW5zdGFuY2VvZiBUcmFuc2FjdGlvbikpcmV0dXJuIG51bGw7Y29uc3QgZT10aGlzLnREKGkpO3JldHVybiB0aGlzLllOKGksdC5wcm9wZXJ0eU5hbWU9PT1cIkZpbmlzaGVkVW5kb1wiLGUpfVlOKHQsaSxlKXtjb25zdCBzPXRoaXM7bGV0IG49ITE7Y29uc3Qgbz1uZXcgR1NldCxyPW5ldyBHU2V0LGw9bmV3IEdTZXQ7dC5jaGFuZ2VzLmVhY2godT0+e2lmKHUubW9kZWw9PT1zKXtpZih1Lm1vZGVsQ2hhbmdlPT09XCJub2RlRGF0YUFycmF5XCIpdS5jaGFuZ2U9PT0zP28uYWRkKHUubmV3VmFsdWUpOnUuY2hhbmdlPT09NCYmbC5hZGQodS5vbGRWYWx1ZSk7ZWxzZSBpZihzLmNvbnRhaW5zTm9kZURhdGEodS5vYmplY3QpKXIuYWRkKHUub2JqZWN0KTtlbHNlIGlmKHUuY2hhbmdlPT09MiYmKHMubW9kZWxEYXRhPT09dS5vYmplY3R8fHUucHJvcGVydHlOYW1lPT09XCJtb2RlbERhdGFcIikpbj0hMDtlbHNlIGlmKHUub2JqZWN0IT09bnVsbClpZihlLmhhcyh1Lm9iamVjdCkpZS5nZXQodS5vYmplY3QpLmVhY2gobT0+e3MuY29udGFpbnNOb2RlRGF0YShtKSYmci5hZGQobSl9KTtlbHNle2lmKHUub2JqZWN0IGluc3RhbmNlb2YgTW9kZWx8fHMuWWEoKSYmcy5jb250YWluc0xpbmtEYXRhKHUub2JqZWN0KSlyZXR1cm47cy5pRCh1Lm9iamVjdCkuZWFjaChtPT57ci5hZGQobSl9KX19fSk7Y29uc3QgaD1uZXcgR1NldDtvLmVhY2godT0+e2guYWRkKHMuZ2V0S2V5Rm9yTm9kZURhdGEodSkpLGl8fHIuYWRkKHUpfSk7Y29uc3QgZj1uZXcgR1NldDtsLmVhY2godT0+e2YuYWRkKHMuZ2V0S2V5Rm9yTm9kZURhdGEodSkpLGkmJnIuYWRkKHUpfSk7Y29uc3QgYT1zLmNsb25lRGVlcChyLnRvQXJyYXkoKSk7bGV0IGM9bnVsbDtyZXR1cm4gbiYmKGM9PT1udWxsJiYoYz17fSksYy5tb2RlbERhdGE9dGhpcy5jbG9uZURlZXAodGhpcy5tb2RlbERhdGEpKSxoLmNvdW50PjAmJihjPT09bnVsbCYmKGM9e30pLGk/Yy5yZW1vdmVkTm9kZUtleXM9aC50b0FycmF5KCk6Yy5pbnNlcnRlZE5vZGVLZXlzPWgudG9BcnJheSgpKSxhLmxlbmd0aD4wJiYoYz09PW51bGwmJihjPXt9KSxjLm1vZGlmaWVkTm9kZURhdGE9YSksZi5jb3VudD4wJiYoYz09PW51bGwmJihjPXt9KSxpP2MuaW5zZXJ0ZWROb2RlS2V5cz1mLnRvQXJyYXkoKTpjLnJlbW92ZWROb2RlS2V5cz1mLnRvQXJyYXkoKSksY31jbG9uZURlZXAodCl7cmV0dXJuIHRoaXMuaGcodCwhMCl9aGcodCxpLGUscyl7aWYoIVUuVyh0KSlyZXR1cm4gdDtlfHwoZT1uZXcgR01hcCk7Y29uc3Qgbj1lLmdldCh0KTtpZihuKXJldHVybiBuO2xldCBvO2lmKEFycmF5LmlzQXJyYXkodCkpe289W10sZS5zZXQodCxvKTtmb3IobGV0IHI9MDtyPHQubGVuZ3RoO3IrKyl7Y29uc3QgbD10W3JdO28ucHVzaCh0aGlzLmhnKGwsITEsZSxzKSl9fWVsc2UgaWYodCBpbnN0YW5jZW9mIFBvaW50fHx0IGluc3RhbmNlb2YgU2l6ZXx8dCBpbnN0YW5jZW9mIFJlY3R8fHQgaW5zdGFuY2VvZiBNYXJnaW58fHQgaW5zdGFuY2VvZiBTcG90KW89dC5jb3B5KCksZS5zZXQodCxvKTtlbHNle2lmKHQgaW5zdGFuY2VvZiBCcnVzaHx8dCBpbnN0YW5jZW9mIEdlb21ldHJ5KXJldHVybiB0O2lmKHQgaW5zdGFuY2VvZiBMaXN0KW89bmV3IExpc3QoKS5hZGRBbGwodGhpcy5oZyh0LnRvQXJyYXkoKSwhMSxlLHMpKSxlLnNldCh0LG8pO2Vsc2UgaWYodCBpbnN0YW5jZW9mIEdTZXQpbz1uZXcgR1NldCgpLmFkZEFsbCh0aGlzLmhnKHQudG9BcnJheSgpLCExLGUscykpLGUuc2V0KHQsbyk7ZWxzZSBpZih0IGluc3RhbmNlb2YgR01hcClvPW5ldyBHTWFwKCkuYWRkQWxsKHRoaXMuaGcodC50b0FycmF5KCksITEsZSxzKSksZS5zZXQodCxvKTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBEYXRlKW89bmV3IERhdGUodCksZS5zZXQodCxvKTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBSZWdFeHApbz1uZXcgUmVnRXhwKHQpLGUuc2V0KHQsbyksby5sYXN0SW5kZXg9dC5sYXN0SW5kZXg7ZWxzZSBpZihNb2RlbC5LTihudWxsLFwiXCIsdCkpbz10O2Vsc2UgaWYoVS5ydCh0LmNvcHkpKW89dC5jb3B5KCksZS5zZXQodCxvKTtlbHNle289e30sZS5zZXQodCxvKTtmb3IoY29uc3QgciBpbiB0KXtpZihyPT09XCJfX2dvaGFzaGlkXCIpY29udGludWU7Y29uc3QgbD10W3JdO29bcl09dGhpcy5oZyhsLCExLGUscyl9fX1yZXR1cm4gb31FZSh0KXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkodCkucmVwbGFjZSgvW1xcdTAwN0YtXFx1RkZGRl0vZyxlPT57Y29uc3Qgcz1cIjAwMDBcIitlLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpO3JldHVyblwiXFxcXHVcIitzLnN1YnN0cmluZyhzLmxlbmd0aC00KX0pfWFnKCl7bGV0IHQ9XCJcIjtyZXR1cm4gdGhpcy5uYW1lIT09XCJcIiYmKHQrPWAsXG4gIFwibmFtZVwiOiBgK3RoaXMuRWUodGhpcy5uYW1lKSksdGhpcy5kYXRhRm9ybWF0IT09XCJcIiYmKHQrPWAsXG4gIFwiZGF0YUZvcm1hdFwiOiBgK3RoaXMuRWUodGhpcy5kYXRhRm9ybWF0KSksdGhpcy5pc1JlYWRPbmx5JiYodCs9YCxcbiAgXCJpc1JlYWRPbmx5XCI6IGArdGhpcy5pc1JlYWRPbmx5KSx0aGlzLm5vZGVLZXlQcm9wZXJ0eSE9PVwia2V5XCImJnR5cGVvZiB0aGlzLm5vZGVLZXlQcm9wZXJ0eT09XCJzdHJpbmdcIiYmKHQrPWAsXG4gIFwibm9kZUtleVByb3BlcnR5XCI6IGArdGhpcy5FZSh0aGlzLm5vZGVLZXlQcm9wZXJ0eSkpLHRoaXMuY29waWVzQXJyYXlzJiYodCs9YCxcbiAgXCJjb3BpZXNBcnJheXNcIjogdHJ1ZWApLHRoaXMuY29waWVzQXJyYXlPYmplY3RzJiYodCs9YCxcbiAgXCJjb3BpZXNBcnJheU9iamVjdHNcIjogdHJ1ZWApLHRoaXMuY29waWVzS2V5JiYodCs9YCxcbiAgXCJjb3BpZXNLZXlcIjogdHJ1ZWApLHRoaXMucG9pbnRzRGlnaXRzIT09MTAwJiYodCs9YCxcbiAgXCJwb2ludHNEaWdpdHNcIjogYCt0aGlzLnBvaW50c0RpZ2l0cy50b1N0cmluZygpKSx0aGlzLm5vZGVDYXRlZ29yeVByb3BlcnR5IT09XCJjYXRlZ29yeVwiJiZ0eXBlb2YgdGhpcy5ub2RlQ2F0ZWdvcnlQcm9wZXJ0eT09XCJzdHJpbmdcIiYmKHQrPWAsXG4gIFwibm9kZUNhdGVnb3J5UHJvcGVydHlcIjogYCt0aGlzLkVlKHRoaXMubm9kZUNhdGVnb3J5UHJvcGVydHkpKSx0fUV5KHQpe3QubmFtZSYmKHRoaXMubmFtZT10Lm5hbWUpLHQuZGF0YUZvcm1hdCYmKHRoaXMuZGF0YUZvcm1hdD10LmRhdGFGb3JtYXQpLHQuaXNSZWFkT25seSYmKHRoaXMuaXNSZWFkT25seT0hMCksdC5ub2RlS2V5UHJvcGVydHkmJih0aGlzLm5vZGVLZXlQcm9wZXJ0eT10Lm5vZGVLZXlQcm9wZXJ0eSksdC5jb3BpZXNBcnJheXMmJih0aGlzLmNvcGllc0FycmF5cz0hMCksdC5jb3BpZXNBcnJheU9iamVjdHMmJih0aGlzLmNvcGllc0FycmF5T2JqZWN0cz0hMCksdC5jb3BpZXNLZXkhPT12b2lkIDAmJih0aGlzLmNvcGllc0tleT10LmNvcGllc0tleSksdC5wb2ludHNEaWdpdHMhPT12b2lkIDAmJih0aGlzLnBvaW50c0RpZ2l0cz1wYXJzZUludCh0LnBvaW50c0RpZ2l0cykpLHQubm9kZUNhdGVnb3J5UHJvcGVydHkmJih0aGlzLm5vZGVDYXRlZ29yeVByb3BlcnR5PXQubm9kZUNhdGVnb3J5UHJvcGVydHkpfWVEKCl7Y29uc3QgdD10aGlzLm1vZGVsRGF0YTtyZXR1cm5gLFxuICBcIm1vZGVsRGF0YVwiOiBgK3RoaXMuc0QodCl9bkQodCl7Y29uc3QgaT10Lm1vZGVsRGF0YTtVLlcoaSkmJih0aGlzLnJlcGxhY2VKc29uT2JqZWN0cyhpKSx0aGlzLm1vZGVsRGF0YT1pKX1VTigpe2NvbnN0IHQ9dGhpcy5tb2RlbERhdGE7bGV0IGk9ITE7Zm9yKGNvbnN0IHMgaW4gdClpZighdGhpcy52Yih0LHMsdFtzXSkpe2k9ITA7YnJlYWt9bGV0IGU9XCJcIjtyZXR1cm4gaSYmKGU9dGhpcy5lRCgpKSxlK2AsXG4gIFwibm9kZURhdGFBcnJheVwiOiBgK3RoaXMuT2godGhpcy5ub2RlRGF0YUFycmF5LCEwKX1HTih0KXt0aGlzLm5EKHQpO2NvbnN0IGk9dC5ub2RlRGF0YUFycmF5O0FycmF5LmlzQXJyYXkoaSkmJih0aGlzLnJlcGxhY2VKc29uT2JqZWN0cyhpKSx0aGlzLm5vZGVEYXRhQXJyYXk9aSl9SE4odCxpLGUpe2lmKHQ9PT1pKXJldHVybiEwO2lmKHR5cGVvZiB0IT10eXBlb2YgaXx8VS5ydCh0KXx8VS5ydChpKSlyZXR1cm4hMTtpZihBcnJheS5pc0FycmF5KHQpJiZBcnJheS5pc0FycmF5KGkpKXtpZihlLmdldCh0KT09PWkpcmV0dXJuITA7aWYoZS5zZXQodCxpKSx0Lmxlbmd0aCE9PWkubGVuZ3RoKXJldHVybiExO2ZvcihsZXQgcz0wO3M8dC5sZW5ndGg7cysrKWlmKCF0aGlzLkhOKHRbc10saVtzXSxlKSlyZXR1cm4hMTtyZXR1cm4hMH1lbHNlIGlmKFUuVyh0KSYmVS5XKGkpKXtpZihlLmdldCh0KT09PWkpcmV0dXJuITA7ZS5zZXQodCxpKTtmb3IoY29uc3QgcyBpbiB0KXtjb25zdCBuPXRbc107aWYodGhpcy52Yih0LHMsbikpY29udGludWU7Y29uc3Qgbz1pW3NdO2lmKG89PT12b2lkIDB8fCF0aGlzLkhOKG4sbyxlKSlyZXR1cm4hMX1mb3IoY29uc3QgcyBpbiBpKXtjb25zdCBuPWlbc107aWYodGhpcy52YihpLHMsbikpY29udGludWU7Y29uc3Qgbz10W3NdO2lmKG89PT12b2lkIDB8fCF0aGlzLkhOKG8sbixlKSlyZXR1cm4hMX1yZXR1cm4hMH1yZXR1cm4hMX1zdGF0aWMgb0Q9YCxcbiAgXCJpbnNlcnRlZE5vZGVLZXlzXCI6IGA7c3RhdGljIHQzPWAsXG4gIFwibW9kaWZpZWROb2RlRGF0YVwiOiBgO3N0YXRpYyByRD1gLFxuICBcInJlbW92ZWROb2RlS2V5c1wiOiBgO3REKHQpe2xldCBpPW5ldyBHTWFwO2NvbnN0IGU9KHMsbik9Pntjb25zdCBvPW4ucGFydDtpZighbylyZXR1cm47Y29uc3Qgcj1vLmRhdGE7aWYocz09PXIpcmV0dXJuO2xldCBsPWkuZ2V0KHMpO2w9PT1udWxsPyhsPW5ldyBHU2V0LGwuYWRkKHIpLGkuc2V0KHMsbCkpOmwuYWRkKHIpfTtyZXR1cm4gdC5jaGFuZ2VzLmVhY2gocz0+e2lmKHMuZGlhZ3JhbSE9PW51bGwpe2NvbnN0IG49cy5jaGFuZ2U7aWYobj09PTIpe2NvbnN0IG89cy5vYmplY3QucGFuZWw7aWYobyl7Y29uc3Qgcj1vLmRhdGE7ciYmZShyLG8pfX1lbHNlIGlmKG49PT0zfHxuPT09NCl7Y29uc3Qgbz1zLm9iamVjdCxyPW8uaXRlbUFycmF5O3ImJmUocixvKX19fSksaX1pRCh0KXtjb25zdCBpPW5ldyBHU2V0O2ZvcihsZXQgZT0wO2U8dGhpcy5ub2RlRGF0YUFycmF5Lmxlbmd0aDtlKyspe2NvbnN0IHM9dGhpcy5ub2RlRGF0YUFycmF5W2VdO3RoaXMuSmIodCxzLHMsaSl9cmV0dXJuIGl9SmIodCxpLGUscyl7aWYoQXJyYXkuaXNBcnJheShpKSlmb3IobGV0IG49MDtuPGkubGVuZ3RoO24rKyl7Y29uc3Qgbz1pW25dO2lmKG89PT10KXJldHVybiBzLmFkZChlKSwhMDtpZih0aGlzLkpiKHQsbyxlLHMpKXJldHVybiEwfWVsc2UgaWYoVS5XKGkpJiZPYmplY3QuZ2V0UHJvdG90eXBlT2YoaSk9PT1PYmplY3QucHJvdG90eXBlKWZvcihjb25zdCBuIGluIGkpe2NvbnN0IG89aVtuXTtpZihvPT09dClyZXR1cm4gcy5hZGQoZSksITA7aWYodGhpcy5KYih0LG8sZSxzKSlyZXR1cm4hMH1yZXR1cm4hMX1xTih0LGksZSl7Y29uc3Qgcz10aGlzO2xldCBuPSExO2NvbnN0IG89bmV3IEdTZXQscj1uZXcgR1NldCxsPW5ldyBHU2V0O3QuY2hhbmdlcy5lYWNoKGM9PntpZihjLm1vZGVsPT09cyl7aWYoYy5tb2RlbENoYW5nZT09PVwibm9kZURhdGFBcnJheVwiKWMuY2hhbmdlPT09Mz9vLmFkZChjLm5ld1ZhbHVlKTpjLmNoYW5nZT09PTQmJmwuYWRkKGMub2xkVmFsdWUpO2Vsc2UgaWYocy5jb250YWluc05vZGVEYXRhKGMub2JqZWN0KSlyLmFkZChjLm9iamVjdCk7ZWxzZSBpZihjLmNoYW5nZT09PTImJihzLm1vZGVsRGF0YT09PWMub2JqZWN0fHxjLnByb3BlcnR5TmFtZT09PVwibW9kZWxEYXRhXCIpKW49ITA7ZWxzZSBpZihjLm9iamVjdCE9PW51bGwpaWYoZS5oYXMoYy5vYmplY3QpKWUuZ2V0KGMub2JqZWN0KS5lYWNoKGQ9PntzLmNvbnRhaW5zTm9kZURhdGEoZCkmJnIuYWRkKGQpfSk7ZWxzZXtpZihjLm9iamVjdCBpbnN0YW5jZW9mIE1vZGVsfHxzLllhKCkmJnMuY29udGFpbnNMaW5rRGF0YShjLm9iamVjdCkpcmV0dXJuO3MuaUQoYy5vYmplY3QpLmVhY2goZD0+e3IuYWRkKGQpfSl9fX0pO2NvbnN0IGg9bmV3IEdTZXQ7by5lYWNoKGM9PntoLmFkZChzLmdldEtleUZvck5vZGVEYXRhKGMpKSxpfHxyLmFkZChjKX0pO2NvbnN0IGY9bmV3IEdTZXQ7bC5lYWNoKGM9PntmLmFkZChzLmdldEtleUZvck5vZGVEYXRhKGMpKSxpJiZyLmFkZChjKX0pO2xldCBhPVwiXCI7cmV0dXJuIG4mJihhKz10aGlzLmVEKCkpLGguY291bnQ+MCYmKGErPShpP01vZGVsLnJEOk1vZGVsLm9EKSt0aGlzLk9oKGgudG9BcnJheSgpLCEwKSksci5jb3VudD4wJiYoYSs9TW9kZWwudDMrdGhpcy5PaChyLnRvQXJyYXkoKSwhMCkpLGYuY291bnQ+MCYmKGErPShpP01vZGVsLm9EOk1vZGVsLnJEKSt0aGlzLk9oKGYudG9BcnJheSgpLCEwKSksYX1CeSh0KXsodC5uYW1lIT09dm9pZCAwJiZ0Lm5hbWUhPT10aGlzLm5hbWV8fHQuZGF0YUZvcm1hdCE9PXZvaWQgMCYmdC5kYXRhRm9ybWF0IT09dGhpcy5kYXRhRm9ybWF0fHx0LmlzUmVhZE9ubHkhPT12b2lkIDAmJnQuaXNSZWFkT25seSE9PXRoaXMuaXNSZWFkT25seXx8dC5ub2RlS2V5UHJvcGVydHkhPT12b2lkIDAmJnQubm9kZUtleVByb3BlcnR5IT09dGhpcy5ub2RlS2V5UHJvcGVydHl8fHQuY29waWVzQXJyYXlzIT09dm9pZCAwJiZ0LmNvcGllc0FycmF5cyE9PXRoaXMuY29waWVzQXJyYXlzfHx0LmNvcGllc0FycmF5T2JqZWN0cyE9PXZvaWQgMCYmdC5jb3BpZXNBcnJheU9iamVjdHMhPT10aGlzLmNvcGllc0FycmF5T2JqZWN0c3x8dC5jb3BpZXNLZXkhPT12b2lkIDAmJnQuY29waWVzS2V5IT09dGhpcy5jb3BpZXNLZXl8fHQubm9kZUNhdGVnb3J5UHJvcGVydHkhPT12b2lkIDAmJnQubm9kZUNhdGVnb3J5UHJvcGVydHkhPT10aGlzLm5vZGVDYXRlZ29yeVByb3BlcnR5KSYmVS5uKFwiYXBwbHlJbmNyZW1lbnRhbEpzb24gY2Fubm90IGNoYW5nZSBNb2RlbCBwcm9wZXJ0aWVzXCIpLHRoaXMubkQodCk7Y29uc3QgaT10Lmluc2VydGVkTm9kZUtleXMsZT10Lm1vZGlmaWVkTm9kZURhdGEscz1uZXcgR01hcDtpZihBcnJheS5pc0FycmF5KGUpKWZvcihsZXQgbz0wO288ZS5sZW5ndGg7bysrKXtjb25zdCByPWVbb10sbD10aGlzLmdldEtleUZvck5vZGVEYXRhKHIpO2whPW51bGwmJnMuc2V0KGwscil9aWYoQXJyYXkuaXNBcnJheShpKSl7Y29uc3Qgbz1pLmxlbmd0aDtmb3IobGV0IHI9MDtyPG87cisrKXtjb25zdCBsPWlbcl07bGV0IGg9dGhpcy5maW5kTm9kZURhdGFGb3JLZXkobCk7aWYoaD09PW51bGwpe2NvbnN0IGY9cy5nZXQobCk7aD1mfHx0aGlzLmNvcHlOb2RlRGF0YSh7fSksdGhpcy5zZXRLZXlGb3JOb2RlRGF0YShoLGwpLHRoaXMuYWRkTm9kZURhdGEoaCl9fX1pZihBcnJheS5pc0FycmF5KGUpKXtjb25zdCBvPWUubGVuZ3RoO2ZvcihsZXQgcj0wO3I8bztyKyspe2NvbnN0IGw9ZVtyXSxoPXRoaXMuZ2V0S2V5Rm9yTm9kZURhdGEobCksZj10aGlzLmZpbmROb2RlRGF0YUZvcktleShoKTtpZihmIT09bnVsbCl7Zm9yKGNvbnN0IGEgaW4gbClhPT09XCJfX2dvaGFzaGlkXCJ8fGE9PT10aGlzLm5vZGVLZXlQcm9wZXJ0eXx8KHRoaXMua20oKXx8dGhpcy5CMSgpKSYmYT09PXRoaXMubm9kZUlzR3JvdXBQcm9wZXJ0eXx8dGhpcy5zZXREYXRhUHJvcGVydHkoZixhLGxbYV0pO3RoaXMuZmcobCxmKX19fWNvbnN0IG49dC5yZW1vdmVkTm9kZUtleXM7aWYoQXJyYXkuaXNBcnJheShuKSl7Y29uc3Qgbz1uLmxlbmd0aDtmb3IobGV0IHI9MDtyPG87cisrKXtjb25zdCBsPW5bcl0saD10aGlzLmZpbmROb2RlRGF0YUZvcktleShsKTtoIT09bnVsbCYmdGhpcy5yZW1vdmVOb2RlRGF0YShoKX19fXRvSW5jcmVtZW50YWxKc29uKHQsaSl7VS5lKHQsQ2hhbmdlZEV2ZW50LE1vZGVsLFwidG9JbmNyZW1lbnRhbEpzb246ZVwiKSx0LmNoYW5nZSE9PTEmJlUubihcIk1vZGVsLnRvSW5jcmVtZW50YWxKc29uIGFyZ3VtZW50IGlzIG5vdCBhIFRyYW5zYWN0aW9uIENoYW5nZWRFdmVudDpcIit0LnRvU3RyaW5nKCkpO2NvbnN0IGU9dC5vYmplY3Q7aWYoIXQuaXNUcmFuc2FjdGlvbkZpbmlzaGVkfHwhKGUgaW5zdGFuY2VvZiBUcmFuc2FjdGlvbikpcmV0dXJuJ3sgXCJpbmNyZW1lbnRhbFwiOiAwIH0nO2k9PT12b2lkIDAmJihpPVUuQm4odGhpcykpO2NvbnN0IHM9dGhpcy50RChlKSxuPXRoaXMucU4oZSx0LnByb3BlcnR5TmFtZT09PVwiRmluaXNoZWRVbmRvXCIscyk7cmV0dXJuJ3sgXCJjbGFzc1wiOiAnK3RoaXMuRWUoaSkrJywgXCJpbmNyZW1lbnRhbFwiOiAxJyt0aGlzLmFnKCkrbitcIn1cIn10b0luY3JlbWVudGFsSlNPTih0LGkpe3JldHVybiB0aGlzLnRvSW5jcmVtZW50YWxKc29uKHQsaSl9dG9Kc29uKHQpe3JldHVybiB0PT09dm9pZCAwJiYodD1VLkJuKHRoaXMpKSwneyBcImNsYXNzXCI6ICcrdGhpcy5FZSh0KSt0aGlzLmFnKCkrdGhpcy5VTigpK1wifVwifXRvSlNPTih0KXtyZXR1cm4gdGhpcy50b0pzb24odCl9YXBwbHlJbmNyZW1lbnRhbEpzb24odCl7bGV0IGk9bnVsbDtpZih0eXBlb2YgdD09XCJzdHJpbmdcIil0cnl7aT1yb290LkpTT04ucGFyc2UodCl9Y2F0Y2gocyl7RGVidWcmJlUubnQoXCJKU09OLnBhcnNlIGVycm9yOiBcIitzLnRvU3RyaW5nKCkpfWVsc2UgVS5XKHQpP2k9dDpVLm4oXCJVbmFibGUgdG8gbW9kaWZ5IGEgTW9kZWwgZnJvbTogXCIrdCk7Y29uc3QgZT1pLmluY3JlbWVudGFsO3R5cGVvZiBlIT1cIm51bWJlclwiJiZVLm4oXCJVbmFibGUgdG8gYXBwbHkgbm9uLWluY3JlbWVudGFsIGNoYW5nZXMgdG8gTW9kZWw6IFwiK3QpLGUhPT0wJiYodGhpcy5zdGFydFRyYW5zYWN0aW9uKFwiYXBwbHlJbmNyZW1lbnRhbEpzb25cIiksdGhpcy5CeShpKSx0aGlzLmNvbW1pdFRyYW5zYWN0aW9uKFwiYXBwbHlJbmNyZW1lbnRhbEpzb25cIikpfWFwcGx5SW5jcmVtZW50YWxKU09OKHQpe3JldHVybiB0aGlzLmFwcGx5SW5jcmVtZW50YWxKc29uKHQpfXN0YXRpYyBmcm9tSnNvbih0LGkpe2k9PT12b2lkIDAmJihpPW51bGwpLGkhPT1udWxsJiZVLmUoaSxNb2RlbCxNb2RlbCxcImZyb21Kc29uOm1vZGVsXCIpO2xldCBlPW51bGw7aWYodHlwZW9mIHQ9PVwic3RyaW5nXCIpdHJ5e2U9cm9vdC5KU09OLnBhcnNlKHQpfWNhdGNoKHMpe0RlYnVnJiZVLm50KFwiSlNPTi5wYXJzZSBlcnJvcjogXCIrcy50b1N0cmluZygpKX1lbHNlIFUuVyh0KT9lPXQ6VS5uKFwiVW5hYmxlIHRvIGNvbnN0cnVjdCBhIE1vZGVsIGZyb206IFwiK3QpO2lmKGk9PT1udWxsKXtjb25zdCBzPU1vZGVsLmkzKGUpO3M9PT1udWxsfHxzIGluc3RhbmNlb2YgTW9kZWw/aT1zOlUubihcIlVuYWJsZSB0byBjb25zdHJ1Y3QgYSBNb2RlbCBvZiBkZWNsYXJlZCBjbGFzczogXCIrZS5jbGFzcyl9cmV0dXJuIGk9PT1udWxsJiYoaT1Nb2RlbC5sRCgpKSxpLkV5KGUpLGkuR04oZSksaX1zdGF0aWMgZnJvbUpTT04odCxpKXtyZXR1cm4gdGhpcy5mcm9tSnNvbih0LGkpfXN0YXRpYyBsRCgpe3JldHVybiBEZWJ1ZyYmVS5uKFwiVW5hYmxlIHRvIGNvbnN0cnVjdCBhIE1vZGVsLiBQcm92aWRlZCBKU09OIHJlcXVpcmVzIEdyYXBoTGlua3NNb2RlbCwgd2hpY2ggaXMgbm90IGxvYWRlZC5cIiksbmV3IE1vZGVsfXN0YXRpYyBpMyh0KXtsZXQgaT1udWxsLGU9dC5jbGFzcztpZih0eXBlb2YgZT09XCJzdHJpbmdcIil0cnl7bGV0IHM9bnVsbDtlLmluZGV4T2YoXCJnby5cIik9PT0wP3M9TW9kZWwuV04oZS5zdWJzdHJpbmcoMykpOihzPU1vZGVsLldOKGUpLHM9PT1udWxsJiYocz1yb290W2VdKSksVS5ydChzKSYmKGk9bmV3IHMpfWNhdGNoe31yZXR1cm4gaX1yZXBsYWNlSnNvbk9iamVjdHModCl7aWYoQXJyYXkuaXNBcnJheSh0KSl7Y29uc3QgaT10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCBzPXRbZV07VS5XKHMpJiZ0aGlzLmhEKHQsZSx0aGlzLnJlcGxhY2VKc29uT2JqZWN0cyhzKSl9fWVsc2UgaWYoVS5XKHQpKXtmb3IoY29uc3QgaSBpbiB0KXtjb25zdCBlPXRbaV07aWYoVS5XKGUpKXtjb25zdCBzPXRoaXMucmVwbGFjZUpzb25PYmplY3RzKGUpO2lmKHRbaV09cyxpPT09XCJwb2ludHNcIiYmQXJyYXkuaXNBcnJheShzKSl7bGV0IG49cy5sZW5ndGglMj09PTA7Zm9yKGxldCBvPTA7bzxzLmxlbmd0aDtvKyspaWYodHlwZW9mIHNbb10hPVwibnVtYmVyXCIpe249ITE7YnJlYWt9aWYobil7Y29uc3Qgbz1uZXcgTGlzdDtmb3IobGV0IHI9MDtyPHMubGVuZ3RoLzI7cisrKW8uYWRkKG5ldyBQb2ludChzW3IqMl0sc1tyKjIrMV0pKTtvLnAoKSx0W2ldPW99fX19cmV0dXJuIHRoaXMuZTModCl9cmV0dXJuIHR9d3JpdGVKc29uVmFsdWUodCl7cmV0dXJuIHQ9PT12b2lkIDA/XCJ1bmRlZmluZWRcIjp0PT09bnVsbD9cIm51bGxcIjp0PT09ITA/XCJ0cnVlXCI6dD09PSExP1wiZmFsc2VcIjp0eXBlb2YgdD09XCJzdHJpbmdcIj90aGlzLkVlKHQpOnR5cGVvZiB0PT1cIm51bWJlclwiP3Q9PT0xLzA/XCI5ZTk5OTlcIjp0PT09LTEvMD9cIi05ZTk5OTlcIjppc05hTih0KT8ne1wiY2xhc3NcIjpcIk5hTlwifSc6dC50b1N0cmluZygpOnQgaW5zdGFuY2VvZiBCb29sZWFuP3RoaXMud3JpdGVKc29uVmFsdWUodC52YWx1ZU9mKCkpOnQgaW5zdGFuY2VvZiBTdHJpbmc/dGhpcy53cml0ZUpzb25WYWx1ZSh0LnZhbHVlT2YoKSk6dCBpbnN0YW5jZW9mIE51bWJlcj90aGlzLndyaXRlSnNvblZhbHVlKHQudmFsdWVPZigpKTp0IGluc3RhbmNlb2YgRGF0ZT8ne1wiY2xhc3NcIjpcIkRhdGVcIiwgXCJ2YWx1ZVwiOlwiJyt0LnRvSlNPTigpKydcIn0nOkFycmF5LmlzQXJyYXkodCk/dGhpcy5PaCh0KTpVLlcodCk/dGhpcy5zRCh0KTpVLnJ0KHQpP1wibnVsbFwiOidcIicrdC50b1N0cmluZygpKydcIid9T2godCxpKXtpPT09dm9pZCAwJiYoaT0hMSk7Y29uc3QgZT10Lmxlbmd0aDtpZihlPD0wKXJldHVyblwiW11cIjtjb25zdCBzPW5ldyBTdHJpbmdCdWlsZGVyO3MuYWRkKFwiW1wiKSxpJiZlPjEmJnMuYWRkKGBcbmApO2ZvcihsZXQgbj0wO248ZTtuKyspe2NvbnN0IG89dFtuXTtvIT09dm9pZCAwJiYobj4wJiYocy5hZGQoXCIsXCIpLGkmJnMuYWRkKGBcbmApKSxzLmFkZCh0aGlzLndyaXRlSnNvblZhbHVlKG8pKSl9cmV0dXJuIGkmJmU+MSYmcy5hZGQoYFxuYCkscy5hZGQoXCJdXCIpLHMudG9TdHJpbmcoKX12Yih0LGksZSl7cmV0dXJuISEoZT09PXZvaWQgMHx8aT09PVwiX19nb2hhc2hpZFwifHxpWzBdPT09XCJfXCJ8fFUucnQoZSkpfWppKHQpe3JldHVybiBpc05hTih0KT9cIk5hTlwiOnQ9PT0xLzA/XCI5ZTk5OTlcIjp0PT09LTEvMD9cIi05ZTk5OTlcIjp0fXNEKHQpe2NvbnN0IGk9dDtpZihpIGluc3RhbmNlb2YgUG9pbnQpdD17Y2xhc3M6XCJnby5Qb2ludFwiLHg6dGhpcy5qaShpLngpLHk6dGhpcy5qaShpLnkpfTtlbHNlIGlmKGkgaW5zdGFuY2VvZiBTaXplKXQ9e2NsYXNzOlwiZ28uU2l6ZVwiLHdpZHRoOnRoaXMuamkoaS53aWR0aCksaGVpZ2h0OnRoaXMuamkoaS5oZWlnaHQpfTtlbHNlIGlmKGkgaW5zdGFuY2VvZiBSZWN0KXQ9e2NsYXNzOlwiZ28uUmVjdFwiLHg6dGhpcy5qaShpLngpLHk6dGhpcy5qaShpLnkpLHdpZHRoOnRoaXMuamkoaS53aWR0aCksaGVpZ2h0OnRoaXMuamkoaS5oZWlnaHQpfTtlbHNlIGlmKGkgaW5zdGFuY2VvZiBNYXJnaW4pdD17Y2xhc3M6XCJnby5NYXJnaW5cIix0b3A6dGhpcy5qaShpLnRvcCkscmlnaHQ6dGhpcy5qaShpLnJpZ2h0KSxib3R0b206dGhpcy5qaShpLmJvdHRvbSksbGVmdDp0aGlzLmppKGkubGVmdCl9O2Vsc2UgaWYoaSBpbnN0YW5jZW9mIFNwb3QpaS5pc1Nwb3QoKT90PXtjbGFzczpcImdvLlNwb3RcIix4OnRoaXMuamkoaS54KSx5OnRoaXMuamkoaS55KSxvZmZzZXRYOnRoaXMuamkoaS5vZmZzZXRYKSxvZmZzZXRZOnRoaXMuamkoaS5vZmZzZXRZKX06dD17Y2xhc3M6XCJnby5TcG90XCIsZW51bTppLnRvU3RyaW5nKCl9O2Vsc2UgaWYoaSBpbnN0YW5jZW9mIEJydXNoKXtpZih0PXtjbGFzczpcImdvLkJydXNoXCIsdHlwZTpCcnVzaFR5cGVbaS50eXBlXX0saS50eXBlPT09MT90LmNvbG9yPWkuY29sb3I6KGkudHlwZT09PTJ8fGkudHlwZT09PTMpJiYodC5zdGFydD1pLnN0YXJ0LHQuZW5kPWkuZW5kLGkudHlwZT09PTMmJihpLnN0YXJ0UmFkaXVzIT09MCYmKHQuc3RhcnRSYWRpdXM9dGhpcy5qaShpLnN0YXJ0UmFkaXVzKSksaXNOYU4oaS5lbmRSYWRpdXMpfHwodC5lbmRSYWRpdXM9dGhpcy5qaShpLmVuZFJhZGl1cykpKSksaS5jb2xvclN0b3BzIT09bnVsbCl7Y29uc3Qgbj17fSxvPWkuY29sb3JTdG9wcy5pdGVyYXRvcjtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLmtleSxsPW8udmFsdWU7bltyXT1sfXQuY29sb3JTdG9wcz1ufX1lbHNlIGlmKGkgaW5zdGFuY2VvZiBHZW9tZXRyeSl0PXtjbGFzczpcImdvLkdlb21ldHJ5XCIsdHlwZTpHZW9tZXRyeVR5cGVbaS50eXBlXX0saS5zdGFydFghPT0wJiYodC5zdGFydFg9dGhpcy5qaShpLnN0YXJ0WCkpLGkuc3RhcnRZIT09MCYmKHQuc3RhcnRZPXRoaXMuamkoaS5zdGFydFkpKSxpLmVuZFghPT0wJiYodC5lbmRYPXRoaXMuamkoaS5lbmRYKSksaS5lbmRZIT09MCYmKHQuZW5kWT10aGlzLmppKGkuZW5kWSkpLGkuc3BvdDEuZXF1YWxzKFNwb3QuVG9wTGVmdCl8fCh0LnNwb3QxPWkuc3BvdDEpLGkuc3BvdDIuZXF1YWxzKFNwb3QuQm90dG9tUmlnaHQpfHwodC5zcG90Mj1pLnNwb3QyKSxpLnR5cGU9PT00JiYodC5wYXRoPUdlb21ldHJ5LnN0cmluZ2lmeShpKSk7ZWxzZSBpZihNb2RlbC5LTihudWxsLFwiXCIsaSkpcmV0dXJuXCJ7fVwiO2xldCBlPVwie1wiLHM9ITA7Zm9yKGNvbnN0IG4gaW4gdCl7Y29uc3Qgbz10aGlzLlN0KHQsbik7aWYoIXRoaXMudmIodCxuLG8pKWlmKHM/cz0hMTplKz1cIixcIixlKz10aGlzLkVlKG4pK1wiOlwiLG49PT1cInBvaW50c1wiJiZvIGluc3RhbmNlb2YgTGlzdCl7Y29uc3Qgcj1vO2xldCBsPVwiW1wiO2NvbnN0IGg9ci5pdGVyYXRvcjtmb3IoO2gubmV4dCgpOyl7Y29uc3QgZj1oLnZhbHVlO2wubGVuZ3RoPjEmJihsKz1cIixcIiksbCs9dGhpcy5hRChmLngpLGwrPVwiLFwiLGwrPXRoaXMuYUQoZi55KX1sKz1cIl1cIixlKz1sfWVsc2UgZSs9dGhpcy53cml0ZUpzb25WYWx1ZShvKX1yZXR1cm4gZSs9XCJ9XCIsZX1hRCh0KXtpZih0PT09MS8wKXJldHVyblwiOWU5OTk5XCI7aWYodD09PS0xLzApcmV0dXJuXCItOWU5OTk5XCI7aWYoaXNOYU4odCkpcmV0dXJuXCIwXCI7Y29uc3QgaT10aGlzLnBvaW50c0RpZ2l0cztyZXR1cm4gaT4xNj90LnRvU3RyaW5nKCk6dC50b0ZpeGVkKGkpfWdldCBwb2ludHNEaWdpdHMoKXtyZXR1cm4gdGhpcy5JeX1zZXQgcG9pbnRzRGlnaXRzKHQpe3Q8MD90PTA6dD4xMDAmJih0PTEwMCksdGhpcy5JeT10fXZpKHQpe3JldHVybiB0eXBlb2YgdD09XCJudW1iZXJcIj90OnQ9PT1cIk5hTlwiP05hTjp0PT09XCI5ZTk5OTlcIj8xLzA6dD09PVwiLTllOTk5OVwiPy0xLzA6cGFyc2VGbG9hdCh0KX1lMyh0KXtpZighVS5XKHQpKXJldHVybiB0O2xldCBpPXQuY2xhc3N8fFwiXCI7aWYodHlwZW9mIGkhPVwic3RyaW5nXCJ8fGk9PT1cIlwiKXJldHVybiB0O2lmKGk9PT1cIk5hTlwiKXJldHVybiBOYU47aWYoaT09PVwiRGF0ZVwiKXJldHVybiBuZXcgRGF0ZSh0LnZhbHVlKTtpZihpLmluZGV4T2YoXCJnby5cIikhPT0wKXJldHVybiB0O2k9aS5zdWJzdHJpbmcoMyk7bGV0IGU9dDtpZihpPT09XCJQb2ludFwiKWU9bmV3IFBvaW50KHRoaXMudmkodC54KSx0aGlzLnZpKHQueSkpO2Vsc2UgaWYoaT09PVwiU2l6ZVwiKWU9bmV3IFNpemUodGhpcy52aSh0LndpZHRoKSx0aGlzLnZpKHQuaGVpZ2h0KSk7ZWxzZSBpZihpPT09XCJSZWN0XCIpZT1uZXcgUmVjdCh0aGlzLnZpKHQueCksdGhpcy52aSh0LnkpLHRoaXMudmkodC53aWR0aCksdGhpcy52aSh0LmhlaWdodCkpO2Vsc2UgaWYoaT09PVwiTWFyZ2luXCIpZT1uZXcgTWFyZ2luKHRoaXMudmkodC50b3ApLHRoaXMudmkodC5yaWdodCksdGhpcy52aSh0LmJvdHRvbSksdGhpcy52aSh0LmxlZnQpKTtlbHNlIGlmKGk9PT1cIlNwb3RcIil0eXBlb2YgdC5lbnVtPT1cInN0cmluZ1wiP2U9U3BvdC5wYXJzZSh0LmVudW0pOmU9bmV3IFNwb3QodGhpcy52aSh0LngpLHRoaXMudmkodC55KSx0aGlzLnZpKHQub2Zmc2V0WCksdGhpcy52aSh0Lm9mZnNldFkpKTtlbHNlIGlmKGk9PT1cIkJydXNoXCIpe2NvbnN0IHM9bmV3IEJydXNoO3MudHlwZT1VLlVoKEJydXNoVHlwZSx0LnR5cGUpPz8xLHR5cGVvZiB0LmNvbG9yPT1cInN0cmluZ1wiJiYocy5jb2xvcj10LmNvbG9yKSx0LnN0YXJ0IGluc3RhbmNlb2YgU3BvdCYmKHMuc3RhcnQ9dC5zdGFydCksdC5lbmQgaW5zdGFuY2VvZiBTcG90JiYocy5lbmQ9dC5lbmQpLHR5cGVvZiB0LnN0YXJ0UmFkaXVzPT1cIm51bWJlclwiJiYocy5zdGFydFJhZGl1cz10aGlzLnZpKHQuc3RhcnRSYWRpdXMpKSx0eXBlb2YgdC5lbmRSYWRpdXM9PVwibnVtYmVyXCImJihzLmVuZFJhZGl1cz10aGlzLnZpKHQuZW5kUmFkaXVzKSk7Y29uc3Qgbj10LmNvbG9yU3RvcHM7aWYoVS5XKG4pKWZvcihjb25zdCBvIGluIG4pe2NvbnN0IHI9cGFyc2VGbG9hdChvKTtzLmFkZENvbG9yU3RvcChyLG5bb10pfWU9c31lbHNlIGlmKGk9PT1cIkdlb21ldHJ5XCIpe2xldCBzPW51bGw7dHlwZW9mIHQucGF0aD09XCJzdHJpbmdcIj9zPUdlb21ldHJ5LnBhcnNlKHQucGF0aCk6cz1uZXcgR2VvbWV0cnkscy50eXBlPVUuVWgoR2VvbWV0cnlUeXBlLHQudHlwZSk/PzEsdHlwZW9mIHQuc3RhcnRYPT1cIm51bWJlclwiJiYocy5zdGFydFg9dGhpcy52aSh0LnN0YXJ0WCkpLHR5cGVvZiB0LnN0YXJ0WT09XCJudW1iZXJcIiYmKHMuc3RhcnRZPXRoaXMudmkodC5zdGFydFkpKSx0eXBlb2YgdC5lbmRYPT1cIm51bWJlclwiJiYocy5lbmRYPXRoaXMudmkodC5lbmRYKSksdHlwZW9mIHQuZW5kWT09XCJudW1iZXJcIiYmKHMuZW5kWT10aGlzLnZpKHQuZW5kWSkpLHQuc3BvdDEgaW5zdGFuY2VvZiBTcG90JiYocy5zcG90MT10LnNwb3QxKSx0LnNwb3QyIGluc3RhbmNlb2YgU3BvdCYmKHMuc3BvdDI9dC5zcG90MiksZT1zfWVsc2UgaWYoaT09PVwiRW51bVZhbHVlXCIpe2xldCBzPXQuY2xhc3NUeXBlO3MuaW5kZXhPZihcImdvLlwiKT09PTAmJihzPXMuc3Vic3RyaW5nKDMpKTtjb25zdCBuPU1vZGVsLldOKHMpO1UucnQobikmJihlPVUuVWgobix0Lm5hbWUpKX1yZXR1cm4gZX1nZXQgbmFtZSgpe3JldHVybiB0aGlzLkx0fXNldCBuYW1lKHQpe2NvbnN0IGk9dGhpcy5MdDtpIT09dCYmKFUuaSh0LFwic3RyaW5nXCIsTW9kZWwsXCJuYW1lXCIpLHRoaXMuTHQ9dCx0aGlzLnQoXCJuYW1lXCIsaSx0KSl9Z2V0IGRhdGFGb3JtYXQoKXtyZXR1cm4gdGhpcy5zZ31zZXQgZGF0YUZvcm1hdCh0KXtjb25zdCBpPXRoaXMuc2c7aSE9PXQmJihVLmkodCxcInN0cmluZ1wiLE1vZGVsLFwiZGF0YUZvcm1hdFwiKSx0aGlzLnNnPXQsdGhpcy50KFwiZGF0YUZvcm1hdFwiLGksdCkpfWdldCBpc1JlYWRPbmx5KCl7cmV0dXJuIHRoaXMuT299c2V0IGlzUmVhZE9ubHkodCl7Y29uc3QgaT10aGlzLk9vO2khPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTW9kZWwsXCJpc1JlYWRPbmx5XCIpLHRoaXMuT289dCx0aGlzLnQoXCJpc1JlYWRPbmx5XCIsaSx0KSl9Z2V0IG1vZGVsRGF0YSgpe3JldHVybiB0aGlzLlhOfXNldCBtb2RlbERhdGEodCl7Y29uc3QgaT10aGlzLm1vZGVsRGF0YTtpIT09dCYmKFUuTW8odCxNb2RlbCxcIm1vZGVsRGF0YVwiKSx0aGlzLmNvbnRhaW5zTm9kZURhdGEodCkmJlUubihcIk1vZGVsLm1vZGVsRGF0YSBPYmplY3QgbXVzdCBub3QgYmUgdXNlZCBieSB0aGUgcmVzdCBvZiB0aGUgbW9kZWw6IFwiK3QpLHRoaXMuWE49dCx0aGlzLnQoXCJtb2RlbERhdGFcIixpLHQpLHRoaXMudXBkYXRlVGFyZ2V0QmluZGluZ3ModCkpfWFkZENoYW5nZWRMaXN0ZW5lcih0KXtyZXR1cm4gVS5QKHQsTW9kZWwsXCJhZGRDaGFuZ2VkTGlzdGVuZXI6bGlzdGVuZXJcIiksdGhpcy5PeS5wdXNoKHQpLHRoaXN9cmVtb3ZlQ2hhbmdlZExpc3RlbmVyKHQpe1UuUCh0LE1vZGVsLFwicmVtb3ZlQ2hhbmdlZExpc3RlbmVyOmxpc3RlbmVyXCIpO2NvbnN0IGk9dGhpcy5PeS5pbmRleE9mKHQpO2k+PTAmJnRoaXMuT3kuc3BsaWNlKGksMSl9JDIodCl7dGhpcy5za2lwc1VuZG9NYW5hZ2VyfHx0aGlzLnVuZG9NYW5hZ2VyLmhhbmRsZUNoYW5nZWQodCksdGhpcy5mRCh0KX1mRCh0KXt0aGlzLk95LmZvckVhY2goaT0+aSh0KSl9YkYodCl7dGhpcy5mRCh0KX1yYWlzZUNoYW5nZWRFdmVudCh0LGksZSxzLG4sbyxyKXt0aGlzLnp0KFwiXCIsdCxpLGUscyxuLG8scil9cmFpc2VDaGFuZ2VkKHQsaSxlLHMsbil7dGhpcy56dChcIlwiLDIsdCx0aGlzLGksZSxzLG4pfXQodCxpLGUscyxuKXt0aGlzLnp0KFwiXCIsMix0LHRoaXMsaSxlLHMsbil9cmFpc2VEYXRhQ2hhbmdlZCh0LGksZSxzLG4sbyl7dGhpcy56dChcIlwiLDIsaSx0LGUscyxuLG8pfXp0KHQsaSxlLHMsbixvLHIsbCl7cj09PXZvaWQgMCYmKHI9bnVsbCksbD09PXZvaWQgMCYmKGw9bnVsbCk7Y29uc3QgaD1uZXcgQ2hhbmdlZEV2ZW50O2gubW9kZWw9dGhpcyxoLmNoYW5nZT1pLGgubW9kZWxDaGFuZ2U9dCxoLnByb3BlcnR5TmFtZT1lLGgub2JqZWN0PXMsaC5vbGRWYWx1ZT1uLGgub2xkUGFyYW09cixoLm5ld1ZhbHVlPW8saC5uZXdQYXJhbT1sLHRoaXMuJDIoaCl9Z2V0IHVuZG9NYW5hZ2VyKCl7cmV0dXJuIHRoaXMuamJ9c2V0IHVuZG9NYW5hZ2VyKHQpe2NvbnN0IGk9dGhpcy5qYjtpIT09dCYmKFUuZSh0LFVuZG9NYW5hZ2VyLE1vZGVsLFwidW5kb01hbmFnZXJcIiksaSE9PW51bGwmJmkucmVtb3ZlTW9kZWwodGhpcyksdGhpcy5qYj10LHQhPT1udWxsJiZ0LmFkZE1vZGVsKHRoaXMpKX1nZXQgc2tpcHNVbmRvTWFuYWdlcigpe3JldHVybiB0aGlzLklvfXNldCBza2lwc1VuZG9NYW5hZ2VyKHQpe1UuaSh0LFwiYm9vbGVhblwiLE1vZGVsLFwic2tpcHNVbmRvTWFuYWdlclwiKSx0aGlzLklvPXR9Y2hhbmdlU3RhdGUodCxpKXtpZih0IT09bnVsbCYmdC5tb2RlbD09PXRoaXMpaWYodC5jaGFuZ2U9PT0yKXtjb25zdCBlPXQub2JqZWN0LHM9dC5wcm9wZXJ0eU5hbWUsbj10LmdldFZhbHVlKGkpO2lmKHM9PT10aGlzLm5vZGVLZXlQcm9wZXJ0eSYmdGhpcy5jb250YWluc05vZGVEYXRhKGUpKXtjb25zdCBvPXQuZ2V0VmFsdWUoIWkpO28hPT12b2lkIDAmJnRoaXMueGkuZGVsZXRlKG8pLG4hPT12b2lkIDAmJnRoaXMueGkuc2V0KG4sZSl9dGhpcy5ldChlLHMsbil9ZWxzZSBpZih0LmNoYW5nZT09PTMpe2NvbnN0IGU9dC5uZXdQYXJhbTtpZih0Lm1vZGVsQ2hhbmdlPT09XCJub2RlRGF0YUFycmF5XCIpe2NvbnN0IHM9dC5uZXdWYWx1ZTtpZihVLlcocykmJnR5cGVvZiBlPT1cIm51bWJlclwiKXtjb25zdCBuPXRoaXMuZ2V0S2V5Rm9yTm9kZURhdGEocyk7aT8odGhpcy5TZVtlXT09PXMmJnRoaXMueG8odGhpcy5TZSxlKSxuIT09dm9pZCAwJiZ0aGlzLnhpLmRlbGV0ZShuKSk6KHRoaXMuU2VbZV0hPT1zJiZ0aGlzLmVyKHRoaXMuU2UsZSxzKSxuIT09dm9pZCAwJiZ0aGlzLnhpLnNldChuLHMpKX19ZWxzZSBpZih0Lm1vZGVsQ2hhbmdlPT09XCJcIil7bGV0IHM9dC5vYmplY3Q7aWYocyYmIUFycmF5LmlzQXJyYXkocykmJnQucHJvcGVydHlOYW1lJiYocz10aGlzLlN0KHMsdC5wcm9wZXJ0eU5hbWUpKSxBcnJheS5pc0FycmF5KHMpJiZ0eXBlb2YgZT09XCJudW1iZXJcIil7Y29uc3Qgbj10Lm5ld1ZhbHVlO2k/dGhpcy54byhzLGUpOnRoaXMuZXIocyxlLG4pfX1lbHNlIFUubihcInVua25vd24gQ2hhbmdlVHlwZS5JbnNlcnQgbW9kZWxDaGFuZ2U6IFwiK3QudG9TdHJpbmcoKSl9ZWxzZSBpZih0LmNoYW5nZT09PTQpe2NvbnN0IGU9dC5vbGRQYXJhbTtpZih0Lm1vZGVsQ2hhbmdlPT09XCJub2RlRGF0YUFycmF5XCIpe2NvbnN0IHM9dC5vbGRWYWx1ZTtpZihVLlcocykmJnR5cGVvZiBlPT1cIm51bWJlclwiKXtjb25zdCBuPXRoaXMuZ2V0S2V5Rm9yTm9kZURhdGEocyk7aT8odGhpcy5TZVtlXSE9PXMmJnRoaXMuZXIodGhpcy5TZSxlLHMpLG4hPT12b2lkIDAmJnRoaXMueGkuc2V0KG4scykpOih0aGlzLlNlW2VdPT09cyYmdGhpcy54byh0aGlzLlNlLGUpLG4hPT12b2lkIDAmJnRoaXMueGkuZGVsZXRlKG4pKX19ZWxzZSBpZih0Lm1vZGVsQ2hhbmdlPT09XCJcIil7bGV0IHM9dC5vYmplY3Q7aWYocyYmIUFycmF5LmlzQXJyYXkocykmJnQucHJvcGVydHlOYW1lJiYocz10aGlzLlN0KHMsdC5wcm9wZXJ0eU5hbWUpKSxBcnJheS5pc0FycmF5KHMpJiZ0eXBlb2YgZT09XCJudW1iZXJcIil7Y29uc3Qgbj10Lm9sZFZhbHVlO2k/dGhpcy5lcihzLGUsbik6dGhpcy54byhzLGUpfX1lbHNlIFUubihcInVua25vd24gQ2hhbmdlVHlwZS5SZW1vdmUgbW9kZWxDaGFuZ2U6IFwiK3QudG9TdHJpbmcoKSl9ZWxzZSB0LmNoYW5nZT09PTF8fFUubihcInVua25vd24gQ2hhbmdlZEV2ZW50OiBcIit0LnRvU3RyaW5nKCkpfXN0YXJ0VHJhbnNhY3Rpb24odCl7cmV0dXJuIHRoaXMudW5kb01hbmFnZXIuc3RhcnRUcmFuc2FjdGlvbih0KX1jb21taXRUcmFuc2FjdGlvbih0KXtyZXR1cm4gdGhpcy51bmRvTWFuYWdlci5jb21taXRUcmFuc2FjdGlvbih0KX1yb2xsYmFja1RyYW5zYWN0aW9uKCl7cmV0dXJuIHRoaXMudW5kb01hbmFnZXIucm9sbGJhY2tUcmFuc2FjdGlvbigpfWNvbW1pdCh0LGkpe2xldCBlPWk7ZT09PXZvaWQgMCYmKGU9XCJcIik7Y29uc3Qgcz10aGlzLnNraXBzVW5kb01hbmFnZXI7ZT09PW51bGwmJih0aGlzLnNraXBzVW5kb01hbmFnZXI9ITAsZT1cIlwiKSx0aGlzLnVuZG9NYW5hZ2VyLnN0YXJ0VHJhbnNhY3Rpb24oZSk7bGV0IG49ITE7dHJ5e3QodGhpcyksbj0hMH1maW5hbGx5e24/dGhpcy51bmRvTWFuYWdlci5jb21taXRUcmFuc2FjdGlvbihlKTp0aGlzLnVuZG9NYW5hZ2VyLnJvbGxiYWNrVHJhbnNhY3Rpb24oKSx0aGlzLnNraXBzVW5kb01hbmFnZXI9c319dXBkYXRlVGFyZ2V0QmluZGluZ3ModCxpKXtpPT09dm9pZCAwJiYoaT1cIlwiKSx0aGlzLnp0KFwiU291cmNlQ2hhbmdlZFwiLDEsaSx0LG51bGwsbnVsbCl9Z2V0IG5vZGVLZXlQcm9wZXJ0eSgpe3JldHVybiB0aGlzLklofXNldCBub2RlS2V5UHJvcGVydHkodCl7Y29uc3QgaT10aGlzLkloO2khPT10JiYodGhpcy5Mbih0LE1vZGVsLFwibm9kZUtleVByb3BlcnR5XCIpLHQ9PT1cIlwiJiZVLm4oXCJNb2RlbC5ub2RlS2V5UHJvcGVydHkgbWF5IG5vdCBiZSB0aGUgZW1wdHkgc3RyaW5nXCIpLHRoaXMueGkuY291bnQ+MCYmVS5uKFwiQ2Fubm90IHNldCBNb2RlbC5ub2RlS2V5UHJvcGVydHkgd2hlbiB0aGVyZSBpcyBleGlzdGluZyBub2RlIGRhdGFcIiksdGhpcy5JaD10LHRoaXMudChcIm5vZGVLZXlQcm9wZXJ0eVwiLGksdCkpfUxuKHQsaSxlKXt0eXBlb2YgdCE9XCJzdHJpbmdcIiYmIVUucnQodCkmJlUuUGkodCxcInN0cmluZyBvciBmdW5jdGlvblwiLGksZSl9Z2V0S2V5Rm9yTm9kZURhdGEodCl7aWYodD09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5JaDtpZihpPT09XCJcIilyZXR1cm47Y29uc3QgZT10aGlzLlN0KHQsaSk7aWYoZSE9PXZvaWQgMCl7aWYodGhpcy5pc0tleVR5cGUoZSkpcmV0dXJuIGU7VS5uKFwiS2V5IHZhbHVlIGZvciBub2RlIGRhdGEgXCIrdCtcIiBpcyBub3QgYSBudW1iZXIgb3IgYSBzdHJpbmc6IFwiK2UpfX1zZXRLZXlGb3JOb2RlRGF0YSh0LGkpe2lmKChpPT1udWxsfHwhdGhpcy5pc0tleVR5cGUoaSkpJiZVLlBpKGksXCJudW1iZXIgb3Igc3RyaW5nXCIsTW9kZWwsXCJzZXRLZXlGb3JOb2RlRGF0YTprZXlcIiksdD09PW51bGwpcmV0dXJuO2NvbnN0IGU9dGhpcy5JaDtpZihlPT09XCJcIilyZXR1cm47aWYoIXRoaXMuY29udGFpbnNOb2RlRGF0YSh0KSl7dGhpcy5ldCh0LGUsaSk7cmV0dXJufWNvbnN0IHM9dGhpcy5TdCh0LGUpO2lmKHMhPT1pKXtpZih0aGlzLmZpbmROb2RlRGF0YUZvcktleShpKSE9PW51bGwpcmV0dXJuO3RoaXMuZXQodCxlLGkpLHMhPT12b2lkIDAmJnRoaXMueGkuZGVsZXRlKHMpLHRoaXMueGkuc2V0KGksdCksdGhpcy56dChcIm5vZGVLZXlcIiwyLGUsdCxzLGkpLHR5cGVvZiBlPT1cInN0cmluZ1wiJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQsZSksdGhpcy5WeShzLGkpfX1nZXQgbWFrZVVuaXF1ZUtleUZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuQmN9c2V0IG1ha2VVbmlxdWVLZXlGdW5jdGlvbih0KXtjb25zdCBpPXRoaXMuQmM7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsTW9kZWwsXCJtYWtlVW5pcXVlS2V5RnVuY3Rpb25cIiksdGhpcy5CYz10LHRoaXMudChcIm1ha2VVbmlxdWVLZXlGdW5jdGlvblwiLGksdCkpfWlzS2V5VHlwZSh0KXtyZXR1cm4gdHlwZW9mIHQ9PVwibnVtYmVyXCJ8fHR5cGVvZiB0PT1cInN0cmluZ1wifWNvbnRhaW5zTm9kZURhdGEodCl7aWYodD09PW51bGwpcmV0dXJuITE7Y29uc3QgaT10aGlzLmdldEtleUZvck5vZGVEYXRhKHQpO3JldHVybiBpPT09dm9pZCAwPyExOnRoaXMueGkuZ2V0KGkpPT09dH1maW5kTm9kZURhdGFGb3JLZXkodCl7cmV0dXJuIHQ9PT1udWxsJiZVLm4oXCJNb2RlbC5maW5kTm9kZURhdGFGb3JLZXk6a2V5IG11c3Qgbm90IGJlIG51bGxcIiksdD09PXZvaWQgMHx8IXRoaXMuaXNLZXlUeXBlKHQpP251bGw6dGhpcy54aS5nZXQodCl9Z2V0IG5vZGVEYXRhQXJyYXkoKXtyZXR1cm4gdGhpcy5TZX1zZXQgbm9kZURhdGFBcnJheSh0KXtjb25zdCBpPXRoaXMuU2U7aWYoaSE9PXQpe3RoaXMuenkodCxNb2RlbCxcIm5vZGVEYXRhQXJyYXlcIiksdGhpcy54aS5jbGVhcigpLHRoaXMuak4oKTtjb25zdCBlPXQubGVuZ3RoO2ZvcihsZXQgbz0wO288ZTtvKyspe2NvbnN0IHI9dFtvXTtVLlcocil8fFUubihcIk1vZGVsLm5vZGVEYXRhQXJyYXkgbXVzdCBvbmx5IGNvbnRhaW4gT2JqZWN0cywgbm90OiBcIityKSxyPT09dGhpcy5tb2RlbERhdGEmJlUubihcIm5vZGVEYXRhQXJyYXkgT2JqZWN0cyBtdXN0IG5vdCBiZSB0aGUgc2hhcmVkIE1vZGVsLm1vZGVsRGF0YVwiKX10aGlzLlNlPXQ7Y29uc3Qgcz1uZXcgTGlzdDtmb3IobGV0IG89MDtvPGU7bysrKXtjb25zdCByPXRbb10sbD10aGlzLmdldEtleUZvck5vZGVEYXRhKHIpO2w9PT12b2lkIDB8fHRoaXMueGkuZ2V0KGwpIT09bnVsbD9zLmFkZChyKTp0aGlzLnhpLnNldChsLHIpfWNvbnN0IG49cy5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO3RoaXMubWFrZU5vZGVEYXRhS2V5VW5pcXVlKG8pO2NvbnN0IHI9dGhpcy5nZXRLZXlGb3JOb2RlRGF0YShvKTtyIT09dm9pZCAwJiZ0aGlzLnhpLnNldChyLG8pfXRoaXMuenQoXCJub2RlRGF0YUFycmF5XCIsMixcIm5vZGVEYXRhQXJyYXlcIix0aGlzLGksdCk7Zm9yKGxldCBvPTA7bzxlO28rKyl7Y29uc3Qgcj10W29dO3RoaXMuY2cociksdGhpcy51ZyhyKX19fSRiKHQpe3JldHVybiB0PT09dm9pZCAwPyExOnRoaXMueGkuaGFzKHQpfW1ha2VOb2RlRGF0YUtleVVuaXF1ZSh0KXtpZih0PT09bnVsbClyZXR1cm47Y29uc3QgaT10aGlzLkloO2lmKGk9PT1cIlwiKXJldHVybjtsZXQgZT10aGlzLmdldEtleUZvck5vZGVEYXRhKHQpO2lmKGUhPT12b2lkIDAmJiF0aGlzLiRiKGUpKXJldHVybjtjb25zdCBzPXRoaXMuQmM7aWYocyE9PW51bGwmJihlPXModGhpcyx0KSxlIT1udWxsJiYhdGhpcy4kYihlKSkpe3RoaXMuZXQodCxpLGUpO3JldHVybn1pZih0eXBlb2YgZT09XCJzdHJpbmdcIil7bGV0IG49Mjtmb3IoO3RoaXMuJGIoZStuKTspbisrO3RoaXMuZXQodCxpLGUrbil9ZWxzZSBpZihlPT09dm9pZCAwfHx0eXBlb2YgZT09XCJudW1iZXJcIil7bGV0IG49LXRoaXMueGkuY291bnQtMTtmb3IoO3RoaXMuJGIobik7KW4tLTt0aGlzLmV0KHQsaSxuKX1lbHNlIERlYnVnJiZVLm4oXCJNb2RlbC5nZXRLZXlGb3JOb2RlRGF0YSByZXR1cm5lZCBzb21ldGhpbmcgb3RoZXIgdGhhbiBhIHN0cmluZyBvciBhIG51bWJlcjogXCIrZSl9YWRkTm9kZURhdGEodCl7dCE9PW51bGwmJih0PT09dGhpcy5tb2RlbERhdGEmJlUubihcIk1vZGVsLmFkZE5vZGVEYXRhIGNhbm5vdCBhZGQgdGhlIHNoYXJlZCBNb2RlbC5tb2RlbERhdGEgT2JqZWN0XCIpLHRoaXMuY29udGFpbnNOb2RlRGF0YSh0KXx8dGhpcy5XVCh0LCEwKSl9V1QodCxpKXtsZXQgZT10aGlzLmdldEtleUZvck5vZGVEYXRhKHQpO2lmKGU9PT12b2lkIDApdGhpcy5tYWtlTm9kZURhdGFLZXlVbmlxdWUodCksZT10aGlzLmdldEtleUZvck5vZGVEYXRhKHQpO2Vsc2V7aWYodGhpcy54aS5nZXQoZSk9PT10KXJldHVybjt0aGlzLm1ha2VOb2RlRGF0YUtleVVuaXF1ZSh0KSxlPXRoaXMuZ2V0S2V5Rm9yTm9kZURhdGEodCl9ZT09PXZvaWQgMCYmVS5uKFwiTW9kZWwubWFrZU5vZGVEYXRhS2V5VW5pcXVlIGZhaWxlZCBvbiBcIit0K1wiLiAgRGF0YSBub3QgYWRkZWQgdG8gTW9kZWwuXCIpLHRoaXMueGkuc2V0KGUsdCk7bGV0IHM9bnVsbDtpJiYocz10aGlzLlNlLmxlbmd0aCx0aGlzLmVyKHRoaXMuU2Uscyx0KSksdGhpcy56dChcIm5vZGVEYXRhQXJyYXlcIiwzLFwibm9kZURhdGFBcnJheVwiLHRoaXMsbnVsbCx0LG51bGwscyksdGhpcy5jZyh0KSx0aGlzLnVnKHQpfWFkZE5vZGVEYXRhQ29sbGVjdGlvbih0KXtpZihBcnJheS5pc0FycmF5KHQpKXtjb25zdCBpPXQubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspdGhpcy5hZGROb2RlRGF0YSh0W2VdKX1lbHNle2NvbnN0IGk9dC5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO3RoaXMuYWRkTm9kZURhdGEoZSl9fX1yZW1vdmVOb2RlRGF0YSh0KXt0IT09bnVsbCYmdGhpcy5xVCh0LCEwKX1xVCh0LGkpe2NvbnN0IGU9dGhpcy5nZXRLZXlGb3JOb2RlRGF0YSh0KTtlIT09dm9pZCAwJiZ0aGlzLnhpLmRlbGV0ZShlKTtsZXQgcz1udWxsO2lmKGkpe2lmKHM9dGhpcy5TZS5pbmRleE9mKHQpLHM8MClyZXR1cm47dGhpcy54byh0aGlzLlNlLHMpfXRoaXMuenQoXCJub2RlRGF0YUFycmF5XCIsNCxcIm5vZGVEYXRhQXJyYXlcIix0aGlzLHQsbnVsbCxzLG51bGwpLHRoaXMuWHkodCl9cmVtb3ZlTm9kZURhdGFDb2xsZWN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpe2NvbnN0IGk9dC5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl0aGlzLnJlbW92ZU5vZGVEYXRhKHRbZV0pfWVsc2V7Y29uc3QgaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7dGhpcy5yZW1vdmVOb2RlRGF0YShlKX19fW1lcmdlTm9kZURhdGFBcnJheSh0KXtpZih0PT09dGhpcy5ub2RlRGF0YUFycmF5fHwhQXJyYXkuaXNBcnJheSh0KSlyZXR1cm47Y29uc3QgaT1uZXcgR1NldDtpLmFkZEFsbCh0aGlzLnhpLml0ZXJhdG9yS2V5cyk7Y29uc3QgZT1uZXcgR1NldCxzPXQubGVuZ3RoO2ZvcihsZXQgbz0wO288cztvKyspe2NvbnN0IHI9dFtvXSxsPXRoaXMuZ2V0S2V5Rm9yTm9kZURhdGEocik7aWYobCE9PXZvaWQgMCl7ZS5hZGQobCk7Y29uc3QgaD10aGlzLmZpbmROb2RlRGF0YUZvcktleShsKTtpZihoPT09ciljb250aW51ZTtpZihoIT09bnVsbCl0aGlzLmFzc2lnbkFsbERhdGFQcm9wZXJ0aWVzKGgsciksdGhpcy5mZyhyLGgpO2Vsc2V7Y29uc3QgZj10aGlzLmNsb25lRGVlcChyKTt0aGlzLnNldEtleUZvck5vZGVEYXRhKGYsbCksdGhpcy5hZGROb2RlRGF0YShmKX19ZWxzZXtjb25zdCBoPXRoaXMuY2xvbmVEZWVwKHIpO3RoaXMuYWRkTm9kZURhdGEoaCksZS5hZGQodGhpcy5nZXRLZXlGb3JOb2RlRGF0YShoKSl9fWNvbnN0IG49aS5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO2lmKCFlLmhhcyhvKSl7Y29uc3Qgcj10aGlzLmZpbmROb2RlRGF0YUZvcktleShvKTtyJiZ0aGlzLnJlbW92ZU5vZGVEYXRhKHIpfX19VnkodCxpKXtpZihpPT09dm9pZCAwKXJldHVybjtjb25zdCBlPXRoaXMuRnkodCk7ZSBpbnN0YW5jZW9mIEdTZXQmJnRoaXMuaXIuc2V0KGksZSl9ak4oKXt9Y2codCl7fXVnKHQpe31YeSh0KXt9dG4odCxpKXtpZih0PT09dm9pZCAwKXJldHVybjtsZXQgZT10aGlzLmlyLmdldCh0KTtlPT09bnVsbCYmKGU9bmV3IEdTZXQsdGhpcy5pci5zZXQodCxlKSksZS5hZGQoaSl9X3ModCxpKXtpZih0PT09dm9pZCAwKXJldHVybjtjb25zdCBlPXRoaXMuaXIuZ2V0KHQpO2UgaW5zdGFuY2VvZiBHU2V0JiYoaT09bnVsbD90aGlzLmlyLmRlbGV0ZSh0KTooZS5kZWxldGUoaSksZS5jb3VudD09PTAmJnRoaXMuaXIuZGVsZXRlKHQpKSl9RnkodCl7aWYodD09PXZvaWQgMClyZXR1cm4gbnVsbDtjb25zdCBpPXRoaXMuaXIuZ2V0KHQpO3JldHVybiBpIGluc3RhbmNlb2YgR1NldD9pOm51bGx9RUUodCl7dD09PXZvaWQgMD90aGlzLmlyLmNsZWFyKCk6dGhpcy5pci5kZWxldGUodCl9Z2V0IGNvcHlOb2RlRGF0YUZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuVmN9c2V0IGNvcHlOb2RlRGF0YUZ1bmN0aW9uKHQpe2NvbnN0IGk9dGhpcy5WYztpIT09dCYmKHQhPT1udWxsJiZVLlAodCxNb2RlbCxcImNvcHlOb2RlRGF0YUZ1bmN0aW9uXCIpLHRoaXMuVmM9dCx0aGlzLnQoXCJjb3B5Tm9kZURhdGFGdW5jdGlvblwiLGksdCkpfWdldCBjb3BpZXNBcnJheXMoKXtyZXR1cm4gdGhpcy5uZ31zZXQgY29waWVzQXJyYXlzKHQpe2NvbnN0IGk9dGhpcy5uZztpIT09dCYmKHQhPT1udWxsJiZVLmkodCxcImJvb2xlYW5cIixNb2RlbCxcImNvcGllc0FycmF5c1wiKSx0aGlzLm5nPXQsdGhpcy50KFwiY29waWVzQXJyYXlzXCIsaSx0KSl9Z2V0IGNvcGllc0FycmF5T2JqZWN0cygpe3JldHVybiB0aGlzLm9nfXNldCBjb3BpZXNBcnJheU9iamVjdHModCl7Y29uc3QgaT10aGlzLm9nO2khPT10JiYodCE9PW51bGwmJlUuaSh0LFwiYm9vbGVhblwiLE1vZGVsLFwiY29waWVzQXJyYXlPYmplY3RzXCIpLHRoaXMub2c9dCx0aGlzLnQoXCJjb3BpZXNBcnJheU9iamVjdHNcIixpLHQpKX1nZXQgY29waWVzS2V5KCl7cmV0dXJuIHRoaXMucmd9c2V0IGNvcGllc0tleSh0KXtjb25zdCBpPXRoaXMucmc7aSE9PXQmJih0IT09bnVsbCYmVS5pKHQsXCJib29sZWFuXCIsTW9kZWwsXCJjb3BpZXNLZXlcIiksdGhpcy5yZz10LHRoaXMudChcImNvcGllc0tleVwiLGksdCkpfWNvcHlOb2RlRGF0YSh0KXtpZih0PT09bnVsbClyZXR1cm4gbnVsbDtsZXQgaT1udWxsO2NvbnN0IGU9dGhpcy5WYztyZXR1cm4gZSE9PW51bGw/aT1lKHQsdGhpcyk6aT10aGlzLlpiKHQsITApLFUuVyhpKSxpfVpiKHQsaSl7aWYoVS5XKHQpKWlmKEFycmF5LmlzQXJyYXkodCkpaWYodGhpcy5jb3BpZXNBcnJheXMpe2NvbnN0IGU9dCxzPVtdO2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtjb25zdCBvPWVbbl0scj10aGlzLlpiKG8sdGhpcy5jb3BpZXNBcnJheU9iamVjdHMpO3MucHVzaChyKX1yZXR1cm4gc31lbHNlIHJldHVybiB0O2Vsc2V7aWYodCBpbnN0YW5jZW9mIFBvaW50fHx0IGluc3RhbmNlb2YgU2l6ZXx8dCBpbnN0YW5jZW9mIFJlY3R8fHQgaW5zdGFuY2VvZiBNYXJnaW58fHQgaW5zdGFuY2VvZiBTcG90KXJldHVybiB0LmNvcHkoKTtpZihpKXtjb25zdCBlPXQscz1lLmNvbnN0cnVjdG9yLG49cz9uZXcgczp7fSxvPSF0aGlzLmNvcGllc0tleSYmdHlwZW9mIHRoaXMubm9kZUtleVByb3BlcnR5PT1cInN0cmluZ1wiP3RoaXMubm9kZUtleVByb3BlcnR5Om51bGw7Zm9yKGNvbnN0IHIgaW4gZSl7aWYocj09PVwiX19nb2hhc2hpZFwiKXtuLl9fZ29oYXNoaWQ9dm9pZCAwO2NvbnRpbnVlfWlmKHI9PT1vKXtuW29dPXZvaWQgMDtjb250aW51ZX1jb25zdCBsPXRoaXMuU3QoZSxyKTtpZighVS5XKGwpKW5bcl09bDtlbHNlIGlmKE1vZGVsLktOKGUscixsKSl0aGlzLmV0KG4scixsKTtlbHNle2NvbnN0IGg9dGhpcy5aYihsLCExKTt0aGlzLmV0KG4scixoKX19cmV0dXJuIG59ZWxzZSByZXR1cm4gdH1lbHNlIHJldHVybiB0fWdldCBhZnRlckNvcHlGdW5jdGlvbigpe3JldHVybiB0aGlzLmxnfXNldCBhZnRlckNvcHlGdW5jdGlvbih0KXtjb25zdCBpPXRoaXMubGc7aSE9PXQmJih0IT09bnVsbCYmVS5QKHQsTW9kZWwsXCJhZnRlckNvcHlGdW5jdGlvblwiKSx0aGlzLmxnPXQsdGhpcy50KFwiYWZ0ZXJDb3B5RnVuY3Rpb25cIixpLHQpKX1zdGF0aWMgS04odCxpLGUpe2NvbnN0IHM9VS5CbihlKTtyZXR1cm4gZSBpbnN0YW5jZW9mIE1vZGVsfHxlIGluc3RhbmNlb2YgVW5kb01hbmFnZXJ8fGUgaW5zdGFuY2VvZiBUcmFuc2FjdGlvbnx8ZSBpbnN0YW5jZW9mIENoYW5nZWRFdmVudHx8ZSBpbnN0YW5jZW9mIEdyYXBoT2JqZWN0fHxlIGluc3RhbmNlb2YgUm93Q29sdW1uRGVmaW5pdGlvbnx8ZSBpbnN0YW5jZW9mIERpYWdyYW18fGUgaW5zdGFuY2VvZiBFdmVudFRhcmdldHx8cz09PVwiTGF5ZXJcInx8cz09PVwiUm93Q29sdW1uRGVmaW5pdGlvblwifHxzLmluZGV4T2YoXCJBbmltYXRpb25cIik+PTB8fHMuaW5kZXhPZihcIlRvb2xcIik+PTB8fHMuaW5kZXhPZihcIkNvbW1hbmRIYW5kbGVyXCIpPj0wfHxzLmluZGV4T2YoXCJMYXlvdXRcIik+PTA/KERlYnVnJiZpWzBdIT09XCJfXCImJih0JiZpJiZVLm50KCdXYXJuaW5nOiBmb3VuZCBHcmFwaE9iamVjdCBvciBEaWFncmFtIG9yIEhUTUwgRE9NIHJlZmVyZW5jZSB3aGVuIGNvcHlpbmcgbW9kZWwgZGF0YSBvbiBwcm9wZXJ0eSBcIicraSsnXCIgb2YgZGF0YSBvYmplY3Q6ICcrdC50b1N0cmluZygpKSxVLm50KGAgIFxuTW9kZWwgZGF0YSBzaG91bGQgbm90IGhhdmUgYW55IHJlZmVyZW5jZXMgdG8gYSBEaWFncmFtIG9yIGFueSBwYXJ0IG9mIGEgZGlhZ3JhbSwgc3VjaCBhczogYCtlLnRvU3RyaW5nKCkpKSwhMCk6ITF9c3RhdGljIGNEPSExO3NldERhdGFQcm9wZXJ0eSh0LGksZSl7aWYoRGVidWcmJihVLk1vKHQsTW9kZWwsXCJzZXREYXRhUHJvcGVydHk6ZGF0YVwiKSxVLmkoaSxcInN0cmluZ1wiLE1vZGVsLFwic2V0RGF0YVByb3BlcnR5OnByb3BuYW1lXCIpLGk9PT1cIlwiJiZVLm4oXCJNb2RlbC5zZXREYXRhUHJvcGVydHk6IHByb3BlcnR5IG5hbWUgbXVzdCBub3QgYmUgYW4gZW1wdHkgc3RyaW5nIHdoZW4gc2V0dGluZyBcIit0K1wiIHRvIFwiK2UpKSx0aGlzLmNvbnRhaW5zTm9kZURhdGEodCkpe2lmKGk9PT10aGlzLm5vZGVLZXlQcm9wZXJ0eSl7dGhpcy5zZXRLZXlGb3JOb2RlRGF0YSh0LGUpO3JldHVybn1lbHNlIGlmKGk9PT10aGlzLm5vZGVDYXRlZ29yeVByb3BlcnR5KXt0aGlzLnNldENhdGVnb3J5Rm9yTm9kZURhdGEodCxlKTtyZXR1cm59fWVsc2UhTW9kZWwuY0QmJnQgaW5zdGFuY2VvZiBHcmFwaE9iamVjdCYmKE1vZGVsLmNEPSEwLFUubnQoJ01vZGVsLnNldERhdGFQcm9wZXJ0eSBpcyBtb2RpZnlpbmcgYSBHcmFwaE9iamVjdCwgXCInK3QudG9TdHJpbmcoKSsnXCInKSxVLm50KFwiICBJcyB0aGF0IHJlYWxseSB5b3VyIGludGVudD9cIikpO2NvbnN0IHM9dGhpcy5TdCh0LGkpO3MhPT1lJiYodGhpcy5ldCh0LGksZSksdGhpcy5yYWlzZURhdGFDaGFuZ2VkKHQsaSxzLGUpKX1zZXQodCxpLGUpe3RoaXMuc2V0RGF0YVByb3BlcnR5KHQsaSxlKX1hc3NpZ25BbGxEYXRhUHJvcGVydGllcyh0LGkpe2lmKCFpKXJldHVybjtjb25zdCBlPXRoaXMuY29udGFpbnNOb2RlRGF0YSh0KTtmb3IoY29uc3QgcyBpbiBpKXMhPT1cIl9fZ29oYXNoaWRcIiYmKGUmJnM9PT10aGlzLm5vZGVLZXlQcm9wZXJ0eXx8dGhpcy5zZXREYXRhUHJvcGVydHkodCxzLGlbc10pKX1hZGRBcnJheUl0ZW0odCxpKXt0aGlzLmluc2VydEFycmF5SXRlbSh0LC0xLGkpfWluc2VydEFycmF5SXRlbSh0LGksZSl7RGVidWcmJih0aGlzLnp5KHQsTW9kZWwsXCJpbnNlcnRBcnJheUl0ZW06YXJyXCIpLFUucihpLE1vZGVsLFwiaW5zZXJ0QXJyYXlJdGVtOmlkeFwiKSx0PT09dGhpcy5TZSYmVS5uKFwiTW9kZWwuaW5zZXJ0QXJyYXlJdGVtIG9yIE1vZGVsLmFkZEFycmF5SXRlbSBzaG91bGQgbm90IGJlIGNhbGxlZCBvbiB0aGUgTW9kZWwubm9kZURhdGFBcnJheVwiKSksaTwwJiYoaT10Lmxlbmd0aCksdD10aGlzLmVyKHQsaSxlKSx0aGlzLnp0KFwiXCIsMyxcIlwiLHQsbnVsbCxlLG51bGwsaSl9cmVtb3ZlQXJyYXlJdGVtKHQsaSl7aT09PXZvaWQgMCYmKGk9LTEpLERlYnVnJiYodGhpcy56eSh0LE1vZGVsLFwicmVtb3ZlQXJyYXlJdGVtOmFyclwiKSxVLnIoaSxNb2RlbCxcInJlbW92ZUFycmF5SXRlbTppZHhcIikpLHQ9PT10aGlzLlNlJiZVLm4oXCJNb2RlbC5yZW1vdmVBcnJheUl0ZW0gc2hvdWxkIG5vdCBiZSBjYWxsZWQgb24gdGhlIE1vZGVsLm5vZGVEYXRhQXJyYXlcIiksaT09PS0xJiYoaT10Lmxlbmd0aC0xKTtjb25zdCBlPXRbaV07dD10aGlzLnhvKHQsaSksdGhpcy56dChcIlwiLDQsXCJcIix0LGUsbnVsbCxpLG51bGwpfWdldCBub2RlQ2F0ZWdvcnlQcm9wZXJ0eSgpe3JldHVybiB0aGlzLlFhfXNldCBub2RlQ2F0ZWdvcnlQcm9wZXJ0eSh0KXtjb25zdCBpPXRoaXMuUWE7aSE9PXQmJih0aGlzLkxuKHQsTW9kZWwsXCJub2RlQ2F0ZWdvcnlQcm9wZXJ0eVwiKSx0aGlzLlFhPXQsdGhpcy50KFwibm9kZUNhdGVnb3J5UHJvcGVydHlcIixpLHQpKX1nZXRDYXRlZ29yeUZvck5vZGVEYXRhKHQpe2lmKHQ9PT1udWxsKXJldHVyblwiXCI7Y29uc3QgaT10aGlzLlFhO2lmKGk9PT1cIlwiKXJldHVyblwiXCI7Y29uc3QgZT10aGlzLlN0KHQsaSk7aWYoZT09PXZvaWQgMClyZXR1cm5cIlwiO2lmKHR5cGVvZiBlPT1cInN0cmluZ1wiKXJldHVybiBlO1UubihcImdldENhdGVnb3J5Rm9yTm9kZURhdGEgZm91bmQgYSBub24tc3RyaW5nIGNhdGVnb3J5IGZvciBcIit0K1wiOiBcIitlKX1zZXRDYXRlZ29yeUZvck5vZGVEYXRhKHQsaSl7aWYoVS5pKGksXCJzdHJpbmdcIixNb2RlbCxcInNldENhdGVnb3J5Rm9yTm9kZURhdGE6Y2F0XCIpLHQ9PT1udWxsKXJldHVybjtjb25zdCBlPXRoaXMuUWE7aWYoZT09PVwiXCIpcmV0dXJuO2lmKCF0aGlzLmNvbnRhaW5zTm9kZURhdGEodCkpe3RoaXMuZXQodCxlLGkpO3JldHVybn1sZXQgcz10aGlzLlN0KHQsZSk7cz09PXZvaWQgMCYmKHM9XCJcIikscyE9PWkmJih0aGlzLmV0KHQsZSxpKSx0aGlzLnp0KFwibm9kZUNhdGVnb3J5XCIsMixlLHQscyxpKSl9ZmcodCxpKXt0aGlzLnNldENhdGVnb3J5Rm9yTm9kZURhdGEoaSx0aGlzLmdldENhdGVnb3J5Rm9yTm9kZURhdGEodCkpfWdldCB0eXBlKCl7cmV0dXJuXCJNb2RlbFwifVNtKCl7cmV0dXJuITF9a20oKXtyZXR1cm4hMX1CMSgpe3JldHVybiExfVlhKCl7cmV0dXJuITF9JHcoKXtyZXR1cm4hMX14YSgpe3JldHVybiExfXN0YXRpYyB6Migpe3JldHVybiBuZXcgTW9kZWx9U3QodCxpKXtyZXR1cm4gTW9kZWwuU3QodCxpKX1zdGF0aWMgU3QodCxpKXtpZighdHx8IWkpcmV0dXJuIG51bGw7bGV0IGU7dHJ5e1UucnQoaSk/ZT1pKHQpOlUucnQodC5nZXRBdHRyaWJ1dGUpPyhlPXQuZ2V0QXR0cmlidXRlKGkpLGU9PT1udWxsJiYoZT12b2lkIDApKTplPXRbaV19Y2F0Y2gocyl7RGVidWcmJlUubnQoXCJwcm9wZXJ0eSBnZXQgZXJyb3I6IFwiK3MudG9TdHJpbmcoKSl9cmV0dXJuIGV9ZXQodCxpLGUpe01vZGVsLmV0KHQsaSxlKX1zdGF0aWMgZXQodCxpLGUpe2lmKCEoIXR8fCFpKSl7dHJ5e1UucnQoaSk/aSh0LGUpOlUucnQodC5zZXRBdHRyaWJ1dGUpP3Quc2V0QXR0cmlidXRlKGksZSk6dFtpXT1lfWNhdGNoKHMpe0RlYnVnJiZVLm50KFwicHJvcGVydHkgc2V0IGVycm9yOiBcIitzLnRvU3RyaW5nKCkpfXJldHVybiB0fX16eSh0LGksZSl7QXJyYXkuaXNBcnJheSh0KXx8VS5QaSh0LFwiQXJyYXlcIixpLGUpfWhEKHQsaSxlKXtyZXR1cm4gdFtpXT1lLHR9ZXIodCxpLGUpe3JldHVybiBpPj10Lmxlbmd0aD90LnB1c2goZSk6dC5zcGxpY2UoaSwwLGUpLHR9eG8odCxpKXtyZXR1cm4gaT49dC5sZW5ndGg/dC5wb3AoKTp0LnNwbGljZShpLDEpLHR9c3RhdGljIFdOKHQpe3JldHVybiBNb2RlbC52Tlt0XT9Nb2RlbC52Tlt0XTpyb290LmdvIT09dm9pZCAwJiZyb290LmdvW3RdP3Jvb3QuZ29bdF06bnVsbH1zdGF0aWMgeWwodCxpKXtNb2RlbC52TltpXT10fXN0YXRpYyB2Tj17fX1Nb2RlbC5mcm9tSlNPTj1Nb2RlbC5mcm9tSnNvbj1Nb2RlbC5mcm9tSnNvbixNb2RlbC55bChCcnVzaCxcIkJydXNoXCIpLE1vZGVsLnlsKEdlb21ldHJ5LFwiR2VvbWV0cnlcIiksTW9kZWwueWwoTWFyZ2luLFwiTWFyZ2luXCIpLE1vZGVsLnlsKFBvaW50LFwiUG9pbnRcIiksTW9kZWwueWwoUmVjdCxcIlJlY3RcIiksTW9kZWwueWwoU2l6ZSxcIlNpemVcIiksTW9kZWwueWwoU3BvdCxcIlNwb3RcIiksTW9kZWwueWwoTW9kZWwsXCJNb2RlbFwiKTtjbGFzcyBHcmFwaExpbmtzTW9kZWwgZXh0ZW5kcyBNb2RlbHtBcztzcjtFaTtFaDt6YztYYztSbDtibztrbztfYTt0ZjtlZjtlbjtZYztUbjtkZztjb25zdHJ1Y3Rvcih0LGksZSl7aWYoc3VwZXIoKSx0aGlzLkFzPVtdLHRoaXMuc3I9bmV3IEdTZXQsdGhpcy5FaT1uZXcgR01hcCx0aGlzLkVoPVwiXCIsdGhpcy56Yz1udWxsLHRoaXMuWGM9bnVsbCx0aGlzLlJsPW51bGwsdGhpcy5ibz1cImZyb21cIix0aGlzLmtvPVwidG9cIix0aGlzLl9hPVwiXCIsdGhpcy50Zj1cIlwiLHRoaXMuZWY9XCJjYXRlZ29yeVwiLHRoaXMuZW49XCJcIix0aGlzLlljPVwiaXNHcm91cFwiLHRoaXMuVG49XCJncm91cFwiLHRoaXMuZGc9ITEsaSE9PXZvaWQgMCYmKHRoaXMubGlua0RhdGFBcnJheT1pKSx0IT09dm9pZCAwJiYoQXJyYXkuaXNBcnJheSh0KT90aGlzLm5vZGVEYXRhQXJyYXk9dDplPXQpLGUpe09iamVjdC5hc3NpZ24odGhpcyxlKTtjb25zdCBzPWUuQ2hhbmdlZDtzJiYoZGVsZXRlIHRoaXMuQ2hhbmdlZCx0aGlzLmFkZENoYW5nZWRMaXN0ZW5lcihzKSl9fWNsb25lUHJvdGVjdGVkKHQpe3N1cGVyLmNsb25lUHJvdGVjdGVkKHQpLHQuRWg9dGhpcy5FaCx0LnpjPXRoaXMuemMsdC5YYz10aGlzLlhjLHQuYm89dGhpcy5ibyx0LmtvPXRoaXMua28sdC5fYT10aGlzLl9hLHQudGY9dGhpcy50Zix0LmVmPXRoaXMuZWYsdC5lbj10aGlzLmVuLHQuWWM9dGhpcy5ZYyx0LlRuPXRoaXMuVG4sdC5kZz10aGlzLmRnfWNsZWFyKCl7dGhpcy5Bcz1bXSx0aGlzLkVpLmNsZWFyKCksdGhpcy5zci5jbGVhcigpLHN1cGVyLmNsZWFyKCl9dG9TdHJpbmcodCl7aWYodD09PXZvaWQgMCYmKHQ9MCksdD49MilyZXR1cm4gdGhpcy50b0pzb24oKTt7bGV0IGk9KHRoaXMubmFtZSE9PVwiXCI/dGhpcy5uYW1lOlwiXCIpK1wiIEdyYXBoTGlua3NNb2RlbFwiO2lmKHQ+MCl7aSs9YFxuIG5vZGUgZGF0YTpgO2xldCBlPXRoaXMubm9kZURhdGFBcnJheSxzPWUubGVuZ3RoLG49MDtmb3Iobj0wO248cztuKyspe2NvbnN0IG89ZVtuXTtpKz1cIiBcIit0aGlzLmdldEtleUZvck5vZGVEYXRhKG8pK1wiOlwiK0JpbmRpbmcudG9TdHJpbmcobyl9Zm9yKGkrPWBcbiBsaW5rIGRhdGE6YCxlPXRoaXMubGlua0RhdGFBcnJheSxzPWUubGVuZ3RoLG49MDtuPHM7bisrKXtjb25zdCBvPWVbbl07aSs9XCIgXCIrdGhpcy5PZShvLCEwKStcIi0tPlwiK3RoaXMuT2UobywhMSl9fXJldHVybiBpfX1ZTih0LGksZSl7aWYodGhpcy5saW5rS2V5UHJvcGVydHk9PT1cIlwiKXtjb25zdCBjPXRoaXMuc2tpcHNVbmRvTWFuYWdlcjt0aGlzLnNraXBzVW5kb01hbmFnZXI9ITAsdGhpcy5saW5rS2V5UHJvcGVydHk9XCJrZXlcIix0aGlzLnNraXBzVW5kb01hbmFnZXI9Y31sZXQgcz1zdXBlci5ZTih0LGksZSk7Y29uc3Qgbj10aGlzLG89bmV3IEdTZXQscj1uZXcgR1NldCxsPW5ldyBHU2V0O3QuY2hhbmdlcy5lYWNoKGM9PntpZihjLm1vZGVsPT09bil7aWYoYy5tb2RlbENoYW5nZT09PVwibGlua0RhdGFBcnJheVwiKWMuY2hhbmdlPT09Mz9vLmFkZChjLm5ld1ZhbHVlKTpjLmNoYW5nZT09PTQmJmwuYWRkKGMub2xkVmFsdWUpO2Vsc2UgaWYobi5jb250YWluc0xpbmtEYXRhKGMub2JqZWN0KSlyLmFkZChjLm9iamVjdCk7ZWxzZSBpZihjLm9iamVjdCE9PW51bGwpaWYoYy5vYmplY3QhPT1udWxsJiZlLmhhcyhjLm9iamVjdCkpZS5nZXQoYy5vYmplY3QpLmVhY2goZD0+e24uY29udGFpbnNMaW5rRGF0YShkKSYmci5hZGQoZCl9KTtlbHNle2lmKGMub2JqZWN0IGluc3RhbmNlb2YgTW9kZWx8fG4uY29udGFpbnNOb2RlRGF0YShjLm9iamVjdCkpcmV0dXJuO24udUQoYy5vYmplY3QpLmVhY2goZD0+ci5hZGQoZCkpfX19KTtjb25zdCBoPW5ldyBHU2V0O28uZWFjaChjPT57aC5hZGQobi5nZXRLZXlGb3JMaW5rRGF0YShjKSksaXx8ci5hZGQoYyl9KTtjb25zdCBmPW5ldyBHU2V0O2wuZWFjaChjPT57Zi5hZGQobi5nZXRLZXlGb3JMaW5rRGF0YShjKSksaSYmci5hZGQoYyl9KTtjb25zdCBhPW4uY2xvbmVEZWVwKHIudG9BcnJheSgpKTtyZXR1cm4gaC5jb3VudD4wJiYocz09PW51bGwmJihzPXt9KSxpP3MucmVtb3ZlZExpbmtLZXlzPWgudG9BcnJheSgpOnMuaW5zZXJ0ZWRMaW5rS2V5cz1oLnRvQXJyYXkoKSksYS5sZW5ndGg+MCYmKHM9PT1udWxsJiYocz17fSkscy5tb2RpZmllZExpbmtEYXRhPWEpLGYuY291bnQ+MCYmKHM9PT1udWxsJiYocz17fSksaT9zLmluc2VydGVkTGlua0tleXM9Zi50b0FycmF5KCk6cy5yZW1vdmVkTGlua0tleXM9Zi50b0FycmF5KCkpLHN9YWcoKXtjb25zdCB0PXN1cGVyLmFnKCk7bGV0IGk9XCJcIjtyZXR1cm4gdGhpcy5saW5rQ2F0ZWdvcnlQcm9wZXJ0eSE9PVwiY2F0ZWdvcnlcIiYmdHlwZW9mIHRoaXMubGlua0NhdGVnb3J5UHJvcGVydHk9PVwic3RyaW5nXCImJihpKz1gLFxuICBcImxpbmtDYXRlZ29yeVByb3BlcnR5XCI6IGArdGhpcy5FZSh0aGlzLmxpbmtDYXRlZ29yeVByb3BlcnR5KSksdGhpcy5saW5rS2V5UHJvcGVydHkhPT1cIlwiJiZ0eXBlb2YgdGhpcy5saW5rS2V5UHJvcGVydHk9PVwic3RyaW5nXCImJihpKz1gLFxuICBcImxpbmtLZXlQcm9wZXJ0eVwiOiBgK3RoaXMuRWUodGhpcy5saW5rS2V5UHJvcGVydHkpKSx0aGlzLmxpbmtGcm9tS2V5UHJvcGVydHkhPT1cImZyb21cIiYmdHlwZW9mIHRoaXMubGlua0Zyb21LZXlQcm9wZXJ0eT09XCJzdHJpbmdcIiYmKGkrPWAsXG4gIFwibGlua0Zyb21LZXlQcm9wZXJ0eVwiOiBgK3RoaXMuRWUodGhpcy5saW5rRnJvbUtleVByb3BlcnR5KSksdGhpcy5saW5rVG9LZXlQcm9wZXJ0eSE9PVwidG9cIiYmdHlwZW9mIHRoaXMubGlua1RvS2V5UHJvcGVydHk9PVwic3RyaW5nXCImJihpKz1gLFxuICBcImxpbmtUb0tleVByb3BlcnR5XCI6IGArdGhpcy5FZSh0aGlzLmxpbmtUb0tleVByb3BlcnR5KSksdGhpcy5saW5rRnJvbVBvcnRJZFByb3BlcnR5IT09XCJcIiYmdHlwZW9mIHRoaXMubGlua0Zyb21Qb3J0SWRQcm9wZXJ0eT09XCJzdHJpbmdcIiYmKGkrPWAsXG4gIFwibGlua0Zyb21Qb3J0SWRQcm9wZXJ0eVwiOiBgK3RoaXMuRWUodGhpcy5saW5rRnJvbVBvcnRJZFByb3BlcnR5KSksdGhpcy5saW5rVG9Qb3J0SWRQcm9wZXJ0eSE9PVwiXCImJnR5cGVvZiB0aGlzLmxpbmtUb1BvcnRJZFByb3BlcnR5PT1cInN0cmluZ1wiJiYoaSs9YCxcbiAgXCJsaW5rVG9Qb3J0SWRQcm9wZXJ0eVwiOiBgK3RoaXMuRWUodGhpcy5saW5rVG9Qb3J0SWRQcm9wZXJ0eSkpLHRoaXMubGlua0xhYmVsS2V5c1Byb3BlcnR5IT09XCJcIiYmdHlwZW9mIHRoaXMubGlua0xhYmVsS2V5c1Byb3BlcnR5PT1cInN0cmluZ1wiJiYoaSs9YCxcbiAgXCJsaW5rTGFiZWxLZXlzUHJvcGVydHlcIjogYCt0aGlzLkVlKHRoaXMubGlua0xhYmVsS2V5c1Byb3BlcnR5KSksdGhpcy5ub2RlSXNHcm91cFByb3BlcnR5IT09XCJpc0dyb3VwXCImJnR5cGVvZiB0aGlzLm5vZGVJc0dyb3VwUHJvcGVydHk9PVwic3RyaW5nXCImJihpKz1gLFxuICBcIm5vZGVJc0dyb3VwUHJvcGVydHlcIjogYCt0aGlzLkVlKHRoaXMubm9kZUlzR3JvdXBQcm9wZXJ0eSkpLHRoaXMubm9kZUdyb3VwS2V5UHJvcGVydHkhPT1cImdyb3VwXCImJnR5cGVvZiB0aGlzLm5vZGVHcm91cEtleVByb3BlcnR5PT1cInN0cmluZ1wiJiYoaSs9YCxcbiAgXCJub2RlR3JvdXBLZXlQcm9wZXJ0eVwiOiBgK3RoaXMuRWUodGhpcy5ub2RlR3JvdXBLZXlQcm9wZXJ0eSkpLHQraX1FeSh0KXtzdXBlci5FeSh0KSx0LmxpbmtLZXlQcm9wZXJ0eSYmKHRoaXMubGlua0tleVByb3BlcnR5PXQubGlua0tleVByb3BlcnR5KSx0LmxpbmtGcm9tS2V5UHJvcGVydHkmJih0aGlzLmxpbmtGcm9tS2V5UHJvcGVydHk9dC5saW5rRnJvbUtleVByb3BlcnR5KSx0LmxpbmtUb0tleVByb3BlcnR5JiYodGhpcy5saW5rVG9LZXlQcm9wZXJ0eT10LmxpbmtUb0tleVByb3BlcnR5KSx0LmxpbmtGcm9tUG9ydElkUHJvcGVydHkmJih0aGlzLmxpbmtGcm9tUG9ydElkUHJvcGVydHk9dC5saW5rRnJvbVBvcnRJZFByb3BlcnR5KSx0LmxpbmtUb1BvcnRJZFByb3BlcnR5JiYodGhpcy5saW5rVG9Qb3J0SWRQcm9wZXJ0eT10LmxpbmtUb1BvcnRJZFByb3BlcnR5KSx0LmxpbmtDYXRlZ29yeVByb3BlcnR5JiYodGhpcy5saW5rQ2F0ZWdvcnlQcm9wZXJ0eT10LmxpbmtDYXRlZ29yeVByb3BlcnR5KSx0LmxpbmtMYWJlbEtleXNQcm9wZXJ0eSYmKHRoaXMubGlua0xhYmVsS2V5c1Byb3BlcnR5PXQubGlua0xhYmVsS2V5c1Byb3BlcnR5KSx0Lm5vZGVJc0dyb3VwUHJvcGVydHkmJih0aGlzLm5vZGVJc0dyb3VwUHJvcGVydHk9dC5ub2RlSXNHcm91cFByb3BlcnR5KSx0Lm5vZGVHcm91cEtleVByb3BlcnR5JiYodGhpcy5ub2RlR3JvdXBLZXlQcm9wZXJ0eT10Lm5vZGVHcm91cEtleVByb3BlcnR5KX1VTigpe2NvbnN0IHQ9c3VwZXIuVU4oKSxpPWAsXG4gIFwibGlua0RhdGFBcnJheVwiOiBgK3RoaXMuT2godGhpcy5saW5rRGF0YUFycmF5LCEwKTtyZXR1cm4gdCtpfUdOKHQpe3N1cGVyLkdOKHQpO2NvbnN0IGk9dC5saW5rRGF0YUFycmF5O0FycmF5LmlzQXJyYXkoaSkmJih0aGlzLnJlcGxhY2VKc29uT2JqZWN0cyhpKSx0aGlzLmxpbmtEYXRhQXJyYXk9aSl9ZEQ9YCxcbiAgXCJpbnNlcnRlZExpbmtLZXlzXCI6IGA7czM9YCxcbiAgXCJtb2RpZmllZExpbmtEYXRhXCI6IGA7Z0Q9YCxcbiAgXCJyZW1vdmVkTGlua0tleXNcIjogYDt1RCh0KXtjb25zdCBpPW5ldyBHU2V0O2ZvcihsZXQgZT0wO2U8dGhpcy5saW5rRGF0YUFycmF5Lmxlbmd0aDtlKyspe2NvbnN0IHM9dGhpcy5saW5rRGF0YUFycmF5W2VdO3RoaXMuSmIodCxzLHMsaSl9cmV0dXJuIGl9cU4odCxpLGUpe2lmKHRoaXMubGlua0tleVByb3BlcnR5PT09XCJcIil7Y29uc3QgYz10aGlzLnNraXBzVW5kb01hbmFnZXI7dGhpcy5za2lwc1VuZG9NYW5hZ2VyPSEwLHRoaXMubGlua0tleVByb3BlcnR5PVwia2V5XCIsdGhpcy5za2lwc1VuZG9NYW5hZ2VyPWN9Y29uc3Qgcz1zdXBlci5xTih0LGksZSksbj10aGlzLG89bmV3IEdTZXQscj1uZXcgR1NldCxsPW5ldyBHU2V0O3QuY2hhbmdlcy5lYWNoKGM9PntpZihjLm1vZGVsPT09bil7aWYoYy5tb2RlbENoYW5nZT09PVwibGlua0RhdGFBcnJheVwiKWMuY2hhbmdlPT09Mz9vLmFkZChjLm5ld1ZhbHVlKTpjLmNoYW5nZT09PTQmJmwuYWRkKGMub2xkVmFsdWUpO2Vsc2UgaWYobi5jb250YWluc0xpbmtEYXRhKGMub2JqZWN0KSlyLmFkZChjLm9iamVjdCk7ZWxzZSBpZihjLm9iamVjdCE9PW51bGwpaWYoYy5vYmplY3QhPT1udWxsJiZlLmhhcyhjLm9iamVjdCkpZS5nZXQoYy5vYmplY3QpLmVhY2goZD0+e24uY29udGFpbnNMaW5rRGF0YShkKSYmci5hZGQoZCl9KTtlbHNle2lmKGMub2JqZWN0IGluc3RhbmNlb2YgTW9kZWx8fG4uY29udGFpbnNOb2RlRGF0YShjLm9iamVjdCkpcmV0dXJuO24udUQoYy5vYmplY3QpLmVhY2goZD0+ci5hZGQoZCkpfX19KTtjb25zdCBoPW5ldyBHU2V0O28uZWFjaChjPT57aC5hZGQobi5nZXRLZXlGb3JMaW5rRGF0YShjKSksaXx8ci5hZGQoYyl9KTtjb25zdCBmPW5ldyBHU2V0O2wuZWFjaChjPT57Zi5hZGQobi5nZXRLZXlGb3JMaW5rRGF0YShjKSksaSYmci5hZGQoYyl9KTtsZXQgYT1zO3JldHVybiBoLmNvdW50PjAmJihhKz0oaT90aGlzLmdEOnRoaXMuZEQpK3RoaXMuT2goaC50b0FycmF5KCksITApKSxyLmNvdW50PjAmJihhKz10aGlzLnMzK3RoaXMuT2goci50b0FycmF5KCksITApKSxmLmNvdW50PjAmJihhKz0oaT90aGlzLmREOnRoaXMuZ0QpK3RoaXMuT2goZi50b0FycmF5KCksITApKSxhfUJ5KHQpeyh0LmxpbmtDYXRlZ29yeVByb3BlcnR5IT09dm9pZCAwJiZ0LmxpbmtDYXRlZ29yeVByb3BlcnR5IT09dGhpcy5saW5rQ2F0ZWdvcnlQcm9wZXJ0eXx8dC5saW5rS2V5UHJvcGVydHkhPT12b2lkIDAmJnQubGlua0tleVByb3BlcnR5IT09dGhpcy5saW5rS2V5UHJvcGVydHl8fHQubGlua0Zyb21LZXlQcm9wZXJ0eSE9PXZvaWQgMCYmdC5saW5rRnJvbUtleVByb3BlcnR5IT09dGhpcy5saW5rRnJvbUtleVByb3BlcnR5fHx0LmxpbmtUb0tleVByb3BlcnR5IT09dm9pZCAwJiZ0LmxpbmtUb0tleVByb3BlcnR5IT09dGhpcy5saW5rVG9LZXlQcm9wZXJ0eXx8dC5saW5rRnJvbVBvcnRJZFByb3BlcnR5IT09dm9pZCAwJiZ0LmxpbmtGcm9tUG9ydElkUHJvcGVydHkhPT10aGlzLmxpbmtGcm9tUG9ydElkUHJvcGVydHl8fHQubGlua1RvUG9ydElkUHJvcGVydHkhPT12b2lkIDAmJnQubGlua1RvUG9ydElkUHJvcGVydHkhPT10aGlzLmxpbmtUb1BvcnRJZFByb3BlcnR5fHx0LmxpbmtMYWJlbEtleXNQcm9wZXJ0eSE9PXZvaWQgMCYmdC5saW5rTGFiZWxLZXlzUHJvcGVydHkhPT10aGlzLmxpbmtMYWJlbEtleXNQcm9wZXJ0eXx8dC5ub2RlSXNHcm91cFByb3BlcnR5IT09dm9pZCAwJiZ0Lm5vZGVJc0dyb3VwUHJvcGVydHkhPT10aGlzLm5vZGVJc0dyb3VwUHJvcGVydHl8fHQubm9kZUdyb3VwS2V5UHJvcGVydHkhPT12b2lkIDAmJnQubm9kZUdyb3VwS2V5UHJvcGVydHkhPT10aGlzLm5vZGVHcm91cEtleVByb3BlcnR5KSYmVS5uKFwiYXBwbHlJbmNyZW1lbnRhbEpzb24gY2Fubm90IGNoYW5nZSBNb2RlbCBwcm9wZXJ0aWVzXCIpLHN1cGVyLkJ5KHQpO2NvbnN0IGk9dC5pbnNlcnRlZExpbmtLZXlzO2lmKEFycmF5LmlzQXJyYXkoaSkpe2NvbnN0IG49aS5sZW5ndGg7Zm9yKGxldCBvPTA7bzxuO28rKyl7Y29uc3Qgcj1pW29dO2xldCBsPXRoaXMuZmluZExpbmtEYXRhRm9yS2V5KHIpO2w9PT1udWxsJiYobD10aGlzLmNvcHlMaW5rRGF0YSh7fSksdGhpcy5zZXRLZXlGb3JMaW5rRGF0YShsLHIpLHRoaXMuYWRkTGlua0RhdGEobCkpfX1jb25zdCBlPXQubW9kaWZpZWRMaW5rRGF0YTtpZihBcnJheS5pc0FycmF5KGUpKXtjb25zdCBuPWUubGVuZ3RoO2ZvcihsZXQgbz0wO288bjtvKyspe2NvbnN0IHI9ZVtvXSxsPXRoaXMuZ2V0S2V5Rm9yTGlua0RhdGEociksaD10aGlzLmZpbmRMaW5rRGF0YUZvcktleShsKTtpZihoIT09bnVsbCl7Zm9yKGNvbnN0IGYgaW4gcilmPT09XCJfX2dvaGFzaGlkXCJ8fGY9PT10aGlzLmxpbmtLZXlQcm9wZXJ0eXx8dGhpcy5zZXREYXRhUHJvcGVydHkoaCxmLHJbZl0pO3RoaXMubUQocixoKX19fWNvbnN0IHM9dC5yZW1vdmVkTGlua0tleXM7aWYoQXJyYXkuaXNBcnJheShzKSl7Y29uc3Qgbj1zLmxlbmd0aDtmb3IobGV0IG89MDtvPG47bysrKXtjb25zdCByPXNbb10sbD10aGlzLmZpbmRMaW5rRGF0YUZvcktleShyKTtsIT09bnVsbCYmdGhpcy5yZW1vdmVMaW5rRGF0YShsKX19fWNoYW5nZVN0YXRlKHQsaSl7aWYoISh0PT09bnVsbHx8dC5tb2RlbCE9PXRoaXMpKXtpZih0LmNoYW5nZT09PTIpe2NvbnN0IGU9dC5vYmplY3Qscz10LnByb3BlcnR5TmFtZTtpZihzPT09dGhpcy5saW5rS2V5UHJvcGVydHkmJnRoaXMuY29udGFpbnNMaW5rRGF0YShlKSl7Y29uc3Qgbj10LmdldFZhbHVlKGkpLG89dC5nZXRWYWx1ZSghaSk7byE9PXZvaWQgMCYmdGhpcy5FaS5kZWxldGUobyksbiE9PXZvaWQgMCYmdGhpcy5FaS5zZXQobixlKSx0aGlzLmV0KGUscyxuKTtyZXR1cm59fWVsc2UgaWYodC5jaGFuZ2U9PT0zKXtsZXQgZT10Lm5ld1BhcmFtO2lmKHQubW9kZWxDaGFuZ2U9PT1cImxpbmtEYXRhQXJyYXlcIil7Y29uc3Qgcz10Lm5ld1ZhbHVlO2lmKFUuVyhzKSYmdHlwZW9mIGU9PVwibnVtYmVyXCIpe2NvbnN0IG49dGhpcy5nZXRLZXlGb3JMaW5rRGF0YShzKTtpPyh0aGlzLnNyLmRlbGV0ZShzKSx0aGlzLkFzW2VdPT09cyYmdGhpcy54byh0aGlzLmxpbmtEYXRhQXJyYXksZSksbiE9PXZvaWQgMCYmdGhpcy5FaS5kZWxldGUobikpOih0aGlzLnNyLmFkZChzKSx0aGlzLkFzW2VdIT09cyYmdGhpcy5lcih0aGlzLkFzLGUscyksbiE9PXZvaWQgMCYmdGhpcy5FaS5zZXQobixzKSl9cmV0dXJufWVsc2UgaWYodC5tb2RlbENoYW5nZT09PVwibGlua0xhYmVsS2V5c1wiKXtjb25zdCBzPXQub2JqZWN0LG49dGhpcy5nZXRMYWJlbEtleXNGb3JMaW5rRGF0YShzKTtBcnJheS5pc0FycmF5KG4pJiZ0eXBlb2YgZT09XCJudW1iZXJcIiYmKGk/KGU9bi5pbmRleE9mKHQubmV3VmFsdWUpLGU+PTAmJnRoaXMueG8obixlKSk6bi5pbmRleE9mKHQubmV3VmFsdWUpPDAmJnRoaXMuZXIobixlLHQubmV3VmFsdWUpKTtyZXR1cm59fWVsc2UgaWYodC5jaGFuZ2U9PT00KXtsZXQgZT10Lm9sZFBhcmFtO2lmKHQubW9kZWxDaGFuZ2U9PT1cImxpbmtEYXRhQXJyYXlcIil7Y29uc3Qgcz10Lm9sZFZhbHVlO2lmKFUuVyhzKSYmdHlwZW9mIGU9PVwibnVtYmVyXCIpe2NvbnN0IG49dGhpcy5nZXRLZXlGb3JMaW5rRGF0YShzKTtpPyh0aGlzLnNyLmFkZChzKSx0aGlzLkFzW2VdIT09cyYmdGhpcy5lcih0aGlzLkFzLGUscyksbiE9PXZvaWQgMCYmdGhpcy5FaS5zZXQobixzKSk6KHRoaXMuc3IuZGVsZXRlKHMpLHRoaXMuQXNbZV09PT1zJiZ0aGlzLnhvKHRoaXMubGlua0RhdGFBcnJheSxlKSxuIT09dm9pZCAwJiZ0aGlzLkVpLmRlbGV0ZShuKSl9cmV0dXJufWVsc2UgaWYodC5tb2RlbENoYW5nZT09PVwibGlua0xhYmVsS2V5c1wiKXtjb25zdCBzPXQub2JqZWN0LG49dGhpcy5nZXRMYWJlbEtleXNGb3JMaW5rRGF0YShzKTtBcnJheS5pc0FycmF5KG4pJiZ0eXBlb2YgZT09XCJudW1iZXJcIiYmKGk/bi5pbmRleE9mKHQub2xkVmFsdWUpPDAmJnRoaXMuZXIobixlLHQub2xkVmFsdWUpOihlPW4uaW5kZXhPZih0Lm9sZFZhbHVlKSxlPj0wJiZ0aGlzLnhvKG4sZSkpKTtyZXR1cm59fXN1cGVyLmNoYW5nZVN0YXRlKHQsaSl9fWdldCBhcmNoZXR5cGVOb2RlRGF0YSgpe3JldHVybiB0aGlzLlJsfXNldCBhcmNoZXR5cGVOb2RlRGF0YSh0KXtjb25zdCBpPXRoaXMuUmw7aSE9PXQmJih0IT09bnVsbCYmVS5Nbyh0LEdyYXBoTGlua3NNb2RlbCxcImFyY2hldHlwZU5vZGVEYXRhXCIpLHRoaXMuUmw9dCx0aGlzLnQoXCJhcmNoZXR5cGVOb2RlRGF0YVwiLGksdCkpfUpOKHQpe2lmKHQ9PT12b2lkIDApcmV0dXJuO2NvbnN0IGk9dGhpcy5SbDtpZihpIT09bnVsbCl7bGV0IGU9dGhpcy5maW5kTm9kZURhdGFGb3JLZXkodCk7ZT09PW51bGwmJihlPXRoaXMuY29weU5vZGVEYXRhKGkpLHRoaXMuZXQoZSx0aGlzLm5vZGVLZXlQcm9wZXJ0eSx0KSx0aGlzLmFkZE5vZGVEYXRhKGUpKX1yZXR1cm4gdH1nZXQgbGlua0Zyb21LZXlQcm9wZXJ0eSgpe3JldHVybiB0aGlzLmJvfXNldCBsaW5rRnJvbUtleVByb3BlcnR5KHQpe2NvbnN0IGk9dGhpcy5ibztpIT09dCYmKHRoaXMuTG4odCxHcmFwaExpbmtzTW9kZWwsXCJsaW5rRnJvbUtleVByb3BlcnR5XCIpLHRoaXMuYm89dCx0aGlzLnQoXCJsaW5rRnJvbUtleVByb3BlcnR5XCIsaSx0KSl9Z2V0RnJvbUtleUZvckxpbmtEYXRhKHQpe3JldHVybiB0aGlzLk9lKHQsITApfXNldEZyb21LZXlGb3JMaW5rRGF0YSh0LGkpe3RoaXMuaWcodCxpLCEwKX1nZXQgbGlua1RvS2V5UHJvcGVydHkoKXtyZXR1cm4gdGhpcy5rb31zZXQgbGlua1RvS2V5UHJvcGVydHkodCl7Y29uc3QgaT10aGlzLmtvO2khPT10JiYodGhpcy5Mbih0LEdyYXBoTGlua3NNb2RlbCxcImxpbmtUb0tleVByb3BlcnR5XCIpLHRoaXMua289dCx0aGlzLnQoXCJsaW5rVG9LZXlQcm9wZXJ0eVwiLGksdCkpfWdldFRvS2V5Rm9yTGlua0RhdGEodCl7cmV0dXJuIHRoaXMuT2UodCwhMSl9c2V0VG9LZXlGb3JMaW5rRGF0YSh0LGkpe3RoaXMuaWcodCxpLCExKX1PZSh0LGkpe2lmKHQ9PT1udWxsKXJldHVybjtjb25zdCBlPWk/dGhpcy5ibzp0aGlzLmtvO2lmKGU9PT1cIlwiKXJldHVybjtjb25zdCBzPXRoaXMuU3QodCxlKTtpZihzIT09dm9pZCAwKXtpZih0aGlzLmlzS2V5VHlwZShzKSlyZXR1cm4gcztVLm4oKGk/XCJGcm9tS2V5XCI6XCJUb0tleVwiKStcIiB2YWx1ZSBmb3IgbGluayBkYXRhIFwiK3QrXCIgaXMgbm90IGEgbnVtYmVyIG9yIGEgc3RyaW5nOiBcIitzKX19aWcodCxpLGUpe2lmKGk9PT1udWxsJiYoaT12b2lkIDApLGkhPT12b2lkIDAmJiF0aGlzLmlzS2V5VHlwZShpKSYmVS5QaShpLFwibnVtYmVyIG9yIHN0cmluZ1wiLEdyYXBoTGlua3NNb2RlbCxlP1wic2V0RnJvbUtleUZvckxpbmtEYXRhOmtleVwiOlwic2V0VG9LZXlGb3JMaW5rRGF0YTprZXlcIiksdD09PW51bGwpcmV0dXJuO2NvbnN0IHM9ZT90aGlzLmJvOnRoaXMua287aWYocz09PVwiXCIpcmV0dXJuO2lmKGk9dGhpcy5KTihpKSwhdGhpcy5jb250YWluc0xpbmtEYXRhKHQpKXt0aGlzLmV0KHQscyxpKTtyZXR1cm59Y29uc3Qgbj10aGlzLlN0KHQscyk7biE9PWkmJih0aGlzLl9zKG4sdCksdGhpcy5ldCh0LHMsaSksdGhpcy5maW5kTm9kZURhdGFGb3JLZXkoaSk9PT1udWxsJiZ0aGlzLnRuKGksdCksdGhpcy56dChlP1wibGlua0Zyb21LZXlcIjpcImxpbmtUb0tleVwiLDIscyx0LG4saSksdHlwZW9mIHM9PVwic3RyaW5nXCImJnRoaXMudXBkYXRlVGFyZ2V0QmluZGluZ3ModCxzKSl9Z2V0IGxpbmtGcm9tUG9ydElkUHJvcGVydHkoKXtyZXR1cm4gdGhpcy5fYX1zZXQgbGlua0Zyb21Qb3J0SWRQcm9wZXJ0eSh0KXtjb25zdCBpPXRoaXMuX2E7aSE9PXQmJih0aGlzLkxuKHQsR3JhcGhMaW5rc01vZGVsLFwibGlua0Zyb21Qb3J0SWRQcm9wZXJ0eVwiKSxEZWJ1ZyYmKHQ9PT10aGlzLmxpbmtGcm9tS2V5UHJvcGVydHl8fHQ9PT10aGlzLmxpbmtUb0tleVByb3BlcnR5KSYmVS5uKFwibGlua0Zyb21Qb3J0SWRQcm9wZXJ0eSBuYW1lIG11c3Qgbm90IGJlIHRoZSBzYW1lIGFzIHRoZSBHcmFwaExpbmtzTW9kZWwubGlua0Zyb21LZXlQcm9wZXJ0eSBvciBsaW5rVG9LZXlQcm9wZXJ0eTogXCIrdCksdGhpcy5fYT10LHRoaXMudChcImxpbmtGcm9tUG9ydElkUHJvcGVydHlcIixpLHQpKX1nZXRGcm9tUG9ydElkRm9yTGlua0RhdGEodCl7cmV0dXJuIHRoaXMuSGIodCwhMCl9c2V0RnJvbVBvcnRJZEZvckxpbmtEYXRhKHQsaSl7dGhpcy5lZyh0LGksITApfWdldCBsaW5rVG9Qb3J0SWRQcm9wZXJ0eSgpe3JldHVybiB0aGlzLnRmfXNldCBsaW5rVG9Qb3J0SWRQcm9wZXJ0eSh0KXtjb25zdCBpPXRoaXMudGY7aSE9PXQmJih0aGlzLkxuKHQsR3JhcGhMaW5rc01vZGVsLFwibGlua1RvUG9ydElkUHJvcGVydHlcIiksRGVidWcmJih0PT09dGhpcy5saW5rRnJvbUtleVByb3BlcnR5fHx0PT09dGhpcy5saW5rVG9LZXlQcm9wZXJ0eSkmJlUubihcImxpbmtGcm9tUG9ydElkUHJvcGVydHkgbmFtZSBtdXN0IG5vdCBiZSB0aGUgc2FtZSBhcyB0aGUgR3JhcGhMaW5rc01vZGVsLmxpbmtGcm9tS2V5UHJvcGVydHkgb3IgbGlua1RvS2V5UHJvcGVydHk6IFwiK3QpLHRoaXMudGY9dCx0aGlzLnQoXCJsaW5rVG9Qb3J0SWRQcm9wZXJ0eVwiLGksdCkpfWdldFRvUG9ydElkRm9yTGlua0RhdGEodCl7cmV0dXJuIHRoaXMuSGIodCwhMSl9c2V0VG9Qb3J0SWRGb3JMaW5rRGF0YSh0LGkpe3RoaXMuZWcodCxpLCExKX1IYih0LGkpe2lmKHQ9PT1udWxsKXJldHVyblwiXCI7Y29uc3QgZT1pP3RoaXMuX2E6dGhpcy50ZjtpZihlPT09XCJcIilyZXR1cm5cIlwiO2NvbnN0IHM9dGhpcy5TdCh0LGUpO3JldHVybiBzPT09dm9pZCAwP1wiXCI6c31lZyh0LGksZSl7aWYoVS5pKGksXCJzdHJpbmdcIixHcmFwaExpbmtzTW9kZWwsZT9cInNldEZyb21Qb3J0SWRGb3JMaW5rRGF0YTpwb3J0bmFtZVwiOlwic2V0VG9Qb3J0SWRGb3JMaW5rRGF0YTpwb3J0bmFtZVwiKSx0PT09bnVsbClyZXR1cm47Y29uc3Qgcz1lP3RoaXMuX2E6dGhpcy50ZjtpZihzPT09XCJcIilyZXR1cm47aWYoIXRoaXMuY29udGFpbnNMaW5rRGF0YSh0KSl7dGhpcy5ldCh0LHMsaSk7cmV0dXJufWxldCBuPXRoaXMuU3QodCxzKTtuPT09dm9pZCAwJiYobj1cIlwiKSxuIT09aSYmKHRoaXMuZXQodCxzLGkpLHRoaXMuenQoZT9cImxpbmtGcm9tUG9ydElkXCI6XCJsaW5rVG9Qb3J0SWRcIiwyLHMsdCxuLGkpLHR5cGVvZiBzPT1cInN0cmluZ1wiJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQscykpfWdldCBsaW5rTGFiZWxLZXlzUHJvcGVydHkoKXtyZXR1cm4gdGhpcy5lbn1zZXQgbGlua0xhYmVsS2V5c1Byb3BlcnR5KHQpe2NvbnN0IGk9dGhpcy5lbjtpIT09dCYmKHRoaXMuTG4odCxHcmFwaExpbmtzTW9kZWwsXCJsaW5rTGFiZWxLZXlzUHJvcGVydHlcIiksdGhpcy5lbj10LHRoaXMudChcImxpbmtMYWJlbEtleXNQcm9wZXJ0eVwiLGksdCkpfWdldExhYmVsS2V5c0ZvckxpbmtEYXRhKHQpe2lmKHQ9PT1udWxsKXJldHVybiBHcmFwaExpbmtzTW9kZWwuRW1wdHlBcnJheTtjb25zdCBpPXRoaXMuZW47aWYoaT09PVwiXCIpcmV0dXJuIEdyYXBoTGlua3NNb2RlbC5FbXB0eUFycmF5O2NvbnN0IGU9dGhpcy5TdCh0LGkpO3JldHVybiBlPT09dm9pZCAwP0dyYXBoTGlua3NNb2RlbC5FbXB0eUFycmF5OmV9c2V0TGFiZWxLZXlzRm9yTGlua0RhdGEodCxpKXtpZih0aGlzLnp5KGksR3JhcGhMaW5rc01vZGVsLFwic2V0TGFiZWxLZXlzRm9yTGlua0RhdGE6YXJyXCIpLHQ9PT1udWxsKXJldHVybjtjb25zdCBlPXRoaXMuZW47aWYoZT09PVwiXCIpcmV0dXJuO2lmKCF0aGlzLmNvbnRhaW5zTGlua0RhdGEodCkpe3RoaXMuZXQodCxlLGkpO3JldHVybn1sZXQgcz10aGlzLlN0KHQsZSk7aWYocz09PXZvaWQgMCYmKHM9R3JhcGhMaW5rc01vZGVsLkVtcHR5QXJyYXkpLHMhPT1pKXtpZihBcnJheS5pc0FycmF5KHMpKXtjb25zdCBvPXMubGVuZ3RoO2ZvcihsZXQgcj0wO3I8bztyKyspe2NvbnN0IGw9c1tyXTt0aGlzLl9zKGwsdCl9fXRoaXMuZXQodCxlLGkpO2NvbnN0IG49aS5sZW5ndGg7Zm9yKGxldCBvPTA7bzxuO28rKyl7Y29uc3Qgcj1pW29dO3RoaXMuZmluZE5vZGVEYXRhRm9yS2V5KHIpPT09bnVsbCYmdGhpcy50bihyLHQpfXRoaXMuenQoXCJsaW5rTGFiZWxLZXlzXCIsMixlLHQscyxpKSx0eXBlb2YgZT09XCJzdHJpbmdcIiYmdGhpcy51cGRhdGVUYXJnZXRCaW5kaW5ncyh0LGUpfX1hZGRMYWJlbEtleUZvckxpbmtEYXRhKHQsaSl7aWYoaT09bnVsbHx8KHRoaXMuaXNLZXlUeXBlKGkpfHxVLlBpKGksXCJudW1iZXIgb3Igc3RyaW5nXCIsR3JhcGhMaW5rc01vZGVsLFwiYWRkTGFiZWxLZXlGb3JMaW5rRGF0YTprZXlcIiksdD09PW51bGwpKXJldHVybjtjb25zdCBlPXRoaXMuZW47aWYoZT09PVwiXCIpcmV0dXJuO2NvbnN0IHM9dGhpcy5TdCh0LGUpO2lmKHM9PT12b2lkIDApe2NvbnN0IG49W107bi5wdXNoKGkpLHRoaXMuc2V0TGFiZWxLZXlzRm9yTGlua0RhdGEodCxuKX1lbHNlIGlmKEFycmF5LmlzQXJyYXkocykpe2xldCBuPXMuaW5kZXhPZihpKTtpZihuPj0wKXJldHVybjtuPXMubGVuZ3RoLHMucHVzaChpKSx0aGlzLmNvbnRhaW5zTGlua0RhdGEodCkmJih0aGlzLmZpbmROb2RlRGF0YUZvcktleShpKT09PW51bGwmJnRoaXMudG4oaSx0KSx0aGlzLnp0KFwibGlua0xhYmVsS2V5c1wiLDMsZSx0LG51bGwsaSxudWxsLG4pKX1lbHNlIFUubihlK1wiIHByb3BlcnR5IGlzIG5vdCBhbiBBcnJheTsgY2Fubm90IGFkZExhYmVsS2V5Rm9yTGlua0RhdGE6IFwiK3QpfXJlbW92ZUxhYmVsS2V5Rm9yTGlua0RhdGEodCxpKXtpZihpPT1udWxsfHwodGhpcy5pc0tleVR5cGUoaSl8fFUuUGkoaSxcIm51bWJlciBvciBzdHJpbmdcIixHcmFwaExpbmtzTW9kZWwsXCJyZW1vdmVMYWJlbEtleUZvckxpbmtEYXRhOmtleVwiKSx0PT09bnVsbCkpcmV0dXJuO2NvbnN0IGU9dGhpcy5lbjtpZihlPT09XCJcIilyZXR1cm47Y29uc3Qgcz10aGlzLlN0KHQsZSk7aWYoQXJyYXkuaXNBcnJheShzKSl7Y29uc3Qgbj1zLmluZGV4T2YoaSk7aWYobjwwKXJldHVybjt0aGlzLnhvKHMsbiksdGhpcy5jb250YWluc0xpbmtEYXRhKHQpJiYodGhpcy5fcyhpLHQpLHRoaXMuenQoXCJsaW5rTGFiZWxLZXlzXCIsNCxlLHQsaSxudWxsLG4sbnVsbCkpfWVsc2UgcyE9PXZvaWQgMCYmVS5uKGUrXCIgcHJvcGVydHkgaXMgbm90IGFuIEFycmF5OyBjYW5ub3QgcmVtb3ZlTGFiZWxLZXlmb3JMaW5rRGF0YTogXCIrdCl9Z2V0IGxpbmtEYXRhQXJyYXkoKXtyZXR1cm4gdGhpcy5Bc31zZXQgbGlua0RhdGFBcnJheSh0KXtjb25zdCBpPXRoaXMuQXM7aWYoaSE9PXQpe3RoaXMuenkodCxHcmFwaExpbmtzTW9kZWwsXCJsaW5rRGF0YUFycmF5XCIpLHRoaXMuRWkuY2xlYXIoKTtjb25zdCBlPXQubGVuZ3RoO2ZvcihsZXQgbj0wO248ZTtuKyspe2NvbnN0IG89dFtuXTtVLlcobyl8fFUubihcIkdyYXBoTGlua3NNb2RlbC5saW5rRGF0YUFycmF5IG11c3Qgb25seSBjb250YWluIE9iamVjdHMsIG5vdDogXCIrbyl9aWYodGhpcy5Bcz10LHRoaXMubGlua0tleVByb3BlcnR5IT09XCJcIil7Y29uc3Qgbj1uZXcgTGlzdDtmb3IobGV0IHI9MDtyPGU7cisrKXtjb25zdCBsPXRbcl0saD10aGlzLmdldEtleUZvckxpbmtEYXRhKGwpO2g9PT12b2lkIDB8fHRoaXMuRWkuZ2V0KGgpIT09bnVsbD9uLmFkZChsKTp0aGlzLkVpLnNldChoLGwpfWNvbnN0IG89bi5pdGVyYXRvcjtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlO3RoaXMubWFrZUxpbmtEYXRhS2V5VW5pcXVlKHIpO2NvbnN0IGw9dGhpcy5nZXRLZXlGb3JMaW5rRGF0YShyKTtsIT09dm9pZCAwJiZ0aGlzLkVpLnNldChsLHIpfX1jb25zdCBzPW5ldyBHU2V0O2ZvcihsZXQgbj0wO248ZTtuKyspe2NvbnN0IG89dFtuXTtzLmFkZChvKX10aGlzLnNyPXMsdGhpcy56dChcImxpbmtEYXRhQXJyYXlcIiwyLFwibGlua0RhdGFBcnJheVwiLHRoaXMsaSx0KTtmb3IobGV0IG49MDtuPGU7bisrKXtjb25zdCBvPXRbbl07dGhpcy4kTihvKX19fWdldCBsaW5rS2V5UHJvcGVydHkoKXtyZXR1cm4gdGhpcy5FaH1zZXQgbGlua0tleVByb3BlcnR5KHQpe2NvbnN0IGk9dGhpcy5FaDtpZihpIT09dCl7dGhpcy5Mbih0LEdyYXBoTGlua3NNb2RlbCxcImxpbmtLZXlQcm9wZXJ0eVwiKSx0aGlzLkVoPXQsdGhpcy5FaS5jbGVhcigpO2NvbnN0IGU9dGhpcy5saW5rRGF0YUFycmF5Lmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPXRoaXMubGlua0RhdGFBcnJheVtzXTtsZXQgbz10aGlzLmdldEtleUZvckxpbmtEYXRhKG4pO289PT12b2lkIDAmJih0aGlzLm1ha2VMaW5rRGF0YUtleVVuaXF1ZShuKSxvPXRoaXMuZ2V0S2V5Rm9yTGlua0RhdGEobikpLG8hPT12b2lkIDAmJnRoaXMuRWkuc2V0KG8sbil9dGhpcy50KFwibGlua0tleVByb3BlcnR5XCIsaSx0KX19Z2V0S2V5Rm9yTGlua0RhdGEodCl7aWYodD09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5FaDtpZihpPT09XCJcIilyZXR1cm47Y29uc3QgZT10aGlzLlN0KHQsaSk7aWYoZSE9PXZvaWQgMCl7aWYodGhpcy5pc0tleVR5cGUoZSkpcmV0dXJuIGU7VS5uKFwiS2V5IHZhbHVlIGZvciBsaW5rIGRhdGEgXCIrdCtcIiBpcyBub3QgYSBudW1iZXIgb3IgYSBzdHJpbmc6IFwiK2UpfX1zZXRLZXlGb3JMaW5rRGF0YSh0LGkpe2lmKChpPT1udWxsfHwhdGhpcy5pc0tleVR5cGUoaSkpJiZVLlBpKGksXCJudW1iZXIgb3Igc3RyaW5nXCIsR3JhcGhMaW5rc01vZGVsLFwic2V0S2V5Rm9yTGlua0RhdGE6a2V5XCIpLHQ9PT1udWxsKXJldHVybjtjb25zdCBlPXRoaXMuRWg7aWYoZT09PVwiXCIpcmV0dXJuO2lmKCF0aGlzLmNvbnRhaW5zTGlua0RhdGEodCkpe3RoaXMuZXQodCxlLGkpO3JldHVybn1jb25zdCBzPXRoaXMuU3QodCxlKTtpZihzIT09aSl7aWYodGhpcy5maW5kTGlua0RhdGFGb3JLZXkoaSkhPT1udWxsKXJldHVybjt0aGlzLmV0KHQsZSxpKSxzIT09dm9pZCAwJiZ0aGlzLkVpLmRlbGV0ZShzKSx0aGlzLkVpLnNldChpLHQpLHRoaXMuenQoXCJsaW5rS2V5XCIsMixlLHQscyxpKSx0eXBlb2YgZT09XCJzdHJpbmdcIiYmdGhpcy51cGRhdGVUYXJnZXRCaW5kaW5ncyh0LGUpfX1nZXQgbWFrZVVuaXF1ZUxpbmtLZXlGdW5jdGlvbigpe3JldHVybiB0aGlzLnpjfXNldCBtYWtlVW5pcXVlTGlua0tleUZ1bmN0aW9uKHQpe2NvbnN0IGk9dGhpcy56YztpIT09dCYmKHQhPT1udWxsJiZVLlAodCxHcmFwaExpbmtzTW9kZWwsXCJtYWtlVW5pcXVlTGlua0tleUZ1bmN0aW9uXCIpLHRoaXMuemM9dCx0aGlzLnQoXCJtYWtlVW5pcXVlTGlua0tleUZ1bmN0aW9uXCIsaSx0KSl9ZmluZExpbmtEYXRhRm9yS2V5KHQpe3JldHVybiB0PT09bnVsbCYmVS5uKFwiR3JhcGhMaW5rc01vZGVsLmZpbmRMaW5rRGF0YUZvcktleTprZXkgbXVzdCBub3QgYmUgbnVsbFwiKSx0PT09dm9pZCAwfHwhdGhpcy5pc0tleVR5cGUodCk/bnVsbDp0aGlzLkVpLmdldCh0KX1RYih0KXtyZXR1cm4gdD09PXZvaWQgMD8hMTp0aGlzLkVpLmhhcyh0KX1tYWtlTGlua0RhdGFLZXlVbmlxdWUodCl7aWYodD09PW51bGwpcmV0dXJuO2NvbnN0IGk9dGhpcy5FaDtpZihpPT09XCJcIilyZXR1cm47bGV0IGU9dGhpcy5nZXRLZXlGb3JMaW5rRGF0YSh0KTtpZihlIT09dm9pZCAwJiYhdGhpcy5RYihlKSlyZXR1cm47Y29uc3Qgcz10aGlzLnpjO2lmKHMhPT1udWxsJiYoZT1zKHRoaXMsdCksZSE9bnVsbCYmIXRoaXMuUWIoZSkpKXt0aGlzLmV0KHQsaSxlKTtyZXR1cm59aWYodHlwZW9mIGU9PVwic3RyaW5nXCIpe2xldCBuPTI7Zm9yKDt0aGlzLlFiKGUrbik7KW4rKzt0aGlzLmV0KHQsaSxlK24pfWVsc2UgaWYoZT09PXZvaWQgMHx8dHlwZW9mIGU9PVwibnVtYmVyXCIpe2xldCBuPS10aGlzLkVpLmNvdW50LTE7Zm9yKDt0aGlzLlFiKG4pOyluLS07dGhpcy5ldCh0LGksbil9ZWxzZSBEZWJ1ZyYmVS5uKFwiR3JhcGhMaW5rc01vZGVsLmdldEtleUZvckxpbmtEYXRhIHJldHVybmVkIHNvbWV0aGluZyBvdGhlciB0aGFuIGEgc3RyaW5nIG9yIGEgbnVtYmVyOiBcIitlKX1jb250YWluc0xpbmtEYXRhKHQpe3JldHVybiB0PT09bnVsbD8hMTp0aGlzLnNyLmhhcyh0KX1hZGRMaW5rRGF0YSh0KXt0IT09bnVsbCYmKHRoaXMuY29udGFpbnNMaW5rRGF0YSh0KXx8dGhpcy5RVCh0LCEwKSl9UVQodCxpKXtpZih0aGlzLmxpbmtLZXlQcm9wZXJ0eSE9PVwiXCIpe2xldCBzPXRoaXMuZ2V0S2V5Rm9yTGlua0RhdGEodCk7aWYocz09PXZvaWQgMCl0aGlzLm1ha2VMaW5rRGF0YUtleVVuaXF1ZSh0KSxzPXRoaXMuZ2V0S2V5Rm9yTGlua0RhdGEodCk7ZWxzZXtpZih0aGlzLkVpLmdldChzKT09PXQpcmV0dXJuO3RoaXMubWFrZUxpbmtEYXRhS2V5VW5pcXVlKHQpLHM9dGhpcy5nZXRLZXlGb3JMaW5rRGF0YSh0KX1zPT09dm9pZCAwJiZVLm4oXCJHcmFwaExpbmtzTW9kZWwubWFrZUxpbmtEYXRhS2V5VW5pcXVlIGZhaWxlZCBvbiBcIit0K1wiLiBEYXRhIG5vdCBhZGRlZCB0byBtb2RlbC5cIiksdGhpcy5FaS5zZXQocyx0KX10aGlzLnNyLmFkZCh0KTtsZXQgZT1udWxsO2kmJihlPXRoaXMuQXMubGVuZ3RoLHRoaXMuZXIodGhpcy5BcyxlLHQpKSx0aGlzLnp0KFwibGlua0RhdGFBcnJheVwiLDMsXCJsaW5rRGF0YUFycmF5XCIsdGhpcyxudWxsLHQsbnVsbCxlKSx0aGlzLiROKHQpfWFkZExpbmtEYXRhQ29sbGVjdGlvbih0KXtpZihBcnJheS5pc0FycmF5KHQpKXtjb25zdCBpPXQubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspdGhpcy5hZGRMaW5rRGF0YSh0W2VdKX1lbHNle2NvbnN0IGk9dC5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO3RoaXMuYWRkTGlua0RhdGEoZSl9fX1yZW1vdmVMaW5rRGF0YSh0KXt0IT09bnVsbCYmdGhpcy5aVCh0LCEwKX1aVCh0LGkpe3RoaXMuc3IuZGVsZXRlKHQpO2NvbnN0IGU9dGhpcy5nZXRLZXlGb3JMaW5rRGF0YSh0KTtlIT09dm9pZCAwJiZ0aGlzLkVpLmRlbGV0ZShlKTtsZXQgcz1udWxsO2lmKGkpe2lmKHM9dGhpcy5Bcy5pbmRleE9mKHQpLHM8MClyZXR1cm47dGhpcy54byh0aGlzLkFzLHMpfXRoaXMuenQoXCJsaW5rRGF0YUFycmF5XCIsNCxcImxpbmtEYXRhQXJyYXlcIix0aGlzLHQsbnVsbCxzLG51bGwpLHRoaXMubzModCl9cmVtb3ZlTGlua0RhdGFDb2xsZWN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpe2NvbnN0IGk9dC5sZW5ndGg7Zm9yKGxldCBlPTA7ZTxpO2UrKyl0aGlzLnJlbW92ZUxpbmtEYXRhKHRbZV0pfWVsc2V7Y29uc3QgaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7dGhpcy5yZW1vdmVMaW5rRGF0YShlKX19fW1lcmdlTGlua0RhdGFBcnJheSh0KXtpZih0aGlzLmxpbmtLZXlQcm9wZXJ0eT09PVwiXCImJlUubihcIkdyYXBoTGlua3NNb2RlbC5saW5rS2V5UHJvcGVydHkgbXVzdCBub3QgYmUgYW4gZW1wdHkgc3RyaW5nIGZvciAubWVyZ2VMaW5rRGF0YUFycmF5KCkgdG8gc3VjY2VlZC5cIiksdD09PXRoaXMubGlua0RhdGFBcnJheXx8IUFycmF5LmlzQXJyYXkodCkpcmV0dXJuO2NvbnN0IGk9bmV3IEdTZXQ7aS5hZGRBbGwodGhpcy5FaS5pdGVyYXRvcktleXMpO2NvbnN0IGU9bmV3IEdTZXQscz10Lmxlbmd0aDtmb3IobGV0IG89MDtvPHM7bysrKXtjb25zdCByPXRbb10sbD10aGlzLmdldEtleUZvckxpbmtEYXRhKHIpO2lmKGwhPT12b2lkIDApe2UuYWRkKGwpO2NvbnN0IGg9dGhpcy5maW5kTGlua0RhdGFGb3JLZXkobCk7aWYoaD09PXIpY29udGludWU7aWYoaCE9PW51bGwpdGhpcy5hc3NpZ25BbGxEYXRhUHJvcGVydGllcyhoLHIpLHRoaXMubUQocixoKTtlbHNle2NvbnN0IGY9dGhpcy5jbG9uZURlZXAocik7dGhpcy5zZXRLZXlGb3JMaW5rRGF0YShmLGwpLHRoaXMuYWRkTGlua0RhdGEoZil9fWVsc2V7Y29uc3QgaD10aGlzLmNsb25lRGVlcChyKTt0aGlzLmFkZExpbmtEYXRhKGgpLGUuYWRkKHRoaXMuZ2V0S2V5Rm9yTGlua0RhdGEoaCkpfX1jb25zdCBuPWkuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtpZighZS5oYXMobykpe2NvbnN0IHI9dGhpcy5maW5kTGlua0RhdGFGb3JLZXkobyk7ciYmdGhpcy5yZW1vdmVMaW5rRGF0YShyKX19fSROKHQpe2xldCBpPXRoaXMuT2UodCwhMCk7aT10aGlzLkpOKGkpLHRoaXMuZmluZE5vZGVEYXRhRm9yS2V5KGkpPT09bnVsbCYmdGhpcy50bihpLHQpLGk9dGhpcy5PZSh0LCExKSxpPXRoaXMuSk4oaSksdGhpcy5maW5kTm9kZURhdGFGb3JLZXkoaSk9PT1udWxsJiZ0aGlzLnRuKGksdCk7Y29uc3QgZT10aGlzLmdldExhYmVsS2V5c0ZvckxpbmtEYXRhKHQpO2lmKEFycmF5LmlzQXJyYXkoZSkpe2NvbnN0IHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKylpPWVbbl0sdGhpcy5maW5kTm9kZURhdGFGb3JLZXkoaSk9PT1udWxsJiZ0aGlzLnRuKGksdCl9fW8zKHQpe2xldCBpPXRoaXMuT2UodCwhMCk7dGhpcy5fcyhpLHQpLGk9dGhpcy5PZSh0LCExKSx0aGlzLl9zKGksdCk7Y29uc3QgZT10aGlzLmdldExhYmVsS2V5c0ZvckxpbmtEYXRhKHQpO2lmKEFycmF5LmlzQXJyYXkoZSkpe2NvbnN0IHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKylpPWVbbl0sdGhpcy5fcyhpLHQpfX1nZXQgY29weUxpbmtEYXRhRnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5YY31zZXQgY29weUxpbmtEYXRhRnVuY3Rpb24odCl7Y29uc3QgaT10aGlzLlhjO2khPT10JiYodCE9PW51bGwmJlUuUCh0LEdyYXBoTGlua3NNb2RlbCxcImNvcHlMaW5rRGF0YUZ1bmN0aW9uXCIpLHRoaXMuWGM9dCx0aGlzLnQoXCJjb3B5TGlua0RhdGFGdW5jdGlvblwiLGksdCkpfWNvcHlMaW5rRGF0YSh0KXtpZih0PT09bnVsbClyZXR1cm4gbnVsbDtsZXQgaT1udWxsO2NvbnN0IGU9dGhpcy5YYztyZXR1cm4gZSE9PW51bGw/aT1lKHQsdGhpcyk6aT10aGlzLlpiKHQsITApLFUuVyhpKSYmKHRoaXMuYm8hPT1cIlwiJiZ0aGlzLmV0KGksdGhpcy5ibyx2b2lkIDApLHRoaXMua28hPT1cIlwiJiZ0aGlzLmV0KGksdGhpcy5rbyx2b2lkIDApLHRoaXMuZW4hPT1cIlwiJiZ0aGlzLmV0KGksdGhpcy5lbixbXSkpLGl9Z2V0IG5vZGVJc0dyb3VwUHJvcGVydHkoKXtyZXR1cm4gdGhpcy5ZY31zZXQgbm9kZUlzR3JvdXBQcm9wZXJ0eSh0KXtjb25zdCBpPXRoaXMuWWM7aSE9PXQmJih0aGlzLkxuKHQsR3JhcGhMaW5rc01vZGVsLFwibm9kZUlzR3JvdXBQcm9wZXJ0eVwiKSx0aGlzLlljPXQsdGhpcy50KFwibm9kZUlzR3JvdXBQcm9wZXJ0eVwiLGksdCkpfWlzR3JvdXBGb3JOb2RlRGF0YSh0KXtpZih0PT09bnVsbClyZXR1cm4hMTtjb25zdCBpPXRoaXMuWWM7cmV0dXJuIGk9PT1cIlwiPyExOiEhdGhpcy5TdCh0LGkpfWlzR3JvdXBGb3JEYXRhKHQpe3JldHVybiB0aGlzLmlzR3JvdXBGb3JOb2RlRGF0YSh0KX1nZXQgbm9kZUdyb3VwS2V5UHJvcGVydHkoKXtyZXR1cm4gdGhpcy5Ubn1zZXQgbm9kZUdyb3VwS2V5UHJvcGVydHkodCl7Y29uc3QgaT10aGlzLlRuO2khPT10JiYodGhpcy5Mbih0LEdyYXBoTGlua3NNb2RlbCxcIm5vZGVHcm91cEtleVByb3BlcnR5XCIpLHRoaXMuVG49dCx0aGlzLnQoXCJub2RlR3JvdXBLZXlQcm9wZXJ0eVwiLGksdCkpfWdldCBjb3BpZXNHcm91cEtleU9mTm9kZURhdGEoKXtyZXR1cm4gdGhpcy5kZ31zZXQgY29waWVzR3JvdXBLZXlPZk5vZGVEYXRhKHQpe3RoaXMuZGchPT10JiYoVS5pKHQsXCJib29sZWFuXCIsR3JhcGhMaW5rc01vZGVsLFwiY29waWVzR3JvdXBLZXlPZk5vZGVEYXRhXCIpLHRoaXMuZGc9dCl9Z2V0R3JvdXBLZXlGb3JOb2RlRGF0YSh0KXtpZih0PT09bnVsbClyZXR1cm47Y29uc3QgaT10aGlzLlRuO2lmKGk9PT1cIlwiKXJldHVybjtjb25zdCBlPXRoaXMuU3QodCxpKTtpZihlIT09dm9pZCAwKXtpZih0aGlzLmlzS2V5VHlwZShlKSlyZXR1cm4gZTtVLm4oXCJHcm91cEtleSB2YWx1ZSBmb3Igbm9kZSBkYXRhIFwiK3QrXCIgaXMgbm90IGEgbnVtYmVyIG9yIGEgc3RyaW5nOiBcIitlKX19Z2V0R3JvdXBGb3JEYXRhKHQpe3JldHVybiB0aGlzLmdldEdyb3VwS2V5Rm9yTm9kZURhdGEodCl9c2V0R3JvdXBLZXlGb3JOb2RlRGF0YSh0LGkpe2lmKGk9PT1udWxsJiYoaT12b2lkIDApLGkhPT12b2lkIDAmJiF0aGlzLmlzS2V5VHlwZShpKSYmVS5QaShpLFwibnVtYmVyIG9yIHN0cmluZ1wiLEdyYXBoTGlua3NNb2RlbCxcInNldEdyb3VwS2V5Rm9yTm9kZURhdGE6a2V5XCIpLHQ9PT1udWxsKXJldHVybjtjb25zdCBlPXRoaXMuVG47aWYoZT09PVwiXCIpcmV0dXJuO2lmKCF0aGlzLmNvbnRhaW5zTm9kZURhdGEodCkpe3RoaXMuZXQodCxlLGkpO3JldHVybn1jb25zdCBzPXRoaXMuU3QodCxlKTtzIT09aSYmKHRoaXMuX3Mocyx0KSx0aGlzLmV0KHQsZSxpKSx0aGlzLmZpbmROb2RlRGF0YUZvcktleShpKT09PW51bGwmJnRoaXMudG4oaSx0KSx0aGlzLnp0KFwibm9kZUdyb3VwS2V5XCIsMixlLHQscyxpKSx0eXBlb2YgZT09XCJzdHJpbmdcIiYmdGhpcy51cGRhdGVUYXJnZXRCaW5kaW5ncyh0LGUpKX1zZXRHcm91cEZvckRhdGEodCxpKXt0aGlzLnNldEdyb3VwS2V5Rm9yTm9kZURhdGEodCxpKX1jb3B5Tm9kZURhdGEodCl7aWYodD09PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgaT1zdXBlci5jb3B5Tm9kZURhdGEodCk7cmV0dXJuIXRoaXMuY29waWVzR3JvdXBLZXlPZk5vZGVEYXRhJiZ0aGlzLlRuIT09XCJcIiYmdGhpcy5TdChpLHRoaXMuVG4pIT09dm9pZCAwJiZ0aGlzLmV0KGksdGhpcy5Ubix2b2lkIDApLGl9c2V0RGF0YVByb3BlcnR5KHQsaSxlKXtpZihEZWJ1ZyYmKFUuTW8odCxHcmFwaExpbmtzTW9kZWwsXCJzZXREYXRhUHJvcGVydHk6ZGF0YVwiKSxVLmkoaSxcInN0cmluZ1wiLEdyYXBoTGlua3NNb2RlbCxcInNldERhdGFQcm9wZXJ0eTpwcm9wbmFtZVwiKSxpPT09XCJcIiYmVS5uKFwiR3JhcGhMaW5rc01vZGVsLnNldERhdGFQcm9wZXJ0eTogcHJvcGVydHkgbmFtZSBtdXN0IG5vdCBiZSBhbiBlbXB0eSBzdHJpbmcgd2hlbiBzZXR0aW5nIFwiK3QrXCIgdG8gXCIrZSkpLHRoaXMuY29udGFpbnNOb2RlRGF0YSh0KSlpZihpPT09dGhpcy5ub2RlS2V5UHJvcGVydHkpe3RoaXMuc2V0S2V5Rm9yTm9kZURhdGEodCxlKTtyZXR1cm59ZWxzZSBpZihpPT09dGhpcy5ub2RlQ2F0ZWdvcnlQcm9wZXJ0eSl7dGhpcy5zZXRDYXRlZ29yeUZvck5vZGVEYXRhKHQsZSk7cmV0dXJufWVsc2UgaWYoaT09PXRoaXMubm9kZUdyb3VwS2V5UHJvcGVydHkpe3RoaXMuc2V0R3JvdXBLZXlGb3JOb2RlRGF0YSh0LGUpO3JldHVybn1lbHNlIERlYnVnJiZpPT09dGhpcy5ub2RlSXNHcm91cFByb3BlcnR5JiZVLm4oXCJHcmFwaExpbmtzTW9kZWwuc2V0RGF0YVByb3BlcnR5OiBwcm9wZXJ0eSBuYW1lIG11c3Qgbm90IGJlIHRoZSBub2RlSXNHcm91cFByb3BlcnR5OiBcIitpKTtlbHNlIGlmKHRoaXMuY29udGFpbnNMaW5rRGF0YSh0KSl7aWYoaT09PXRoaXMubGlua0Zyb21LZXlQcm9wZXJ0eSl7dGhpcy5pZyh0LGUsITApO3JldHVybn1lbHNlIGlmKGk9PT10aGlzLmxpbmtUb0tleVByb3BlcnR5KXt0aGlzLmlnKHQsZSwhMSk7cmV0dXJufWVsc2UgaWYoaT09PXRoaXMubGlua0Zyb21Qb3J0SWRQcm9wZXJ0eSl7dGhpcy5lZyh0LGUsITApO3JldHVybn1lbHNlIGlmKGk9PT10aGlzLmxpbmtUb1BvcnRJZFByb3BlcnR5KXt0aGlzLmVnKHQsZSwhMSk7cmV0dXJufWVsc2UgaWYoaT09PXRoaXMubGlua0tleVByb3BlcnR5KXt0aGlzLnNldEtleUZvckxpbmtEYXRhKHQsZSk7cmV0dXJufWVsc2UgaWYoaT09PXRoaXMubGlua0NhdGVnb3J5UHJvcGVydHkpe3RoaXMuc2V0Q2F0ZWdvcnlGb3JMaW5rRGF0YSh0LGUpO3JldHVybn1lbHNlIGlmKGk9PT10aGlzLmxpbmtMYWJlbEtleXNQcm9wZXJ0eSl7dGhpcy5zZXRMYWJlbEtleXNGb3JMaW5rRGF0YSh0LGUpO3JldHVybn19Y29uc3Qgcz10aGlzLlN0KHQsaSk7cyE9PWUmJih0aGlzLmV0KHQsaSxlKSx0aGlzLnJhaXNlRGF0YUNoYW5nZWQodCxpLHMsZSkpfWFzc2lnbkFsbERhdGFQcm9wZXJ0aWVzKHQsaSl7aWYoIWkpcmV0dXJuO2NvbnN0IGU9dGhpcy5jb250YWluc05vZGVEYXRhKHQpLHM9dGhpcy5jb250YWluc0xpbmtEYXRhKHQpO2Zvcihjb25zdCBuIGluIGkpaWYobiE9PVwiX19nb2hhc2hpZFwiJiYhKGUmJm49PT10aGlzLm5vZGVLZXlQcm9wZXJ0eSkpe3tpZihlJiZuPT09dGhpcy5ub2RlSXNHcm91cFByb3BlcnR5JiZ0aGlzLlN0KHQsbik9PT1pW25dKWNvbnRpbnVlO2lmKHMmJm49PT10aGlzLmxpbmtLZXlQcm9wZXJ0eSljb250aW51ZX10aGlzLnNldERhdGFQcm9wZXJ0eSh0LG4saVtuXSl9fVZ5KHQsaSl7c3VwZXIuVnkodCxpKTtjb25zdCBlPXRoaXMueGkuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IG49ZS52YWx1ZTt0aGlzLlpOKG4sdCxpKX1jb25zdCBzPXRoaXMuc3IuaXRlcmF0b3I7Zm9yKDtzLm5leHQoKTspe2NvbnN0IG49cy52YWx1ZTt0aGlzLnIzKG4sdCxpKX19Wk4odCxpLGUpe2lmKHRoaXMuZ2V0R3JvdXBLZXlGb3JOb2RlRGF0YSh0KT09PWkpe2NvbnN0IG49dGhpcy5Ubjt0aGlzLmV0KHQsbixlKSx0aGlzLnp0KFwibm9kZUdyb3VwS2V5XCIsMixuLHQsaSxlKSx0eXBlb2Ygbj09XCJzdHJpbmdcIiYmdGhpcy51cGRhdGVUYXJnZXRCaW5kaW5ncyh0LG4pfX1yMyh0LGksZSl7aWYodGhpcy5PZSh0LCEwKT09PWkpe2NvbnN0IHI9dGhpcy5ibzt0aGlzLmV0KHQscixlKSx0aGlzLnp0KFwibGlua0Zyb21LZXlcIiwyLHIsdCxpLGUpLHR5cGVvZiByPT1cInN0cmluZ1wiJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQscil9aWYodGhpcy5PZSh0LCExKT09PWkpe2NvbnN0IHI9dGhpcy5rbzt0aGlzLmV0KHQscixlKSx0aGlzLnp0KFwibGlua1RvS2V5XCIsMixyLHQsaSxlKSx0eXBlb2Ygcj09XCJzdHJpbmdcIiYmdGhpcy51cGRhdGVUYXJnZXRCaW5kaW5ncyh0LHIpfWNvbnN0IG89dGhpcy5nZXRMYWJlbEtleXNGb3JMaW5rRGF0YSh0KTtpZihBcnJheS5pc0FycmF5KG8pKXtjb25zdCByPW8ubGVuZ3RoLGw9dGhpcy5lbjtmb3IobGV0IGg9MDtoPHI7aCsrKW9baF09PT1pJiYodGhpcy5oRChvLGgsZSksdGhpcy56dChcImxpbmtMYWJlbEtleXNcIiwzLGwsdCxpLGUsaCxoKSl9fWpOKCl7c3VwZXIuak4oKTtjb25zdCB0PXRoaXMubGlua0RhdGFBcnJheSxpPXQubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspe2NvbnN0IHM9dFtlXTt0aGlzLiROKHMpfX1jZyh0KXtzdXBlci5jZyh0KTtjb25zdCBpPXRoaXMuZ2V0S2V5Rm9yTm9kZURhdGEodCksZT10aGlzLkZ5KGkpO2lmKGUhPT1udWxsKXtjb25zdCBzPVUubHQoKSxuPWUuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTtpZih0aGlzLmNvbnRhaW5zTm9kZURhdGEobykpe2lmKHRoaXMuZ2V0R3JvdXBLZXlGb3JOb2RlRGF0YShvKT09PWkpe2NvbnN0IGw9dGhpcy5Ubjt0aGlzLnp0KFwibm9kZUdyb3VwS2V5XCIsMixsLG8saSxpKSx0eXBlb2YgbD09XCJzdHJpbmdcIiYmdGhpcy51cGRhdGVUYXJnZXRCaW5kaW5ncyhvLGwpLHMucHVzaChvKX19ZWxzZXtpZih0aGlzLk9lKG8sITApPT09aSl7Y29uc3QgZj10aGlzLmJvO3RoaXMuenQoXCJsaW5rRnJvbUtleVwiLDIsZixvLGksaSksdHlwZW9mIGY9PVwic3RyaW5nXCImJnRoaXMudXBkYXRlVGFyZ2V0QmluZGluZ3MobyxmKSxzLnB1c2gobyl9aWYodGhpcy5PZShvLCExKT09PWkpe2NvbnN0IGY9dGhpcy5rbzt0aGlzLnp0KFwibGlua1RvS2V5XCIsMixmLG8saSxpKSx0eXBlb2YgZj09XCJzdHJpbmdcIiYmdGhpcy51cGRhdGVUYXJnZXRCaW5kaW5ncyhvLGYpLHMucHVzaChvKX1jb25zdCBoPXRoaXMuZ2V0TGFiZWxLZXlzRm9yTGlua0RhdGEobyk7aWYoQXJyYXkuaXNBcnJheShoKSl7Y29uc3QgZj1oLmxlbmd0aCxhPXRoaXMuZW47Zm9yKGxldCBjPTA7YzxmO2MrKyloW2NdPT09aSYmKHRoaXMuenQoXCJsaW5rTGFiZWxLZXlzXCIsMyxhLG8saSxpLGMsYykscy5wdXNoKG8pKX19fWZvcihsZXQgbz0wO288cy5sZW5ndGg7bysrKXRoaXMuX3MoaSxzW29dKTtVLnR0KHMpfX11Zyh0KXtzdXBlci51Zyh0KTtjb25zdCBpPXRoaXMuZ2V0R3JvdXBLZXlGb3JOb2RlRGF0YSh0KTt0aGlzLmZpbmROb2RlRGF0YUZvcktleShpKT09PW51bGwmJnRoaXMudG4oaSx0KX1YeSh0KXtzdXBlci5YeSh0KTtjb25zdCBpPXRoaXMuZ2V0R3JvdXBLZXlGb3JOb2RlRGF0YSh0KTt0aGlzLl9zKGksdCl9Z2V0IGxpbmtDYXRlZ29yeVByb3BlcnR5KCl7cmV0dXJuIHRoaXMuZWZ9c2V0IGxpbmtDYXRlZ29yeVByb3BlcnR5KHQpe2NvbnN0IGk9dGhpcy5lZjtpIT09dCYmKHRoaXMuTG4odCxHcmFwaExpbmtzTW9kZWwsXCJsaW5rQ2F0ZWdvcnlQcm9wZXJ0eVwiKSx0aGlzLmVmPXQsdGhpcy50KFwibGlua0NhdGVnb3J5UHJvcGVydHlcIixpLHQpKX1nZXRDYXRlZ29yeUZvckxpbmtEYXRhKHQpe2lmKHQ9PT1udWxsKXJldHVyblwiXCI7Y29uc3QgaT10aGlzLmVmO2lmKGk9PT1cIlwiKXJldHVyblwiXCI7Y29uc3QgZT10aGlzLlN0KHQsaSk7aWYoZT09PXZvaWQgMClyZXR1cm5cIlwiO2lmKHR5cGVvZiBlPT1cInN0cmluZ1wiKXJldHVybiBlO1UubihcImdldENhdGVnb3J5Rm9yTGlua0RhdGEgZm91bmQgYSBub24tc3RyaW5nIGNhdGVnb3J5IGZvciBcIit0K1wiOiBcIitlKX1nZXRMaW5rQ2F0ZWdvcnlGb3JEYXRhKHQpe3JldHVybiB0aGlzLmdldENhdGVnb3J5Rm9yTGlua0RhdGEodCl9c2V0Q2F0ZWdvcnlGb3JMaW5rRGF0YSh0LGkpe2lmKFUuaShpLFwic3RyaW5nXCIsR3JhcGhMaW5rc01vZGVsLFwic2V0Q2F0ZWdvcnlGb3JMaW5rRGF0YTpjYXRcIiksdD09PW51bGwpcmV0dXJuO2NvbnN0IGU9dGhpcy5lZjtpZihlPT09XCJcIilyZXR1cm47aWYoIXRoaXMuY29udGFpbnNMaW5rRGF0YSh0KSl7dGhpcy5ldCh0LGUsaSk7cmV0dXJufWxldCBzPXRoaXMuU3QodCxlKTtzPT09dm9pZCAwJiYocz1cIlwiKSxzIT09aSYmKHRoaXMuZXQodCxlLGkpLHRoaXMuenQoXCJsaW5rQ2F0ZWdvcnlcIiwyLGUsdCxzLGkpLHR5cGVvZiBlPT1cInN0cmluZ1wiJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQsZSkpfXNldExpbmtDYXRlZ29yeUZvckRhdGEodCxpKXt0aGlzLnNldENhdGVnb3J5Rm9yTGlua0RhdGEodCxpKX1mZyh0LGkpe3N1cGVyLmZnKHQsaSksdGhpcy5zZXRHcm91cEtleUZvck5vZGVEYXRhKGksdGhpcy5nZXRHcm91cEtleUZvck5vZGVEYXRhKHQpKX1tRCh0LGkpe3RoaXMuc2V0Q2F0ZWdvcnlGb3JMaW5rRGF0YShpLHRoaXMuZ2V0Q2F0ZWdvcnlGb3JMaW5rRGF0YSh0KSksdGhpcy5zZXRGcm9tS2V5Rm9yTGlua0RhdGEoaSx0aGlzLmdldEZyb21LZXlGb3JMaW5rRGF0YSh0KSksdGhpcy5zZXRUb0tleUZvckxpbmtEYXRhKGksdGhpcy5nZXRUb0tleUZvckxpbmtEYXRhKHQpKSx0aGlzLnNldExhYmVsS2V5c0ZvckxpbmtEYXRhKGksdGhpcy5nZXRMYWJlbEtleXNGb3JMaW5rRGF0YSh0KSksdGhpcy5zZXRGcm9tUG9ydElkRm9yTGlua0RhdGEoaSx0aGlzLmdldEZyb21Qb3J0SWRGb3JMaW5rRGF0YSh0KSksdGhpcy5zZXRUb1BvcnRJZEZvckxpbmtEYXRhKGksdGhpcy5nZXRUb1BvcnRJZEZvckxpbmtEYXRhKHQpKX1nZXQgdHlwZSgpe3JldHVyblwiR3JhcGhMaW5rc01vZGVsXCJ9a20oKXtyZXR1cm4hMH1ZYSgpe3JldHVybiEwfSR3KCl7cmV0dXJuITB9eGEoKXtyZXR1cm4hMH1zdGF0aWMgRW1wdHlBcnJheT1PYmplY3QuZnJlZXplKFtdKX1Nb2RlbC55bChHcmFwaExpbmtzTW9kZWwsXCJHcmFwaExpbmtzTW9kZWxcIiksTW9kZWwubEQ9KCk9Pm5ldyBHcmFwaExpbmtzTW9kZWwsTW9kZWwuejI9KCk9Pm5ldyBHcmFwaExpbmtzTW9kZWw7Y2xhc3MgVHJlZU1vZGVsIGV4dGVuZHMgTW9kZWx7RG47Z2c7c2Y7Y29uc3RydWN0b3IodCxpKXtpZihzdXBlcigpLHRoaXMuRG49XCJwYXJlbnRcIix0aGlzLmdnPSExLHRoaXMuc2Y9XCJwYXJlbnRMaW5rQ2F0ZWdvcnlcIix0IT09dm9pZCAwJiYoQXJyYXkuaXNBcnJheSh0KT90aGlzLm5vZGVEYXRhQXJyYXk9dDppPXQpLGkpe09iamVjdC5hc3NpZ24odGhpcyxpKTtjb25zdCBlPWkuQ2hhbmdlZDtlJiYoZGVsZXRlIHRoaXMuQ2hhbmdlZCx0aGlzLmFkZENoYW5nZWRMaXN0ZW5lcihlKSl9fWNsb25lUHJvdGVjdGVkKHQpe3N1cGVyLmNsb25lUHJvdGVjdGVkKHQpLHQuRG49dGhpcy5Ebix0LmdnPXRoaXMuZ2csdC5zZj10aGlzLnNmfXRvU3RyaW5nKHQpe2lmKHQ9PT12b2lkIDAmJih0PTApLHQ+PTIpcmV0dXJuIHRoaXMudG9Kc29uKCk7e2xldCBpPSh0aGlzLm5hbWUhPT1cIlwiP3RoaXMubmFtZTpcIlwiKStcIiBUcmVlTW9kZWxcIjtpZih0PjApe2krPWBcbiBub2RlIGRhdGE6YDtjb25zdCBlPXRoaXMubm9kZURhdGFBcnJheSxzPWUubGVuZ3RoO2ZvcihsZXQgbj0wO248cztuKyspe2NvbnN0IG89ZVtuXTtpKz1cIiBcIit0aGlzLmdldEtleUZvck5vZGVEYXRhKG8pK1wiOlwiK0JpbmRpbmcudG9TdHJpbmcobyl9fXJldHVybiBpfX1hZygpe2NvbnN0IHQ9c3VwZXIuYWcoKTtsZXQgaT1cIlwiO3JldHVybiB0aGlzLm5vZGVQYXJlbnRLZXlQcm9wZXJ0eSE9PVwicGFyZW50XCImJnR5cGVvZiB0aGlzLm5vZGVQYXJlbnRLZXlQcm9wZXJ0eT09XCJzdHJpbmdcIiYmKGkrPWAsXG4gIFwibm9kZVBhcmVudEtleVByb3BlcnR5XCI6IGArdGhpcy5FZSh0aGlzLm5vZGVQYXJlbnRLZXlQcm9wZXJ0eSkpLHQraX1FeSh0KXtzdXBlci5FeSh0KSx0Lm5vZGVQYXJlbnRLZXlQcm9wZXJ0eSYmKHRoaXMubm9kZVBhcmVudEtleVByb3BlcnR5PXQubm9kZVBhcmVudEtleVByb3BlcnR5KX1CeSh0KXt0Lm5vZGVQYXJlbnRLZXlQcm9wZXJ0eSE9PXZvaWQgMCYmdC5ub2RlUGFyZW50S2V5UHJvcGVydHkhPT10aGlzLm5vZGVQYXJlbnRLZXlQcm9wZXJ0eSYmVS5uKFwiYXBwbHlJbmNyZW1lbnRhbEpzb24gY2Fubm90IGNoYW5nZSBNb2RlbCBwcm9wZXJ0aWVzXCIpLHN1cGVyLkJ5KHQpfW1heWJlRW5zdXJlTGlua1JlZmVyZW5jZSh0KXtyZXR1cm4gdH1nZXQgbm9kZVBhcmVudEtleVByb3BlcnR5KCl7cmV0dXJuIHRoaXMuRG59c2V0IG5vZGVQYXJlbnRLZXlQcm9wZXJ0eSh0KXtjb25zdCBpPXRoaXMuRG47aSE9PXQmJih0aGlzLkxuKHQsVHJlZU1vZGVsLFwibm9kZVBhcmVudEtleVByb3BlcnR5XCIpLHRoaXMuRG49dCx0aGlzLnQoXCJub2RlUGFyZW50S2V5UHJvcGVydHlcIixpLHQpKX1nZXQgY29waWVzUGFyZW50S2V5T2ZOb2RlRGF0YSgpe3JldHVybiB0aGlzLmdnfXNldCBjb3BpZXNQYXJlbnRLZXlPZk5vZGVEYXRhKHQpe3RoaXMuZ2chPT10JiYoVS5pKHQsXCJib29sZWFuXCIsVHJlZU1vZGVsLFwiY29waWVzUGFyZW50S2V5T2ZOb2RlRGF0YVwiKSx0aGlzLmdnPXQpfWdldFBhcmVudEtleUZvck5vZGVEYXRhKHQpe2lmKHQ9PT1udWxsKXJldHVybjtjb25zdCBpPXRoaXMuRG47aWYoaT09PVwiXCIpcmV0dXJuO2NvbnN0IGU9dGhpcy5TdCh0LGkpO2lmKGUhPT12b2lkIDApe2lmKHRoaXMuaXNLZXlUeXBlKGUpKXJldHVybiBlO1UubihcIlBhcmVudEtleSB2YWx1ZSBmb3Igbm9kZSBkYXRhIFwiK3QrXCIgaXMgbm90IGEgbnVtYmVyIG9yIGEgc3RyaW5nOiBcIitlKX19c2V0UGFyZW50S2V5Rm9yTm9kZURhdGEodCxpKXtpZihpPT09bnVsbCYmKGk9dm9pZCAwKSxpIT09dm9pZCAwJiYhdGhpcy5pc0tleVR5cGUoaSkmJlUuUGkoaSxcIm51bWJlciBvciBzdHJpbmdcIixUcmVlTW9kZWwsXCJzZXRQYXJlbnRLZXlGb3JOb2RlRGF0YTprZXlcIiksdD09PW51bGwpcmV0dXJuO2NvbnN0IGU9dGhpcy5EbjtpZihlPT09XCJcIilyZXR1cm47aWYoaT10aGlzLm1heWJlRW5zdXJlTGlua1JlZmVyZW5jZShpKSwhdGhpcy5jb250YWluc05vZGVEYXRhKHQpKXt0aGlzLmV0KHQsZSxpKTtyZXR1cm59Y29uc3Qgcz10aGlzLlN0KHQsZSk7cyE9PWkmJih0aGlzLl9zKHMsdCksdGhpcy5ldCh0LGUsaSksdGhpcy5maW5kTm9kZURhdGFGb3JLZXkoaSk9PT1udWxsJiZ0aGlzLnRuKGksdCksdGhpcy56dChcIm5vZGVQYXJlbnRLZXlcIiwyLGUsdCxzLGkpLHR5cGVvZiBlPT1cInN0cmluZ1wiJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQsZSkpfWdldCBwYXJlbnRMaW5rQ2F0ZWdvcnlQcm9wZXJ0eSgpe3JldHVybiB0aGlzLnNmfXNldCBwYXJlbnRMaW5rQ2F0ZWdvcnlQcm9wZXJ0eSh0KXtjb25zdCBpPXRoaXMuc2Y7aSE9PXQmJih0aGlzLkxuKHQsVHJlZU1vZGVsLFwicGFyZW50TGlua0NhdGVnb3J5UHJvcGVydHlcIiksdGhpcy5zZj10LHRoaXMudChcInBhcmVudExpbmtDYXRlZ29yeVByb3BlcnR5XCIsaSx0KSl9Z2V0IGxpbmtDYXRlZ29yeVByb3BlcnR5KCl7cmV0dXJuIHRoaXMucGFyZW50TGlua0NhdGVnb3J5UHJvcGVydHl9c2V0IGxpbmtDYXRlZ29yeVByb3BlcnR5KHQpe3RoaXMucGFyZW50TGlua0NhdGVnb3J5UHJvcGVydHk9dH1nZXRQYXJlbnRMaW5rQ2F0ZWdvcnlGb3JOb2RlRGF0YSh0KXtpZih0PT09bnVsbClyZXR1cm5cIlwiO2NvbnN0IGk9dGhpcy5zZjtpZihpPT09XCJcIilyZXR1cm5cIlwiO2NvbnN0IGU9dGhpcy5TdCh0LGkpO2lmKGU9PT12b2lkIDApcmV0dXJuXCJcIjtpZih0eXBlb2YgZT09XCJzdHJpbmdcIilyZXR1cm4gZTtVLm4oXCJnZXRQYXJlbnRMaW5rQ2F0ZWdvcnlGb3JOb2RlRGF0YSBmb3VuZCBhIG5vbi1zdHJpbmcgY2F0ZWdvcnkgZm9yIFwiK3QrXCI6IFwiK2UpfWdldExpbmtDYXRlZ29yeUZvckRhdGEodCl7cmV0dXJuIHRoaXMuZ2V0UGFyZW50TGlua0NhdGVnb3J5Rm9yTm9kZURhdGEodCl9c2V0UGFyZW50TGlua0NhdGVnb3J5Rm9yTm9kZURhdGEodCxpKXtpZihVLmkoaSxcInN0cmluZ1wiLFRyZWVNb2RlbCxcInNldFBhcmVudExpbmtDYXRlZ29yeUZvck5vZGVEYXRhOmNhdFwiKSx0PT09bnVsbClyZXR1cm47Y29uc3QgZT10aGlzLnNmO2lmKGU9PT1cIlwiKXJldHVybjtpZighdGhpcy5jb250YWluc05vZGVEYXRhKHQpKXt0aGlzLmV0KHQsZSxpKTtyZXR1cm59bGV0IHM9dGhpcy5TdCh0LGUpO3M9PT12b2lkIDAmJihzPVwiXCIpLHMhPT1pJiYodGhpcy5ldCh0LGUsaSksdGhpcy56dChcInBhcmVudExpbmtDYXRlZ29yeVwiLDIsZSx0LHMsaSksdHlwZW9mIGU9PVwic3RyaW5nXCImJnRoaXMudXBkYXRlVGFyZ2V0QmluZGluZ3ModCxlKSl9c2V0TGlua0NhdGVnb3J5Rm9yRGF0YSh0LGkpe3RoaXMuc2V0UGFyZW50TGlua0NhdGVnb3J5Rm9yTm9kZURhdGEodCxpKX1jb3B5Tm9kZURhdGEodCl7aWYodD09PW51bGwpcmV0dXJuIG51bGw7Y29uc3QgaT1zdXBlci5jb3B5Tm9kZURhdGEodCk7cmV0dXJuIXRoaXMuY29waWVzUGFyZW50S2V5T2ZOb2RlRGF0YSYmdGhpcy5EbiE9PVwiXCImJnRoaXMuU3QoaSx0aGlzLkRuKSE9PXZvaWQgMCYmdGhpcy5ldChpLHRoaXMuRG4sdm9pZCAwKSxpfXNldERhdGFQcm9wZXJ0eSh0LGksZSl7aWYoRGVidWcmJihVLk1vKHQsVHJlZU1vZGVsLFwic2V0RGF0YVByb3BlcnR5OmRhdGFcIiksVS5pKGksXCJzdHJpbmdcIixUcmVlTW9kZWwsXCJzZXREYXRhUHJvcGVydHk6cHJvcG5hbWVcIiksaT09PVwiXCImJlUubihcIlRyZWVNb2RlbC5zZXREYXRhUHJvcGVydHk6IHByb3BlcnR5IG5hbWUgbXVzdCBub3QgYmUgYW4gZW1wdHkgc3RyaW5nIHdoZW4gc2V0dGluZyBcIit0K1wiIHRvIFwiK2UpKSx0aGlzLmNvbnRhaW5zTm9kZURhdGEodCkpe2lmKGk9PT10aGlzLm5vZGVLZXlQcm9wZXJ0eSl7dGhpcy5zZXRLZXlGb3JOb2RlRGF0YSh0LGUpO3JldHVybn1lbHNlIGlmKGk9PT10aGlzLm5vZGVDYXRlZ29yeVByb3BlcnR5KXt0aGlzLnNldENhdGVnb3J5Rm9yTm9kZURhdGEodCxlKTtyZXR1cm59ZWxzZSBpZihpPT09dGhpcy5ub2RlUGFyZW50S2V5UHJvcGVydHkpe3RoaXMuc2V0UGFyZW50S2V5Rm9yTm9kZURhdGEodCxlKTtyZXR1cm59ZWxzZSBpZihpPT09dGhpcy5wYXJlbnRMaW5rQ2F0ZWdvcnlQcm9wZXJ0eSl7dGhpcy5zZXRQYXJlbnRMaW5rQ2F0ZWdvcnlGb3JOb2RlRGF0YSh0LGUpO3JldHVybn19Y29uc3Qgcz10aGlzLlN0KHQsaSk7cyE9PWUmJih0aGlzLmV0KHQsaSxlKSx0aGlzLnJhaXNlRGF0YUNoYW5nZWQodCxpLHMsZSkpfVZ5KHQsaSl7c3VwZXIuVnkodCxpKTtjb25zdCBlPXRoaXMueGkuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTt0aGlzLlpOKHMsdCxpKX19Wk4odCxpLGUpe2lmKHRoaXMuZ2V0UGFyZW50S2V5Rm9yTm9kZURhdGEodCk9PT1pKXtjb25zdCBuPXRoaXMuRG47dGhpcy5ldCh0LG4sZSksdGhpcy56dChcIm5vZGVQYXJlbnRLZXlcIiwyLG4sdCxpLGUpLHR5cGVvZiBuPT1cInN0cmluZ1wiJiZ0aGlzLnVwZGF0ZVRhcmdldEJpbmRpbmdzKHQsbil9fWNnKHQpe3N1cGVyLmNnKHQpO2NvbnN0IGk9dGhpcy5nZXRLZXlGb3JOb2RlRGF0YSh0KSxlPXRoaXMuRnkoaSk7aWYoZSE9PW51bGwpe2NvbnN0IHM9VS5sdCgpLG49ZS5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO2lmKHRoaXMuY29udGFpbnNOb2RlRGF0YShvKSYmdGhpcy5nZXRQYXJlbnRLZXlGb3JOb2RlRGF0YShvKT09PWkpe2NvbnN0IGw9dGhpcy5Ebjt0aGlzLnp0KFwibm9kZVBhcmVudEtleVwiLDIsbCxvLGksaSksdHlwZW9mIGw9PVwic3RyaW5nXCImJnRoaXMudXBkYXRlVGFyZ2V0QmluZGluZ3MobyxsKSxzLnB1c2gobyl9fWZvcihsZXQgbz0wO288cy5sZW5ndGg7bysrKXRoaXMuX3MoaSxzW29dKTtVLnR0KHMpfX11Zyh0KXtzdXBlci51Zyh0KTtsZXQgaT10aGlzLmdldFBhcmVudEtleUZvck5vZGVEYXRhKHQpO2k9dGhpcy5tYXliZUVuc3VyZUxpbmtSZWZlcmVuY2UoaSksdGhpcy5maW5kTm9kZURhdGFGb3JLZXkoaSk9PT1udWxsJiZ0aGlzLnRuKGksdCl9WHkodCl7c3VwZXIuWHkodCk7Y29uc3QgaT10aGlzLmdldFBhcmVudEtleUZvck5vZGVEYXRhKHQpO3RoaXMuX3MoaSx0KX1mZyh0LGkpe3N1cGVyLmZnKHQsaSksdGhpcy5zZXRQYXJlbnRMaW5rQ2F0ZWdvcnlGb3JOb2RlRGF0YShpLHRoaXMuZ2V0UGFyZW50TGlua0NhdGVnb3J5Rm9yTm9kZURhdGEodCkpLHRoaXMuc2V0UGFyZW50S2V5Rm9yTm9kZURhdGEoaSx0aGlzLmdldFBhcmVudEtleUZvck5vZGVEYXRhKHQpKX1nZXQgdHlwZSgpe3JldHVyblwiVHJlZU1vZGVsXCJ9U20oKXtyZXR1cm4hMH0kdygpe3JldHVybiEwfX1Nb2RlbC55bChUcmVlTW9kZWwsXCJUcmVlTW9kZWxcIik7dmFyIENpcmN1bGFyQXJyYW5nZW1lbnQ9KHk9Pih5W3kuQ29uc3RhbnRTcGFjaW5nPTBdPVwiQ29uc3RhbnRTcGFjaW5nXCIseVt5LkNvbnN0YW50RGlzdGFuY2U9MV09XCJDb25zdGFudERpc3RhbmNlXCIseVt5LkNvbnN0YW50QW5nbGU9Ml09XCJDb25zdGFudEFuZ2xlXCIseVt5LlBhY2tlZD0zXT1cIlBhY2tlZFwiLHkpKShDaXJjdWxhckFycmFuZ2VtZW50fHx7fSksQ2lyY3VsYXJEaXJlY3Rpb249KHk9Pih5W3kuQ2xvY2t3aXNlPTEwXT1cIkNsb2Nrd2lzZVwiLHlbeS5Db3VudGVyY2xvY2t3aXNlPTExXT1cIkNvdW50ZXJjbG9ja3dpc2VcIix5W3kuQmlkaXJlY3Rpb25hbExlZnQ9MTJdPVwiQmlkaXJlY3Rpb25hbExlZnRcIix5W3kuQmlkaXJlY3Rpb25hbFJpZ2h0PTEzXT1cIkJpZGlyZWN0aW9uYWxSaWdodFwiLHkpKShDaXJjdWxhckRpcmVjdGlvbnx8e30pLENpcmN1bGFyU29ydGluZz0oeT0+KHlbeS5Gb3J3YXJkcz0yMF09XCJGb3J3YXJkc1wiLHlbeS5SZXZlcnNlPTIxXT1cIlJldmVyc2VcIix5W3kuQXNjZW5kaW5nPTIyXT1cIkFzY2VuZGluZ1wiLHlbeS5EZXNjZW5kaW5nPTIzXT1cIkRlc2NlbmRpbmdcIix5W3kuT3B0aW1pemVkPTI0XT1cIk9wdGltaXplZFwiLHkpKShDaXJjdWxhclNvcnRpbmd8fHt9KSxDaXJjdWxhck5vZGVEaWFtZXRlckZvcm11bGE9KHk9Pih5W3kuUHl0aGFnb3JlYW49MzBdPVwiUHl0aGFnb3JlYW5cIix5W3kuQ2lyY3VsYXI9MzFdPVwiQ2lyY3VsYXJcIix5KSkoQ2lyY3VsYXJOb2RlRGlhbWV0ZXJGb3JtdWxhfHx7fSk7Y2xhc3MgQ2lyY3VsYXJMYXlvdXQgZXh0ZW5kcyBMYXlvdXR7Y2U7S2M7X2I7bWc7dGs7Qmg7UU47X047dEM7THM7WXk7S3k7bmY7VXk7cEQ7cGc7eWc7d2c7VWM7V2k7UztiZTtrZTtBbjt4Zztjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMuY2U9MCx0aGlzLktjPTAsdGhpcy5fYj0wLHRoaXMubWc9MzYwLHRoaXMudGs9MCx0aGlzLkJoPTAsdGhpcy5RTj1uZXcgUG9pbnQsdGhpcy5fTj0zMCx0aGlzLnRDPTAsdGhpcy5Mcz0wLHRoaXMuWXk9MCx0aGlzLkt5PW5ldyBWZXJ0ZXhBcnJhbmdlbWVudCx0aGlzLm5mPTAsdGhpcy5VeT0wLHRoaXMucEQ9NjAwLHRoaXMucGc9TmFOLHRoaXMueWc9MSx0aGlzLndnPTAsdGhpcy5VYz0zNjAsdGhpcy5XaT0wLHRoaXMuUz0xMCx0aGlzLmJlPTI0LHRoaXMua2U9TGF5b3V0VmVydGV4LnN0YW5kYXJkQ29tcGFyZXIsdGhpcy5Bbj02LHRoaXMueGc9MzAsdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfWNsb25lUHJvdGVjdGVkKHQpe3N1cGVyLmNsb25lUHJvdGVjdGVkKHQpLHQucGc9dGhpcy5wZyx0LnlnPXRoaXMueWcsdC53Zz10aGlzLndnLHQuVWM9dGhpcy5VYyx0LldpPXRoaXMuV2ksdC5TPXRoaXMuUyx0LmJlPXRoaXMuYmUsdC5rZT10aGlzLmtlLHQuQW49dGhpcy5Bbix0LnhnPXRoaXMueGd9YWkodCl7dCBpbiBDaXJjdWxhclNvcnRpbmc/dGhpcy5zb3J0aW5nPXQ6dCBpbiBDaXJjdWxhckRpcmVjdGlvbj90aGlzLmRpcmVjdGlvbj10OnQgaW4gQ2lyY3VsYXJBcnJhbmdlbWVudD90aGlzLmFycmFuZ2VtZW50PXQ6dCBpbiBDaXJjdWxhck5vZGVEaWFtZXRlckZvcm11bGE/dGhpcy5ub2RlRGlhbWV0ZXJGb3JtdWxhPXQ6c3VwZXIuYWkodCl9Y3JlYXRlTmV0d29yaygpe3JldHVybiBuZXcgQ2lyY3VsYXJOZXR3b3JrKHRoaXMpfWwzKHQsaSxlKXt0PXRoaXMuaDModCk7bGV0IHM9dGhpcy50ayxuPXRoaXMuX04sbz10aGlzLmNlLHI9dGhpcy5LYyxsPXRoaXMuX2IsaD10aGlzLm1nLGY9dGhpcy5CaCxhPXRoaXMudEMsYz10aGlzLkxzLHU9dGhpcy5ZeTtpZihzPXRoaXMuYXJyYW5nZW1lbnQsbj10aGlzLm5vZGVEaWFtZXRlckZvcm11bGEsbz10aGlzLnJhZGl1cywoIWlzRmluaXRlKG8pfHxvPD0wKSYmKG89TmFOKSxyPXRoaXMuYXNwZWN0UmF0aW8sKCFpc0Zpbml0ZShyKXx8cjw9MCkmJihyPTEpLGw9dGhpcy5zdGFydEFuZ2xlLGlzRmluaXRlKGwpfHwobD0wKSxoPXRoaXMuc3dlZXBBbmdsZSwoIWlzRmluaXRlKGgpfHxoPjM2MHx8aDwxKSYmKGg9MzYwKSxmPXRoaXMuc3BhY2luZyxpc0Zpbml0ZShmKXx8KGY9TmFOKSxzPT09MyYmbj09PTMxP3M9MDpzPT09MyYmbiE9PTMxJiYobj0zMSxzPXRoaXMuYXJyYW5nZW1lbnQpLCh0aGlzLmRpcmVjdGlvbj09PTEyfHx0aGlzLmRpcmVjdGlvbj09PTEzKSYmdGhpcy5zb3J0aW5nIT09MjQpe2ZvcihsZXQgZz0wOyEoZz49dC5sZW5ndGh8fChpLmFkZCh0LmVsdChnKSksZysxPj10Lmxlbmd0aCkpO2crPTIpZS5hZGQodC5lbHQoZysxKSk7dGhpcy5kaXJlY3Rpb249PT0xMj8odGhpcy5hcnJhbmdlbWVudD09PTMmJmkucmV2ZXJzZSgpLHQ9bmV3IExpc3QsdC5hZGRBbGwoaSksdC5hZGRBbGwoZSkpOih0aGlzLmFycmFuZ2VtZW50PT09MyYmZS5yZXZlcnNlKCksdD1uZXcgTGlzdCx0LmFkZEFsbChlKSx0LmFkZEFsbChpKSl9Y29uc3QgZD10Lmxlbmd0aDthPTA7bGV0IG09MDtmb3IobGV0IGc9MDtnPHQubGVuZ3RoO2crKyl7Y29uc3QgcD1sK2gqbSoodGhpcy5kaXJlY3Rpb249PT0xMD8xOi0xKS9kO2xldCB3PXQuZWx0KGcpLmRpYW1ldGVyO2lzTmFOKHcpJiYodz10LmVsdChnKS5WaChwKSksaDwzNjAmJihnPT09MHx8Zz09PXQubGVuZ3RoLTEpJiYody89MiksYSs9dyxtKyt9aWYoaXNOYU4obyl8fHM9PT0zKXtpZihpc05hTihmKSYmKGY9NikscyE9PTAmJnMhPT0zKXtsZXQgZz0tMS8wO2ZvcihsZXQgcD0wO3A8ZDtwKyspe2NvbnN0IHc9dC5lbHQocCkseD10LmVsdChwPT09ZC0xPzA6cCsxKTtpc05hTih3LmRpYW1ldGVyKSYmdy5WaCgwKSxpc05hTih4LmRpYW1ldGVyKSYmeC5WaCgwKSxnPU1hdGgubWF4KGcsKHcuZGlhbWV0ZXIreC5kaWFtZXRlcikvMil9aWYodT1nK2Yscz09PTIpe2NvbnN0IHA9MipNYXRoLlBJL2Qsdz0oZytmKS9wO3I+MT8obz13LGM9bypyKTooYz13LG89Yyl9ZWxzZSBvPXRoaXMuaWsodSooaD49MzYwP2Q6ZC0xKSxyLGwqTWF0aC5QSS8xODAsaCpNYXRoLlBJLzE4MCl9ZWxzZSBvPXRoaXMuaWsoYSsoaD49MzYwP2Q6ZC0xKSoocyE9PTM/ZjpmKjEuNikscixsKk1hdGguUEkvMTgwLGgqTWF0aC5QSS8xODApO2M9bypyfWVsc2V7Yz1vKnI7Y29uc3QgZz10aGlzLmlDKG8sYyxsKk1hdGguUEkvMTgwLGgqTWF0aC5QSS8xODApO2lmKGlzTmFOKGYpKXM9PT0wJiYoZj0oZy1hKS8oaD49MzYwP2Q6ZC0xKSk7ZWxzZSBpZihzPT09MCl7Y29uc3QgcD0oZy1hKS8oaD49MzYwP2Q6ZC0xKTtwPGY/KG89dGhpcy5payhhK2YqKGg+PTM2MD9kOmQtMSkscixsKk1hdGguUEkvMTgwLGgqTWF0aC5QSS8xODApLGM9bypyKTpmPXB9ZWxzZXtsZXQgcD0tMS8wO2ZvcihsZXQgaz0wO2s8ZDtrKyspe2NvbnN0IGI9dC5lbHQoayksUz10LmVsdChrPT09ZC0xPzA6aysxKTtpc05hTihiLmRpYW1ldGVyKSYmYi5WaCgwKSxpc05hTihTLmRpYW1ldGVyKSYmUy5WaCgwKSxwPU1hdGgubWF4KHAsKGIuZGlhbWV0ZXIrUy5kaWFtZXRlcikvMil9Y29uc3Qgdz1wK2YseD10aGlzLmlrKHcqKGg+PTM2MD9kOmQtMSkscixsKk1hdGguUEkvMTgwLGgqTWF0aC5QSS8xODApO3g+bz8obz14LGM9bypyLHU9dyk6dT1nLyhoPj0zNjA/ZDpkLTEpfX1yZXR1cm4gdGhpcy50az1zLHRoaXMuX049bix0aGlzLmNlPW8sdGhpcy5LYz1yLHRoaXMuX2I9bCx0aGlzLm1nPWgsdGhpcy5CaD1mLHRoaXMudEM9YSx0aGlzLkxzPWMsdGhpcy5ZeT11LHR9ZG9MYXlvdXQodCl7RGVidWcmJnQ9PT1udWxsJiZVLm4oXCJMYXlvdXQuZG9MYXlvdXQoY29sbGVjdGlvbikgYXJndW1lbnQgbXVzdCBub3QgYmUgbnVsbCBidXQgYSBEaWFncmFtLCBhIEdyb3VwLCBvciBhbiBJdGVyYWJsZSBvZiBQYXJ0c1wiKSx0aGlzLm5ldHdvcms9PT1udWxsJiYodGhpcy5uZXR3b3JrPXRoaXMubWFrZU5ldHdvcmsodCkpLHRoaXMuYXJyYW5nZW1lbnRPcmlnaW49dGhpcy5pbml0aWFsT3JpZ2luKHRoaXMuYXJyYW5nZW1lbnRPcmlnaW4pO2NvbnN0IGk9dGhpcy5uZXR3b3JrLnZlcnRleGVzO2lmKGkuY291bnQ8PTEpe2lmKGkuY291bnQ9PT0xKXtjb25zdCB1PWkuZmlyc3QoKTt1LmNlbnRlclg9MCx1LmNlbnRlclk9MH10aGlzLnVwZGF0ZVBhcnRzKCksdGhpcy5uZXR3b3JrPW51bGwsdGhpcy5pc1ZhbGlkTGF5b3V0PSEwO3JldHVybn1sZXQgZT1uZXcgTGlzdDtlLmFkZEFsbChpLml0ZXJhdG9yKTtjb25zdCBzPW5ldyBMaXN0LG49bmV3IExpc3Q7ZT10aGlzLmwzKGUscyxuKTtjb25zdCBvPXRoaXMudGsscj10aGlzLmNlLGw9dGhpcy5fYixoPXRoaXMubWcsZj10aGlzLkJoLGE9dGhpcy5McyxjPXRoaXMuWXk7aWYoKHRoaXMuZGlyZWN0aW9uPT09MTJ8fHRoaXMuZGlyZWN0aW9uPT09MTMpJiZvPT09Myl0aGlzLnlEKGUsaCxsLWgvMiwxMCk7ZWxzZSBpZih0aGlzLmRpcmVjdGlvbj09PTEyfHx0aGlzLmRpcmVjdGlvbj09PTEzKXtsZXQgdT0wO3N3aXRjaChvKXtjYXNlIDE6dT10aGlzLmVrKHIsYSxsLGMpKjE4MC9NYXRoLlBJO2JyZWFrO2Nhc2UgMDp7bGV0IGQ9MCxtPTA7Y29uc3QgZz1zLmZpcnN0KCk7ZyE9PW51bGwmJihkPWcuVmgoTWF0aC5QSS8yKSk7Y29uc3QgcD1uLmZpcnN0KCk7cCE9PW51bGwmJihtPXAuVmgoTWF0aC5QSS8yKSksdT10aGlzLmVrKHIsYSxsLGYrKGQrbSkvMikqMTgwL01hdGguUEk7YnJlYWt9Y2FzZSAyOnU9aC9lLmxlbmd0aDticmVha31pZih0aGlzLmRpcmVjdGlvbj09PTEyKXtzd2l0Y2gobyl7Y2FzZSAxOnRoaXMuR3kocyxoLzIsbCwxMSk7YnJlYWs7Y2FzZSAwOnRoaXMuSHkocyxoLzIsbCwxMSk7YnJlYWs7Y2FzZSAyOnRoaXMucXkocyxoLzIsbCwxMSk7YnJlYWt9c3dpdGNoKG8pe2Nhc2UgMTp0aGlzLkd5KG4saC8yLGwrdSwxMCk7YnJlYWs7Y2FzZSAwOnRoaXMuSHkobixoLzIsbCt1LDEwKTticmVhaztjYXNlIDI6dGhpcy5xeShuLGgvMixsK3UsMTApO2JyZWFrfX1lbHNle3N3aXRjaChvKXtjYXNlIDE6dGhpcy5HeShuLGgvMixsLDExKTticmVhaztjYXNlIDA6dGhpcy5IeShuLGgvMixsLDExKTticmVhaztjYXNlIDI6dGhpcy5xeShuLGgvMixsLDExKTticmVha31zd2l0Y2gobyl7Y2FzZSAxOnRoaXMuR3kocyxoLzIsbCt1LDEwKTticmVhaztjYXNlIDA6dGhpcy5IeShzLGgvMixsK3UsMTApO2JyZWFrO2Nhc2UgMjp0aGlzLnF5KHMsaC8yLGwrdSwxMCk7YnJlYWt9fX1lbHNlIHN3aXRjaChvKXtjYXNlIDE6dGhpcy5HeShlLGgsbCx0aGlzLmRpcmVjdGlvbik7YnJlYWs7Y2FzZSAwOnRoaXMuSHkoZSxoLGwsdGhpcy5kaXJlY3Rpb24pO2JyZWFrO2Nhc2UgMjp0aGlzLnF5KGUsaCxsLHRoaXMuZGlyZWN0aW9uKTticmVhaztjYXNlIDM6dGhpcy55RChlLGgsbCx0aGlzLmRpcmVjdGlvbik7YnJlYWt9dGhpcy51cGRhdGVQYXJ0cygpLHRoaXMubmV0d29yaz1udWxsLHRoaXMuaXNWYWxpZExheW91dD0hMH1xeSh0LGksZSxzKXtjb25zdCBuPXRoaXMubWcsbz10aGlzLmNlLHI9dGhpcy5McyxsPWUqTWF0aC5QSS8xODAsaD1pKk1hdGguUEkvMTgwLGY9dC5sZW5ndGg7Zm9yKGxldCBhPTA7YTxmO2ErKyl7Y29uc3QgYz1sKyhzPT09MTA/YSpoLyhuPj0zNjA/ZjpmLTEpOi0oYSpoKS9mKSx1PXQuZWx0KGEpLGQ9bypNYXRoLnRhbihjKS9yLG09TWF0aC5zcXJ0KChvKm8rcipyKmQqZCkvKDErZCpkKSk7dS5jZW50ZXJYPW0qTWF0aC5jb3MoYyksdS5jZW50ZXJZPW0qTWF0aC5zaW4oYyksdS5hY3R1YWxBbmdsZT1jKjE4MC9NYXRoLlBJfX1IeSh0LGksZSxzKXtjb25zdCBuPXRoaXMuY2Usbz10aGlzLkxzLHI9dGhpcy5CaDtsZXQgbD1lKk1hdGguUEkvMTgwO2NvbnN0IGg9dC5sZW5ndGg7Zm9yKGxldCBmPTA7ZjxoO2YrKyl7Y29uc3QgYT10LmVsdChmKSxjPXQuZWx0KGY9PT1oLTE/MDpmKzEpLHU9bipNYXRoLmNvcyhsKSxkPW8qTWF0aC5zaW4obCk7YS5jZW50ZXJYPXUsYS5jZW50ZXJZPWQsYS5hY3R1YWxBbmdsZT1sKjE4MC9NYXRoLlBJLGlzTmFOKGEuZGlhbWV0ZXIpJiZhLlZoKDApLGlzTmFOKGMuZGlhbWV0ZXIpJiZjLlZoKDApO2NvbnN0IG09KGEuZGlhbWV0ZXIrYy5kaWFtZXRlcikvMixnPXRoaXMuZWsobixvLHM9PT0xMD9sOi1sLG0rcik7bCs9cz09PTEwP2c6LWd9fUd5KHQsaSxlLHMpe2NvbnN0IG49dGhpcy5jZSxvPXRoaXMuTHMscj10aGlzLll5O2xldCBsPWUqTWF0aC5QSS8xODA7Y29uc3QgaD10Lmxlbmd0aDtmb3IobGV0IGY9MDtmPGg7ZisrKXtjb25zdCBhPXQuZWx0KGYpO2EuY2VudGVyWD1uKk1hdGguY29zKGwpLGEuY2VudGVyWT1vKk1hdGguc2luKGwpLGEuYWN0dWFsQW5nbGU9bCoxODAvTWF0aC5QSTtjb25zdCBjPXRoaXMuZWsobixvLHM9PT0xMD9sOi1sLHIpO2wrPXM9PT0xMD9jOi1jfX15RCh0LGksZSxzKXtsZXQgbj10aGlzLlV5O2NvbnN0IG89dGhpcy5tZztpZih0aGlzLm5mPTAsdGhpcy5LeT1uZXcgVmVydGV4QXJyYW5nZW1lbnQsaTwzNjApe2ZvcihuPWUrKHM9PT0xMD9vOi1vKTtuPDA7KW4rPTM2MDtuJT0zNjAsbj4xODAmJihuLT0zNjApLG4qPU1hdGguUEkvMTgwLHRoaXMuVXk9bix0aGlzLndEKHQsaSxlLHMpfWVsc2UgdGhpcy54RCh0LGksZSxzKTt0aGlzLkt5LmNvbW1pdCh0KX14RCh0LGksZSxzKXtjb25zdCBuPXRoaXMuY2Usbz10aGlzLkxzLHI9dGhpcy5CaCxsPXRoaXMuS2M7bGV0IGg9bipNYXRoLmNvcyhlKk1hdGguUEkvMTgwKSxmPW8qTWF0aC5zaW4oZSpNYXRoLlBJLzE4MCk7Y29uc3QgYT10LnRvQXJyYXkoKTtpZihhLmxlbmd0aD09PTMpe2FbMF0uY2VudGVyWD1uLGFbMF0uY2VudGVyWT0wLGFbMV0uY2VudGVyWD1hWzBdLmNlbnRlclgtYVswXS53aWR0aC8yLWFbMV0ud2lkdGgvMi1yLGFbMV0ueT1hWzBdLnksYVsyXS5jZW50ZXJYPShhWzBdLmNlbnRlclgrYVsxXS5jZW50ZXJYKS8yLGFbMl0ueT1hWzBdLnktYVsyXS5oZWlnaHQtcjtyZXR1cm59ZWxzZSBpZihhLmxlbmd0aD09PTQpe2FbMF0uY2VudGVyWD1uLGFbMF0uY2VudGVyWT0wLGFbMl0uY2VudGVyWD0tYVswXS5jZW50ZXJYLGFbMl0uY2VudGVyWT1hWzBdLmNlbnRlclksYVsxXS5jZW50ZXJYPTAsYVsxXS55PU1hdGgubWluKGFbMF0ueSxhWzJdLnkpLWFbMV0uaGVpZ2h0LXIsYVszXS5jZW50ZXJYPTAsYVszXS55PU1hdGgubWF4KGFbMF0ueSthWzBdLmhlaWdodCtyLGFbMl0ueSthWzJdLmhlaWdodCtyKTtyZXR1cm59Y29uc3QgYz1Qb2ludC5hKCk7Zm9yKGxldCBiPTA7YjxhLmxlbmd0aCYmKGFbYl0uY2VudGVyWD1oLGFbYl0uY2VudGVyWT1mLCEoYj49YS5sZW5ndGgtMSkpO2IrKyl0aGlzLmJEKGgsZixhLGIscyxjKXx8dGhpcy5rRChoLGYsYSxiLHMsYyksaD1jLngsZj1jLnk7aWYoUG9pbnQubyhjKSx0aGlzLm5mKyssdGhpcy5uZj4yMylyZXR1cm47Y29uc3QgdT1hWzBdLmNlbnRlclgsZD1hWzBdLmNlbnRlclksbT1hW2EubGVuZ3RoLTFdLmNlbnRlclgsZz1hW2EubGVuZ3RoLTFdLmNlbnRlclk7bGV0IHA9TWF0aC5hYnModS1tKS0oKGFbMF0ud2lkdGgrYVthLmxlbmd0aC0xXS53aWR0aCkvMityKTtjb25zdCB3PU1hdGguYWJzKGQtZyktKChhWzBdLmhlaWdodCthW2EubGVuZ3RoLTFdLmhlaWdodCkvMityKTtsZXQgeD0wO2lmKE1hdGguYWJzKHcpPDEpe2NvbnN0IGI9TWF0aC5hYnModS1tKSxTPShhWzBdLndpZHRoK2FbYS5sZW5ndGgtMV0ud2lkdGgpLzI7YjxTJiYoeD0wKSxwPWItU31lbHNlIHc+MD94PXc6TWF0aC5hYnMocCk8MT94PTA6eD1wO2xldCBrPSExO01hdGguYWJzKG0pPk1hdGguYWJzKGcpP2s9bT4wIT1kPmc6az1nPjAhPXU8bSxrPXM9PT0xMD9rOiFrLGsmJih4PS1NYXRoLmFicyh4KSx4PU1hdGgubWluKHgsLWFbYS5sZW5ndGgtMV0ud2lkdGgpLHg9TWF0aC5taW4oeCwtYVthLmxlbmd0aC0xXS5oZWlnaHQpKSx0aGlzLkt5LmEzKHgsYSksTWF0aC5hYnMoeCk+MSYmKHRoaXMubmY8OD90aGlzLmNlLT14LygyKk1hdGguUEkpOmEubGVuZ3RoPDUmJng+MTA/dGhpcy5jZS89Mjp0aGlzLmNlLT14PjA/MS43Oi0yLjMsdGhpcy5Mcz10aGlzLmNlKmwsdGhpcy54RCh0LGksZSxzKSl9d0QodCxpLGUscyl7Y29uc3Qgbj10aGlzLmNlLG89dGhpcy5McyxyPXRoaXMuS2M7bGV0IGw9bipNYXRoLmNvcyhlKk1hdGguUEkvMTgwKSxoPW8qTWF0aC5zaW4oZSpNYXRoLlBJLzE4MCk7Y29uc3QgZj1Qb2ludC5hKCksYT10LnRvQXJyYXkoKTtmb3IobGV0IG09MDttPGEubGVuZ3RoJiYoYVttXS5jZW50ZXJYPWwsYVttXS5jZW50ZXJZPWgsIShtPj1hLmxlbmd0aC0xKSk7bSsrKXRoaXMuYkQobCxoLGEsbSxzLGYpfHx0aGlzLmtEKGwsaCxhLG0scyxmKSxsPWYueCxoPWYueTtpZihQb2ludC5vKGYpLHRoaXMubmYrKyx0aGlzLm5mPjIzKXJldHVybjtjb25zdCBjPU1hdGguYXRhbjIoaCxsKTtsZXQgdT1zPT09MTA/dGhpcy5VeS1jOmMtdGhpcy5VeTt1PU1hdGguYWJzKHUpPE1hdGguYWJzKHUtMipNYXRoLlBJKT91OnUtMipNYXRoLlBJO2NvbnN0IGQ9dSoobitvKS8yO3RoaXMuS3kuZjMoZCxhKSxNYXRoLmFicyhkKT4xJiYodGhpcy5uZjw4P3RoaXMuY2UtPWQvKDIqTWF0aC5QSSk6dGhpcy5jZS09ZD4wPzEuNzotMi4zLHRoaXMuTHM9dGhpcy5jZSpyLHRoaXMud0QodCxpLGUscykpfWJEKHQsaSxlLHMsbixvKXtjb25zdCByPXRoaXMuQmgsbD10aGlzLmNlLGg9dGhpcy5McztsZXQgZj0wLGE9MDtjb25zdCBjPShlW3NdLndpZHRoK2VbcysxXS53aWR0aCkvMityO2xldCB1PSExO2lmKGk+PTAhPShuPT09MTApKXtpZihmPXQrYyxmPmwpe2lmKGY9dC1jLGY8LWwpcmV0dXJuIG8ueD1mLG8ueT1hLCExO3U9ITB9fWVsc2UgaWYoZj10LWMsZjwtbCl7aWYoZj10K2MsZj5sKXJldHVybiBvLng9ZixvLnk9YSwhMTt1PSEwfXJldHVybiBhPU1hdGguc3FydCgxLU1hdGgubWluKDEsZipmLyhsKmwpKSkqaCxpPDAhPT11JiYoYT0tYSksTWF0aC5hYnMoaS1hKT4oZVtzXS5oZWlnaHQrZVtzKzFdLmhlaWdodCkvMj8oby54PWYsby55PWEsITEpOihvLng9ZixvLnk9YSwhMCl9a0QodCxpLGUscyxuLG8pe2NvbnN0IHI9dGhpcy5CaCxsPXRoaXMuY2UsaD10aGlzLkxzO2xldCBmPTAsYT0wO2NvbnN0IGM9KGVbc10uaGVpZ2h0K2VbcysxXS5oZWlnaHQpLzIrcjtsZXQgdT0hMTtpZih0Pj0wIT0obj09PTEwKSl7aWYoYT1pLWMsYTwtaCl7aWYoYT1pK2MsYT5oKXJldHVybiBvLng9ZixvLnk9YSwhMTt1PSEwfX1lbHNlIGlmKGE9aStjLGE+aCl7aWYoYT1pLWMsYTwtaClyZXR1cm4gby54PWYsby55PWEsITE7dT0hMH1yZXR1cm4gZj1NYXRoLnNxcnQoMS1NYXRoLm1pbigxLGEqYS8oaCpoKSkpKmwsdDwwIT09dSYmKGY9LWYpLE1hdGguYWJzKHQtZik+KGVbc10ud2lkdGgrZVtzKzFdLndpZHRoKS8yPyhvLng9ZixvLnk9YSwhMSk6KG8ueD1mLG8ueT1hLCEwKX1jb21taXRMYXlvdXQoKXt0aGlzLmNvbW1pdE5vZGVzKCksdGhpcy5pc1JvdXRpbmcmJnRoaXMuY29tbWl0TGlua3MoKX1jb21taXROb2Rlcygpe2NvbnN0IHQ9dGhpcy5ncm91cCE9PW51bGwmJnRoaXMuZ3JvdXAuaGFzUGxhY2Vob2xkZXIoKSxpPXQ/dGhpcy5ncm91cC5sb2NhdGlvbi5jb3B5KCk6bnVsbDtsZXQgZT10aGlzLmFjdHVhbENlbnRlcjt0P2U9bmV3IFBvaW50KDAsMCk6KGUueD10aGlzLmFycmFuZ2VtZW50T3JpZ2luLngrdGhpcy5jZSxlLnk9dGhpcy5hcnJhbmdlbWVudE9yaWdpbi55K3RoaXMuTHMpO2NvbnN0IHM9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7bi54Kz1lLngsbi55Kz1lLnksbi5jb21taXQoKX1pZih0KXt0aGlzLmdyb3VwLmVuc3VyZUJvdW5kcygpO2NvbnN0IG49dGhpcy5ncm91cC5wb3NpdGlvbi5jb3B5KCksbz10aGlzLmdyb3VwLmxvY2F0aW9uLmNvcHkoKSxyPWkuc3VidHJhY3Qoby5zdWJ0cmFjdChuKSk7dGhpcy5ncm91cC5tb3ZlKHIpLHRoaXMuUU49ci5zdWJ0cmFjdChuKX19Y29tbWl0TGlua3MoKXtjb25zdCB0PXRoaXMubmV0d29yay5lZGdlcy5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl0LnZhbHVlLmNvbW1pdCgpfWlDKHQsaSxlLHMpe2NvbnN0IG49dGhpcy5wRDtpZihNYXRoLmFicyh0aGlzLktjLTEpPC4wMDEpcmV0dXJuIGUhPT12b2lkIDAmJnMhPT12b2lkIDA/cyp0OjIqTWF0aC5QSSp0O2NvbnN0IG89dD5pP01hdGguc3FydCh0KnQtaSppKS90Ok1hdGguc3FydChpKmktdCp0KS9pO2xldCByPTAsbD0wO2UhPT12b2lkIDAmJnMhPT12b2lkIDA/bD1zLyhuKzEpOmw9TWF0aC5QSS8oMioobisxKSk7bGV0IGg9MDtmb3IobGV0IGY9MDtmPD1uO2YrKyl7ZSE9PXZvaWQgMCYmcyE9PXZvaWQgMD9oPWUrZipzL246aD1mKk1hdGguUEkvKDIqbik7Y29uc3QgYT1NYXRoLnNpbihoKTtyKz1NYXRoLnNxcnQoMS1vKm8qYSphKSpsfXJldHVybiBlIT09dm9pZCAwJiZzIT09dm9pZCAwPyh0Pmk/dDppKSpyOjQqKHQ+aT90OmkpKnJ9aWsodCxpLGUscyl7bGV0IG49MDtyZXR1cm4gZSE9PXZvaWQgMCYmcyE9PXZvaWQgMD9uPXRoaXMuaUMoMSxpLGUscyk6bj10aGlzLmlDKDEsaSksdC9ufWVrKHQsaSxlLHMpe2lmKE1hdGguYWJzKHRoaXMuS2MtMSk8LjAwMSlyZXR1cm4gcy90O2NvbnN0IG49dD5pP01hdGguc3FydCh0KnQtaSppKS90Ok1hdGguc3FydChpKmktdCp0KS9pO2xldCBvPTA7Y29uc3Qgcj0yKk1hdGguUEkvKHRoaXMubmV0d29yay52ZXJ0ZXhlcy5jb3VudCo3MDApO3Q+aSYmKGUrPU1hdGguUEkvMik7Zm9yKGxldCBsPTA7O2wrKyl7Y29uc3QgaD1lK2wqcixmPU1hdGguc2luKGgpO2lmKG8rPSh0Pmk/dDppKSpNYXRoLnNxcnQoMS1uKm4qZipmKSpyLG8+PXMpcmV0dXJuIGwqcn19aDModCl7c3dpdGNoKHRoaXMuc29ydGluZyl7Y2FzZSAyMDpicmVhaztjYXNlIDIxOnQucmV2ZXJzZSgpO2JyZWFrO2Nhc2UgMjI6dC5zb3J0KHRoaXMuY29tcGFyZXIpO2JyZWFrO2Nhc2UgMjM6dC5zb3J0KHRoaXMuY29tcGFyZXIpLHQucmV2ZXJzZSgpO2JyZWFrO2Nhc2UgMjQ6cmV0dXJuIHRoaXMuYzModGhpcy51Myh0KSk7ZGVmYXVsdDpVLm4oXCJJbnZhbGlkIHNvcnRpbmcgdHlwZS5cIil9cmV0dXJuIHR9dTModCl7Y29uc3QgaT1bXTtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKylpLnB1c2goMCk7Y29uc3QgZT1uZXcgTGlzdDtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKyl7bGV0IG49LTEsbz0tMTtpZihzPT09MClmb3IobGV0IGE9MDthPHQubGVuZ3RoO2ErKyl7Y29uc3QgdT10LmVsdChhKS5lZGdlc0NvdW50O3U+biYmKG49dSxvPWEpfWVsc2UgZm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGM9aVthXTtjPm4mJihuPWMsbz1hKX1lLmFkZCh0LmVsdChvKSksaVtvXT0tMTtjb25zdCByPXQuZWx0KG8pO2xldCBsPTA7Y29uc3QgaD1yLnNvdXJjZUVkZ2VzO2Zvcig7aC5uZXh0KCk7KXtjb25zdCBjPWgudmFsdWUuZnJvbVZlcnRleDtsPXQuaW5kZXhPZihjKSwhKGw8MCkmJmlbbF0+PTAmJmlbbF0rK31jb25zdCBmPXIuZGVzdGluYXRpb25FZGdlcztmb3IoO2YubmV4dCgpOyl7Y29uc3QgYz1mLnZhbHVlLnRvVmVydGV4O2w9dC5pbmRleE9mKGMpLCEobDwwKSYmaVtsXT49MCYmaVtsXSsrfX1yZXR1cm4gZX1jMyh0KXtjb25zdCBpPVtdO2ZvcihsZXQgYz0wO2M8dC5sZW5ndGg7YysrKXtjb25zdCB1PXQuZWx0KGMpO2lbY109W107bGV0IGQ9MDtjb25zdCBtPXUuZGVzdGluYXRpb25FZGdlcztmb3IoO20ubmV4dCgpOyl7Y29uc3QgcD1tLnZhbHVlLnRvVmVydGV4O2Q9dC5pbmRleE9mKHApLGQhPT1jJiZpW2NdLmluZGV4T2YoZCk8MCYmaVtjXS5wdXNoKGQpfWNvbnN0IGc9dS5zb3VyY2VFZGdlcztmb3IoO2cubmV4dCgpOyl7Y29uc3QgcD1nLnZhbHVlLmZyb21WZXJ0ZXg7ZD10LmluZGV4T2YocCksZCE9PWMmJmlbY10uaW5kZXhPZihkKTwwJiZpW2NdLnB1c2goZCl9fWNvbnN0IGU9W107Zm9yKGxldCBjPTA7YzxpLmxlbmd0aDtjKyspZVtjXT0wO2NvbnN0IHM9W10sbj1bXSxvPVtdLHI9W10sbD1uZXcgTGlzdDtsZXQgaD0wO2ZvcihsZXQgYz0wO2M8aS5sZW5ndGg7YysrKXtjb25zdCB1PWlbY10ubGVuZ3RoO2lmKHU9PT0xKXtyLnB1c2goYyk7Y29udGludWV9aWYodT09PTApe2wuYWRkKHQuZWx0KGMpKTtjb250aW51ZX1pZihoPT09MCl7cy5wdXNoKGMpLGgrKztjb250aW51ZX1sZXQgZD0xLzAsbT0xLzAsZz0tMTtjb25zdCBwPVtdO2ZvcihsZXQgdz0wO3c8cy5sZW5ndGg7dysrKWlbc1t3XV0uaW5kZXhPZihzW3c9PT1zLmxlbmd0aC0xPzA6dysxXSk8MCYmcC5wdXNoKHc9PT1zLmxlbmd0aC0xPzA6dysxKTtpZihwLmxlbmd0aD09PTApZm9yKGxldCB3PTA7dzxzLmxlbmd0aDt3KyspcC5wdXNoKHcpO2ZvcihsZXQgdz0wO3c8cC5sZW5ndGg7dysrKXtjb25zdCB4PXBbd10saz10aGlzLmQzKGlbY10sbixvLGUseCxzKTtsZXQgYj0wO2ZvcihsZXQgUz0wO1M8aVtjXS5sZW5ndGg7UysrKXtjb25zdCBNPWlbY11bU10sQT1zLmluZGV4T2YoTSk7aWYoQT49MCl7Y29uc3QgQz1NYXRoLmFicyh4LShBPj14P0ErMTpBKSk7Yis9QzxzLmxlbmd0aCsxLUM/QzpzLmxlbmd0aCsxLUN9fWZvcihsZXQgUz0wO1M8bi5sZW5ndGg7UysrKXtsZXQgTT1lW25bU11dLEE9ZVtvW1NdXTtpZihNPj14JiZNKyssQT49eCYmQSsrLE0+QSl7Y29uc3QgQz1BO0E9TSxNPUN9QS1NPChzLmxlbmd0aCsyKS8yPT0oTTx4JiZ4PD1BKSYmYisrfShrPGR8fGs9PT1kJiZiPG0pJiYoZD1rLG09YixnPXgpfXMuc3BsaWNlKGcsMCxjKTtmb3IobGV0IHc9MDt3PHMubGVuZ3RoO3crKyllW3Nbd11dPXc7Zm9yKGxldCB3PTA7dzxpW2NdLmxlbmd0aDt3Kyspe2NvbnN0IHg9aVtjXVt3XTtzLmluZGV4T2YoeCk+PTAmJihuLnB1c2goYyksby5wdXNoKHgpKX1oKyt9bGV0IGY9ITE7Y29uc3QgYT1zLmxlbmd0aDtmb3IoOzspe2Y9ITA7Zm9yKGxldCBjPTA7YzxyLmxlbmd0aDtjKyspe2NvbnN0IHU9cltjXSxkPWlbdV1bMF0sbT1zLmluZGV4T2YoZCk7aWYobT49MCl7bGV0IGc9MDtmb3IobGV0IHA9MDtwPGlbZF0ubGVuZ3RoO3ArKyl7Y29uc3Qgdz1pW2RdW3BdLHg9cy5pbmRleE9mKHcpO2lmKHg8MHx8eD09PW0pY29udGludWU7Y29uc3Qgaz14Pm0/eC1tOm0teCxiPWEtaztnKz14PG0hPWs+Yj8xOi0xfXMuc3BsaWNlKGc8MD9tOm0rMSwwLHUpLHIuc3BsaWNlKGMsMSksYy0tfWVsc2UgZj0hMX1pZihmKWJyZWFrO3MucHVzaChyWzBdKSxyLnNwbGljZSgwLDEpfWZvcihsZXQgYz0wO2M8cy5sZW5ndGg7YysrKXtjb25zdCB1PXNbY107bC5hZGQodC5lbHQodSkpfXJldHVybiBsfWQzKHQsaSxlLHMsbixvKXtsZXQgcj0wO2ZvcihsZXQgbD0wO2w8aS5sZW5ndGg7bCsrKXtjb25zdCBoPWlbbF0sZj1lW2xdLGE9c1toXSxjPXNbZl07bGV0IHU9MCxkPTA7aWYoYTxjPyh1PWEsZD1jKToodT1jLGQ9YSksdTxuJiZuPD1kKWZvcihsZXQgbT0wO208dC5sZW5ndGg7bSsrKXtjb25zdCBnPXRbbV07by5pbmRleE9mKGcpPDB8fHU8c1tnXSYmc1tnXTxkfHx1PT09c1tnXXx8ZD09PXNbZ118fHIrK31lbHNlIGZvcihsZXQgbT0wO208dC5sZW5ndGg7bSsrKXtjb25zdCBnPXRbbV07by5pbmRleE9mKGcpPDB8fCEodTxzW2ddJiZzW2ddPGQpfHx1PT09c1tnXXx8ZD09PXNbZ118fHIrK319cmV0dXJuIHJ9Z2V0IHJhZGl1cygpe3JldHVybiB0aGlzLnBnfXNldCByYWRpdXModCl7dGhpcy5wZyE9PXQmJihVLmkodCxcIm51bWJlclwiLENpcmN1bGFyTGF5b3V0LFwicmFkaXVzXCIpLCh0PjB8fGlzTmFOKHQpKSYmKHRoaXMucGc9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBhc3BlY3RSYXRpbygpe3JldHVybiB0aGlzLnlnfXNldCBhc3BlY3RSYXRpbyh0KXt0aGlzLnlnIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsQ2lyY3VsYXJMYXlvdXQsXCJhc3BlY3RSYXRpb1wiKSx0PjAmJih0aGlzLnlnPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgc3RhcnRBbmdsZSgpe3JldHVybiB0aGlzLndnfXNldCBzdGFydEFuZ2xlKHQpe3RoaXMud2chPT10JiYoVS5pKHQsXCJudW1iZXJcIixDaXJjdWxhckxheW91dCxcInN0YXJ0QW5nbGVcIiksdGhpcy53Zz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgc3dlZXBBbmdsZSgpe3JldHVybiB0aGlzLlVjfXNldCBzd2VlcEFuZ2xlKHQpe3RoaXMuVWMhPT10JiYoVS5pKHQsXCJudW1iZXJcIixDaXJjdWxhckxheW91dCxcInN3ZWVwQW5nbGVcIiksdD4wJiZ0PD0zNjA/dGhpcy5VYz10OnRoaXMuVWM9MzYwLHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgYXJyYW5nZW1lbnQoKXtyZXR1cm4gdGhpcy5XaX1zZXQgYXJyYW5nZW1lbnQodCl7dGhpcy5XaSE9PXQmJihVLmoodCxDaXJjdWxhckFycmFuZ2VtZW50LFwiQ2lyY3VsYXJBcnJhbmdlbWVudFwiKSwodD09PTN8fHQ9PT0wfHx0PT09MXx8dD09PTIpJiYodGhpcy5XaT10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGRpcmVjdGlvbigpe3JldHVybiB0aGlzLlN9c2V0IGRpcmVjdGlvbih0KXt0aGlzLlMhPT10JiYoVS5qKHQsQ2lyY3VsYXJEaXJlY3Rpb24sXCJDaXJjdWxhckRpcmVjdGlvblwiKSwodD09PTEwfHx0PT09MTF8fHQ9PT0xMnx8dD09PTEzKSYmKHRoaXMuUz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IHNvcnRpbmcoKXtyZXR1cm4gdGhpcy5iZX1zZXQgc29ydGluZyh0KXt0aGlzLmJlIT09dCYmKFUuaih0LENpcmN1bGFyU29ydGluZyxcIkNpcmN1bGFyU29ydGluZ1wiKSx0aGlzLmJlPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBjb21wYXJlcigpe3JldHVybiB0aGlzLmtlfXNldCBjb21wYXJlcih0KXt0aGlzLmtlIT09dCYmKFUuUCh0LENpcmN1bGFyTGF5b3V0LFwiY29tcGFyZXJcIiksdGhpcy5rZT10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgc3BhY2luZygpe3JldHVybiB0aGlzLkFufXNldCBzcGFjaW5nKHQpe3RoaXMuQW4hPT10JiYoVS5pKHQsXCJudW1iZXJcIixDaXJjdWxhckxheW91dCxcInNwYWNpbmdcIiksdGhpcy5Bbj10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgbm9kZURpYW1ldGVyRm9ybXVsYSgpe3JldHVybiB0aGlzLnhnfXNldCBub2RlRGlhbWV0ZXJGb3JtdWxhKHQpe3RoaXMueGchPT10JiYoVS5qKHQsQ2lyY3VsYXJOb2RlRGlhbWV0ZXJGb3JtdWxhLFwiQ2lyY3VsYXJOb2RlRGlhbWV0ZXJGb3JtdWxhXCIpLCh0PT09MzB8fHQ9PT0zMSkmJih0aGlzLnhnPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgYWN0dWFsWFJhZGl1cygpe3JldHVybiB0aGlzLmNlfWdldCBhY3R1YWxZUmFkaXVzKCl7cmV0dXJuIHRoaXMuTHN9Z2V0IGFjdHVhbFNwYWNpbmcoKXtyZXR1cm4gdGhpcy5CaH1nZXQgYWN0dWFsQ2VudGVyKCl7cmV0dXJuIHRoaXMuUU59c3RhdGljIENvbnN0YW50U3BhY2luZz0wO3N0YXRpYyBDb25zdGFudERpc3RhbmNlPTE7c3RhdGljIENvbnN0YW50QW5nbGU9MjtzdGF0aWMgUGFja2VkPTM7c3RhdGljIENsb2Nrd2lzZT0xMDtzdGF0aWMgQ291bnRlcmNsb2Nrd2lzZT0xMTtzdGF0aWMgQmlkaXJlY3Rpb25hbExlZnQ9MTI7c3RhdGljIEJpZGlyZWN0aW9uYWxSaWdodD0xMztzdGF0aWMgRm9yd2FyZHM9MjA7c3RhdGljIFJldmVyc2U9MjE7c3RhdGljIEFzY2VuZGluZz0yMjtzdGF0aWMgRGVzY2VuZGluZz0yMztzdGF0aWMgT3B0aW1pemVkPTI0O3N0YXRpYyBQeXRoYWdvcmVhbj0zMDtzdGF0aWMgQ2lyY3VsYXI9MzF9Y2xhc3MgVmVydGV4QXJyYW5nZW1lbnR7R2M7b2Y7SGM7Y29uc3RydWN0b3IoKXt0aGlzLkdjPS0xLzAsdGhpcy5vZj1udWxsLHRoaXMuSGM9bnVsbH1hMyh0LGkpe2lmKHQ+MCYmdGhpcy5HYzwwfHxNYXRoLmFicyh0KTxNYXRoLmFicyh0aGlzLkdjKSYmISh0PDAmJnRoaXMuR2M+MCkpe3RoaXMuR2M9dCx0aGlzLm9mPVtdLHRoaXMuSGM9W107Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspdGhpcy5vZltlXT1pW2VdLmJvdW5kcy54LHRoaXMuSGNbZV09aVtlXS5ib3VuZHMueX19ZjModCxpKXtpZihNYXRoLmFicyh0KTxNYXRoLmFicyh0aGlzLkdjKSl7dGhpcy5HYz10LHRoaXMub2Y9W10sdGhpcy5IYz1bXTtmb3IobGV0IGU9MDtlPGkubGVuZ3RoO2UrKyl0aGlzLm9mW2VdPWlbZV0uYm91bmRzLngsdGhpcy5IY1tlXT1pW2VdLmJvdW5kcy55fX1jb21taXQodCl7aWYoISh0aGlzLm9mPT09bnVsbHx8dGhpcy5IYz09PW51bGwpKWZvcihsZXQgaT0wO2k8dGhpcy5vZi5sZW5ndGg7aSsrKXtjb25zdCBlPXQuZWx0KGkpO2UueD10aGlzLm9mW2ldLGUueT10aGlzLkhjW2ldfX19Y2xhc3MgQ2lyY3VsYXJOZXR3b3JrIGV4dGVuZHMgTGF5b3V0TmV0d29ya3tjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KX1jcmVhdGVWZXJ0ZXgoKXtyZXR1cm4gbmV3IENpcmN1bGFyVmVydGV4KHRoaXMpfWNyZWF0ZUVkZ2UoKXtyZXR1cm4gbmV3IENpcmN1bGFyRWRnZSh0aGlzKX19Y2xhc3MgQ2lyY3VsYXJWZXJ0ZXggZXh0ZW5kcyBMYXlvdXRWZXJ0ZXh7U287c2s7Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5Tbz1OYU4sdGhpcy5zaz1OYU59VmgodCl7Y29uc3QgaT10aGlzLm5ldHdvcms7aWYoaT09PW51bGwpcmV0dXJuIE5hTjtjb25zdCBlPWkubGF5b3V0O2lmKGU9PT1udWxsKXJldHVybiBOYU47aWYoZS5hcnJhbmdlbWVudD09PTMpe2lmKGUubm9kZURpYW1ldGVyRm9ybXVsYT09PTMxKXJldHVybiB0aGlzLlNvPU1hdGgubWF4KHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpLHRoaXMuU287e2NvbnN0IHM9TWF0aC5hYnMoTWF0aC5zaW4odCkpLG49TWF0aC5hYnMoTWF0aC5jb3ModCkpO3JldHVybiBzPT09MD90aGlzLndpZHRoOm49PT0wP3RoaXMuaGVpZ2h0Oih0aGlzLlNvPU1hdGgubWluKHRoaXMuaGVpZ2h0L3MsdGhpcy53aWR0aC9uKSx0aGlzLlNvKX19ZWxzZSByZXR1cm4gZS5ub2RlRGlhbWV0ZXJGb3JtdWxhPT09MzE/KHRoaXMuU289TWF0aC5tYXgodGhpcy53aWR0aCx0aGlzLmhlaWdodCksdGhpcy5Tbyk6KHRoaXMuU289TWF0aC5zcXJ0KHRoaXMud2lkdGgqdGhpcy53aWR0aCt0aGlzLmhlaWdodCp0aGlzLmhlaWdodCksdGhpcy5Tbyl9Z2V0IGRpYW1ldGVyKCl7cmV0dXJuIHRoaXMuU299c2V0IGRpYW1ldGVyKHQpe3RoaXMuU28hPT10JiYoVS5pKHQsXCJudW1iZXJcIixDaXJjdWxhclZlcnRleCxcImRpYW1ldGVyXCIpLHRoaXMuU289dCl9Z2V0IGFjdHVhbEFuZ2xlKCl7cmV0dXJuIHRoaXMuc2t9c2V0IGFjdHVhbEFuZ2xlKHQpe3RoaXMuc2shPT10JiYoVS5pKHQsXCJudW1iZXJcIixDaXJjdWxhclZlcnRleCxcImFjdHVhbEFuZ2xlXCIpLHRoaXMuc2s9dCl9fWNsYXNzIENpcmN1bGFyRWRnZSBleHRlbmRzIExheW91dEVkZ2V7Y29uc3RydWN0b3IodCl7c3VwZXIodCl9fWNsYXNzIEZvcmNlRGlyZWN0ZWRMYXlvdXQgZXh0ZW5kcyBMYXlvdXR7V3k7emg7VHM7Ymc7Rm47QmU7a2c7U2c7TWc7cWM7UGc7Tmc7V2M7amM7dmM7SmM7Q2c7QWc7JGM7cmY7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLld5PTAsdGhpcy56aD0wLHRoaXMuVHM9bmV3IFNpemUoMTAwLDEwMCkucCgpLHRoaXMuYmc9ITEsdGhpcy5Gbj0hMCx0aGlzLkJlPSExLHRoaXMua2c9MTAwLHRoaXMuU2c9MzAwLHRoaXMuTWc9MSx0aGlzLnFjPTFlMyx0aGlzLlBnPTEwLHRoaXMuTmc9TWF0aCx0aGlzLldjPS4wNSx0aGlzLmpjPTUwLHRoaXMudmM9MTUwLHRoaXMuSmM9MCx0aGlzLkNnPTEwLHRoaXMuQWc9NSx0aGlzLiRjPU5hTix0aGlzLnJmPTEwLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1jbG9uZVByb3RlY3RlZCh0KXtzdXBlci5jbG9uZVByb3RlY3RlZCh0KSx0LlRzLmModGhpcy5UcyksdC5iZz10aGlzLmJnLHQuRm49dGhpcy5Gbix0LkJlPXRoaXMuQmUsdC5rZz10aGlzLmtnLHQuU2c9dGhpcy5TZyx0Lk1nPXRoaXMuTWcsdC5xYz10aGlzLnFjLHQuUGc9dGhpcy5QZyx0Lk5nPXRoaXMuTmcsdC5XYz10aGlzLldjLHQuamM9dGhpcy5qYyx0LnZjPXRoaXMudmMsdC5KYz10aGlzLkpjLHQuQ2c9dGhpcy5DZyx0LkFnPXRoaXMuQWcsdC4kYz10aGlzLiRjLHQucmY9dGhpcy5yZn1jcmVhdGVOZXR3b3JrKCl7cmV0dXJuIG5ldyBGb3JjZURpcmVjdGVkTmV0d29yayh0aGlzKX1kb0xheW91dCh0KXtEZWJ1ZyYmdD09PW51bGwmJlUubihcIkxheW91dC5kb0xheW91dChjb2xsZWN0aW9uKSBhcmd1bWVudCBtdXN0IG5vdCBiZSBudWxsIGJ1dCBhIERpYWdyYW0sIGEgR3JvdXAsIG9yIGFuIEl0ZXJhYmxlIG9mIFBhcnRzXCIpLHRoaXMubmV0d29yaz10aGlzLm1ha2VOZXR3b3JrKHQpO2xldCBpPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtjb25zdCBlPXRoaXMubWF4SXRlcmF0aW9ucztpZih0aGlzLm5ldHdvcmsudmVydGV4ZXMuY291bnQ+MCl7Zm9yKHRoaXMubmV0d29yay5kZWxldGVTZWxmRWRnZXMoKSxpPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtpLm5leHQoKTspe2NvbnN0IG89aS52YWx1ZTtvLmNoYXJnZT10aGlzLmVsZWN0cmljYWxDaGFyZ2Uobyksby5tYXNzPXRoaXMuZ3Jhdml0YXRpb25hbE1hc3Mobyl9Y29uc3Qgcz10aGlzLm5ldHdvcmsuZWRnZXMuaXRlcmF0b3I7Zm9yKDtzLm5leHQoKTspe2NvbnN0IG89cy52YWx1ZTtvLnN0aWZmbmVzcz10aGlzLnNwcmluZ1N0aWZmbmVzcyhvKSxvLmxlbmd0aD10aGlzLnNwcmluZ0xlbmd0aChvKX1pZih0aGlzLmVDKCksdGhpcy56aD0wLHRoaXMubmVlZHNQcmVsYXlvdXQoKSl7Y29uc3Qgbz10aGlzLm5ldHdvcmsscj1vLnNwbGl0SW50b1N1Yk5ldHdvcmtzKCExKTtsZXQgbD1yLml0ZXJhdG9yO2Zvcig7bC5uZXh0KCk7KXtjb25zdCBoPWwudmFsdWU7dGhpcy5kb0Nvbm5lY3RlZFN1Ym5ldExheW91dChoKX1mb3IobD1yLml0ZXJhdG9yLHRoaXMuZzMobCxvKSxsPXIuaXRlcmF0b3I7bC5uZXh0KCk7KXtjb25zdCBoPWwudmFsdWUsZj1oLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7Zi5uZXh0KCk7KXtjb25zdCBjPWYudmFsdWU7by5hZGRWZXJ0ZXgoYyl9Y29uc3QgYT1oLmVkZ2VzLml0ZXJhdG9yO2Zvcig7YS5uZXh0KCk7KXtjb25zdCBjPWEudmFsdWU7by5hZGRFZGdlKGMpfX19ZWxzZSB0aGlzLlNEKHRoaXMubmV0d29yayx0aGlzLm1heEl0ZXJhdGlvbnMpO3RoaXMudXBkYXRlUGFydHMoKX10aGlzLm1heEl0ZXJhdGlvbnM9ZSx0aGlzLmlzVmFsaWRMYXlvdXQ9ITB9bmVlZHNQcmVsYXlvdXQoKXtpZih0aGlzLm5ldHdvcms9PT1udWxsfHx0aGlzLm5ldHdvcmsudmVydGV4ZXMuY291bnQ8MylyZXR1cm4hMTtsZXQgdD0wLGk9MDtjb25zdCBlPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5maXJzdCgpLmJvdW5kcyxzPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlLG89bi5ib3VuZHM7aWYoaXNOYU4obi54KXx8aXNOYU4obi55KXx8by5pbnRlcnNlY3RzUmVjdChlKSYmKHQrKyx0PjIpKXJldHVybiEwO2lmKGk+MTApcmV0dXJuITE7aSsrfXJldHVybiExfWRvQ29ubmVjdGVkU3VibmV0TGF5b3V0KHQpe2xldCBpPXQudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGw9aS52YWx1ZTtsLmhpZXJhcmNoaWNhbFZlcnRleGVzLmFkZChsKX1sZXQgZT10LHM9dGhpcy4kYztpZihpc05hTihzKSYmKHM9dC5lZGdlcy5jb3VudC90LnZlcnRleGVzLmNvdW50KSxzPHQudmVydGV4ZXMuY291bnQpZm9yKDtlLnZlcnRleGVzLmNvdW50Pk1hdGgubWF4KDEwMCxNYXRoLnNxcnQocyp0LnZlcnRleGVzLmNvdW50KSk7KWU9dGhpcy5jb2Fyc2VuTmV0d29yayhlKTtsZXQgbj0wO2k9ZS52ZXJ0ZXhlcy5pdGVyYXRvcjtsZXQgbz10aGlzLnJhbmRvbU51bWJlckdlbmVyYXRvcjtmb3Iobz09PW51bGwmJih0aGlzLnJhbmRvbU51bWJlckdlbmVyYXRvcj1vPW5ldyBSYW5kb21OdW1iZXJHZW5lcmF0b3IoMCkpO2kubmV4dCgpOyl7aS52YWx1ZS5pZEluQ2x1c3Rlcj1uKys7Y29uc3QgbD0xMCooby5yYW5kb20oKS0uNSksaD0xMCooby5yYW5kb20oKS0uNSk7dGhpcy5pc0ZpeGVkKGkudmFsdWUpfHwoaS52YWx1ZS54PWwsaS52YWx1ZS55PWgpO2NvbnN0IGY9aS52YWx1ZS5oaWVyYXJjaGljYWxWZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO2YubmV4dCgpOyl0aGlzLmlzRml4ZWQoZi52YWx1ZSl8fChmLnZhbHVlLng9bCxmLnZhbHVlLnk9aCl9Y29uc3Qgcj10aGlzLmNvbXB1dGVQYWlyd2lzZURpc3RhbmNlcyhlKTt0aGlzLm0zKGUscix0aGlzLm1heFByZWxheW91dEl0ZXJhdGlvbnMsdC52ZXJ0ZXhlcy5jb3VudCksdGhpcy5TRCh0LHRoaXMubWF4SXRlcmF0aW9ucyl9Y29tcHV0ZVBhaXJ3aXNlRGlzdGFuY2VzKHQpe2NvbnN0IGk9dC52ZXJ0ZXhlcy5jb3VudCxlPW5ldyBBcnJheShpKTtmb3IobGV0IHI9MDtyPGk7cisrKWVbcl09bmV3IEFycmF5KGkpLmZpbGwoLTEpLGVbcl1bcl09MDtjb25zdCBzPXQudmVydGV4ZXMuaXRlcmF0b3I7bGV0IG49bmV3IE1hcCxvPVtdO2Zvcig7cy5uZXh0KCk7KXtjb25zdCByPXMudmFsdWU7Zm9yKG89W3JdLG49bmV3IE1hcCxuLnNldChyLmlkSW5DbHVzdGVyLDApO28ubGVuZ3RoPjA7KXtjb25zdCBsPW8uc2hpZnQoKSxoPWwudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtoLm5leHQoKTspe2NvbnN0IGY9aC52YWx1ZTtuLmhhcyhmLmlkSW5DbHVzdGVyKXx8KG4uc2V0KGYuaWRJbkNsdXN0ZXIsbi5nZXQobC5pZEluQ2x1c3RlcikrMSksby5wdXNoKGYpKX19Zm9yKGxldCBsPTA7bDxpO2wrKyl7Y29uc3QgaD1NYXRoLm1pbihlW3IuaWRJbkNsdXN0ZXJdW2xdLGVbbF1bci5pZEluQ2x1c3Rlcl0pLGY9bi5nZXQobCk7KGg8MHx8ZjxoKSYmKGVbci5pZEluQ2x1c3Rlcl1bbF09ZixlW2xdW3IuaWRJbkNsdXN0ZXJdPWYpfX1yZXR1cm4gZX1jb2Fyc2VuTmV0d29yayh0KXtjb25zdCBpPXRoaXMuY3JlYXRlTmV0d29yaygpLGU9bmV3IE1hcDtsZXQgcz0wLG49dC52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO24ubmV4dCgpOyluLnZhbHVlLmlkSW5DbHVzdGVyPXMrKztmb3Iobj10LnZlcnRleGVzLml0ZXJhdG9yO24ubmV4dCgpOyl7Y29uc3Qgcj1uLnZhbHVlO2lmKGUuaGFzKHIuaWRJbkNsdXN0ZXIpKWNvbnRpbnVlO2xldCBsPU51bWJlci5NQVhfU0FGRV9JTlRFR0VSLGg9bnVsbDtjb25zdCBmPXIudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtmLm5leHQoKTspe2NvbnN0IGM9Zi52YWx1ZTtlLmhhcyhjLmlkSW5DbHVzdGVyKXx8Yy5oaWVyYXJjaGljYWxWZXJ0ZXhlcy5sZW5ndGg8bCYmKGw9Yy5oaWVyYXJjaGljYWxWZXJ0ZXhlcy5sZW5ndGgsaD1jKX1jb25zdCBhPWkuY3JlYXRlVmVydGV4KCk7YS5oaWVyYXJjaGljYWxWZXJ0ZXhlcy5hZGRBbGwoci5oaWVyYXJjaGljYWxWZXJ0ZXhlcyksaCE9bnVsbCYmYS5oaWVyYXJjaGljYWxWZXJ0ZXhlcy5hZGRBbGwoaC5oaWVyYXJjaGljYWxWZXJ0ZXhlcyksZS5zZXQoci5pZEluQ2x1c3RlcixhKSxoIT1udWxsJiZlLnNldChoLmlkSW5DbHVzdGVyLGEpLGkuYWRkVmVydGV4KGEpfWNvbnN0IG89dC5lZGdlcy5pdGVyYXRvcjtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlLGw9ZS5nZXQoci5mcm9tVmVydGV4LmlkSW5DbHVzdGVyKSxoPWUuZ2V0KHIudG9WZXJ0ZXguaWRJbkNsdXN0ZXIpO2lmKGw9PT1oKWNvbnRpbnVlO2NvbnN0IGY9aS5jcmVhdGVFZGdlKCk7Zi5mcm9tVmVydGV4PWx8fG51bGwsZi50b1ZlcnRleD1ofHxudWxsLGkuYWRkRWRnZShmKX1yZXR1cm4gaX1Fdyh0LGkpe2xldCBlPSEwO2NvbnN0IHM9dC52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbj1zLnZhbHVlO2U/KGU9ITEsaS5zZXQobi5ib3VuZHMpKTppLnVuaW9uUmVjdChuLmJvdW5kcyl9cmV0dXJuIGl9ZzModCxpKXtEZWJ1ZyYmVS5lKGksRm9yY2VEaXJlY3RlZE5ldHdvcmssRm9yY2VEaXJlY3RlZExheW91dCxcImFycmFuZ2VDb25uZWN0ZWRHcmFwaHM6c2luZ2xldG9uc1wiKTtjb25zdCBlPXRoaXMuYXJyYW5nZW1lbnRTcGFjaW5nLHM9dC5jb3VudDtsZXQgbj0hMCxvPTAscj0wO2NvbnN0IGw9VS5sdCgpO2ZvcihsZXQgYz0wO2M8cytpLnZlcnRleGVzLmNvdW50KzI7YysrKWxbY109bnVsbDtsZXQgaD0wO3QucmVzZXQoKTtjb25zdCBmPVJlY3QuYSgpO2xldCBhO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBjPXQudmFsdWU7aWYodGhpcy5FdyhjLGYpLG4pbj0hMSxvPWYueCtmLndpZHRoLzIscj1mLnkrZi5oZWlnaHQvMixsWzBdPW5ldyBQb2ludChmLngrZi53aWR0aCtlLndpZHRoLGYueSksbFsxXT1uZXcgUG9pbnQoZi54LGYueStmLmhlaWdodCtlLmhlaWdodCksaD0yO2Vsc2V7Y29uc3QgdT10aGlzLk1EKGwsaCxvLHIsZi53aWR0aCxmLmhlaWdodCxlKSxkPWxbdV0sbT1uZXcgUG9pbnQoZC54K2Yud2lkdGgrZS53aWR0aCxkLnkpLGc9bmV3IFBvaW50KGQueCxkLnkrZi5oZWlnaHQrZS5oZWlnaHQpO3UrMTxoJiZsLnNwbGljZSh1KzEsMCxudWxsKSxsW3VdPW0sbFt1KzFdPWcsaCsrO2NvbnN0IHA9ZC54LWYueCx3PWQueS1mLnk7Zm9yKGE9Yy52ZXJ0ZXhlcy5pdGVyYXRvcjthLm5leHQoKTspe2NvbnN0IHg9YS52YWx1ZTt0aGlzLmlzRml4ZWQoeCl8fCh4LmNlbnRlclgrPXAseC5jZW50ZXJZKz13KX19fWZvcihSZWN0Lm8oZiksYT1pLnZlcnRleGVzLml0ZXJhdG9yO2EubmV4dCgpOyl7Y29uc3QgYz1hLnZhbHVlLHU9Yy5ib3VuZHM7aWYoaDwyKXtvPXUueCt1LndpZHRoLzIscj11LnkrdS5oZWlnaHQvMixsWzBdPW5ldyBQb2ludCh1LngrdS53aWR0aCtlLndpZHRoLHUueSksbFsxXT1uZXcgUG9pbnQodS54LHUueSt1LmhlaWdodCtlLmhlaWdodCksaD0yO2NvbnRpbnVlfWNvbnN0IGQ9dGhpcy5NRChsLGgsbyxyLHUud2lkdGgsdS5oZWlnaHQsZSksbT1sW2RdLGc9bmV3IFBvaW50KG0ueCt1LndpZHRoK2Uud2lkdGgsbS55KSxwPW5ldyBQb2ludChtLngsbS55K3UuaGVpZ2h0K2UuaGVpZ2h0KTtkKzE8aCYmbC5zcGxpY2UoZCsxLDAsbnVsbCksbFtkXT1nLGxbZCsxXT1wLGgrKyx0aGlzLmlzRml4ZWQoYyl8fChjLmNlbnRlclg9bS54K2Mud2lkdGgvMixjLmNlbnRlclk9bS55K2MuaGVpZ2h0LzIpfVUudHQobCl9TUQodCxpLGUscyxuLG8scil7bGV0IGw9OWUxOSxoPS0xO3Q6Zm9yKGxldCBmPTA7ZjxpO2YrKyl7Y29uc3QgYT10W2ZdLGM9YS54LWUsdT1hLnktcyxkPWMqYyt1KnU7aWYoZDxsKXtmb3IobGV0IG09Zi0xO20+PTA7bS0tKWlmKHRbbV0ueT5hLnkmJnRbbV0ueC1hLng8bityLndpZHRoKWNvbnRpbnVlIHQ7Zm9yKGxldCBtPWYrMTttPGk7bSsrKWlmKHRbbV0ueD5hLngmJnRbbV0ueS1hLnk8bytyLmhlaWdodCljb250aW51ZSB0O2g9ZixsPWR9fXJldHVybiBofWVDKCl7aWYoIXRoaXMuY29tbWVudHMpcmV0dXJuO2NvbnN0IHQ9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBpPXQudmFsdWU7dGhpcy5hZGRDb21tZW50cyhpKX19YWRkQ29tbWVudHModCl7Y29uc3QgaT10Lm5vZGU7aWYoaSE9PW51bGwpe2NvbnN0IGU9aS5maW5kTm9kZXNDb25uZWN0ZWQoKTtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO2lmKHMuY2F0ZWdvcnkhPT1cIkNvbW1lbnRcInx8IXMuaXNWaXNpYmxlKCkpY29udGludWU7bGV0IG49dGhpcy5uZXR3b3JrLmZpbmRWZXJ0ZXgocyk7bj09PW51bGwmJihuPXRoaXMubmV0d29yay5hZGROb2RlKHMpKSxuLmNoYXJnZT10aGlzLmRlZmF1bHRDb21tZW50RWxlY3RyaWNhbENoYXJnZTtsZXQgbz1udWxsO2NvbnN0IHI9bi5kZXN0aW5hdGlvbkVkZ2VzO2Zvcig7ci5uZXh0KCk7KXtjb25zdCBsPXIudmFsdWU7aWYobC50b1ZlcnRleD09PXQpe289bDticmVha319aWYobz09PW51bGwpe2NvbnN0IGw9bi5zb3VyY2VFZGdlcztmb3IoO2wubmV4dCgpOyl7Y29uc3QgaD1sLnZhbHVlO2lmKGguZnJvbVZlcnRleD09PXQpe289aDticmVha319fW89PT1udWxsJiYobz10aGlzLm5ldHdvcmsubGlua1ZlcnRleGVzKHQsbixudWxsKSksby5sZW5ndGg9dGhpcy5kZWZhdWx0Q29tbWVudFNwcmluZ0xlbmd0aH19fVBEKHQsaSl7Y29uc3QgZT10LmJvdW5kcyxzPWUueCxuPWUueSxvPWUud2lkdGgscj1lLmhlaWdodCxsPWkuYm91bmRzLGg9bC54LGY9bC55LGE9bC53aWR0aCxjPWwuaGVpZ2h0O2lmKHMrbzxoKWlmKG4+ZitjKXtjb25zdCB1PXMrby1oLGQ9bi1mLWM7cmV0dXJuIEdlby5Edyh1KnUrZCpkKX1lbHNlIGlmKG4rcjxmKXtjb25zdCB1PXMrby1oLGQ9bityLWY7cmV0dXJuIEdlby5Edyh1KnUrZCpkKX1lbHNlIHJldHVybiBoLShzK28pO2Vsc2UgaWYocz5oK2EpaWYobj5mK2Mpe2NvbnN0IHU9cy1oLWEsZD1uLWYtYztyZXR1cm4gR2VvLkR3KHUqdStkKmQpfWVsc2UgaWYobityPGYpe2NvbnN0IHU9cy1oLWEsZD1uK3ItZjtyZXR1cm4gR2VvLkR3KHUqdStkKmQpfWVsc2UgcmV0dXJuIHMtKGgrYSk7ZWxzZSByZXR1cm4gbj5mK2M/bi0oZitjKTpuK3I8Zj9mLShuK3IpOi4xfVNEKHQsaSl7RGVidWcmJlUucihpLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJwZXJmb3JtSXRlcmF0aW9uczpudW1cIik7Y29uc3QgZT10aGlzLnpoK2k7Zm9yKDt0aGlzLnpoPGUmJih0aGlzLnpoKyssISF0aGlzLnAzKHQpKTspO31wMyh0KXtjb25zdCBpPXQudmVydGV4ZXMudG9BcnJheSgpO2lmKGkubGVuZ3RoPD0wKXJldHVybiExO2NvbnN0IGU9aVswXTtlLmZvcmNlWD0wLGUuZm9yY2VZPTA7bGV0IHM9ZS5jZW50ZXJYLG49cyxvPWUuY2VudGVyWSxyPW87Zm9yKGxldCBtPTE7bTxpLmxlbmd0aDttKyspe2NvbnN0IGc9aVttXTtnLmZvcmNlWD0wLGcuZm9yY2VZPTA7Y29uc3QgcD1nLmNlbnRlclgsdz1nLmNlbnRlclk7cz1NYXRoLm1pbihzLHApLG49TWF0aC5tYXgobixwKSxvPU1hdGgubWluKG8sdykscj1NYXRoLm1heChyLHcpfWNvbnN0IGw9bi1zPnItbztsP2kuc29ydCgobSxnKT0+bT09PW51bGx8fGc9PT1udWxsfHxtPT09Zz8wOm0uY2VudGVyWC1nLmNlbnRlclgpOmkuc29ydCgobSxnKT0+bT09PW51bGx8fGc9PT1udWxsfHxtPT09Zz8wOm0uY2VudGVyWS1nLmNlbnRlclkpO2NvbnN0IGg9dGhpcy5xYztsZXQgZj0wLGE9MCxjPTA7Zm9yKGxldCBtPTA7bTxpLmxlbmd0aDttKyspe2NvbnN0IGc9aVttXSxwPWcuYm91bmRzLHc9Zy5mb2N1cyx4PXAueCt3Lngsaz1wLnkrdy55O2E9Zy5jaGFyZ2UqdGhpcy5lbGVjdHJpY2FsRmllbGRYKHgsayksYz1nLmNoYXJnZSp0aGlzLmVsZWN0cmljYWxGaWVsZFkoeCxrKSxhKz1nLm1hc3MqdGhpcy5ncmF2aXRhdGlvbmFsRmllbGRYKHgsayksYys9Zy5tYXNzKnRoaXMuZ3Jhdml0YXRpb25hbEZpZWxkWSh4LGspLGcuZm9yY2VYKz1hLGcuZm9yY2VZKz1jO2ZvcihsZXQgYj1tKzE7YjxpLmxlbmd0aDtiKyspe2NvbnN0IFM9aVtiXTtpZighdGhpcy5zaG91bGRJbnRlcmFjdChnLFMpfHxiPT09bSljb250aW51ZTtjb25zdCBNPVMuYm91bmRzLEE9Uy5mb2N1cyxDPU0ueCtBLngsUD1NLnkrQS55O2lmKHgtQz5ofHxDLXg+aCl7aWYobClicmVhaztjb250aW51ZX1pZihrLVA+aHx8UC1rPmgpe2lmKCFsKWJyZWFrO2NvbnRpbnVlfWNvbnN0IE49dGhpcy5QRChnLFMpLFQ9MipnLmNoYXJnZSxMPTIqUy5jaGFyZ2U7aWYoTj4xKWY9VCpMLyhOKk4pLGE9ZiooeC1DKS9OLGM9Ziooay1QKS9OO2Vsc2V7bGV0IEQ9dGhpcy5yYW5kb21OdW1iZXJHZW5lcmF0b3I7RD09PW51bGwmJih0aGlzLnJhbmRvbU51bWJlckdlbmVyYXRvcj1EPW5ldyBSYW5kb21OdW1iZXJHZW5lcmF0b3IoMCkpO2NvbnN0IEY9RC5yYW5kb20oKSxJPUQucmFuZG9tKCk7aWYoeD5DKWE9TWF0aC5hYnMoUy5ib3VuZHMucmlnaHQtZy5ib3VuZHMueCksYT1UKkwqKDErYSkqRjtlbHNlIGlmKHg8QylhPU1hdGguYWJzKFMuYm91bmRzLngtZy5ib3VuZHMucmlnaHQpLGE9LShUKkwpKigxK2EpKkY7ZWxzZXtjb25zdCBSPU1hdGgubWF4KFMud2lkdGgsZy53aWR0aCk7YT1UKkwqKCgxK1IpKkYtUi8yKX1pZihrPlApYz1NYXRoLmFicyhTLmJvdW5kcy5ib3R0b20tZy5ib3VuZHMueSksYz1UKkwqKDErYykqSTtlbHNlIGlmKHg8QyljPU1hdGguYWJzKFMuYm91bmRzLnktZy5ib3VuZHMuYm90dG9tKSxjPS0oVCpMKSooMStjKSpJO2Vsc2V7Y29uc3QgUj1NYXRoLm1heChTLmhlaWdodCxnLmhlaWdodCk7Yz1UKkwqKCgxK1IpKkktUi8yKX19Zy5mb3JjZVgrPWEsZy5mb3JjZVkrPWMsUy5mb3JjZVgtPWEsUy5mb3JjZVktPWN9fWNvbnN0IHU9dC5lZGdlcy5pdGVyYXRvcjtmb3IoO3UubmV4dCgpOyl7Y29uc3QgbT11LnZhbHVlLGc9bS5mcm9tVmVydGV4LHA9bS50b1ZlcnRleCx3PWcuYm91bmRzLHg9Zy5mb2N1cyxrPXcueCt4LngsYj13LnkreC55LFM9cC5ib3VuZHMsTT1wLmZvY3VzLEE9Uy54K00ueCxDPVMueStNLnksUD10aGlzLlBEKGcscCk7UD4xJiYoZj0uMSptLnN0aWZmbmVzcyooUC1tLmxlbmd0aCksYT1mKi41KihnLndpZHRoK3AuaGVpZ2h0KSooay1BKS9QLGM9ZiouNSooZy53aWR0aCtwLmhlaWdodCkqKGItQykvUCksZy5mb3JjZVgtPWEsZy5mb3JjZVktPWMscC5mb3JjZVgrPWEscC5mb3JjZVkrPWN9bGV0IGQ9MDtmb3IobGV0IG09MDttPGkubGVuZ3RoO20rKyl7Y29uc3QgZz1pW21dO3RoaXMuaXNGaXhlZChnKT90aGlzLm1vdmVGaXhlZFZlcnRleChnKTpkPU1hdGgubWF4KGQsdGhpcy5tb3ZlVmVydGV4KGcpfHwwKX1yZXR1cm4gZD50aGlzLmVwc2lsb25EaXN0YW5jZSp0aGlzLmVwc2lsb25EaXN0YW5jZX1tMyh0LGksZSxzKXtEZWJ1ZyYmVS5yKGUsRm9yY2VEaXJlY3RlZExheW91dCxcInBlcmZvcm1JdGVyYXRpb25zOm51bVwiKTtjb25zdCBuPXRoaXMuemgrZSxvPU1hdGguc3FydChzKTt0aGlzLld5PXRoaXMucmYqdC52ZXJ0ZXhlcy5jb3VudDtjb25zdCByPXQudmVydGV4ZXMudG9BcnJheSgpO2xldCBsPTAsaD0wLGY9MDtmb3IoO3RoaXMuemg8bjspe3RoaXMuemgrKyxoPWwsbD0wO2ZvcihsZXQgYT0wO2E8ci5sZW5ndGg7YSsrKXtyW2FdLmZvcmNlWD0wLHJbYV0uZm9yY2VZPTA7Zm9yKGxldCB1PTA7dTxyLmxlbmd0aDt1Kyspe2lmKGE9PT11KWNvbnRpbnVlO2NvbnN0IGQ9TWF0aC5zcXJ0KChyW2FdLmNlbnRlclgtclt1XS5jZW50ZXJYKSoqMisoclthXS5jZW50ZXJZLXJbdV0uY2VudGVyWSkqKjIpLG09aVtyW2FdLmlkSW5DbHVzdGVyXVtyW3VdLmlkSW5DbHVzdGVyXSxnPShkLXRoaXMucmYqbyptKS9kO3JbYV0uZm9yY2VYKz1nKihyW3VdLngtclthXS54KSxyW2FdLmZvcmNlWSs9Zyooclt1XS55LXJbYV0ueSl9Y29uc3QgYz1NYXRoLnNxcnQoclthXS5mb3JjZVgqclthXS5mb3JjZVgrclthXS5mb3JjZVkqclthXS5mb3JjZVkpO2lmKGM+MCl7clthXS5mb3JjZVg9dGhpcy5XeSpyW2FdLmZvcmNlWC9jLHJbYV0uZm9yY2VZPXRoaXMuV3kqclthXS5mb3JjZVkvYyx0aGlzLmlzRml4ZWQoclthXSl8fChyW2FdLngrPXJbYV0uZm9yY2VYLHJbYV0ueSs9clthXS5mb3JjZVkpO2NvbnN0IHU9clthXS5oaWVyYXJjaGljYWxWZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO3UubmV4dCgpOyl7Y29uc3QgZD11LnZhbHVlO3RoaXMuaXNGaXhlZChkKXx8KGQuY2VudGVyWCs9clthXS5mb3JjZVgsZC5jZW50ZXJZKz1yW2FdLmZvcmNlWSl9fWwrPWMqY31pZihsPj1oKXtpZihmKyssZj49NSlicmVha31lbHNlIGY9MDt0aGlzLld5Kj0uOTV9fW1vdmVWZXJ0ZXgodCl7bGV0IGk9dC5mb3JjZVgsZT10LmZvcmNlWTtjb25zdCBzPXRoaXMubW92ZUxpbWl0O3JldHVybiBpPC1zP2k9LXM6aT5zJiYoaT1zKSxlPC1zP2U9LXM6ZT5zJiYoZT1zKSx0LmNlbnRlclgrPWksdC5jZW50ZXJZKz1lLGkqaStlKmV9c2hvdWxkSW50ZXJhY3QodCxpKXtyZXR1cm4hMH1tb3ZlRml4ZWRWZXJ0ZXgodCl7fWNvbW1pdExheW91dCgpe3RoaXMuankoKSx0aGlzLmNvbW1pdE5vZGVzKCksdGhpcy5pc1JvdXRpbmcmJnRoaXMuY29tbWl0TGlua3MoKX1qeSgpe2lmKCF0aGlzLnNldHNQb3J0U3BvdHMpcmV0dXJuO2NvbnN0IHQ9dGhpcy5uZXR3b3JrLmVkZ2VzLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBlPXQudmFsdWUubGluaztlIT09bnVsbCYmKGUuZnJvbVNwb3Q9U3BvdC5EZWZhdWx0LGUudG9TcG90PVNwb3QuRGVmYXVsdCl9fWNvbW1pdE5vZGVzKCl7bGV0IHQ9MCxpPTA7aWYodGhpcy5hcnJhbmdlc1RvT3JpZ2luKXtjb25zdCBuPVJlY3QuYSgpO3RoaXMuRXcodGhpcy5uZXR3b3JrLG4pO2NvbnN0IG89dGhpcy5hcnJhbmdlbWVudE9yaWdpbjt0PW8ueC1uLngsaT1vLnktbi55LFJlY3QubyhuKX1jb25zdCBlPVJlY3QuYSgpLHM9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7KHQhPT0wfHxpIT09MCkmJihlLmMobi5ib3VuZHMpLGUueCs9dCxlLnkrPWksbi5ib3VuZHM9ZSksbi5jb21taXQoKX1SZWN0Lm8oZSl9Y29tbWl0TGlua3MoKXtjb25zdCB0PXRoaXMubmV0d29yay5lZGdlcy5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl0LnZhbHVlLmNvbW1pdCgpfXNwcmluZ1N0aWZmbmVzcyh0KXtjb25zdCBpPXQuc3RpZmZuZXNzO3JldHVybiBpc05hTihpKT90aGlzLldjOml9c3ByaW5nTGVuZ3RoKHQpe2NvbnN0IGk9dC5sZW5ndGg7cmV0dXJuIGlzTmFOKGkpP3RoaXMuamM6aX1lbGVjdHJpY2FsQ2hhcmdlKHQpe2NvbnN0IGk9dC5jaGFyZ2U7cmV0dXJuIGlzTmFOKGkpP3RoaXMudmM6aX1lbGVjdHJpY2FsRmllbGRYKHQsaSl7cmV0dXJuIDB9ZWxlY3RyaWNhbEZpZWxkWSh0LGkpe3JldHVybiAwfWdyYXZpdGF0aW9uYWxNYXNzKHQpe2NvbnN0IGk9dC5tYXNzO3JldHVybiBpc05hTihpKT90aGlzLkpjOml9Z3Jhdml0YXRpb25hbEZpZWxkWCh0LGkpe3JldHVybiAwfWdyYXZpdGF0aW9uYWxGaWVsZFkodCxpKXtyZXR1cm4gMH1pc0ZpeGVkKHQpe3JldHVybiB0LmlzRml4ZWR9Z2V0IGN1cnJlbnRJdGVyYXRpb24oKXtyZXR1cm4gdGhpcy56aH1nZXQgYXJyYW5nZW1lbnRTcGFjaW5nKCl7cmV0dXJuIHRoaXMuVHN9c2V0IGFycmFuZ2VtZW50U3BhY2luZyh0KXtVLmUodCxTaXplLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJhcnJhbmdlbWVudFNwYWNpbmdcIiksdGhpcy5Ucy5lcXVhbHModCl8fCh0aGlzLlRzLmModCksdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBhcnJhbmdlc1RvT3JpZ2luKCl7cmV0dXJuIHRoaXMuYmd9c2V0IGFycmFuZ2VzVG9PcmlnaW4odCl7dGhpcy5iZyE9PXQmJihVLmkodCxcImJvb2xlYW5cIixGb3JjZURpcmVjdGVkTGF5b3V0LFwiYXJyYW5nZXNUb09yaWdpblwiKSx0aGlzLmJnPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBzZXRzUG9ydFNwb3RzKCl7cmV0dXJuIHRoaXMuRm59c2V0IHNldHNQb3J0U3BvdHModCl7dGhpcy5GbiE9PXQmJihVLmkodCxcImJvb2xlYW5cIixGb3JjZURpcmVjdGVkTGF5b3V0LFwic2V0c1BvcnRTcG90c1wiKSx0aGlzLkZuPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBjb21tZW50cygpe3JldHVybiB0aGlzLkJlfXNldCBjb21tZW50cyh0KXt0aGlzLkJlIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJjb21tZW50c1wiKSx0aGlzLkJlPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBtYXhQcmVsYXlvdXRJdGVyYXRpb25zKCl7cmV0dXJuIHRoaXMua2d9c2V0IG1heFByZWxheW91dEl0ZXJhdGlvbnModCl7dGhpcy5rZyE9PXQmJihVLmkodCxcIm51bWJlclwiLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJtYXhQcmVsYXlvdXRJdGVyYXRpb25zXCIpLHQ+PTAmJih0aGlzLmtnPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgbWF4SXRlcmF0aW9ucygpe3JldHVybiB0aGlzLlNnfXNldCBtYXhJdGVyYXRpb25zKHQpe3RoaXMuU2chPT10JiYoVS5pKHQsXCJudW1iZXJcIixGb3JjZURpcmVjdGVkTGF5b3V0LFwibWF4SXRlcmF0aW9uc1wiKSx0Pj0wJiYodGhpcy5TZz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGVwc2lsb25EaXN0YW5jZSgpe3JldHVybiB0aGlzLk1nfXNldCBlcHNpbG9uRGlzdGFuY2UodCl7dGhpcy5NZyE9PXQmJihVLmkodCxcIm51bWJlclwiLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJlcHNpbG9uRGlzdGFuY2VcIiksdD4wJiYodGhpcy5NZz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGluZmluaXR5RGlzdGFuY2UoKXtyZXR1cm4gdGhpcy5xY31zZXQgaW5maW5pdHlEaXN0YW5jZSh0KXt0aGlzLnFjIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsRm9yY2VEaXJlY3RlZExheW91dCxcImluZmluaXR5RGlzdGFuY2VcIiksdD4xJiYodGhpcy5xYz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IG1vdmVMaW1pdCgpe3JldHVybiB0aGlzLlBnfXNldCBtb3ZlTGltaXQodCl7dGhpcy5QZyE9PXQmJihVLmkodCxcIm51bWJlclwiLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJtb3ZlTGltaXRcIiksdGhpcy5QZz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgcmFuZG9tTnVtYmVyR2VuZXJhdG9yKCl7cmV0dXJuIHRoaXMuTmd9c2V0IHJhbmRvbU51bWJlckdlbmVyYXRvcih0KXt0aGlzLk5nIT09dCYmKHQhPT1udWxsJiYhVS5ydCh0LnJhbmRvbSkmJlUubignRm9yY2VEaXJlY3RlZExheW91dC5yYW5kb21OdW1iZXJHZW5lcmF0b3IgbXVzdCBoYXZlIGEgXCJyYW5kb20oKVwiIGZ1bmN0aW9uIG9uIGl0OiAnK3QpLHRoaXMuTmc9dCl9Z2V0IGRlZmF1bHRTcHJpbmdTdGlmZm5lc3MoKXtyZXR1cm4gdGhpcy5XY31zZXQgZGVmYXVsdFNwcmluZ1N0aWZmbmVzcyh0KXt0aGlzLldjIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsRm9yY2VEaXJlY3RlZExheW91dCxcImRlZmF1bHRTcHJpbmdTdGlmZm5lc3NcIiksdGhpcy5XYz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgZGVmYXVsdFNwcmluZ0xlbmd0aCgpe3JldHVybiB0aGlzLmpjfXNldCBkZWZhdWx0U3ByaW5nTGVuZ3RoKHQpe3RoaXMuamMhPT10JiYoVS5pKHQsXCJudW1iZXJcIixGb3JjZURpcmVjdGVkTGF5b3V0LFwiZGVmYXVsdFNwcmluZ0xlbmd0aFwiKSx0aGlzLmpjPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBkZWZhdWx0RWxlY3RyaWNhbENoYXJnZSgpe3JldHVybiB0aGlzLnZjfXNldCBkZWZhdWx0RWxlY3RyaWNhbENoYXJnZSh0KXt0aGlzLnZjIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsRm9yY2VEaXJlY3RlZExheW91dCxcImRlZmF1bHRFbGVjdHJpY2FsQ2hhcmdlXCIpLHRoaXMudmM9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGRlZmF1bHRHcmF2aXRhdGlvbmFsTWFzcygpe3JldHVybiB0aGlzLkpjfXNldCBkZWZhdWx0R3Jhdml0YXRpb25hbE1hc3ModCl7dGhpcy5KYyE9PXQmJihVLmkodCxcIm51bWJlclwiLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJkZWZhdWx0R3Jhdml0YXRpb25hbE1hc3NcIiksdGhpcy5KYz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgZGVmYXVsdENvbW1lbnRTcHJpbmdMZW5ndGgoKXtyZXR1cm4gdGhpcy5DZ31zZXQgZGVmYXVsdENvbW1lbnRTcHJpbmdMZW5ndGgodCl7dGhpcy5DZyE9PXQmJihVLmkodCxcIm51bWJlclwiLEZvcmNlRGlyZWN0ZWRMYXlvdXQsXCJkZWZhdWx0Q29tbWVudFNwcmluZ0xlbmd0aFwiKSx0aGlzLkNnPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBkZWZhdWx0Q29tbWVudEVsZWN0cmljYWxDaGFyZ2UoKXtyZXR1cm4gdGhpcy5BZ31zZXQgZGVmYXVsdENvbW1lbnRFbGVjdHJpY2FsQ2hhcmdlKHQpe3RoaXMuQWchPT10JiYoVS5pKHQsXCJudW1iZXJcIixGb3JjZURpcmVjdGVkTGF5b3V0LFwiZGVmYXVsdENvbW1lbnRFbGVjdHJpY2FsQ2hhcmdlXCIpLHRoaXMuQWc9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IHByZWxheW91dFF1YWxpdHkoKXtyZXR1cm4gdGhpcy4kY31zZXQgcHJlbGF5b3V0UXVhbGl0eSh0KXt0aGlzLiRjIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsRm9yY2VEaXJlY3RlZExheW91dCxcInByZWxheW91dFF1YWxpdHlcIiksdGhpcy4kYz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgcHJlbGF5b3V0U3ByZWFkKCl7cmV0dXJuIHRoaXMucmZ9c2V0IHByZWxheW91dFNwcmVhZCh0KXt0aGlzLnJmIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsRm9yY2VEaXJlY3RlZExheW91dCxcInByZWxheW91dFNwcmVhZFwiKSx0aGlzLnJmPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfX1jbGFzcyBGb3JjZURpcmVjdGVkTmV0d29yayBleHRlbmRzIExheW91dE5ldHdvcmt7Y29uc3RydWN0b3IodCl7c3VwZXIodCl9Y3JlYXRlVmVydGV4KCl7cmV0dXJuIG5ldyBGb3JjZURpcmVjdGVkVmVydGV4KHRoaXMpfWNyZWF0ZUVkZ2UoKXtyZXR1cm4gbmV3IEZvcmNlRGlyZWN0ZWRFZGdlKHRoaXMpfX1jbGFzcyBGb3JjZURpcmVjdGVkVmVydGV4IGV4dGVuZHMgTGF5b3V0VmVydGV4e25rO29rO3JrO2xrO2hrO2hpZXJhcmNoaWNhbFZlcnRleGVzO2lkSW5DbHVzdGVyO2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMubms9ITEsdGhpcy5vaz1OYU4sdGhpcy5yaz1OYU4sdGhpcy5saz0wLHRoaXMuaGs9MCx0aGlzLmhpZXJhcmNoaWNhbFZlcnRleGVzPW5ldyBMaXN0LHRoaXMuaWRJbkNsdXN0ZXI9LTF9Z2V0IGlzRml4ZWQoKXtyZXR1cm4gdGhpcy5ua31zZXQgaXNGaXhlZCh0KXt0aGlzLm5rIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLEZvcmNlRGlyZWN0ZWRWZXJ0ZXgsXCJpc0ZpeGVkXCIpLHRoaXMubms9dCl9Z2V0IGNoYXJnZSgpe3JldHVybiB0aGlzLm9rfXNldCBjaGFyZ2UodCl7dGhpcy5vayE9PXQmJihVLmkodCxcIm51bWJlclwiLEZvcmNlRGlyZWN0ZWRWZXJ0ZXgsXCJjaGFyZ2VcIiksdGhpcy5vaz10KX1nZXQgbWFzcygpe3JldHVybiB0aGlzLnJrfXNldCBtYXNzKHQpe3RoaXMucmshPT10JiYoVS5pKHQsXCJudW1iZXJcIixGb3JjZURpcmVjdGVkVmVydGV4LFwibWFzc1wiKSx0aGlzLnJrPXQpfWdldCBmb3JjZVgoKXtyZXR1cm4gdGhpcy5sa31zZXQgZm9yY2VYKHQpe3RoaXMubGshPT10JiYoVS5pKHQsXCJudW1iZXJcIixGb3JjZURpcmVjdGVkVmVydGV4LFwiZm9yY2VYXCIpLHRoaXMubGs9dCl9Z2V0IGZvcmNlWSgpe3JldHVybiB0aGlzLmhrfXNldCBmb3JjZVkodCl7dGhpcy5oayE9PXQmJihVLmkodCxcIm51bWJlclwiLEZvcmNlRGlyZWN0ZWRWZXJ0ZXgsXCJmb3JjZVlcIiksdGhpcy5oaz10KX19Y2xhc3MgRm9yY2VEaXJlY3RlZEVkZ2UgZXh0ZW5kcyBMYXlvdXRFZGdle2FrO2ZrO2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMuYWs9TmFOLHRoaXMuZms9TmFOfWdldCBzdGlmZm5lc3MoKXtyZXR1cm4gdGhpcy5ha31zZXQgc3RpZmZuZXNzKHQpe3RoaXMuYWshPT10JiYoVS5pKHQsXCJudW1iZXJcIixGb3JjZURpcmVjdGVkRWRnZSxcInN0aWZmbmVzc1wiKSx0aGlzLmFrPXQpfWdldCBsZW5ndGgoKXtyZXR1cm4gdGhpcy5ma31zZXQgbGVuZ3RoKHQpe3RoaXMuZmshPT10JiYoVS5pKHQsXCJudW1iZXJcIixGb3JjZURpcmVjdGVkRWRnZSxcImxlbmd0aFwiKSx0aGlzLmZrPXQpfX1jbGFzcyBSYW5kb21OdW1iZXJHZW5lcmF0b3J7STtSO1E7TTtBO3NlZWQ7Y29uc3RydWN0b3IodCl7dD09PXZvaWQgMCYmKHQ9NDIpLHRoaXMuc2VlZD10LHRoaXMuQT00ODI3MSx0aGlzLk09MjE0NzQ4MzY0Nyx0aGlzLlE9dGhpcy5NL3RoaXMuQSx0aGlzLlI9dGhpcy5NJXRoaXMuQSx0aGlzLkk9MS90aGlzLk0sdGhpcy5yYW5kb20oKX1yYW5kb20oKXtjb25zdCB0PXRoaXMuc2VlZC90aGlzLlEsaT10aGlzLnNlZWQldGhpcy5RLGU9dGhpcy5BKmktdGhpcy5SKnQ7cmV0dXJuIGU+MD90aGlzLnNlZWQ9ZTp0aGlzLnNlZWQ9ZSt0aGlzLk0sdGhpcy5zZWVkKnRoaXMuSX19dmFyIExheWVyZWREaWdyYXBoQ3ljbGVSZW1vdmU9KHk9Pih5W3kuRGVwdGhGaXJzdD0wXT1cIkRlcHRoRmlyc3RcIix5W3kuR3JlZWR5PTFdPVwiR3JlZWR5XCIseVt5LkZyb21MYXllcnM9Ml09XCJGcm9tTGF5ZXJzXCIseSkpKExheWVyZWREaWdyYXBoQ3ljbGVSZW1vdmV8fHt9KSxMYXllcmVkRGlncmFwaExheWVyaW5nPSh5PT4oeVt5Lk9wdGltYWxMaW5rTGVuZ3RoPTEwXT1cIk9wdGltYWxMaW5rTGVuZ3RoXCIseVt5Lkxvbmdlc3RQYXRoU2luaz0xMV09XCJMb25nZXN0UGF0aFNpbmtcIix5W3kuTG9uZ2VzdFBhdGhTb3VyY2U9MTJdPVwiTG9uZ2VzdFBhdGhTb3VyY2VcIix5KSkoTGF5ZXJlZERpZ3JhcGhMYXllcmluZ3x8e30pLExheWVyZWREaWdyYXBoSW5pdD0oeT0+KHlbeS5EZXB0aEZpcnN0T3V0PTIwXT1cIkRlcHRoRmlyc3RPdXRcIix5W3kuRGVwdGhGaXJzdEluPTIxXT1cIkRlcHRoRmlyc3RJblwiLHlbeS5OYWl2ZT0yMl09XCJOYWl2ZVwiLHkpKShMYXllcmVkRGlncmFwaEluaXR8fHt9KSxMYXllcmVkRGlncmFwaEFnZ3Jlc3NpdmU9KHk9Pih5W3kuTm9uZT0zMF09XCJOb25lXCIseVt5Lkxlc3M9MzFdPVwiTGVzc1wiLHlbeS5Nb3JlPTMyXT1cIk1vcmVcIix5KSkoTGF5ZXJlZERpZ3JhcGhBZ2dyZXNzaXZlfHx7fSksTGF5ZXJlZERpZ3JhcGhQYWNrPSh5PT4oeVt5Lk5vbmU9MF09XCJOb25lXCIseVt5LkV4cGFuZD0xXT1cIkV4cGFuZFwiLHlbeS5TdHJhaWdodGVuPTJdPVwiU3RyYWlnaHRlblwiLHlbeS5NZWRpYW49NF09XCJNZWRpYW5cIix5W3kuTWF5YmVFeHBhbmQ9OF09XCJNYXliZUV4cGFuZFwiLHlbeS5BbGw9MTVdPVwiQWxsXCIseSkpKExheWVyZWREaWdyYXBoUGFja3x8e30pLExheWVyZWREaWdyYXBoQWxpZ249KHk9Pih5W3kuTm9uZT0wXT1cIk5vbmVcIix5W3kuVXBwZXJMZWZ0PTFdPVwiVXBwZXJMZWZ0XCIseVt5LlVwcGVyUmlnaHQ9Ml09XCJVcHBlclJpZ2h0XCIseVt5Lkxvd2VyTGVmdD00XT1cIkxvd2VyTGVmdFwiLHlbeS5Mb3dlclJpZ2h0PThdPVwiTG93ZXJSaWdodFwiLHlbeS5BbGw9MTVdPVwiQWxsXCIseSkpKExheWVyZWREaWdyYXBoQWxpZ258fHt9KTtjbGFzcyBMYXllcmVkRGlncmFwaExheW91dCBleHRlbmRzIExheW91dHtEcztfaTtTO1pjO1FjO19jO2xmO3R1O25yO2l1O0ZuO0N0O3Z5O3F0O0xnO0ZzO2dpO3NuO1JzO0lzO1l0O1RnO2hmO0RnO25uO2V1O29yO1JuO0luO3NDO2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5Ecz0yNSx0aGlzLl9pPTI1LHRoaXMuUz0wLHRoaXMuWmM9MCx0aGlzLlFjPTEwLHRoaXMuX2M9MjAsdGhpcy5sZj00LHRoaXMudHU9MzEsdGhpcy5ucj0xNSx0aGlzLml1PTEwLHRoaXMuRm49ITAsdGhpcy5DdD0tMSx0aGlzLnZ5PS0xLHRoaXMucXQ9LTEsdGhpcy5MZz0wLHRoaXMuRnM9MCx0aGlzLmdpPW51bGwsdGhpcy5zbj1udWxsLHRoaXMuUnM9bnVsbCx0aGlzLklzPW51bGwsdGhpcy5ZdD1udWxsLHRoaXMuVGc9MCx0aGlzLmhmPW51bGwsdGhpcy5EZz1udWxsLHRoaXMubm49MCx0aGlzLmV1PW51bGwsdGhpcy5vcj1uZXcgUG9pbnQsdGhpcy5Sbj1bXSx0aGlzLlJuLmxlbmd0aD0xMDAsdGhpcy5Jbj0xNSx0aGlzLnNDPTAsdCYmT2JqZWN0LmFzc2lnbih0aGlzLHQpfWNsb25lUHJvdGVjdGVkKHQpe3N1cGVyLmNsb25lUHJvdGVjdGVkKHQpLHQuRHM9dGhpcy5Ecyx0Ll9pPXRoaXMuX2ksdC5TPXRoaXMuUyx0LlpjPXRoaXMuWmMsdC5RYz10aGlzLlFjLHQuX2M9dGhpcy5fYyx0LmxmPXRoaXMubGYsdC50dT10aGlzLnR1LHQubnI9dGhpcy5ucix0Lml1PXRoaXMuaXUsdC5Gbj10aGlzLkZuLHQuSW49dGhpcy5Jbn1haSh0KXt0IGluIExheWVyZWREaWdyYXBoQWdncmVzc2l2ZT90aGlzLmFnZ3Jlc3NpdmVPcHRpb249dDp0IGluIExheWVyZWREaWdyYXBoQ3ljbGVSZW1vdmU/dGhpcy5jeWNsZVJlbW92ZU9wdGlvbj10OnQgaW4gTGF5ZXJlZERpZ3JhcGhJbml0P3RoaXMuaW5pdGlhbGl6ZU9wdGlvbj10OnQgaW4gTGF5ZXJlZERpZ3JhcGhMYXllcmluZz90aGlzLmxheWVyaW5nT3B0aW9uPXQ6c3VwZXIuYWkodCl9Y3JlYXRlTmV0d29yaygpe3JldHVybiBuZXcgTGF5ZXJlZERpZ3JhcGhOZXR3b3JrKHRoaXMpfWRvTGF5b3V0KHQpe0RlYnVnJiZ0PT09bnVsbCYmVS5uKFwiTGF5b3V0LmRvTGF5b3V0KGNvbGxlY3Rpb24pIGFyZ3VtZW50IG11c3Qgbm90IGJlIG51bGwgYnV0IGEgRGlhZ3JhbSwgYSBHcm91cCwgb3IgYW4gSXRlcmFibGUgb2YgUGFydHNcIiksdGhpcy5uZXR3b3JrPT09bnVsbCYmKHRoaXMubmV0d29yaz10aGlzLm1ha2VOZXR3b3JrKHQpKSx0aGlzLmFycmFuZ2VtZW50T3JpZ2luPXRoaXMuaW5pdGlhbE9yaWdpbih0aGlzLmFycmFuZ2VtZW50T3JpZ2luKSx0aGlzLnkzKCksdGhpcy5uZXR3b3JrLnZlcnRleGVzLmNvdW50PjAmJih0aGlzLm5ldHdvcmsuZGVsZXRlU2VsZkVkZ2VzKCksdGhpcy5jeWNsZVJlbW92ZU9wdGlvbiE9PTImJnRoaXMucmVtb3ZlQ3ljbGVzKCksdGhpcy53MygpLHRoaXMuY3ljbGVSZW1vdmVPcHRpb249PT0yJiZ0aGlzLnJlbW92ZUN5Y2xlcygpLHRoaXMueDMoKSx0aGlzLmIzKCksdGhpcy5rMygpLHRoaXMucmVkdWNlQ3Jvc3NpbmdzKCksdGhpcy5zdHJhaWdodGVuQW5kUGFjaygpLHRoaXMudXBkYXRlUGFydHMoKSksdGhpcy5uZXR3b3JrPW51bGwsdGhpcy5pc1ZhbGlkTGF5b3V0PSEwfWxpbmtNaW5MZW5ndGgodCl7cmV0dXJuIDF9bGlua0xlbmd0aFdlaWdodCh0KXtyZXR1cm4gMX1saW5rU3RyYWlnaHRlbldlaWdodCh0KXtjb25zdCBpPXQuZnJvbVZlcnRleC5ub2RlfHx0LmZyb21WZXJ0ZXguZGF0YSxlPXQudG9WZXJ0ZXgubm9kZXx8dC50b1ZlcnRleC5kYXRhO3JldHVybiBpPT09bnVsbCYmZT09PW51bGw/ODppPT09bnVsbHx8ZT09PW51bGw/NDoxfW5vZGVNaW5MYXllclNwYWNlKHQsaSl7cmV0dXJuIHQubm9kZT09PW51bGwmJnQuZGF0YT09PW51bGw/MDp0aGlzLlM9PT05MHx8dGhpcy5TPT09MjcwP2k/dC5mb2N1cy55KzEwOnQuYm91bmRzLmhlaWdodC10LmZvY3VzLnkrMTA6aT90LmZvY3VzLngrMTA6dC5ib3VuZHMud2lkdGgtdC5mb2N1cy54KzEwfW5vZGVNaW5Db2x1bW5TcGFjZSh0LGkpe2lmKHQubm9kZT09PW51bGwmJnQuZGF0YT09PW51bGwpcmV0dXJuIDA7Y29uc3QgZT1pP3QuY2s6dC51aztpZihlIT09bnVsbClyZXR1cm4gZTtjb25zdCBzPXRoaXMuUztyZXR1cm4gcz09PTkwfHxzPT09MjcwP2k/dC5jaz10LmZvY3VzLngvdGhpcy5faSsxfDA6dC51az0odC5ib3VuZHMud2lkdGgtdC5mb2N1cy54KS90aGlzLl9pKzF8MDppP3QuY2s9dC5mb2N1cy55L3RoaXMuX2krMXwwOnQudWs9KHQuYm91bmRzLmhlaWdodC10LmZvY3VzLnkpL3RoaXMuX2krMXwwfXRlKCl7dGhpcy5oZj09PW51bGwmJih0aGlzLmhmPVtdKTtsZXQgdD0wO2NvbnN0IGk9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7dGhpcy5oZlt0XT1lLmxheWVyLHQrKyx0aGlzLmhmW3RdPWUuY29sdW1uLHQrKyx0aGlzLmhmW3RdPWUuaW5kZXgsdCsrfXJldHVybiB0aGlzLmhmfV9lKHQpe2xldCBpPTA7Y29uc3QgZT10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtzLmxheWVyPXRbaV0saSsrLHMuY29sdW1uPXRbaV0saSsrLHMuaW5kZXg9dFtpXSxpKyt9fU5EKHQsaSl7RGVidWcmJihVLnIodCxMYXllcmVkRGlncmFwaExheW91dCxcImNyb3NzaW5nTWF0cml4OnVuZml4ZWRMYXllclwiKSxVLnIoaSxMYXllcmVkRGlncmFwaExheW91dCxcImNyb3NzaW5nTWF0cml4OmRpcmVjdGlvblwiKSk7Y29uc3QgZT10aGlzLlhoKHQpLHM9dGhpcy5naVt0XTsodGhpcy5EZz09PW51bGx8fHRoaXMuRGcubGVuZ3RoPHMqcykmJih0aGlzLkRnPVtdKTtjb25zdCBuPXRoaXMuRGc7Zm9yKGxldCBvPTA7bzxzO28rKyl7bGV0IHI9MDtjb25zdCBsPWVbb10saD1sLm5lYXI7bGV0IGY9MDtoIT09bnVsbCYmaCE9PWwmJmgubGF5ZXI9PT1sLmxheWVyJiYocis9TWF0aC5tYXgoMCxNYXRoLmFicyhoLmluZGV4LWwuaW5kZXgpLTEpKTtsZXQgYSxjPTAsdSxkPTAsbT0wLGc9MCxwLHc9MCx4LGs9MCxiPTAsUz0wLE07aWYoaT49MCl7Zm9yKGE9ZVtvXS55byxjPTA7YzxhLmxlbmd0aDtjKyspaWYodT1hW2NdLHUudmFsaWQmJnUuZnJvbVZlcnRleC5sYXllciE9PXQpZm9yKGQ9dS5mcm9tVmVydGV4LmluZGV4LG09dS5wb3J0VG9Qb3MsZz11LnBvcnRGcm9tUG9zLHc9YysxO3c8YS5sZW5ndGg7dysrKXg9YVt3XSx4LnZhbGlkJiZ4LmZyb21WZXJ0ZXgubGF5ZXIhPT10JiYoaz14LmZyb21WZXJ0ZXguaW5kZXgsYj14LnBvcnRUb1BvcyxTPXgucG9ydEZyb21Qb3MsbTxiJiYoZD5rfHxkPT09ayYmZz5TKSYmcisrLGI8bSYmKGs+ZHx8az09PWQmJlM+ZykmJnIrKyl9aWYoaTw9MCl7Zm9yKGE9ZVtvXS50cixjPTA7YzxhLmxlbmd0aDtjKyspaWYodT1hW2NdLHUudmFsaWQmJnUudG9WZXJ0ZXgubGF5ZXIhPT10KWZvcihkPXUudG9WZXJ0ZXguaW5kZXgsbT11LnBvcnRUb1BvcyxnPXUucG9ydEZyb21Qb3Msdz1jKzE7dzxhLmxlbmd0aDt3KyspeD1hW3ddLHgudmFsaWQmJngudG9WZXJ0ZXgubGF5ZXIhPT10JiYoaz14LnRvVmVydGV4LmluZGV4LGI9eC5wb3J0VG9Qb3MsUz14LnBvcnRGcm9tUG9zLGc8UyYmKGQ+a3x8ZD09PWsmJm0+YikmJnIrKyxTPGcmJihrPmR8fGs9PT1kJiZiPm0pJiZyKyspfWZvcihuW28qcytvXT1yLGY9bysxO2Y8cztmKyspe2xldCBBPTAsQz0wO2lmKGk+PTApe2ZvcihwPWVbb10ueW8sTT1lW2ZdLnlvLGM9MDtjPHAubGVuZ3RoO2MrKylpZih1PXBbY10sdS52YWxpZCYmdS5mcm9tVmVydGV4LmxheWVyIT09dClmb3IoZD11LmZyb21WZXJ0ZXguaW5kZXgsbT11LnBvcnRUb1BvcyxnPXUucG9ydEZyb21Qb3Msdz0wO3c8TS5sZW5ndGg7dysrKXg9TVt3XSx4LnZhbGlkJiZ4LmZyb21WZXJ0ZXgubGF5ZXIhPT10JiYoaz14LmZyb21WZXJ0ZXguaW5kZXgsYj14LnBvcnRUb1BvcyxTPXgucG9ydEZyb21Qb3MsKGQ8a3x8ZD09PWsmJmc8UykmJkMrKywoazxkfHxrPT09ZCYmUzxnKSYmQSsrKX1pZihpPD0wKXtmb3IocD1lW29dLnRyLE09ZVtmXS50cixjPTA7YzxwLmxlbmd0aDtjKyspaWYodT1wW2NdLHUudmFsaWQmJnUudG9WZXJ0ZXgubGF5ZXIhPT10KWZvcihkPXUudG9WZXJ0ZXguaW5kZXgsbT11LnBvcnRUb1BvcyxnPXUucG9ydEZyb21Qb3Msdz0wO3c8TS5sZW5ndGg7dysrKXg9TVt3XSx4LnZhbGlkJiZ4LnRvVmVydGV4LmxheWVyIT09dCYmKGs9eC50b1ZlcnRleC5pbmRleCxiPXgucG9ydFRvUG9zLFM9eC5wb3J0RnJvbVBvcywoZDxrfHxkPT09ayYmbTxiKSYmQysrLChrPGR8fGs9PT1kJiZiPG0pJiZBKyspfW5bbypzK2ZdPUEsbltmKnMrb109Q319cmV0dXJuIHRoaXMuWWgodCxlKSxufWNvdW50Q3Jvc3NpbmdzKCl7bGV0IHQ9MDtmb3IobGV0IGk9MDtpPD10aGlzLkN0O2krKyl7Y29uc3QgZT10aGlzLk5EKGksMSkscz10aGlzLmdpW2ldO2ZvcihsZXQgbj0wO248cztuKyspZm9yKGxldCBvPW47bzxzO28rKyl0Kz1lW24qcytvXX1yZXR1cm4gdH1TMyh0LGksZSl7Y29uc3Qgcz10aGlzLlhoKHQpLG49dGhpcy5naVt0XTtsZXQgbz0wO2ZvcihsZXQgcj0wO3I8bjtyKyspe2xldCBsPW51bGw7aTw9MCYmKGw9c1tyXS55byk7bGV0IGg9bnVsbDtpPj0wJiYoaD1zW3JdLnRyKTtsZXQgZixhPTAsYz0wO2lmKGwhPT1udWxsKWZvcihsZXQgdT0wO3U8bC5sZW5ndGg7dSsrKWY9bFt1XSxmLnZhbGlkJiZmLmZyb21WZXJ0ZXgubGF5ZXIhPT10JiYoYT1mLmZyb21WZXJ0ZXguY29sdW1uK2YucG9ydEZyb21Db2xPZmZzZXQsYz1mLnRvVmVydGV4LmNvbHVtbitmLnBvcnRUb0NvbE9mZnNldCxlP28rPU1hdGguYWJzKGEtYykqdGhpcy5saW5rU3RyYWlnaHRlbldlaWdodChmKTpvKz1NYXRoLmFicyhhLWMpKTtpZihoIT09bnVsbClmb3IobGV0IHU9MDt1PGgubGVuZ3RoO3UrKylmPWhbdV0sZi52YWxpZCYmZi50b1ZlcnRleC5sYXllciE9PXQmJihhPWYuZnJvbVZlcnRleC5jb2x1bW4rZi5wb3J0RnJvbUNvbE9mZnNldCxjPWYudG9WZXJ0ZXguY29sdW1uK2YucG9ydFRvQ29sT2Zmc2V0LGU/bys9KE1hdGguYWJzKGEtYykrMSkqdGhpcy5saW5rU3RyYWlnaHRlbldlaWdodChmKTpvKz1NYXRoLmFicyhhLWMpKX1yZXR1cm4gdGhpcy5ZaCh0LHMpLG99ZGsodCl7bGV0IGk9MDtmb3IobGV0IGU9MDtlPD10aGlzLkN0O2UrKylpKz10aGlzLlMzKGUsMSx0KTtyZXR1cm4gaX1KeSgpe2xldCB0PTEvMDt0aGlzLnF0PS0xO2NvbnN0IGk9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7dD1NYXRoLm1pbih0LGUuY29sdW1uLXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKGUsITApKSx0aGlzLnF0PU1hdGgubWF4KHRoaXMucXQsZS5jb2x1bW4rdGhpcy5ub2RlTWluQ29sdW1uU3BhY2UoZSwhMSkpfWZvcihpLnJlc2V0KCk7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7ZS5jb2x1bW4tPXR9dGhpcy5xdC09dH0keSh0LGkpe0RlYnVnJiYoVS5yKHQsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJiYXJ5Y2VudGVyczp1bmZpeGVkTGF5ZXJcIiksVS5yKGksTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJiYXJ5Y2VudGVyczpkaXJlY3Rpb25cIikpO2NvbnN0IGU9dGhpcy5YaCh0KSxzPXRoaXMuZ2lbdF0sbj1bXTtmb3IobGV0IG89MDtvPHM7bysrKXtjb25zdCByPWVbb107bGV0IGw9bnVsbDtpPD0wJiYobD1yLnlvKTtsZXQgaD1udWxsO2k+PTAmJihoPXIudHIpO2xldCBmPTAsYT0wO2NvbnN0IGM9ci5uZWFyO2MhPT1udWxsJiZjLmxheWVyPT09ci5sYXllciYmKGYrPWMuY29sdW1uLTEsYSsrKTtsZXQgdTtpZihsIT09bnVsbClmb3IobGV0IGQ9MDtkPGwubGVuZ3RoO2QrKyl7dT1sW2RdO2NvbnN0IG09dS5mcm9tVmVydGV4O3UudmFsaWQmJiF1LnJldiYmbS5sYXllciE9PXQmJihmKz1tLmNvbHVtbixhKyspfWlmKGghPT1udWxsKWZvcihsZXQgZD0wO2Q8aC5sZW5ndGg7ZCsrKXt1PWhbZF07Y29uc3QgbT11LnRvVmVydGV4O3UudmFsaWQmJiF1LnJldiYmbS5sYXllciE9PXQmJihmKz1tLmNvbHVtbixhKyspfWE9PT0wP25bb109LTE6bltvXT1mL2F9cmV0dXJuIHRoaXMuWWgodCxlKSxufUNEKHQsaSl7RGVidWcmJihVLnIodCxMYXllcmVkRGlncmFwaExheW91dCxcIm1lZGlhbnM6dW5maXhlZExheWVyXCIpLFUucihpLExheWVyZWREaWdyYXBoTGF5b3V0LFwibWVkaWFuczpkaXJlY3Rpb25cIikpO2NvbnN0IGU9dGhpcy5YaCh0KSxzPXRoaXMuZ2lbdF0sbj1bXTtmb3IobGV0IG89MDtvPHM7bysrKXtjb25zdCByPWVbb107bGV0IGw9bnVsbDtpPD0wJiYobD1yLnlvKTtsZXQgaD1udWxsO2k+PTAmJihoPXIudHIpO2xldCBmPTA7Y29uc3QgYT1bXSxjPXIubmVhcjtjIT09bnVsbCYmYy5sYXllcj09PXIubGF5ZXImJihhW2ZdPWMuY29sdW1uLTEsZisrKTtsZXQgdTtpZihsIT09bnVsbClmb3IobGV0IGQ9MDtkPGwubGVuZ3RoO2QrKyl7dT1sW2RdO2NvbnN0IG09dS5mcm9tVmVydGV4O3UudmFsaWQmJiF1LnJldiYmbS5sYXllciE9PXQmJihhW2ZdPW0uY29sdW1uK3UucG9ydEZyb21Db2xPZmZzZXQsZisrKX1pZihoIT09bnVsbClmb3IobGV0IGQ9MDtkPGgubGVuZ3RoO2QrKyl7dT1oW2RdO2NvbnN0IG09dS50b1ZlcnRleDt1LnZhbGlkJiYhdS5yZXYmJm0ubGF5ZXIhPT10JiYoYVtmXT1tLmNvbHVtbit1LnBvcnRUb0NvbE9mZnNldCxmKyspfWlmKGY9PT0wKW5bb109LTE7ZWxzZXthLnNvcnQoKG0sZyk9Pm0tZyk7Y29uc3QgZD1mPj4xO2YmMT9uW29dPWFbZF06bltvXT1hW2QtMV0rYVtkXT4+MX19cmV0dXJuIHRoaXMuWWgodCxlKSxufVp5KHQsaSxlLHMsbil7aWYodC5jb21wb25lbnQ9PT1lKXt0LmNvbXBvbmVudD1pO2xldCBvPTAscj0wO2lmKHMpe2NvbnN0IGw9dC5kZXN0aW5hdGlvbkVkZ2VzO2Zvcig7bC5uZXh0KCk7KXtjb25zdCBoPWwudmFsdWUsZj1oLnRvVmVydGV4O289dC5sYXllci1mLmxheWVyLHI9dGhpcy5saW5rTWluTGVuZ3RoKGgpLG89PT1yJiZ0aGlzLlp5KGYsaSxlLHMsbil9fWlmKG4pe2NvbnN0IGw9dC5zb3VyY2VFZGdlcztmb3IoO2wubmV4dCgpOyl7Y29uc3QgaD1sLnZhbHVlLGY9aC5mcm9tVmVydGV4O289Zi5sYXllci10LmxheWVyLHI9dGhpcy5saW5rTWluTGVuZ3RoKGgpLG89PT1yJiZ0aGlzLlp5KGYsaSxlLHMsbil9fX19bkModCxpLGUscyxuKXtpZih0LmNvbXBvbmVudD09PWUpe2lmKHQuY29tcG9uZW50PWkscyl7Y29uc3Qgbz10LmRlc3RpbmF0aW9uRWRnZXM7Zm9yKDtvLm5leHQoKTspe2NvbnN0IGw9by52YWx1ZS50b1ZlcnRleDt0aGlzLm5DKGwsaSxlLHMsbil9fWlmKG4pe2NvbnN0IG89dC5zb3VyY2VFZGdlcztmb3IoO28ubmV4dCgpOyl7Y29uc3QgbD1vLnZhbHVlLmZyb21WZXJ0ZXg7dGhpcy5uQyhsLGksZSxzLG4pfX19fXJlbW92ZUN5Y2xlcygpe2NvbnN0IHQ9dGhpcy5uZXR3b3JrLmVkZ2VzLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBpPXQudmFsdWU7aS5yZXY9ITF9c3dpdGNoKHRoaXMuWmMpe2RlZmF1bHQ6Y2FzZSAxOnRoaXMuTTMoKTticmVhaztjYXNlIDA6dGhpcy5QMygpO2JyZWFrO2Nhc2UgMjp0aGlzLk4zKCk7YnJlYWt9fU4zKCl7Y29uc3QgdD10aGlzLm5ldHdvcmssaT10LnZlcnRleGVzLml0ZXJhdG9yO2xldCBlPTEvMDtmb3IoO2kubmV4dCgpOyl7Y29uc3Qgcz1pLnZhbHVlO2U9TWF0aC5taW4oZSxzLmxheWVyKX1pZihlPDEvMCl7aWYoZTwwKWZvcihpLnJlc2V0KCk7aS5uZXh0KCk7KXtjb25zdCByPWkudmFsdWU7ci5sYXllci09ZX1jb25zdCBzPVtdO2ZvcihpLnJlc2V0KCk7aS5uZXh0KCk7KXtjb25zdCByPWkudmFsdWUsbD1zW3IubGF5ZXJdO2w9PT12b2lkIDA/c1tyLmxheWVyXT1bcl06bC5wdXNoKHIpfWxldCBuPTA7Zm9yKGxldCByPTA7cjxzLmxlbmd0aDtyKyspe2NvbnN0IGw9c1tyXTtpZighbHx8bC5sZW5ndGg9PT0wKW4rKztlbHNlIGlmKHI+MClmb3IobGV0IGg9MDtoPGwubGVuZ3RoO2grKyl7Y29uc3QgZj1sW2hdO2YubGF5ZXItPW59fWNvbnN0IG89dC5lZGdlcy5pdGVyYXRvcjtmb3IoO28ubmV4dCgpOyl7Y29uc3Qgcj1vLnZhbHVlLGw9ci5mcm9tVmVydGV4LGg9ci50b1ZlcnRleDtsLmxheWVyPGgubGF5ZXImJih0LnJldmVyc2VFZGdlKHIpLHIucmV2PSEwKX19fU0zKCl7Y29uc3QgdD10aGlzLm5ldHdvcms7bGV0IGk9MCxlPXQudmVydGV4ZXMuY291bnQtMTtjb25zdCBzPVtdO3MubGVuZ3RoPWUrMTtjb25zdCBuPXQudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtuLm5leHQoKTspe2NvbnN0IHI9bi52YWx1ZTtyLmllPSEwfWZvcig7dGhpcy5DMyh0KSE9PW51bGw7KXtsZXQgcjtmb3Iocj10aGlzLkFEKHQpO3IhPT1udWxsOylzW2VdPXIsZS0tLHIuaWU9ITEscj10aGlzLkFEKHQpO2ZvcihyPXRoaXMuTEQodCk7ciE9PW51bGw7KXNbaV09cixpKyssci5pZT0hMSxyPXRoaXMuTEQodCk7cj10aGlzLkEzKHQpLHIhPT1udWxsJiYoc1tpXT1yLGkrKyxyLmllPSExKX1mb3IobGV0IHI9MDtyPHQudmVydGV4ZXMuY291bnQ7cisrKXNbcl0uaW5kZXg9cjtjb25zdCBvPXQuZWRnZXMuaXRlcmF0b3I7Zm9yKDtvLm5leHQoKTspe2NvbnN0IHI9by52YWx1ZSxsPXIuZnJvbVZlcnRleCxoPXIudG9WZXJ0ZXg7bC5pbmRleD5oLmluZGV4JiYodC5yZXZlcnNlRWRnZShyKSxyLnJldj0hMCl9fUMzKHQpe2NvbnN0IGk9dC52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO2lmKGUuaWUpcmV0dXJuIGV9cmV0dXJuIG51bGx9QUQodCl7Y29uc3QgaT10LnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7aWYoZS5pZSl7bGV0IHM9ITA7Y29uc3Qgbj1lLmRlc3RpbmF0aW9uRWRnZXM7Zm9yKDtuLm5leHQoKTspaWYobi52YWx1ZS50b1ZlcnRleC5pZSl7cz0hMTticmVha31pZihzKXJldHVybiBlfX1yZXR1cm4gbnVsbH1MRCh0KXtjb25zdCBpPXQudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtpZihlLmllKXtsZXQgcz0hMDtjb25zdCBuPWUuc291cmNlRWRnZXM7Zm9yKDtuLm5leHQoKTspaWYobi52YWx1ZS5mcm9tVmVydGV4LmllKXtzPSExO2JyZWFrfWlmKHMpcmV0dXJuIGV9fXJldHVybiBudWxsfUEzKHQpe2xldCBpPW51bGwsZT0wO2NvbnN0IHM9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7aWYobi5pZSl7bGV0IG89MDtjb25zdCByPW4uZGVzdGluYXRpb25FZGdlcztmb3IoO3IubmV4dCgpOylyLnZhbHVlLnRvVmVydGV4LmllJiZvKys7bGV0IGw9MDtjb25zdCBoPW4uc291cmNlRWRnZXM7Zm9yKDtoLm5leHQoKTspaC52YWx1ZS5mcm9tVmVydGV4LmllJiZsKys7KGk9PT1udWxsfHxlPG8tbCkmJihpPW4sZT1vLWwpfX1yZXR1cm4gaX1QMygpe2NvbnN0IHQ9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBlPXQudmFsdWU7ZS5zdT0tMSxlLlduPS0xfWNvbnN0IGk9dGhpcy5uZXR3b3JrLmVkZ2VzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7ZS5mb3Jlc3Q9ITF9Zm9yKHRoaXMuVGc9MCx0LnJlc2V0KCk7dC5uZXh0KCk7KXtjb25zdCBlPXQudmFsdWU7ZS5zb3VyY2VFZGdlcy5jb3VudD09PTAmJnRoaXMub0MoZSl9Zm9yKHQucmVzZXQoKTt0Lm5leHQoKTspe2NvbnN0IGU9dC52YWx1ZTtlLnN1PT09LTEmJnRoaXMub0MoZSl9Zm9yKGkucmVzZXQoKTtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtpZighZS5mb3Jlc3Qpe2NvbnN0IHM9ZS5mcm9tVmVydGV4LG49cy5zdSxvPXMuV24scj1lLnRvVmVydGV4LGw9ci5zdSxoPXIuV247bDxuJiZvPGgmJih0aGlzLm5ldHdvcmsucmV2ZXJzZUVkZ2UoZSksZS5yZXY9ITApfX19b0ModCl7dC5zdT10aGlzLlRnLHRoaXMuVGcrKztjb25zdCBpPXQuZGVzdGluYXRpb25FZGdlcztmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlLHM9ZS50b1ZlcnRleDtzLnN1PT09LTEmJihlLmZvcmVzdD0hMCx0aGlzLm9DKHMpKX10LlduPXRoaXMuVGcsdGhpcy5UZysrfXczKCl7Y29uc3QgdD10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDt0Lm5leHQoKTspe2NvbnN0IGk9dC52YWx1ZTtpLmxheWVyPS0xfWZvcih0aGlzLkN0PS0xLHRoaXMuYXNzaWduTGF5ZXJzKCksdC5yZXNldCgpO3QubmV4dCgpOyl7Y29uc3QgaT10LnZhbHVlO3RoaXMuQ3Q9TWF0aC5tYXgodGhpcy5DdCxpLmxheWVyKX19YXNzaWduTGF5ZXJzKCl7c3dpdGNoKHRoaXMuUWMpe2Nhc2UgMTE6dGhpcy5URCgpO2JyZWFrO2Nhc2UgMTI6dGhpcy5MMygpO2JyZWFrO2RlZmF1bHQ6Y2FzZSAxMDp0aGlzLlQzKCk7YnJlYWt9fVREKCl7Y29uc3QgdD10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDt0Lm5leHQoKTspe2NvbnN0IGk9dC52YWx1ZSxlPXRoaXMuREQoaSk7dGhpcy5DdD1NYXRoLm1heChlLHRoaXMuQ3QpfX1ERCh0KXtsZXQgaT0wO2lmKHQubGF5ZXI9PT0tMSl7Y29uc3QgZT10LmRlc3RpbmF0aW9uRWRnZXM7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZSxuPXMudG9WZXJ0ZXgsbz10aGlzLmxpbmtNaW5MZW5ndGgocyk7aT1NYXRoLm1heChpLHRoaXMuREQobikrbyl9dC5sYXllcj1pfWVsc2UgaT10LmxheWVyO3JldHVybiBpfUwzKCl7bGV0IHQ9MDtjb25zdCBpPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO3Q9dGhpcy5GRChlKSx0aGlzLkN0PU1hdGgubWF4KHQsdGhpcy5DdCl9Zm9yKGkucmVzZXQoKTtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtlLmxheWVyPXRoaXMuQ3QtZS5sYXllcn19RkQodCl7bGV0IGk9MDtpZih0LmxheWVyPT09LTEpe2NvbnN0IGU9dC5zb3VyY2VFZGdlcztmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlLG49cy5mcm9tVmVydGV4LG89dGhpcy5saW5rTWluTGVuZ3RoKHMpO2k9TWF0aC5tYXgoaSx0aGlzLkZEKG4pK28pfXQubGF5ZXI9aX1lbHNlIGk9dC5sYXllcjtyZXR1cm4gaX1UMygpe3RoaXMuVEQoKTtjb25zdCB0PXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl7Y29uc3QgZT10LnZhbHVlO2UuaWU9ITF9Zm9yKHQucmVzZXQoKTt0Lm5leHQoKTspe2NvbnN0IGU9dC52YWx1ZTtlLnNvdXJjZUVkZ2VzLmNvdW50PT09MCYmdGhpcy5SRChlKX1sZXQgaT0xLzA7Zm9yKHQucmVzZXQoKTt0Lm5leHQoKTspe2NvbnN0IGU9dC52YWx1ZTtpPU1hdGgubWluKGksZS5sYXllcil9Zm9yKHRoaXMuQ3Q9LTEsdC5yZXNldCgpO3QubmV4dCgpOyl7Y29uc3QgZT10LnZhbHVlO2UubGF5ZXItPWksdGhpcy5DdD1NYXRoLm1heCh0aGlzLkN0LGUubGF5ZXIpfX1SRCh0KXtpZighdC5pZSl7dC5pZT0hMDtjb25zdCBpPXQuZGVzdGluYXRpb25FZGdlcztmb3IoO2kubmV4dCgpOyl7Y29uc3Qgcz1pLnZhbHVlLnRvVmVydGV4O3RoaXMuUkQocyl9dGhpcy5EMyh0KSx0aGlzLkYzKHQpfX1EMyh0KXtjb25zdCBpPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3Qgcj1pLnZhbHVlO3IuY29tcG9uZW50PS0xfWNvbnN0IGU9MCxzPTEsbj10LnlvO2xldCBvPW4ubGVuZ3RoO2ZvcihsZXQgcj0wO3I8bztyKyspe2NvbnN0IGw9bltyXSxoPWwuZnJvbVZlcnRleCxmPWwudG9WZXJ0ZXgsYT10aGlzLmxpbmtNaW5MZW5ndGgobCk7aC5sYXllci1mLmxheWVyPmEmJnRoaXMuWnkoaCxlLC0xLCEwLCExKX1mb3IodGhpcy5aeSh0LHMsLTEsITAsITApO3QuY29tcG9uZW50IT09ZTspe2xldCByPTAsbD0xLzAsaD0wLGY9bnVsbDtjb25zdCBhPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO2EubmV4dCgpOyl7Y29uc3QgYz1hLnZhbHVlO2lmKGMuY29tcG9uZW50PT09cyl7bGV0IHU9MCxkPSExO2NvbnN0IG09Yy55bztvPW0ubGVuZ3RoO2ZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IHc9bVtwXSx4PXcuZnJvbVZlcnRleDtpZih1Kz10aGlzLmxpbmtMZW5ndGhXZWlnaHQodykseC5jb21wb25lbnQhPT1zKXtyKz10aGlzLmxpbmtMZW5ndGhXZWlnaHQodyk7Y29uc3Qgaz14LmxheWVyLWMubGF5ZXIsYj10aGlzLmxpbmtNaW5MZW5ndGgodyk7bD1NYXRoLm1pbihsLGstYil9fWNvbnN0IGc9Yy50cjtvPWcubGVuZ3RoO2ZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IHc9Z1twXSx4PXcudG9WZXJ0ZXg7dS09dGhpcy5saW5rTGVuZ3RoV2VpZ2h0KHcpLHguY29tcG9uZW50IT09cz9yLT10aGlzLmxpbmtMZW5ndGhXZWlnaHQodyk6ZD0hMH0oZj09PW51bGx8fHU8aCkmJiFkJiYoZj1jLGg9dSl9fWlmKHI+MCl7Zm9yKGkucmVzZXQoKTtpLm5leHQoKTspe2NvbnN0IGM9aS52YWx1ZTtjLmNvbXBvbmVudD09PXMmJihjLmxheWVyKz1sKX10LmNvbXBvbmVudD1lfWVsc2UgZi5jb21wb25lbnQ9ZX19RjModCl7Y29uc3QgaT10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspe2NvbnN0IG49aS52YWx1ZTtuLmNvbXBvbmVudD0tMX1jb25zdCBlPTAscz0xO2Zvcih0aGlzLlp5KHQscywtMSwhMCwhMSk7dC5jb21wb25lbnQhPT1lOyl7bGV0IG49MCxvPTEvMCxyPTAsbD1udWxsO2NvbnN0IGg9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7aC5uZXh0KCk7KXtjb25zdCBmPWgudmFsdWU7aWYoZi5jb21wb25lbnQ9PT1zKXtsZXQgYT0wLGM9ITE7Y29uc3QgdT1mLnlvO2xldCBkPXUubGVuZ3RoO2ZvcihsZXQgZz0wO2c8ZDtnKyspe2NvbnN0IHA9dVtnXSx3PXAuZnJvbVZlcnRleDthKz10aGlzLmxpbmtMZW5ndGhXZWlnaHQocCksdy5jb21wb25lbnQhPT1zP24rPXRoaXMubGlua0xlbmd0aFdlaWdodChwKTpjPSEwfWNvbnN0IG09Zi50cjtkPW0ubGVuZ3RoO2ZvcihsZXQgZz0wO2c8ZDtnKyspe2NvbnN0IHA9bVtnXSx3PXAudG9WZXJ0ZXg7aWYoYS09dGhpcy5saW5rTGVuZ3RoV2VpZ2h0KHApLHcuY29tcG9uZW50IT09cyl7bi09dGhpcy5saW5rTGVuZ3RoV2VpZ2h0KHApO2NvbnN0IHg9Zi5sYXllci13LmxheWVyLGs9dGhpcy5saW5rTWluTGVuZ3RoKHApO289TWF0aC5taW4obyx4LWspfX0obD09PW51bGx8fGE+cikmJiFjJiYobD1mLHI9YSl9fWlmKG48MCl7Zm9yKGkucmVzZXQoKTtpLm5leHQoKTspe2NvbnN0IGY9aS52YWx1ZTtmLmNvbXBvbmVudD09PXMmJihmLmxheWVyLT1vKX10LmNvbXBvbmVudD1lfWVsc2UgbC5jb21wb25lbnQ9ZX19eDMoKXtjb25zdCB0PXRoaXMubmV0d29yayxpPVtdLGU9dC5lZGdlcy5pdGVyYXRvcjtmb3IoO2UubmV4dCgpOyl7Y29uc3Qgcz1lLnZhbHVlO3MudmFsaWQ9ITEsaS5wdXNoKHMpfWZvcihsZXQgcz0wO3M8aS5sZW5ndGg7cysrKXtjb25zdCBuPWlbc107bGV0IG89bi5mcm9tVmVydGV4O2NvbnN0IHI9bi50b1ZlcnRleDtpZihuLnZhbGlkfHwoby5ub2RlPT09bnVsbCYmby5kYXRhPT09bnVsbHx8ci5ub2RlPT09bnVsbCYmci5kYXRhPT09bnVsbCkmJm8ubGF5ZXI9PT1yLmxheWVyKWNvbnRpbnVlO2xldCBsPTAsaD0wLGY9MCxhPTA7aWYobi5saW5rIT09bnVsbCl7Y29uc3QgUz1uLmxpbms7aWYoUz09PW51bGwpY29udGludWU7Y29uc3QgTT1vLm5vZGUsQT1yLm5vZGU7aWYoTT09PW51bGx8fEE9PT1udWxsKWNvbnRpbnVlO2xldCBDPVMuZnJvbU5vZGUsUD1TLnRvTm9kZSxOPVMuZnJvbVBvcnQ7Zm9yKDtOIT09bnVsbCYmIU4uaXNWaXNpYmxlT2JqZWN0KCk7KU49Ti5wYW5lbDtsZXQgVD1TLnRvUG9ydDtmb3IoO1QhPT1udWxsJiYhVC5pc1Zpc2libGVPYmplY3QoKTspVD1ULnBhbmVsO2lmKG4ucmV2KXtjb25zdCBZPUMsSz1OO0M9UCxOPVQsUD1ZLFQ9S31jb25zdCBMPW8uZm9jdXMsRD1yLmZvY3VzLEY9bi5yZXY/ci5ib3VuZHM6by5ib3VuZHMsST1Qb2ludC5hKCk7TSE9PUM/Ri5pc1JlYWwoKSYmQy5pc1Zpc2libGUoKT9DLmFjdHVhbEJvdW5kcy5pc1JlYWwoKT8oQy5nZXRSZWxhdGl2ZVBvaW50KE4sU3BvdC5DZW50ZXIsSSksSS54Kz1DLmFjdHVhbEJvdW5kcy54LUYueCxJLnkrPUMuYWN0dWFsQm91bmRzLnktRi55KTooQy5nZXRSZWxhdGl2ZVBvaW50KE4sU3BvdC5DZW50ZXIsSSksSS5pc1JlYWwoKXx8SS5jKEwpKTpJLmMoTCk6Ri5pc1JlYWwoKT8oQy5nZXRSZWxhdGl2ZVBvaW50KE4sU3BvdC5DZW50ZXIsSSksSS5pc1JlYWwoKXx8SS5jKEwpKTpJLmMoTCk7Y29uc3QgUj1uLnJldj9vLmJvdW5kczpyLmJvdW5kcyxPPVBvaW50LmEoKTtBIT09UD9SLmlzUmVhbCgpJiZQLmlzVmlzaWJsZSgpP1AuYWN0dWFsQm91bmRzLmlzUmVhbCgpPyhQLmdldFJlbGF0aXZlUG9pbnQoVCxTcG90LkNlbnRlcixPKSxPLngrPVAuYWN0dWFsQm91bmRzLngtUi54LE8ueSs9UC5hY3R1YWxCb3VuZHMueS1SLnkpOihQLmdldFJlbGF0aXZlUG9pbnQoVCxTcG90LkNlbnRlcixPKSxPLmlzUmVhbCgpfHxPLmMoRCkpOk8uYyhEKTpSLmlzUmVhbCgpPyhQLmdldFJlbGF0aXZlUG9pbnQoVCxTcG90LkNlbnRlcixPKSxPLmlzUmVhbCgpfHxPLmMoRCkpOk8uYyhEKSx0aGlzLlM9PT05MHx8dGhpcy5TPT09MjcwPyhsPU1hdGgucm91bmQoKEkueC1MLngpL3RoaXMuX2kpLGY9SS54LGg9TWF0aC5yb3VuZCgoTy54LUQueCkvdGhpcy5faSksYT1PLngpOihsPU1hdGgucm91bmQoKEkueS1MLnkpL3RoaXMuX2kpLGY9SS55LGg9TWF0aC5yb3VuZCgoTy55LUQueSkvdGhpcy5faSksYT1PLnkpLFBvaW50Lm8oSSksUG9pbnQubyhPKSxuLnBvcnRGcm9tQ29sT2Zmc2V0PWwsbi5wb3J0RnJvbVBvcz1mLG4ucG9ydFRvQ29sT2Zmc2V0PWgsbi5wb3J0VG9Qb3M9YX1lbHNlIG4ucG9ydEZyb21Db2xPZmZzZXQ9MCxuLnBvcnRGcm9tUG9zPTAsbi5wb3J0VG9Db2xPZmZzZXQ9MCxuLnBvcnRUb1Bvcz0wO2xldCBjPW8ubGF5ZXI7Y29uc3QgdT1yLmxheWVyLGQ9dGhpcy5SMyhuKSxtPWQ9PT0xfHxkPT09MyxnPWQ9PT0yfHxkPT09MztsZXQgcCx3LHg9bnVsbCxrO2cmJih4PXRoaXMuSTMobyxyKSxrPTEsdz10LmNyZWF0ZVZlcnRleCgpLHcubm9kZT1udWxsLHcuZ2s9MSx3LmxheWVyPWMsdy5uZWFyPW8sdC5hZGRWZXJ0ZXgodykscD10LmxpbmtWZXJ0ZXhlcyhvLHcsbi5saW5rKSxwLnZhbGlkPSExLHAucmV2PW4ucmV2LHAucG9ydEZyb21Db2xPZmZzZXQ9bCxwLnBvcnRUb0NvbE9mZnNldD0wLHAucG9ydEZyb21Qb3M9ZixwLnBvcnRUb1Bvcz0wLG89dyk7bGV0IGI9MTtpZihtJiZiLS0sYy11PmImJmM+MCl7Zm9yKG4udmFsaWQ9ITEsdz10LmNyZWF0ZVZlcnRleCgpLHcubm9kZT1udWxsLHcuZ2s9Mix3LmxheWVyPWMtMSx4JiZrPHgubGVuZ3RoJiZ3LmxheWVyPT09eFtrXS5sYXllciYmKHcubmVhcj14W2srK10pLHQuYWRkVmVydGV4KHcpLHA9dC5saW5rVmVydGV4ZXMobyx3LG4ubGluaykscC52YWxpZD0hMCxwLnJldj1uLnJldixwLnBvcnRGcm9tQ29sT2Zmc2V0PWc/MDpsLHAucG9ydFRvQ29sT2Zmc2V0PTAscC5wb3J0RnJvbVBvcz1nPzA6ZixwLnBvcnRUb1Bvcz0wLG89dyxjLS07Yy11PmImJmM+MDspdz10LmNyZWF0ZVZlcnRleCgpLHcubm9kZT1udWxsLHcuZ2s9Myx3LmxheWVyPWMtMSx4JiZrPHgubGVuZ3RoJiZ3LmxheWVyPT09eFtrXS5sYXllciYmKHcubmVhcj14W2srK10pLHQuYWRkVmVydGV4KHcpLHA9dC5saW5rVmVydGV4ZXMobyx3LG4ubGluaykscC52YWxpZD0hMCxwLnJldj1uLnJldixwLnBvcnRGcm9tQ29sT2Zmc2V0PTAscC5wb3J0VG9Db2xPZmZzZXQ9MCxwLnBvcnRGcm9tUG9zPTAscC5wb3J0VG9Qb3M9MCxvPXcsYy0tO3A9dC5saW5rVmVydGV4ZXModyxyLG4ubGluaykscC52YWxpZD0hbSxtJiYody5uZWFyPXIpLHAucmV2PW4ucmV2LHAucG9ydEZyb21Db2xPZmZzZXQ9MCxwLnBvcnRUb0NvbE9mZnNldD1oLHAucG9ydEZyb21Qb3M9MCxwLnBvcnRUb1Bvcz1hfWVsc2Ugbi52YWxpZD0hMH19UjModCl7bGV0IGk9MDtjb25zdCBlPXQubGluaztpZihlIT09bnVsbCl7Y29uc3Qgcz1lLmZyb21Qb3J0LG49ZS50b1BvcnQ7aWYocyE9PW51bGwmJm4hPT1udWxsKXtjb25zdCBvPWUuZnJvbU5vZGUscj1lLnRvTm9kZTtpZihvIT09bnVsbCYmciE9PW51bGwpe2NvbnN0IGw9dGhpcy5tayghMCksaD10aGlzLm1rKCExKSxmPXRoaXMuc2V0c1BvcnRTcG90cz9sOmUuY29tcHV0ZVNwb3QoITAscyksYT10aGlzLnNldHNQb3J0U3BvdHM/aDplLmNvbXB1dGVTcG90KCExLG4pLGM9ZS5pc09ydGhvZ29uYWw7aWYoZi5pc1NpZGUoKSYmZi5pbmNsdWRlc1NpZGUoaCkmJmEuaXNTaWRlKCkmJmEuaW5jbHVkZXNTaWRlKGwpKXJldHVybiAwO2NvbnN0IHU9ZS5nZXRMaW5rUG9pbnQobyxzLGYsITAsYyxyLG4sUG9pbnQuYSgpKSxkPWUuZ2V0TGlua0RpcmVjdGlvbihvLHMsdSxmLCEwLGMscixuKTtQb2ludC5vKHUpLCghZi5pc05vbmUoKSYmZD09PXRoaXMuSUQodCwhMCl8fHRoaXMuc2V0c1BvcnRTcG90cyYmbyE9PW51bGwmJm8ucG9ydHMuY291bnQ9PT0xJiZ0LnJldikmJihpKz0xKTtjb25zdCBtPWUuZ2V0TGlua1BvaW50KHIsbixhLCExLGMsbyxzLFBvaW50LmEoKSksZz1lLmdldExpbmtEaXJlY3Rpb24ocixuLG0sYSwhMSxjLG8scyk7UG9pbnQubyhtKSwoIWEuaXNOb25lKCkmJmc9PT10aGlzLklEKHQsITEpfHx0aGlzLnNldHNQb3J0U3BvdHMmJnIhPT1udWxsJiZyLnBvcnRzLmNvdW50PT09MSYmdC5yZXYpJiYoaSs9Mil9fX1yZXR1cm4gaX1JRCh0LGkpe3JldHVybiB0aGlzLlM9PT05MD9pJiYhdC5yZXZ8fCFpJiZ0LnJldj8yNzA6OTA6dGhpcy5TPT09MTgwP2kmJiF0LnJldnx8IWkmJnQucmV2PzA6MTgwOnRoaXMuUz09PTI3MD9pJiYhdC5yZXZ8fCFpJiZ0LnJldj85MDoyNzA6aSYmIXQucmV2fHwhaSYmdC5yZXY/MTgwOjB9STModCxpKXtjb25zdCBlPVtdO3JldHVybiBlLnB1c2goaSksdGhpcy5PRCh0LGUpP2UucmV2ZXJzZSgpOltdfU9EKHQsaSl7Y29uc3QgZT1pW2kubGVuZ3RoLTFdLnNvdXJjZUVkZ2VzLml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBzPWUudmFsdWU7aWYocy5yZXZ8fCFzLnZhbGlkKWNvbnRpbnVlO2NvbnN0IG49cy5mcm9tVmVydGV4O2lmKGkucHVzaChuKSxuPT09dHx8dGhpcy5PRCh0LGkpKXJldHVybiEwO2kucG9wKCl9cmV0dXJuITF9YjMoKXtjb25zdCB0PXRoaXMuZ2k9W107Zm9yKGxldCBlPTA7ZTw9dGhpcy5DdDtlKyspdFtlXT0wO2NvbnN0IGk9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7ZS5pbmRleD0tMX10aGlzLmluaXRpYWxpemVJbmRpY2VzKCksdGhpcy52eT0tMSx0aGlzLkxnPTAsdGhpcy5Gcz0wO2ZvcihsZXQgZT0wO2U8PXRoaXMuQ3Q7ZSsrKXRbZV0+dFt0aGlzLkZzXSYmKHRoaXMudnk9dFtlXS0xLHRoaXMuRnM9ZSksdFtlXTx0W3RoaXMuTGddJiYodGhpcy5MZz1lKTt0aGlzLmV1PVtdO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKXRoaXMuZXVbZV09W107Zm9yKGkucmVzZXQoKTtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZSxzPWUubGF5ZXIsbj10aGlzLmV1W3NdO25bZS5pbmRleF09ZX19aW5pdGlhbGl6ZUluZGljZXMoKXtzd2l0Y2godGhpcy5fYyl7ZGVmYXVsdDpjYXNlIDIyOnRoaXMuTzMoKTticmVhaztjYXNlIDIwOnRoaXMuRTMoKTticmVhaztjYXNlIDIxOnRoaXMuQjMoKTticmVha319TzMoKXtsZXQgdD1udWxsO2NvbnN0IGk9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7aWYoZS5uZWFyJiYodD09PW51bGwmJih0PW5ldyBNYXApLGUubGF5ZXI9PT1lLm5lYXIubGF5ZXIpKXtjb25zdCBzPXQuZ2V0KGUubmVhcil8fFtdO3MucHVzaChlKSx0LnNldChlLm5lYXIscyl9fWZvcihpLnJlc2V0KCk7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7aWYoZS5uZWFyKWNvbnRpbnVlO2NvbnN0IHM9ZS5sYXllcjtpZihlLmluZGV4PXRoaXMuZ2lbc10sdGhpcy5naVtzXSsrLCF0KWNvbnRpbnVlO2NvbnN0IG49dC5nZXQoZSk7QXJyYXkuaXNBcnJheShuKSYmbi5mb3JFYWNoKG89PntvLmluZGV4PXRoaXMuZ2lbc10sdGhpcy5naVtzXSsrfSl9fUUzKCl7bGV0IHQ9bnVsbDtjb25zdCBpPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3QgZT1pLnZhbHVlO2lmKGUubmVhciYmKHQ9PT1udWxsJiYodD1uZXcgTWFwKSxlLmxheWVyPT09ZS5uZWFyLmxheWVyKSl7Y29uc3Qgcz10LmdldChlLm5lYXIpfHxbXTtzLnB1c2goZSksdC5zZXQoZS5uZWFyLHMpfX1mb3IobGV0IGU9dGhpcy5DdDtlPj0wO2UtLSlmb3IoaS5yZXNldCgpO2kubmV4dCgpOyl7Y29uc3Qgcz1pLnZhbHVlO3MubGF5ZXI9PT1lJiZzLmluZGV4PT09LTEmJnRoaXMuRUQocyx0KX19RUQodCxpKXtpZih0Lm5lYXIpcmV0dXJuO2NvbnN0IGU9dC5sYXllcjtpZih0LmluZGV4PXRoaXMuZ2lbZV0sdGhpcy5naVtlXSsrLGkpe2NvbnN0IG89aS5nZXQodCk7QXJyYXkuaXNBcnJheShvKSYmby5mb3JFYWNoKHI9PntyLmluZGV4PXRoaXMuZ2lbZV0sdGhpcy5naVtlXSsrfSl9Y29uc3Qgcz10LnRyO2xldCBuPSEwO2Zvcig7bjspe249ITE7Zm9yKGxldCBvPTA7bzxzLmxlbmd0aC0xO28rKyl7Y29uc3Qgcj1zW29dLGw9c1tvKzFdO3IucG9ydEZyb21Db2xPZmZzZXQ+bC5wb3J0RnJvbUNvbE9mZnNldCYmKG49ITAsc1tvXT1sLHNbbysxXT1yKX19Zm9yKGxldCBvPTA7bzxzLmxlbmd0aDtvKyspe2NvbnN0IHI9c1tvXTtpZihyLnZhbGlkKXtjb25zdCBsPXIudG9WZXJ0ZXg7bC5pbmRleD09PS0xJiZ0aGlzLkVEKGwsaSl9fX1CMygpe2xldCB0PW51bGw7Y29uc3QgaT10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZTtpZihlLm5lYXImJih0PT09bnVsbCYmKHQ9bmV3IE1hcCksZS5sYXllcj09PWUubmVhci5sYXllcikpe2NvbnN0IHM9dC5nZXQoZS5uZWFyKXx8W107cy5wdXNoKGUpLHQuc2V0KGUubmVhcixzKX19Zm9yKGxldCBlPTA7ZTw9dGhpcy5DdDtlKyspZm9yKGkucmVzZXQoKTtpLm5leHQoKTspe2NvbnN0IHM9aS52YWx1ZTtzLmxheWVyPT09ZSYmcy5pbmRleD09PS0xJiZ0aGlzLkJEKHMsdCl9fUJEKHQsaSl7aWYodC5uZWFyKXJldHVybjtjb25zdCBlPXQubGF5ZXI7aWYodC5pbmRleD10aGlzLmdpW2VdLHRoaXMuZ2lbZV0rKyxpKXtjb25zdCBoPWkuZ2V0KHQpO0FycmF5LmlzQXJyYXkoaCkmJmguZm9yRWFjaChmPT57Zi5pbmRleD10aGlzLmdpW2VdLHRoaXMuZ2lbZV0rK30pfWNvbnN0IHM9dC55bztsZXQgbj0hMCxvPTA7Zm9yKDtuOylmb3Iobj0hMSxvPTA7bzxzLmxlbmd0aC0xO28rKyl7Y29uc3QgaD1zW29dLGY9c1tvKzFdO2gucG9ydFRvQ29sT2Zmc2V0PmYucG9ydFRvQ29sT2Zmc2V0JiYobj0hMCxzW29dPWYsc1tvKzFdPWgpfWxldCByLGw7Zm9yKG89MDtvPHMubGVuZ3RoO28rKylsPXNbb10sbC52YWxpZCYmKHI9bC5mcm9tVmVydGV4LHIuaW5kZXg9PT0tMSYmdGhpcy5CRChyLGkpKX1rMygpe3RoaXMucXQ9LTE7Zm9yKGxldCB0PTA7dDw9dGhpcy5DdDt0Kyspe2NvbnN0IGk9dGhpcy5YaCh0KTtsZXQgZT0wO2NvbnN0IHM9dGhpcy5naVt0XTtmb3IobGV0IG49MDtuPHM7bisrKXtjb25zdCBvPWlbbl07ZSs9dGhpcy5ub2RlTWluQ29sdW1uU3BhY2UobywhMCksby5jb2x1bW49ZSxlKz0xLGUrPXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKG8sITEpfXRoaXMucXQ9TWF0aC5tYXgodGhpcy5xdCxlLTEpLHRoaXMuWWgodCxpKX19cmVkdWNlQ3Jvc3NpbmdzKCl7bGV0IHQ9dGhpcy5jb3VudENyb3NzaW5ncygpLGk9dGhpcy50ZSgpLGU9MCxzPTAsbj0wO2ZvcihlPTA7ZTx0aGlzLmxmO2UrKyl7Zm9yKHM9MDtzPD10aGlzLkN0O3MrKyl0aGlzLnBrKHMsMSksdGhpcy5jcyhzLDEsITEsMSk7Zm9yKG49dGhpcy5jb3VudENyb3NzaW5ncygpLG48dCYmKHQ9bixpPXRoaXMudGUoKSkscz10aGlzLkN0O3M+PTA7cy0tKXRoaXMucGsocywtMSksdGhpcy5jcyhzLC0xLCExLC0xKTtuPXRoaXMuY291bnRDcm9zc2luZ3MoKSxuPHQmJih0PW4saT10aGlzLnRlKCkpfWZvcih0aGlzLl9lKGkpLGU9MDtlPHRoaXMubGY7ZSsrKXtmb3Iocz0wO3M8PXRoaXMuQ3Q7cysrKXRoaXMucGsocywwKSx0aGlzLmNzKHMsMCwhMSwwKTtmb3Iobj10aGlzLmNvdW50Q3Jvc3NpbmdzKCksbjx0JiYodD1uLGk9dGhpcy50ZSgpKSxzPXRoaXMuQ3Q7cz49MDtzLS0pdGhpcy5wayhzLDApLHRoaXMuY3MocywwLCExLDApO249dGhpcy5jb3VudENyb3NzaW5ncygpLG48dCYmKHQ9bixpPXRoaXMudGUoKSl9dGhpcy5fZShpKTtsZXQgbz0hMSxyPTAsbD0wLGg9MCxmPTA7c3dpdGNoKHRoaXMudHUpe2Nhc2UgMzA6YnJlYWs7Y2FzZSAzMjpmb3IoaD10KzE7KGY9dGhpcy5jb3VudENyb3NzaW5ncygpKTxoOylmb3IoaD1mLHI9dGhpcy5DdDtyPj0wO3ItLSlmb3IobD0wO2w8PXI7bCsrKXtmb3Iobz0hMDtvOylmb3Iobz0hMSxzPXI7cz49bDtzLS0pbz10aGlzLmNzKHMsLTEsITEsLTEpfHxvO2ZvcihuPXRoaXMuY291bnRDcm9zc2luZ3MoKSxuPj10P3RoaXMuX2UoaSk6KHQ9bixpPXRoaXMudGUoKSksbz0hMDtvOylmb3Iobz0hMSxzPXI7cz49bDtzLS0pbz10aGlzLmNzKHMsMSwhMSwxKXx8bztmb3Iobj10aGlzLmNvdW50Q3Jvc3NpbmdzKCksbj49dD90aGlzLl9lKGkpOih0PW4saT10aGlzLnRlKCkpLG89ITA7bzspZm9yKG89ITEscz1sO3M8PXI7cysrKW89dGhpcy5jcyhzLDEsITEsMSl8fG87Zm9yKG4+PXQ/dGhpcy5fZShpKToodD1uLGk9dGhpcy50ZSgpKSxvPSEwO287KWZvcihvPSExLHM9bDtzPD1yO3MrKylvPXRoaXMuY3MocywtMSwhMSwtMSl8fG87Zm9yKG4+PXQ/dGhpcy5fZShpKToodD1uLGk9dGhpcy50ZSgpKSxvPSEwO287KWZvcihvPSExLHM9cjtzPj1sO3MtLSlvPXRoaXMuY3MocywwLCExLDApfHxvO2ZvcihuPj10P3RoaXMuX2UoaSk6KHQ9bixpPXRoaXMudGUoKSksbz0hMDtvOylmb3Iobz0hMSxzPWw7czw9cjtzKyspbz10aGlzLmNzKHMsMCwhMSwwKXx8bztuPj10P3RoaXMuX2UoaSk6KHQ9bixpPXRoaXMudGUoKSl9YnJlYWs7ZGVmYXVsdDpjYXNlIDMxOmZvcihyPXRoaXMuQ3QsbD0wLGg9dCsxOyhmPXRoaXMuY291bnRDcm9zc2luZ3MoKSk8aDspe2ZvcihoPWYsbz0hMDtvOylmb3Iobz0hMSxzPXI7cz49bDtzLS0pbz10aGlzLmNzKHMsLTEsITEsLTEpfHxvO2ZvcihuPXRoaXMuY291bnRDcm9zc2luZ3MoKSxuPj10P3RoaXMuX2UoaSk6KHQ9bixpPXRoaXMudGUoKSksbz0hMDtvOylmb3Iobz0hMSxzPXI7cz49bDtzLS0pbz10aGlzLmNzKHMsMSwhMSwxKXx8bztmb3Iobj10aGlzLmNvdW50Q3Jvc3NpbmdzKCksbj49dD90aGlzLl9lKGkpOih0PW4saT10aGlzLnRlKCkpLG89ITA7bzspZm9yKG89ITEscz1sO3M8PXI7cysrKW89dGhpcy5jcyhzLDEsITEsMSl8fG87Zm9yKG4+PXQ/dGhpcy5fZShpKToodD1uLGk9dGhpcy50ZSgpKSxvPSEwO287KWZvcihvPSExLHM9bDtzPD1yO3MrKylvPXRoaXMuY3MocywtMSwhMSwtMSl8fG87Zm9yKG4+PXQ/dGhpcy5fZShpKToodD1uLGk9dGhpcy50ZSgpKSxvPSEwO287KWZvcihvPSExLHM9cjtzPj1sO3MtLSlvPXRoaXMuY3MocywwLCExLDApfHxvO2ZvcihuPj10P3RoaXMuX2UoaSk6KHQ9bixpPXRoaXMudGUoKSksbz0hMDtvOylmb3Iobz0hMSxzPWw7czw9cjtzKyspbz10aGlzLmNzKHMsMCwhMSwwKXx8bztuPj10P3RoaXMuX2UoaSk6KHQ9bixpPXRoaXMudGUoKSl9YnJlYWt9dGhpcy5fZShpKX1wayh0LGkpe0RlYnVnJiYoVS5yKHQsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJtZWRpYW5CYXJ5Y2VudGVyQ3Jvc3NpbmdSZWR1Y3Rpb246dW5maXhlZExheWVyXCIpLFUucihpLExheWVyZWREaWdyYXBoTGF5b3V0LFwibWVkaWFuQmFyeWNlbnRlckNyb3NzaW5nUmVkdWN0aW9uOmRpcmVjdGlvblwiKSk7bGV0IGU9MCxzPSExO2NvbnN0IG49dGhpcy5YaCh0KSxvPXRoaXMuZ2lbdF0scj10aGlzLkNEKHQsaSksbD10aGlzLiR5KHQsaSk7Zm9yKGU9MDtlPG87ZSsrKWxbZV09PT0tMSYmKGxbZV09bltlXS5jb2x1bW4pLHJbZV09PT0tMSYmKHJbZV09bltlXS5jb2x1bW4pO2xldCBoPSEwLGY7Zm9yKDtoOylmb3IoaD0hMSxlPTA7ZTxvLTE7ZSsrKWlmKHJbZSsxXTxyW2VdfHxyW2UrMV09PT1yW2VdJiZsW2UrMV08bFtlXSl7cz0hMCxoPSEwO2NvbnN0IGM9cltlXTtyW2VdPXJbZSsxXSxyW2UrMV09Yztjb25zdCB1PWxbZV07bFtlXT1sW2UrMV0sbFtlKzFdPXUsZj1uW2VdLG5bZV09bltlKzFdLG5bZSsxXT1mfWxldCBhPTA7Zm9yKGU9MDtlPG87ZSsrKWY9bltlXSxmLmluZGV4PWUsYSs9dGhpcy5ub2RlTWluQ29sdW1uU3BhY2UoZiwhMCksZi5jb2x1bW49YSxhKz0xLGErPXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKGYsITEpO3JldHVybiB0aGlzLlloKHQsbiksc31jcyh0LGksZSxzKXtjb25zdCBuPXRoaXMuWGgodCksbz10aGlzLmdpW3RdLHI9dGhpcy5ORCh0LGkpO2xldCBsPTAsaDtpZighZXx8cz4wKWZvcihoPVtdLGw9MDtsPG87bCsrKWhbbF09LTE7ZWxzZSBoPXRoaXMuJHkodCwtMSk7bGV0IGY7aWYoIWV8fHM8MClmb3IoZj1bXSxsPTA7bDxvO2wrKylmW2xdPS0xO2Vsc2UgZj10aGlzLiR5KHQsMSk7bGV0IGE9ITEsYz0hMDtmb3IoO2M7KWZvcihjPSExLGw9MDtsPG8tMTtsKyspe2NvbnN0IHU9cltuW2xdLmluZGV4Km8rbltsKzFdLmluZGV4XSxkPXJbbltsKzFdLmluZGV4Km8rbltsXS5pbmRleF07bGV0IG09MCxnPTA7Y29uc3QgcD1uW2xdLmNvbHVtbix3PW5bbCsxXS5jb2x1bW4seD10aGlzLm5vZGVNaW5Db2x1bW5TcGFjZShuW2xdLCEwKSxrPXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKG5bbF0sITEpLGI9dGhpcy5ub2RlTWluQ29sdW1uU3BhY2UobltsKzFdLCEwKSxTPXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKG5bbCsxXSwhMSksTT1wLXgrYixBPXctaytTO2xldCBDPTAsUD0wLE49MCxUPTAsTD0wLEQ9MCxGPTAsSSxSPTAsTyxZPTA7Y29uc3QgSz1uW2xdLnNvdXJjZUVkZ2VzLml0ZXJhdG9yO2lmKGUmJnM8PTApZm9yKDtLLm5leHQoKTspe2NvbnN0IHY9Sy52YWx1ZTtJPXYuZnJvbVZlcnRleCx2LnZhbGlkJiZJLmxheWVyIT09dCYmKE49dGhpcy5saW5rU3RyYWlnaHRlbldlaWdodCh2KSxUPXYucG9ydEZyb21Db2xPZmZzZXQsTD12LnBvcnRUb0NvbE9mZnNldCxEPUkuY29sdW1uLEMrPShNYXRoLmFicyhwK0wtKEQrVCkpKzEpKk4sUCs9KE1hdGguYWJzKEErTC0oRCtUKSkrMSkqTil9Zm9yKEsucmVzZXQoKTtLLm5leHQoKTspe2NvbnN0IHY9Sy52YWx1ZTtpZihJPXYuZnJvbVZlcnRleCx2LnZhbGlkJiZJLmxheWVyPT09dCl7Zm9yKFI9MDtSPG4ubGVuZ3RoJiZuW1JdIT09STspUisrO1I8bCYmKG0rPTIqKGwtUiksZys9MioobCsxLVIpKSxSPT09bCsxJiYobSs9MSksUj5sKzEmJihtKz00KihSLWwpLGcrPTQqKFItKGwrMSkpKX19Y29uc3QgQj1uW2xdLmRlc3RpbmF0aW9uRWRnZXMuaXRlcmF0b3I7aWYoZSYmcz49MClmb3IoO0IubmV4dCgpOyl7Y29uc3Qgdj1CLnZhbHVlO089di50b1ZlcnRleCx2LnZhbGlkJiZPLmxheWVyIT09dCYmKE49dGhpcy5saW5rU3RyYWlnaHRlbldlaWdodCh2KSxUPXYucG9ydEZyb21Db2xPZmZzZXQsTD12LnBvcnRUb0NvbE9mZnNldCxGPU8uY29sdW1uLEMrPShNYXRoLmFicyhwK1QtKEYrTCkpKzEpKk4sUCs9KE1hdGguYWJzKEErVC0oRitMKSkrMSkqTil9Zm9yKEIucmVzZXQoKTtCLm5leHQoKTspe2NvbnN0IHY9Qi52YWx1ZTtpZihPPXYudG9WZXJ0ZXgsdi52YWxpZCYmTy5sYXllcj09PXQpe2ZvcihZPTA7WTxuLmxlbmd0aCYmbltZXSE9PU87KVkrKztZPT09bCsxJiYoZys9MSl9fWNvbnN0IHo9bltsKzFdLnNvdXJjZUVkZ2VzLml0ZXJhdG9yO2lmKGUmJnM8PTApZm9yKDt6Lm5leHQoKTspe2NvbnN0IHY9ei52YWx1ZTtJPXYuZnJvbVZlcnRleCx2LnZhbGlkJiZJLmxheWVyIT09dCYmKE49dGhpcy5saW5rU3RyYWlnaHRlbldlaWdodCh2KSxUPXYucG9ydEZyb21Db2xPZmZzZXQsTD12LnBvcnRUb0NvbE9mZnNldCxEPUkuY29sdW1uLEMrPShNYXRoLmFicyh3K0wtKEQrVCkpKzEpKk4sUCs9KE1hdGguYWJzKE0rTC0oRCtUKSkrMSkqTil9Zm9yKHoucmVzZXQoKTt6Lm5leHQoKTspe2NvbnN0IHY9ei52YWx1ZTtpZihJPXYuZnJvbVZlcnRleCx2LnZhbGlkJiZJLmxheWVyPT09dCl7Zm9yKFI9MDtSPG4ubGVuZ3RoJiZuW1JdIT09STspUisrO1I8bCYmKG0rPTIqKGwrMS1SKSxnKz0yKihsLVIpKSxSPT09bCYmKGcrPTEpLFI+bCsxJiYobSs9NCooUi0obCsxKSksZys9NCooUi1sKSl9fWNvbnN0IFY9bltsKzFdLmRlc3RpbmF0aW9uRWRnZXMuaXRlcmF0b3I7aWYoZSYmcz49MClmb3IoO1YubmV4dCgpOyl7Y29uc3Qgdj1WLnZhbHVlO089di50b1ZlcnRleCx2LnZhbGlkJiZPLmxheWVyIT09dCYmKE49dGhpcy5saW5rU3RyYWlnaHRlbldlaWdodCh2KSxUPXYucG9ydEZyb21Db2xPZmZzZXQsTD12LnBvcnRUb0NvbE9mZnNldCxGPU8uY29sdW1uLEMrPShNYXRoLmFicyh3K1QtKEYrTCkpKzEpKk4sUCs9KE1hdGguYWJzKE0rVC0oRitMKSkrMSkqTil9Zm9yKFYucmVzZXQoKTtWLm5leHQoKTspe2NvbnN0IHY9Vi52YWx1ZTtpZihPPXYudG9WZXJ0ZXgsdi52YWxpZCYmTy5sYXllcj09PXQpe2ZvcihZPTA7WTxuLmxlbmd0aCYmbltZXSE9PU87KVkrKztZPT09bCYmKG0rPTEpfX1sZXQgSD0wLFc9MDtjb25zdCBqPWhbbltsXS5pbmRleF0sJD1mW25bbF0uaW5kZXhdLFg9aFtuW2wrMV0uaW5kZXhdLEo9ZltuW2wrMV0uaW5kZXhdO2lmKGohPT0tMSYmKEgrPU1hdGguYWJzKGotcCksVys9TWF0aC5hYnMoai1BKSksJCE9PS0xJiYoSCs9TWF0aC5hYnMoJC1wKSxXKz1NYXRoLmFicygkLUEpKSxYIT09LTEmJihIKz1NYXRoLmFicyhYLXcpLFcrPU1hdGguYWJzKFgtTSkpLEohPT0tMSYmKEgrPU1hdGguYWJzKEotdyksVys9TWF0aC5hYnMoSi1NKSksZzxtLS41fHxnPT09bSYmZDx1LS41fHxnPT09bSYmZD09PXUmJlA8Qy0uNXx8Zz09PW0mJmQ9PT11JiZQPT09QyYmVzxILS41KXthPSEwLGM9ITAsbltsXS5jb2x1bW49QSxuW2wrMV0uY29sdW1uPU07Y29uc3Qgdj1uW2xdO25bbF09bltsKzFdLG5bbCsxXT12fX1mb3IobD0wO2w8bztsKyspbltsXS5pbmRleD1sO3JldHVybiB0aGlzLlloKHQsbiksYX1zdHJhaWdodGVuQW5kUGFjaygpe2lmKHRoaXMuSW4hPT0wKXt0aGlzLlYzKCk7cmV0dXJufWxldCB0PTAsaT0hMSxlPSh0aGlzLm5yJjEpIT09MDtjb25zdCBzPSh0aGlzLm5yJjgpIT09MDtpZih0aGlzLm5ldHdvcmsuZWRnZXMuY291bnQ+MWUzJiZzJiYoZT0hMSksZSl7Y29uc3Qgbj1bXTtsZXQgbz0wO2ZvcihvPTA7bzw9dGhpcy5DdDtvKyspbltvXT0wO2xldCByPTA7Y29uc3QgbD10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtsLm5leHQoKTspe2NvbnN0IGY9bC52YWx1ZTt0PWYubGF5ZXIscj1mLmNvbHVtbjtjb25zdCBhPXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKGYsITEpO25bdF09TWF0aC5tYXgoblt0XSxyK2EpfWNvbnN0IGg9ODtmb3IobC5yZXNldCgpO2wubmV4dCgpOyl7Y29uc3QgZj1sLnZhbHVlO3Q9Zi5sYXllcixyPWYuY29sdW1uLGYuY29sdW1uPSgodGhpcy5xdC1uW3RdKSpoPj4xKStyKmh9dGhpcy5xdCo9aH1pZih0aGlzLm5yJjIpe2k9ITA7bGV0IG49MDtmb3IoO2kmJm48dGhpcy5pdTspe2ZvcihpPSExLHQ9dGhpcy5GcysxO3Q8PXRoaXMuQ3Q7dCsrKWk9dGhpcy5GZyh0LDEpfHxpO2Zvcih0PXRoaXMuRnMtMTt0Pj0wO3QtLSlpPXRoaXMuRmcodCwtMSl8fGk7aT10aGlzLkZnKHRoaXMuRnMsMCl8fGksbisrfX1pZih0aGlzLm5yJjQpe2Zvcih0PXRoaXMuRnMrMTt0PD10aGlzLkN0O3QrKyl0aGlzLnJDKHQsMSk7Zm9yKHQ9dGhpcy5Gcy0xO3Q+PTA7dC0tKXRoaXMuckModCwtMSk7dGhpcy5yQyh0aGlzLkZzLDApfWlmKGUmJih0aGlzLlZEKC0xKSx0aGlzLlZEKDEpKSx0aGlzLm5yJjIpe2k9ITA7bGV0IG49MDtmb3IoO2kmJm48dGhpcy5pdTspe2ZvcihpPSExLGk9dGhpcy5GZyh0aGlzLkZzLDApfHxpLHQ9dGhpcy5GcysxO3Q8PXRoaXMuQ3Q7dCsrKWk9dGhpcy5GZyh0LDApfHxpO2Zvcih0PXRoaXMuRnMtMTt0Pj0wO3QtLSlpPXRoaXMuRmcodCwwKXx8aTtuKyt9fX1GZyh0LGkpe0RlYnVnJiYoVS5yKHQsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJiZW5kU3RyYWlnaHRlbjp1bmZpeGVkTGF5ZXJcIiksVS5yKGksTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJiZW5kU3RyYWlnaHRlbjpkaXJlY3Rpb25cIikpO2xldCBlPSExO2Zvcig7dGhpcy56Myh0LGkpOyllPSEwO3JldHVybiBlfXozKHQsaSl7RGVidWcmJihVLnIodCxMYXllcmVkRGlncmFwaExheW91dCxcInNoaWZ0YmVuZFN0cmFpZ2h0ZW46dW5maXhlZExheWVyXCIpLFUucihpLExheWVyZWREaWdyYXBoTGF5b3V0LFwic2hpZnRiZW5kU3RyYWlnaHRlbjpkaXJlY3Rpb25cIikpO2xldCBlPTA7Y29uc3Qgcz10aGlzLlhoKHQpLG49dGhpcy5naVt0XSxvPXRoaXMuJHkodCwtMSk7aWYoaT4wKWZvcihlPTA7ZTxuO2UrKylvW2VdPS0xO2NvbnN0IHI9dGhpcy4keSh0LDEpO2lmKGk8MClmb3IoZT0wO2U8bjtlKyspcltlXT0tMTtsZXQgbD0hMSxoPSEwO2Zvcig7aDspZm9yKGg9ITEsZT0wO2U8bjtlKyspe2NvbnN0IGY9c1tlXS5jb2x1bW4sYT10aGlzLm5vZGVNaW5Db2x1bW5TcGFjZShzW2VdLCEwKSxjPXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKHNbZV0sITEpO2xldCB1PTA7ZS0xPDB8fGYtc1tlLTFdLmNvbHVtbi0xPmErdGhpcy5ub2RlTWluQ29sdW1uU3BhY2Uoc1tlLTFdLCExKT91PWYtMTp1PWY7bGV0IGQ9MDtlKzE+PW58fHNbZSsxXS5jb2x1bW4tZi0xPmMrdGhpcy5ub2RlTWluQ29sdW1uU3BhY2Uoc1tlKzFdLCEwKT9kPWYrMTpkPWY7bGV0IG09MCxnPTAscD0wLHc9MCx4PTAsaz0wO2lmKGk8PTApe2NvbnN0IFA9c1tlXS5zb3VyY2VFZGdlcy5pdGVyYXRvcjtmb3IoO1AubmV4dCgpOyl7Y29uc3QgTj1QLnZhbHVlLFQ9Ti5mcm9tVmVydGV4O2lmKE4udmFsaWQmJlQubGF5ZXIhPT10KXt3PXRoaXMubGlua1N0cmFpZ2h0ZW5XZWlnaHQoTikseD1OLnBvcnRGcm9tQ29sT2Zmc2V0LGs9Ti5wb3J0VG9Db2xPZmZzZXQ7Y29uc3QgTD1ULmNvbHVtbjttKz0oTWF0aC5hYnMoZitrLShMK3gpKSsxKSp3LGcrPShNYXRoLmFicyh1K2stKEwreCkpKzEpKncscCs9KE1hdGguYWJzKGQray0oTCt4KSkrMSkqd319fWlmKGk+PTApe2NvbnN0IFA9c1tlXS5kZXN0aW5hdGlvbkVkZ2VzLml0ZXJhdG9yO2Zvcig7UC5uZXh0KCk7KXtjb25zdCBOPVAudmFsdWUsVD1OLnRvVmVydGV4O2lmKE4udmFsaWQmJlQubGF5ZXIhPT10KXt3PXRoaXMubGlua1N0cmFpZ2h0ZW5XZWlnaHQoTikseD1OLnBvcnRGcm9tQ29sT2Zmc2V0LGs9Ti5wb3J0VG9Db2xPZmZzZXQ7Y29uc3QgTD1ULmNvbHVtbjttKz0oTWF0aC5hYnMoZit4LShMK2spKSsxKSp3LGcrPShNYXRoLmFicyh1K3gtKEwraykpKzEpKncscCs9KE1hdGguYWJzKGQreC0oTCtrKSkrMSkqd319fWxldCBiPTAsUz0wLE09MDtjb25zdCBBPW9bc1tlXS5pbmRleF0sQz1yW3NbZV0uaW5kZXhdO0EhPT0tMSYmKGIrPU1hdGguYWJzKEEtZiksUys9TWF0aC5hYnMoQS11KSxNKz1NYXRoLmFicyhBLWQpKSxDIT09LTEmJihiKz1NYXRoLmFicyhDLWYpLFMrPU1hdGguYWJzKEMtdSksTSs9TWF0aC5hYnMoQy1kKSksZzxtfHxnPT09bSYmUzxiPyhsPSEwLGg9ITAsc1tlXS5jb2x1bW49dSk6KHA8bXx8cD09PW0mJk08YikmJihsPSEwLGg9ITAsc1tlXS5jb2x1bW49ZCl9cmV0dXJuIHRoaXMuWWgodCxzKSx0aGlzLkp5KCksbH1yQyh0LGkpe0RlYnVnJiYoVS5yKHQsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJtZWRpYW5TdHJhaWdodGVuOnVuZml4ZWRMYXllclwiKSxVLnIoaSxMYXllcmVkRGlncmFwaExheW91dCxcIm1lZGlhblN0cmFpZ2h0ZW46ZGlyZWN0aW9uXCIpKTtsZXQgZT0wO2NvbnN0IHM9dGhpcy5YaCh0KSxuPXRoaXMuZ2lbdF0sbz10aGlzLkNEKHQsaSkscj1bXTtmb3IoZT0wO2U8bjtlKyspcltlXT1vW2VdO2xldCBsPSExLGg9ITA7Zm9yKDtoOylmb3IoaD0hMSxlPTA7ZTxuO2UrKyl7Y29uc3QgZj1zW2VdLmNvbHVtbixhPXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKHNbZV0sITApLGM9dGhpcy5ub2RlTWluQ29sdW1uU3BhY2Uoc1tlXSwhMSk7bGV0IHU9MCxkPTAsbT0wLGc9MCxwPTA7cltlXT09PS0xP2U9PT0wJiZlPT09bi0xP3U9ZjplPT09MD8oZD1zW2UrMV0uY29sdW1uLGQtZj09PWMrdGhpcy5ub2RlTWluQ29sdW1uU3BhY2Uoc1tlKzFdLCEwKT91PWYtMTp1PWYpOmU9PT1uLTE/KG09c1tlLTFdLmNvbHVtbixmLW09PT1hK3RoaXMubm9kZU1pbkNvbHVtblNwYWNlKHNbZS0xXSwhMSk/dT1mKzE6dT1mKToobT1zW2UtMV0uY29sdW1uLHA9bSt0aGlzLm5vZGVNaW5Db2x1bW5TcGFjZShzW2UtMV0sITEpK2ErMSxkPXNbZSsxXS5jb2x1bW4sZz1kLXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKHNbZSsxXSwhMCktYy0xLHU9KHArZykvMnwwKTplPT09MCYmZT09PW4tMT91PXJbZV06ZT09PTA/KGQ9c1tlKzFdLmNvbHVtbixnPWQtdGhpcy5ub2RlTWluQ29sdW1uU3BhY2Uoc1tlKzFdLCEwKS1jLTEsdT1NYXRoLm1pbihyW2VdLGcpKTplPT09bi0xPyhtPXNbZS0xXS5jb2x1bW4scD1tK3RoaXMubm9kZU1pbkNvbHVtblNwYWNlKHNbZS0xXSwhMSkrYSsxLHU9TWF0aC5tYXgocltlXSxwKSk6KG09c1tlLTFdLmNvbHVtbixwPW0rdGhpcy5ub2RlTWluQ29sdW1uU3BhY2Uoc1tlLTFdLCExKSthKzEsZD1zW2UrMV0uY29sdW1uLGc9ZC10aGlzLm5vZGVNaW5Db2x1bW5TcGFjZShzW2UrMV0sITApLWMtMSxwPHJbZV0mJnJbZV08Zz91PXJbZV06cD49cltlXT91PXA6Zzw9cltlXSYmKHU9ZykpLHUhPT1mJiYobD0hMCxoPSEwLHNbZV0uY29sdW1uPXUpfXJldHVybiB0aGlzLlloKHQscyksdGhpcy5KeSgpLGx9WDMoKXtmb3IobGV0IHQ9MDt0PD10aGlzLnF0O3QrKylmb3IoO3RoaXMuWTModCwxKTspO3RoaXMuSnkoKX1ZMyh0LGkpe0RlYnVnJiYoVS5yKHQsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJwYWNrQXV4OmNvbHVtblwiKSxVLnIoaSxMYXllcmVkRGlncmFwaExheW91dCxcInBhY2tBdXg6ZGlyZWN0aW9uXCIpKTtsZXQgZT0hMDtjb25zdCBzPXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbz1zLnZhbHVlLHI9dGhpcy5ub2RlTWluQ29sdW1uU3BhY2UobywhMCksbD10aGlzLm5vZGVNaW5Db2x1bW5TcGFjZShvLCExKTtpZihvLmNvbHVtbi1yPD10JiZvLmNvbHVtbitsPj10KXtlPSExO2JyZWFrfX1sZXQgbj0hMTtpZihlKXtpZihpPjApZm9yKHMucmVzZXQoKTtzLm5leHQoKTspe2NvbnN0IG89cy52YWx1ZTtvLmNvbHVtbj50JiYoby5jb2x1bW4tPTEsbj0hMCl9aWYoaTwwKWZvcihzLnJlc2V0KCk7cy5uZXh0KCk7KXtjb25zdCBvPXMudmFsdWU7by5jb2x1bW48dCYmKG8uY29sdW1uKz0xLG49ITApfX1yZXR1cm4gbn1LMygpe3RoaXMuWDMoKTtmb3IobGV0IHQ9MDt0PHRoaXMucXQ7dCsrKWZvcig7dGhpcy5VMyh0LDEpOyk7dGhpcy5KeSgpfVUzKHQsaSl7RGVidWcmJihVLnIodCxMYXllcmVkRGlncmFwaExheW91dCxcInRpZ2h0UGFja0F1eDpjb2x1bW5cIiksVS5yKGksTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJ0aWdodFBhY2tBdXg6ZGlyZWN0aW9uXCIpKTtsZXQgZT10O2k+MCYmKGU9dCsxKSxpPDAmJihlPXQtMSk7bGV0IHM9MDtjb25zdCBuPVtdLG89W107Zm9yKHM9MDtzPD10aGlzLkN0O3MrKyluW3NdPSExLG9bc109ITE7Y29uc3Qgcj10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtyLm5leHQoKTspe2NvbnN0IGY9ci52YWx1ZSxhPWYuY29sdW1uLXRoaXMubm9kZU1pbkNvbHVtblNwYWNlKGYsITApLGM9Zi5jb2x1bW4rdGhpcy5ub2RlTWluQ29sdW1uU3BhY2UoZiwhMSk7YTw9dCYmYz49dCYmKG5bZi5sYXllcl09ITApLGE8PWUmJmM+PWUmJihvW2YubGF5ZXJdPSEwKX1sZXQgbD0hMCxoPSExO2ZvcihzPTA7czw9dGhpcy5DdDtzKyspbD1sJiYhKG5bc10mJm9bc10pO2lmKGwpe2lmKGk+MClmb3Ioci5yZXNldCgpO3IubmV4dCgpOyl7Y29uc3QgZj1yLnZhbHVlO2YuY29sdW1uPnQmJihmLmNvbHVtbi09MSxoPSEwKX1pZihpPDApZm9yKHIucmVzZXQoKTtyLm5leHQoKTspe2NvbnN0IGY9ci52YWx1ZTtmLmNvbHVtbjx0JiYoZi5jb2x1bW4rPTEsaD0hMCl9fXJldHVybiBofVZEKHQpe0RlYnVnJiZVLnIodCxMYXllcmVkRGlncmFwaExheW91dCxcImNvbXBvbmVudFBhY2s6ZGlyZWN0aW9uXCIpLHRoaXMuSzMoKTtsZXQgaT0wLGUscz0wLG49MCxvPTA7aWYodD4wKWZvcihpPTA7aTw9dGhpcy5xdDtpKyspZm9yKGU9dGhpcy50ZSgpLHM9dGhpcy5kayghMCksbj1zKzE7czxuOyluPXMsdGhpcy56RChpLDEpLG89dGhpcy5kayghMCksbz5zP3RoaXMuX2UoZSk6bzxzJiYocz1vLGU9dGhpcy50ZSgpKTtpZih0PDApZm9yKGk9dGhpcy5xdDtpPj0wO2ktLSlmb3IoZT10aGlzLnRlKCkscz10aGlzLmRrKCEwKSxuPXMrMTtzPG47KW49cyx0aGlzLnpEKGksLTEpLG89dGhpcy5kayghMCksbz5zP3RoaXMuX2UoZSk6bzxzJiYocz1vLGU9dGhpcy50ZSgpKTt0aGlzLkp5KCl9ekQodCxpKXt0aGlzLm5uPTA7Y29uc3QgZT10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IGE9ZS52YWx1ZTthLmNvbXBvbmVudD0tMX1pZihpPjApZm9yKGUucmVzZXQoKTtlLm5leHQoKTspe2NvbnN0IGE9ZS52YWx1ZTthLmNvbHVtbi10aGlzLm5vZGVNaW5Db2x1bW5TcGFjZShhLCEwKTw9dCYmKGEuY29tcG9uZW50PXRoaXMubm4pfWlmKGk8MClmb3IoZS5yZXNldCgpO2UubmV4dCgpOyl7Y29uc3QgYT1lLnZhbHVlO2EuY29sdW1uK3RoaXMubm9kZU1pbkNvbHVtblNwYWNlKGEsITEpPj10JiYoYS5jb21wb25lbnQ9dGhpcy5ubil9Zm9yKHRoaXMubm4rKyxlLnJlc2V0KCk7ZS5uZXh0KCk7KXtjb25zdCBhPWUudmFsdWU7YS5jb21wb25lbnQ9PT0tMSYmKHRoaXMubkMoYSx0aGlzLm5uLC0xLCEwLCEwKSx0aGlzLm5uKyspfWxldCBzPTA7Y29uc3Qgbj1bXTtmb3Iocz0wO3M8dGhpcy5ubip0aGlzLm5uO3MrKyluW3NdPSExO2NvbnN0IG89W107Zm9yKHM9MDtzPCh0aGlzLkN0KzEpKih0aGlzLnF0KzEpO3MrKylvW3NdPS0xO2ZvcihlLnJlc2V0KCk7ZS5uZXh0KCk7KXtjb25zdCBhPWUudmFsdWUsYz1hLmxheWVyLHU9TWF0aC5tYXgoMCxhLmNvbHVtbi10aGlzLm5vZGVNaW5Db2x1bW5TcGFjZShhLCEwKSksZD1NYXRoLm1pbih0aGlzLnF0LGEuY29sdW1uK3RoaXMubm9kZU1pbkNvbHVtblNwYWNlKGEsITEpKTtmb3IobGV0IG09dTttPD1kO20rKylvW2MqKHRoaXMucXQrMSkrbV09YS5jb21wb25lbnR9Zm9yKGxldCBhPTA7YTw9dGhpcy5DdDthKyspe2lmKGk+MClmb3IobGV0IGM9MDtjPHRoaXMucXQ7YysrKW9bYSoodGhpcy5xdCsxKStjXSE9PS0xJiZvW2EqKHRoaXMucXQrMSkrYysxXSE9PS0xJiZvW2EqKHRoaXMucXQrMSkrY10hPT1vW2EqKHRoaXMucXQrMSkrYysxXSYmKG5bb1thKih0aGlzLnF0KzEpK2NdKnRoaXMubm4rb1thKih0aGlzLnF0KzEpK2MrMV1dPSEwKTtpZihpPDApZm9yKGxldCBjPXRoaXMucXQ7Yz4wO2MtLSlvW2EqKHRoaXMucXQrMSkrY10hPT0tMSYmb1thKih0aGlzLnF0KzEpK2MtMV0hPT0tMSYmb1thKih0aGlzLnF0KzEpK2NdIT09b1thKih0aGlzLnF0KzEpK2MtMV0mJihuW29bYSoodGhpcy5xdCsxKStjXSp0aGlzLm5uK29bYSoodGhpcy5xdCsxKStjLTFdXT0hMCl9Y29uc3Qgcj1bXTtmb3Iocz0wO3M8dGhpcy5ubjtzKyspcltzXT0hMDtjb25zdCBsPVtdO2wucHVzaCgwKTtsZXQgaD0wO2Zvcig7bC5sZW5ndGghPT0wOylpZihoPWxbbC5sZW5ndGgtMV0sbC5wb3AoKSxyW2hdKWZvcihyW2hdPSExLHM9MDtzPHRoaXMubm47cysrKW5baCp0aGlzLm5uK3NdJiZsLnNwbGljZSgwLDAscyk7bGV0IGY9ITE7aWYoaT4wKWZvcihlLnJlc2V0KCk7ZS5uZXh0KCk7KXtjb25zdCBhPWUudmFsdWU7clthLmNvbXBvbmVudF0mJihhLmNvbHVtbi09MSxmPSEwKX1pZihpPDApZm9yKGUucmVzZXQoKTtlLm5leHQoKTspe2NvbnN0IGE9ZS52YWx1ZTtyW2EuY29tcG9uZW50XSYmKGEuY29sdW1uKz0xLGY9ITApfXJldHVybiBmfVYzKCl7Y29uc3QgdD1VLmx0KCksaT10aGlzLmV1Lmxlbmd0aDtmb3IobGV0IHU9MDt1PD1pO3UrKyl0W3VdPVtdO2NvbnN0IGU9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCB1PWUudmFsdWUsZD1pLXUubGF5ZXIsbT10W2RdO21bdS5pbmRleF09dX1jb25zdCBzPW5ldyBHU2V0O3RoaXMuRzModCxzKTtsZXQgbj1udWxsLG89bnVsbCxyPW51bGwsbD1udWxsO2NvbnN0IGg9KHRoaXMuSW4mMSkhPT0wLGY9KHRoaXMuSW4mMikhPT0wLGE9KHRoaXMuSW4mNCkhPT0wLGM9KHRoaXMuSW4mOCkhPT0wO2gmJih0aGlzLnJsKHQscywhMCksbj10aGlzLnlrKHQsITAsITEpKSx0LnJldmVyc2UoKSxhJiYodGhpcy5ybCh0LHMsITEpLHI9dGhpcy55ayh0LCExLCExKSk7Zm9yKGNvbnN0IHUgb2YgdCl1LnJldmVyc2UoKTtjJiYodGhpcy5ybCh0LHMsITEpLGw9dGhpcy55ayh0LCExLCEwKSksdC5yZXZlcnNlKCksZiYmKHRoaXMucmwodCxzLCEwKSxvPXRoaXMueWsodCwhMCwhMCkpLFUudHQodCksdGhpcy5IMyhuLG8scixsKSx0aGlzLm5ldHdvcmsudmVydGV4ZXMuZWFjaCh1PT57Y29uc3QgZD11LG09VS5sdCgpO2gmJm0ucHVzaChuLmdldChkKSksZiYmbS5wdXNoKG8uZ2V0KGQpKSxhJiZtLnB1c2goci5nZXQoZCkpLGMmJm0ucHVzaChsLmdldChkKSksbS5zb3J0KChrLGIpPT5rLWIpO2NvbnN0IGc9bS5sZW5ndGgscD1NYXRoLmZsb29yKChnLTEpLzIpLHc9TWF0aC5jZWlsKChnLTEpLzIpLHg9KG1bcF0rbVt3XSkvMjtVLnR0KG0pLGQudWU9eH0pfUczKHQsaSl7Y29uc3QgZT10Lmxlbmd0aDtmb3IobGV0IHM9MTtzPGUtMTtzKyspe2xldCBuPTAsbz0wO2NvbnN0IHI9dFtzXSxsPXRbcysxXTtmb3IobGV0IGg9MDtvPGwubGVuZ3RoO2grKyl7Y29uc3QgZj1sW2hdLGE9dGhpcy5xMyhmKTtpZihoPT09bC5sZW5ndGgtMXx8YSl7bGV0IGM9ci5sZW5ndGgtMTtmb3IoYSYmKGM9Zi5nZXRQcm9wZXJTb3VyY2VWZXJ0ZXhlcygpWzBdLmluZGV4KTtvPD1oOyl7Y29uc3QgZD1sW29dLmdldFByb3BlclNvdXJjZUVkZ2VzKCk7Zm9yKGNvbnN0IG0gb2YgZCl7Y29uc3QgcD1tLmZyb21WZXJ0ZXguaW5kZXg7KHA8bnx8cD5jKSYmaS5hZGQobSl9bysrfW49Y319fX1xMyh0KXtpZih0Lm5vZGU9PT1udWxsKXtjb25zdCBpPXQuZ2V0UHJvcGVyU291cmNlVmVydGV4ZXMoKTtpZihpLmxlbmd0aD4wKXJldHVybiBpWzBdLm5vZGU9PT1udWxsfXJldHVybiExfXJsKHQsaSxlKXt0aGlzLlczKHQpO2Zvcihjb25zdCBzIG9mIHQpe2xldCBuPS0xO2Zvcihjb25zdCBvIG9mIHMpe2NvbnN0IHI9ZT9vLmdldFByb3BlclNvdXJjZVZlcnRleGVzKCk6by5nZXRQcm9wZXJEZXN0aW5hdGlvblZlcnRleGVzKCksbD1yLmxlbmd0aDtpZihsPjApe3Iuc29ydCgoZixhKT0+Zi5LaC1hLktoKTtjb25zdCBoPShsLTEpLzI7Zm9yKGxldCBmPU1hdGguZmxvb3IoaCksYT1NYXRoLmNlaWwoaCk7Zjw9YTtmKyspaWYoby5Pbj09PW8pe2NvbnN0IGM9cltmXTtsZXQgdTtlP3U9Yy5nZXREZXN0aW5hdGlvbkVkZ2Uobyk6dT1vLmdldERlc3RpbmF0aW9uRWRnZShjKSwhaS5oYXModSkmJm48Yy5LaCYmKGMuT249byxvLmFmPWMuYWYsby5Pbj1jLmFmLG49Yy5LaCl9fX19fVczKHQpe2ZvcihsZXQgaT0wO2k8dC5sZW5ndGg7aSsrKXtjb25zdCBlPXRbaV07Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspe2NvbnN0IG49ZVtzXTtuLmFmPW4sbi5Pbj1uLG4uWEQ9aSxuLktoPXN9fX15ayh0LGksZSl7Y29uc3Qgcz10aGlzLlM9PT05MHx8dGhpcy5TPT09MjcwO2Zvcihjb25zdCBvIG9mIHQpZm9yKGNvbnN0IHIgb2YgbylyLnRzPXIsci5udT0xLzAsci51ZT1OYU4sci5Fbj0wO3RoaXMuajModCxpLGUpO2Zvcihjb25zdCBvIG9mIHQpZm9yKGNvbnN0IHIgb2YgbylyLmFmPT09ciYmdGhpcy5ZRChyLHQpO2ZvcihsZXQgbz0wO288dC5sZW5ndGg7bysrKXtpZih0W29dLmxlbmd0aDw9MCljb250aW51ZTtjb25zdCByPXRbb11bMF07aWYoci50cz09PXIpe3IudHMubnU9PT0xLzAmJihyLnRzLm51PTApO2xldCBsPW8saD0wLGY7ZG97Zm9yKGY9dFtsXVtoXTtmLk9uIT09Zi5hZjspaWYoZj1mLk9uLGwrKyxmLktoPjApe2NvbnN0IGE9dGhpcy5LRChmLHQpLGM9cz9hLndpZHRoOmEuaGVpZ2h0LHU9Zi50cy5udStmLnVlK2YuRW4tKGEudWUrYS5FbitjK3RoaXMuY29sdW1uU3BhY2luZyk7YS50cy5udT1NYXRoLm1pbihhLnRzLm51LHUpfWg9Zi5LaCsxfXdoaWxlKGw8dC5sZW5ndGgmJmg8dFtsXS5sZW5ndGgmJmYudHM9PT10W2xdW2hdLnRzKX19Y29uc3Qgbj1uZXcgR01hcDtmb3IoY29uc3QgbyBvZiB0KWZvcihjb25zdCByIG9mIG8pe3IudWU9ci51ZStyLnRzLm51K3IuRW47Y29uc3QgbD1zP3Iud2lkdGg6ci5oZWlnaHQ7bi5zZXQocixlPy1yLnVlLWw6ci51ZSl9cmV0dXJuIG59ajModCxpLGUpe2NvbnN0IHM9dGhpcy5TPT09OTB8fHRoaXMuUz09PTI3MDtmb3IoY29uc3QgbiBvZiB0KWZvcihjb25zdCBvIG9mIG4paWYoby5hZj09PW8pe2xldCByPTAsbD1vO2Zvcig7bC5PbiE9PW87KXtjb25zdCBoPWwuT24sZj1zP2wud2lkdGg6bC5oZWlnaHQsYT1zP2gud2lkdGg6aC5oZWlnaHQ7bGV0IGMsdSxkLG07aT8oZD1sLmdldERlc3RpbmF0aW9uRWRnZShoKSxjPWQucG9ydEZyb21Qb3MsdT1kLnBvcnRUb1BvcyxkLmxpbmshPT1udWxsJiYobC5ub2RlJiZsLm5vZGUhPT1kLmxpbmsuZnJvbU5vZGUmJihjPXM/bC5mb2N1c1g6bC5mb2N1c1kpLGgubm9kZSYmaC5ub2RlIT09ZC5saW5rLnRvTm9kZSYmKHU9cz9oLmZvY3VzWDpoLmZvY3VzWSkpLGU/bT1sLkVuKyhmLWMpLShhLXUpOm09bC5FbitjLXUpOihkPWguZ2V0RGVzdGluYXRpb25FZGdlKGwpLGM9ZC5wb3J0VG9Qb3MsdT1kLnBvcnRGcm9tUG9zLGQubGluayE9PW51bGwmJihsLm5vZGUmJmwubm9kZSE9PWQubGluay50b05vZGUmJihjPXM/bC5mb2N1c1g6bC5mb2N1c1kpLGgubm9kZSYmaC5ub2RlIT09ZC5saW5rLmZyb21Ob2RlJiYodT1zP2guZm9jdXNYOmguZm9jdXNZKSksZT9tPWwuRW4rKGYtYyktKGEtdSk6bT1sLkVuK2MtdSksaC5Fbj1tLHI9TWF0aC5taW4ocixtKSxsPWwuT259bD1vO2RvIGwuRW49bC5Fbi1yLGw9bC5Pbjt3aGlsZShsIT09byl9fVlEKHQsaSl7aWYoIWlzTmFOKHQudWUpKXJldHVybjt0LnVlPTA7bGV0IGU9dDtkb3tpZihlLktoPjApe2NvbnN0IHM9dGhpcy5LRChlLGkpLG49cy5hZjt0aGlzLllEKG4saSksdC50cz09PXQmJih0LnRzPW4udHMpO2NvbnN0IG89dGhpcy5TPT09OTB8fHRoaXMuUz09PTI3MD9zLndpZHRoOnMuaGVpZ2h0O2lmKHQudHM9PT1uLnRzKXtjb25zdCByPW4udWUrcy5FbitvLWUuRW4rdGhpcy5jb2x1bW5TcGFjaW5nO3QudWU9TWF0aC5tYXgodC51ZSxyKX19ZT1lLk9ufXdoaWxlKGUhPT10KTtmb3IoO2UuT24hPT10OyllPWUuT24sZS51ZT10LnVlLGUudHM9dC50c31LRCh0LGkpe2NvbnN0IGU9dC5YRCxzPXQuS2g7cmV0dXJuIHM8MSYmVS5uKFwiQ291bGQgbm90IGRldGVybWluZSBwcmV2aW91cyB2ZXJ0ZXggaW4gbGF5ZXJcIiksaVtlXVtzLTFdfUgzKC4uLnQpe2xldCBpPS0xO2NvbnN0IGU9VS5sdCgpLHM9VS5sdCgpO2xldCBuPTEvMDtmb3IobGV0IG89MDtvPDQ7bysrKXtpZighdFtvXSljb250aW51ZTtjb25zdCByPXRoaXMudjModFtvXSxlLHMsbyk7cjxuJiYoaT1vLG49cil9Zm9yKGxldCBvPTA7bzw0O28rKyl7Y29uc3Qgcj10W29dO2lmKCFyKWNvbnRpbnVlO2NvbnN0IGw9bz09PTB8fG89PT0yP2VbaV0tZVtvXTpzW2ldLXNbb107bCE9PTAmJnIuZWFjaChoPT57ci5zZXQoaC5rZXksaC52YWx1ZStsKX0pfVUudHQoZSksVS50dChzKX12Myh0LGksZSxzKXtpZighdHx8dC5jb3VudD09PTApcmV0dXJuIGlbc109MCxlW3NdPTAsMS8wO2xldCBuPTEvMCxvPS0xLzA7cmV0dXJuIHQuZWFjaChyPT57Y29uc3QgbD1yLmtleSxoPXIudmFsdWUsZj10aGlzLlM9PT05MHx8dGhpcy5TPT09MjcwP2wud2lkdGg6bC5oZWlnaHQ7aDxuJiYobj1oKSxoK2Y+byYmKG89aCtmKX0pLGlbc109bixlW3NdPW8sby1ufWNvbW1pdExheW91dCgpe3RoaXMuankoKSx0aGlzLmNvbW1pdE5vZGVzKCksdGhpcy5sQygpLHRoaXMuaXNSb3V0aW5nJiZ0aGlzLmNvbW1pdExpbmtzKCl9ankoKXtpZighdGhpcy5zZXRzUG9ydFNwb3RzKXJldHVybjtjb25zdCB0PXRoaXMubWsoITApLGk9dGhpcy5tayghMSksZT10aGlzLm5ldHdvcmsuZWRnZXMuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IG49ZS52YWx1ZS5saW5rO24hPT1udWxsJiYobi5mcm9tU3BvdD10LG4udG9TcG90PWkpfX1tayh0KXtyZXR1cm4gdGhpcy5TPT09MjcwP3Q/U3BvdC5NaWRkbGVUb3A6U3BvdC5NaWRkbGVCb3R0b206dGhpcy5TPT09OTA/dD9TcG90Lk1pZGRsZUJvdHRvbTpTcG90Lk1pZGRsZVRvcDp0aGlzLlM9PT0xODA/dD9TcG90Lk1pZGRsZUxlZnQ6U3BvdC5NaWRkbGVSaWdodDp0P1Nwb3QuTWlkZGxlUmlnaHQ6U3BvdC5NaWRkbGVMZWZ0fWNvbW1pdE5vZGVzKCl7dGhpcy5zbj1bXSx0aGlzLlJzPVtdLHRoaXMuSXM9W10sdGhpcy5ZdD1bXTtmb3IobGV0IGQ9MDtkPD10aGlzLkN0O2QrKyl0aGlzLnNuW2RdPTAsdGhpcy5Sc1tkXT0wLHRoaXMuSXNbZF09MCx0aGlzLll0W2RdPTA7Y29uc3QgdD10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDt0Lm5leHQoKTspe2NvbnN0IGQ9dC52YWx1ZSxtPWQubGF5ZXI7dGhpcy5zblttXT1NYXRoLm1heCh0aGlzLnNuW21dLHRoaXMubm9kZU1pbkxheWVyU3BhY2UoZCwhMCkpLHRoaXMuUnNbbV09TWF0aC5tYXgodGhpcy5Sc1ttXSx0aGlzLm5vZGVNaW5MYXllclNwYWNlKGQsITEpKX1sZXQgaT0wO2NvbnN0IGU9dGhpcy5Ecztmb3IobGV0IGQ9MDtkPD10aGlzLkN0O2QrKyl7bGV0IG09ZTt0aGlzLnNuW2RdK3RoaXMuUnNbZF08PTAmJihtPTApLGQ+MCYmKGkrPW0vMiksdGhpcy5TPT09OTB8fHRoaXMuUz09PTA/KGkrPXRoaXMuUnNbZF0sdGhpcy5Jc1tkXT1pLGkrPXRoaXMuc25bZF0pOihpKz10aGlzLnNuW2RdLHRoaXMuSXNbZF09aSxpKz10aGlzLlJzW2RdKSxkPHRoaXMuQ3QmJihpKz1tLzIpLHRoaXMuWXRbZF09aX1jb25zdCBzPWksbj10aGlzLmFycmFuZ2VtZW50T3JpZ2luO2ZvcihsZXQgZD0wO2Q8PXRoaXMuQ3Q7ZCsrKXRoaXMuUz09PTI3MD90aGlzLklzW2RdPW4ueSt0aGlzLklzW2RdOnRoaXMuUz09PTkwPyh0aGlzLklzW2RdPW4ueStzLXRoaXMuSXNbZF0sdGhpcy5ZdFtkXT1zLXRoaXMuWXRbZF0pOnRoaXMuUz09PTE4MD90aGlzLklzW2RdPW4ueCt0aGlzLklzW2RdOih0aGlzLklzW2RdPW4ueCtzLXRoaXMuSXNbZF0sdGhpcy5ZdFtkXT1zLXRoaXMuWXRbZF0pO2NvbnN0IG89dGhpcy5JbiE9PTA7dC5yZXNldCgpO2NvbnN0IHI9dGhpcy5TPT09MjcwfHx0aGlzLlM9PT05MDtsZXQgbD0xLzAsaD0xLzAsZj0xLzAsYT0tMS8wO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBkPXQudmFsdWUsbT1kLmxheWVyLGc9ZC5jb2x1bW58MDtsZXQgcD0wLHc9MDtyPyhwPW4ueCt0aGlzLl9pKmcsdz10aGlzLklzW21dKToocD10aGlzLklzW21dLHc9bi55K3RoaXMuX2kqZyksZC5jZW50ZXJYPXAsZC5jZW50ZXJZPXcsbyYmaXNGaW5pdGUoZC51ZSkmJihyP2Qubm9kZT9kLng9bi54K2QudWU6ZC5jZW50ZXJYPW4ueCtkLnVlOmQubm9kZT9kLnk9bi55K2QudWU6ZC5jZW50ZXJZPW4ueStkLnVlKSxsPU1hdGgubWluKGQueCxsKSxoPU1hdGgubWluKGQueSxoKSxyPyhmPWwsYT1NYXRoLm1heChhLGQuYm91bmRzLnJpZ2h0KSk6KGY9aCxhPU1hdGgubWF4KGEsZC5ib3VuZHMuYm90dG9tKSl9dGhpcy5zQz1hLWY7Y29uc3QgYz1uLngtbCx1PW4ueS1oO2Zvcih0aGlzLm9yPW5ldyBQb2ludChvJiZyPzA6YyxvJiYhcj8wOnUpLHQucmVzZXQoKTt0Lm5leHQoKTspe2NvbnN0IGQ9dC52YWx1ZTtkLngrPWMsZC55Kz11LGQuY29tbWl0KCl9fWxDKCl7bGV0IHQ9MDtjb25zdCBpPXRoaXMuRHM7Zm9yKGxldCBuPTA7bjw9dGhpcy5DdDtuKyspdCs9dGhpcy5zbltuXSx0Kz10aGlzLlJzW25dO3QrPXRoaXMuQ3QqaTtjb25zdCBlPVtdLHM9dGhpcy5JbiE9PTA/dGhpcy5zQzp0aGlzLl9pKnRoaXMucXQ7Zm9yKGxldCBuPXRoaXMubWF4TGF5ZXI7bj49MDtuLS0pdGhpcy5TPT09MjcwP249PT0wP2UucHVzaChuZXcgUmVjdCgwLDAscyxNYXRoLmFicyh0aGlzLll0WzBdKSkpOmUucHVzaChuZXcgUmVjdCgwLHRoaXMuWXRbbi0xXSxzLE1hdGguYWJzKHRoaXMuWXRbbi0xXS10aGlzLll0W25dKSkpOnRoaXMuUz09PTkwP249PT0wP2UucHVzaChuZXcgUmVjdCgwLHRoaXMuWXRbMF0scyxNYXRoLmFicyh0aGlzLll0WzBdLXQpKSk6ZS5wdXNoKG5ldyBSZWN0KDAsdGhpcy5ZdFtuXSxzLE1hdGguYWJzKHRoaXMuWXRbbi0xXS10aGlzLll0W25dKSkpOnRoaXMuUz09PTE4MD9uPT09MD9lLnB1c2gobmV3IFJlY3QoMCwwLE1hdGguYWJzKHRoaXMuWXRbMF0pLHMpKTplLnB1c2gobmV3IFJlY3QodGhpcy5ZdFtuLTFdLDAsTWF0aC5hYnModGhpcy5ZdFtuLTFdLXRoaXMuWXRbbl0pLHMpKTpuPT09MD9lLnB1c2gobmV3IFJlY3QodGhpcy5ZdFswXSwwLE1hdGguYWJzKHRoaXMuWXRbMF0tdCkscykpOmUucHVzaChuZXcgUmVjdCh0aGlzLll0W25dLDAsTWF0aC5hYnModGhpcy5ZdFtuLTFdLXRoaXMuWXRbbl0pLHMpKTt0aGlzLmNvbW1pdExheWVycyhlLHRoaXMub3IpfWNvbW1pdExheWVycyh0LGkpe31jb21taXRMaW5rcygpe2NvbnN0IHQ9dGhpcy5uZXR3b3JrLmVkZ2VzLml0ZXJhdG9yO2xldCBpO2Zvcig7dC5uZXh0KCk7KWk9dC52YWx1ZS5saW5rLGkhPT1udWxsJiYoaS5zdGFydFJvdXRlKCksaS5jbGVhclBvaW50cygpLGkuY29tbWl0Um91dGUoKSk7Zm9yKHQucmVzZXQoKTt0Lm5leHQoKTspaT10LnZhbHVlLmxpbmssaSE9PW51bGwmJmkudXBkYXRlUm91dGUoKTtmb3IodC5yZXNldCgpO3QubmV4dCgpOyl7Y29uc3QgZT10LnZhbHVlO2lmKGk9ZS5saW5rLGk9PT1udWxsfHxpLnBvaW50c0NvdW50PT09MCljb250aW51ZTtpLnN0YXJ0Um91dGUoKTtjb25zdCBzPWk7bGV0IG49cy5mcm9tTm9kZSxvPXMudG9Ob2RlLHI9cy5mcm9tUG9ydCxsPXMudG9Qb3J0O2lmKG4hPT1udWxsKXtjb25zdCBOPW4uZmluZFZpc2libGVOb2RlKCk7TiE9PW51bGwmJk4hPT1uJiYobj1OLHI9Ti5wb3J0KX1pZihvIT09bnVsbCl7Y29uc3QgTj1vLmZpbmRWaXNpYmxlTm9kZSgpO04hPT1udWxsJiZOIT09byYmKG89TixsPU4ucG9ydCl9Y29uc3QgaD1pLmNvbXB1dGVTcG90KCEwLHIpLGY9aS5jb21wdXRlU3BvdCghMSxsKTtsZXQgYT1lLmZyb21WZXJ0ZXgsYz1lLnRvVmVydGV4O2lmKGUudmFsaWQpe2lmKGkuY3VydmU9PT05JiZpLnBvaW50c0NvdW50PT09NClpZihhLmNvbHVtbj09PWMuY29sdW1uJiZ0aGlzLmFsaWduT3B0aW9uPT09MCl7Y29uc3QgTj1pLmdldExpbmtQb2ludChuLHIsaCwhMCwhMSxvLGwpLFQ9aS5nZXRMaW5rUG9pbnQobyxsLGYsITEsITEsbixyKTtOLmlzUmVhbCgpfHxOLnNldChuLmFjdHVhbEJvdW5kcy5jZW50ZXIpLFQuaXNSZWFsKCl8fFQuc2V0KG8uYWN0dWFsQm91bmRzLmNlbnRlciksaS5jbGVhclBvaW50cygpLGkuYWRkUG9pbnRBdChOLngsTi55KSxpLmFkZFBvaW50QXQoKDIqTi54K1QueCkvMywoMipOLnkrVC55KS8zKSxpLmFkZFBvaW50QXQoKE4ueCsyKlQueCkvMywoTi55KzIqVC55KS8zKSxpLmFkZFBvaW50QXQoVC54LFQueSl9ZWxzZXtsZXQgTj0hMSxUPSExO2lmKHIhPT1udWxsJiZoPT09U3BvdC5Ob25lJiYoTj0hMCksbCE9PW51bGwmJmY9PT1TcG90Lk5vbmUmJihUPSEwKSxOfHxUKXtsZXQgTD1udWxsO04mJihMPWkuZ2V0TGlua1BvaW50RnJvbVBvaW50KG4scixyLmdldERvY3VtZW50UG9pbnQoU3BvdC5DZW50ZXIpLGkuZ2V0UG9pbnQoMyksITApLEwuaXNSZWFsKCl8fEwuc2V0KG4uYWN0dWFsQm91bmRzLmNlbnRlciksaS5zZXRQb2ludEF0KDAsTC54LEwueSkpO2xldCBEPW51bGw7aWYoVCYmKEQ9aS5nZXRMaW5rUG9pbnRGcm9tUG9pbnQobyxsLGwuZ2V0RG9jdW1lbnRQb2ludChTcG90LkNlbnRlciksaS5nZXRQb2ludCgwKSwhMSksRC5pc1JlYWwoKXx8RC5zZXQoby5hY3R1YWxCb3VuZHMuY2VudGVyKSxpLnNldFBvaW50QXQoMyxELngsRC55KSksTCl7Y29uc3QgRj1pLmdldFBvaW50KDIpO2kuc2V0UG9pbnRBdCgxLChMLngqMitGLngpLzMsKEwueSoyK0YueSkvMyl9aWYoRCl7Y29uc3QgRj1pLmdldFBvaW50KDEpO2kuc2V0UG9pbnRBdCgyLChELngqMitGLngpLzMsKEQueSoyK0YueSkvMyl9fX1pLmNvbW1pdFJvdXRlKCk7Y29udGludWV9aWYoYS5sYXllcj09PWMubGF5ZXIpe2kuY29tbWl0Um91dGUoKTtjb250aW51ZX1sZXQgdT0hMSxkPSExO2NvbnN0IG09dGhpcy5EcztsZXQgZz0wLHA9aS5maXJzdFBpY2tJbmRleCsxO2lmKGkuaXNPcnRob2dvbmFsKWQ9ITAsZz1pLnBvaW50c0NvdW50LGc+NCYmaS5wb2ludHMucmVtb3ZlUmFuZ2UoMixnLTMpO2Vsc2UgaWYoaS5jdXJ2ZT09PTkpdT0hMCxnPWkucG9pbnRzQ291bnQsZz40JiZpLnBvaW50cy5yZW1vdmVSYW5nZSgyLGctMyksZz09PTQmJihwPTIpO2Vsc2V7Zz1pLnBvaW50c0NvdW50O2NvbnN0IE49aD09PVNwb3QuTm9uZSxUPWY9PT1TcG90Lk5vbmU7Zz4yJiZOJiZUP2kucG9pbnRzLnJlbW92ZVJhbmdlKDEsZy0yKTpnPjMmJk4mJiFUP2kucG9pbnRzLnJlbW92ZVJhbmdlKDEsZy0zKTpnPjMmJiFOJiZUP2kucG9pbnRzLnJlbW92ZVJhbmdlKDIsZy0yKTpnPjQmJiFOJiYhVCYmaS5wb2ludHMucmVtb3ZlUmFuZ2UoMixnLTMpfWxldCB3LHgsaz0wLGI9MCxTPTAsTT0wLEE9MCxDPTAsUD0wO2lmKGUucmV2KXtsZXQgTj0wO2Zvcig7YyE9PW51bGwmJmEhPT1jOyl7dz1udWxsLHg9bnVsbDtjb25zdCBUPWMuc291cmNlRWRnZXMuaXRlcmF0b3I7Zm9yKDtULm5leHQoKTspe2NvbnN0IEw9VC52YWx1ZTtpZihMLmxpbms9PT1lLmxpbmsmJih3PUwuZnJvbVZlcnRleCx4PUwudG9WZXJ0ZXgsdy5ub2RlPT09bnVsbCkpYnJlYWt9aWYodz09PW51bGwpYnJlYWs7aWYodyE9PWEpaWYoaz1pLmdldFBvaW50KHAtMSkueCxiPWkuZ2V0UG9pbnQocC0xKS55LFM9dy5jZW50ZXJYLE09dy5jZW50ZXJZLGQpdGhpcy5TPT09MTgwfHx0aGlzLlM9PT0wP3A9PT1pLmZpcnN0UGlja0luZGV4KzE/KGkuaW5zZXJ0UG9pbnRBdChwKyssayxiKSxpLmluc2VydFBvaW50QXQocCsrLGssTSkpOih4IT09bnVsbD94LmNlbnRlclk6YikhPT1NJiYoQT10aGlzLll0W3cubGF5ZXItMV0rdGhpcy5vci54LGkuaW5zZXJ0UG9pbnRBdChwKyssQSxiKSxpLmluc2VydFBvaW50QXQocCsrLEEsTSkpOnA9PT1pLmZpcnN0UGlja0luZGV4KzE/KGkuaW5zZXJ0UG9pbnRBdChwKyssayxiKSxpLmluc2VydFBvaW50QXQocCsrLFMsYikpOih4IT09bnVsbD94LmNlbnRlclg6aykhPT1TJiYoQT10aGlzLll0W3cubGF5ZXItMV0rdGhpcy5vci55LGkuaW5zZXJ0UG9pbnRBdChwKyssayxBKSxpLmluc2VydFBvaW50QXQocCsrLFMsQSkpO2Vsc2UgaWYocD09PWkuZmlyc3RQaWNrSW5kZXgrMSlpZihDPU1hdGgubWF4KDEwLHRoaXMuc25bYy5sYXllcl0pLFA9TWF0aC5tYXgoMTAsdGhpcy5Sc1tjLmxheWVyXSksdSl0aGlzLlM9PT0xODA/Uzw9Yy5ib3VuZHMueD8oTj1jLmJvdW5kcy54LGkuaW5zZXJ0UG9pbnRBdChwKyssTi1DLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssTixNKSxpLmluc2VydFBvaW50QXQocCsrLE4rUCxNKSk6KGkuaW5zZXJ0UG9pbnRBdChwKyssUy1DLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMrUCxNKSk6dGhpcy5TPT09OTA/TT49Yy5ib3VuZHMuYm90dG9tPyhOPWMuYm91bmRzLnkrYy5ib3VuZHMuaGVpZ2h0LGkuaW5zZXJ0UG9pbnRBdChwKyssUyxOK1ApLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxOKSxpLmluc2VydFBvaW50QXQocCsrLFMsTi1DKSk6KGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNK1ApLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTS1DKSk6dGhpcy5TPT09MjcwP008PWMuYm91bmRzLnk/KE49Yy5ib3VuZHMueSxpLmluc2VydFBvaW50QXQocCsrLFMsTi1DKSxpLmluc2VydFBvaW50QXQocCsrLFMsTiksaS5pbnNlcnRQb2ludEF0KHArKyxTLE4rUCkpOihpLmluc2VydFBvaW50QXQocCsrLFMsTS1DKSxpLmluc2VydFBvaW50QXQocCsrLFMsTSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE0rUCkpOnRoaXMuUz09PTAmJihTPj1jLmJvdW5kcy5yaWdodD8oTj1jLmJvdW5kcy54K2MuYm91bmRzLndpZHRoLGkuaW5zZXJ0UG9pbnRBdChwKyssTitQLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssTixNKSxpLmluc2VydFBvaW50QXQocCsrLE4tQyxNKSk6KGkuaW5zZXJ0UG9pbnRBdChwKyssUytQLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMtQyxNKSkpO2Vsc2V7aS5pbnNlcnRQb2ludEF0KHArKyxrLGIpO2xldCBMPTA7dGhpcy5TPT09MTgwfHx0aGlzLlM9PT0wPygodGhpcy5TPT09MTgwP1M+PWMuYm91bmRzLnJpZ2h0OlM8PWMuYm91bmRzLngpJiYoTD0odGhpcy5TPT09MD8tQzpQKS8yKSxpLmluc2VydFBvaW50QXQocCsrLGsrTCxNKSk6KCh0aGlzLlM9PT0yNzA/TT49Yy5ib3VuZHMuYm90dG9tOk08PWMuYm91bmRzLnkpJiYoTD0odGhpcy5TPT09OTA/LUM6UCkvMiksaS5pbnNlcnRQb2ludEF0KHArKyxTLGIrTCkpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKX1lbHNlIEM9TWF0aC5tYXgoMTAsdGhpcy5zblt3LmxheWVyXSksUD1NYXRoLm1heCgxMCx0aGlzLlJzW3cubGF5ZXJdKSx1P3RoaXMuUz09PTE4MD8oaS5pbnNlcnRQb2ludEF0KHArKyxTLUMtbSxNKSxpLmluc2VydFBvaW50QXQocCsrLE1hdGgubWluKFMtQyttLzIsUyksTSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLE1hdGgubWF4KFMrUC1tLzIsUyksTSksaS5pbnNlcnRQb2ludEF0KHArKyxTK1ArbSxNKSk6dGhpcy5TPT09OTA/KGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNK1ArbSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE1hdGgubWF4KE0rUC1tLzIsTSkpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE1hdGgubWluKE0tQyttLzIsTSkpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNLUMtbSkpOnRoaXMuUz09PTI3MD8oaS5pbnNlcnRQb2ludEF0KHArKyxTLE0tQy1tKSxpLmluc2VydFBvaW50QXQocCsrLFMsTWF0aC5taW4oTS1DK20vMixNKSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTWF0aC5tYXgoTStQLW0vMixNKSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE0rUCttKSk6KGkuaW5zZXJ0UG9pbnRBdChwKyssUytQK20sTSksaS5pbnNlcnRQb2ludEF0KHArKyxNYXRoLm1heChTK1AtbS8yLFMpLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTSksaS5pbnNlcnRQb2ludEF0KHArKyxNYXRoLm1pbihTLUMrbS8yLFMpLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUy1DLW0sTSkpOih0aGlzLlM9PT0xODB8fHRoaXMuUz09PTkwfHx0aGlzLlMsaS5pbnNlcnRQb2ludEF0KHArKyxTLE0pKTtjPXd9aWYobD09PW51bGx8fGghPT1TcG90Lk5vbmV8fGQpaWYoaz1pLmdldFBvaW50KHAtMSkueCxiPWkuZ2V0UG9pbnQocC0xKS55LFM9aS5nZXRQb2ludChwKS54LE09aS5nZXRQb2ludChwKS55LGQpe2NvbnN0IFQ9dGhpcy5Sc1thLmxheWVyXTtsZXQgTD0wO3RoaXMuUz09PTE4MHx8dGhpcy5TPT09MD8oTD1iLEw+PWEuYm91bmRzLnkmJkw8PWEuYm91bmRzLmJvdHRvbSYmKHRoaXMuUz09PTE4MD9TPj1hLmJvdW5kcy54OlM8PWEuYm91bmRzLnJpZ2h0KSYmKE49YS5jZW50ZXJYKyh0aGlzLlM9PT0xODA/LVQ6VCksTDxhLmJvdW5kcy55K2EuYm91bmRzLmhlaWdodC8yP0w9YS5ib3VuZHMueS10aGlzLl9pLzI6TD1hLmJvdW5kcy5ib3R0b20rdGhpcy5faS8yLGkuaW5zZXJ0UG9pbnRBdChwKyssTixiKSxpLmluc2VydFBvaW50QXQocCsrLE4sTCkpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxMKSxpLmluc2VydFBvaW50QXQocCsrLFMsTSkpOihMPWssTD49YS5ib3VuZHMueCYmTDw9YS5ib3VuZHMucmlnaHQmJih0aGlzLlM9PT0yNzA/TT49YS5ib3VuZHMueTpNPD1hLmJvdW5kcy5ib3R0b20pJiYoTj1hLmNlbnRlclkrKHRoaXMuUz09PTI3MD8tVDpUKSxMPGEuYm91bmRzLngrYS5ib3VuZHMud2lkdGgvMj9MPWEuYm91bmRzLngtdGhpcy5faS8yOkw9YS5ib3VuZHMucmlnaHQrdGhpcy5faS8yLGkuaW5zZXJ0UG9pbnRBdChwKyssayxOKSxpLmluc2VydFBvaW50QXQocCsrLEwsTikpLGkuaW5zZXJ0UG9pbnRBdChwKyssTCxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTSkpfWVsc2UgaWYodSlDPU1hdGgubWF4KDEwLHRoaXMuc25bYS5sYXllcl0pLFA9TWF0aC5tYXgoMTAsdGhpcy5Sc1thLmxheWVyXSksdGhpcy5TPT09MTgwJiZTPj1hLmJvdW5kcy54PyhOPWEuYm91bmRzLngrYS5ib3VuZHMud2lkdGgsaS5zZXRQb2ludEF0KHAtMixOLGIpLGkuc2V0UG9pbnRBdChwLTEsTitQLGIpKTp0aGlzLlM9PT05MCYmTTw9YS5ib3VuZHMuYm90dG9tPyhOPWEuYm91bmRzLnksaS5zZXRQb2ludEF0KHAtMixrLE4pLGkuc2V0UG9pbnRBdChwLTEsayxOLUMpKTp0aGlzLlM9PT0yNzAmJk0+PWEuYm91bmRzLnk/KE49YS5ib3VuZHMueSthLmJvdW5kcy5oZWlnaHQsaS5zZXRQb2ludEF0KHAtMixrLE4pLGkuc2V0UG9pbnRBdChwLTEsayxOK1ApKTp0aGlzLlM9PT0wJiZTPD1hLmJvdW5kcy5yaWdodCYmKE49YS5ib3VuZHMueCxpLnNldFBvaW50QXQocC0yLE4sYiksaS5zZXRQb2ludEF0KHAtMSxOLUMsYikpO2Vsc2V7Qz1NYXRoLm1heCgxMCx0aGlzLnNuW2EubGF5ZXJdKSxQPU1hdGgubWF4KDEwLHRoaXMuUnNbYS5sYXllcl0pO2xldCBUPTA7dGhpcy5TPT09MTgwfHx0aGlzLlM9PT0wPygodGhpcy5TPT09MTgwP1M8PWEuYm91bmRzLng6Uz49YS5ib3VuZHMucmlnaHQpJiYoVD0odGhpcy5TPT09MD9QOi1DKS8yKSxpLmluc2VydFBvaW50QXQocCsrLFMrVCxiKSk6KCh0aGlzLlM9PT0yNzA/TTw9YS5ib3VuZHMueTpNPj1hLmJvdW5kcy5ib3R0b20pJiYoVD0odGhpcy5TPT09OTA/UDotQykvMiksaS5pbnNlcnRQb2ludEF0KHArKyxrLE0rVCkpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKX19ZWxzZXtmb3IoO2EhPT1udWxsJiZhIT09Yzspe3c9bnVsbCx4PW51bGw7Y29uc3QgTj1hLmRlc3RpbmF0aW9uRWRnZXMuaXRlcmF0b3I7Zm9yKDtOLm5leHQoKTspe2NvbnN0IFQ9Ti52YWx1ZTtpZihULmxpbms9PT1lLmxpbmsmJih3PVQudG9WZXJ0ZXgseD1ULmZyb21WZXJ0ZXgseC5ub2RlIT09bnVsbCYmKHg9bnVsbCksdy5ub2RlPT09bnVsbCkpYnJlYWt9aWYodz09PW51bGwpYnJlYWs7dyE9PWMmJihrPWkuZ2V0UG9pbnQocC0xKS54LGI9aS5nZXRQb2ludChwLTEpLnksUz13LmNlbnRlclgsTT13LmNlbnRlclksZD90aGlzLlM9PT0xODB8fHRoaXMuUz09PTA/KHghPT1udWxsP3guY2VudGVyWTpiKSE9PU0mJihBPXRoaXMuWXRbdy5sYXllcl0rdGhpcy5vci54LHA9PT1pLmZpcnN0UGlja0luZGV4KzEmJih0aGlzLlM9PT0wP0E9TWF0aC5tYXgoQSxrKTpBPU1hdGgubWluKEEsaykpLGkuaW5zZXJ0UG9pbnRBdChwKyssQSxiKSxpLmluc2VydFBvaW50QXQocCsrLEEsTSkpOih4IT09bnVsbD94LmNlbnRlclg6aykhPT1TJiYoQT10aGlzLll0W3cubGF5ZXJdK3RoaXMub3IueSxwPT09aS5maXJzdFBpY2tJbmRleCsxJiYodGhpcy5TPT09OTA/QT1NYXRoLm1heChBLGIpOkE9TWF0aC5taW4oQSxiKSksaS5pbnNlcnRQb2ludEF0KHArKyxrLEEpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxBKSk6KEM9TWF0aC5tYXgoMTAsdGhpcy5zblt3LmxheWVyXSksUD1NYXRoLm1heCgxMCx0aGlzLlJzW3cubGF5ZXJdKSx1P3RoaXMuUz09PTE4MD8oaS5pbnNlcnRQb2ludEF0KHArKyxTK1ArbSxNKSxpLmluc2VydFBvaW50QXQocCsrLE1hdGgubWF4KFMrUC1tLzIsUyksTSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLE1hdGgubWluKFMtQyttLzIsUyksTSksaS5pbnNlcnRQb2ludEF0KHArKyxTLUMtbSxNKSk6dGhpcy5TPT09OTA/KGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNLUMtbSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE1hdGgubWluKE0tQyttLzIsTSkpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE1hdGgubWF4KE0rUC1tLzIsTSkpLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNK1ArbSkpOnRoaXMuUz09PTI3MD8oaS5pbnNlcnRQb2ludEF0KHArKyxTLE0rUCttKSxpLmluc2VydFBvaW50QXQocCsrLFMsTWF0aC5tYXgoTStQLW0vMixNKSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTWF0aC5taW4oTS1DK20vMixNKSksaS5pbnNlcnRQb2ludEF0KHArKyxTLE0tQy1tKSk6KGkuaW5zZXJ0UG9pbnRBdChwKyssUy1DLW0sTSksaS5pbnNlcnRQb2ludEF0KHArKyxNYXRoLm1pbihTLUMrbS8yLFMpLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUyxNKSxpLmluc2VydFBvaW50QXQocCsrLFMsTSksaS5pbnNlcnRQb2ludEF0KHArKyxNYXRoLm1heChTK1AtbS8yLFMpLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUytQK20sTSkpOnRoaXMuUz09PTE4MD8oaS5pbnNlcnRQb2ludEF0KHArKyxTK1AsTSksaS5pbnNlcnRQb2ludEF0KHArKyxTLUMsTSkpOnRoaXMuUz09PTkwPyhpLmluc2VydFBvaW50QXQocCsrLFMsTS1DKSxpLmluc2VydFBvaW50QXQocCsrLFMsTStQKSk6dGhpcy5TPT09MjcwPyhpLmluc2VydFBvaW50QXQocCsrLFMsTStQKSxpLmluc2VydFBvaW50QXQocCsrLFMsTS1DKSk6KGkuaW5zZXJ0UG9pbnRBdChwKyssUy1DLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssUytQLE0pKSkpLGE9d31kJiYoaz1pLmdldFBvaW50KHAtMSkueCxiPWkuZ2V0UG9pbnQocC0xKS55LFM9aS5nZXRQb2ludChwKS54LE09aS5nZXRQb2ludChwKS55LHRoaXMuUz09PTE4MHx8dGhpcy5TPT09MD9iIT09TSYmKHRoaXMuUz09PTA/QT1NYXRoLm1pbihNYXRoLm1heCgoUytrKS8yLHRoaXMuWXRbYy5sYXllcl0rdGhpcy5vci54KSxTKTpBPU1hdGgubWF4KE1hdGgubWluKChTK2spLzIsdGhpcy5ZdFtjLmxheWVyXSt0aGlzLm9yLngpLFMpLGkuaW5zZXJ0UG9pbnRBdChwKyssQSxiKSxpLmluc2VydFBvaW50QXQocCsrLEEsTSkpOmshPT1TJiYodGhpcy5TPT09OTA/QT1NYXRoLm1pbihNYXRoLm1heCgoTStiKS8yLHRoaXMuWXRbYy5sYXllcl0rdGhpcy5vci55KSxNKTpBPU1hdGgubWF4KE1hdGgubWluKChNK2IpLzIsdGhpcy5ZdFtjLmxheWVyXSt0aGlzLm9yLnkpLE0pLGkuaW5zZXJ0UG9pbnRBdChwKyssayxBKSxpLmluc2VydFBvaW50QXQocCsrLFMsQSkpKX1pZihzIT09bnVsbCYmdSYmaS5wb2ludHNDb3VudD49NCl7aWYociE9PW51bGwpe2NvbnN0IE49aD09PVNwb3QuTm9uZT9pLmdldExpbmtQb2ludEZyb21Qb2ludChuLHIsci5nZXREb2N1bWVudFBvaW50KFNwb3QuQ2VudGVyKSxpLmdldFBvaW50KDMpLCEwKTppLmdldFBvaW50KDApO2lmKGg9PT1TcG90Lk5vbmUpe2NvbnN0IFQ9aS5nZXRQb2ludCgyKSxMPWkuZ2V0UG9pbnQoMyk7dGhpcy5kaXJlY3Rpb249PT05MHx8dGhpcy5kaXJlY3Rpb249PT0yNzA/KGkuc2V0UG9pbnRBdCgxLChOLngrVC54KS8yLFQueSksaS5zZXRQb2ludEF0KDIsTC54LChULnkrTC55KS8yKSk6KGkuc2V0UG9pbnRBdCgxLFQueCwoTi55K1QueSkvMiksaS5zZXRQb2ludEF0KDIsKFQueCtMLngpLzIsTC55KSl9Ti5pc1JlYWwoKXx8Ti5zZXQobi5hY3R1YWxCb3VuZHMuY2VudGVyKSxpLnNldFBvaW50QXQoMCxOLngsTi55KX1pZihsIT09bnVsbCl7Y29uc3QgTj1mPT09U3BvdC5Ob25lP2kuZ2V0TGlua1BvaW50RnJvbVBvaW50KG8sbCxsLmdldERvY3VtZW50UG9pbnQoU3BvdC5DZW50ZXIpLGkuZ2V0UG9pbnQoaS5wb2ludHNDb3VudC00KSwhMSk6aS5nZXRQb2ludChpLnBvaW50c0NvdW50LTEpO2lmKGY9PT1TcG90Lk5vbmUpe2NvbnN0IFQ9aS5nZXRQb2ludChpLnBvaW50c0NvdW50LTMpLEw9aS5nZXRQb2ludChpLnBvaW50c0NvdW50LTQpO3RoaXMuZGlyZWN0aW9uPT09OTB8fHRoaXMuZGlyZWN0aW9uPT09MjcwPyhpLnNldFBvaW50QXQoaS5wb2ludHNDb3VudC0yLChOLngrVC54KS8yLFQueSksaS5zZXRQb2ludEF0KGkucG9pbnRzQ291bnQtMixMLngsKFQueStMLnkpLzIpKTooaS5zZXRQb2ludEF0KGkucG9pbnRzQ291bnQtMixULngsKE4ueStULnkpLzIpLGkuc2V0UG9pbnRBdChpLnBvaW50c0NvdW50LTMsKFQueCtMLngpLzIsTC55KSl9Ti5pc1JlYWwoKXx8Ti5zZXQoby5hY3R1YWxCb3VuZHMuY2VudGVyKSxpLnNldFBvaW50QXQoaS5wb2ludHNDb3VudC0xLE4ueCxOLnkpfX1pLmNvbW1pdFJvdXRlKCksZS5jb21taXQoKX19eTMoKXt0aGlzLnZ5PS0xLHRoaXMuTGc9MCx0aGlzLkZzPTAsdGhpcy5oZj1udWxsLHRoaXMuRGc9bnVsbCx0aGlzLmV1PW51bGw7Zm9yKGxldCB0PTA7dDx0aGlzLlJuLmxlbmd0aDt0KyspdGhpcy5Sblt0XT1udWxsfVhoKHQpe2xldCBpO2NvbnN0IGU9dGhpcy5naVt0XTtpZihlPj10aGlzLlJuLmxlbmd0aCl7Y29uc3Qgbj1bXTtmb3IobGV0IG89MDtvPHRoaXMuUm4ubGVuZ3RoO28rKyluW29dPXRoaXMuUm5bb107dGhpcy5Sbj1ufXRoaXMuUm5bZV09PT12b2lkIDB8fHRoaXMuUm5bZV09PT1udWxsP2k9W106KGk9dGhpcy5SbltlXSx0aGlzLlJuW2VdPW51bGwpO2NvbnN0IHM9dGhpcy5ldVt0XTtmb3IobGV0IG49MDtuPHMubGVuZ3RoO24rKyl7Y29uc3Qgbz1zW25dO2lbby5pbmRleF09b31yZXR1cm4gaX1ZaCh0LGkpe3RoaXMuUm5bdGhpcy5naVt0XV09aX1nZXQgbGF5ZXJTcGFjaW5nKCl7cmV0dXJuIHRoaXMuRHN9c2V0IGxheWVyU3BhY2luZyh0KXt0aGlzLkRzIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJsYXllclNwYWNpbmdcIiksdD49MCYmKHRoaXMuRHM9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBjb2x1bW5TcGFjaW5nKCl7cmV0dXJuIHRoaXMuX2l9c2V0IGNvbHVtblNwYWNpbmcodCl7dGhpcy5faSE9PXQmJihVLmkodCxcIm51bWJlclwiLExheWVyZWREaWdyYXBoTGF5b3V0LFwiY29sdW1uU3BhY2luZ1wiKSx0PjAmJih0aGlzLl9pPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgZGlyZWN0aW9uKCl7cmV0dXJuIHRoaXMuU31zZXQgZGlyZWN0aW9uKHQpe3RoaXMuUyE9PXQmJihVLmkodCxcIm51bWJlclwiLExheWVyZWREaWdyYXBoTGF5b3V0LFwiZGlyZWN0aW9uXCIpLHQ9PT0wfHx0PT09OTB8fHQ9PT0xODB8fHQ9PT0yNzA/KHRoaXMuUz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKTpVLm4oXCJMYXllcmVkRGlncmFwaExheW91dC5kaXJlY3Rpb24gbXVzdCBiZSAwLCA5MCwgMTgwLCBvciAyNzBcIikpfWdldCBjeWNsZVJlbW92ZU9wdGlvbigpe3JldHVybiB0aGlzLlpjfXNldCBjeWNsZVJlbW92ZU9wdGlvbih0KXt0aGlzLlpjIT09dCYmKFUuaih0LExheWVyZWREaWdyYXBoQ3ljbGVSZW1vdmUsXCJMYXllcmVkRGlncmFwaEN5Y2xlUmVtb3ZlXCIpLCh0PT09MXx8dD09PTB8fHQ9PT0yKSYmKHRoaXMuWmM9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBsYXllcmluZ09wdGlvbigpe3JldHVybiB0aGlzLlFjfXNldCBsYXllcmluZ09wdGlvbih0KXt0aGlzLlFjIT09dCYmKFUuaih0LExheWVyZWREaWdyYXBoTGF5ZXJpbmcsXCJMYXllcmVkRGlncmFwaExheWVyaW5nXCIpLCh0PT09MTB8fHQ9PT0xMXx8dD09PTEyKSYmKHRoaXMuUWM9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBpbml0aWFsaXplT3B0aW9uKCl7cmV0dXJuIHRoaXMuX2N9c2V0IGluaXRpYWxpemVPcHRpb24odCl7dGhpcy5fYyE9PXQmJihVLmoodCxMYXllcmVkRGlncmFwaEluaXQsXCJMYXllcmVkRGlncmFwaEluaXRcIiksKHQ9PT0yMHx8dD09PTIxfHx0PT09MjIpJiYodGhpcy5fYz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGl0ZXJhdGlvbnMoKXtyZXR1cm4gdGhpcy5sZn1zZXQgaXRlcmF0aW9ucyh0KXt0aGlzLmxmIT09dCYmKFUucih0LExheWVyZWREaWdyYXBoTmV0d29yayxcIml0ZXJhdGlvbnNcIiksdD49MCYmKHRoaXMubGY9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBhZ2dyZXNzaXZlT3B0aW9uKCl7cmV0dXJuIHRoaXMudHV9c2V0IGFnZ3Jlc3NpdmVPcHRpb24odCl7dGhpcy50dSE9PXQmJihVLmoodCxMYXllcmVkRGlncmFwaEFnZ3Jlc3NpdmUsXCJMYXllcmVkRGlncmFwaEFnZ3Jlc3NpdmVcIiksKHQ9PT0zMHx8dD09PTMxfHx0PT09MzIpJiYodGhpcy50dT10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IHBhY2tPcHRpb24oKXtyZXR1cm4gdGhpcy5ucn1zZXQgcGFja09wdGlvbih0KXt0aGlzLm5yIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJwYWNrT3B0aW9uXCIpLHQ+PTAmJnQ8OCYmKHRoaXMubnI9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBwYWNrSXRlcmF0aW9ucygpe3JldHVybiB0aGlzLml1fXNldCBwYWNrSXRlcmF0aW9ucyh0KXt0aGlzLml1PXR9Z2V0IGFsaWduT3B0aW9uKCl7cmV0dXJuIHRoaXMuSW59c2V0IGFsaWduT3B0aW9uKHQpe3RoaXMuSW4hPT10JiYoVS5pKHQsXCJudW1iZXJcIixMYXllcmVkRGlncmFwaExheW91dCxcImFsaWduXCIpLHQ+PTAmJnQ8MTYmJih0aGlzLkluPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgc2V0c1BvcnRTcG90cygpe3JldHVybiB0aGlzLkZufXNldCBzZXRzUG9ydFNwb3RzKHQpe3RoaXMuRm4hPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsXCJzZXRzUG9ydFNwb3RzXCIpLHRoaXMuRm49dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IG1heExheWVyKCl7cmV0dXJuIHRoaXMuQ3R9Z2V0IG1heEluZGV4KCl7cmV0dXJuIHRoaXMudnl9Z2V0IG1heENvbHVtbigpe3JldHVybiB0aGlzLnF0fWdldCBtaW5JbmRleExheWVyKCl7cmV0dXJuIHRoaXMuTGd9Z2V0IG1heEluZGV4TGF5ZXIoKXtyZXR1cm4gdGhpcy5Gc31zdGF0aWMgQ3ljbGVEZXB0aEZpcnN0PTA7c3RhdGljIEN5Y2xlR3JlZWR5PTE7c3RhdGljIEN5Y2xlRnJvbUxheWVycz0yO3N0YXRpYyBMYXllck9wdGltYWxMaW5rTGVuZ3RoPTEwO3N0YXRpYyBMYXllckxvbmdlc3RQYXRoU2luaz0xMTtzdGF0aWMgTGF5ZXJMb25nZXN0UGF0aFNvdXJjZT0xMjtzdGF0aWMgSW5pdERlcHRoRmlyc3RPdXQ9MjA7c3RhdGljIEluaXREZXB0aEZpcnN0SW49MjE7c3RhdGljIEluaXROYWl2ZT0yMjtzdGF0aWMgQWdncmVzc2l2ZU5vbmU9MzA7c3RhdGljIEFnZ3Jlc3NpdmVMZXNzPTMxO3N0YXRpYyBBZ2dyZXNzaXZlTW9yZT0zMjtzdGF0aWMgUGFja05vbmU9MDtzdGF0aWMgUGFja0V4cGFuZD0xO3N0YXRpYyBQYWNrU3RyYWlnaHRlbj0yO3N0YXRpYyBQYWNrTWVkaWFuPTQ7c3RhdGljIFBhY2tBbGw9MTU7c3RhdGljIEFsaWduTm9uZT0wO3N0YXRpYyBBbGlnblVwcGVyTGVmdD0xO3N0YXRpYyBBbGlnblVwcGVyUmlnaHQ9MjtzdGF0aWMgQWxpZ25Mb3dlckxlZnQ9NDtzdGF0aWMgQWxpZ25Mb3dlclJpZ2h0PTg7c3RhdGljIEFsaWduQWxsPTE1fWNsYXNzIFNlZ0luZm97dm87SjM7QzE7JDM7WjM7T3Q7SmU7UTM7Y29uc3RydWN0b3IoKXt0aGlzLnZvPTAsdGhpcy5KMz0wLHRoaXMuQzE9MCx0aGlzLiQzPTAsdGhpcy5aMz0wLHRoaXMuT3Q9MCx0aGlzLkplPW51bGwsdGhpcy5RMz0wfX1jbGFzcyBMYXllcmVkRGlncmFwaE5ldHdvcmsgZXh0ZW5kcyBMYXlvdXROZXR3b3Jre2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpfWNyZWF0ZVZlcnRleCgpe3JldHVybiBuZXcgTGF5ZXJlZERpZ3JhcGhWZXJ0ZXgodGhpcyl9Y3JlYXRlRWRnZSgpe3JldHVybiBuZXcgTGF5ZXJlZERpZ3JhcGhFZGdlKHRoaXMpfX1jbGFzcyBMYXllcmVkRGlncmFwaFZlcnRleCBleHRlbmRzIExheW91dFZlcnRleHt2bztRcjtPdDt3azt4aztpZTtzdTtXbjtnaztjazt1azthZjtPbjtYRDtLaDt0cztudTt1ZTtFbjtReT1udWxsO195PW51bGw7dHc9bnVsbDtpdz1udWxsO2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMudm89LTEsdGhpcy5Rcj0tMSx0aGlzLk90PS0xLHRoaXMud2s9TmFOLHRoaXMueGs9bnVsbCx0aGlzLmllPSExLHRoaXMuc3U9TmFOLHRoaXMuV249TmFOLHRoaXMuZ2s9MCx0aGlzLmNrPW51bGwsdGhpcy51az1udWxsfXN0YXRpYyBVRCh0LGkpe3JldHVybiB0LmluZGV4LWkuaW5kZXh9Z2V0UHJvcGVyU291cmNlRWRnZXMoKXtpZighdGhpcy50dyl7Y29uc3QgdD1bXTtmb3IoY29uc3QgaSBvZiB0aGlzLnlvKXtjb25zdCBlPWk7ZS52YWxpZCYmdC5wdXNoKGUpfXRoaXMudHc9dH1yZXR1cm4gdGhpcy50d31nZXRQcm9wZXJEZXN0aW5hdGlvbkVkZ2VzKCl7aWYoIXRoaXMuaXcpe2NvbnN0IHQ9W107Zm9yKGNvbnN0IGkgb2YgdGhpcy50cil7Y29uc3QgZT1pO2UudmFsaWQmJnQucHVzaChlKX10aGlzLml3PXR9cmV0dXJuIHRoaXMuaXd9Z2V0RGVzdGluYXRpb25FZGdlKHQpe2NvbnN0IGk9dGhpcy5nZXRQcm9wZXJEZXN0aW5hdGlvbkVkZ2VzKCk7Zm9yKGNvbnN0IGUgb2YgaSlpZihlLnRvVmVydGV4PT09dClyZXR1cm4gZTtVLm4oXCJVbmFibGUgdG8gZmluZCBkZXN0aW5hdGlvbiBlZGdlIHRvIGdpdmVuIHZlcnRleFwiKX1nZXRQcm9wZXJTb3VyY2VWZXJ0ZXhlcygpe2lmKCF0aGlzLlF5KXtjb25zdCB0PVtdO2Zvcihjb25zdCBpIG9mIHRoaXMueW8pe2NvbnN0IGU9aTshZS52YWxpZHx8ZS5mcm9tVmVydGV4LmxheWVyPD1lLnRvVmVydGV4LmxheWVyfHx0LnB1c2goZS5mcm9tVmVydGV4KX10LnNvcnQoTGF5ZXJlZERpZ3JhcGhWZXJ0ZXguVUQpLHRoaXMuUXk9dH1yZXR1cm4gdGhpcy5ReX1nZXRQcm9wZXJEZXN0aW5hdGlvblZlcnRleGVzKCl7aWYoIXRoaXMuX3kpe2NvbnN0IHQ9W107Zm9yKGNvbnN0IGkgb2YgdGhpcy50cil7Y29uc3QgZT1pOyFlLnZhbGlkfHxlLmZyb21WZXJ0ZXgubGF5ZXI8PWUudG9WZXJ0ZXgubGF5ZXJ8fHQucHVzaChlLnRvVmVydGV4KX10LnNvcnQoTGF5ZXJlZERpZ3JhcGhWZXJ0ZXguVUQpLHRoaXMuX3k9dH1yZXR1cm4gdGhpcy5feX1hZGRTb3VyY2VFZGdlKHQpe3N1cGVyLmFkZFNvdXJjZUVkZ2UodCksdGhpcy5ReT1udWxsLHRoaXMudHc9bnVsbH1kZWxldGVTb3VyY2VFZGdlKHQpe3N1cGVyLmRlbGV0ZVNvdXJjZUVkZ2UodCksdGhpcy5ReT1udWxsLHRoaXMudHc9bnVsbH1hZGREZXN0aW5hdGlvbkVkZ2UodCl7c3VwZXIuYWRkRGVzdGluYXRpb25FZGdlKHQpLHRoaXMuX3k9bnVsbCx0aGlzLml3PW51bGx9ZGVsZXRlRGVzdGluYXRpb25FZGdlKHQpe3N1cGVyLmRlbGV0ZURlc3RpbmF0aW9uRWRnZSh0KSx0aGlzLl95PW51bGwsdGhpcy5pdz1udWxsfWdldCBsYXllcigpe3JldHVybiB0aGlzLnZvfXNldCBsYXllcih0KXt0aGlzLnZvIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsTGF5ZXJlZERpZ3JhcGhWZXJ0ZXgsXCJsYXllclwiKSx0aGlzLnZvPXQpfWdldCBjb2x1bW4oKXtyZXR1cm4gdGhpcy5Rcn1zZXQgY29sdW1uKHQpe3RoaXMuUXIhPT10JiYoVS5pKHQsXCJudW1iZXJcIixMYXllcmVkRGlncmFwaFZlcnRleCxcImNvbHVtblwiKSx0aGlzLlFyPXQpfWdldCBpbmRleCgpe3JldHVybiB0aGlzLk90fXNldCBpbmRleCh0KXt0aGlzLk90IT09dCYmKFUuaSh0LFwibnVtYmVyXCIsTGF5ZXJlZERpZ3JhcGhWZXJ0ZXgsXCJpbmRleFwiKSx0aGlzLk90PXQpfWdldCBjb21wb25lbnQoKXtyZXR1cm4gdGhpcy53a31zZXQgY29tcG9uZW50KHQpe3RoaXMud2shPT10JiYoVS5pKHQsXCJudW1iZXJcIixMYXllcmVkRGlncmFwaFZlcnRleCxcImNvbXBvbmVudFwiKSx0aGlzLndrPXQpfWdldCBuZWFyKCl7cmV0dXJuIHRoaXMueGt9c2V0IG5lYXIodCl7dGhpcy54ayE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJlUuZSh0LExheWVyZWREaWdyYXBoVmVydGV4LExheWVyZWREaWdyYXBoVmVydGV4LFwibmVhclwiKSx0aGlzLnhrPXQpfX1jbGFzcyBMYXllcmVkRGlncmFwaEVkZ2UgZXh0ZW5kcyBMYXlvdXRFZGdle2llO2JrO2trO1NrO01rO1BrO05rO2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMuaWU9ITEsdGhpcy5iaz0hMSx0aGlzLmtrPSExLHRoaXMuU2s9TmFOLHRoaXMuTWs9TmFOLHRoaXMuUGs9MCx0aGlzLk5rPTB9Z2V0IGZyb21WZXJ0ZXgoKXtyZXR1cm4gdGhpcy5aZX1zZXQgZnJvbVZlcnRleCh0KXt0aGlzLlplIT09dCYmKERlYnVnJiZ0IT09bnVsbCYmVS5lKHQsTGF5ZXJlZERpZ3JhcGhWZXJ0ZXgsTGF5ZXJlZERpZ3JhcGhFZGdlLFwiZnJvbVZlcnRleFwiKSx0aGlzLlplPXQpfWdldCB0b1ZlcnRleCgpe3JldHVybiB0aGlzLlFlfXNldCB0b1ZlcnRleCh0KXt0aGlzLlFlIT09dCYmKERlYnVnJiZ0IT09bnVsbCYmVS5lKHQsTGF5ZXJlZERpZ3JhcGhWZXJ0ZXgsTGF5ZXJlZERpZ3JhcGhFZGdlLFwidG9WZXJ0ZXhcIiksdGhpcy5RZT10KX1nZXQgdmFsaWQoKXtyZXR1cm4gdGhpcy5pZX1zZXQgdmFsaWQodCl7dGhpcy5pZSE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcmVkRGlncmFwaEVkZ2UsXCJ2YWxpZFwiKSx0aGlzLmllPXQpfWdldCByZXYoKXtyZXR1cm4gdGhpcy5ia31zZXQgcmV2KHQpe3RoaXMuYmshPT10JiYoVS5pKHQsXCJib29sZWFuXCIsTGF5ZXJlZERpZ3JhcGhFZGdlLFwicmV2XCIpLHRoaXMuYms9dCl9Z2V0IGZvcmVzdCgpe3JldHVybiB0aGlzLmtrfXNldCBmb3Jlc3QodCl7dGhpcy5rayE9PXQmJihVLmkodCxcImJvb2xlYW5cIixMYXllcmVkRGlncmFwaEVkZ2UsXCJmb3Jlc3RcIiksdGhpcy5raz10KX1nZXQgcG9ydEZyb21Qb3MoKXtyZXR1cm4gdGhpcy5Ta31zZXQgcG9ydEZyb21Qb3ModCl7dGhpcy5TayE9PXQmJihVLmkodCxcIm51bWJlclwiLExheWVyZWREaWdyYXBoRWRnZSxcInBvcnRGcm9tUG9zXCIpLHRoaXMuU2s9dCl9Z2V0IHBvcnRUb1Bvcygpe3JldHVybiB0aGlzLk1rfXNldCBwb3J0VG9Qb3ModCl7dGhpcy5NayE9PXQmJihVLmkodCxcIm51bWJlclwiLExheWVyZWREaWdyYXBoRWRnZSxcInBvcnRUb1Bvc1wiKSx0aGlzLk1rPXQpfWdldCBwb3J0RnJvbUNvbE9mZnNldCgpe3JldHVybiB0aGlzLlBrfXNldCBwb3J0RnJvbUNvbE9mZnNldCh0KXt0aGlzLlBrIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsTGF5ZXJlZERpZ3JhcGhFZGdlLFwicG9ydEZyb21Db2xPZmZzZXRcIiksdGhpcy5Qaz10KX1nZXQgcG9ydFRvQ29sT2Zmc2V0KCl7cmV0dXJuIHRoaXMuTmt9c2V0IHBvcnRUb0NvbE9mZnNldCh0KXt0aGlzLk5rIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsTGF5ZXJlZERpZ3JhcGhFZGdlLFwicG9ydFRvQ29sT2Zmc2V0XCIpLHRoaXMuTms9dCl9fXZhciBUcmVlUGF0aD0oeT0+KHlbeS5EZWZhdWx0PTBdPVwiRGVmYXVsdFwiLHlbeS5EZXN0aW5hdGlvbj0xXT1cIkRlc3RpbmF0aW9uXCIseVt5LlNvdXJjZT0yXT1cIlNvdXJjZVwiLHkpKShUcmVlUGF0aHx8e30pLFRyZWVTb3J0aW5nPSh5PT4oeVt5LkZvcndhcmRzPTEwXT1cIkZvcndhcmRzXCIseVt5LlJldmVyc2U9MTFdPVwiUmV2ZXJzZVwiLHlbeS5Bc2NlbmRpbmc9MTJdPVwiQXNjZW5kaW5nXCIseVt5LkRlc2NlbmRpbmc9MTNdPVwiRGVzY2VuZGluZ1wiLHkpKShUcmVlU29ydGluZ3x8e30pLFRyZWVBbGlnbm1lbnQ9KHk9Pih5W3kuQ2VudGVyU3VidHJlZXM9MjBdPVwiQ2VudGVyU3VidHJlZXNcIix5W3kuQ2VudGVyQ2hpbGRyZW49MjFdPVwiQ2VudGVyQ2hpbGRyZW5cIix5W3kuU3RhcnQ9MjJdPVwiU3RhcnRcIix5W3kuRW5kPTIzXT1cIkVuZFwiLHlbeS5CdXM9MjRdPVwiQnVzXCIseVt5LkJ1c0JyYW5jaGluZz0yNV09XCJCdXNCcmFuY2hpbmdcIix5W3kuVG9wTGVmdEJ1cz0yNl09XCJUb3BMZWZ0QnVzXCIseVt5LkJvdHRvbVJpZ2h0QnVzPTI3XT1cIkJvdHRvbVJpZ2h0QnVzXCIseVt5LkN1c3RvbT0yOF09XCJDdXN0b21cIix5KSkoVHJlZUFsaWdubWVudHx8e30pLFRyZWVDb21wYWN0aW9uPSh5PT4oeVt5Lk5vbmU9MzBdPVwiTm9uZVwiLHlbeS5CbG9jaz0zMV09XCJCbG9ja1wiLHkpKShUcmVlQ29tcGFjdGlvbnx8e30pLFRyZWVTdHlsZT0oeT0+KHlbeS5MYXllcmVkPTQwXT1cIkxheWVyZWRcIix5W3kuTGFzdFBhcmVudHM9NDFdPVwiTGFzdFBhcmVudHNcIix5W3kuQWx0ZXJuYXRpbmc9NDJdPVwiQWx0ZXJuYXRpbmdcIix5W3kuUm9vdE9ubHk9NDNdPVwiUm9vdE9ubHlcIix5KSkoVHJlZVN0eWxlfHx7fSksVHJlZUFycmFuZ2VtZW50PSh5PT4oeVt5LlZlcnRpY2FsPTUwXT1cIlZlcnRpY2FsXCIseVt5Lkhvcml6b250YWw9NTFdPVwiSG9yaXpvbnRhbFwiLHlbeS5GaXhlZFJvb3RzPTUyXT1cIkZpeGVkUm9vdHNcIix5KSkoVHJlZUFycmFuZ2VtZW50fHx7fSksVHJlZUxheWVyU3R5bGU9KHk9Pih5W3kuSW5kaXZpZHVhbD02MF09XCJJbmRpdmlkdWFsXCIseVt5LlNpYmxpbmdzPTYxXT1cIlNpYmxpbmdzXCIseVt5LlVuaWZvcm09NjJdPVwiVW5pZm9ybVwiLHkpKShUcmVlTGF5ZXJTdHlsZXx8e30pO2NsYXNzIFRyZWVMYXlvdXQgZXh0ZW5kcyBMYXlvdXR7Qmk7Umk7b3U7Umc7aEM7QmU7V2k7VHM7WDtZO0NrO3VzO2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5CaT1uZXcgR1NldCx0aGlzLlJpPTAsdGhpcy51cz0xLHRoaXMub3U9NDAsdGhpcy5SZz02MCx0aGlzLmhDPVtdLHRoaXMuQmU9ITAsdGhpcy5XaT01MCx0aGlzLlRzPW5ldyBTaXplKDEwLDEwKS5wKCk7Y29uc3QgaT1uZXcgVHJlZU5ldHdvcmsodGhpcyk7dGhpcy5YPW5ldyBUcmVlVmVydGV4KGkpLHRoaXMuWT1uZXcgVHJlZVZlcnRleChpKSx0aGlzLkNrPVtdLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1jbG9uZVByb3RlY3RlZCh0KXtzdXBlci5jbG9uZVByb3RlY3RlZCh0KSx0LlJpPXRoaXMuUmksdC5vdT10aGlzLm91LHQuUmc9dGhpcy5SZyx0LkJlPXRoaXMuQmUsdC5XaT10aGlzLldpLHQuVHMuYyh0aGlzLlRzKSx0LlguY29weUluaGVyaXRlZFByb3BlcnRpZXNGcm9tKHRoaXMuWCksdC5ZLmNvcHlJbmhlcml0ZWRQcm9wZXJ0aWVzRnJvbSh0aGlzLlkpfWFpKHQpe3QgaW4gVHJlZUFsaWdubWVudD90aGlzLmFsaWdubWVudD10OnQgaW4gVHJlZUFycmFuZ2VtZW50P3RoaXMuYXJyYW5nZW1lbnQ9dDp0IGluIFRyZWVDb21wYWN0aW9uP3RoaXMuY29tcGFjdGlvbj10OnQgaW4gVHJlZVBhdGg/dGhpcy5wYXRoPXQ6dCBpbiBUcmVlU29ydGluZz90aGlzLnNvcnRpbmc9dDp0IGluIFRyZWVTdHlsZT90aGlzLnRyZWVTdHlsZT10OnN1cGVyLmFpKHQpfWNyZWF0ZU5ldHdvcmsoKXtyZXR1cm4gbmV3IFRyZWVOZXR3b3JrKHRoaXMpfW1ha2VOZXR3b3JrKHQpe2NvbnN0IGk9dGhpcy5jcmVhdGVOZXR3b3JrKCksZT1zPT57aWYocyBpbnN0YW5jZW9mIE5vZGUpcmV0dXJuIXMuaXNMaW5rTGFiZWwmJnMuY2F0ZWdvcnkhPT1cIkNvbW1lbnRcIjtpZihzIGluc3RhbmNlb2YgTGluayl7Y29uc3Qgbj1zLmZyb21Ob2RlO2lmKG49PT1udWxsfHxuLmlzTGlua0xhYmVsfHxuLmNhdGVnb3J5PT09XCJDb21tZW50XCIpcmV0dXJuITE7Y29uc3Qgbz1zLnRvTm9kZTtyZXR1cm4hKG89PT1udWxsfHxvLmlzTGlua0xhYmVsfHxvLmNhdGVnb3J5PT09XCJDb21tZW50XCIpfXJldHVybiExfTtyZXR1cm4gdCBpbnN0YW5jZW9mIERpYWdyYW0/KGkuYWRkUGFydHModC5ub2RlcywhMCxlKSxpLmFkZFBhcnRzKHQubGlua3MsITAsZSkpOnQgaW5zdGFuY2VvZiBHcm91cD9pLmFkZFBhcnRzKHQubWVtYmVyUGFydHMsITEsZSk6aS5hZGRQYXJ0cyh0Lml0ZXJhdG9yLCExLGUpLGl9ZG9MYXlvdXQodCl7RGVidWcmJnQ9PT1udWxsJiZVLm4oXCJMYXlvdXQuZG9MYXlvdXQoY29sbGVjdGlvbikgYXJndW1lbnQgbXVzdCBub3QgYmUgbnVsbCBidXQgYSBEaWFncmFtLCBhIEdyb3VwLCBvciBhbiBJdGVyYWJsZSBvZiBQYXJ0c1wiKSx0aGlzLm5ldHdvcms9PT1udWxsJiYodGhpcy5uZXR3b3JrPXRoaXMubWFrZU5ldHdvcmsodCkpLHRoaXMuYXJyYW5nZW1lbnQhPT01MiYmKHRoaXMuYXJyYW5nZW1lbnRPcmlnaW49dGhpcy5pbml0aWFsT3JpZ2luKHRoaXMuYXJyYW5nZW1lbnRPcmlnaW4pKTtsZXQgaT10aGlzLmRpYWdyYW07aT09PW51bGwmJnQgaW5zdGFuY2VvZiBEaWFncmFtJiYoaT10KSx0aGlzLnBhdGg9PT0wJiZpIT09bnVsbD90aGlzLnVzPWkuaXNUcmVlUGF0aFRvQ2hpbGRyZW4/MToyOnRoaXMudXM9dGhpcy5wYXRoPT09MD8xOnRoaXMucGF0aCx0aGlzLm5ldHdvcmsudmVydGV4ZXMuY291bnQ+MCYmKHRoaXMuXzMoKSx0aGlzLnRFKCksdGhpcy5pRSgpLHRoaXMuZUUoKSx0aGlzLmVDKCksdGhpcy5zRSgpLHRoaXMuYXJyYW5nZVRyZWVzKCksdGhpcy51cGRhdGVQYXJ0cygpKSx0aGlzLm5ldHdvcms9bnVsbCx0aGlzLkJpPW5ldyBHU2V0LHRoaXMuaXNWYWxpZExheW91dD0hMH1fMygpe3RoaXMubmV0d29yay5kZWxldGVTZWxmRWRnZXMoKTtjb25zdCB0PXRoaXMubmV0d29yay52ZXJ0ZXhlcy5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl7Y29uc3Qgbj10LnZhbHVlO24uaW5pdGlhbGl6ZWQ9ITEsbi5sZXZlbD0wLG4ucGFyZW50PW51bGwsbi5jaGlsZHJlbj1bXX1pZih0aGlzLkJpLmNvdW50PjApe2NvbnN0IG49bmV3IEdTZXQsbz10aGlzLkJpLml0ZXJhdG9yO2Zvcig7by5uZXh0KCk7KXtjb25zdCByPW8udmFsdWU7aWYociBpbnN0YW5jZW9mIE5vZGUpe2NvbnN0IGw9dGhpcy5uZXR3b3JrLmZpbmRWZXJ0ZXgocik7bCE9PW51bGwmJm4uYWRkKGwpfWVsc2UgciBpbnN0YW5jZW9mIFRyZWVWZXJ0ZXgmJm4uYWRkKHIpfXRoaXMuQmk9bn10aGlzLkJpLmNvdW50PT09MCYmdGhpcy5maW5kUm9vdHMoKTtjb25zdCBpPXRoaXMuQmkuY29weSgpLml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBuPWkudmFsdWU7bi5pbml0aWFsaXplZHx8KG4uaW5pdGlhbGl6ZWQ9ITAsdGhpcy5hQyhuKSl9bGV0IGU9dGhpcy5uZXR3b3JrLnZlcnRleGVzLHM9bnVsbDtmb3IoO3M9dGhpcy5uRShlKSxzLmNvdW50PjA7KXtjb25zdCBuPXRoaXMuR0Qocyk7biE9PW51bGwmJnRoaXMuQmkuYWRkKG4pLG4uaW5pdGlhbGl6ZWQ9ITAsdGhpcy5hQyhuKSxlPXN9fW5FKHQpe2NvbnN0IGk9bmV3IEdTZXQsZT10Lml0ZXJhdG9yO2Zvcig7ZS5uZXh0KCk7KXtjb25zdCBzPWUudmFsdWU7cy5pbml0aWFsaXplZHx8aS5hZGQocyl9cmV0dXJuIGl9ZmluZFJvb3RzKCl7Y29uc3QgdD10aGlzLm5ldHdvcmsudmVydGV4ZXMsaT10Lml0ZXJhdG9yO2Zvcig7aS5uZXh0KCk7KXtjb25zdCBlPWkudmFsdWU7c3dpdGNoKHRoaXMudXMpe2Nhc2UgMTplLnNvdXJjZUVkZ2VzLmNvdW50PT09MCYmdGhpcy5CaS5hZGQoZSk7YnJlYWs7Y2FzZSAyOmUuZGVzdGluYXRpb25FZGdlcy5jb3VudD09PTAmJnRoaXMuQmkuYWRkKGUpO2JyZWFrO2RlZmF1bHQ6VS5uKFwiVW5oYW5kbGVkIHBhdGggdmFsdWUgXCIrdGhpcy51cy50b1N0cmluZygpKX19aWYodGhpcy5CaS5jb3VudD09PTApe2NvbnN0IGU9dGhpcy5HRCh0KTtlIT09bnVsbCYmdGhpcy5CaS5hZGQoZSl9fUdEKHQpe2xldCBpPTk5OTk5OSxlPW51bGw7Y29uc3Qgcz10Lml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBuPXMudmFsdWU7c3dpdGNoKHRoaXMudXMpe2Nhc2UgMTpuLnNvdXJjZUVkZ2VzLmNvdW50PGkmJihpPW4uc291cmNlRWRnZXMuY291bnQsZT1uKTticmVhaztjYXNlIDI6bi5kZXN0aW5hdGlvbkVkZ2VzLmNvdW50PGkmJihpPW4uZGVzdGluYXRpb25FZGdlcy5jb3VudCxlPW4pO2JyZWFrO2RlZmF1bHQ6VS5uKFwiVW5oYW5kbGVkIHBhdGggdmFsdWUgXCIrdGhpcy51cy50b1N0cmluZygpKX19cmV0dXJuIGV9YUModCl7aWYodD09PW51bGwpcmV0dXJuO3N3aXRjaChEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwid2Fsa1RyZWU6dlwiKSx0aGlzLnVzKXtjYXNlIDE6aWYodC5kZXN0aW5hdGlvbkVkZ2VzLmNvdW50PjApe2NvbnN0IHM9bmV3IExpc3Qsbj10LmRlc3RpbmF0aW9uVmVydGV4ZXM7Zm9yKDtuLm5leHQoKTspe2NvbnN0IG89bi52YWx1ZTt0aGlzLkhEKHQsbykmJnMuYWRkKG8pfXMuY291bnQ+MCYmKHQuY2hpbGRyZW49cy50b0FycmF5KCkpfWJyZWFrO2Nhc2UgMjppZih0LnNvdXJjZUVkZ2VzLmNvdW50PjApe2NvbnN0IHM9bmV3IExpc3Qsbj10LnNvdXJjZVZlcnRleGVzO2Zvcig7bi5uZXh0KCk7KXtjb25zdCBvPW4udmFsdWU7dGhpcy5IRCh0LG8pJiZzLmFkZChvKX1zLmNvdW50PjAmJih0LmNoaWxkcmVuPXMudG9BcnJheSgpKX1icmVhaztkZWZhdWx0OlUubihcIlVuaGFuZGxlZCBwYXRoIHZhbHVlXCIrdGhpcy51cy50b1N0cmluZygpKX1jb25zdCBpPXQuY2hpbGRyZW4sZT1pLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPWlbc107bi5pbml0aWFsaXplZD0hMCxuLmxldmVsPXQubGV2ZWwrMSxuLnBhcmVudD10LHRoaXMuQmkuZGVsZXRlKG4pfWZvcihsZXQgcz0wO3M8ZTtzKyspe2NvbnN0IG49aVtzXTt0aGlzLmFDKG4pfX1IRCh0LGkpe3JldHVybiBEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwid2Fsa09LOnZcIiksRGVidWcmJlUuZShpLFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcIndhbGtPSzpjXCIpLGkuaW5pdGlhbGl6ZWQ/dGhpcy5vRShpLHQpfHxpLmxldmVsPnQubGV2ZWw/ITE6KHRoaXMuckUoaS5wYXJlbnQsaSksITApOiEwfW9FKHQsaSl7aWYoaT09PW51bGwpcmV0dXJuITE7RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImlzQW5jZXN0b3I6YVwiKSxEZWJ1ZyYmVS5lKGksVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwiaXNBbmNlc3RvcjpiXCIpO2xldCBlPWkucGFyZW50O2Zvcig7ZSE9PW51bGwmJmUhPT10OyllPWUucGFyZW50O3JldHVybiBlPT09dH1yRSh0LGkpe2lmKHQ9PT1udWxsfHxpPT09bnVsbClyZXR1cm47RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcInJlbW92ZUNoaWxkOnBcIiksRGVidWcmJlUuZShpLFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcInJlbW92ZUNoaWxkOmNcIik7Y29uc3QgZT10LmNoaWxkcmVuO2xldCBzPTA7Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspZVtuXT09PWkmJnMrKztpZihzPjApe2NvbnN0IG49bmV3IEFycmF5KGUubGVuZ3RoLXMpO2xldCBvPTA7Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspZVtyXSE9PWkmJihuW28rK109ZVtyXSk7dC5jaGlsZHJlbj1ufX10RSgpe2NvbnN0IHQ9dGhpcy5CaS5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl7Y29uc3QgaT10LnZhbHVlO2kgaW5zdGFuY2VvZiBUcmVlVmVydGV4JiZ0aGlzLnFEKGkpfX1xRCh0KXtpZih0PT09bnVsbClyZXR1cm47RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImluaXRpYWxpemVUcmVlOnZcIiksdGhpcy5pbml0aWFsaXplVHJlZVZlcnRleFZhbHVlcyh0KSx0LmFsaWdubWVudD09PTI1JiZ0aGlzLnNvcnRUcmVlVmVydGV4Q2hpbGRyZW4odCk7bGV0IGk9MCxlPXQuY2hpbGRyZW5Db3VudCxzPTA7Y29uc3Qgbj10LmNoaWxkcmVuLG89bi5sZW5ndGg7Zm9yKGxldCByPTA7cjxvO3IrKyl7Y29uc3QgbD1uW3JdO3RoaXMucUQobCksaSs9bC5kZXNjZW5kYW50Q291bnQrMSxlPU1hdGgubWF4KGUsbC5tYXhDaGlsZHJlbkNvdW50KSxzPU1hdGgubWF4KHMsbC5tYXhHZW5lcmF0aW9uQ291bnQpfXQuZGVzY2VuZGFudENvdW50PWksdC5tYXhDaGlsZHJlbkNvdW50PWUsdC5tYXhHZW5lcmF0aW9uQ291bnQ9ZT4wP3MrMTowfWxFKHQpe3N3aXRjaChEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwibW9tOnZcIiksdGhpcy5vdSl7ZGVmYXVsdDpjYXNlIDQwOnJldHVybiB0LnBhcmVudCE9PW51bGw/dC5wYXJlbnQ6dGhpcy5YO2Nhc2UgNDM6cmV0dXJuIHQucGFyZW50PT09bnVsbD90aGlzLlg6dC5wYXJlbnQucGFyZW50PT09bnVsbD90aGlzLlk6dC5wYXJlbnQ7Y2FzZSA0MjpyZXR1cm4gdC5wYXJlbnQhPT1udWxsP3QucGFyZW50LnBhcmVudCE9PW51bGw/dC5wYXJlbnQucGFyZW50OnRoaXMuWTp0aGlzLlg7Y2FzZSA0MTp7bGV0IGk9ITA7aWYodC5jaGlsZHJlbkNvdW50PT09MClpPSExO2Vsc2V7Y29uc3QgZT10LmNoaWxkcmVuLHM9ZS5sZW5ndGg7Zm9yKGxldCBuPTA7bjxzO24rKylpZihlW25dLmNoaWxkcmVuQ291bnQ+MCl7aT0hMTticmVha319cmV0dXJuIGkmJnQucGFyZW50IT09bnVsbD90aGlzLlk6dC5wYXJlbnQhPT1udWxsP3QucGFyZW50OnRoaXMuWH19fWluaXRpYWxpemVUcmVlVmVydGV4VmFsdWVzKHQpe0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJpbml0aWFsaXplVHJlZVZlcnRleFZhbHVlczp2XCIpO2NvbnN0IGk9dGhpcy5sRSh0KTtpZih0LmNvcHlJbmhlcml0ZWRQcm9wZXJ0aWVzRnJvbShpKSx0LnBhcmVudCE9PW51bGwmJnQucGFyZW50LmFsaWdubWVudD09PTI1KXtsZXQgZT10LmFuZ2xlO2NvbnN0IHM9dC5wYXJlbnQuY2hpbGRyZW47bGV0IG49MDtmb3IoO248cy5sZW5ndGgmJnQhPT1zW25dOyluKys7biUyPT09MD9uIT09cy5sZW5ndGgtMSYmKGU9PT05MD9lPTE4MDplPT09MTgwP2U9MjcwOmU9PT0yNzA/ZT0xODA6ZT0yNzApOmU9PT05MD9lPTA6ZT09PTE4MD9lPTkwOmU9PT0yNzA/ZT0wOmU9OTAsdC5hbmdsZT1lfXQuaW5pdGlhbGl6ZWQ9ITB9aUUoKXtjb25zdCB0PXRoaXMuQmkuaXRlcmF0b3I7Zm9yKDt0Lm5leHQoKTspe2NvbnN0IGk9dC52YWx1ZTtpIGluc3RhbmNlb2YgVHJlZVZlcnRleCYmdGhpcy5XRChpKX19V0QodCl7aWYodD09PW51bGwpcmV0dXJuO0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJhc3NpZ25UcmVlOnZcIiksdGhpcy5hc3NpZ25UcmVlVmVydGV4VmFsdWVzKHQpO2NvbnN0IGk9dC5jaGlsZHJlbixlPWkubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspe2NvbnN0IG49aVtzXTt0aGlzLldEKG4pfX1hc3NpZ25UcmVlVmVydGV4VmFsdWVzKHQpe31lRSgpe2NvbnN0IHQ9dGhpcy5CaS5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl7Y29uc3QgaT10LnZhbHVlO2kgaW5zdGFuY2VvZiBUcmVlVmVydGV4JiZ0aGlzLmpEKGkpfX1qRCh0KXtpZih0PT09bnVsbClyZXR1cm47RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcInNvcnRUcmVlOnZcIiksdC5hbGlnbm1lbnQhPT0yNSYmdGhpcy5zb3J0VHJlZVZlcnRleENoaWxkcmVuKHQpO2NvbnN0IGk9dC5jaGlsZHJlbixlPWkubGVuZ3RoO2ZvcihsZXQgcz0wO3M8ZTtzKyspe2NvbnN0IG49aVtzXTt0aGlzLmpEKG4pfX1zb3J0VHJlZVZlcnRleENoaWxkcmVuKHQpe3N3aXRjaChEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwic29ydFRyZWVWZXJ0ZXhDaGlsZHJlbjp2XCIpLHQuc29ydGluZyl7ZGVmYXVsdDpjYXNlIDEwOmJyZWFrO2Nhc2UgMTE6dC5jaGlsZHJlbi5yZXZlcnNlKCk7YnJlYWs7Y2FzZSAxMjp0LmNoaWxkcmVuLnNvcnQodC5jb21wYXJlcik7YnJlYWs7Y2FzZSAxMzp0LmNoaWxkcmVuLnNvcnQodC5jb21wYXJlciksdC5jaGlsZHJlbi5yZXZlcnNlKCk7YnJlYWt9fWVDKCl7aWYoIXRoaXMuY29tbWVudHMpcmV0dXJuO2NvbnN0IHQ9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBpPXQudmFsdWU7dGhpcy5hZGRDb21tZW50cyhpKX19YWRkQ29tbWVudHModCl7RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImFkZENvbW1lbnRzOnZcIik7Y29uc3QgaT10LmFuZ2xlLGU9dC5wYXJlbnQ7bGV0IHM9MCxuPTIxLG89ITE7ZSE9PW51bGwmJihzPWUuYW5nbGUsbj1lLmFsaWdubWVudCxvPXRoaXMuaXNCdXNBbGlnbm1lbnQobikpO2NvbnN0IHI9aT09PTkwfHxpPT09MjcwLGw9cz09PTkwfHxzPT09MjcwLGg9dC5jaGlsZHJlbkNvdW50PT09MDtsZXQgZj0wLGE9MCxjPTA7Y29uc3QgdT10LmNvbW1lbnRTcGFjaW5nO2lmKHQubm9kZSE9PW51bGwpe2NvbnN0IGQ9dC5ub2RlLmZpbmROb2Rlc0Nvbm5lY3RlZCgpO2Zvcig7ZC5uZXh0KCk7KXtjb25zdCBtPWQudmFsdWU7aWYobS5jYXRlZ29yeSE9PVwiQ29tbWVudFwifHwhbS5jYW5MYXlvdXQoKSljb250aW51ZTt0LmNvbW1lbnRzPT09bnVsbCYmKHQuY29tbWVudHM9W10pLHQuY29tbWVudHMucHVzaChtKSxtLmVuc3VyZUJvdW5kcygpO2NvbnN0IGc9bS5tZWFzdXJlZEJvdW5kcztyJiYhaHx8IW8mJiFsJiZofHxvJiZsJiZoPyhmPU1hdGgubWF4KGYsZy53aWR0aCksYSs9Zy5oZWlnaHQrTWF0aC5hYnMoYykpOihmKz1nLndpZHRoK01hdGguYWJzKGMpLGE9TWF0aC5tYXgoYSxnLmhlaWdodCkpLGM9dX19aWYodC5jb21tZW50cyE9PW51bGwpe3ImJiFofHwhbyYmIWwmJmh8fG8mJmwmJmg/KGYrPU1hdGguYWJzKHQuY29tbWVudE1hcmdpbiksYT1NYXRoLm1heCgwLGEtdC5oZWlnaHQpKTooYSs9TWF0aC5hYnModC5jb21tZW50TWFyZ2luKSxmPU1hdGgubWF4KDAsZi10LndpZHRoKSk7Y29uc3QgZD1SZWN0LksoMCwwLHQuYm91bmRzLndpZHRoK2YsdC5ib3VuZHMuaGVpZ2h0K2EpO3QuYm91bmRzPWQsUmVjdC5vKGQpfX1pc0J1c0FsaWdubWVudCh0KXtyZXR1cm4gdD09PTI0fHx0PT09MjV8fHQ9PT0yNnx8dD09PTI3fWV3KHQpe3JldHVybiB0PT09MjR8fHQ9PT0yNX1mQyh0KXtEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwiaXNMZWZ0U2lkZUJ1czp2XCIpO2NvbnN0IGk9dC5wYXJlbnQ7aWYoaSE9PW51bGwpe2NvbnN0IGU9aS5hbGlnbm1lbnQ7aWYodGhpcy5pc0J1c0FsaWdubWVudChlKSlpZih0aGlzLmV3KGUpKXtjb25zdCBzPWkuY2hpbGRyZW47bGV0IG49MDtmb3IoO248cy5sZW5ndGgmJnQhPT1zW25dOyluKys7cmV0dXJuIG4lMj09PTB9ZWxzZSByZXR1cm4gZT09PTI2fXJldHVybiExfWxheW91dENvbW1lbnRzKHQpe2lmKERlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJsYXlvdXRDb21tZW50czp2XCIpLHQuY29tbWVudHMhPT1udWxsKXtjb25zdCBlPXQubm9kZS5tZWFzdXJlZEJvdW5kcyxzPXQucGFyZW50LG49dC5hbmdsZTtsZXQgbz0wLHI9MjEsbD0hMTtzIT09bnVsbCYmKG89cy5hbmdsZSxyPXMuYWxpZ25tZW50LGw9dGhpcy5pc0J1c0FsaWdubWVudChyKSk7Y29uc3QgaD1uPT09OTB8fG49PT0yNzAsZj1vPT09OTB8fG89PT0yNzAsYT10LmNoaWxkcmVuQ291bnQ9PT0wLGM9dGhpcy5mQyh0KTtsZXQgdT0wO2NvbnN0IGQ9dC5jb21tZW50cyxtPWQubGVuZ3RoLGc9UG9pbnQuYSgpO2ZvcihsZXQgdz0wO3c8bTt3Kyspe2NvbnN0IHg9ZFt3XSxrPXgubWVhc3VyZWRCb3VuZHM7aWYoaCYmIWF8fCFsJiYhZiYmYXx8bCYmZiYmYSl7aWYobz4xMzUmJiFsfHxmJiZjKWlmKHQuY29tbWVudE1hcmdpbj49MCl7Zy5zKHQuYm91bmRzLngtdC5jb21tZW50TWFyZ2luLWsud2lkdGgsdC5ib3VuZHMueSt1KSx4Lm1vdmUoZyk7Y29uc3QgYj14LmZpbmRMaW5rc0ludG8oKTtmb3IoO2IubmV4dCgpOyl7Y29uc3QgUz1iLnZhbHVlO1MuZnJvbVNwb3Q9U3BvdC5NaWRkbGVMZWZ0LFMudG9TcG90PVNwb3QuTWlkZGxlUmlnaHR9fWVsc2V7Zy5zKHQuYm91bmRzLngrdC5mb2N1cy54KjItdC5jb21tZW50TWFyZ2luLHQuYm91bmRzLnkrdSkseC5tb3ZlKGcpO2NvbnN0IGI9eC5maW5kTGlua3NJbnRvKCk7Zm9yKDtiLm5leHQoKTspe2NvbnN0IFM9Yi52YWx1ZTtTLmZyb21TcG90PVNwb3QuTWlkZGxlUmlnaHQsUy50b1Nwb3Q9U3BvdC5NaWRkbGVMZWZ0fX1lbHNlIGlmKHQuY29tbWVudE1hcmdpbj49MCl7Zy5zKHQuYm91bmRzLngrdC5mb2N1cy54KjIrdC5jb21tZW50TWFyZ2luLHQuYm91bmRzLnkrdSkseC5tb3ZlKGcpO2NvbnN0IGI9eC5maW5kTGlua3NJbnRvKCk7Zm9yKDtiLm5leHQoKTspe2NvbnN0IFM9Yi52YWx1ZTtTLmZyb21TcG90PVNwb3QuTWlkZGxlUmlnaHQsUy50b1Nwb3Q9U3BvdC5NaWRkbGVMZWZ0fX1lbHNle2cucyh0LmJvdW5kcy54K3QuY29tbWVudE1hcmdpbi1rLndpZHRoLHQuYm91bmRzLnkrdSkseC5tb3ZlKGcpO2NvbnN0IGI9eC5maW5kTGlua3NJbnRvKCk7Zm9yKDtiLm5leHQoKTspe2NvbnN0IFM9Yi52YWx1ZTtTLmZyb21TcG90PVNwb3QuTWlkZGxlTGVmdCxTLnRvU3BvdD1TcG90Lk1pZGRsZVJpZ2h0fX10LmNvbW1lbnRTcGFjaW5nPj0wP3UrPWsuaGVpZ2h0K3QuY29tbWVudFNwYWNpbmc6dSs9dC5jb21tZW50U3BhY2luZy1rLmhlaWdodH1lbHNle2lmKG8+MTM1JiYhbHx8IWYmJmMpaWYodC5jb21tZW50TWFyZ2luPj0wKXtnLnModC5ib3VuZHMueCt1LHQuYm91bmRzLnktdC5jb21tZW50TWFyZ2luLWsuaGVpZ2h0KSx4Lm1vdmUoZyk7Y29uc3QgYj14LmZpbmRMaW5rc0ludG8oKTtmb3IoO2IubmV4dCgpOyl7Y29uc3QgUz1iLnZhbHVlO1MuZnJvbVNwb3Q9U3BvdC5NaWRkbGVUb3AsUy50b1Nwb3Q9U3BvdC5NaWRkbGVCb3R0b219fWVsc2V7Zy5zKHQuYm91bmRzLngrdSx0LmJvdW5kcy55K3QuZm9jdXMueSoyLXQuY29tbWVudE1hcmdpbikseC5tb3ZlKGcpO2NvbnN0IGI9eC5maW5kTGlua3NJbnRvKCk7Zm9yKDtiLm5leHQoKTspe2NvbnN0IFM9Yi52YWx1ZTtTLmZyb21TcG90PVNwb3QuTWlkZGxlQm90dG9tLFMudG9TcG90PVNwb3QuTWlkZGxlVG9wfX1lbHNlIGlmKHQuY29tbWVudE1hcmdpbj49MCl7Zy5zKHQuYm91bmRzLngrdSx0LmJvdW5kcy55K3QuZm9jdXMueSoyK3QuY29tbWVudE1hcmdpbikseC5tb3ZlKGcpO2NvbnN0IGI9eC5maW5kTGlua3NJbnRvKCk7Zm9yKDtiLm5leHQoKTspe2NvbnN0IFM9Yi52YWx1ZTtTLmZyb21TcG90PVNwb3QuTWlkZGxlQm90dG9tLFMudG9TcG90PVNwb3QuTWlkZGxlVG9wfX1lbHNle2cucyh0LmJvdW5kcy54K3UsdC5ib3VuZHMueSt0LmNvbW1lbnRNYXJnaW4tay5oZWlnaHQpLHgubW92ZShnKTtjb25zdCBiPXguZmluZExpbmtzSW50bygpO2Zvcig7Yi5uZXh0KCk7KXtjb25zdCBTPWIudmFsdWU7Uy5mcm9tU3BvdD1TcG90Lk1pZGRsZVRvcCxTLnRvU3BvdD1TcG90Lk1pZGRsZUJvdHRvbX19dC5jb21tZW50U3BhY2luZz49MD91Kz1rLndpZHRoK3QuY29tbWVudFNwYWNpbmc6dSs9dC5jb21tZW50U3BhY2luZy1rLndpZHRofX1Qb2ludC5vKGcpO2NvbnN0IHA9dS10LmNvbW1lbnRTcGFjaW5nLShoP2UuaGVpZ2h0OmUud2lkdGgpO2lmKHRoaXMudXM9PT0xKXtjb25zdCB3PXQuZGVzdGluYXRpb25FZGdlcztmb3IoO3cubmV4dCgpOyl7Y29uc3Qgaz13LnZhbHVlLmxpbms7ayE9PW51bGwmJiFrLmlzQXZvaWRpbmcmJihrLmZyb21FbmRTZWdtZW50TGVuZ3RoPXA+MD9wOk5hTil9fWVsc2V7Y29uc3Qgdz10LnNvdXJjZUVkZ2VzO2Zvcig7dy5uZXh0KCk7KXtjb25zdCBrPXcudmFsdWUubGluaztrIT09bnVsbCYmIWsuaXNBdm9pZGluZyYmKGsudG9FbmRTZWdtZW50TGVuZ3RoPXA+MD9wOk5hTil9fX19c0UoKXtpZih0aGlzLmxheWVyU3R5bGU9PT02Mil7Y29uc3QgaT1bXTtsZXQgZT10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtlLm5leHQoKTspe2NvbnN0IHM9ZS52YWx1ZTtsZXQgbj1zLnBhcmVudDtuPT09bnVsbCYmKG49cyk7Y29uc3Qgbz1uLmFuZ2xlPT09MHx8bi5hbmdsZT09PTE4MDtsZXQgcj1pW3MubGV2ZWxdO3I9PT12b2lkIDAmJihyPTApLGlbcy5sZXZlbF09TWF0aC5tYXgocixvP3Mud2lkdGg6cy5oZWlnaHQpfWZvcihsZXQgcz0wO3M8aS5sZW5ndGg7cysrKWlbc109PT12b2lkIDAmJihpW3NdPTApO2Zvcih0aGlzLmhDPWksZT10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7ZS5uZXh0KCk7KXtjb25zdCBzPWUudmFsdWU7bGV0IG49cy5wYXJlbnQ7bj09PW51bGwmJihuPXMpLG4uYW5nbGU9PT0wfHxuLmFuZ2xlPT09MTgwPyhuLmFuZ2xlPT09MTgwJiYocy5mb2N1c1grPWlbcy5sZXZlbF0tcy53aWR0aCkscy53aWR0aD1pW3MubGV2ZWxdKToobi5hbmdsZT09PTI3MCYmKHMuZm9jdXNZKz1pW3MubGV2ZWxdLXMuaGVpZ2h0KSxzLmhlaWdodD1pW3MubGV2ZWxdKX19ZWxzZSBpZih0aGlzLmxheWVyU3R5bGU9PT02MSl7Y29uc3QgaT10aGlzLm5ldHdvcmsudmVydGV4ZXMuaXRlcmF0b3I7Zm9yKDtpLm5leHQoKTspe2NvbnN0IGU9aS52YWx1ZSxzPWUuYW5nbGU9PT0wfHxlLmFuZ2xlPT09MTgwO2xldCBuPS0xO2ZvcihsZXQgbz0wO288ZS5jaGlsZHJlbi5sZW5ndGg7bysrKXtjb25zdCByPWUuY2hpbGRyZW5bb107bj1NYXRoLm1heChuLHM/ci53aWR0aDpyLmhlaWdodCl9aWYobj49MClmb3IobGV0IG89MDtvPGUuY2hpbGRyZW4ubGVuZ3RoO28rKyl7Y29uc3Qgcj1lLmNoaWxkcmVuW29dO3M/KGUuYW5nbGU9PT0xODAmJihyLmZvY3VzWCs9bi1yLndpZHRoKSxyLndpZHRoPW4pOihlLmFuZ2xlPT09MjcwJiYoci5mb2N1c1krPW4tci5oZWlnaHQpLHIuaGVpZ2h0PW4pfX19Y29uc3QgdD10aGlzLkJpLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXtjb25zdCBpPXQudmFsdWU7aSBpbnN0YW5jZW9mIFRyZWVWZXJ0ZXgmJnRoaXMubGF5b3V0VHJlZShpKX19bGF5b3V0VHJlZSh0KXtpZih0PT09bnVsbClyZXR1cm47RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImxheW91dFRyZWU6dlwiKTtjb25zdCBpPXQuY2hpbGRyZW4sZT1pLmxlbmd0aDtmb3IobGV0IHM9MDtzPGU7cysrKXtjb25zdCBuPWlbc107dGhpcy5sYXlvdXRUcmVlKG4pfXN3aXRjaCh0LmNvbXBhY3Rpb24pe2Nhc2UgMzA6dGhpcy52RCh0KTticmVhaztkZWZhdWx0OmNhc2UgMzE6dC5hbGlnbm1lbnQ9PT0yNT90aGlzLnZEKHQpOnRoaXMuaEUodCk7YnJlYWt9fXZEKHQpe2lmKERlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJsYXlvdXRUcmVlTm9uZTp2XCIpLHQuY2hpbGRyZW5Db3VudD09PTApe2xldCBJPSExLFI9MCxPPTIxO3QucGFyZW50IT09bnVsbCYmKFI9dC5wYXJlbnQuYW5nbGUsTz10LnBhcmVudC5hbGlnbm1lbnQsST10aGlzLmlzQnVzQWxpZ25tZW50KE8pKTtjb25zdCBZPXRoaXMuZkModCk7dC5WLnMoMCwwKSx0Lnh0LnModC53aWR0aCx0LmhlaWdodCksdC5wYXJlbnQhPT1udWxsJiZ0LmNvbW1lbnRzIT09bnVsbCYmKChSPT09MTgwfHxSPT09MjcwKSYmIUl8fFkpP1I9PT0xODAmJiFJfHwoUj09PTkwfHxSPT09MjcwKSYmWT90LnV0LnModC53aWR0aC10LmZvY3VzLngqMiwwKTp0LnV0LnMoMCx0LmhlaWdodC10LmZvY3VzLnkqMik6dC51dC5zKDAsMCk7cmV0dXJufWNvbnN0IGk9dGhpcy5vcnRob0FuZ2xlKHQpLGU9aT09PTkwfHxpPT09MjcwO2xldCBzPTA7Y29uc3Qgbj10LmNoaWxkcmVuLG89bi5sZW5ndGg7Zm9yKGxldCBJPTA7STxvO0krKyl7Y29uc3QgUj1uW0ldO3M9TWF0aC5tYXgocyxlP1IueHQud2lkdGg6Ui54dC5oZWlnaHQpfWNvbnN0IHI9dC5hbGlnbm1lbnQsbD1yPT09MjIsaD1yPT09MjMsZj10aGlzLmlzQnVzQWxpZ25tZW50KHIpLGE9TWF0aC5tYXgoMCx0LmJyZWFkdGhMaW1pdCksYz10aGlzLmNvbXB1dGVMYXllclNwYWNpbmcodCksdT10Lm5vZGVTcGFjaW5nLGQ9dGhpcy5jb21wdXRlTm9kZUluZGVudCh0KSxtPWx8fGg/MDpkLzIsZz10LnJvd1NwYWNpbmc7bGV0IHA9MDsobHx8aCkmJihwPU1hdGgubWF4KDAsdC5yb3dJbmRlbnQpKTtjb25zdCB3PXQud2lkdGgseD10LmhlaWdodDtsZXQgaz0wLGI9MCxTPTAsTT0wLEE9MCxDPTAsUD0wLE49MCxUPTAsTD0wO2lmKGYmJiF0aGlzLmV3KHIpJiZpPjEzNSYmbi5yZXZlcnNlKCksdGhpcy5ldyhyKSlpZihvPjEpZm9yKGxldCBJPTA7STxvO0krKyl7Y29uc3QgUj1uW0ldLE89Ui54dDtJJTI9PT0wJiZJIT09by0xP1Q9TWF0aC5tYXgoVCwoZT9PLndpZHRoOk8uaGVpZ2h0KSt0aGlzLmNvbXB1dGVCdXNOb2RlU3BhY2luZyhSKS11KTpJJTIhPT0wJiYoTD1NYXRoLm1heChMLChlP08ud2lkdGg6Ty5oZWlnaHQpK3RoaXMuY29tcHV0ZUJ1c05vZGVTcGFjaW5nKFIpLXUpKX1lbHNlIG89PT0xJiYoVD1lP25bMF0ueHQud2lkdGg6blswXS54dC5oZWlnaHQpO2lmKGYpc3dpdGNoKHIpe2Nhc2UgMjQ6Y2FzZSAyNTpsZXQgSTtpPDEzNT9JPXRoaXMuSkQodCxuLFQsTCxrLGIpOkk9dGhpcy4kRCh0LG4sVCxMLGssYiksVD1JLngsaz1JLndpZHRoLGI9SS5oZWlnaHQ7YnJlYWs7Y2FzZSAyNjpmb3IobGV0IFI9MDtSPG87UisrKXtjb25zdCBPPW5bUl0sWT1PLnh0LEs9UD09PTA/MDpnO2U/KE8uVi5zKHMtWS53aWR0aCxBK0spLGs9TWF0aC5tYXgoayxZLndpZHRoKSxiPU1hdGgubWF4KGIsQStLK1kuaGVpZ2h0KSxBKz1LK1kuaGVpZ2h0KTooTy5WLnMoTStLLHMtWS5oZWlnaHQpLGs9TWF0aC5tYXgoayxNK0srWS53aWR0aCksYj1NYXRoLm1heChiLFkuaGVpZ2h0KSxNKz1LK1kud2lkdGgpLFArK31icmVhaztjYXNlIDI3OmZvcihsZXQgUj0wO1I8bztSKyspe2NvbnN0IE89bltSXSxZPU8ueHQsSz1QPT09MD8wOmc7ZT8oTy5WLnModS8yK3QuZm9jdXMueCxBK0spLGs9TWF0aC5tYXgoayxZLndpZHRoKSxiPU1hdGgubWF4KGIsQStLK1kuaGVpZ2h0KSxBKz1LK1kuaGVpZ2h0KTooTy5WLnMoTStLLHUvMit0LmZvY3VzLnkpLGs9TWF0aC5tYXgoayxNK0srWS53aWR0aCksYj1NYXRoLm1heChiLFkuaGVpZ2h0KSxNKz1LK1kud2lkdGgpLFArK31icmVha31lbHNlIGZvcihsZXQgST0wO0k8bztJKyspe2NvbnN0IFI9bltJXSxPPVIueHQ7aWYoZSl7YT4wJiZQPjAmJk0rdStPLndpZHRoPmEmJihNPHMmJnRoaXMuZmYodCxyLHMtTSwwLE4sSS0xKSxDKyssUD0wLE49SSxTPWIsTT0wLEE9aT4xMzU/LWItZzpiK2cpO2NvbnN0IFk9UD09PTA/bTp1O3RoaXMuQWsoUiwwLEEpLFIuVi5zKE0rWSxBKSxrPU1hdGgubWF4KGssTStZK08ud2lkdGgpLGI9TWF0aC5tYXgoYixTKyhDPT09MD8wOmcpK08uaGVpZ2h0KSxNKz1ZK08ud2lkdGh9ZWxzZXthPjAmJlA+MCYmQSt1K08uaGVpZ2h0PmEmJihBPHMmJnRoaXMuZmYodCxyLDAscy1BLE4sSS0xKSxDKyssUD0wLE49SSxTPWssQT0wLE09aT4xMzU/LWstZzprK2cpO2NvbnN0IFk9UD09PTA/bTp1O3RoaXMuQWsoUixNLDApLFIuVi5zKE0sQStZKSxiPU1hdGgubWF4KGIsQStZK08uaGVpZ2h0KSxrPU1hdGgubWF4KGssUysoQz09PTA/MDpnKStPLndpZHRoKSxBKz1ZK08uaGVpZ2h0fVArK31DPjAmJihlPyhiKz1NYXRoLm1heCgwLGMpLE08ayYmdGhpcy5mZih0LHIsay1NLDAsTixvLTEpLHA+MCYmKGh8fHRoaXMucnUodCxwLDAsMCxvLTEpLGsrPXApKTooays9TWF0aC5tYXgoMCxjKSxBPGImJnRoaXMuZmYodCxyLDAsYi1BLE4sby0xKSxwPjAmJihofHx0aGlzLnJ1KHQsMCxwLDAsby0xKSxiKz1wKSkpO2xldCBEPTAsRj0wO3N3aXRjaChyKXtjYXNlIDIwOmU/RCs9ay8yLXQuZm9jdXMueC1kLzI6Ris9Yi8yLXQuZm9jdXMueS1kLzI7YnJlYWs7ZGVmYXVsdDpjYXNlIDIxOmlmKEM+MCllP0QrPWsvMi10LmZvY3VzLngtZC8yOkYrPWIvMi10LmZvY3VzLnktZC8yO2Vsc2V7Y29uc3QgUj1vO2lmKGUpe2NvbnN0IE89blswXS5WLngrblswXS51dC54LFk9bltSLTFdLlYueCtuW1ItMV0udXQueCtuW1ItMV0uZm9jdXMueCoyO0QrPU8rKFktTykvMi10LmZvY3VzLngtZC8yfWVsc2V7Y29uc3QgTz1uWzBdLlYueStuWzBdLnV0LnksWT1uW1ItMV0uVi55K25bUi0xXS51dC55K25bUi0xXS5mb2N1cy55KjI7Ris9TysoWS1PKS8yLXQuZm9jdXMueS1kLzJ9fWJyZWFrO2Nhc2UgMjI6ZT8oRC09ZCxrKz1kKTooRi09ZCxiKz1kKTticmVhaztjYXNlIDIzOmU/KEQrPWstdC53aWR0aCtkLGsrPWQpOihGKz1iLXQuaGVpZ2h0K2QsYis9ZCk7YnJlYWs7Y2FzZSAyNDpjYXNlIDI1OmU/bz4xP0QrPVQrdS8yLXQuZm9jdXMueDpEKz1uWzBdLmZvY3VzLngtdC5mb2N1cy54K25bMF0udXQueDpvPjE/Ris9VCt1LzItdC5mb2N1cy55OkYrPW5bMF0uZm9jdXMueS10LmZvY3VzLnkrblswXS51dC55O2JyZWFrO2Nhc2UgMjY6ZT9EKz1rK3UvMi10LmZvY3VzLng6Ris9Yit1LzItdC5mb2N1cy55O2JyZWFrO2Nhc2UgMjc6YnJlYWs7Y2FzZSAyODpjb25zdCBJPXRoaXMuY3VzdG9tQWxpZ25tZW50KHQsRCxGLGssYik7RD1JWzBdLEY9SVsxXSxrPUlbMl0sYj1JWzNdO2JyZWFrfWZvcihsZXQgST0wO0k8bztJKyspe2NvbnN0IFI9bltJXTtlP1IuVi5zKFIuVi54K1IudXQueC1ELFIuVi55KyhpPjEzNT8oZj8tYjotUi54dC5oZWlnaHQpK1IudXQueS1jOngrYytSLnV0LnkpKTpSLlYucyhSLlYueCsoaT4xMzU/KGY/LWs6LVIueHQud2lkdGgpK1IudXQueC1jOncrYytSLnV0LngpLFIuVi55K1IudXQueS1GKX1lPyhrPXRoaXMuY0ModCxrLEQpLEQ8MCYmKEQ9MCksaT4xMzUmJihGKz1iK2MpLGI9TWF0aC5tYXgoTWF0aC5tYXgoYix4KSxiK3grYykpOihpPjEzNSYmKEQrPWsrYyksaz1NYXRoLm1heChNYXRoLm1heChrLHcpLGsrdytjKSxiPXRoaXMudUModCxiLEYpLEY8MCYmKEY9MCkpLHQudXQucyhELEYpLHQueHQucyhrLGIpfWN1c3RvbUFsaWdubWVudCh0LGksZSxzLG4pe3JldHVybltpLGUscyxuXX1KRCh0LGksZSxzLG4sbyl7RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImxheW91dEJ1c0NoaWxkcmVuUG9zRGlyOnZcIik7Y29uc3Qgcj1pLmxlbmd0aDtpZihyPT09MClyZXR1cm4gbmV3IFJlY3QoZSwwLG4sbyk7aWYocj09PTEpe2NvbnN0IHA9aVswXTtyZXR1cm4gbj1wLnh0LndpZHRoLG89cC54dC5oZWlnaHQsbmV3IFJlY3QoZSwwLG4sbyl9Y29uc3QgbD10Lm5vZGVTcGFjaW5nLGg9dC5yb3dTcGFjaW5nLGE9dGhpcy5vcnRob0FuZ2xlKHQpPT09OTA7bGV0IGM9MCx1PTAsZD0wO2ZvcihsZXQgcD0wO3A8cjtwKyspe2lmKHAlMiE9PTB8fHI+MSYmcD09PXItMSljb250aW51ZTtjb25zdCB3PWlbcF0seD13Lnh0LGs9Yz09PTA/MDpoO2lmKGEpe2NvbnN0IGI9dGhpcy5jb21wdXRlQnVzTm9kZVNwYWNpbmcodyktbDt3LlYucyhlLSh4LndpZHRoK2IpLGQrayksbj1NYXRoLm1heChuLHgud2lkdGgrYiksbz1NYXRoLm1heChvLGQrayt4LmhlaWdodCksZCs9ayt4LmhlaWdodH1lbHNle2NvbnN0IGI9dGhpcy5jb21wdXRlQnVzTm9kZVNwYWNpbmcodyktbDt3LlYucyh1K2ssZS0oeC5oZWlnaHQrYikpLG89TWF0aC5tYXgobyx4LmhlaWdodCtiKSxuPU1hdGgubWF4KG4sdStrK3gud2lkdGgpLHUrPWsreC53aWR0aH1jKyt9Yz0wO2NvbnN0IG09dSxnPWQ7YT8odT1lK2wsZD0wKToodT0wLGQ9ZStsKTtmb3IobGV0IHA9MDtwPHI7cCsrKXtpZihwJTI9PT0wKWNvbnRpbnVlO2NvbnN0IHc9aVtwXSx4PXcueHQsaz1jPT09MD8wOmg7aWYoYSl7Y29uc3QgYj10aGlzLmNvbXB1dGVCdXNOb2RlU3BhY2luZyh3KS1sO3cuVi5zKHUrYixkK2spLG49TWF0aC5tYXgobix1K3gud2lkdGgrYiksbz1NYXRoLm1heChvLGQrayt4LmhlaWdodCksZCs9ayt4LmhlaWdodH1lbHNle2NvbnN0IGI9dGhpcy5jb21wdXRlQnVzTm9kZVNwYWNpbmcodyktbDt3LlYucyh1K2ssZCtiKSxuPU1hdGgubWF4KG4sdStrK3gud2lkdGgpLG89TWF0aC5tYXgobyxkK3guaGVpZ2h0K2IpLHUrPWsreC53aWR0aH1jKyt9aWYocj4xJiZyJTI9PT0xKXtjb25zdCBwPWlbci0xXSx3PXAueHQseD10aGlzLmNvbXB1dGVCdXNMYXN0Um93U3BhY2luZyhwLGE/TWF0aC5tYXgoTWF0aC5hYnMoZyksTWF0aC5hYnMoZCkpOk1hdGgubWF4KE1hdGguYWJzKG0pLE1hdGguYWJzKHUpKSk7aWYoYSl7cC5WLnMoZStsLzItcC5mb2N1cy54LXAudXQueCxvK3gpO2NvbnN0IGs9ZStsLzItcC5mb2N1cy54LXAudXQueDtuPU1hdGgubWF4KG4sayt3LndpZHRoKSxrPDAmJihuLT1rKSxvPU1hdGgubWF4KG8sTWF0aC5tYXgoZyxkKSt4K3cuaGVpZ2h0KSxwLlYueDwwJiYoZT10aGlzLkxrKHQscC5WLngsITEsZSxsKSl9ZWxzZXtwLlYucyhuK3gsZStsLzItcC5mb2N1cy55LXAudXQueSksbj1NYXRoLm1heChuLE1hdGgubWF4KG0sdSkreCt3LndpZHRoKTtjb25zdCBrPWUrbC8yLXAuZm9jdXMueS1wLnV0Lnk7bz1NYXRoLm1heChvLGsrdy5oZWlnaHQpLGs8MCYmKG8tPWspLHAuVi55PDAmJihlPXRoaXMuTGsodCxwLlYueSwhMCxlLGwpKX19cmV0dXJuIG5ldyBSZWN0KGUsMCxuLG8pfSREKHQsaSxlLHMsbixvKXtEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwibGF5b3V0QnVzQ2hpbGRyZW5OZWdEaXI6dlwiKTtjb25zdCByPWkubGVuZ3RoO2lmKHI9PT0wKXJldHVybiBuZXcgUmVjdChlLDAsbixvKTtpZihyPT09MSl7Y29uc3QgcD1pWzBdO3JldHVybiBuPXAueHQud2lkdGgsbz1wLnh0LmhlaWdodCxuZXcgUmVjdChlLDAsbixvKX1jb25zdCBsPXQubm9kZVNwYWNpbmcsaD10LnJvd1NwYWNpbmcsYT10aGlzLm9ydGhvQW5nbGUodCk9PT0yNzA7bGV0IGM9MCx1PTAsZD0wO2ZvcihsZXQgcD0wO3A8cjtwKyspe2lmKHAlMiE9PTB8fHI+MSYmcD09PXItMSljb250aW51ZTtjb25zdCB3PWlbcF0seD13Lnh0LGs9Yz09PTA/MDpoO2lmKGEpe2NvbnN0IGI9dGhpcy5jb21wdXRlQnVzTm9kZVNwYWNpbmcodyktbDtkLT1rK3guaGVpZ2h0LHcuVi5zKGUtKHgud2lkdGgrYiksZCksbj1NYXRoLm1heChuLHgud2lkdGgrYiksbz1NYXRoLm1heChvLE1hdGguYWJzKGQpKX1lbHNle2NvbnN0IGI9dGhpcy5jb21wdXRlQnVzTm9kZVNwYWNpbmcodyktbDt1LT1rK3gud2lkdGgsdy5WLnModSxlLSh4LmhlaWdodCtiKSksbz1NYXRoLm1heChvLHguaGVpZ2h0K2IpLG49TWF0aC5tYXgobixNYXRoLmFicyh1KSl9YysrfWM9MDtjb25zdCBtPXUsZz1kO2E/KHU9ZStsLGQ9MCk6KHU9MCxkPWUrbCk7Zm9yKGxldCBwPTA7cDxyO3ArKyl7aWYocCUyPT09MCljb250aW51ZTtjb25zdCB3PWlbcF0seD13Lnh0LGs9Yz09PTA/MDpoO2lmKGEpe2NvbnN0IGI9dGhpcy5jb21wdXRlQnVzTm9kZVNwYWNpbmcodyktbDtkLT1rK3guaGVpZ2h0LHcuVi5zKHUrYixkKSxuPU1hdGgubWF4KG4sdSt4LndpZHRoK2IpLG89TWF0aC5tYXgobyxNYXRoLmFicyhkKSl9ZWxzZXtjb25zdCBiPXRoaXMuY29tcHV0ZUJ1c05vZGVTcGFjaW5nKHcpLWw7dS09ayt4LndpZHRoLHcuVi5zKHUsZCtiKSxvPU1hdGgubWF4KG8sZCt4LmhlaWdodCtiKSxuPU1hdGgubWF4KG4sTWF0aC5hYnModSkpfWMrK31pZihyPjEmJnIlMj09PTEpe2NvbnN0IHA9aVtyLTFdLHc9cC54dCx4PXRoaXMuY29tcHV0ZUJ1c0xhc3RSb3dTcGFjaW5nKHAsYT9NYXRoLm1heChNYXRoLmFicyhnKSxNYXRoLmFicyhkKSk6TWF0aC5tYXgoTWF0aC5hYnMobSksTWF0aC5hYnModSkpKTtpZihhKXtwLlYucyhlK2wvMi1wLmZvY3VzLngtcC51dC54LC1vLXcuaGVpZ2h0LXgpO2NvbnN0IGs9ZStsLzItcC5mb2N1cy54LXAudXQueDtuPU1hdGgubWF4KG4sayt3LndpZHRoKSxrPDAmJihuLT1rKSxvPU1hdGgubWF4KG8sTWF0aC5hYnMoTWF0aC5taW4oZyxkKSkreCt3LmhlaWdodCkscC5WLng8MCYmKGU9dGhpcy5Mayh0LHAuVi54LCExLGUsbCkpfWVsc2V7cC5WLnMoLW4tdy53aWR0aC14LGUrbC8yLXAuZm9jdXMueS1wLnV0LnkpLG49TWF0aC5tYXgobixNYXRoLmFicyhNYXRoLm1pbihtLHUpKSt4K3cud2lkdGgpO2NvbnN0IGs9ZStsLzItcC5mb2N1cy55LXAudXQueTtvPU1hdGgubWF4KG8sayt3LmhlaWdodCksazwwJiYoby09aykscC5WLnk8MCYmKGU9dGhpcy5Mayh0LHAuVi55LCEwLGUsbCkpfX1mb3IobGV0IHA9MDtwPHI7cCsrKXtjb25zdCB3PWlbcF07YT93LlYucyh3LlYueCx3LlYueStvKTp3LlYucyh3LlYueCtuLHcuVi55KX1yZXR1cm4gbmV3IFJlY3QoZSwwLG4sbyl9Y29tcHV0ZUJ1c05vZGVTcGFjaW5nKHQpe3JldHVybiBEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwiZml4UmVsYXRpdmVQb3N0aW9uczpjaGlsZFwiKSx0LnBhcmVudD09PW51bGw/MDp0LnBhcmVudC5ub2RlU3BhY2luZ31jb21wdXRlQnVzTGFzdFJvd1NwYWNpbmcodCxpKXtyZXR1cm4gRGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImZpeFJlbGF0aXZlUG9zdGlvbnM6bGFzdGNoaWxkXCIpLHQucGFyZW50PT09bnVsbD8wOnQucGFyZW50LnJvd1NwYWNpbmd9TGsodCxpLGUscyxuKXtEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwiZml4UmVsYXRpdmVQb3N0aW9uczp2XCIpO2NvbnN0IG89dC5jaGlsZHJlbixyPW8ubGVuZ3RoO2ZvcihsZXQgaD0wO2g8cjtoKyspZT9vW2hdLlYucyhvW2hdLlYueCxvW2hdLlYueS1pKTpvW2hdLlYucyhvW2hdLlYueC1pLG9baF0uVi55KTtjb25zdCBsPW9bci0xXTtyZXR1cm4gTWF0aC5tYXgocyxlP2wudXQueStsLmZvY3VzLnktbi8yOmwudXQueCtsLmZvY3VzLngtbi8yKX1jQyh0LGksZSl7c3dpdGNoKERlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJjYWxjdWxhdGVTdWJ3aWR0aDp2XCIpLHQuYWxpZ25tZW50KXtjYXNlIDIxOmNhc2UgMjA6bGV0IHM9aTtyZXR1cm4gZSt0LndpZHRoPnMmJihzPWUrdC53aWR0aCksZTwwJiYocy09ZSkscztjYXNlIDIyOnJldHVybiB0LndpZHRoPmk/dC53aWR0aDppO2Nhc2UgMjM6cmV0dXJuIHQuZm9jdXMueCoyPmk/dC53aWR0aDppK3Qud2lkdGgtdC5mb2N1cy54KjI7Y2FzZSAyNDpjYXNlIDI1OmNvbnN0IG49TWF0aC5taW4oMCxlKSxvPU1hdGgubWF4KGksZSt0LndpZHRoKTtyZXR1cm4gTWF0aC5tYXgodC53aWR0aCxvLW4pO2Nhc2UgMjY6cmV0dXJuIHQud2lkdGgtdC5mb2N1cy54K3Qubm9kZVNwYWNpbmcvMitpO2Nhc2UgMjc6cmV0dXJuIE1hdGgubWF4KHQud2lkdGgsdC5mb2N1cy54K3Qubm9kZVNwYWNpbmcvMitpKTtkZWZhdWx0OnJldHVybiBpfX11Qyh0LGksZSl7c3dpdGNoKERlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJjYWxjdWxhdGVTdWJoZWlnaHQ6dlwiKSx0LmFsaWdubWVudCl7Y2FzZSAyMTpjYXNlIDIwOmxldCBzPWk7cmV0dXJuIGUrdC5oZWlnaHQ+cyYmKHM9ZSt0LmhlaWdodCksZTwwJiYocy09ZSkscztjYXNlIDIyOnJldHVybiB0LmhlaWdodD5pP3QuaGVpZ2h0Omk7Y2FzZSAyMzpyZXR1cm4gdC5mb2N1cy55KjI+aT90LmhlaWdodDppK3QuaGVpZ2h0LXQuZm9jdXMueSoyO2Nhc2UgMjQ6Y2FzZSAyNTpjb25zdCBuPU1hdGgubWluKDAsZSksbz1NYXRoLm1heChpLGUrdC5oZWlnaHQpO3JldHVybiBNYXRoLm1heCh0LmhlaWdodCxvLW4pO2Nhc2UgMjY6cmV0dXJuIHQuaGVpZ2h0LXQuZm9jdXMueSt0Lm5vZGVTcGFjaW5nLzIraTtjYXNlIDI3OnJldHVybiBNYXRoLm1heCh0LmhlaWdodCx0LmZvY3VzLnkrdC5ub2RlU3BhY2luZy8yK2kpO2RlZmF1bHQ6cmV0dXJuIGl9fWRDKHQsaSxlKXtzd2l0Y2goRGVidWcmJlUuaih0LFRyZWVBbGlnbm1lbnQsXCJUcmVlQWxpZ25tZW50XCIpLHQpe2Nhc2UgMjA6aS89MixlLz0yO2JyZWFrO2Nhc2UgMjE6aS89MixlLz0yO2JyZWFrO2Nhc2UgMjI6aT0wLGU9MDticmVhaztjYXNlIDIzOmJyZWFrO2RlZmF1bHQ6VS5uKFwiVW5oYW5kbGVkIGFsaWdubWVudCB2YWx1ZSBcIit0LnRvU3RyaW5nKCkpfXJldHVybiBuZXcgUG9pbnQoaSxlKX1mZih0LGksZSxzLG4sbyl7RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcInNoaWZ0UmVsUG9zQWxpZ246dlwiKSxEZWJ1ZyYmVS5qKGksVHJlZUFsaWdubWVudCxcIlRyZWVBbGlnbm1lbnRcIik7Y29uc3Qgcj10aGlzLmRDKGksZSxzKTt0aGlzLnJ1KHQsci54LHIueSxuLG8pfXJ1KHQsaSxlLHMsbil7aWYoRGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcInNoaWZ0UmVsUG9zOnZcIiksaT09PTAmJmU9PT0wKXJldHVybjtjb25zdCBvPXQuY2hpbGRyZW47Zm9yKGxldCByPXM7cjw9bjtyKyspe2NvbnN0IGg9b1tyXS5WO2gueCs9aSxoLnkrPWV9fUFrKHQsaSxlKXtEZWJ1ZyYmKFUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcInJlY29yZE1pZFBvaW50czp2XCIpLFUuaShpLFwibnVtYmVyXCIsVHJlZUxheW91dCxcInJlY29yZE1pZFBvaW50czp4XCIpLFUuaShlLFwibnVtYmVyXCIsVHJlZUxheW91dCxcInJlY29yZE1pZFBvaW50czp5XCIpKTtjb25zdCBzPXQucGFyZW50O3N3aXRjaCh0aGlzLnVzKXtjYXNlIDE6e2NvbnN0IG49dC5zb3VyY2VFZGdlcztmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28uZnJvbVZlcnRleD09PXMmJm8ucmVsYXRpdmVQb2ludC5zKGksZSl9YnJlYWt9Y2FzZSAyOntjb25zdCBuPXQuZGVzdGluYXRpb25FZGdlcztmb3IoO24ubmV4dCgpOyl7Y29uc3Qgbz1uLnZhbHVlO28udG9WZXJ0ZXg9PT1zJiZvLnJlbGF0aXZlUG9pbnQucyhpLGUpfWJyZWFrfWRlZmF1bHQ6VS5uKFwiVW5oYW5kbGVkIHBhdGggdmFsdWUgXCIrdGhpcy51cy50b1N0cmluZygpKX19aEUodCl7aWYoRGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImxheW91dFRyZWVCbG9jazp2XCIpLHQuY2hpbGRyZW5Db3VudD09PTApe2NvbnN0IFY9dC5wYXJlbnQ7bGV0IEg9ITEsVz0wLGo9MjE7ViE9PW51bGwmJihXPVYuYW5nbGUsaj1WLmFsaWdubWVudCxIPXRoaXMuaXNCdXNBbGlnbm1lbnQoaikpO2NvbnN0ICQ9dGhpcy5mQyh0KTt0LlYucygwLDApLHQueHQucyh0LndpZHRoLHQuaGVpZ2h0KSx0LnBhcmVudCE9PW51bGwmJnQuY29tbWVudHMhPT1udWxsJiYoKFc9PT0xODB8fFc9PT0yNzApJiYhSHx8JCk/Vz09PTE4MCYmIUh8fChXPT09OTB8fFc9PT0yNzApJiYkP3QudXQucyh0LndpZHRoLXQuZm9jdXMueCoyLDApOnQudXQucygwLHQuaGVpZ2h0LXQuZm9jdXMueSoyKTp0LnV0LnMoMCwwKSx0LklnPW51bGwsdC5PZz1udWxsO3JldHVybn1jb25zdCBpPXRoaXMub3J0aG9BbmdsZSh0KSxlPWk9PT05MHx8aT09PTI3MDtsZXQgcz0wO2NvbnN0IG49dC5jaGlsZHJlbixvPW4ubGVuZ3RoO2ZvcihsZXQgVj0wO1Y8bztWKyspe2NvbnN0IEg9bltWXTtzPU1hdGgubWF4KHMsZT9ILnh0LndpZHRoOkgueHQuaGVpZ2h0KX1jb25zdCByPXQuYWxpZ25tZW50LGw9cj09PTIyLGg9cj09PTIzLGY9dGhpcy5pc0J1c0FsaWdubWVudChyKSxhPU1hdGgubWF4KDAsdC5icmVhZHRoTGltaXQpLGM9dGhpcy5jb21wdXRlTGF5ZXJTcGFjaW5nKHQpLHU9dC5ub2RlU3BhY2luZyxkPXRoaXMuY29tcHV0ZU5vZGVJbmRlbnQodCksbT10LnJvd1NwYWNpbmc7bGV0IGc9MDsobHx8aCkmJihnPU1hdGgubWF4KDAsdC5yb3dJbmRlbnQpKTtjb25zdCBwPXQud2lkdGgsdz10LmhlaWdodDtsZXQgeD0wLGs9MCxiPTAsUz1udWxsLE09bnVsbCxBPTAsQz0wLFA9MCxOPTAsVD0wLEw9MCxEPTAsRj0wLEk9MDtpZihmJiYhdGhpcy5ldyhyKSYmaT4xMzUmJm4ucmV2ZXJzZSgpLHRoaXMuZXcocikpaWYobz4xKWZvcihsZXQgVj0wO1Y8bztWKyspViUyPT09MCYmViE9PW8tMT9GPU1hdGgubWF4KEYsZT9uW1ZdLnh0LndpZHRoOm5bVl0ueHQuaGVpZ2h0KTpWJTIhPT0wJiYoST1NYXRoLm1heChJLGU/bltWXS54dC53aWR0aDpuW1ZdLnh0LmhlaWdodCkpO2Vsc2Ugbz09PTEmJihGPWU/blswXS54dC53aWR0aDpuWzBdLnh0LmhlaWdodCk7aWYoZil7c3dpdGNoKHIpe2Nhc2UgMjQ6bGV0IFY7aTwxMzU/Vj10aGlzLkpEKHQsbixGLEkseCxrKTpWPXRoaXMuJEQodCxuLEYsSSx4LGspLEY9Vi54LHg9Vi53aWR0aCxrPVYuaGVpZ2h0O2JyZWFrO2Nhc2UgMjY6Zm9yKGxldCBIPTA7SDxvO0grKyl7Y29uc3QgVz1uW0hdLGo9Vy54dCwkPUw9PT0wPzA6bTtlPyhXLlYucyhzLWoud2lkdGgsTiskKSx4PU1hdGgubWF4KHgsai53aWR0aCksaz1NYXRoLm1heChrLE4rJCtqLmhlaWdodCksTis9JCtqLmhlaWdodCk6KFcuVi5zKFArJCxzLWouaGVpZ2h0KSx4PU1hdGgubWF4KHgsUCskK2oud2lkdGgpLGs9TWF0aC5tYXgoayxqLmhlaWdodCksUCs9JCtqLndpZHRoKSxMKyt9YnJlYWs7Y2FzZSAyNzpmb3IobGV0IEg9MDtIPG87SCsrKXtjb25zdCBXPW5bSF0saj1XLnh0LCQ9TD09PTA/MDptO2U/KFcuVi5zKHUvMit0LmZvY3VzLngsTiskKSx4PU1hdGgubWF4KHgsai53aWR0aCksaz1NYXRoLm1heChrLE4rJCtqLmhlaWdodCksTis9JCtqLmhlaWdodCk6KFcuVi5zKFArJCx1LzIrdC5mb2N1cy55KSx4PU1hdGgubWF4KHgsUCskK2oud2lkdGgpLGs9TWF0aC5tYXgoayxqLmhlaWdodCksUCs9JCtqLndpZHRoKSxMKyt9YnJlYWt9Uz10aGlzLmRlKDIpLE09dGhpcy5kZSgyKSxlPyhTWzBdLnMoMCwwKSxTWzFdLnMoMCxrKSxNWzBdLnMoeCwwKSxNWzFdLnMoeCxrKSk6KFNbMF0ucygwLDApLFNbMV0ucyh4LDApLE1bMF0ucygwLGspLE1bMV0ucyh4LGspKX1lbHNlIGZvcihsZXQgVj0wO1Y8bztWKyspe2NvbnN0IEg9bltWXSxXPUgueHQ7aWYoZSl7YT4wJiZMPjAmJlArdStXLndpZHRoPmEmJihQPHMmJnRoaXMuZmYodCxyLHMtUCwwLEQsVi0xKSxUKyssTD0wLEQ9VixiPWssUD0wLE49aT4xMzU/LWstbTprK20pLHRoaXMuQWsoSCwwLE4pO2xldCBqPTA7aWYoTD09PTApUz1ILklnLE09SC5PZyxBPVcud2lkdGgsQz1XLmhlaWdodCwoUz09PW51bGx8fE09PT1udWxsfHxpIT09dGhpcy5vcnRob0FuZ2xlKEgpKSYmKFM9dGhpcy5kZSgyKSxNPXRoaXMuZGUoMiksU1swXS5zKDAsMCksU1sxXS5zKDAsQyksTVswXS5zKEEsMCksTVsxXS5zKEEsQykpO2Vsc2V7Y29uc3QgJD1VLmx0KCksWD10aGlzLlpEKHQsSCxTLE0sQSxDLCQpO2o9WC54LFM9JFswXSxNPSRbMV0sQT1YLndpZHRoLEM9WC5oZWlnaHQsVS50dCgkKSxQPFcud2lkdGgmJmo8MCYmKHRoaXMucnUodCwtaiwwLEQsVi0xKSx0aGlzLlRrKFMsLWosMCksdGhpcy5UayhNLC1qLDApLGo9MCl9SC5WLnMoaixOKSx4PU1hdGgubWF4KHgsQSksaz1NYXRoLm1heChrLGIrKFQ9PT0wPzA6bSkrVy5oZWlnaHQpLFA9QX1lbHNle2E+MCYmTD4wJiZOK3UrVy5oZWlnaHQ+YSYmKE48cyYmdGhpcy5mZih0LHIsMCxzLU4sRCxWLTEpLFQrKyxMPTAsRD1WLGI9eCxOPTAsUD1pPjEzNT8teC1tOngrbSksdGhpcy5BayhILFAsMCk7bGV0IGo9MDtpZihMPT09MClTPUguSWcsTT1ILk9nLEE9Vy53aWR0aCxDPVcuaGVpZ2h0LChTPT09bnVsbHx8TT09PW51bGx8fGkhPT10aGlzLm9ydGhvQW5nbGUoSCkpJiYoUz10aGlzLmRlKDIpLE09dGhpcy5kZSgyKSxTWzBdLnMoMCwwKSxTWzFdLnMoQSwwKSxNWzBdLnMoMCxDKSxNWzFdLnMoQSxDKSk7ZWxzZXtjb25zdCAkPVUubHQoKSxYPXRoaXMuWkQodCxILFMsTSxBLEMsJCk7aj1YLngsUz0kWzBdLE09JFsxXSxBPVgud2lkdGgsQz1YLmhlaWdodCxVLnR0KCQpLE48Vy5oZWlnaHQmJmo8MCYmKHRoaXMucnUodCwwLC1qLEQsVi0xKSx0aGlzLlRrKFMsMCwtaiksdGhpcy5UayhNLDAsLWopLGo9MCl9SC5WLnMoUCxqKSxrPU1hdGgubWF4KGssQykseD1NYXRoLm1heCh4LGIrKFQ9PT0wPzA6bSkrVy53aWR0aCksTj1DfUwrK31UPjAmJihlPyhrKz1NYXRoLm1heCgwLGMpLFA8eCYmdGhpcy5mZih0LHIseC1QLDAsRCxvLTEpLGc+MCYmKGh8fHRoaXMucnUodCxnLDAsMCxvLTEpLHgrPWcpKTooeCs9TWF0aC5tYXgoMCxjKSxOPGsmJnRoaXMuZmYodCxyLDAsay1OLEQsby0xKSxnPjAmJihofHx0aGlzLnJ1KHQsMCxnLDAsby0xKSxrKz1nKSkpO2xldCBSPTAsTz0wO3N3aXRjaChyKXtjYXNlIDIwOmU/Uis9eC8yLXQuZm9jdXMueC1kLzI6Tys9ay8yLXQuZm9jdXMueS1kLzI7YnJlYWs7ZGVmYXVsdDpjYXNlIDIxOmlmKFQ+MCllP1IrPXgvMi10LmZvY3VzLngtZC8yOk8rPWsvMi10LmZvY3VzLnktZC8yO2Vsc2V7Y29uc3QgSD1vO2lmKGUpe2NvbnN0IFc9blswXS5WLngrblswXS51dC54LGo9bltILTFdLlYueCtuW0gtMV0udXQueCtuW0gtMV0uZm9jdXMueCoyO1IrPVcrKGotVykvMi10LmZvY3VzLngtZC8yfWVsc2V7Y29uc3QgVz1uWzBdLlYueStuWzBdLnV0Lnksaj1uW0gtMV0uVi55K25bSC0xXS51dC55K25bSC0xXS5mb2N1cy55KjI7Tys9Vysoai1XKS8yLXQuZm9jdXMueS1kLzJ9fWJyZWFrO2Nhc2UgMjI6ZT8oUi09ZCx4Kz1kKTooTy09ZCxrKz1kKTticmVhaztjYXNlIDIzOmU/KFIrPXgtdC53aWR0aCtkLHgrPWQpOihPKz1rLXQuaGVpZ2h0K2Qsays9ZCk7YnJlYWs7Y2FzZSAyNDplP28+MT9SKz1GK3UvMi10LmZvY3VzLng6Uis9blswXS5mb2N1cy54LXQuZm9jdXMueCtuWzBdLnV0Lng6bz4xP08rPUYrdS8yLXQuZm9jdXMueTpPKz1uWzBdLmZvY3VzLnktdC5mb2N1cy55K25bMF0udXQueTticmVhaztjYXNlIDI2OmU/Uis9eCt1LzItdC5mb2N1cy54Ok8rPWsrdS8yLXQuZm9jdXMueTticmVhaztjYXNlIDI3OmJyZWFrO2Nhc2UgMjg6Y29uc3QgVj10aGlzLmN1c3RvbUFsaWdubWVudCh0LFIsTyx4LGspO1I9VlswXSxPPVZbMV0seD1WWzJdLGs9VlszXTticmVha31mb3IobGV0IFY9MDtWPG87VisrKXtjb25zdCBIPW5bVl07ZT9ILlYucyhILlYueCtILnV0LngtUixILlYueSsoaT4xMzU/KGY/LWs6LUgueHQuaGVpZ2h0KStILnV0LnktYzp3K2MrSC51dC55KSk6SC5WLnMoSC5WLngrKGk+MTM1PyhmPy14Oi1ILnh0LndpZHRoKStILnV0LngtYzpwK2MrSC51dC54KSxILlYueStILnV0LnktTyl9bGV0IFk9MCxLPTA7aWYoZillPyh4PXRoaXMuY0ModCx4LFIpLFI8MCYmKFI9MCksaT4xMzUmJihPKz1rK2MpLGsrPXcrYyxyPT09MjcmJihZKz11LzIrdC5mb2N1cy54KSxLKz13K2MpOihpPjEzNSYmKFIrPXgrYykseCs9cCtjLGs9dGhpcy51Qyh0LGssTyksTzwwJiYoTz0wKSxyPT09MjcmJihLKz11LzIrdC5mb2N1cy55KSxZKz1wK2MpO2Vsc2UgaWYoZSl7aWYodC5jb21tZW50cz09PW51bGwpe2lmKHA+eCl7Y29uc3QgVj10aGlzLmRDKHIscC14LDApO1k9Vi54LEs9Vi55LHg9cCxSPTB9fWVsc2UgeD10aGlzLmNDKHQseCxSKTtSPDAmJihZLT1SLFI9MCksaT4xMzUmJihPKz1rK2MpLGs9TWF0aC5tYXgoTWF0aC5tYXgoayx3KSxrK3crYyksSys9dytjfWVsc2V7aWYoaT4xMzUmJihSKz14K2MpLHg9TWF0aC5tYXgoTWF0aC5tYXgoeCxwKSx4K3ArYyksdC5jb21tZW50cz09PW51bGwpe2lmKHc+ayl7Y29uc3QgVj10aGlzLmRDKHIsMCx3LWspO1k9Vi54LEs9Vi55LGs9dyxPPTB9fWVsc2Ugaz10aGlzLnVDKHQsayxPKTtPPDAmJihLLT1PLE89MCksWSs9cCtjfWxldCBCLHo7aWYoVD4wKUI9dGhpcy5kZSg0KSx6PXRoaXMuZGUoNCksZT8oQlsyXS5zKDAsdytjKSxCWzNdLnMoQlsyXS54LGspLHpbMl0ucyh4LEJbMl0ueSkselszXS5zKHpbMl0ueCxCWzNdLnkpKTooQlsyXS5zKHArYywwKSxCWzNdLnMoeCxCWzJdLnkpLHpbMl0ucyhCWzJdLngsaykselszXS5zKEJbM10ueCx6WzJdLnkpKTtlbHNle0I9dGhpcy5kZShTLmxlbmd0aCsyKSx6PXRoaXMuZGUoTS5sZW5ndGgrMik7Zm9yKGxldCBWPTA7VjxTLmxlbmd0aDtWKyspe2NvbnN0IEg9U1tWXTtCW1YrMl0ucyhILngrWSxILnkrSyl9Zm9yKGxldCBWPTA7VjxNLmxlbmd0aDtWKyspe2NvbnN0IEg9TVtWXTt6W1YrMl0ucyhILngrWSxILnkrSyl9fWU/KEJbMF0ucyhSLDApLEJbMV0ucyhCWzBdLngsdyksQlsyXS55PEJbMV0ueSYmKEJbMl0ueD5CWzBdLng/QlsyXS5jKEJbMV0pOkJbMV0uYyhCWzJdKSksQlszXS55PEJbMl0ueSYmKEJbM10ueD5CWzBdLng/QlszXS5jKEJbMl0pOkJbMl0uYyhCWzNdKSkselswXS5zKFIrcCwwKSx6WzFdLnMoelswXS54LHcpLHpbMl0ueTx6WzFdLnkmJih6WzJdLng8elswXS54P3pbMl0uYyh6WzFdKTp6WzFdLmMoelsyXSkpLHpbM10ueTx6WzJdLnkmJih6WzNdLng8elswXS54P3pbM10uYyh6WzJdKTp6WzJdLmMoelszXSkpLEJbMl0ueS09Yy8yLHpbMl0ueS09Yy8yKTooQlswXS5zKDAsTyksQlsxXS5zKHAsQlswXS55KSxCWzJdLng8QlsxXS54JiYoQlsyXS55PkJbMF0ueT9CWzJdLmMoQlsxXSk6QlsxXS5jKEJbMl0pKSxCWzNdLng8QlsyXS54JiYoQlszXS55PkJbMF0ueT9CWzNdLmMoQlsyXSk6QlsyXS5jKEJbM10pKSx6WzBdLnMoMCxPK3cpLHpbMV0ucyhwLHpbMF0ueSkselsyXS54PHpbMV0ueCYmKHpbMl0ueTx6WzBdLnk/elsyXS5jKHpbMV0pOnpbMV0uYyh6WzJdKSkselszXS54PHpbMl0ueCYmKHpbM10ueTx6WzBdLnk/elszXS5jKHpbMl0pOnpbMl0uYyh6WzNdKSksQlsyXS54LT1jLzIselsyXS54LT1jLzIpLHRoaXMub24oUyksdGhpcy5vbihNKSx0LklnPUIsdC5PZz16LHQudXQucyhSLE8pLHQueHQucyh4LGspfVRrKHQsaSxlKXtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKyl7Y29uc3Qgbj10W3NdO24ueCs9aSxuLnkrPWV9fVpEKHQsaSxlLHMsbixvLHIpe0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJtZXJnZUZyaW5nZXM6cGFyZW50XCIpLERlYnVnJiZVLmUoaSxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJtZXJnZUZyaW5nZXM6Y2hpbGRcIik7Y29uc3QgbD10aGlzLm9ydGhvQW5nbGUodCksaD1sPT09OTB8fGw9PT0yNzAsZj10Lm5vZGVTcGFjaW5nLGE9ZSxjPXMsdT1uLGQ9bztsZXQgbT1pLklnLGc9aS5PZztjb25zdCBwPWkueHQsdz1oP01hdGgubWF4KGQscC5oZWlnaHQpOk1hdGgubWF4KHUscC53aWR0aCk7aWYoKG09PT1udWxsfHxsIT09dGhpcy5vcnRob0FuZ2xlKGkpKSYmKG09dGhpcy5kZSgyKSxnPXRoaXMuZGUoMiksaD8obVswXS5zKDAsMCksbVsxXS5zKDAscC5oZWlnaHQpLGdbMF0ucyhwLndpZHRoLDApLGdbMV0ucyhnWzBdLngsbVsxXS55KSk6KG1bMF0ucygwLDApLG1bMV0ucyhwLndpZHRoLDApLGdbMF0ucygwLHAuaGVpZ2h0KSxnWzFdLnMobVsxXS54LGdbMF0ueSkpKSxoKXtjb25zdCB4PXU7bGV0IGs9eC10aGlzLmFFKGMsbSx4KTtyZXR1cm4gays9ZixlPXRoaXMuZkUoYSxtLGspLHM9dGhpcy5jRShjLGcsayksbj1NYXRoLm1heCgwLGspK3Aud2lkdGgsbz13LHRoaXMub24oYSksdGhpcy5vbihtKSx0aGlzLm9uKGMpLHRoaXMub24oZyksclswXT1lLHJbMV09cyxuZXcgUmVjdChrLDAsbixvKX1lbHNle2NvbnN0IHg9ZDtsZXQgaz14LXRoaXMudUUoYyxtLHgpO3JldHVybiBrKz1mLGU9dGhpcy5kRShhLG0saykscz10aGlzLmdFKGMsZyxrKSxuPXcsbz1NYXRoLm1heCgwLGspK3AuaGVpZ2h0LHRoaXMub24oYSksdGhpcy5vbihtKSx0aGlzLm9uKGMpLHRoaXMub24oZyksclswXT1lLHJbMV09cyxuZXcgUmVjdChrLDAsbixvKX19ZEUodCxpLGUpe2lmKHQ9PT1udWxsfHx0Lmxlbmd0aDwyfHxpPT09bnVsbHx8aS5sZW5ndGg8MilyZXR1cm4gbnVsbDtjb25zdCBzPXRoaXMuZGUodC5sZW5ndGgraS5sZW5ndGgpO2xldCBuPTAsbz0wLHI9MDtmb3IoO288aS5sZW5ndGgmJmlbb10ueDx0WzBdLng7KXtjb25zdCBmPWlbbysrXTtzW3IrK10ucyhmLngsZi55K2UpfWZvcig7bjx0Lmxlbmd0aDspe2NvbnN0IGY9dFtuKytdO3NbcisrXS5zKGYueCxmLnkpfWNvbnN0IGw9dFt0Lmxlbmd0aC0xXS54O2Zvcig7bzxpLmxlbmd0aCYmaVtvXS54PD1sOylvKys7Zm9yKDtvPGkubGVuZ3RoJiZpW29dLng+bDspe2NvbnN0IGY9aVtvKytdO3NbcisrXS5zKGYueCxmLnkrZSl9Y29uc3QgaD10aGlzLmRlKHIpO2ZvcihuPTA7bjxyO24rKyloW25dLmMoc1tuXSk7cmV0dXJuIHRoaXMub24ocyksaH1mRSh0LGksZSl7aWYodD09PW51bGx8fHQubGVuZ3RoPDJ8fGk9PT1udWxsfHxpLmxlbmd0aDwyKXJldHVybiBudWxsO2NvbnN0IHM9dGhpcy5kZSh0Lmxlbmd0aCtpLmxlbmd0aCk7bGV0IG49MCxvPTAscj0wO2Zvcig7bzxpLmxlbmd0aCYmaVtvXS55PHRbMF0ueTspe2NvbnN0IGY9aVtvKytdO3NbcisrXS5zKGYueCtlLGYueSl9Zm9yKDtuPHQubGVuZ3RoOyl7Y29uc3QgZj10W24rK107c1tyKytdLnMoZi54LGYueSl9Y29uc3QgbD10W3QubGVuZ3RoLTFdLnk7Zm9yKDtvPGkubGVuZ3RoJiZpW29dLnk8PWw7KW8rKztmb3IoO288aS5sZW5ndGgmJmlbb10ueT5sOyl7Y29uc3QgZj1pW28rK107c1tyKytdLnMoZi54K2UsZi55KX1jb25zdCBoPXRoaXMuZGUocik7Zm9yKG49MDtuPHI7bisrKWhbbl0uYyhzW25dKTtyZXR1cm4gdGhpcy5vbihzKSxofWdFKHQsaSxlKXtpZih0PT09bnVsbHx8dC5sZW5ndGg8Mnx8aT09PW51bGx8fGkubGVuZ3RoPDIpcmV0dXJuIG51bGw7Y29uc3Qgcz10aGlzLmRlKHQubGVuZ3RoK2kubGVuZ3RoKTtsZXQgbj0wLG89MCxyPTA7Zm9yKDtuPHQubGVuZ3RoJiZ0W25dLng8aVswXS54Oyl7Y29uc3QgZj10W24rK107c1tyKytdLnMoZi54LGYueSl9Zm9yKDtvPGkubGVuZ3RoOyl7Y29uc3QgZj1pW28rK107c1tyKytdLnMoZi54LGYueStlKX1jb25zdCBsPWlbaS5sZW5ndGgtMV0ueDtmb3IoO248dC5sZW5ndGgmJnRbbl0ueDw9bDspbisrO2Zvcig7bjx0Lmxlbmd0aCYmdFtuXS54Pmw7KXtjb25zdCBmPXRbbisrXTtzW3IrK10ucyhmLngsZi55KX1jb25zdCBoPXRoaXMuZGUocik7Zm9yKG49MDtuPHI7bisrKWhbbl0uYyhzW25dKTtyZXR1cm4gdGhpcy5vbihzKSxofWNFKHQsaSxlKXtpZih0PT09bnVsbHx8dC5sZW5ndGg8Mnx8aT09PW51bGx8fGkubGVuZ3RoPDIpcmV0dXJuIG51bGw7Y29uc3Qgcz10aGlzLmRlKHQubGVuZ3RoK2kubGVuZ3RoKTtsZXQgbj0wLG89MCxyPTA7Zm9yKDtuPHQubGVuZ3RoJiZ0W25dLnk8aVswXS55Oyl7Y29uc3QgZj10W24rK107c1tyKytdLnMoZi54LGYueSl9Zm9yKDtvPGkubGVuZ3RoOyl7Y29uc3QgZj1pW28rK107c1tyKytdLnMoZi54K2UsZi55KX1jb25zdCBsPWlbaS5sZW5ndGgtMV0ueTtmb3IoO248dC5sZW5ndGgmJnRbbl0ueTw9bDspbisrO2Zvcig7bjx0Lmxlbmd0aCYmdFtuXS55Pmw7KXtjb25zdCBmPXRbbisrXTtzW3IrK10ucyhmLngsZi55KX1jb25zdCBoPXRoaXMuZGUocik7Zm9yKG49MDtuPHI7bisrKWhbbl0uYyhzW25dKTtyZXR1cm4gdGhpcy5vbihzKSxofXVFKHQsaSxlKXtsZXQgcz05OTk5OTk5O2lmKHQ9PT1udWxsfHx0Lmxlbmd0aDwyfHxpPT09bnVsbHx8aS5sZW5ndGg8MilyZXR1cm4gcztsZXQgbj0wLG89MDtmb3IoO248dC5sZW5ndGgmJm88aS5sZW5ndGg7KXtjb25zdCByPXRbbl0sbD1pW29dLGg9bC54O2xldCBmPWwueTtmKz1lO2xldCBhPXI7bisxPHQubGVuZ3RoJiYoYT10W24rMV0pO2xldCBjPWwsdT1jLngsZD1jLnk7bysxPGkubGVuZ3RoJiYoYz1pW28rMV0sdT1jLngsZD1jLnksZCs9ZSk7bGV0IG09cztyLng9PT1oP209Zi1yLnk6ci54PmgmJnIueDx1P209Zisoci54LWgpLyh1LWgpKihkLWYpLXIueTpoPnIueCYmaDxhLngmJihtPWYtKHIueSsoaC1yLngpLyhhLngtci54KSooYS55LXIueSkpKSxtPHMmJihzPW0pLGEueDw9ci54P24rKzp1PD1oP28rKzooYS54PD11JiZuKyssdTw9YS54JiZvKyspfXJldHVybiBzfWFFKHQsaSxlKXtsZXQgcz05OTk5OTk5O2lmKHQ9PT1udWxsfHx0Lmxlbmd0aDwyfHxpPT09bnVsbHx8aS5sZW5ndGg8MilyZXR1cm4gcztsZXQgbj0wLG89MDtmb3IoO248dC5sZW5ndGgmJm88aS5sZW5ndGg7KXtjb25zdCByPXRbbl0sbD1pW29dO2xldCBoPWwueDtjb25zdCBmPWwueTtoKz1lO2xldCBhPXI7bisxPHQubGVuZ3RoJiYoYT10W24rMV0pO2xldCBjPWwsdT1jLngsZD1jLnk7bysxPGkubGVuZ3RoJiYoYz1pW28rMV0sdT1jLngsZD1jLnksdSs9ZSk7bGV0IG09cztyLnk9PT1mP209aC1yLng6ci55PmYmJnIueTxkP209aCsoci55LWYpLyhkLWYpKih1LWgpLXIueDpmPnIueSYmZjxhLnkmJihtPWgtKHIueCsoZi1yLnkpLyhhLnktci55KSooYS54LXIueCkpKSxtPHMmJihzPW0pLGEueTw9ci55P24rKzpkPD1mP28rKzooYS55PD1kJiZuKyssZDw9YS55JiZvKyspfXJldHVybiBzfWRlKHQpe2NvbnN0IGk9dGhpcy5Da1t0XTtpZihpIT09dm9pZCAwKXtjb25zdCBzPWkucG9wKCk7aWYocyE9PXZvaWQgMClyZXR1cm4gc31jb25zdCBlPVtdO2ZvcihsZXQgcz0wO3M8dDtzKyspZVtzXT1uZXcgUG9pbnQ7cmV0dXJuIGV9b24odCl7aWYoIXQpcmV0dXJuO2NvbnN0IGk9dC5sZW5ndGg7bGV0IGU9dGhpcy5Da1tpXTtlPT09dm9pZCAwJiYoZT1bXSx0aGlzLkNrW2ldPWUpLGUucHVzaCh0KX1hcnJhbmdlVHJlZXMoKXtpZih0aGlzLldpPT09NTIpe2NvbnN0IHQ9dGhpcy5CaS5pdGVyYXRvcjtmb3IoO3QubmV4dCgpOyl7Y29uc3QgaT10LnZhbHVlO2lmKCEoaSBpbnN0YW5jZW9mIFRyZWVWZXJ0ZXgpKWNvbnRpbnVlO2NvbnN0IGU9aS5ub2RlO2lmKGU9PT1udWxsKWNvbnRpbnVlO2NvbnN0IHM9ZS5wb3NpdGlvbjtsZXQgbj1zLngsbz1zLnk7aXNGaW5pdGUobil8fChuPTApLGlzRmluaXRlKG8pfHwobz0wKSx0aGlzLmdDKGksbixvKX19ZWxzZXtjb25zdCB0PVtdLGk9dGhpcy5CaS5pdGVyYXRvcjtmb3IoO2kubmV4dCgpOyl7Y29uc3Qgbz1pLnZhbHVlO28gaW5zdGFuY2VvZiBUcmVlVmVydGV4JiZ0LnB1c2gobyl9c3dpdGNoKHRoaXMuc29ydGluZyl7ZGVmYXVsdDpjYXNlIDEwOmJyZWFrO2Nhc2UgMTE6dC5yZXZlcnNlKCk7YnJlYWs7Y2FzZSAxMjp0LnNvcnQodGhpcy5jb21wYXJlcik7YnJlYWs7Y2FzZSAxMzp0LnNvcnQodGhpcy5jb21wYXJlciksdC5yZXZlcnNlKCk7YnJlYWt9Y29uc3QgZT10aGlzLmFycmFuZ2VtZW50T3JpZ2luO2xldCBzPWUueCxuPWUueTtmb3IobGV0IG89MDtvPHQubGVuZ3RoO28rKyl7Y29uc3Qgcj10W29dO3N3aXRjaCh0aGlzLmdDKHIscytyLnV0LngsbityLnV0LnkpLHRoaXMuV2kpe2Nhc2UgNTA6bis9ci54dC5oZWlnaHQrdGhpcy5Ucy5oZWlnaHQ7YnJlYWs7ZGVmYXVsdDpjYXNlIDUxOnMrPXIueHQud2lkdGgrdGhpcy5Ucy53aWR0aDticmVha319fX1nQyh0LGksZSl7aWYodD09PW51bGwpcmV0dXJuO0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJhc3NpZ25BYnNvbHV0ZVBvc2l0aW9uczp2XCIpLHQueD1pLHQueT1lO2NvbnN0IHM9dC5jaGlsZHJlbixuPXMubGVuZ3RoO2ZvcihsZXQgbz0wO288bjtvKyspe2NvbnN0IHI9c1tvXTt0aGlzLmdDKHIsaStyLlYueCxlK3IuVi55KX19Y29tbWl0TGF5b3V0KCl7dGhpcy5qeSgpLHRoaXMuY29tbWl0Tm9kZXMoKSx0aGlzLmxDKCksdGhpcy5pc1JvdXRpbmcmJnRoaXMuY29tbWl0TGlua3MoKX1jb21taXROb2Rlcygpe2NvbnN0IHQ9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXQudmFsdWUuY29tbWl0KCk7Zm9yKHQucmVzZXQoKTt0Lm5leHQoKTspe2NvbnN0IGk9dC52YWx1ZTt0aGlzLmxheW91dENvbW1lbnRzKGkpfX1sQygpe2lmKHRoaXMubGF5ZXJTdHlsZSE9PTYyKXJldHVybjtjb25zdCB0PXRoaXMuaEMsaT1bXTtsZXQgZT1udWxsO2NvbnN0IHM9dGhpcy5uZXR3b3JrLnZlcnRleGVzLml0ZXJhdG9yO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBoPXMudmFsdWU7ZT09PW51bGw/ZT1oLmJvdW5kcy5jb3B5KCk6ZS51bmlvblJlY3QoaC5ib3VuZHMpO2xldCBmPWlbaC5sZXZlbF07Zj09PXZvaWQgMD9mPXRoaXMuY29tcHV0ZUxheWVyU3BhY2luZyhoKTpmPU1hdGgubWF4KGYsdGhpcy5jb21wdXRlTGF5ZXJTcGFjaW5nKGgpKSxpW2gubGV2ZWxdPWZ9Zm9yKGxldCBoPTA7aDxpLmxlbmd0aDtoKyspaVtoXT09PXZvaWQgMCYmKGlbaF09MCk7bGV0IG47dGhpcy5hbmdsZT09PTkwfHx0aGlzLmFuZ2xlPT09MjcwPyhlLmluZmxhdGUodGhpcy5ub2RlU3BhY2luZy8yLHRoaXMubGF5ZXJTcGFjaW5nKSxuPW5ldyBQb2ludCgtdGhpcy5ub2RlU3BhY2luZy8yLC10aGlzLmxheWVyU3BhY2luZy8yKSk6KGUuaW5mbGF0ZSh0aGlzLmxheWVyU3BhY2luZyx0aGlzLm5vZGVTcGFjaW5nLzIpLG49bmV3IFBvaW50KC10aGlzLmxheWVyU3BhY2luZy8yLC10aGlzLm5vZGVTcGFjaW5nLzIpKTtjb25zdCBvPVtdLHI9dGhpcy5hbmdsZT09PTkwfHx0aGlzLmFuZ2xlPT09MjcwP2Uud2lkdGg6ZS5oZWlnaHQ7bGV0IGw9MDtpZih0aGlzLmFuZ2xlPT09MTgwfHx0aGlzLmFuZ2xlPT09MjcwKWZvcihsZXQgaD0wO2g8dC5sZW5ndGg7aCsrKWwrPXRbaF0raVtoXTtmb3IobGV0IGg9MDtoPHQubGVuZ3RoO2grKyl7Y29uc3QgZj10W2hdK2lbaF07dGhpcy5hbmdsZT09PTI3MD8obC09ZixvLnB1c2gobmV3IFJlY3QoMCxsLHIsZikpKTp0aGlzLmFuZ2xlPT09OTA/KG8ucHVzaChuZXcgUmVjdCgwLGwscixmKSksbCs9Zik6dGhpcy5hbmdsZT09PTE4MD8obC09ZixvLnB1c2gobmV3IFJlY3QobCwwLGYscikpKTooby5wdXNoKG5ldyBSZWN0KGwsMCxmLHIpKSxsKz1mKX10aGlzLmNvbW1pdExheWVycyhvLG4pfWNvbW1pdExheWVycyh0LGkpe31jb21taXRMaW5rcygpe2NvbnN0IHQ9dGhpcy5uZXR3b3JrLmVkZ2VzLml0ZXJhdG9yO2Zvcig7dC5uZXh0KCk7KXQudmFsdWUuY29tbWl0KCl9ankoKXtjb25zdCB0PXRoaXMuQmkuaXRlcmF0b3I7Zm9yKDt0Lm5leHQoKTspe2NvbnN0IGk9dC52YWx1ZTtpIGluc3RhbmNlb2YgVHJlZVZlcnRleCYmdGhpcy5RRChpKX19UUQodCl7aWYodD09PW51bGwpcmV0dXJuO0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJzZXRQb3J0U3BvdHNUcmVlOnZcIiksdGhpcy5zZXRQb3J0U3BvdHModCk7Y29uc3QgaT10LmNoaWxkcmVuLGU9aS5sZW5ndGg7Zm9yKGxldCBzPTA7czxlO3MrKyl7Y29uc3Qgbj1pW3NdO3RoaXMuUUQobil9fXNldFBvcnRTcG90cyh0KXtEZWJ1ZyYmVS5lKHQsVHJlZVZlcnRleCxUcmVlTGF5b3V0LFwic2V0UG9ydFNwb3RzOnZcIik7Y29uc3QgaT10LmFsaWdubWVudDtpZih0aGlzLmlzQnVzQWxpZ25tZW50KGkpKXRoaXMubUUodCxpKTtlbHNle2NvbnN0IGU9dGhpcy5vcnRob0FuZ2xlKHQpO2lmKHRoaXMudXM9PT0xKXtjb25zdCBzPXQuZGVzdGluYXRpb25FZGdlcztmb3IoO3MubmV4dCgpOyl7Y29uc3Qgbz1zLnZhbHVlLmxpbms7aWYobyE9PW51bGwpe2lmKHQuc2V0c1BvcnRTcG90KWlmKHQucG9ydFNwb3QuaXNEZWZhdWx0KCkpc3dpdGNoKGUpe2Nhc2UgMDpvLmZyb21TcG90PVNwb3QuTWlkZGxlUmlnaHQ7YnJlYWs7Y2FzZSA5MDpvLmZyb21TcG90PVNwb3QuTWlkZGxlQm90dG9tO2JyZWFrO2Nhc2UgMTgwOm8uZnJvbVNwb3Q9U3BvdC5NaWRkbGVMZWZ0O2JyZWFrO2RlZmF1bHQ6by5mcm9tU3BvdD1TcG90Lk1pZGRsZVRvcDticmVha31lbHNlIG8uZnJvbVNwb3Q9dC5wb3J0U3BvdDtpZih0LnNldHNDaGlsZFBvcnRTcG90KWlmKHQuY2hpbGRQb3J0U3BvdC5pc0RlZmF1bHQoKSlzd2l0Y2goZSl7Y2FzZSAwOm8udG9TcG90PVNwb3QuTWlkZGxlTGVmdDticmVhaztjYXNlIDkwOm8udG9TcG90PVNwb3QuTWlkZGxlVG9wO2JyZWFrO2Nhc2UgMTgwOm8udG9TcG90PVNwb3QuTWlkZGxlUmlnaHQ7YnJlYWs7ZGVmYXVsdDpvLnRvU3BvdD1TcG90Lk1pZGRsZUJvdHRvbTticmVha31lbHNlIG8udG9TcG90PXQuY2hpbGRQb3J0U3BvdH19fWVsc2V7Y29uc3Qgcz10LnNvdXJjZUVkZ2VzO2Zvcig7cy5uZXh0KCk7KXtjb25zdCBvPXMudmFsdWUubGluaztpZihvIT09bnVsbCl7aWYodC5zZXRzUG9ydFNwb3QpaWYodC5wb3J0U3BvdC5pc0RlZmF1bHQoKSlzd2l0Y2goZSl7Y2FzZSAwOm8udG9TcG90PVNwb3QuTWlkZGxlUmlnaHQ7YnJlYWs7Y2FzZSA5MDpvLnRvU3BvdD1TcG90Lk1pZGRsZUJvdHRvbTticmVhaztjYXNlIDE4MDpvLnRvU3BvdD1TcG90Lk1pZGRsZUxlZnQ7YnJlYWs7ZGVmYXVsdDpvLnRvU3BvdD1TcG90Lk1pZGRsZVRvcDticmVha31lbHNlIG8udG9TcG90PXQucG9ydFNwb3Q7aWYodC5zZXRzQ2hpbGRQb3J0U3BvdClpZih0LmNoaWxkUG9ydFNwb3QuaXNEZWZhdWx0KCkpc3dpdGNoKGUpe2Nhc2UgMDpvLmZyb21TcG90PVNwb3QuTWlkZGxlTGVmdDticmVhaztjYXNlIDkwOm8uZnJvbVNwb3Q9U3BvdC5NaWRkbGVUb3A7YnJlYWs7Y2FzZSAxODA6by5mcm9tU3BvdD1TcG90Lk1pZGRsZVJpZ2h0O2JyZWFrO2RlZmF1bHQ6by5mcm9tU3BvdD1TcG90Lk1pZGRsZUJvdHRvbTticmVha31lbHNlIG8uZnJvbVNwb3Q9dC5jaGlsZFBvcnRTcG90fX19fX1tRSh0LGkpe0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJzZXRQb3J0U3BvdHNCdXM6dlwiKSxEZWJ1ZyYmVS5qKGksVHJlZUFsaWdubWVudCxcIlRyZWVBbGlnbm1lbnRcIik7Y29uc3QgZT10aGlzLnVzPT09MSxzPXRoaXMub3J0aG9BbmdsZSh0KTtsZXQgbjtzd2l0Y2gocyl7Y2FzZSAwOm49U3BvdC5NaWRkbGVSaWdodDticmVhaztjYXNlIDkwOm49U3BvdC5NaWRkbGVCb3R0b207YnJlYWs7Y2FzZSAxODA6bj1TcG90Lk1pZGRsZUxlZnQ7YnJlYWs7ZGVmYXVsdDpuPVNwb3QuTWlkZGxlVG9wO2JyZWFrfWNvbnN0IG89dC5jaGlsZHJlbixyPW8ubGVuZ3RoO3N3aXRjaChpKXtjYXNlIDI0OmNhc2UgMjU6e2ZvcihsZXQgbD0wO2w8cjtsKyspe2NvbnN0IGg9b1tsXSxmPShlP2guc291cmNlRWRnZXM6aC5kZXN0aW5hdGlvbkVkZ2VzKS5maXJzdCgpO2lmKGY9PT1udWxsKWNvbnRpbnVlO2NvbnN0IGE9Zi5saW5rO2lmKGEhPT1udWxsKXtsZXQgYz1zPT09OTB8fHM9PT0yNzA/U3BvdC5NaWRkbGVMZWZ0OlNwb3QuTWlkZGxlVG9wO2lmKHI9PT0xfHxsPT09ci0xJiZyJTI9PT0xKXN3aXRjaChzKXtjYXNlIDA6Yz1TcG90Lk1pZGRsZUxlZnQ7YnJlYWs7Y2FzZSA5MDpjPVNwb3QuTWlkZGxlVG9wO2JyZWFrO2Nhc2UgMTgwOmM9U3BvdC5NaWRkbGVSaWdodDticmVhaztkZWZhdWx0OmM9U3BvdC5NaWRkbGVCb3R0b207YnJlYWt9ZWxzZSBsJTI9PT0wJiYoYz1zPT09OTB8fHM9PT0yNzA/U3BvdC5NaWRkbGVSaWdodDpTcG90Lk1pZGRsZUJvdHRvbSk7ZT8odC5zZXRzUG9ydFNwb3QmJihhLmZyb21TcG90PW4pLHQuc2V0c0NoaWxkUG9ydFNwb3QmJihhLnRvU3BvdD1jKSk6KHQuc2V0c1BvcnRTcG90JiYoYS5mcm9tU3BvdD1jKSx0LnNldHNDaGlsZFBvcnRTcG90JiYoYS50b1Nwb3Q9bikpfX1icmVha31jYXNlIDI2Ontjb25zdCBsPXM9PT05MHx8cz09PTI3MD9TcG90Lk1pZGRsZVJpZ2h0OlNwb3QuTWlkZGxlQm90dG9tLGg9ZT90LmRlc3RpbmF0aW9uRWRnZXM6dC5zb3VyY2VFZGdlcztmb3IoO2gubmV4dCgpOyl7Y29uc3QgYT1oLnZhbHVlLmxpbms7YSE9PW51bGwmJihlPyh0LnNldHNQb3J0U3BvdCYmKGEuZnJvbVNwb3Q9biksdC5zZXRzQ2hpbGRQb3J0U3BvdCYmKGEudG9TcG90PWwpKToodC5zZXRzUG9ydFNwb3QmJihhLmZyb21TcG90PWwpLHQuc2V0c0NoaWxkUG9ydFNwb3QmJihhLnRvU3BvdD1uKSkpfWJyZWFrfWNhc2UgMjc6e2NvbnN0IGw9cz09PTkwfHxzPT09MjcwP1Nwb3QuTWlkZGxlTGVmdDpTcG90Lk1pZGRsZVRvcCxoPWU/dC5kZXN0aW5hdGlvbkVkZ2VzOnQuc291cmNlRWRnZXM7Zm9yKDtoLm5leHQoKTspe2NvbnN0IGE9aC52YWx1ZS5saW5rO2EhPT1udWxsJiYoZT8odC5zZXRzUG9ydFNwb3QmJihhLmZyb21TcG90PW4pLHQuc2V0c0NoaWxkUG9ydFNwb3QmJihhLnRvU3BvdD1sKSk6KHQuc2V0c1BvcnRTcG90JiYoYS5mcm9tU3BvdD1sKSx0LnNldHNDaGlsZFBvcnRTcG90JiYoYS50b1Nwb3Q9bikpKX1icmVha319fW9ydGhvQW5nbGUodCl7Y29uc3QgaT10LmFuZ2xlO3JldHVybiBpPD00NT8wOmk8PTEzNT85MDppPD0yMjU/MTgwOmk8PTMxNT8yNzA6MH1jb21wdXRlTGF5ZXJTcGFjaW5nKHQpe0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVMYXlvdXQsXCJjb21wdXRlTGF5ZXJTcGFjaW5nOnZcIik7Y29uc3QgaT10aGlzLm9ydGhvQW5nbGUodCksZT1pPT09OTB8fGk9PT0yNzA7bGV0IHM9dC5sYXllclNwYWNpbmc7aWYodC5sYXllclNwYWNpbmdQYXJlbnRPdmVybGFwPjApe2NvbnN0IG49TWF0aC5taW4oMSx0LmxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXApO3MtPWU/dC5oZWlnaHQqbjp0LndpZHRoKm59cmV0dXJuIHM8KGU/LXQuaGVpZ2h0Oi10LndpZHRoKSYmKHM9ZT8tdC5oZWlnaHQ6LXQud2lkdGgpLHN9Y29tcHV0ZU5vZGVJbmRlbnQodCl7RGVidWcmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImNvbXB1dGVOb2RlSW5kZW50OnZcIik7Y29uc3QgaT10aGlzLm9ydGhvQW5nbGUodCksZT1pPT09OTB8fGk9PT0yNzA7bGV0IHM9dC5ub2RlSW5kZW50O2lmKHQubm9kZUluZGVudFBhc3RQYXJlbnQ+MCl7Y29uc3Qgbj1NYXRoLm1pbigxLHQubm9kZUluZGVudFBhc3RQYXJlbnQpO3MrPWU/dC53aWR0aCpuOnQuaGVpZ2h0Km59cmV0dXJuIHM9TWF0aC5tYXgoMCxzKSxzfWdldCByb290cygpe3JldHVybiB0aGlzLkJpfXNldCByb290cyh0KXt0aGlzLkJpIT09dCYmKFUuZSh0LEdTZXQsVHJlZUxheW91dCxcInJvb3RzXCIpLHRoaXMuQmk9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IHBhdGgoKXtyZXR1cm4gdGhpcy5SaX1zZXQgcGF0aCh0KXt0aGlzLlJpIT09dCYmKFUuaih0LFRyZWVQYXRoLFwiVHJlZVBhdGhcIiksdGhpcy5SaT10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgdHJlZVN0eWxlKCl7cmV0dXJuIHRoaXMub3V9c2V0IHRyZWVTdHlsZSh0KXt0aGlzLm91IT09dCYmKFUuaih0LFRyZWVTdHlsZSxcIlRyZWVTdHlsZVwiKSwodD09PTQwfHx0PT09NDJ8fHQ9PT00MXx8dD09PTQzKSYmKHRoaXMub3U9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBsYXllclN0eWxlKCl7cmV0dXJuIHRoaXMuUmd9c2V0IGxheWVyU3R5bGUodCl7dGhpcy5SZyE9PXQmJihVLmoodCxUcmVlTGF5ZXJTdHlsZSxcIlRyZWVMYXllclN0eWxlXCIpLCh0PT09NjB8fHQ9PT02MXx8dD09PTYyKSYmKHRoaXMuUmc9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBjb21tZW50cygpe3JldHVybiB0aGlzLkJlfXNldCBjb21tZW50cyh0KXt0aGlzLkJlIT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLFRyZWVMYXlvdXQsXCJjb21tZW50c1wiKSx0aGlzLkJlPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBhcnJhbmdlbWVudCgpe3JldHVybiB0aGlzLldpfXNldCBhcnJhbmdlbWVudCh0KXt0aGlzLldpIT09dCYmKFUuaih0LFRyZWVBcnJhbmdlbWVudCxcIlRyZWVBcnJhbmdlbWVudFwiKSwodD09PTUwfHx0PT09NTF8fHQ9PT01MikmJih0aGlzLldpPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgYXJyYW5nZW1lbnRTcGFjaW5nKCl7cmV0dXJuIHRoaXMuVHN9c2V0IGFycmFuZ2VtZW50U3BhY2luZyh0KXtVLmUodCxTaXplLFRyZWVMYXlvdXQsXCJhcnJhbmdlbWVudFNwYWNpbmdcIiksdGhpcy5Ucy5lcXVhbHModCl8fCh0aGlzLlRzLmModCksdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCByb290RGVmYXVsdHMoKXtyZXR1cm4gdGhpcy5YfXNldCByb290RGVmYXVsdHModCl7dGhpcy5YIT09dCYmKFUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcInJvb3REZWZhdWx0c1wiKSx0aGlzLlg9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGFsdGVybmF0ZURlZmF1bHRzKCl7cmV0dXJuIHRoaXMuWX1zZXQgYWx0ZXJuYXRlRGVmYXVsdHModCl7dGhpcy5ZIT09dCYmKFUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUxheW91dCxcImFsdGVybmF0ZURlZmF1bHRzXCIpLHRoaXMuWT10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgc29ydGluZygpe3JldHVybiB0aGlzLlguc29ydGluZ31zZXQgc29ydGluZyh0KXt0aGlzLlguc29ydGluZyE9PXQmJihVLmoodCxUcmVlU29ydGluZyxcIlRyZWVTb3J0aW5nXCIpLHRoaXMuWC5zb3J0aW5nPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBjb21wYXJlcigpe3JldHVybiB0aGlzLlguY29tcGFyZXJ9c2V0IGNvbXBhcmVyKHQpe3RoaXMuWC5jb21wYXJlciE9PXQmJihVLlAodCxUcmVlTGF5b3V0LFwiY29tcGFyZXJcIiksdGhpcy5YLmNvbXBhcmVyPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBhbmdsZSgpe3JldHVybiB0aGlzLlguYW5nbGV9c2V0IGFuZ2xlKHQpe3RoaXMuWC5hbmdsZSE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVMYXlvdXQsXCJhbmdsZVwiKSx0PT09MHx8dD09PTkwfHx0PT09MTgwfHx0PT09MjcwPyh0aGlzLlguYW5nbGU9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSk6VS5uKFwiVHJlZUxheW91dC5hbmdsZSBtdXN0IGJlIDAsIDkwLCAxODAsIG9yIDI3MFwiKSl9Z2V0IGFsaWdubWVudCgpe3JldHVybiB0aGlzLlguYWxpZ25tZW50fXNldCBhbGlnbm1lbnQodCl7dGhpcy5YLmFsaWdubWVudCE9PXQmJihVLmoodCxUcmVlQWxpZ25tZW50LFwiVHJlZUFsaWdubWVudFwiKSx0aGlzLlguYWxpZ25tZW50PXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBub2RlSW5kZW50KCl7cmV0dXJuIHRoaXMuWC5ub2RlSW5kZW50fXNldCBub2RlSW5kZW50KHQpe3RoaXMuWC5ub2RlSW5kZW50IT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcIm5vZGVJbmRlbnRcIiksdD49MCYmKHRoaXMuWC5ub2RlSW5kZW50PXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgbm9kZUluZGVudFBhc3RQYXJlbnQoKXtyZXR1cm4gdGhpcy5YLm5vZGVJbmRlbnRQYXN0UGFyZW50fXNldCBub2RlSW5kZW50UGFzdFBhcmVudCh0KXt0aGlzLlgubm9kZUluZGVudFBhc3RQYXJlbnQhPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwibm9kZUluZGVudFBhc3RQYXJlbnRcIiksdD49MCYmdDw9MSYmKHRoaXMuWC5ub2RlSW5kZW50UGFzdFBhcmVudD10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IG5vZGVTcGFjaW5nKCl7cmV0dXJuIHRoaXMuWC5ub2RlU3BhY2luZ31zZXQgbm9kZVNwYWNpbmcodCl7dGhpcy5YLm5vZGVTcGFjaW5nIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcIm5vZGVTcGFjaW5nXCIpLHRoaXMuWC5ub2RlU3BhY2luZz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgbGF5ZXJTcGFjaW5nKCl7cmV0dXJuIHRoaXMuWC5sYXllclNwYWNpbmd9c2V0IGxheWVyU3BhY2luZyh0KXt0aGlzLlgubGF5ZXJTcGFjaW5nIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcImxheWVyU3BhY2luZ1wiKSx0aGlzLlgubGF5ZXJTcGFjaW5nPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBsYXllclNwYWNpbmdQYXJlbnRPdmVybGFwKCl7cmV0dXJuIHRoaXMuWC5sYXllclNwYWNpbmdQYXJlbnRPdmVybGFwfXNldCBsYXllclNwYWNpbmdQYXJlbnRPdmVybGFwKHQpe3RoaXMuWC5sYXllclNwYWNpbmdQYXJlbnRPdmVybGFwIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcImxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXBcIiksdD49MCYmdDw9MSYmKHRoaXMuWC5sYXllclNwYWNpbmdQYXJlbnRPdmVybGFwPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgY29tcGFjdGlvbigpe3JldHVybiB0aGlzLlguY29tcGFjdGlvbn1zZXQgY29tcGFjdGlvbih0KXt0aGlzLlguY29tcGFjdGlvbiE9PXQmJihVLmoodCxUcmVlQ29tcGFjdGlvbixcIlRyZWVDb21wYWN0aW9uXCIpLCh0PT09MzB8fHQ9PT0zMSkmJih0aGlzLlguY29tcGFjdGlvbj10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGJyZWFkdGhMaW1pdCgpe3JldHVybiB0aGlzLlguYnJlYWR0aExpbWl0fXNldCBicmVhZHRoTGltaXQodCl7dGhpcy5YLmJyZWFkdGhMaW1pdCE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVMYXlvdXQsXCJicmVhZHRoTGltaXRcIiksdD49MCYmKHRoaXMuWC5icmVhZHRoTGltaXQ9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCByb3dTcGFjaW5nKCl7cmV0dXJuIHRoaXMuWC5yb3dTcGFjaW5nfXNldCByb3dTcGFjaW5nKHQpe3RoaXMuWC5yb3dTcGFjaW5nIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcInJvd1NwYWNpbmdcIiksdGhpcy5YLnJvd1NwYWNpbmc9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IHJvd0luZGVudCgpe3JldHVybiB0aGlzLlgucm93SW5kZW50fXNldCByb3dJbmRlbnQodCl7dGhpcy5YLnJvd0luZGVudCE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVMYXlvdXQsXCJyb3dJbmRlbnRcIiksdD49MCYmKHRoaXMuWC5yb3dJbmRlbnQ9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBjb21tZW50U3BhY2luZygpe3JldHVybiB0aGlzLlguY29tbWVudFNwYWNpbmd9c2V0IGNvbW1lbnRTcGFjaW5nKHQpe3RoaXMuWC5jb21tZW50U3BhY2luZyE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVMYXlvdXQsXCJjb21tZW50U3BhY2luZ1wiKSx0aGlzLlguY29tbWVudFNwYWNpbmc9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGNvbW1lbnRNYXJnaW4oKXtyZXR1cm4gdGhpcy5YLmNvbW1lbnRNYXJnaW59c2V0IGNvbW1lbnRNYXJnaW4odCl7dGhpcy5YLmNvbW1lbnRNYXJnaW4hPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwiY29tbWVudE1hcmdpblwiKSx0aGlzLlguY29tbWVudE1hcmdpbj10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgc2V0c1BvcnRTcG90KCl7cmV0dXJuIHRoaXMuWC5zZXRzUG9ydFNwb3R9c2V0IHNldHNQb3J0U3BvdCh0KXt0aGlzLlguc2V0c1BvcnRTcG90IT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLFRyZWVMYXlvdXQsXCJzZXRzUG9ydFNwb3RcIiksdGhpcy5YLnNldHNQb3J0U3BvdD10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgcG9ydFNwb3QoKXtyZXR1cm4gdGhpcy5YLnBvcnRTcG90fXNldCBwb3J0U3BvdCh0KXtVLmUodCxTcG90LFRyZWVMYXlvdXQsXCJwb3J0U3BvdFwiKSx0aGlzLlgucG9ydFNwb3QuZXF1YWxzKHQpfHwodGhpcy5YLnBvcnRTcG90PXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBzZXRzQ2hpbGRQb3J0U3BvdCgpe3JldHVybiB0aGlzLlguc2V0c0NoaWxkUG9ydFNwb3R9c2V0IHNldHNDaGlsZFBvcnRTcG90KHQpe3RoaXMuWC5zZXRzQ2hpbGRQb3J0U3BvdCE9PXQmJihVLmkodCxcImJvb2xlYW5cIixUcmVlTGF5b3V0LFwic2V0c0NoaWxkUG9ydFNwb3RcIiksdGhpcy5YLnNldHNDaGlsZFBvcnRTcG90PXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBjaGlsZFBvcnRTcG90KCl7cmV0dXJuIHRoaXMuWC5jaGlsZFBvcnRTcG90fXNldCBjaGlsZFBvcnRTcG90KHQpe1UuZSh0LFNwb3QsVHJlZUxheW91dCxcImNoaWxkUG9ydFNwb3RcIiksdGhpcy5YLmNoaWxkUG9ydFNwb3QuZXF1YWxzKHQpfHwodGhpcy5YLmNoaWxkUG9ydFNwb3Q9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGFsdGVybmF0ZVNvcnRpbmcoKXtyZXR1cm4gdGhpcy5ZLnNvcnRpbmd9c2V0IGFsdGVybmF0ZVNvcnRpbmcodCl7dGhpcy5ZLnNvcnRpbmchPT10JiYoVS5qKHQsVHJlZVNvcnRpbmcsXCJUcmVlU29ydGluZ1wiKSx0aGlzLlkuc29ydGluZz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgYWx0ZXJuYXRlQ29tcGFyZXIoKXtyZXR1cm4gdGhpcy5ZLmNvbXBhcmVyfXNldCBhbHRlcm5hdGVDb21wYXJlcih0KXt0aGlzLlkuY29tcGFyZXIhPT10JiYoVS5QKHQsVHJlZUxheW91dCxcImFsdGVybmF0ZUNvbXBhcmVyXCIpLHRoaXMuWS5jb21wYXJlcj10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgYWx0ZXJuYXRlQW5nbGUoKXtyZXR1cm4gdGhpcy5ZLmFuZ2xlfXNldCBhbHRlcm5hdGVBbmdsZSh0KXt0aGlzLlkuYW5nbGUhPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwiYWx0ZXJuYXRlQW5nbGVcIiksKHQ9PT0wfHx0PT09OTB8fHQ9PT0xODB8fHQ9PT0yNzApJiYodGhpcy5ZLmFuZ2xlPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgYWx0ZXJuYXRlQWxpZ25tZW50KCl7cmV0dXJuIHRoaXMuWS5hbGlnbm1lbnR9c2V0IGFsdGVybmF0ZUFsaWdubWVudCh0KXt0aGlzLlkuYWxpZ25tZW50IT09dCYmKFUuaih0LFRyZWVBbGlnbm1lbnQsXCJUcmVlQWxpZ25tZW50XCIpLHRoaXMuWS5hbGlnbm1lbnQ9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGFsdGVybmF0ZU5vZGVJbmRlbnQoKXtyZXR1cm4gdGhpcy5ZLm5vZGVJbmRlbnR9c2V0IGFsdGVybmF0ZU5vZGVJbmRlbnQodCl7dGhpcy5ZLm5vZGVJbmRlbnQhPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwiYWx0ZXJuYXRlTm9kZUluZGVudFwiKSx0Pj0wJiYodGhpcy5ZLm5vZGVJbmRlbnQ9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBhbHRlcm5hdGVOb2RlSW5kZW50UGFzdFBhcmVudCgpe3JldHVybiB0aGlzLlkubm9kZUluZGVudFBhc3RQYXJlbnR9c2V0IGFsdGVybmF0ZU5vZGVJbmRlbnRQYXN0UGFyZW50KHQpe3RoaXMuWS5ub2RlSW5kZW50UGFzdFBhcmVudCE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVMYXlvdXQsXCJhbHRlcm5hdGVOb2RlSW5kZW50UGFzdFBhcmVudFwiKSx0Pj0wJiZ0PD0xJiYodGhpcy5ZLm5vZGVJbmRlbnRQYXN0UGFyZW50PXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgYWx0ZXJuYXRlTm9kZVNwYWNpbmcoKXtyZXR1cm4gdGhpcy5ZLm5vZGVTcGFjaW5nfXNldCBhbHRlcm5hdGVOb2RlU3BhY2luZyh0KXt0aGlzLlkubm9kZVNwYWNpbmchPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwiYWx0ZXJuYXRlTm9kZVNwYWNpbmdcIiksdGhpcy5ZLm5vZGVTcGFjaW5nPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBhbHRlcm5hdGVMYXllclNwYWNpbmcoKXtyZXR1cm4gdGhpcy5ZLmxheWVyU3BhY2luZ31zZXQgYWx0ZXJuYXRlTGF5ZXJTcGFjaW5nKHQpe3RoaXMuWS5sYXllclNwYWNpbmchPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwiYWx0ZXJuYXRlTGF5ZXJTcGFjaW5nXCIpLHRoaXMuWS5sYXllclNwYWNpbmc9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGFsdGVybmF0ZUxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXAoKXtyZXR1cm4gdGhpcy5ZLmxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXB9c2V0IGFsdGVybmF0ZUxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXAodCl7dGhpcy5ZLmxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXAhPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwiYWx0ZXJuYXRlTGF5ZXJTcGFjaW5nUGFyZW50T3ZlcmxhcFwiKSx0Pj0wJiZ0PD0xJiYodGhpcy5ZLmxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXA9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSkpfWdldCBhbHRlcm5hdGVDb21wYWN0aW9uKCl7cmV0dXJuIHRoaXMuWS5jb21wYWN0aW9ufXNldCBhbHRlcm5hdGVDb21wYWN0aW9uKHQpe3RoaXMuWS5jb21wYWN0aW9uIT09dCYmKFUuaih0LFRyZWVDb21wYWN0aW9uLFwiVHJlZUNvbXBhY3Rpb25cIiksKHQ9PT0zMHx8dD09PTMxKSYmKHRoaXMuWS5jb21wYWN0aW9uPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpKX1nZXQgYWx0ZXJuYXRlQnJlYWR0aExpbWl0KCl7cmV0dXJuIHRoaXMuWS5icmVhZHRoTGltaXR9c2V0IGFsdGVybmF0ZUJyZWFkdGhMaW1pdCh0KXt0aGlzLlkuYnJlYWR0aExpbWl0IT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcImFsdGVybmF0ZUJyZWFkdGhMaW1pdFwiKSx0Pj0wJiYodGhpcy5ZLmJyZWFkdGhMaW1pdD10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGFsdGVybmF0ZVJvd1NwYWNpbmcoKXtyZXR1cm4gdGhpcy5ZLnJvd1NwYWNpbmd9c2V0IGFsdGVybmF0ZVJvd1NwYWNpbmcodCl7dGhpcy5ZLnJvd1NwYWNpbmchPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlTGF5b3V0LFwiYWx0ZXJuYXRlUm93U3BhY2luZ1wiKSx0aGlzLlkucm93U3BhY2luZz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgYWx0ZXJuYXRlUm93SW5kZW50KCl7cmV0dXJuIHRoaXMuWS5yb3dJbmRlbnR9c2V0IGFsdGVybmF0ZVJvd0luZGVudCh0KXt0aGlzLlkucm93SW5kZW50IT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcImFsdGVybmF0ZVJvd0luZGVudFwiKSx0Pj0wJiYodGhpcy5ZLnJvd0luZGVudD10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKSl9Z2V0IGFsdGVybmF0ZUNvbW1lbnRTcGFjaW5nKCl7cmV0dXJuIHRoaXMuWS5jb21tZW50U3BhY2luZ31zZXQgYWx0ZXJuYXRlQ29tbWVudFNwYWNpbmcodCl7dGhpcy5ZLmNvbW1lbnRTcGFjaW5nIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZUxheW91dCxcImFsdGVybmF0ZUNvbW1lbnRTcGFjaW5nXCIpLHRoaXMuWS5jb21tZW50U3BhY2luZz10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1nZXQgYWx0ZXJuYXRlQ29tbWVudE1hcmdpbigpe3JldHVybiB0aGlzLlkuY29tbWVudE1hcmdpbn1zZXQgYWx0ZXJuYXRlQ29tbWVudE1hcmdpbih0KXt0aGlzLlkuY29tbWVudE1hcmdpbiE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVMYXlvdXQsXCJhbHRlcm5hdGVDb21tZW50TWFyZ2luXCIpLHRoaXMuWS5jb21tZW50TWFyZ2luPXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBhbHRlcm5hdGVTZXRzUG9ydFNwb3QoKXtyZXR1cm4gdGhpcy5ZLnNldHNQb3J0U3BvdH1zZXQgYWx0ZXJuYXRlU2V0c1BvcnRTcG90KHQpe3RoaXMuWS5zZXRzUG9ydFNwb3QhPT10JiYoVS5pKHQsXCJib29sZWFuXCIsVHJlZUxheW91dCxcImFsdGVybmF0ZVNldHNQb3J0U3BvdFwiKSx0aGlzLlkuc2V0c1BvcnRTcG90PXQsdGhpcy5pbnZhbGlkYXRlTGF5b3V0KCkpfWdldCBhbHRlcm5hdGVQb3J0U3BvdCgpe3JldHVybiB0aGlzLlkucG9ydFNwb3R9c2V0IGFsdGVybmF0ZVBvcnRTcG90KHQpe1UuZSh0LFNwb3QsVHJlZUxheW91dCxcImFsdGVybmF0ZVBvcnRTcG90XCIpLHRoaXMuWS5wb3J0U3BvdC5lcXVhbHModCl8fCh0aGlzLlkucG9ydFNwb3Q9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGFsdGVybmF0ZVNldHNDaGlsZFBvcnRTcG90KCl7cmV0dXJuIHRoaXMuWS5zZXRzQ2hpbGRQb3J0U3BvdH1zZXQgYWx0ZXJuYXRlU2V0c0NoaWxkUG9ydFNwb3QodCl7dGhpcy5ZLnNldHNDaGlsZFBvcnRTcG90IT09dCYmKFUuaSh0LFwiYm9vbGVhblwiLFRyZWVMYXlvdXQsXCJhbHRlcm5hdGVTZXRzQ2hpbGRQb3J0U3BvdFwiKSx0aGlzLlkuc2V0c0NoaWxkUG9ydFNwb3Q9dCx0aGlzLmludmFsaWRhdGVMYXlvdXQoKSl9Z2V0IGFsdGVybmF0ZUNoaWxkUG9ydFNwb3QoKXtyZXR1cm4gdGhpcy5ZLmNoaWxkUG9ydFNwb3R9c2V0IGFsdGVybmF0ZUNoaWxkUG9ydFNwb3QodCl7VS5lKHQsU3BvdCxUcmVlTGF5b3V0LFwiYWx0ZXJuYXRlQ2hpbGRQb3J0U3BvdFwiKSx0aGlzLlkuY2hpbGRQb3J0U3BvdC5lcXVhbHModCl8fCh0aGlzLlkuY2hpbGRQb3J0U3BvdD10LHRoaXMuaW52YWxpZGF0ZUxheW91dCgpKX1zdGF0aWMgUGF0aERlZmF1bHQ9MDtzdGF0aWMgUGF0aERlc3RpbmF0aW9uPTE7c3RhdGljIFBhdGhTb3VyY2U9MjtzdGF0aWMgU29ydGluZ0ZvcndhcmRzPTEwO3N0YXRpYyBTb3J0aW5nUmV2ZXJzZT0xMTtzdGF0aWMgU29ydGluZ0FzY2VuZGluZz0xMjtzdGF0aWMgU29ydGluZ0Rlc2NlbmRpbmc9MTM7c3RhdGljIEFsaWdubWVudENlbnRlclN1YnRyZWVzPTIwO3N0YXRpYyBBbGlnbm1lbnRDZW50ZXJDaGlsZHJlbj0yMTtzdGF0aWMgQWxpZ25tZW50U3RhcnQ9MjI7c3RhdGljIEFsaWdubWVudEVuZD0yMztzdGF0aWMgQWxpZ25tZW50QnVzPTI0O3N0YXRpYyBBbGlnbm1lbnRCdXNCcmFuY2hpbmc9MjU7c3RhdGljIEFsaWdubWVudFRvcExlZnRCdXM9MjY7c3RhdGljIEFsaWdubWVudEJvdHRvbVJpZ2h0QnVzPTI3O3N0YXRpYyBDb21wYWN0aW9uTm9uZT0zMDtzdGF0aWMgQ29tcGFjdGlvbkJsb2NrPTMxO3N0YXRpYyBTdHlsZUxheWVyZWQ9NDA7c3RhdGljIFN0eWxlTGFzdFBhcmVudHM9NDE7c3RhdGljIFN0eWxlQWx0ZXJuYXRpbmc9NDI7c3RhdGljIFN0eWxlUm9vdE9ubHk9NDM7c3RhdGljIEFycmFuZ2VtZW50VmVydGljYWw9NTA7c3RhdGljIEFycmFuZ2VtZW50SG9yaXpvbnRhbD01MTtzdGF0aWMgQXJyYW5nZW1lbnRGaXhlZFJvb3RzPTUyO3N0YXRpYyBMYXllckluZGl2aWR1YWw9NjA7c3RhdGljIExheWVyU2libGluZ3M9NjE7c3RhdGljIExheWVyVW5pZm9ybT02Mn1jbGFzcyBUcmVlTmV0d29yayBleHRlbmRzIExheW91dE5ldHdvcmt7Y29uc3RydWN0b3IodCl7c3VwZXIodCl9Y3JlYXRlVmVydGV4KCl7cmV0dXJuIG5ldyBUcmVlVmVydGV4KHRoaXMpfWNyZWF0ZUVkZ2UoKXtyZXR1cm4gbmV3IFRyZWVFZGdlKHRoaXMpfX1jbGFzcyBUcmVlVmVydGV4IGV4dGVuZHMgTGF5b3V0VmVydGV4e1Y7eHQ7dXQ7RGs7Rms7Ums7SWs7T2s7RWs7Qms7QmU7SWc7T2c7YmU7a2U7anQ7dWk7bnc7b3c7bHc7RHM7aHc7YXc7Znc7Y3c7dXc7ZHc7Z3c7bXc7cHc7eXc7d3c7Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5Eaz0hMSx0aGlzLkZrPW51bGwsdGhpcy5Saz1bXSx0aGlzLklrPTAsdGhpcy5Paz0wLHRoaXMuRWs9MCx0aGlzLkJrPTAsdGhpcy5CZT1udWxsLHRoaXMuVj1uZXcgUG9pbnQoMCwwKSx0aGlzLnh0PW5ldyBTaXplKDAsMCksdGhpcy51dD1uZXcgUG9pbnQoMCwwKSx0aGlzLklnPW51bGwsdGhpcy5PZz1udWxsLHRoaXMuYmU9MTAsdGhpcy5rZT1MYXlvdXRWZXJ0ZXguc3RhbmRhcmRDb21wYXJlcix0aGlzLmp0PTAsdGhpcy51aT0yMSx0aGlzLm53PTAsdGhpcy5vdz0wLHRoaXMubHc9MjAsdGhpcy5Ecz01MCx0aGlzLmh3PTAsdGhpcy5hdz0zMSx0aGlzLmZ3PTAsdGhpcy5jdz0yNSx0aGlzLnV3PTEwLHRoaXMuZHc9MTAsdGhpcy5ndz0yMCx0aGlzLm13PSEwLHRoaXMucHc9U3BvdC5EZWZhdWx0LHRoaXMueXc9ITAsdGhpcy53dz1TcG90LkRlZmF1bHR9Y29weUluaGVyaXRlZFByb3BlcnRpZXNGcm9tKHQpe3QhPT1udWxsJiYodGhpcy5iZT10LnNvcnRpbmcsdGhpcy5rZT10LmNvbXBhcmVyLHRoaXMuanQ9dC5hbmdsZSx0aGlzLnVpPXQuYWxpZ25tZW50LHRoaXMubnc9dC5ub2RlSW5kZW50LHRoaXMub3c9dC5ub2RlSW5kZW50UGFzdFBhcmVudCx0aGlzLmx3PXQubm9kZVNwYWNpbmcsdGhpcy5Ecz10LmxheWVyU3BhY2luZyx0aGlzLmh3PXQubGF5ZXJTcGFjaW5nUGFyZW50T3ZlcmxhcCx0aGlzLmF3PXQuY29tcGFjdGlvbix0aGlzLmZ3PXQuYnJlYWR0aExpbWl0LHRoaXMuY3c9dC5yb3dTcGFjaW5nLHRoaXMudXc9dC5yb3dJbmRlbnQsdGhpcy5kdz10LmNvbW1lbnRTcGFjaW5nLHRoaXMuZ3c9dC5jb21tZW50TWFyZ2luLHRoaXMubXc9dC5zZXRzUG9ydFNwb3QsdGhpcy5wdz10LnBvcnRTcG90LHRoaXMueXc9dC5zZXRzQ2hpbGRQb3J0U3BvdCx0aGlzLnd3PXQuY2hpbGRQb3J0U3BvdCl9Z2V0IGluaXRpYWxpemVkKCl7cmV0dXJuIHRoaXMuRGt9c2V0IGluaXRpYWxpemVkKHQpe3RoaXMuRGshPT10JiYoVS5pKHQsXCJib29sZWFuXCIsVHJlZVZlcnRleCxcImluaXRpYWxpemVkXCIpLHRoaXMuRGs9dCl9Z2V0IHBhcmVudCgpe3JldHVybiB0aGlzLkZrfXNldCBwYXJlbnQodCl7dGhpcy5GayE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZVZlcnRleCxcInBhcmVudFwiKSx0aGlzLkZrPXQpfWdldCBjaGlsZHJlbigpe3JldHVybiB0aGlzLlJrfXNldCBjaGlsZHJlbih0KXtpZih0aGlzLlJrIT09dCl7aWYodCE9PW51bGwmJiFBcnJheS5pc0FycmF5KHQpJiZVLlBpKHQsXCJBcnJheVwiLFRyZWVWZXJ0ZXgsXCJjaGlsZHJlbjp2YWx1ZVwiKSx0IT09bnVsbCl7Y29uc3QgaT10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCBzPXRbZV07RGVidWcmJlUuZShzLFRyZWVWZXJ0ZXgsVHJlZVZlcnRleCxcImNoaWxkcmVuXCIpfX10aGlzLlJrPXR9fWdldCBsZXZlbCgpe3JldHVybiB0aGlzLklrfXNldCBsZXZlbCh0KXt0aGlzLklrIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZVZlcnRleCxcImxldmVsXCIpLHRoaXMuSWs9dCl9Z2V0IGRlc2NlbmRhbnRDb3VudCgpe3JldHVybiB0aGlzLk9rfXNldCBkZXNjZW5kYW50Q291bnQodCl7dGhpcy5PayE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVWZXJ0ZXgsXCJkZXNjZW5kYW50Q291bnRcIiksdGhpcy5Paz10KX1nZXQgbWF4Q2hpbGRyZW5Db3VudCgpe3JldHVybiB0aGlzLkVrfXNldCBtYXhDaGlsZHJlbkNvdW50KHQpe3RoaXMuRWshPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlVmVydGV4LFwibWF4Q2hpbGRyZW5Db3VudFwiKSx0aGlzLkVrPXQpfWdldCBtYXhHZW5lcmF0aW9uQ291bnQoKXtyZXR1cm4gdGhpcy5Ca31zZXQgbWF4R2VuZXJhdGlvbkNvdW50KHQpe3RoaXMuQmshPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlVmVydGV4LFwibWF4R2VuZXJhdGlvbkNvdW50XCIpLHRoaXMuQms9dCl9Z2V0IGNvbW1lbnRzKCl7cmV0dXJuIHRoaXMuQmV9c2V0IGNvbW1lbnRzKHQpe2lmKHRoaXMuQmUhPT10KXtpZih0IT09bnVsbCYmIUFycmF5LmlzQXJyYXkodCkmJlUuUGkodCxcIkFycmF5XCIsVHJlZVZlcnRleCxcImNvbW1lbnRzOnZhbHVlXCIpLHQhPT1udWxsKXtjb25zdCBpPXQubGVuZ3RoO2ZvcihsZXQgZT0wO2U8aTtlKyspe2NvbnN0IHM9dFtlXTtEZWJ1ZyYmVS5lKHMsTm9kZSxUcmVlVmVydGV4LFwiY29tbWVudHNcIil9fXRoaXMuQmU9dH19Z2V0IHNvcnRpbmcoKXtyZXR1cm4gdGhpcy5iZX1zZXQgc29ydGluZyh0KXt0aGlzLmJlIT09dCYmKFUuaih0LFRyZWVTb3J0aW5nLFwiVHJlZVNvcnRpbmdcIiksdGhpcy5iZT10KX1nZXQgY29tcGFyZXIoKXtyZXR1cm4gdGhpcy5rZX1zZXQgY29tcGFyZXIodCl7dGhpcy5rZSE9PXQmJihVLlAodCxUcmVlVmVydGV4LFwiY29tcGFyZXJcIiksdGhpcy5rZT10KX1nZXQgYW5nbGUoKXtyZXR1cm4gdGhpcy5qdH1zZXQgYW5nbGUodCl7dGhpcy5qdCE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVWZXJ0ZXgsXCJhbmdsZVwiKSx0aGlzLmp0PXQpfWdldCBhbGlnbm1lbnQoKXtyZXR1cm4gdGhpcy51aX1zZXQgYWxpZ25tZW50KHQpe3RoaXMudWkhPT10JiYoVS5qKHQsVHJlZUFsaWdubWVudCxcIlRyZWVBbGlnbm1lbnRcIiksdGhpcy51aT10KX1nZXQgbm9kZUluZGVudCgpe3JldHVybiB0aGlzLm53fXNldCBub2RlSW5kZW50KHQpe3RoaXMubnchPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlVmVydGV4LFwibm9kZUluZGVudFwiKSx0aGlzLm53PXQpfWdldCBub2RlSW5kZW50UGFzdFBhcmVudCgpe3JldHVybiB0aGlzLm93fXNldCBub2RlSW5kZW50UGFzdFBhcmVudCh0KXt0aGlzLm93IT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZVZlcnRleCxcIm5vZGVJbmRlbnRQYXN0UGFyZW50XCIpLHRoaXMub3c9dCl9Z2V0IG5vZGVTcGFjaW5nKCl7cmV0dXJuIHRoaXMubHd9c2V0IG5vZGVTcGFjaW5nKHQpe3RoaXMubHchPT10JiYoVS5pKHQsXCJudW1iZXJcIixUcmVlVmVydGV4LFwibm9kZVNwYWNpbmdcIiksdGhpcy5sdz10KX1nZXQgbGF5ZXJTcGFjaW5nKCl7cmV0dXJuIHRoaXMuRHN9c2V0IGxheWVyU3BhY2luZyh0KXt0aGlzLkRzIT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZVZlcnRleCxcImxheWVyU3BhY2luZ1wiKSx0aGlzLkRzPXQpfWdldCBsYXllclNwYWNpbmdQYXJlbnRPdmVybGFwKCl7cmV0dXJuIHRoaXMuaHd9c2V0IGxheWVyU3BhY2luZ1BhcmVudE92ZXJsYXAodCl7dGhpcy5odyE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVWZXJ0ZXgsXCJsYXllclNwYWNpbmdQYXJlbnRPdmVybGFwXCIpLHRoaXMuaHc9dCl9Z2V0IGNvbXBhY3Rpb24oKXtyZXR1cm4gdGhpcy5hd31zZXQgY29tcGFjdGlvbih0KXt0aGlzLmF3IT09dCYmKFUuaih0LFRyZWVDb21wYWN0aW9uLFwiVHJlZUNvbXBhY3Rpb25cIiksdGhpcy5hdz10KX1nZXQgYnJlYWR0aExpbWl0KCl7cmV0dXJuIHRoaXMuZnd9c2V0IGJyZWFkdGhMaW1pdCh0KXt0aGlzLmZ3IT09dCYmKFUuaSh0LFwibnVtYmVyXCIsVHJlZVZlcnRleCxcImJyZWFkdGhMaW1pdFwiKSx0aGlzLmZ3PXQpfWdldCByb3dTcGFjaW5nKCl7cmV0dXJuIHRoaXMuY3d9c2V0IHJvd1NwYWNpbmcodCl7dGhpcy5jdyE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVWZXJ0ZXgsXCJyb3dTcGFjaW5nXCIpLHRoaXMuY3c9dCl9Z2V0IHJvd0luZGVudCgpe3JldHVybiB0aGlzLnV3fXNldCByb3dJbmRlbnQodCl7dGhpcy51dyE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVWZXJ0ZXgsXCJyb3dJbmRlbnRcIiksdGhpcy51dz10KX1nZXQgY29tbWVudFNwYWNpbmcoKXtyZXR1cm4gdGhpcy5kd31zZXQgY29tbWVudFNwYWNpbmcodCl7dGhpcy5kdyE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVWZXJ0ZXgsXCJjb21tZW50U3BhY2luZ1wiKSx0aGlzLmR3PXQpfWdldCBjb21tZW50TWFyZ2luKCl7cmV0dXJuIHRoaXMuZ3d9c2V0IGNvbW1lbnRNYXJnaW4odCl7dGhpcy5ndyE9PXQmJihVLmkodCxcIm51bWJlclwiLFRyZWVWZXJ0ZXgsXCJjb21tZW50TWFyZ2luXCIpLHRoaXMuZ3c9dCl9Z2V0IHNldHNQb3J0U3BvdCgpe3JldHVybiB0aGlzLm13fXNldCBzZXRzUG9ydFNwb3QodCl7dGhpcy5tdyE9PXQmJihVLmkodCxcImJvb2xlYW5cIixUcmVlVmVydGV4LFwic2V0c1BvcnRTcG90XCIpLHRoaXMubXc9dCl9Z2V0IHBvcnRTcG90KCl7cmV0dXJuIHRoaXMucHd9c2V0IHBvcnRTcG90KHQpe1UuZSh0LFNwb3QsVHJlZVZlcnRleCxcInBvcnRTcG90XCIpLHRoaXMucHcuZXF1YWxzKHQpfHwodGhpcy5wdz10KX1nZXQgc2V0c0NoaWxkUG9ydFNwb3QoKXtyZXR1cm4gdGhpcy55d31zZXQgc2V0c0NoaWxkUG9ydFNwb3QodCl7dGhpcy55dyE9PXQmJihVLmkodCxcImJvb2xlYW5cIixUcmVlVmVydGV4LFwic2V0c0NoaWxkUG9ydFNwb3RcIiksdGhpcy55dz10KX1nZXQgY2hpbGRQb3J0U3BvdCgpe3JldHVybiB0aGlzLnd3fXNldCBjaGlsZFBvcnRTcG90KHQpe1UuZSh0LFNwb3QsVHJlZVZlcnRleCxcImNoaWxkUG9ydFNwb3RcIiksdGhpcy53dy5lcXVhbHModCl8fCh0aGlzLnd3PXQpfWdldCBjaGlsZHJlbkNvdW50KCl7cmV0dXJuIHRoaXMuY2hpbGRyZW4ubGVuZ3RofWdldCByZWxhdGl2ZVBvc2l0aW9uKCl7cmV0dXJuIHRoaXMuVn1zZXQgcmVsYXRpdmVQb3NpdGlvbih0KXt0aGlzLlYuc2V0KHQpfWdldCBzdWJ0cmVlU2l6ZSgpe3JldHVybiB0aGlzLnh0fXNldCBzdWJ0cmVlU2l6ZSh0KXt0aGlzLnh0LnNldCh0KX1nZXQgc3VidHJlZU9mZnNldCgpe3JldHVybiB0aGlzLnV0fXNldCBzdWJ0cmVlT2Zmc2V0KHQpe3RoaXMudXQuc2V0KHQpfX1jbGFzcyBUcmVlRWRnZSBleHRlbmRzIExheW91dEVkZ2V7Vms7Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5Waz1uZXcgUG9pbnQoMCwwKX1jb21taXQoKXtjb25zdCB0PXRoaXMubGluaztpZih0PT09bnVsbHx8dC5pc0F2b2lkaW5nKXJldHVybjtjb25zdCBpPXRoaXMubmV0d29yay5sYXlvdXQ7bGV0IGU9bnVsbCxzPW51bGw7c3dpdGNoKGkudXMpe2Nhc2UgMTplPXRoaXMuZnJvbVZlcnRleCxzPXRoaXMudG9WZXJ0ZXg7YnJlYWs7Y2FzZSAyOmU9dGhpcy50b1ZlcnRleCxzPXRoaXMuZnJvbVZlcnRleDticmVhaztkZWZhdWx0OlUubihcIlVuaGFuZGxlZCBwYXRoIHZhbHVlIFwiK2kudXMudG9TdHJpbmcoKSl9aWYoZT09PW51bGx8fHM9PT1udWxsKXJldHVybjtjb25zdCBuPXRoaXMuVms7aWYobi54PT09MCYmbi55PT09MCl7dGhpcy5wRShlLHMpO3JldHVybn1jb25zdCBvPWUuYm91bmRzLHI9aS5vcnRob0FuZ2xlKGUpLGw9aS5jb21wdXRlTGF5ZXJTcGFjaW5nKGUpLGg9ZS5yb3dTcGFjaW5nO3QudXBkYXRlUm91dGUoKTtjb25zdCBmPXQuY3VydmU9PT05LGE9dC5pc09ydGhvZ29uYWw7bGV0IGM9MCx1LGQ7aWYodC5zdGFydFJvdXRlKCksYXx8Zil7Zm9yKGM9Mjt0LnBvaW50c0NvdW50PjQ7KXQucmVtb3ZlUG9pbnQoMik7dT10LmdldFBvaW50KDEpLGQ9dC5nZXRQb2ludCgyKX1lbHNle2ZvcihjPTE7dC5wb2ludHNDb3VudD4zOyl0LnJlbW92ZVBvaW50KDEpO3U9dC5nZXRQb2ludCgwKSxkPXQuZ2V0UG9pbnQodC5wb2ludHNDb3VudC0xKX1jb25zdCBtPXQuZ2V0UG9pbnQodC5wb2ludHNDb3VudC0xKTtsZXQgZz0wO3I9PT0wPyhlLmFsaWdubWVudD09PTIzPyhnPW8uYm90dG9tK24ueSxuLnk9PT0wJiZ1Lnk+bS55K2Uucm93SW5kZW50JiYoZz1NYXRoLm1pbihnLE1hdGgubWF4KHUueSxnLWkuY29tcHV0ZU5vZGVJbmRlbnQoZSkpKSkpOmUuYWxpZ25tZW50PT09MjI/KGc9by50b3Arbi55LG4ueT09PTAmJnUueTxtLnktZS5yb3dJbmRlbnQmJihnPU1hdGgubWF4KGcsTWF0aC5taW4odS55LGcraS5jb21wdXRlTm9kZUluZGVudChlKSkpKSk6Zz1vLnkrby5oZWlnaHQvMituLnksZj8odC5pbnNlcnRQb2ludEF0KGMsdS54LGcpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxvLnJpZ2h0K2wsZyksYysrLHQuaW5zZXJ0UG9pbnRBdChjLG8ucmlnaHQrbCsobi54LWgpLzMsZyksYysrLHQuaW5zZXJ0UG9pbnRBdChjLG8ucmlnaHQrbCsobi54LWgpKjIvMyxnKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsby5yaWdodCtsKyhuLngtaCksZyksYysrLHQuaW5zZXJ0UG9pbnRBdChjLGQueCxnKSxjKyspOihhJiYodC5pbnNlcnRQb2ludEF0KGMsby5yaWdodCtsLzIsdS55KSxjKyspLHQuaW5zZXJ0UG9pbnRBdChjLG8ucmlnaHQrbC8yLGcpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxvLnJpZ2h0K2wrbi54LShhP2gvMjpoKSxnKSxjKyssYSYmKHQuaW5zZXJ0UG9pbnRBdChjLHQuZ2V0UG9pbnQoYy0xKS54LGQueSksYysrKSkpOnI9PT05MD8oZS5hbGlnbm1lbnQ9PT0yMz8oZz1vLnJpZ2h0K24ueCxuLng9PT0wJiZ1Lng+bS54K2Uucm93SW5kZW50JiYoZz1NYXRoLm1pbihnLE1hdGgubWF4KHUueCxnLWkuY29tcHV0ZU5vZGVJbmRlbnQoZSkpKSkpOmUuYWxpZ25tZW50PT09MjI/KGc9by5sZWZ0K24ueCxuLng9PT0wJiZ1Lng8bS54LWUucm93SW5kZW50JiYoZz1NYXRoLm1heChnLE1hdGgubWluKHUueCxnK2kuY29tcHV0ZU5vZGVJbmRlbnQoZSkpKSkpOmc9by54K28ud2lkdGgvMituLngsZj8odC5pbnNlcnRQb2ludEF0KGMsZyx1LnkpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLG8uYm90dG9tK2wpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLG8uYm90dG9tK2wrKG4ueS1oKS8zKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsZyxvLmJvdHRvbStsKyhuLnktaCkqMi8zKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsZyxvLmJvdHRvbStsKyhuLnktaCkpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLGQueSksYysrKTooYSYmKHQuaW5zZXJ0UG9pbnRBdChjLHUueCxvLmJvdHRvbStsLzIpLGMrKyksdC5pbnNlcnRQb2ludEF0KGMsZyxvLmJvdHRvbStsLzIpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLG8uYm90dG9tK2wrbi55LShhP2gvMjpoKSksYysrLGEmJih0Lmluc2VydFBvaW50QXQoYyxkLngsdC5nZXRQb2ludChjLTEpLnkpLGMrKykpKTpyPT09MTgwPyhlLmFsaWdubWVudD09PTIzPyhnPW8uYm90dG9tK24ueSxuLnk9PT0wJiZ1Lnk+bS55K2Uucm93SW5kZW50JiYoZz1NYXRoLm1pbihnLE1hdGgubWF4KHUueSxnLWkuY29tcHV0ZU5vZGVJbmRlbnQoZSkpKSkpOmUuYWxpZ25tZW50PT09MjI/KGc9by50b3Arbi55LG4ueT09PTAmJnUueTxtLnktZS5yb3dJbmRlbnQmJihnPU1hdGgubWF4KGcsTWF0aC5taW4odS55LGcraS5jb21wdXRlTm9kZUluZGVudChlKSkpKSk6Zz1vLnkrby5oZWlnaHQvMituLnksZj8odC5pbnNlcnRQb2ludEF0KGMsdS54LGcpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxvLmxlZnQtbCxnKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsby5sZWZ0LWwrKG4ueCtoKS8zLGcpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxvLmxlZnQtbCsobi54K2gpKjIvMyxnKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsby5sZWZ0LWwrKG4ueCtoKSxnKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsZC54LGcpLGMrKyk6KGEmJih0Lmluc2VydFBvaW50QXQoYyxvLmxlZnQtbC8yLHUueSksYysrKSx0Lmluc2VydFBvaW50QXQoYyxvLmxlZnQtbC8yLGcpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxvLmxlZnQtbCtuLngrKGE/aC8yOmgpLGcpLGMrKyxhJiYodC5pbnNlcnRQb2ludEF0KGMsdC5nZXRQb2ludChjLTEpLngsZC55KSxjKyspKSk6cj09PTI3MD8oZS5hbGlnbm1lbnQ9PT0yMz8oZz1vLnJpZ2h0K24ueCxuLng9PT0wJiZ1Lng+bS54K2Uucm93SW5kZW50JiYoZz1NYXRoLm1pbihnLE1hdGgubWF4KHUueCxnLWkuY29tcHV0ZU5vZGVJbmRlbnQoZSkpKSkpOmUuYWxpZ25tZW50PT09MjI/KGc9by5sZWZ0K24ueCxuLng9PT0wJiZ1Lng8bS54LWUucm93SW5kZW50JiYoZz1NYXRoLm1heChnLE1hdGgubWluKHUueCxnK2kuY29tcHV0ZU5vZGVJbmRlbnQoZSkpKSkpOmc9by54K28ud2lkdGgvMituLngsZj8odC5pbnNlcnRQb2ludEF0KGMsZyx1LnkpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLG8udG9wLWwpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLG8udG9wLWwrKG4ueStoKS8zKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsZyxvLnRvcC1sKyhuLnkraCkqMi8zKSxjKyssdC5pbnNlcnRQb2ludEF0KGMsZyxvLnRvcC1sKyhuLnkraCkpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLGQueSksYysrKTooYSYmKHQuaW5zZXJ0UG9pbnRBdChjLHUueCxvLnRvcC1sLzIpLGMrKyksdC5pbnNlcnRQb2ludEF0KGMsZyxvLnRvcC1sLzIpLGMrKyx0Lmluc2VydFBvaW50QXQoYyxnLG8udG9wLWwrbi55KyhhP2gvMjpoKSksYysrLGEmJih0Lmluc2VydFBvaW50QXQoYyxkLngsdC5nZXRQb2ludChjLTEpLnkpLGMrKykpKTpVLm4oXCJJbnZhbGlkIGFuZ2xlIFwiK3IpLHQuY29tbWl0Um91dGUoKX1wRSh0LGkpe0RlYnVnJiZVLmUodCxUcmVlVmVydGV4LFRyZWVFZGdlLFwiYWRqdXN0Um91dGVGb3JBbmdsZUNoYW5nZTpwYXJlbnRcIiksRGVidWcmJlUuZShpLFRyZWVWZXJ0ZXgsVHJlZUVkZ2UsXCJhZGp1c3RSb3V0ZUZvckFuZ2xlQ2hhbmdlOmNoaWxkXCIpO2NvbnN0IGU9dGhpcy5saW5rO2lmKGU9PT1udWxsKXJldHVybjtjb25zdCBzPXRoaXMubmV0d29yay5sYXlvdXQsbj1zLm9ydGhvQW5nbGUodCksbz1zLm9ydGhvQW5nbGUoaSk7aWYobj09PW8pcmV0dXJuO2NvbnN0IHI9cy5jb21wdXRlTGF5ZXJTcGFjaW5nKHQpLGw9dC5ib3VuZHMsaD1pLmJvdW5kcztpZihuPT09MCYmaC5sZWZ0LWwucmlnaHQ8cisxfHxuPT09OTAmJmgudG9wLWwuYm90dG9tPHIrMXx8bj09PTE4MCYmbC5sZWZ0LWgucmlnaHQ8cisxfHxuPT09MjcwJiZsLnRvcC1oLmJvdHRvbTxyKzEpcmV0dXJuO2UudXBkYXRlUm91dGUoKTtjb25zdCBmPWUuY3VydmU9PT05LGE9ZS5pc09ydGhvZ29uYWwsYz10aGlzLmZyb21WZXJ0ZXgsdT1zLmlzQnVzQWxpZ25tZW50KGMuYWxpZ25tZW50KTtpZihlLnN0YXJ0Um91dGUoKSxuPT09MCl7Y29uc3QgZD1sLnJpZ2h0K3IvMjtpZihmKXtpZihlLnBvaW50c0NvdW50PT09NCl7Y29uc3QgbT1lLmdldFBvaW50KDMpLnk7ZS5zZXRQb2ludEF0KDEsZC0yMCxlLmdldFBvaW50KDEpLnkpLGUuaW5zZXJ0UG9pbnRBdCgyLGQtMjAsbSksZS5pbnNlcnRQb2ludEF0KDMsZCxtKSxlLmluc2VydFBvaW50QXQoNCxkKzIwLG0pLGUuc2V0UG9pbnRBdCg1LGUuZ2V0UG9pbnQoNSkueCxtKX19ZWxzZSBhP3U/ZS5zZXRQb2ludEF0KDMsZS5nZXRQb2ludCgyKS54LGUuZ2V0UG9pbnQoNCkueSk6ZS5wb2ludHNDb3VudD09PTYmJihlLnNldFBvaW50QXQoMixkLGUuZ2V0UG9pbnQoMikueSksZS5zZXRQb2ludEF0KDMsZCxlLmdldFBvaW50KDMpLnkpKTplLnBvaW50c0NvdW50PT09ND9lLmluc2VydFBvaW50QXQoMixkLGUuZ2V0UG9pbnQoMikueSk6ZS5wb2ludHNDb3VudD09PTM/ZS5zZXRQb2ludEF0KDEsZCxlLmdldFBvaW50KDIpLnkpOmUucG9pbnRzQ291bnQ9PT0yJiZlLmluc2VydFBvaW50QXQoMSxkLGUuZ2V0UG9pbnQoMSkueSl9ZWxzZSBpZihuPT09OTApe2NvbnN0IGQ9bC5ib3R0b20rci8yO2lmKGYpe2lmKGUucG9pbnRzQ291bnQ9PT00KXtjb25zdCBtPWUuZ2V0UG9pbnQoMykueDtlLnNldFBvaW50QXQoMSxlLmdldFBvaW50KDEpLngsZC0yMCksZS5pbnNlcnRQb2ludEF0KDIsbSxkLTIwKSxlLmluc2VydFBvaW50QXQoMyxtLGQpLGUuaW5zZXJ0UG9pbnRBdCg0LG0sZCsyMCksZS5zZXRQb2ludEF0KDUsbSxlLmdldFBvaW50KDUpLnkpfX1lbHNlIGE/dT9lLnNldFBvaW50QXQoMyxlLmdldFBvaW50KDIpLngsZS5nZXRQb2ludCg0KS55KTplLnBvaW50c0NvdW50PT09NiYmKGUuc2V0UG9pbnRBdCgyLGUuZ2V0UG9pbnQoMikueCxkKSxlLnNldFBvaW50QXQoMyxlLmdldFBvaW50KDMpLngsZCkpOmUucG9pbnRzQ291bnQ9PT00P2UuaW5zZXJ0UG9pbnRBdCgyLGUuZ2V0UG9pbnQoMikueCxkKTplLnBvaW50c0NvdW50PT09Mz9lLnNldFBvaW50QXQoMSxlLmdldFBvaW50KDIpLngsZCk6ZS5wb2ludHNDb3VudD09PTImJmUuaW5zZXJ0UG9pbnRBdCgxLGUuZ2V0UG9pbnQoMSkueCxkKX1lbHNlIGlmKG49PT0xODApe2NvbnN0IGQ9bC5sZWZ0LXIvMjtpZihmKXtpZihlLnBvaW50c0NvdW50PT09NCl7Y29uc3QgbT1lLmdldFBvaW50KDMpLnk7ZS5zZXRQb2ludEF0KDEsZCsyMCxlLmdldFBvaW50KDEpLnkpLGUuaW5zZXJ0UG9pbnRBdCgyLGQrMjAsbSksZS5pbnNlcnRQb2ludEF0KDMsZCxtKSxlLmluc2VydFBvaW50QXQoNCxkLTIwLG0pLGUuc2V0UG9pbnRBdCg1LGUuZ2V0UG9pbnQoNSkueCxtKX19ZWxzZSBhP3U/ZS5zZXRQb2ludEF0KDMsZS5nZXRQb2ludCgyKS54LGUuZ2V0UG9pbnQoNCkueSk6ZS5wb2ludHNDb3VudD09PTYmJihlLnNldFBvaW50QXQoMixkLGUuZ2V0UG9pbnQoMikueSksZS5zZXRQb2ludEF0KDMsZCxlLmdldFBvaW50KDMpLnkpKTplLnBvaW50c0NvdW50PT09ND9lLmluc2VydFBvaW50QXQoMixkLGUuZ2V0UG9pbnQoMikueSk6ZS5wb2ludHNDb3VudD09PTM/ZS5zZXRQb2ludEF0KDEsZCxlLmdldFBvaW50KDIpLnkpOmUucG9pbnRzQ291bnQ9PT0yJiZlLmluc2VydFBvaW50QXQoMSxkLGUuZ2V0UG9pbnQoMSkueSl9ZWxzZSBpZihuPT09MjcwKXtjb25zdCBkPWwudG9wLXIvMjtpZihmKXtpZihlLnBvaW50c0NvdW50PT09NCl7Y29uc3QgbT1lLmdldFBvaW50KDMpLng7ZS5zZXRQb2ludEF0KDEsZS5nZXRQb2ludCgxKS54LGQrMjApLGUuaW5zZXJ0UG9pbnRBdCgyLG0sZCsyMCksZS5pbnNlcnRQb2ludEF0KDMsbSxkKSxlLmluc2VydFBvaW50QXQoNCxtLGQtMjApLGUuc2V0UG9pbnRBdCg1LG0sZS5nZXRQb2ludCg1KS55KX19ZWxzZSBhP3U/ZS5zZXRQb2ludEF0KDMsZS5nZXRQb2ludCgyKS54LGUuZ2V0UG9pbnQoNCkueSk6ZS5wb2ludHNDb3VudD09PTYmJihlLnNldFBvaW50QXQoMixlLmdldFBvaW50KDIpLngsZCksZS5zZXRQb2ludEF0KDMsZS5nZXRQb2ludCgzKS54LGQpKTplLnBvaW50c0NvdW50PT09ND9lLmluc2VydFBvaW50QXQoMixlLmdldFBvaW50KDIpLngsZCk6ZS5wb2ludHNDb3VudD09PTM/ZS5zZXRQb2ludEF0KDEsZS5nZXRQb2ludCgyKS54LGQpOmUucG9pbnRzQ291bnQ9PT0yJiZlLmluc2VydFBvaW50QXQoMSxlLmdldFBvaW50KDEpLngsZCl9ZS5jb21taXRSb3V0ZSgpfWdldCBmcm9tVmVydGV4KCl7cmV0dXJuIHRoaXMuWmV9c2V0IGZyb21WZXJ0ZXgodCl7dGhpcy5aZSE9PXQmJihEZWJ1ZyYmdCE9PW51bGwmJlUuZSh0LFRyZWVWZXJ0ZXgsVHJlZUVkZ2UsXCJmcm9tVmVydGV4XCIpLHRoaXMuWmU9dCl9Z2V0IHRvVmVydGV4KCl7cmV0dXJuIHRoaXMuUWV9c2V0IHRvVmVydGV4KHQpe3RoaXMuUWUhPT10JiYoRGVidWcmJnQhPT1udWxsJiZVLmUodCxUcmVlVmVydGV4LFRyZWVFZGdlLFwidG9WZXJ0ZXhcIiksdGhpcy5RZT10KX1nZXQgcmVsYXRpdmVQb2ludCgpe3JldHVybiB0aGlzLlZrfXNldCByZWxhdGl2ZVBvaW50KHQpe3RoaXMuVmsuc2V0KHQpfX1jbGFzcyBUaGVtZXN7Y29uc3RydWN0b3IoKXt9c3RhdGljIExpZ2h0PXtjb2xvcnM6e3RleHQ6XCIjMGEwYTBhXCIsY29tbWVudDpcIiNjYThhMDRcIixsaW5rOlwiIzBhMGEwYVwiLGdyb3VwOlwiI2EzYTNhMzQ0XCIsb3V0bGluZTpcIiNhM2EzYTNcIixzZWxlY3Rpb246XCIjMGVhNWU5XCIsZGl2OlwiI2ZmZlwiLGdyaWRNaW5vcjpcIiNlNWU1ZTVcIixncmlkTWFqb3I6XCIjYTNhM2EzXCIsb3ZlcnZpZXdCb3g6XCIjYzAyNmQzXCIsdGVtcExpbms6XCIjMjU2M2ViXCIsdGVtcFBvcnQ6XCIjYzAyNmQzXCIsYWRvcm5tZW50RmlsbDpcIiMwZWE1ZTlcIixhZG9ybm1lbnRTdHJva2U6XCIjMWU0MGFmXCIsZHJhZ1NlbGVjdDpcIiNjMDI2ZDNcIn0sZm9udHM6e25vcm1hbDpcIjEwcHQgc2Fucy1zZXJpZlwiLGJvbGQ6XCJib2xkIDEycHQgc2Fucy1zZXJpZlwifSxudW1iZXJzOntncm91cDoxLHNlbGVjdGlvbjozfSxtYXJnaW5zOntncm91cDpuZXcgTWFyZ2luKDUpfSxhcnJvd2hlYWRzOnt0b0Fycm93OlwiU3RhbmRhcmRcIn19O3N0YXRpYyBEYXJrPXtjb2xvcnM6e3RleHQ6XCIjZjVmNWY1XCIsY29tbWVudDpcIiNmYWNjMTVcIixsaW5rOlwiI2Y1ZjVmNVwiLGdyb3VwOlwiI2EzYTNhMzg4XCIsb3V0bGluZTpcIiNhM2EzYTNcIixzZWxlY3Rpb246XCIjMzhiZGY4XCIsZGl2OlwiIzE3MTcxN1wiLGdyaWRNaW5vcjpcIiMyNjI2MjZcIixncmlkTWFqb3I6XCIjNDA0MDQwXCIsb3ZlcnZpZXdCb3g6XCIjZTg3OWY5XCIsdGVtcExpbms6XCIjNjBhNWZhXCIsdGVtcFBvcnQ6XCIjZTg3OWY5XCIsYWRvcm5tZW50RmlsbDpcIiMzOGJkZjhcIixhZG9ybm1lbnRTdHJva2U6XCIjMjU2M2ViXCIsZHJhZ1NlbGVjdDpcIiNlODc5ZjlcIn0sZm9udHM6e25vcm1hbDpcIjEwcHQgc2Fucy1zZXJpZlwiLGJvbGQ6XCJib2xkIDEycHQgc2Fucy1zZXJpZlwifSxudW1iZXJzOntncm91cDoxLHNlbGVjdGlvbjozfSxtYXJnaW5zOntncm91cDpuZXcgTWFyZ2luKDUpfSxhcnJvd2hlYWRzOnt0b0Fycm93OlwiU3RhbmRhcmRcIn19fWNsYXNzIFRoZW1lTWFuYWdlcntvcz1uZXcgU2V0O2x1PW5ldyBHTWFwO3prPVwibGlnaHRcIjtYaz1cImxpZ2h0XCI7WWs9ITE7RWc9XCJsaWdodFwiO19EPXQ9Pntjb25zdCBpPXQubWF0Y2hlcz9cImRhcmtcIjpcImxpZ2h0XCI7aSE9PXRoaXMuRWcmJih0aGlzLkVnPWksdGhpcy5Yaz09PVwic3lzdGVtXCImJnRoaXMueHcoKSl9O2NvbnN0cnVjdG9yKHQpe3QmJk9iamVjdC5hc3NpZ24odGhpcyx0KSx0Py50aGVtZU1hcHx8KHRoaXMubHUuc2V0KFwibGlnaHRcIix7Y29sb3JzOnsuLi5UaGVtZXMuTGlnaHQuY29sb3JzfSxmb250czp7Li4uVGhlbWVzLkxpZ2h0LmZvbnRzfSxudW1iZXJzOnsuLi5UaGVtZXMuTGlnaHQubnVtYmVyc30sbWFyZ2luczp7Li4uVGhlbWVzLkxpZ2h0Lm1hcmdpbnN9LGFycm93aGVhZHM6ey4uLlRoZW1lcy5MaWdodC5hcnJvd2hlYWRzfX0pLHRoaXMubHUuc2V0KFwiZGFya1wiLHtjb2xvcnM6ey4uLlRoZW1lcy5EYXJrLmNvbG9yc30sZm9udHM6ey4uLlRoZW1lcy5EYXJrLmZvbnRzfSxudW1iZXJzOnsuLi5UaGVtZXMuRGFyay5udW1iZXJzfSxtYXJnaW5zOnsuLi5UaGVtZXMuRGFyay5tYXJnaW5zfSxhcnJvd2hlYWRzOnsuLi5UaGVtZXMuRGFyay5hcnJvd2hlYWRzfX0pKSxyb290Lm1hdGNoTWVkaWEmJih0aGlzLkVnPXJvb3QubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIikubWF0Y2hlcz9cImRhcmtcIjpcImxpZ2h0XCIpfWdldCB0aGVtZU1hcCgpe3JldHVybiB0aGlzLmx1fXNldCB0aGVtZU1hcCh0KXt0aGlzLmx1IT09dCYmKHRoaXMubHU9dCx0aGlzLnh3KCkpfWdldCBkZWZhdWx0VGhlbWUoKXtyZXR1cm4gdGhpcy56a31zZXQgZGVmYXVsdFRoZW1lKHQpe3RoaXMuemshPT10JiYoVS5pKHQsXCJzdHJpbmdcIixUaGVtZU1hbmFnZXIsXCJkZWZhdWx0VGhlbWVcIiksdGhpcy56az10LHRoaXMueHcoKSl9Z2V0IGN1cnJlbnRUaGVtZSgpe3JldHVybiB0aGlzLlhrfXNldCBjdXJyZW50VGhlbWUodCl7dGhpcy5YayE9PXQmJihVLmkodCxcInN0cmluZ1wiLFRoZW1lTWFuYWdlcixcImN1cnJlbnRUaGVtZVwiKSx0aGlzLlhrPXQsdGhpcy54dygpKX1nZXQgY2hhbmdlc0RpdkJhY2tncm91bmQoKXtyZXR1cm4gdGhpcy5Za31zZXQgY2hhbmdlc0RpdkJhY2tncm91bmQodCl7aWYodGhpcy5ZayE9PXQmJih0aGlzLllrPXQsdCkpZm9yKGNvbnN0IGUgb2YgdGhpcy5vcyllLnNldERpdkJhY2tncm91bmQodGhpcy5maW5kVmFsdWUoXCJkaXZcIixcIlwiLFwiZmlsbFwiKSksZS5PKFwiVGhlbWVDaGFuZ2VkXCIsdGhpcyl9Z2V0IHByZWZlcnJlZENvbG9yU2NoZW1lKCl7cmV0dXJuIHRoaXMuRWd9YWRkRGlhZ3JhbSh0KXtyZXR1cm4gdGhpcy5vcy5hZGQodCksdGhpcy5tQyh0KSx0aGlzfXJlbW92ZURpYWdyYW0odCl7cmV0dXJuIHRoaXMub3MuZGVsZXRlKHQpLHRoaXMubUModCksdGhpc31tUigpe3RoaXMub3Muc2l6ZT09PTAmJnJvb3QubWF0Y2hNZWRpYSYmcm9vdC5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKT8uYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLHRoaXMuX0QpfXBSKCl7dGhpcy5vcy5zaXplPT09MCYmcm9vdC5tYXRjaE1lZGlhJiZyb290Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpPy5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsdGhpcy5fRCl9c2V0KHQsaSl7dD09PVwiXCImJih0PXRoaXMuemspLHQ9PT1cInN5c3RlbVwiJiYodD10aGlzLkVnKTtsZXQgZT10aGlzLmx1LmdldCh0KTtyZXR1cm4gZT9lPXRoaXMudEYoZSxpKTplPWksdGhpcy5sdS5zZXQodCxlKSx0aGlzLnh3KCksdGhpc31maW5kVmFsdWUodCxpLGUpe3JldHVybiB0aGlzLmdldFZhbHVlKHRoaXMuZmluZFRoZW1lKHRoaXMuY3VycmVudFRoZW1lKSx0LGksZSl8fHRoaXMuZ2V0VmFsdWUodGhpcy5maW5kVGhlbWUodGhpcy5kZWZhdWx0VGhlbWUpLHQsaSxlKX1nZXRWYWx1ZSh0LGksZSxzKXtpZighdClyZXR1cm47ZT09bnVsbCYmKGU9XCJcIik7bGV0IG49dDtjb25zdCBvPWw9PntpZihuPT09dm9pZCAwfHxsPT09XCJcIilyZXR1cm47aWYodHlwZW9mIGw9PVwibnVtYmVyXCJ8fCEoQXJyYXkuaXNBcnJheShsKXx8bC5pbmNsdWRlcyhcIi5cIikpKXJldHVybiBuW2xdO2NvbnN0IGg9QXJyYXkuaXNBcnJheShsKT9sOmwuc3BsaXQoXCIuXCIpO2ZvcihsZXQgZj0wO2Y8aC5sZW5ndGg7ZisrKXtjb25zdCBhPWhbZl07aWYoYSE9PVwiXCImJihuPW5bYV0sbj09PXZvaWQgMCkpcmV0dXJufXJldHVybiBufSxyPSgpPT57aWYoIShlIT09XCJcIiYmKG49byhlKSxuPT09dm9pZCAwKSkpcmV0dXJuIEFycmF5LmlzQXJyYXkobikmJnR5cGVvZiBpPT1cIm51bWJlclwiP249bltpJW4ubGVuZ3RoXTpuPW8oaSksbn07aWYobj1yKCksbj09PXZvaWQgMCYmdHlwZW9mIHM9PVwic3RyaW5nXCImJnMubGVuZ3RoPjApe2xldCBsPXQudGFyZ2V0UHJvcGVydHlNYXA/LmdldChzKTtpZihsP249dFtsXToobD1UaGVtZU1hbmFnZXIueUUuZ2V0KHMpLG49bD90W2xdOnQuY29sb3JzKSxuPXIoKSxuIT09dm9pZCAwKXJldHVybiBufXJldHVybiBufWZpbmRUaGVtZSh0KXtyZXR1cm4gdGhpcy50aGVtZU1hcC5nZXQodD09PVwic3lzdGVtXCI/dGhpcy5FZzp0KX1tQyh0KXtjb25zdCBpPXQuc2tpcHNVbmRvTWFuYWdlcjt0LnNraXBzVW5kb01hbmFnZXI9ITAsdC51cGRhdGVBbGxUaGVtZUJpbmRpbmdzKCksdGhpcy5ZayYmdC5zZXREaXZCYWNrZ3JvdW5kKHRoaXMuZmluZFZhbHVlKFwiZGl2XCIsXCJcIixcImZpbGxcIikpLHQuc2tpcHNVbmRvTWFuYWdlcj1pLHQuTyhcIlRoZW1lQ2hhbmdlZFwiLHRoaXMpfXh3KCl7Zm9yKGNvbnN0IHQgb2YgdGhpcy5vcyl0aGlzLm1DKHQpfXRGKHQsaSl7Zm9yKGNvbnN0IGUgaW4gaSlpZihVLmJ3KGksZSkpdHJ5e2lbZV0uY29uc3RydWN0b3I9PT1PYmplY3Q/dFtlXT10aGlzLnRGKHRbZV0/P3t9LGlbZV0pOnRbZV09aVtlXX1jYXRjaHtkZWxldGUgdFtlXX1yZXR1cm4gdH1zdGF0aWMgeUU9bmV3IE1hcChbW1wiYmFja2dyb3VuZFwiLFwiY29sb3JzXCJdLFtcImRlZmF1bHRDb2x1bW5TZXBhcmF0b3JTdHJva2VcIixcImNvbG9yc1wiXSxbXCJkZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlXCIsXCJjb2xvcnNcIl0sW1wic2hhZG93Q29sb3JcIixcImNvbG9yc1wiXSxbXCJmaWxsXCIsXCJjb2xvcnNcIl0sW1wic3Ryb2tlXCIsXCJjb2xvcnNcIl0sW1wiZm9udFwiLFwiZm9udHNcIl0sW1wiYW5nbGVcIixcIm51bWJlcnNcIl0sW1wiZnJvbUVuZFNlZ21lbnRMZW5ndGhcIixcIm51bWJlcnNcIl0sW1wiZnJvbVNob3J0TGVuZ3RoXCIsXCJudW1iZXJzXCJdLFtcImhlaWdodFwiLFwibnVtYmVyc1wiXSxbXCJvcGFjaXR5XCIsXCJudW1iZXJzXCJdLFtcInNjYWxlXCIsXCJudW1iZXJzXCJdLFtcInRvRW5kU2VnbWVudExlbmd0aFwiLFwibnVtYmVyc1wiXSxbXCJ0b1Nob3J0TGVuZ3RoXCIsXCJudW1iZXJzXCJdLFtcIndpZHRoXCIsXCJudW1iZXJzXCJdLFtcImRlZmF1bHRDb2x1bW5TZXBhcmF0b3JTdHJva2VXaWR0aFwiLFwibnVtYmVyc1wiXSxbXCJkZWZhdWx0Um93U2VwYXJhdG9yU3Ryb2tlV2lkdGhcIixcIm51bWJlcnNcIl0sW1wic2hhZG93Qmx1clwiLFwibnVtYmVyc1wiXSxbXCJjb3JuZXJcIixcIm51bWJlcnNcIl0sW1wiY3VydmluZXNzXCIsXCJudW1iZXJzXCJdLFtcInNtb290aG5lc3NcIixcIm51bWJlcnNcIl0sW1wicGFyYW1ldGVyMVwiLFwibnVtYmVyc1wiXSxbXCJwYXJhbWV0ZXIyXCIsXCJudW1iZXJzXCJdLFtcInN0cm9rZVdpZHRoXCIsXCJudW1iZXJzXCJdLFtcInN0cm9rZURhc2hPZmZzZXRcIixcIm51bWJlcnNcIl0sW1wibWF4TGluZXNcIixcIm51bWJlcnNcIl0sW1wic3BhY2luZ0Fib3ZlXCIsXCJudW1iZXJzXCJdLFtcInNwYWNpbmdCZWxvd1wiLFwibnVtYmVyc1wiXSxbXCJwb3NpdGlvblwiLFwicG9pbnRzXCJdLFtcInNoYWRvd09mZnNldFwiLFwicG9pbnRzXCJdLFtcImRlc2lyZWRTaXplXCIsXCJzaXplc1wiXSxbXCJtYXhTaXplXCIsXCJzaXplc1wiXSxbXCJtaW5TaXplXCIsXCJzaXplc1wiXSxbXCJtYXJnaW5cIixcIm1hcmdpbnNcIl0sW1wiZGVmYXVsdFNlcGFyYXRvclBhZGRpbmdcIixcIm1hcmdpbnNcIl0sW1wicGFkZGluZ1wiLFwibWFyZ2luc1wiXSxbXCJhbGlnbm1lbnRcIixcInNwb3RzXCJdLFtcImFsaWdubWVudEZvY3VzXCIsXCJzcG90c1wiXSxbXCJmcm9tU3BvdFwiLFwic3BvdHNcIl0sW1widG9TcG90XCIsXCJzcG90c1wiXSxbXCJkZWZhdWx0QWxpZ25tZW50XCIsXCJzcG90c1wiXSxbXCJzcG90MVwiLFwic3BvdHNcIl0sW1wic3BvdDJcIixcInNwb3RzXCJdLFtcInZlcnRpY2FsQWxpZ25tZW50XCIsXCJzcG90c1wiXSxbXCJpbWFnZUFsaWdubWVudFwiLFwic3BvdHNcIl0sW1wiZnJvbUFycm93XCIsXCJhcnJvd2hlYWRzXCJdLFtcInRvQXJyb3dcIixcImFycm93aGVhZHNcIl1dKX1jbGFzcyBSb3V0ZXJ7THQ7QztYaTtwbDtjb25zdHJ1Y3Rvcigpe3RoaXMuQz1EaWFncmFtLndtKCksdGhpcy5MdD1cIlwiLHRoaXMuWGk9ITAsdGhpcy5wbD0hMH1nZXQgbmFtZSgpe3JldHVybiB0aGlzLkx0fXNldCBuYW1lKHQpe3RoaXMuTHQ9dH1nZXQgaXNFbmFibGVkKCl7cmV0dXJuIHRoaXMuWGl9c2V0IGlzRW5hYmxlZCh0KXt0aGlzLlhpPXR9Z2V0IGlzUmVhbHRpbWUoKXtyZXR1cm4gdGhpcy5wbH1zZXQgaXNSZWFsdGltZSh0KXt0aGlzLnBsPXR9Z2V0IGRpYWdyYW0oKXtyZXR1cm4gdGhpcy5DfXNldCBkaWFncmFtKHQpe3RoaXMuQyE9PXQmJih0aGlzLkM9dCx0Lk5sPSEwLHQucmVxdWVzdFVwZGF0ZSgpKX1pbnZhbGlkYXRlUm91dGVyKCl7dGhpcy5DIT09bnVsbCYmKHRoaXMuQy5ObD0hMCx0aGlzLkMucmVxdWVzdFVwZGF0ZSgpKX1jYW5Sb3V0ZSh0KXtpZighdGhpcy5pc0VuYWJsZWQpcmV0dXJuITE7Y29uc3QgaT10aGlzLmRpYWdyYW07cmV0dXJuIShpJiYoIXRoaXMuaXNSZWFsdGltZSYmaS5rdXx8aS5hbmltYXRpb25NYW5hZ2VyLmlzVGlja2luZykpfXJvdXRlTGlua3ModCxpKXt9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5uYW1lIT09XCJcIj90aGlzLm5hbWUrXCIgUm91dGVyXCI6VS5Cbih0aGlzLmNvbnN0cnVjdG9yKX19Y2xhc3MgQXZvaWRzTm9kZXNSb3V0ZXIgZXh0ZW5kcyBSb3V0ZXJ7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLm5hbWU9XCJBdm9pZHNOb2Rlc1wiLHQmJk9iamVjdC5hc3NpZ24odGhpcyx0KX1jYW5Sb3V0ZSh0KXtyZXR1cm4odCBpbnN0YW5jZW9mIERpYWdyYW0/dC5xbTp0LmRpYWdyYW0ucW0pP3N1cGVyLmNhblJvdXRlKHQpOiExfXJvdXRlTGlua3ModCxpKXtjb25zdCBlPWkgaW5zdGFuY2VvZiBEaWFncmFtP251bGw6aSxzPXQuaXRlcmF0b3Isbj10aGlzLmRpYWdyYW0uZ2V0UG9zaXRpb25zKCEwLGUsbnVsbCk7Zm9yKDtzLm5leHQoKTspe2NvbnN0IG89cy52YWx1ZTtpZighby5pc0F2b2lkaW5nfHxvLmNvbnRhaW5pbmdHcm91cCE9PWV8fG8udG9Ob2RlPT09bnVsbHx8by5mcm9tTm9kZT09PW51bGx8fG8ucG9pbnRzQ291bnQ8NCljb250aW51ZTtvLnN0YXJ0Um91dGUoKTtjb25zdCByPW8ucG9pbnRzQ291bnQsbD1vLmdldFBvaW50KDEpLGg9by5nZXRQb2ludChyLTIpLGY9by5mcm9tTm9kZS5hY3R1YWxCb3VuZHMuY29weSgpO2YuaW5mbGF0ZShMaW5rLnFhLExpbmsucWEpLGYudW5pb25Qb2ludChvLmdldFBvaW50KDApKTtjb25zdCBhPW8udG9Ob2RlLmFjdHVhbEJvdW5kcy5jb3B5KCk7YS5pbmZsYXRlKExpbmsucWEsTGluay5xYSksYS51bmlvblBvaW50KG8uZ2V0UG9pbnQoci0xKSksdGhpcy53RShvLGYsYSxuKSYmdGhpcy54RShvLGwsby5iTixoLG8ua04sZixhLG4pLG8uY29tbWl0Um91dGUoKX19d0UodCxpLGUscyl7Y29uc3Qgbj10LmRpYWdyYW0sbz10LnBvaW50c0NvdW50O2lmKG49PT1udWxsfHx0LmZyb21Ob2RlPT09dC50b05vZGV8fHQubGF5ZXIuaXNUZW1wb3Jhcnl8fGkuY29udGFpbnNQb2ludCh0LmdldFBvaW50KG8tMSkpJiYhdC50b05vZGUuaXNNZW1iZXJPZih0LmZyb21Ob2RlKXx8ZS5jb250YWluc1BvaW50KHQuZ2V0UG9pbnQoMCkpJiYhdC5mcm9tTm9kZS5pc01lbWJlck9mKHQudG9Ob2RlKXx8IXQuaXNPcnRob2dvbmFsKXJldHVybiExO2lmKHQuc2VnbWVudEluZGV4PT09MTcpcmV0dXJuITA7Y29uc3Qgcj10LmdldFBvaW50KDEpLGw9dC5nZXRQb2ludChvLTIpLGg9dC5nZXRQb2ludCgyKTtpZighcy5pc1Vub2NjdXBpZWQoTWF0aC5taW4oci54LGgueCksTWF0aC5taW4oci55LGgueSksTWF0aC5hYnMoci54LWgueCksTWF0aC5hYnMoci55LWgueSkpKXJldHVybiEwO2ZvcihsZXQgYT0yO2E8by0zO2ErKyl7Y29uc3QgYz10LmdldFBvaW50KGEpLHU9dC5nZXRQb2ludChhKzEpO2lmKCFzLmlzVW5vY2N1cGllZChNYXRoLm1pbihjLngsdS54KSxNYXRoLm1pbihjLnksdS55KSxNYXRoLmFicyhjLngtdS54KSxNYXRoLmFicyhjLnktdS55KSkpcmV0dXJuITB9Y29uc3QgZj10LmdldFBvaW50KG8tMyk7cmV0dXJuIXMuaXNVbm9jY3VwaWVkKE1hdGgubWluKGYueCxsLngpLE1hdGgubWluKGYueSxsLnkpLE1hdGguYWJzKGYueC1sLngpLE1hdGguYWJzKGYueS1sLnkpKX14RSh0LGksZSxzLG4sbyxyLGwpe2NvbnN0IGg9dC5kaWFncmFtLGY9aSxhPXM7bGV0IGM9bnVsbCx1PW51bGw7aWYoaC5pc1ZpcnR1YWxpemVkKXtjb25zdCBnPWwuYm91bmRzLmNvcHkoKSxwPXQuZ2V0UG9pbnQoMiksdz10LmdldFBvaW50KHQucG9pbnRzQ291bnQtMyk7Zy5pbmZsYXRlKC1sLmNlbGxXaWR0aCwtbC5jZWxsSGVpZ2h0KTtjb25zdCB4PVBvaW50LmEoKTtsLllkKGkueCxpLnkpfHwoR2VvLmJsKGcueCxnLnksZy54K2cud2lkdGgsZy55K2cuaGVpZ2h0LGkueCxpLnkscC54LHAueSx4KT8oYz1pPXguY29weSgpLGU9eC5kaXJlY3Rpb25Qb2ludChwKSk6R2VvLmJsKGcueCxnLnksZy54K2cud2lkdGgsZy55K2cuaGVpZ2h0LHAueCxwLnksdy54LHcueSx4KT8oYz1pPXguY29weSgpLGU9eC5kaXJlY3Rpb25Qb2ludCh3KSk6R2VvLmJsKGcueCxnLnksZy54K2cud2lkdGgsZy55K2cuaGVpZ2h0LHcueCx3Lnkscy54LHMueSx4KSYmKGM9aT14LmNvcHkoKSxlPXguZGlyZWN0aW9uUG9pbnQocykpKSxsLllkKHMueCxzLnkpfHwoR2VvLmJsKGcueCxnLnksZy54K2cud2lkdGgsZy55K2cuaGVpZ2h0LHMueCxzLnksdy54LHcueSx4KT8odT1zPXguY29weSgpLG49dy5kaXJlY3Rpb25Qb2ludCh4KSk6R2VvLmJsKGcueCxnLnksZy54K2cud2lkdGgsZy55K2cuaGVpZ2h0LHcueCx3LnkscC54LHAueSx4KT8odT1zPXguY29weSgpLG49cC5kaXJlY3Rpb25Qb2ludCh4KSk6R2VvLmJsKGcueCxnLnksZy54K2cud2lkdGgsZy55K2cuaGVpZ2h0LHAueCxwLnksaS54LGkueSx4KSYmKHU9cz14LmNvcHkoKSxuPWkuZGlyZWN0aW9uUG9pbnQoeCkpKSxQb2ludC5vKHgpfWNvbnN0IGQ9by5jb3B5KCkudW5pb25SZWN0KHIpO2QuaW5mbGF0ZShsLmNlbGxXaWR0aCpsLlpmLGwuY2VsbEhlaWdodCpsLlpmKSxsLlJUKGksZSxzLG4sZCwhMCk7bGV0IG09bC51byhzLngscy55KTtpZighbC5DeSYmbT49UG9zaXRpb25BcnJheS5YZCYmKGwuY0woKSxkLmluZmxhdGUobC5jZWxsV2lkdGgqbC5zUCxsLmNlbGxIZWlnaHQqbC5uUCksbC5SVChpLGUscyxuLGQsITEpLG09bC51byhzLngscy55KSksIWwuQ3kmJm08UG9zaXRpb25BcnJheS5YZCYmIWwuVk8ocy54LHMueSkpe3QucG9pbnRzLnJlbW92ZVJhbmdlKDIsdC5wb2ludHNDb3VudC0zKSx0aGlzLnBDKHQsbCxzLngscy55LG4sITApO2NvbnN0IGc9MCxwPTkwLHc9MTgwLHg9MjcwLGs9dC5nZXRQb2ludCgyKTtpZih0LnBvaW50c0NvdW50PDQpZT09PWd8fGU9PT13PyhrLng9aS54LGsueT1zLnkpOihrLng9cy54LGsueT1pLnkpLHQuc2V0UG9pbnRBdCgyLGsueCxrLnkpLHQuaW5zZXJ0UG9pbnRBdCgzLGsueCxrLnkpO2Vsc2V7Y29uc3QgYj10LmdldFBvaW50KDMpO2lmKGU9PT1nfHxlPT09dylpZihHZW8uZyhrLngsYi54KSl7Y29uc3QgUz1lPT09Zz9NYXRoLm1heChrLngsaS54KTpNYXRoLm1pbihrLngsaS54KTt0LnNldFBvaW50QXQoMixTLGkueSksdC5zZXRQb2ludEF0KDMsUyxiLnkpfWVsc2UgR2VvLmcoay55LGIueSk/KE1hdGguYWJzKGkueS1rLnkpPD1sLmNlbGxIZWlnaHQvMiYmKHQuc2V0UG9pbnRBdCgyLGsueCxpLnkpLHQuc2V0UG9pbnRBdCgzLGIueCxpLnkpKSx0Lmluc2VydFBvaW50QXQoMixrLngsaS55KSk6dC5zZXRQb2ludEF0KDIsaS54LGsueSk7ZWxzZSBpZihlPT09cHx8ZT09PXgpaWYoR2VvLmcoay55LGIueSkpe2NvbnN0IFM9ZT09PXA/TWF0aC5tYXgoay55LGkueSk6TWF0aC5taW4oay55LGkueSk7dC5zZXRQb2ludEF0KDIsaS54LFMpLHQuc2V0UG9pbnRBdCgzLGIueCxTKX1lbHNlIEdlby5nKGsueCxiLngpPyhNYXRoLmFicyhpLngtay54KTw9bC5jZWxsV2lkdGgvMiYmKHQuc2V0UG9pbnRBdCgyLGkueCxrLnkpLHQuc2V0UG9pbnRBdCgzLGkueCxiLnkpKSx0Lmluc2VydFBvaW50QXQoMixpLngsay55KSk6dC5zZXRQb2ludEF0KDIsay54LGkueSl9aWYoYyE9PW51bGwpe2NvbnN0IGI9dC5nZXRQb2ludCgxKSxTPXQuZ2V0UG9pbnQoMik7Yi54IT09Uy54JiZiLnkhPT1TLnk/ZT09PWd8fGU9PT13P3QuaW5zZXJ0UG9pbnRBdCgyLGIueCxTLnkpOnQuaW5zZXJ0UG9pbnRBdCgyLFMueCxiLnkpOmU9PT1nfHxlPT09dz90Lmluc2VydFBvaW50QXQoMixmLngsYy55KTp0Lmluc2VydFBvaW50QXQoMixjLngsZi55KX11IT09bnVsbCYmKG49PT1nfHxuPT09dz90Lmluc2VydFBvaW50QXQodC5wb2ludHNDb3VudC0yLGEueCx1LnkpOnQuaW5zZXJ0UG9pbnRBdCh0LnBvaW50c0NvdW50LTIsdS54LGEueSkpfX1wQyh0LGksZSxzLG4sbyl7Y29uc3QgYT1pLmNlbGxXaWR0aCxjPWkuY2VsbEhlaWdodDtsZXQgdT1pLnVvKGUscyksZD1lLG09cyxnPWQscD1tO2ZvcihuPT09MD9nKz1hOm49PT05MD9wKz1jOm49PT0xODA/Zy09YTpwLT1jLHQuUE4mJnU+UG9zaXRpb25BcnJheS5KYSYmaS51byhnLHApIT09dS0xJiYoaS51byhkLWEsbSk9PT11LTE/KG49MTgwLGc9ZC1hLHA9bSk6aS51byhkK2EsbSk9PT11LTE/KG49MCxnPWQrYSxwPW0pOmkudW8oZCxtLWMpPT09dS0xPyhuPTI3MCxnPWQscD1tLWMpOmkudW8oZCxtK2MpPT09dS0xJiYobj05MCxnPWQscD1tK2MpKTt1PlBvc2l0aW9uQXJyYXkuSmEmJmkudW8oZyxwKT09PXUtMTspZD1nLG09cCxuPT09MD9nKz1hOm49PT05MD9wKz1jOm49PT0xODA/Zy09YTpwLT1jLHUtPTE7aWYobz91PlBvc2l0aW9uQXJyYXkuSmEmJihuPT09MTgwfHxuPT09MD9kPU1hdGguZmxvb3IoZC9hKSphK2EvMjoobj09PTkwfHxuPT09MjcwKSYmKG09TWF0aC5mbG9vcihtL2MpKmMrYy8yKSk6KGQ9TWF0aC5mbG9vcihkL2EpKmErYS8yLG09TWF0aC5mbG9vcihtL2MpKmMrYy8yKSx1PlBvc2l0aW9uQXJyYXkuSmEpe2xldCB3PW4seD1kLGs9bTtpZihuPT09MD8odz05MCxrKz1jKTpuPT09OTA/KHc9MTgwLHgtPWEpOm49PT0xODA/KHc9MjcwLGstPWMpOm49PT0yNzAmJih3PTAseCs9YSksaS51byh4LGspPT09dS0xKXRoaXMucEModCxpLHgsayx3LCExKTtlbHNle2xldCBTPWQsTT1tO249PT0wPyh3PTI3MCxNLT1jKTpuPT09OTA/KHc9MCxTKz1hKTpuPT09MTgwPyh3PTkwLE0rPWMpOm49PT0yNzAmJih3PTE4MCxTLT1hKSxpLnVvKFMsTSk9PT11LTEmJnRoaXMucEModCxpLFMsTSx3LCExKX19dC5pbnNlcnRQb2ludEF0KHQucG9pbnRzQ291bnQtMixkLG0pfX1Ub29sTWFuYWdlci5wcm90b3R5cGUuaW5pdGlhbGl6ZVN0YW5kYXJkVG9vbHM9ZnVuY3Rpb24oKXt0aGlzLnRpKFwiQWN0aW9uXCIsbmV3IEFjdGlvblRvb2wsdGhpcy5tb3VzZURvd25Ub29scyksdGhpcy50aShcIlJlbGlua2luZ1wiLG5ldyBSZWxpbmtpbmdUb29sLHRoaXMubW91c2VEb3duVG9vbHMpLHRoaXMudGkoXCJMaW5rUmVzaGFwaW5nXCIsbmV3IExpbmtSZXNoYXBpbmdUb29sLHRoaXMubW91c2VEb3duVG9vbHMpLHRoaXMudGkoXCJSb3RhdGluZ1wiLG5ldyBSb3RhdGluZ1Rvb2wsdGhpcy5tb3VzZURvd25Ub29scyksdGhpcy50aShcIlJlc2l6aW5nXCIsbmV3IFJlc2l6aW5nVG9vbCx0aGlzLm1vdXNlRG93blRvb2xzKSx0aGlzLnRpKFwiTGlua2luZ1wiLG5ldyBMaW5raW5nVG9vbCx0aGlzLm1vdXNlTW92ZVRvb2xzKSx0aGlzLnRpKFwiRHJhZ2dpbmdcIixuZXcgRHJhZ2dpbmdUb29sLHRoaXMubW91c2VNb3ZlVG9vbHMpLHRoaXMudGkoXCJEcmFnU2VsZWN0aW5nXCIsbmV3IERyYWdTZWxlY3RpbmdUb29sLHRoaXMubW91c2VNb3ZlVG9vbHMpLHRoaXMudGkoXCJQYW5uaW5nXCIsbmV3IFBhbm5pbmdUb29sLHRoaXMubW91c2VNb3ZlVG9vbHMpLHRoaXMudGkoXCJDb250ZXh0TWVudVwiLG5ldyBDb250ZXh0TWVudVRvb2wsdGhpcy5tb3VzZVVwVG9vbHMpLHRoaXMudGkoXCJUZXh0RWRpdGluZ1wiLG5ldyBUZXh0RWRpdGluZ1Rvb2wsdGhpcy5tb3VzZVVwVG9vbHMpLHRoaXMudGkoXCJDbGlja0NyZWF0aW5nXCIsbmV3IENsaWNrQ3JlYXRpbmdUb29sLHRoaXMubW91c2VVcFRvb2xzKSx0aGlzLnRpKFwiQ2xpY2tTZWxlY3RpbmdcIixuZXcgQ2xpY2tTZWxlY3RpbmdUb29sLHRoaXMubW91c2VVcFRvb2xzKX0sRGlhZ3JhbS5WMihcIkdyYXBoTGlua3NNb2RlbFwiLEdyYXBoTGlua3NQYXJ0TWFuYWdlciksRGlhZ3JhbS5WMihcIlRyZWVNb2RlbFwiLFRyZWVQYXJ0TWFuYWdlcik7Y29uc3Qgb2xkR289cm9vdC5nbyxnbz17Z2V0IHZlcnNpb24oKXtyZXR1cm4gRGlhZ3JhbS52ZXJzaW9ufSxHcm91cCxMaXN0LFNldDpHU2V0LE1hcDpHTWFwLFBvaW50LFNpemUsUmVjdCxNYXJnaW4sU3BvdCxHZW9tZXRyeSxQYXRoRmlndXJlLFBhdGhTZWdtZW50LElucHV0RXZlbnQsRGlhZ3JhbUV2ZW50LENoYW5nZWRFdmVudCxNb2RlbCxHcmFwaExpbmtzTW9kZWwsVHJlZU1vZGVsLEJpbmRpbmcsVGhlbWVCaW5kaW5nLFRyYW5zYWN0aW9uLFVuZG9NYW5hZ2VyLENvbW1hbmRIYW5kbGVyLFRvb2wsRHJhZ2dpbmdUb29sLERyYWdnaW5nSW5mbyxEcmFnZ2luZ09wdGlvbnMsTGlua2luZ0Jhc2VUb29sLExpbmtpbmdUb29sLFJlbGlua2luZ1Rvb2wsTGlua1Jlc2hhcGluZ1Rvb2wsUmVzaXppbmdUb29sLFJvdGF0aW5nVG9vbCxDbGlja1NlbGVjdGluZ1Rvb2wsQWN0aW9uVG9vbCxDbGlja0NyZWF0aW5nVG9vbCxIVE1MSW5mbyxDb250ZXh0TWVudVRvb2wsRHJhZ1NlbGVjdGluZ1Rvb2wsUGFubmluZ1Rvb2wsVGV4dEVkaXRpbmdUb29sLFRvb2xNYW5hZ2VyLEFuaW1hdGlvbixBbmltYXRpb25NYW5hZ2VyLEFuaW1hdGlvblRyaWdnZXIsTGF5ZXIsRGlhZ3JhbSxQYWxldHRlLE92ZXJ2aWV3LEJydXNoLEdyYXBoT2JqZWN0LFBhbmVsLFJvd0NvbHVtbkRlZmluaXRpb24sU2hhcGUsVGV4dEJsb2NrLFBpY3R1cmUsUGFydCxBZG9ybm1lbnQsTm9kZSxMaW5rLFBsYWNlaG9sZGVyLExheW91dCxMYXlvdXROZXR3b3JrLExheW91dFZlcnRleCxMYXlvdXRFZGdlLEdyaWRMYXlvdXQsUGFuZWxMYXlvdXQsQ2lyY3VsYXJMYXlvdXQsQ2lyY3VsYXJOZXR3b3JrLENpcmN1bGFyVmVydGV4LENpcmN1bGFyRWRnZSxGb3JjZURpcmVjdGVkTGF5b3V0LEZvcmNlRGlyZWN0ZWROZXR3b3JrLEZvcmNlRGlyZWN0ZWRWZXJ0ZXgsRm9yY2VEaXJlY3RlZEVkZ2UsTGF5ZXJlZERpZ3JhcGhMYXlvdXQsTGF5ZXJlZERpZ3JhcGhOZXR3b3JrLExheWVyZWREaWdyYXBoVmVydGV4LExheWVyZWREaWdyYXBoRWRnZSxUcmVlTGF5b3V0LFRyZWVOZXR3b3JrLFRyZWVWZXJ0ZXgsVHJlZUVkZ2UsVGhlbWVzLFRoZW1lTWFuYWdlcixSb3V0ZXIsQW5pbWF0aW9uU3R5bGUsQXV0b1NjYWxlLEN5Y2xlTW9kZSxGbGlwLFRleHRGb3JtYXQsSW1hZ2VTdHJldGNoLExheW91dENvbmRpdGlvbnMsTGlua0FkanVzdGluZyxDdXJ2ZSxSb3V0aW5nLE9yaWVudGF0aW9uLFRleHRPdmVyZmxvdyxQb3J0U3ByZWFkaW5nLFNjcm9sbE1vZGUsQ29sbGFwc2VQb2xpY3ksU2l6aW5nLFRyaWdnZXJTdGFydCxTdHJldGNoLFZpZXdib3hTdHJldGNoLFdyYXAsQnJ1c2hUeXBlLENvbG9yU3BhY2UsR2VvbWV0cnlTdHJldGNoLEdlb21ldHJ5VHlwZSxTZWdtZW50VHlwZSxCaW5kaW5nTW9kZSxDaGFuZ2VUeXBlLENpcmN1bGFyQXJyYW5nZW1lbnQsQ2lyY3VsYXJEaXJlY3Rpb24sQ2lyY3VsYXJOb2RlRGlhbWV0ZXJGb3JtdWxhLENpcmN1bGFyU29ydGluZyxHcmlkQWxpZ25tZW50LEdyaWRBcnJhbmdlbWVudCxHcmlkU29ydGluZyxMYXllcmVkRGlncmFwaEFnZ3Jlc3NpdmUsTGF5ZXJlZERpZ3JhcGhBbGlnbixMYXllcmVkRGlncmFwaEN5Y2xlUmVtb3ZlLExheWVyZWREaWdyYXBoSW5pdCxMYXllcmVkRGlncmFwaExheWVyaW5nLExheWVyZWREaWdyYXBoUGFjayxUcmVlQWxpZ25tZW50LFRyZWVBcnJhbmdlbWVudCxUcmVlQ29tcGFjdGlvbixUcmVlTGF5ZXJTdHlsZSxUcmVlUGF0aCxUcmVlU29ydGluZyxUcmVlU3R5bGUsR2VzdHVyZU1vZGUsTGlua2luZ0RpcmVjdGlvbixSZXNoYXBpbmdCZWhhdmlvcixUZXh0RWRpdGluZ0FjY2VwdCxUZXh0RWRpdGluZ1N0YXJ0aW5nLFRleHRFZGl0aW5nU3RhdGUsV2hlZWxNb2RlfTtmb3IoY29uc3QgeSBpbiBnbyl7Y29uc3QgdD1nb1t5XTtVLnJ0KHQpJiZ0IT09VGV4dEZvcm1hdCYmKHQuY2xhc3NOYW1lPXkpfVUuVyhvbGRHbykmJm9sZEdvLnZlcnNpb24mJlUubnQoXCJXQVJOSU5HOiBhIGBnb2Agb2JqZWN0IG9uIHRoZSByb290IG9iamVjdCBpcyBhbHJlYWR5IGRlZmluZWQuICBcIisoXCJEZWJ1Z1wiaW4gb2xkR28/XCJkZWJ1ZyBcIjpcIlwiKStcInZlcnNpb246IFwiK29sZEdvLnZlcnNpb24rXCIsIHJlcGxhY2VkIHdpdGggdmVyc2lvbjogXCIrZ28udmVyc2lvbiksRGlhZ3JhbS5wcm90b3R5cGUuZ289Z28scm9vdC5nbz1nbyxnby5EZWJ1Zz1EZWJ1ZyxEZWJ1Zy5hdHRhY2hSZWFkb25seVdhcm5pbmdzKGdvKTtcbn0pKCk7XG5cblxuICAgICAgICBleHBvcnQgZGVmYXVsdCAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIikgPyBnbG9iYWwuZ28gOiBzZWxmLmdvO1xuICBleHBvcnQgY29uc3QgZ28gPSAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIikgPyBnbG9iYWwuZ28gOiBzZWxmLmdvO1xuICBleHBvcnQgY29uc3QgR3JvdXAgPSBnby5Hcm91cDtcbiAgZXhwb3J0IGNvbnN0IExpc3QgPSBnby5MaXN0O1xuICBjb25zdCBHU2V0ID0gZ28uU2V0O1xuICBleHBvcnQgeyBHU2V0IGFzIFNldCB9O1xuICBjb25zdCBHTWFwID0gZ28uTWFwO1xuICBleHBvcnQgeyBHTWFwIGFzIE1hcCB9O1xuICBleHBvcnQgY29uc3QgUG9pbnQgPSBnby5Qb2ludDtcbiAgZXhwb3J0IGNvbnN0IFNpemUgPSBnby5TaXplO1xuICBleHBvcnQgY29uc3QgUmVjdCA9IGdvLlJlY3Q7XG4gIGV4cG9ydCBjb25zdCBNYXJnaW4gPSBnby5NYXJnaW47XG4gIGV4cG9ydCBjb25zdCBTcG90ID0gZ28uU3BvdDtcbiAgZXhwb3J0IGNvbnN0IEdlb21ldHJ5ID0gZ28uR2VvbWV0cnk7XG4gIGV4cG9ydCBjb25zdCBQYXRoRmlndXJlID0gZ28uUGF0aEZpZ3VyZTtcbiAgZXhwb3J0IGNvbnN0IFBhdGhTZWdtZW50ID0gZ28uUGF0aFNlZ21lbnQ7XG4gIGV4cG9ydCBjb25zdCBJbnB1dEV2ZW50ID0gZ28uSW5wdXRFdmVudDtcbiAgZXhwb3J0IGNvbnN0IERpYWdyYW1FdmVudCA9IGdvLkRpYWdyYW1FdmVudDtcbiAgZXhwb3J0IGNvbnN0IENoYW5nZWRFdmVudCA9IGdvLkNoYW5nZWRFdmVudDtcbiAgZXhwb3J0IGNvbnN0IE1vZGVsID0gZ28uTW9kZWw7XG4gIGV4cG9ydCBjb25zdCBHcmFwaExpbmtzTW9kZWwgPSBnby5HcmFwaExpbmtzTW9kZWw7XG4gIGV4cG9ydCBjb25zdCBUcmVlTW9kZWwgPSBnby5UcmVlTW9kZWw7XG4gIGV4cG9ydCBjb25zdCBCaW5kaW5nID0gZ28uQmluZGluZztcbiAgZXhwb3J0IGNvbnN0IFRoZW1lQmluZGluZyA9IGdvLlRoZW1lQmluZGluZztcbiAgZXhwb3J0IGNvbnN0IFRyYW5zYWN0aW9uID0gZ28uVHJhbnNhY3Rpb247XG4gIGV4cG9ydCBjb25zdCBVbmRvTWFuYWdlciA9IGdvLlVuZG9NYW5hZ2VyO1xuICBleHBvcnQgY29uc3QgQ29tbWFuZEhhbmRsZXIgPSBnby5Db21tYW5kSGFuZGxlcjtcbiAgZXhwb3J0IGNvbnN0IFRvb2wgPSBnby5Ub29sO1xuICBleHBvcnQgY29uc3QgRHJhZ2dpbmdUb29sID0gZ28uRHJhZ2dpbmdUb29sO1xuICBleHBvcnQgY29uc3QgRHJhZ2dpbmdJbmZvID0gZ28uRHJhZ2dpbmdJbmZvO1xuICBleHBvcnQgY29uc3QgRHJhZ2dpbmdPcHRpb25zID0gZ28uRHJhZ2dpbmdPcHRpb25zO1xuICBleHBvcnQgY29uc3QgTGlua2luZ0Jhc2VUb29sID0gZ28uTGlua2luZ0Jhc2VUb29sO1xuICBleHBvcnQgY29uc3QgTGlua2luZ1Rvb2wgPSBnby5MaW5raW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IFJlbGlua2luZ1Rvb2wgPSBnby5SZWxpbmtpbmdUb29sO1xuICBleHBvcnQgY29uc3QgTGlua1Jlc2hhcGluZ1Rvb2wgPSBnby5MaW5rUmVzaGFwaW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IFJlc2l6aW5nVG9vbCA9IGdvLlJlc2l6aW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IFJvdGF0aW5nVG9vbCA9IGdvLlJvdGF0aW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IENsaWNrU2VsZWN0aW5nVG9vbCA9IGdvLkNsaWNrU2VsZWN0aW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IEFjdGlvblRvb2wgPSBnby5BY3Rpb25Ub29sO1xuICBleHBvcnQgY29uc3QgQ2xpY2tDcmVhdGluZ1Rvb2wgPSBnby5DbGlja0NyZWF0aW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IEhUTUxJbmZvID0gZ28uSFRNTEluZm87XG4gIGV4cG9ydCBjb25zdCBDb250ZXh0TWVudVRvb2wgPSBnby5Db250ZXh0TWVudVRvb2w7XG4gIGV4cG9ydCBjb25zdCBEcmFnU2VsZWN0aW5nVG9vbCA9IGdvLkRyYWdTZWxlY3RpbmdUb29sO1xuICBleHBvcnQgY29uc3QgUGFubmluZ1Rvb2wgPSBnby5QYW5uaW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IFRleHRFZGl0aW5nVG9vbCA9IGdvLlRleHRFZGl0aW5nVG9vbDtcbiAgZXhwb3J0IGNvbnN0IFRvb2xNYW5hZ2VyID0gZ28uVG9vbE1hbmFnZXI7XG4gIGV4cG9ydCBjb25zdCBBbmltYXRpb24gPSBnby5BbmltYXRpb247XG4gIGV4cG9ydCBjb25zdCBBbmltYXRpb25NYW5hZ2VyID0gZ28uQW5pbWF0aW9uTWFuYWdlcjtcbiAgZXhwb3J0IGNvbnN0IEFuaW1hdGlvblRyaWdnZXIgPSBnby5BbmltYXRpb25UcmlnZ2VyO1xuICBleHBvcnQgY29uc3QgTGF5ZXIgPSBnby5MYXllcjtcbiAgZXhwb3J0IGNvbnN0IERpYWdyYW0gPSBnby5EaWFncmFtO1xuICBleHBvcnQgY29uc3QgUGFsZXR0ZSA9IGdvLlBhbGV0dGU7XG4gIGV4cG9ydCBjb25zdCBPdmVydmlldyA9IGdvLk92ZXJ2aWV3O1xuICBleHBvcnQgY29uc3QgQnJ1c2ggPSBnby5CcnVzaDtcbiAgZXhwb3J0IGNvbnN0IEdyYXBoT2JqZWN0ID0gZ28uR3JhcGhPYmplY3Q7XG4gIGV4cG9ydCBjb25zdCBQYW5lbCA9IGdvLlBhbmVsO1xuICBleHBvcnQgY29uc3QgUm93Q29sdW1uRGVmaW5pdGlvbiA9IGdvLlJvd0NvbHVtbkRlZmluaXRpb247XG4gIGV4cG9ydCBjb25zdCBTaGFwZSA9IGdvLlNoYXBlO1xuICBleHBvcnQgY29uc3QgVGV4dEJsb2NrID0gZ28uVGV4dEJsb2NrO1xuICBleHBvcnQgY29uc3QgUGljdHVyZSA9IGdvLlBpY3R1cmU7XG4gIGV4cG9ydCBjb25zdCBQYXJ0ID0gZ28uUGFydDtcbiAgZXhwb3J0IGNvbnN0IEFkb3JubWVudCA9IGdvLkFkb3JubWVudDtcbiAgZXhwb3J0IGNvbnN0IE5vZGUgPSBnby5Ob2RlO1xuICBleHBvcnQgY29uc3QgTGluayA9IGdvLkxpbms7XG4gIGV4cG9ydCBjb25zdCBQbGFjZWhvbGRlciA9IGdvLlBsYWNlaG9sZGVyO1xuICBleHBvcnQgY29uc3QgTGF5b3V0ID0gZ28uTGF5b3V0O1xuICBleHBvcnQgY29uc3QgTGF5b3V0TmV0d29yayA9IGdvLkxheW91dE5ldHdvcms7XG4gIGV4cG9ydCBjb25zdCBMYXlvdXRWZXJ0ZXggPSBnby5MYXlvdXRWZXJ0ZXg7XG4gIGV4cG9ydCBjb25zdCBMYXlvdXRFZGdlID0gZ28uTGF5b3V0RWRnZTtcbiAgZXhwb3J0IGNvbnN0IEdyaWRMYXlvdXQgPSBnby5HcmlkTGF5b3V0O1xuICBleHBvcnQgY29uc3QgUGFuZWxMYXlvdXQgPSBnby5QYW5lbExheW91dDtcbiAgZXhwb3J0IGNvbnN0IENpcmN1bGFyTGF5b3V0ID0gZ28uQ2lyY3VsYXJMYXlvdXQ7XG4gIGV4cG9ydCBjb25zdCBDaXJjdWxhck5ldHdvcmsgPSBnby5DaXJjdWxhck5ldHdvcms7XG4gIGV4cG9ydCBjb25zdCBDaXJjdWxhclZlcnRleCA9IGdvLkNpcmN1bGFyVmVydGV4O1xuICBleHBvcnQgY29uc3QgQ2lyY3VsYXJFZGdlID0gZ28uQ2lyY3VsYXJFZGdlO1xuICBleHBvcnQgY29uc3QgRm9yY2VEaXJlY3RlZExheW91dCA9IGdvLkZvcmNlRGlyZWN0ZWRMYXlvdXQ7XG4gIGV4cG9ydCBjb25zdCBGb3JjZURpcmVjdGVkTmV0d29yayA9IGdvLkZvcmNlRGlyZWN0ZWROZXR3b3JrO1xuICBleHBvcnQgY29uc3QgRm9yY2VEaXJlY3RlZFZlcnRleCA9IGdvLkZvcmNlRGlyZWN0ZWRWZXJ0ZXg7XG4gIGV4cG9ydCBjb25zdCBGb3JjZURpcmVjdGVkRWRnZSA9IGdvLkZvcmNlRGlyZWN0ZWRFZGdlO1xuICBleHBvcnQgY29uc3QgTGF5ZXJlZERpZ3JhcGhMYXlvdXQgPSBnby5MYXllcmVkRGlncmFwaExheW91dDtcbiAgZXhwb3J0IGNvbnN0IExheWVyZWREaWdyYXBoTmV0d29yayA9IGdvLkxheWVyZWREaWdyYXBoTmV0d29yaztcbiAgZXhwb3J0IGNvbnN0IExheWVyZWREaWdyYXBoVmVydGV4ID0gZ28uTGF5ZXJlZERpZ3JhcGhWZXJ0ZXg7XG4gIGV4cG9ydCBjb25zdCBMYXllcmVkRGlncmFwaEVkZ2UgPSBnby5MYXllcmVkRGlncmFwaEVkZ2U7XG4gIGV4cG9ydCBjb25zdCBUcmVlTGF5b3V0ID0gZ28uVHJlZUxheW91dDtcbiAgZXhwb3J0IGNvbnN0IFRyZWVOZXR3b3JrID0gZ28uVHJlZU5ldHdvcms7XG4gIGV4cG9ydCBjb25zdCBUcmVlVmVydGV4ID0gZ28uVHJlZVZlcnRleDtcbiAgZXhwb3J0IGNvbnN0IFRyZWVFZGdlID0gZ28uVHJlZUVkZ2U7XG4gIGV4cG9ydCBjb25zdCBUaGVtZXMgPSBnby5UaGVtZXM7XG4gIGV4cG9ydCBjb25zdCBUaGVtZU1hbmFnZXIgPSBnby5UaGVtZU1hbmFnZXI7XG4gIGV4cG9ydCBjb25zdCBSb3V0ZXIgPSBnby5Sb3V0ZXI7XG4gIGV4cG9ydCBjb25zdCB2ZXJzaW9uID0gZ28udmVyc2lvbjtcblxuICBleHBvcnQgY29uc3QgQW5pbWF0aW9uU3R5bGUgPSBnby5BbmltYXRpb25TdHlsZTtcbiAgZXhwb3J0IGNvbnN0IEF1dG9TY2FsZSA9IGdvLkF1dG9TY2FsZTtcbiAgZXhwb3J0IGNvbnN0IEN1cnZlID0gZ28uQ3VydmU7XG4gIGV4cG9ydCBjb25zdCBDeWNsZU1vZGUgPSBnby5DeWNsZU1vZGU7XG4gIGV4cG9ydCBjb25zdCBGbGlwID0gZ28uRmxpcDtcbiAgZXhwb3J0IGNvbnN0IEltYWdlU3RyZXRjaCA9IGdvLkltYWdlU3RyZXRjaDtcbiAgZXhwb3J0IGNvbnN0IExheW91dENvbmRpdGlvbnMgPSBnby5MYXlvdXRDb25kaXRpb25zO1xuICBleHBvcnQgY29uc3QgTGlua0FkanVzdGluZyA9IGdvLkxpbmtBZGp1c3Rpbmc7XG4gIGV4cG9ydCBjb25zdCBPcmllbnRhdGlvbiA9IGdvLk9yaWVudGF0aW9uO1xuICBleHBvcnQgY29uc3QgUG9ydFNwcmVhZGluZyA9IGdvLlBvcnRTcHJlYWRpbmc7XG4gIGV4cG9ydCBjb25zdCBSb3V0aW5nID0gZ28uUm91dGluZztcbiAgZXhwb3J0IGNvbnN0IFNjcm9sbE1vZGUgPSBnby5TY3JvbGxNb2RlO1xuICBleHBvcnQgY29uc3QgQ29sbGFwc2VQb2xpY3kgPSBnby5Db2xsYXBzZVBvbGljeTtcbiAgZXhwb3J0IGNvbnN0IFNpemluZyA9IGdvLlNpemluZztcbiAgZXhwb3J0IGNvbnN0IFRyaWdnZXJTdGFydCA9IGdvLlRyaWdnZXJTdGFydDtcbiAgZXhwb3J0IGNvbnN0IFN0cmV0Y2ggPSBnby5TdHJldGNoO1xuICBleHBvcnQgY29uc3QgVGV4dEZvcm1hdCA9IGdvLlRleHRGb3JtYXQ7XG4gIGV4cG9ydCBjb25zdCBUZXh0T3ZlcmZsb3cgPSBnby5UZXh0T3ZlcmZsb3c7XG4gIGV4cG9ydCBjb25zdCBWaWV3Ym94U3RyZXRjaCA9IGdvLlZpZXdib3hTdHJldGNoO1xuICBleHBvcnQgY29uc3QgV3JhcCA9IGdvLldyYXA7XG4gIGV4cG9ydCBjb25zdCBCcnVzaFR5cGUgPSBnby5CcnVzaFR5cGU7XG4gIGV4cG9ydCBjb25zdCBDb2xvclNwYWNlID0gZ28uQ29sb3JTcGFjZTtcbiAgZXhwb3J0IGNvbnN0IEdlb21ldHJ5U3RyZXRjaCA9IGdvLkdlb21ldHJ5U3RyZXRjaDtcbiAgZXhwb3J0IGNvbnN0IEdlb21ldHJ5VHlwZSA9IGdvLkdlb21ldHJ5VHlwZTtcbiAgZXhwb3J0IGNvbnN0IFNlZ21lbnRUeXBlID0gZ28uU2VnbWVudFR5cGU7XG4gIGV4cG9ydCBjb25zdCBCaW5kaW5nTW9kZSA9IGdvLkJpbmRpbmdNb2RlO1xuICBleHBvcnQgY29uc3QgQ2hhbmdlVHlwZSA9IGdvLkNoYW5nZVR5cGU7XG4gIGV4cG9ydCBjb25zdCBDaXJjdWxhckFycmFuZ2VtZW50ID0gZ28uQ2lyY3VsYXJBcnJhbmdlbWVudDtcbiAgZXhwb3J0IGNvbnN0IENpcmN1bGFyRGlyZWN0aW9uID0gZ28uQ2lyY3VsYXJEaXJlY3Rpb247XG4gIGV4cG9ydCBjb25zdCBDaXJjdWxhck5vZGVEaWFtZXRlckZvcm11bGEgPSBnby5DaXJjdWxhck5vZGVEaWFtZXRlckZvcm11bGE7XG4gIGV4cG9ydCBjb25zdCBDaXJjdWxhclNvcnRpbmcgPSBnby5DaXJjdWxhclNvcnRpbmc7XG4gIGV4cG9ydCBjb25zdCBHcmlkQWxpZ25tZW50ID0gZ28uR3JpZEFsaWdubWVudDtcbiAgZXhwb3J0IGNvbnN0IEdyaWRBcnJhbmdlbWVudCA9IGdvLkdyaWRBcnJhbmdlbWVudDtcbiAgZXhwb3J0IGNvbnN0IEdyaWRTb3J0aW5nID0gZ28uR3JpZFNvcnRpbmc7XG4gIGV4cG9ydCBjb25zdCBMYXllcmVkRGlncmFwaEFnZ3Jlc3NpdmUgPSBnby5MYXllcmVkRGlncmFwaEFnZ3Jlc3NpdmU7XG4gIGV4cG9ydCBjb25zdCBMYXllcmVkRGlncmFwaEFsaWduID0gZ28uTGF5ZXJlZERpZ3JhcGhBbGlnbjtcbiAgZXhwb3J0IGNvbnN0IExheWVyZWREaWdyYXBoQ3ljbGVSZW1vdmUgPSBnby5MYXllcmVkRGlncmFwaEN5Y2xlUmVtb3ZlO1xuICBleHBvcnQgY29uc3QgTGF5ZXJlZERpZ3JhcGhJbml0ID0gZ28uTGF5ZXJlZERpZ3JhcGhJbml0O1xuICBleHBvcnQgY29uc3QgTGF5ZXJlZERpZ3JhcGhMYXllcmluZyA9IGdvLkxheWVyZWREaWdyYXBoTGF5ZXJpbmc7XG4gIGV4cG9ydCBjb25zdCBMYXllcmVkRGlncmFwaFBhY2sgPSBnby5MYXllcmVkRGlncmFwaFBhY2s7XG4gIGV4cG9ydCBjb25zdCBUcmVlQWxpZ25tZW50ID0gZ28uVHJlZUFsaWdubWVudDtcbiAgZXhwb3J0IGNvbnN0IFRyZWVBcnJhbmdlbWVudCA9IGdvLlRyZWVBcnJhbmdlbWVudDtcbiAgZXhwb3J0IGNvbnN0IFRyZWVDb21wYWN0aW9uID0gZ28uVHJlZUNvbXBhY3Rpb247XG4gIGV4cG9ydCBjb25zdCBUcmVlTGF5ZXJTdHlsZSA9IGdvLlRyZWVMYXllclN0eWxlO1xuICBleHBvcnQgY29uc3QgVHJlZVBhdGggPSBnby5UcmVlUGF0aDtcbiAgZXhwb3J0IGNvbnN0IFRyZWVTb3J0aW5nID0gZ28uVHJlZVNvcnRpbmc7XG4gIGV4cG9ydCBjb25zdCBUcmVlU3R5bGUgPSBnby5UcmVlU3R5bGU7XG4gIGV4cG9ydCBjb25zdCBHZXN0dXJlTW9kZSA9IGdvLkdlc3R1cmVNb2RlO1xuICBleHBvcnQgY29uc3QgTGlua2luZ0RpcmVjdGlvbiA9IGdvLkxpbmtpbmdEaXJlY3Rpb247XG4gIGV4cG9ydCBjb25zdCBSZXNoYXBpbmdCZWhhdmlvciA9IGdvLlJlc2hhcGluZ0JlaGF2aW9yO1xuICBleHBvcnQgY29uc3QgVGV4dEVkaXRpbmdBY2NlcHQgPSBnby5UZXh0RWRpdGluZ0FjY2VwdDtcbiAgZXhwb3J0IGNvbnN0IFRleHRFZGl0aW5nU3RhcnRpbmcgPSBnby5UZXh0RWRpdGluZ1N0YXJ0aW5nO1xuICBleHBvcnQgY29uc3QgVGV4dEVkaXRpbmdTdGF0ZSA9IGdvLlRleHRFZGl0aW5nU3RhdGU7XG4gIGV4cG9ydCBjb25zdCBXaGVlbE1vZGUgPSBnby5XaGVlbE1vZGU7XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/gojs/release/go-debug.mjs\n");

/***/ })

};
;